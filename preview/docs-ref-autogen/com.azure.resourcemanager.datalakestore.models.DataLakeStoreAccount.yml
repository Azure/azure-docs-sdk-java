### YamlMime:JavaType
uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount"
fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount"
name: "DataLakeStoreAccount"
nameWithType: "DataLakeStoreAccount"
summary: "An immutable client-side representation of Data<wbr>Lake<wbr>Store<wbr>Account."
syntax: "public interface DataLakeStoreAccount"
methods:
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.accountId()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.accountId()"
  name: "accountId()"
  nameWithType: "DataLakeStoreAccount.accountId()"
  summary: "Gets the account<wbr>Id property: The unique identifier associated with this Data Lake Store account."
  modifiers:
  - "abstract"
  syntax: "public abstract UUID accountId()"
  desc: "Gets the accountId property: The unique identifier associated with this Data Lake Store account."
  returns:
    description: "the accountId value."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.creationTime()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.creationTime()"
  name: "creationTime()"
  nameWithType: "DataLakeStoreAccount.creationTime()"
  summary: "Gets the creation<wbr>Time property: The account creation time."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime creationTime()"
  desc: "Gets the creationTime property: The account creation time."
  returns:
    description: "the creationTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.currentTier()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.currentTier()"
  name: "currentTier()"
  nameWithType: "DataLakeStoreAccount.currentTier()"
  summary: "Gets the current<wbr>Tier property: The commitment tier in use for the current month."
  modifiers:
  - "abstract"
  syntax: "public abstract TierType currentTier()"
  desc: "Gets the currentTier property: The commitment tier in use for the current month."
  returns:
    description: "the currentTier value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TierType?alt=com.azure.resourcemanager.datalakestore.models.TierType&text=TierType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.defaultGroup()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.defaultGroup()"
  name: "defaultGroup()"
  nameWithType: "DataLakeStoreAccount.defaultGroup()"
  summary: "Gets the default<wbr>Group property: The default owner group for all new folders and files created in the Data Lake Store account."
  modifiers:
  - "abstract"
  syntax: "public abstract String defaultGroup()"
  desc: "Gets the defaultGroup property: The default owner group for all new folders and files created in the Data Lake Store account."
  returns:
    description: "the defaultGroup value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.enableKeyVault()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.enableKeyVault()"
  name: "enableKeyVault()"
  nameWithType: "DataLakeStoreAccount.enableKeyVault()"
  summary: "Attempts to enable a user managed Key Vault for encryption of the specified Data Lake Store account."
  modifiers:
  - "abstract"
  syntax: "public abstract void enableKeyVault()"
  desc: "Attempts to enable a user managed Key Vault for encryption of the specified Data Lake Store account."
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.enableKeyVaultWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.enableKeyVaultWithResponse(Context context)"
  name: "enableKeyVaultWithResponse(Context context)"
  nameWithType: "DataLakeStoreAccount.enableKeyVaultWithResponse(Context context)"
  summary: "Attempts to enable a user managed Key Vault for encryption of the specified Data Lake Store account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> enableKeyVaultWithResponse(Context context)"
  desc: "Attempts to enable a user managed Key Vault for encryption of the specified Data Lake Store account."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.encryptionConfig()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.encryptionConfig()"
  name: "encryptionConfig()"
  nameWithType: "DataLakeStoreAccount.encryptionConfig()"
  summary: "Gets the encryption<wbr>Config property: The Key Vault encryption configuration."
  modifiers:
  - "abstract"
  syntax: "public abstract EncryptionConfig encryptionConfig()"
  desc: "Gets the encryptionConfig property: The Key Vault encryption configuration."
  returns:
    description: "the encryptionConfig value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.EncryptionConfig&text=EncryptionConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.encryptionProvisioningState()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.encryptionProvisioningState()"
  name: "encryptionProvisioningState()"
  nameWithType: "DataLakeStoreAccount.encryptionProvisioningState()"
  summary: "Gets the encryption<wbr>Provisioning<wbr>State property: The current state of encryption provisioning for this Data Lake Store account."
  modifiers:
  - "abstract"
  syntax: "public abstract EncryptionProvisioningState encryptionProvisioningState()"
  desc: "Gets the encryptionProvisioningState property: The current state of encryption provisioning for this Data Lake Store account."
  returns:
    description: "the encryptionProvisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionProvisioningState?alt=com.azure.resourcemanager.datalakestore.models.EncryptionProvisioningState&text=EncryptionProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.encryptionState()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.encryptionState()"
  name: "encryptionState()"
  nameWithType: "DataLakeStoreAccount.encryptionState()"
  summary: "Gets the encryption<wbr>State property: The current state of encryption for this Data Lake Store account."
  modifiers:
  - "abstract"
  syntax: "public abstract EncryptionState encryptionState()"
  desc: "Gets the encryptionState property: The current state of encryption for this Data Lake Store account."
  returns:
    description: "the encryptionState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionState?alt=com.azure.resourcemanager.datalakestore.models.EncryptionState&text=EncryptionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.endpoint()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.endpoint()"
  name: "endpoint()"
  nameWithType: "DataLakeStoreAccount.endpoint()"
  summary: "Gets the endpoint property: The full CName endpoint for this account."
  modifiers:
  - "abstract"
  syntax: "public abstract String endpoint()"
  desc: "Gets the endpoint property: The full CName endpoint for this account."
  returns:
    description: "the endpoint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.firewallAllowAzureIps()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.firewallAllowAzureIps()"
  name: "firewallAllowAzureIps()"
  nameWithType: "DataLakeStoreAccount.firewallAllowAzureIps()"
  summary: "Gets the firewall<wbr>Allow<wbr>Azure<wbr>Ips property: The current state of allowing or disallowing IPs originating within Azure through the firewall."
  modifiers:
  - "abstract"
  syntax: "public abstract FirewallAllowAzureIpsState firewallAllowAzureIps()"
  desc: "Gets the firewallAllowAzureIps property: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced."
  returns:
    description: "the firewallAllowAzureIps value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState?alt=com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState&text=FirewallAllowAzureIpsState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.firewallRules()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.firewallRules()"
  name: "firewallRules()"
  nameWithType: "DataLakeStoreAccount.firewallRules()"
  summary: "Gets the firewall<wbr>Rules property: The list of firewall rules associated with this Data Lake Store account."
  modifiers:
  - "abstract"
  syntax: "public abstract List<FirewallRule> firewallRules()"
  desc: "Gets the firewallRules property: The list of firewall rules associated with this Data Lake Store account."
  returns:
    description: "the firewallRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallRule?alt=com.azure.resourcemanager.datalakestore.models.FirewallRule&text=FirewallRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.firewallState()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.firewallState()"
  name: "firewallState()"
  nameWithType: "DataLakeStoreAccount.firewallState()"
  summary: "Gets the firewall<wbr>State property: The current state of the IP address firewall for this Data Lake Store account."
  modifiers:
  - "abstract"
  syntax: "public abstract FirewallState firewallState()"
  desc: "Gets the firewallState property: The current state of the IP address firewall for this Data Lake Store account."
  returns:
    description: "the firewallState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallState?alt=com.azure.resourcemanager.datalakestore.models.FirewallState&text=FirewallState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.id()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.id()"
  name: "id()"
  nameWithType: "DataLakeStoreAccount.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.identity()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.identity()"
  name: "identity()"
  nameWithType: "DataLakeStoreAccount.identity()"
  summary: "Gets the identity property: The Key Vault encryption identity, if any."
  modifiers:
  - "abstract"
  syntax: "public abstract EncryptionIdentity identity()"
  desc: "Gets the identity property: The Key Vault encryption identity, if any."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionIdentity?alt=com.azure.resourcemanager.datalakestore.models.EncryptionIdentity&text=EncryptionIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.innerModel()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.innerModel()"
  name: "innerModel()"
  nameWithType: "DataLakeStoreAccount.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>datalakestore.<wbr>fluent.<wbr>models.<wbr>Data<wbr>Lake<wbr>Store<wbr>Account<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract DataLakeStoreAccountInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner?alt=com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner&text=DataLakeStoreAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.lastModifiedTime()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.lastModifiedTime()"
  name: "lastModifiedTime()"
  nameWithType: "DataLakeStoreAccount.lastModifiedTime()"
  summary: "Gets the last<wbr>Modified<wbr>Time property: The account last modified time."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime lastModifiedTime()"
  desc: "Gets the lastModifiedTime property: The account last modified time."
  returns:
    description: "the lastModifiedTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.location()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.location()"
  name: "location()"
  nameWithType: "DataLakeStoreAccount.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  desc: "Gets the location property: The geo-location where the resource lives."
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.name()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.name()"
  name: "name()"
  nameWithType: "DataLakeStoreAccount.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.newTier()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.newTier()"
  name: "newTier()"
  nameWithType: "DataLakeStoreAccount.newTier()"
  summary: "Gets the new<wbr>Tier property: The commitment tier to use for next month."
  modifiers:
  - "abstract"
  syntax: "public abstract TierType newTier()"
  desc: "Gets the newTier property: The commitment tier to use for next month."
  returns:
    description: "the newTier value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TierType?alt=com.azure.resourcemanager.datalakestore.models.TierType&text=TierType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.provisioningState()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.provisioningState()"
  name: "provisioningState()"
  nameWithType: "DataLakeStoreAccount.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: The provisioning status of the Data Lake Store account."
  modifiers:
  - "abstract"
  syntax: "public abstract DataLakeStoreAccountStatus provisioningState()"
  desc: "Gets the provisioningState property: The provisioning status of the Data Lake Store account."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccountStatus?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccountStatus&text=DataLakeStoreAccountStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.refresh()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.refresh()"
  name: "refresh()"
  nameWithType: "DataLakeStoreAccount.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract DataLakeStoreAccount refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount&text=DataLakeStoreAccount\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "DataLakeStoreAccount.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DataLakeStoreAccount refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount&text=DataLakeStoreAccount\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.region()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.region()"
  name: "region()"
  nameWithType: "DataLakeStoreAccount.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  desc: "Gets the region of the resource."
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.regionName()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.regionName()"
  name: "regionName()"
  nameWithType: "DataLakeStoreAccount.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  desc: "Gets the name of the resource region."
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.state()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.state()"
  name: "state()"
  nameWithType: "DataLakeStoreAccount.state()"
  summary: "Gets the state property: The state of the Data Lake Store account."
  modifiers:
  - "abstract"
  syntax: "public abstract DataLakeStoreAccountState state()"
  desc: "Gets the state property: The state of the Data Lake Store account."
  returns:
    description: "the state value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccountState?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccountState&text=DataLakeStoreAccountState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.tags()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.tags()"
  name: "tags()"
  nameWithType: "DataLakeStoreAccount.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  desc: "Gets the tags property: Resource tags."
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.trustedIdProviderState()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.trustedIdProviderState()"
  name: "trustedIdProviderState()"
  nameWithType: "DataLakeStoreAccount.trustedIdProviderState()"
  summary: "Gets the trusted<wbr>IdProvider<wbr>State property: The current state of the trusted identity provider feature for this Data Lake Store account."
  modifiers:
  - "abstract"
  syntax: "public abstract TrustedIdProviderState trustedIdProviderState()"
  desc: "Gets the trustedIdProviderState property: The current state of the trusted identity provider feature for this Data Lake Store account."
  returns:
    description: "the trustedIdProviderState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState?alt=com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState&text=TrustedIdProviderState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.trustedIdProviders()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.trustedIdProviders()"
  name: "trustedIdProviders()"
  nameWithType: "DataLakeStoreAccount.trustedIdProviders()"
  summary: "Gets the trusted<wbr>IdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  modifiers:
  - "abstract"
  syntax: "public abstract List<TrustedIdProvider> trustedIdProviders()"
  desc: "Gets the trustedIdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  returns:
    description: "the trustedIdProviders value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.TrustedIdProvider?alt=com.azure.resourcemanager.datalakestore.models.TrustedIdProvider&text=TrustedIdProvider\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.type()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.type()"
  name: "type()"
  nameWithType: "DataLakeStoreAccount.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.update()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.update()"
  name: "update()"
  nameWithType: "DataLakeStoreAccount.update()"
  summary: "Begins update for the Data<wbr>Lake<wbr>Store<wbr>Account resource."
  modifiers:
  - "abstract"
  syntax: "public abstract DataLakeStoreAccount.Update update()"
  desc: "Begins update for the DataLakeStoreAccount resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.Update?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.virtualNetworkRules()"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.virtualNetworkRules()"
  name: "virtualNetworkRules()"
  nameWithType: "DataLakeStoreAccount.virtualNetworkRules()"
  summary: "Gets the virtual<wbr>Network<wbr>Rules property: The list of virtual network rules associated with this Data Lake Store account."
  modifiers:
  - "abstract"
  syntax: "public abstract List<VirtualNetworkRule> virtualNetworkRules()"
  desc: "Gets the virtualNetworkRules property: The list of virtual network rules associated with this Data Lake Store account."
  returns:
    description: "the virtualNetworkRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.VirtualNetworkRule?alt=com.azure.resourcemanager.datalakestore.models.VirtualNetworkRule&text=VirtualNetworkRule\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An immutable client-side representation of DataLakeStoreAccount."
metadata: {}
package: "com.azure.resourcemanager.datalakestore.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datalakestore:1.0.0-beta.1
