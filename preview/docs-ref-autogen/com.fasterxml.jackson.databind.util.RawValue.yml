### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.util.RawValue
  id: RawValue
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util
  children:
  - com.fasterxml.jackson.databind.util.RawValue.RawValue(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.databind.util.RawValue.RawValue(com.fasterxml.jackson.databind.JsonSerializable)
  - com.fasterxml.jackson.databind.util.RawValue.RawValue(java.lang.Object,boolean)
  - com.fasterxml.jackson.databind.util.RawValue.RawValue(java.lang.String)
  - com.fasterxml.jackson.databind.util.RawValue._serialize(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.databind.util.RawValue._value
  - com.fasterxml.jackson.databind.util.RawValue.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.util.RawValue.hashCode()
  - com.fasterxml.jackson.databind.util.RawValue.rawValue()
  - com.fasterxml.jackson.databind.util.RawValue.serialize(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.databind.util.RawValue.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.util.RawValue.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.util.RawValue.toString()
  langs:
  - java
  name: RawValue
  nameWithType: RawValue
  fullName: com.fasterxml.jackson.databind.util.RawValue
  type: Class
  package: com.fasterxml.jackson.databind.util
  summary: Helper class used to encapsulate "raw values", pre-encoded textual content that can be output as opaque value with no quoting/escaping, using <xref uid="com.fasterxml.jackson.core.JsonGenerator.writeRawValue(java.lang.String)" data-throw-if-not-resolved="false">com.fasterxml.jackson.core.JsonGenerator#writeRawValue(String)</xref>. It may be stored in <xref uid="com.fasterxml.jackson.databind.util.TokenBuffer" data-throw-if-not-resolved="false">TokenBuffer</xref>, as well as in Tree Model (<xref uid="com.fasterxml.jackson.databind.JsonNode" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.JsonNode</xref>)
  syntax:
    content: public class RawValue implements JsonSerializable
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.databind.JsonSerializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.util.RawValue.RawValue(com.fasterxml.jackson.core.SerializableString)
  id: RawValue(com.fasterxml.jackson.core.SerializableString)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.RawValue
  langs:
  - java
  name: RawValue(SerializableString v)
  nameWithType: RawValue.RawValue(SerializableString v)
  fullName: com.fasterxml.jackson.databind.util.RawValue.RawValue(SerializableString v)
  overload: com.fasterxml.jackson.databind.util.RawValue.RawValue*
  type: Constructor
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public RawValue(SerializableString v)
    parameters:
    - id: v
      type: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.databind.util.RawValue.RawValue(com.fasterxml.jackson.databind.JsonSerializable)
  id: RawValue(com.fasterxml.jackson.databind.JsonSerializable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.RawValue
  langs:
  - java
  name: RawValue(JsonSerializable v)
  nameWithType: RawValue.RawValue(JsonSerializable v)
  fullName: com.fasterxml.jackson.databind.util.RawValue.RawValue(JsonSerializable v)
  overload: com.fasterxml.jackson.databind.util.RawValue.RawValue*
  type: Constructor
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public RawValue(JsonSerializable v)
    parameters:
    - id: v
      type: com.fasterxml.jackson.databind.JsonSerializable
- uid: com.fasterxml.jackson.databind.util.RawValue.RawValue(java.lang.Object,boolean)
  id: RawValue(java.lang.Object,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.RawValue
  langs:
  - java
  name: RawValue(Object value, boolean bogus)
  nameWithType: RawValue.RawValue(Object value, boolean bogus)
  fullName: com.fasterxml.jackson.databind.util.RawValue.RawValue(Object value, boolean bogus)
  overload: com.fasterxml.jackson.databind.util.RawValue.RawValue*
  type: Constructor
  package: com.fasterxml.jackson.databind.util
  summary: Constructor that may be used by sub-classes, and allows passing value types other than ones for which explicit constructor exists. Caller has to take care that values of types not supported by base implementation are handled properly, usually by overriding some of existing serialization methods.
  syntax:
    content: protected RawValue(Object value, boolean bogus)
    parameters:
    - id: value
      type: java.lang.Object
    - id: bogus
      type: boolean
- uid: com.fasterxml.jackson.databind.util.RawValue.RawValue(java.lang.String)
  id: RawValue(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.RawValue
  langs:
  - java
  name: RawValue(String v)
  nameWithType: RawValue.RawValue(String v)
  fullName: com.fasterxml.jackson.databind.util.RawValue.RawValue(String v)
  overload: com.fasterxml.jackson.databind.util.RawValue.RawValue*
  type: Constructor
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public RawValue(String v)
    parameters:
    - id: v
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.RawValue._serialize(com.fasterxml.jackson.core.JsonGenerator)
  id: _serialize(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.RawValue
  langs:
  - java
  name: _serialize(JsonGenerator gen)
  nameWithType: RawValue._serialize(JsonGenerator gen)
  fullName: com.fasterxml.jackson.databind.util.RawValue._serialize(JsonGenerator gen)
  overload: com.fasterxml.jackson.databind.util.RawValue._serialize*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected void _serialize(JsonGenerator gen)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.util.RawValue._value
  id: _value
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.RawValue
  langs:
  - java
  name: _value
  nameWithType: RawValue._value
  fullName: com.fasterxml.jackson.databind.util.RawValue._value
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: 'Contents to serialize. Untyped because there are multiple types that are supported: <xref uid="java.lang.String" data-throw-if-not-resolved="false">java.lang.String</xref>, <xref uid="com.fasterxml.jackson.databind.JsonSerializable" data-throw-if-not-resolved="false">JsonSerializable</xref>, <xref uid="com.fasterxml.jackson.core.SerializableString" data-throw-if-not-resolved="false">SerializableString</xref>.'
  syntax:
    content: protected Object _value
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.util.RawValue.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.RawValue
  langs:
  - java
  name: equals(Object o)
  nameWithType: RawValue.equals(Object o)
  fullName: com.fasterxml.jackson.databind.util.RawValue.equals(Object o)
  overload: com.fasterxml.jackson.databind.util.RawValue.equals*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.RawValue.hashCode()
  id: hashCode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.RawValue
  langs:
  - java
  name: hashCode()
  nameWithType: RawValue.hashCode()
  fullName: com.fasterxml.jackson.databind.util.RawValue.hashCode()
  overload: com.fasterxml.jackson.databind.util.RawValue.hashCode*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.util.RawValue.rawValue()
  id: rawValue()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.RawValue
  langs:
  - java
  name: rawValue()
  nameWithType: RawValue.rawValue()
  fullName: com.fasterxml.jackson.databind.util.RawValue.rawValue()
  overload: com.fasterxml.jackson.databind.util.RawValue.rawValue*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Accessor for returning enclosed raw value in whatever form it was created in (usually <xref uid="java.lang.String" data-throw-if-not-resolved="false">java.lang.String</xref>, \{link SerializableString\}, or any <xref uid="com.fasterxml.jackson.databind.JsonSerializable" data-throw-if-not-resolved="false">JsonSerializable</xref>).
  syntax:
    content: public Object rawValue()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.util.RawValue.serialize(com.fasterxml.jackson.core.JsonGenerator)
  id: serialize(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.RawValue
  langs:
  - java
  name: serialize(JsonGenerator gen)
  nameWithType: RawValue.serialize(JsonGenerator gen)
  fullName: com.fasterxml.jackson.databind.util.RawValue.serialize(JsonGenerator gen)
  overload: com.fasterxml.jackson.databind.util.RawValue.serialize*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public void serialize(JsonGenerator gen)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.util.RawValue.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.RawValue
  langs:
  - java
  name: serialize(JsonGenerator gen, SerializerProvider serializers)
  nameWithType: RawValue.serialize(JsonGenerator gen, SerializerProvider serializers)
  fullName: com.fasterxml.jackson.databind.util.RawValue.serialize(JsonGenerator gen, SerializerProvider serializers)
  overload: com.fasterxml.jackson.databind.util.RawValue.serialize*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Serialization method called when no additional type information is to be included in serialization.
  syntax:
    content: public void serialize(JsonGenerator gen, SerializerProvider serializers)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: serializers
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.util.RawValue.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  id: serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.RawValue
  langs:
  - java
  name: serializeWithType(JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer)
  nameWithType: RawValue.serializeWithType(JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer)
  fullName: com.fasterxml.jackson.databind.util.RawValue.serializeWithType(JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer)
  overload: com.fasterxml.jackson.databind.util.RawValue.serializeWithType*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: >-
    Serialization method called when additional type information is expected to be included in serialization, for deserialization to use.


    Usually implementation consists of a call to <xref uid="com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefix*" data-throw-if-not-resolved="false">TypeSerializer#writeTypePrefix</xref> followed by serialization of contents, followed by a call to <xref uid="com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffix*" data-throw-if-not-resolved="false">TypeSerializer#writeTypeSuffix</xref>). Details of the type id argument to pass depend on shape of JSON Object used (Array, Object or scalar like String/Number/Boolean).


    Note that some types (most notably, "natural" types: String, Integer, Double and Boolean) never include type information.
  syntax:
    content: public void serializeWithType(JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: serializers
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.util.RawValue.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.RawValue
  langs:
  - java
  name: toString()
  nameWithType: RawValue.toString()
  fullName: com.fasterxml.jackson.databind.util.RawValue.toString()
  overload: com.fasterxml.jackson.databind.util.RawValue.toString*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.util.RawValue.RawValue*
  name: RawValue
  nameWithType: RawValue.RawValue
  fullName: com.fasterxml.jackson.databind.util.RawValue.RawValue
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.core.SerializableString
  name: SerializableString
  nameWithType: SerializableString
  fullName: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.databind.JsonSerializable
  name: JsonSerializable
  nameWithType: JsonSerializable
  fullName: com.fasterxml.jackson.databind.JsonSerializable
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.util.RawValue.rawValue*
  name: rawValue
  nameWithType: RawValue.rawValue
  fullName: com.fasterxml.jackson.databind.util.RawValue.rawValue
  package: com.fasterxml.jackson.databind.util
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.util.RawValue.serialize*
  name: serialize
  nameWithType: RawValue.serialize
  fullName: com.fasterxml.jackson.databind.util.RawValue.serialize
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.util.RawValue.serializeWithType*
  name: serializeWithType
  nameWithType: RawValue.serializeWithType
  fullName: com.fasterxml.jackson.databind.util.RawValue.serializeWithType
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.RawValue._serialize*
  name: _serialize
  nameWithType: RawValue._serialize
  fullName: com.fasterxml.jackson.databind.util.RawValue._serialize
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.RawValue.equals*
  name: equals
  nameWithType: RawValue.equals
  fullName: com.fasterxml.jackson.databind.util.RawValue.equals
  package: com.fasterxml.jackson.databind.util
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.util.RawValue.hashCode*
  name: hashCode
  nameWithType: RawValue.hashCode
  fullName: com.fasterxml.jackson.databind.util.RawValue.hashCode
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.RawValue.toString*
  name: toString
  nameWithType: RawValue.toString
  fullName: com.fasterxml.jackson.databind.util.RawValue.toString
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
