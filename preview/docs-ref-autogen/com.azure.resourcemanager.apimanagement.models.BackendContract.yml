### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.models.BackendContract"
fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract"
name: "BackendContract"
nameWithType: "BackendContract"
summary: "An immutable client-side representation of Backend<wbr>Contract."
syntax: "public interface BackendContract"
methods:
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.credentials()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.credentials()"
  name: "credentials()"
  nameWithType: "BackendContract.credentials()"
  summary: "Gets the credentials property: Backend Credentials Contract Properties."
  modifiers:
  - "abstract"
  syntax: "public abstract BackendCredentialsContract credentials()"
  desc: "Gets the credentials property: Backend Credentials Contract Properties."
  returns:
    description: "the credentials value."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendCredentialsContract?alt=com.azure.resourcemanager.apimanagement.models.BackendCredentialsContract&text=BackendCredentialsContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.description()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.description()"
  name: "description()"
  nameWithType: "BackendContract.description()"
  summary: "Gets the description property: Backend Description."
  modifiers:
  - "abstract"
  syntax: "public abstract String description()"
  desc: "Gets the description property: Backend Description."
  returns:
    description: "the description value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.id()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.id()"
  name: "id()"
  nameWithType: "BackendContract.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.innerModel()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.innerModel()"
  name: "innerModel()"
  nameWithType: "BackendContract.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>apimanagement.<wbr>fluent.<wbr>models.<wbr>Backend<wbr>Contract<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract BackendContractInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.BackendContractInner&text=BackendContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.name()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.name()"
  name: "name()"
  nameWithType: "BackendContract.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.properties()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.properties()"
  name: "properties()"
  nameWithType: "BackendContract.properties()"
  summary: "Gets the properties property: Backend Properties contract."
  modifiers:
  - "abstract"
  syntax: "public abstract BackendProperties properties()"
  desc: "Gets the properties property: Backend Properties contract."
  returns:
    description: "the properties value."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendProperties?alt=com.azure.resourcemanager.apimanagement.models.BackendProperties&text=BackendProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.protocol()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.protocol()"
  name: "protocol()"
  nameWithType: "BackendContract.protocol()"
  summary: "Gets the protocol property: Backend communication protocol."
  modifiers:
  - "abstract"
  syntax: "public abstract BackendProtocol protocol()"
  desc: "Gets the protocol property: Backend communication protocol."
  returns:
    description: "the protocol value."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendProtocol?alt=com.azure.resourcemanager.apimanagement.models.BackendProtocol&text=BackendProtocol\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.proxy()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.proxy()"
  name: "proxy()"
  nameWithType: "BackendContract.proxy()"
  summary: "Gets the proxy property: Backend Proxy Contract Properties."
  modifiers:
  - "abstract"
  syntax: "public abstract BackendProxyContract proxy()"
  desc: "Gets the proxy property: Backend Proxy Contract Properties."
  returns:
    description: "the proxy value."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendProxyContract?alt=com.azure.resourcemanager.apimanagement.models.BackendProxyContract&text=BackendProxyContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.reconnect()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.reconnect()"
  name: "reconnect()"
  nameWithType: "BackendContract.reconnect()"
  summary: "Notifies the APIM proxy to create a new connection to the backend after the specified timeout."
  modifiers:
  - "abstract"
  syntax: "public abstract void reconnect()"
  desc: "Notifies the APIM proxy to create a new connection to the backend after the specified timeout. If no timeout was specified, timeout of 2 minutes is used."
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.reconnectWithResponse(com.azure.resourcemanager.apimanagement.models.BackendReconnectContract,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.reconnectWithResponse(BackendReconnectContract parameters, Context context)"
  name: "reconnectWithResponse(BackendReconnectContract parameters, Context context)"
  nameWithType: "BackendContract.reconnectWithResponse(BackendReconnectContract parameters, Context context)"
  summary: "Notifies the APIM proxy to create a new connection to the backend after the specified timeout."
  modifiers:
  - "abstract"
  parameters:
  - description: "Reconnect request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendReconnectContract?alt=com.azure.resourcemanager.apimanagement.models.BackendReconnectContract&text=BackendReconnectContract\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> reconnectWithResponse(BackendReconnectContract parameters, Context context)"
  desc: "Notifies the APIM proxy to create a new connection to the backend after the specified timeout. If no timeout was specified, timeout of 2 minutes is used."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.refresh()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.refresh()"
  name: "refresh()"
  nameWithType: "BackendContract.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract BackendContract refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendContract?alt=com.azure.resourcemanager.apimanagement.models.BackendContract&text=BackendContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "BackendContract.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BackendContract refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendContract?alt=com.azure.resourcemanager.apimanagement.models.BackendContract&text=BackendContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.resourceId()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.resourceId()"
  name: "resourceId()"
  nameWithType: "BackendContract.resourceId()"
  summary: "Gets the resource<wbr>Id property: Management Uri of the Resource in External System."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceId()"
  desc: "Gets the resourceId property: Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or API Apps."
  returns:
    description: "the resourceId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.title()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.title()"
  name: "title()"
  nameWithType: "BackendContract.title()"
  summary: "Gets the title property: Backend Title."
  modifiers:
  - "abstract"
  syntax: "public abstract String title()"
  desc: "Gets the title property: Backend Title."
  returns:
    description: "the title value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.tls()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.tls()"
  name: "tls()"
  nameWithType: "BackendContract.tls()"
  summary: "Gets the tls property: Backend TLS Properties."
  modifiers:
  - "abstract"
  syntax: "public abstract BackendTlsProperties tls()"
  desc: "Gets the tls property: Backend TLS Properties."
  returns:
    description: "the tls value."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendTlsProperties?alt=com.azure.resourcemanager.apimanagement.models.BackendTlsProperties&text=BackendTlsProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.type()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.type()"
  name: "type()"
  nameWithType: "BackendContract.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.update()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.update()"
  name: "update()"
  nameWithType: "BackendContract.update()"
  summary: "Begins update for the Backend<wbr>Contract resource."
  modifiers:
  - "abstract"
  syntax: "public abstract BackendContract.Update update()"
  desc: "Begins update for the BackendContract resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendContract.Update?alt=com.azure.resourcemanager.apimanagement.models.BackendContract.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendContract.url()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendContract.url()"
  name: "url()"
  nameWithType: "BackendContract.url()"
  summary: "Gets the url property: Runtime Url of the Backend."
  modifiers:
  - "abstract"
  syntax: "public abstract String url()"
  desc: "Gets the url property: Runtime Url of the Backend."
  returns:
    description: "the url value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of BackendContract."
metadata: {}
package: "com.azure.resourcemanager.apimanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.3
