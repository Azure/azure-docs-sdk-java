### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator"
fullName: "com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator"
name: "DefaultBaseTypeLimitingValidator"
nameWithType: "DefaultBaseTypeLimitingValidator"
summary: "<xref uid=\"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PolymorphicTypeValidator\"></xref> that will only allow polymorphic handling if the base type is NOT one of potential dangerous base types (see <xref uid=\"com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator.isUnsafeBaseType*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#isUnsafeBaseType\"></xref> for specific list of such base types). No further validation is performed on subtype.\n\nNote that when using potentially unsafe base type like <xref uid=\"java.lang.Object\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.lang.Object\"></xref> a custom implementation (or subtype with override) is needed. Most commonly subclasses would override both <xref uid=\"com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator.isUnsafeBaseType*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#isUnsafeBaseType\"></xref> and <xref uid=\"com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator.isSafeSubType*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#isSafeSubType\"></xref>: former to allow all (or just more) base types, and latter to add actual validation of subtype."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DefaultBaseTypeLimitingValidator extends PolymorphicTypeValidator implements Serializable"
constructors:
- "com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator.DefaultBaseTypeLimitingValidator()"
methods:
- "com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator.isSafeSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator.isUnsafeBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator.validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator.validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator.validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)"
type: "class"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.jsontype"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
