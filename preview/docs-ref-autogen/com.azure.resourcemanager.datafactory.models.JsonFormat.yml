### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.JsonFormat"
fullName: "com.azure.resourcemanager.datafactory.models.JsonFormat"
name: "JsonFormat"
nameWithType: "JsonFormat"
summary: "The data stored in JSON format."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.DatasetStorageFormat?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.DatasetStorageFormat.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.DatasetStorageFormat.deserializer()"
- "com.azure.resourcemanager.datafactory.models.DatasetStorageFormat.serializer()"
- "com.azure.resourcemanager.datafactory.models.DatasetStorageFormat.validate()"
- "com.azure.resourcemanager.datafactory.models.DatasetStorageFormat.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.DatasetStorageFormat.withDeserializer(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.DatasetStorageFormat.withSerializer(java.lang.Object)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class JsonFormat extends DatasetStorageFormat"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.JsonFormat.JsonFormat()"
  fullName: "com.azure.resourcemanager.datafactory.models.JsonFormat.JsonFormat()"
  name: "JsonFormat()"
  nameWithType: "JsonFormat.JsonFormat()"
  syntax: "public JsonFormat()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.JsonFormat.encodingName()"
  fullName: "com.azure.resourcemanager.datafactory.models.JsonFormat.encodingName()"
  name: "encodingName()"
  nameWithType: "JsonFormat.encodingName()"
  summary: "Get the encodingName property: The code page name of the preferred encoding. If not provided, the default value is 'utf-8', unless the byte order mark (BOM) denotes another Unicode encoding. The full list of supported values can be found in the 'Name' column of the table of encodings in the following reference: https://go.microsoft.com/fwlink/?linkid=861078. Type: string (or Expression with resultType string)."
  syntax: "public Object encodingName()"
  returns:
    description: "the encodingName value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.JsonFormat.filePattern()"
  fullName: "com.azure.resourcemanager.datafactory.models.JsonFormat.filePattern()"
  name: "filePattern()"
  nameWithType: "JsonFormat.filePattern()"
  summary: "Get the filePattern property: File pattern of JSON. To be more specific, the way of separating a collection of JSON objects. The default value is 'setOfObjects'. It is case-sensitive."
  syntax: "public Object filePattern()"
  returns:
    description: "the filePattern value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.JsonFormat.jsonNodeReference()"
  fullName: "com.azure.resourcemanager.datafactory.models.JsonFormat.jsonNodeReference()"
  name: "jsonNodeReference()"
  nameWithType: "JsonFormat.jsonNodeReference()"
  summary: "Get the jsonNodeReference property: The JSONPath of the JSON array element to be flattened. Example: \"$.ArrayPath\". Type: string (or Expression with resultType string)."
  syntax: "public Object jsonNodeReference()"
  returns:
    description: "the jsonNodeReference value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.JsonFormat.jsonPathDefinition()"
  fullName: "com.azure.resourcemanager.datafactory.models.JsonFormat.jsonPathDefinition()"
  name: "jsonPathDefinition()"
  nameWithType: "JsonFormat.jsonPathDefinition()"
  summary: "Get the jsonPathDefinition property: The JSONPath definition for each column mapping with a customized column name to extract data from JSON file. For fields under root object, start with \"$\"; for fields inside the array chosen by jsonNodeReference property, start from the array element. Example: \\{\"Column1\": \"$.Column1Path\", \"Column2\": \"Column2PathInArray\"\\}. Type: object (or Expression with resultType object)."
  syntax: "public Object jsonPathDefinition()"
  returns:
    description: "the jsonPathDefinition value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.JsonFormat.nestingSeparator()"
  fullName: "com.azure.resourcemanager.datafactory.models.JsonFormat.nestingSeparator()"
  name: "nestingSeparator()"
  nameWithType: "JsonFormat.nestingSeparator()"
  summary: "Get the nestingSeparator property: The character used to separate nesting levels. Default value is '.' (dot). Type: string (or Expression with resultType string)."
  syntax: "public Object nestingSeparator()"
  returns:
    description: "the nestingSeparator value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.JsonFormat.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.JsonFormat.validate()"
  name: "validate()"
  nameWithType: "JsonFormat.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.DatasetStorageFormat.validate()"
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.models.JsonFormat.withDeserializer(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.JsonFormat.withDeserializer(Object deserializer)"
  name: "withDeserializer(Object deserializer)"
  nameWithType: "JsonFormat.withDeserializer(Object deserializer)"
  summary: "Set the deserializer property: Deserializer. Type: string (or Expression with resultType string)."
  overridden: "com.azure.resourcemanager.datafactory.models.DatasetStorageFormat.withDeserializer(java.lang.Object)"
  parameters:
  - name: "deserializer"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonFormat withDeserializer(Object deserializer)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.JsonFormat?alt=com.azure.resourcemanager.datafactory.models.JsonFormat&text=JsonFormat\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.JsonFormat.withEncodingName(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.JsonFormat.withEncodingName(Object encodingName)"
  name: "withEncodingName(Object encodingName)"
  nameWithType: "JsonFormat.withEncodingName(Object encodingName)"
  summary: "Set the encodingName property: The code page name of the preferred encoding. If not provided, the default value is 'utf-8', unless the byte order mark (BOM) denotes another Unicode encoding. The full list of supported values can be found in the 'Name' column of the table of encodings in the following reference: https://go.microsoft.com/fwlink/?linkid=861078. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the encodingName value to set."
    name: "encodingName"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonFormat withEncodingName(Object encodingName)"
  returns:
    description: "the JsonFormat object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.JsonFormat?alt=com.azure.resourcemanager.datafactory.models.JsonFormat&text=JsonFormat\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.JsonFormat.withFilePattern(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.JsonFormat.withFilePattern(Object filePattern)"
  name: "withFilePattern(Object filePattern)"
  nameWithType: "JsonFormat.withFilePattern(Object filePattern)"
  summary: "Set the filePattern property: File pattern of JSON. To be more specific, the way of separating a collection of JSON objects. The default value is 'setOfObjects'. It is case-sensitive."
  parameters:
  - description: "the filePattern value to set."
    name: "filePattern"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonFormat withFilePattern(Object filePattern)"
  returns:
    description: "the JsonFormat object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.JsonFormat?alt=com.azure.resourcemanager.datafactory.models.JsonFormat&text=JsonFormat\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.JsonFormat.withJsonNodeReference(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.JsonFormat.withJsonNodeReference(Object jsonNodeReference)"
  name: "withJsonNodeReference(Object jsonNodeReference)"
  nameWithType: "JsonFormat.withJsonNodeReference(Object jsonNodeReference)"
  summary: "Set the jsonNodeReference property: The JSONPath of the JSON array element to be flattened. Example: \"$.ArrayPath\". Type: string (or Expression with resultType string)."
  parameters:
  - description: "the jsonNodeReference value to set."
    name: "jsonNodeReference"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonFormat withJsonNodeReference(Object jsonNodeReference)"
  returns:
    description: "the JsonFormat object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.JsonFormat?alt=com.azure.resourcemanager.datafactory.models.JsonFormat&text=JsonFormat\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.JsonFormat.withJsonPathDefinition(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.JsonFormat.withJsonPathDefinition(Object jsonPathDefinition)"
  name: "withJsonPathDefinition(Object jsonPathDefinition)"
  nameWithType: "JsonFormat.withJsonPathDefinition(Object jsonPathDefinition)"
  summary: "Set the jsonPathDefinition property: The JSONPath definition for each column mapping with a customized column name to extract data from JSON file. For fields under root object, start with \"$\"; for fields inside the array chosen by jsonNodeReference property, start from the array element. Example: \\{\"Column1\": \"$.Column1Path\", \"Column2\": \"Column2PathInArray\"\\}. Type: object (or Expression with resultType object)."
  parameters:
  - description: "the jsonPathDefinition value to set."
    name: "jsonPathDefinition"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonFormat withJsonPathDefinition(Object jsonPathDefinition)"
  returns:
    description: "the JsonFormat object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.JsonFormat?alt=com.azure.resourcemanager.datafactory.models.JsonFormat&text=JsonFormat\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.JsonFormat.withNestingSeparator(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.JsonFormat.withNestingSeparator(Object nestingSeparator)"
  name: "withNestingSeparator(Object nestingSeparator)"
  nameWithType: "JsonFormat.withNestingSeparator(Object nestingSeparator)"
  summary: "Set the nestingSeparator property: The character used to separate nesting levels. Default value is '.' (dot). Type: string (or Expression with resultType string)."
  parameters:
  - description: "the nestingSeparator value to set."
    name: "nestingSeparator"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonFormat withNestingSeparator(Object nestingSeparator)"
  returns:
    description: "the JsonFormat object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.JsonFormat?alt=com.azure.resourcemanager.datafactory.models.JsonFormat&text=JsonFormat\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.JsonFormat.withSerializer(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.JsonFormat.withSerializer(Object serializer)"
  name: "withSerializer(Object serializer)"
  nameWithType: "JsonFormat.withSerializer(Object serializer)"
  summary: "Set the serializer property: Serializer. Type: string (or Expression with resultType string)."
  overridden: "com.azure.resourcemanager.datafactory.models.DatasetStorageFormat.withSerializer(java.lang.Object)"
  parameters:
  - name: "serializer"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonFormat withSerializer(Object serializer)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.JsonFormat?alt=com.azure.resourcemanager.datafactory.models.JsonFormat&text=JsonFormat\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
