### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer
  id: AsWrapperTypeSerializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl
  children:
  - com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.AsWrapperTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer._validTypeId(java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer._writeTypeId(com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.getTypeInclusion()
  langs:
  - java
  name: AsWrapperTypeSerializer
  nameWithType: AsWrapperTypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer
  type: Class
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: 'Type wrapper that tries to use an extra JSON Object, with a single entry that has type name as key, to serialize type information. If this is not possible (value is serialize as array or primitive), will use <xref uid="" data-throw-if-not-resolved="false">As#WRAPPER_ARRAY</xref> mechanism as fallback: that is, just use a wrapping array with type information as the first element and value as second.'
  syntax:
    content: public class AsWrapperTypeSerializer extends TypeSerializerBase
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
  inheritedMembers:
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer._writeLegacySuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken,java.lang.Object)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._generateTypeId(com.fasterxml.jackson.core.type.WritableTypeId)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getPropertyName()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeIdResolver()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeInclusion()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.handleMissingId(java.lang.Object)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValue(java.lang.Object)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValueAndType(java.lang.Object,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.AsWrapperTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)
  id: AsWrapperTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer
  langs:
  - java
  name: AsWrapperTypeSerializer(TypeIdResolver idRes, BeanProperty property)
  nameWithType: AsWrapperTypeSerializer.AsWrapperTypeSerializer(TypeIdResolver idRes, BeanProperty property)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.AsWrapperTypeSerializer(TypeIdResolver idRes, BeanProperty property)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.AsWrapperTypeSerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: public AsWrapperTypeSerializer(TypeIdResolver idRes, BeanProperty property)
    parameters:
    - id: idRes
      type: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
    - id: property
      type: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer._validTypeId(java.lang.String)
  id: _validTypeId(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer
  langs:
  - java
  name: _validTypeId(String typeId)
  nameWithType: AsWrapperTypeSerializer._validTypeId(String typeId)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer._validTypeId(String typeId)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer._validTypeId*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: 'Helper method used to ensure that intended type id is output as something that is valid: currently only used to ensure that \`null\` output is converted to an empty String.'
  syntax:
    content: protected String _validTypeId(String typeId)
    parameters:
    - id: typeId
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer._writeTypeId(com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  id: _writeTypeId(com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer
  langs:
  - java
  name: _writeTypeId(JsonGenerator g, String typeId)
  nameWithType: AsWrapperTypeSerializer._writeTypeId(JsonGenerator g, String typeId)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer._writeTypeId(JsonGenerator g, String typeId)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer._writeTypeId*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected final void _writeTypeId(JsonGenerator g, String typeId)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: typeId
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  id: forProperty(com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer
  langs:
  - java
  name: forProperty(BeanProperty prop)
  nameWithType: AsWrapperTypeSerializer.forProperty(BeanProperty prop)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.forProperty(BeanProperty prop)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.forProperty*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method called to create contextual version, to be used for values of given property. This may be the type itself (as is the case for bean properties), or values contained (for <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> or <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> valued properties).
  syntax:
    content: public AsWrapperTypeSerializer forProperty(BeanProperty prop)
    parameters:
    - id: prop
      type: com.fasterxml.jackson.databind.BeanProperty
    return:
      type: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.getTypeInclusion()
  id: getTypeInclusion()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer
  langs:
  - java
  name: getTypeInclusion()
  nameWithType: AsWrapperTypeSerializer.getTypeInclusion()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.getTypeInclusion()
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.getTypeInclusion*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Accessor for type information inclusion method that serializer uses; indicates how type information is embedded in resulting JSON.
  syntax:
    content: public JsonTypeInfo.As getTypeInclusion()
    return:
      type: com.fasterxml.jackson.annotation.JsonTypeInfo.As
references:
- uid: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
  name: TypeIdResolver
  nameWithType: TypeIdResolver
  fullName: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
- uid: com.fasterxml.jackson.databind.BeanProperty
  name: BeanProperty
  nameWithType: BeanProperty
  fullName: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.AsWrapperTypeSerializer*
  name: AsWrapperTypeSerializer
  nameWithType: AsWrapperTypeSerializer.AsWrapperTypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.AsWrapperTypeSerializer
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.forProperty*
  name: forProperty
  nameWithType: AsWrapperTypeSerializer.forProperty
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.forProperty
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.annotation.JsonTypeInfo.As
  name: JsonTypeInfo.As
  nameWithType: JsonTypeInfo.As
  fullName: com.fasterxml.jackson.annotation.JsonTypeInfo.As
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.getTypeInclusion*
  name: getTypeInclusion
  nameWithType: AsWrapperTypeSerializer.getTypeInclusion
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.getTypeInclusion
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer._validTypeId*
  name: _validTypeId
  nameWithType: AsWrapperTypeSerializer._validTypeId
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer._validTypeId
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer._writeTypeId*
  name: _writeTypeId
  nameWithType: AsWrapperTypeSerializer._writeTypeId
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer._writeTypeId
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
  name: TypeSerializerBase
  nameWithType: TypeSerializerBase
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  name: TypeSerializer.writeTypePrefixForScalar(Object,JsonGenerator)
  nameWithType: TypeSerializer.writeTypePrefixForScalar(Object,JsonGenerator)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  name: TypeSerializer.writeTypeSuffixForScalar(Object,JsonGenerator)
  nameWithType: TypeSerializer.writeTypeSuffixForScalar(Object,JsonGenerator)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getPropertyName()
  name: TypeSerializerBase.getPropertyName()
  nameWithType: TypeSerializerBase.getPropertyName()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getPropertyName()
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeIdResolver()
  name: TypeSerializerBase.getTypeIdResolver()
  nameWithType: TypeSerializerBase.getTypeIdResolver()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeIdResolver()
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._generateTypeId(com.fasterxml.jackson.core.type.WritableTypeId)
  name: TypeSerializerBase._generateTypeId(WritableTypeId)
  nameWithType: TypeSerializerBase._generateTypeId(WritableTypeId)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._generateTypeId(com.fasterxml.jackson.core.type.WritableTypeId)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeInclusion()
  name: TypeSerializerBase.getTypeInclusion()
  nameWithType: TypeSerializerBase.getTypeInclusion()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeInclusion()
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken)
  name: TypeSerializer.typeId(Object,Class<?>,JsonToken)
  nameWithType: TypeSerializer.typeId(Object,Class<?>,JsonToken)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  name: TypeSerializerBase.writeTypeSuffix(JsonGenerator,WritableTypeId)
  nameWithType: TypeSerializerBase.writeTypeSuffix(JsonGenerator,WritableTypeId)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  name: TypeSerializer.writeTypePrefixForObject(Object,JsonGenerator)
  nameWithType: TypeSerializer.writeTypePrefixForObject(Object,JsonGenerator)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
  name: TypeSerializer.writeTypePrefixForArray(Object,JsonGenerator,Class<?>)
  nameWithType: TypeSerializer.writeTypePrefixForArray(Object,JsonGenerator,Class<?>)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValue(java.lang.Object)
  name: TypeSerializerBase.idFromValue(Object)
  nameWithType: TypeSerializerBase.idFromValue(Object)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValue(java.lang.Object)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken,java.lang.Object)
  name: TypeSerializer.typeId(Object,JsonToken,Object)
  nameWithType: TypeSerializer.typeId(Object,JsonToken,Object)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken,java.lang.Object)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  name: TypeSerializer.writeTypeSuffixForObject(Object,JsonGenerator)
  nameWithType: TypeSerializer.writeTypeSuffixForObject(Object,JsonGenerator)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
  name: TypeSerializer.writeTypePrefixForObject(Object,JsonGenerator,Class<?>)
  nameWithType: TypeSerializer.writeTypePrefixForObject(Object,JsonGenerator,Class<?>)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  name: TypeSerializer.writeCustomTypePrefixForScalar(Object,JsonGenerator,String)
  nameWithType: TypeSerializer.writeCustomTypePrefixForScalar(Object,JsonGenerator,String)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  name: TypeSerializer.writeCustomTypeSuffixForScalar(Object,JsonGenerator,String)
  nameWithType: TypeSerializer.writeCustomTypeSuffixForScalar(Object,JsonGenerator,String)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  name: TypeSerializer.writeCustomTypeSuffixForObject(Object,JsonGenerator,String)
  nameWithType: TypeSerializer.writeCustomTypeSuffixForObject(Object,JsonGenerator,String)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  name: TypeSerializer.forProperty(BeanProperty)
  nameWithType: TypeSerializer.forProperty(BeanProperty)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValueAndType(java.lang.Object,java.lang.Class<?>)
  name: TypeSerializerBase.idFromValueAndType(Object,Class<?>)
  nameWithType: TypeSerializerBase.idFromValueAndType(Object,Class<?>)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValueAndType(java.lang.Object,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  name: TypeSerializer.writeCustomTypePrefixForArray(Object,JsonGenerator,String)
  nameWithType: TypeSerializer.writeCustomTypePrefixForArray(Object,JsonGenerator,String)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  name: TypeSerializer.writeCustomTypeSuffixForArray(Object,JsonGenerator,String)
  nameWithType: TypeSerializer.writeCustomTypeSuffixForArray(Object,JsonGenerator,String)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  name: TypeSerializer.writeTypePrefixForArray(Object,JsonGenerator)
  nameWithType: TypeSerializer.writeTypePrefixForArray(Object,JsonGenerator)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.handleMissingId(java.lang.Object)
  name: TypeSerializerBase.handleMissingId(Object)
  nameWithType: TypeSerializerBase.handleMissingId(Object)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.handleMissingId(java.lang.Object)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer._writeLegacySuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  name: TypeSerializer._writeLegacySuffix(JsonGenerator,WritableTypeId)
  nameWithType: TypeSerializer._writeLegacySuffix(JsonGenerator,WritableTypeId)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer._writeLegacySuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  name: TypeSerializerBase.writeTypePrefix(JsonGenerator,WritableTypeId)
  nameWithType: TypeSerializerBase.writeTypePrefix(JsonGenerator,WritableTypeId)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken)
  name: TypeSerializer.typeId(Object,JsonToken)
  nameWithType: TypeSerializer.typeId(Object,JsonToken)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
  name: TypeSerializer.writeTypePrefixForScalar(Object,JsonGenerator,Class<?>)
  nameWithType: TypeSerializer.writeTypePrefixForScalar(Object,JsonGenerator,Class<?>)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  name: TypeSerializer.writeCustomTypePrefixForObject(Object,JsonGenerator,String)
  nameWithType: TypeSerializer.writeCustomTypePrefixForObject(Object,JsonGenerator,String)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  name: TypeSerializer.writeTypeSuffixForArray(Object,JsonGenerator)
  nameWithType: TypeSerializer.writeTypeSuffixForArray(Object,JsonGenerator)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,java.lang.Class
  name: TypeSerializer.typeId(Object,Class
  nameWithType: TypeSerializer.typeId(Object,Class
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,java.lang.Class
- uid: ?>,com.fasterxml.jackson.core.JsonToken)
  name: ?>,JsonToken)
  nameWithType: ?>,JsonToken)
  fullName: ?>,com.fasterxml.jackson.core.JsonToken)
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class
  name: TypeSerializer.writeTypePrefixForArray(Object,JsonGenerator,Class
  nameWithType: TypeSerializer.writeTypePrefixForArray(Object,JsonGenerator,Class
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class
  name: TypeSerializer.writeTypePrefixForObject(Object,JsonGenerator,Class
  nameWithType: TypeSerializer.writeTypePrefixForObject(Object,JsonGenerator,Class
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValueAndType(java.lang.Object,java.lang.Class
  name: TypeSerializerBase.idFromValueAndType(Object,Class
  nameWithType: TypeSerializerBase.idFromValueAndType(Object,Class
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValueAndType(java.lang.Object,java.lang.Class
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class
  name: TypeSerializer.writeTypePrefixForScalar(Object,JsonGenerator,Class
  nameWithType: TypeSerializer.writeTypePrefixForScalar(Object,JsonGenerator,Class
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class
