### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer"
fullName: "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer"
name: "AsWrapperTypeSerializer"
nameWithType: "AsWrapperTypeSerializer"
summary: "Type wrapper that tries to use an extra JSON Object, with a single entry that has type name as key, to serialize type information. If this is not possible (value is serialize as array or primitive), will use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"As#WRAPPER_ARRAY\"></xref> mechanism as fallback: that is, just use a wrapping array with type information as the first element and value as second."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.jsontype.TypeSerializer\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer._writeLegacySuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken,java.lang.Object)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)"
- "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._generateTypeId(com.fasterxml.jackson.core.type.WritableTypeId)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getPropertyName()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeIdResolver()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeInclusion()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.handleMissingId(java.lang.Object)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValue(java.lang.Object)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValueAndType(java.lang.Object,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AsWrapperTypeSerializer extends TypeSerializerBase"
constructors:
- "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.AsWrapperTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)"
methods:
- "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer._validTypeId(java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer._writeTypeId(com.fasterxml.jackson.core.JsonGenerator,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.getTypeInclusion()"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.databind.jsontype.impl"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
