### YamlMime:JavaMember
uid: "com.azure.resourcemanager.desktopvirtualization.implementation.MsixPackageImpl.withExistingHostPool*"
fullName: "com.azure.resourcemanager.desktopvirtualization.implementation.MsixPackageImpl.withExistingHostPool"
name: "withExistingHostPool"
nameWithType: "MsixPackageImpl.withExistingHostPool"
members:
- uid: "com.azure.resourcemanager.desktopvirtualization.implementation.MsixPackageImpl.withExistingHostPool(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.implementation.MsixPackageImpl.withExistingHostPool(String resourceGroupName, String hostPoolName)"
  name: "withExistingHostPool(String resourceGroupName, String hostPoolName)"
  nameWithType: "MsixPackageImpl.withExistingHostPool(String resourceGroupName, String hostPoolName)"
  summary: "Specifies resourceGroupName, hostPoolName."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "hostPoolName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MsixPackageImpl withExistingHostPool(String resourceGroupName, String hostPoolName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.desktopvirtualization.implementation.MsixPackageImpl?alt=com.azure.resourcemanager.desktopvirtualization.implementation.MsixPackageImpl&text=MsixPackageImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.desktopvirtualization.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-desktopvirtualization:1.0.0-beta.1
