### YamlMime:JavaMember
uid: "com.azure.storage.file.share.ShareServiceAsyncClient.listShares*"
fullName: "com.azure.storage.file.share.ShareServiceAsyncClient.listShares"
name: "listShares"
nameWithType: "ShareServiceAsyncClient.listShares"
members:
- uid: "com.azure.storage.file.share.ShareServiceAsyncClient.listShares()"
  fullName: "com.azure.storage.file.share.ShareServiceAsyncClient.listShares()"
  name: "listShares()"
  nameWithType: "ShareServiceAsyncClient.listShares()"
  summary: "Lists all shares in the storage account without their metadata or snapshots.\n\n**Code Samples**\n\nList all shares in the account\n\n```java\nfileServiceAsyncClient.listShares().subscribe(\n     shareItem -> System.out.printf(\"Share %s exists in the account\", shareItem.getName()),\n     error -> System.err.print(error.toString()),\n     () -> System.out.println(\"Complete listing the shares!\")\n );\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-shares"
  syntax: "public PagedFlux<ShareItem> listShares()"
  returns:
    description: "<xref uid=\"com.azure.storage.file.share.models.ShareItem\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Shares\"></xref> in the storage account without their metadata or snapshots"
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.models.ShareItem?alt=com.azure.storage.file.share.models.ShareItem&text=ShareItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.share.ShareServiceAsyncClient.listShares(com.azure.storage.file.share.models.ListSharesOptions)"
  fullName: "com.azure.storage.file.share.ShareServiceAsyncClient.listShares(ListSharesOptions options)"
  name: "listShares(ListSharesOptions options)"
  nameWithType: "ShareServiceAsyncClient.listShares(ListSharesOptions options)"
  summary: "Lists the shares in the Storage account that pass the options filter.\n\nSet starts with name filter using <xref uid=\"com.azure.storage.file.share.models.ListSharesOptions.setPrefix(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"prefix\"></xref> to filter shares that are listed.\n\nPass true to <xref uid=\"com.azure.storage.file.share.models.ListSharesOptions.setIncludeMetadata(boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"includeMetadata\"></xref> to have metadata returned for the shares.\n\nPass true to <xref uid=\"com.azure.storage.file.share.models.ListSharesOptions.setIncludeSnapshots(boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"includeSnapshots\"></xref> to have snapshots of the shares listed.\n\n**Code Samples**\n\nList all shares that begin with \"azure\"\n\n```java\nfileServiceAsyncClient.listShares(new ListSharesOptions().setPrefix(\"azure\")).subscribe(\n     shareItem -> System.out.printf(\"Share %s exists in the account\", shareItem.getName()),\n     error -> System.err.print(error.toString()),\n     () -> System.out.println(\"Complete listing the shares!\")\n );\n```\n\nList all shares including their snapshots and metadata\n\n```java\nfileServiceAsyncClient.listShares(new ListSharesOptions().setIncludeMetadata(true).setIncludeSnapshots(true))\n     .subscribe(\n         shareItem -> System.out.printf(\"Share %s exists in the account\", shareItem.getName()),\n         error -> System.err.print(error.toString()),\n         () -> System.out.println(\"Complete listing the shares!\")\n     );\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-shares"
  parameters:
  - description: "Options for listing shares"
    name: "options"
    type: "<xref href=\"com.azure.storage.file.share.models.ListSharesOptions?alt=com.azure.storage.file.share.models.ListSharesOptions&text=ListSharesOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<ShareItem> listShares(ListSharesOptions options)"
  returns:
    description: "<xref uid=\"com.azure.storage.file.share.models.ShareItem\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Shares\"></xref> in the storage account that satisfy the filter requirements"
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.models.ShareItem?alt=com.azure.storage.file.share.models.ShareItem&text=ShareItem\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.share"
artifact: com.azure:azure-storage-file-share:12.7.0-beta.1
