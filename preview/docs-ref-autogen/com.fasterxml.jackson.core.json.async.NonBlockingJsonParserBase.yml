### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  id: NonBlockingJsonParserBase
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async
  children:
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_ARRAY_ELEMENT_FIRST
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_ARRAY_ELEMENT_NEXT
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_CLOSED
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_INITIAL
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_OBJECT_FIELD_FIRST
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_OBJECT_FIELD_NEXT
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_OBJECT_VALUE
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_ROOT
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_C
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_CLOSING_ASTERISK
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_CPP
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_LEADING_SLASH
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_YAML
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_APOS_NAME
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_LEADING_COMMA
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_LEADING_WS
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_NAME
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_NAME_ESCAPE
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_UNQUOTED_NAME
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_EXPONENT_DIGITS
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_EXPONENT_MARKER
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_FRACTION_DIGITS
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_INTEGER_DIGITS
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_MINUS
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_MINUSZERO
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_ZERO
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_ROOT_BOM
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_ROOT_GOT_SEPARATOR
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_ROOT_NEED_SEPARATOR
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_APOS_STRING
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_EXPECTING_COLON
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_EXPECTING_COMMA
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_LEADING_WS
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING_ESCAPE
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING_UTF8_2
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING_UTF8_3
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING_UTF8_4
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_ERROR
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_FALSE
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_NON_STD
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_NULL
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_TRUE
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_WS_AFTER_COMMA
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKENS
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_INFINITY
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_MINUS_INFINITY
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_NAN
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_PLUS_INFINITY
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_VALUES
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NonBlockingJsonParserBase(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._addName(int[],int,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeArrayScope()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeInput()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeObjectScope()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._currBufferStart
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._currInputRowAlt
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._endOfInput
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._eofAsNextToken()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._fieldComplete(java.lang.String)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int,int,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._getText2(com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._majorState
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._majorStateAfterValue
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._minorState
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._minorStateAfterSplit
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._nonStdToken(int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._nonStdTokenType
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._padLastQuad(int,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._pending32
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._pendingBytes
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quad1
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quadBuffer
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quadLength
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quoted32
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quotedDigits
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._releaseBuffers()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidChar(int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidInitial(int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidOther(int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidOther(int,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startArrayScope()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startObjectScope()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._symbols
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._updateTokenLocation()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueComplete(com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueCompleteInt(int,java.lang.String)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueNonStdNumberComplete(int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.canParseAsync()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCodec()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCurrentLocation()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getEmbeddedObject()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getInputSource()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText(java.io.Writer)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextCharacters()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextLength()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextOffset()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTokenLocation()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString(java.lang.String)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.hasTextCharacters()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.releaseBuffered(java.io.OutputStream)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.symbolTableForTests()
  langs:
  - java
  name: NonBlockingJsonParserBase
  nameWithType: NonBlockingJsonParserBase
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  type: Class
  package: com.fasterxml.jackson.core.json.async
  summary: Intermediate base class for non-blocking JSON parsers.
  syntax:
    content: public abstract class NonBlockingJsonParserBase extends ParserBase
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.core.JsonParser
  - com.fasterxml.jackson.core.base.ParserMinimalBase
  - com.fasterxml.jackson.core.base.ParserBase
  inheritedMembers:
  - com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)
  - com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)
  - com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()
  - com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)
  - com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)
  - com.fasterxml.jackson.core.JsonParser._codec()
  - com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)
  - com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()
  - com.fasterxml.jackson.core.JsonParser.canParseAsync()
  - com.fasterxml.jackson.core.JsonParser.canReadObjectId()
  - com.fasterxml.jackson.core.JsonParser.canReadTypeId()
  - com.fasterxml.jackson.core.JsonParser.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
  - com.fasterxml.jackson.core.JsonParser.currentName()
  - com.fasterxml.jackson.core.JsonParser.finishToken()
  - com.fasterxml.jackson.core.JsonParser.getBinaryValue()
  - com.fasterxml.jackson.core.JsonParser.getBooleanValue()
  - com.fasterxml.jackson.core.JsonParser.getByteValue()
  - com.fasterxml.jackson.core.JsonParser.getCodec()
  - com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()
  - com.fasterxml.jackson.core.JsonParser.getFeatureMask()
  - com.fasterxml.jackson.core.JsonParser.getFormatFeatures()
  - com.fasterxml.jackson.core.JsonParser.getInputSource()
  - com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()
  - com.fasterxml.jackson.core.JsonParser.getObjectId()
  - com.fasterxml.jackson.core.JsonParser.getSchema()
  - com.fasterxml.jackson.core.JsonParser.getShortValue()
  - com.fasterxml.jackson.core.JsonParser.getText(java.io.Writer)
  - com.fasterxml.jackson.core.JsonParser.getTypeId()
  - com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()
  - com.fasterxml.jackson.core.JsonParser.getValueAsDouble()
  - com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
  - com.fasterxml.jackson.core.JsonParser.nextBooleanValue()
  - com.fasterxml.jackson.core.JsonParser.nextFieldName()
  - com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.JsonParser.nextIntValue(int)
  - com.fasterxml.jackson.core.JsonParser.nextLongValue(long)
  - com.fasterxml.jackson.core.JsonParser.nextTextValue()
  - com.fasterxml.jackson.core.JsonParser.overrideFormatFeatures(int,int)
  - com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
  - com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)
  - com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)
  - com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)
  - com.fasterxml.jackson.core.JsonParser.requiresCustomCodec()
  - com.fasterxml.jackson.core.JsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  - com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)
  - com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)
  - com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)
  - com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.core.base.ParserBase._checkStdFeatureChanges(int,int)
  - com.fasterxml.jackson.core.base.ParserBase._closeInput()
  - com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int)
  - com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,int,int)
  - com.fasterxml.jackson.core.base.ParserBase._decodeEscaped()
  - com.fasterxml.jackson.core.base.ParserBase._eofAsNextChar()
  - com.fasterxml.jackson.core.base.ParserBase._finishString()
  - com.fasterxml.jackson.core.base.ParserBase._getByteArrayBuilder()
  - com.fasterxml.jackson.core.base.ParserBase._getSourceReference()
  - com.fasterxml.jackson.core.base.ParserBase._handleBase64MissingPadding(com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.core.base.ParserBase._handleEOF()
  - com.fasterxml.jackson.core.base.ParserBase._handleUnrecognizedCharacterEscape(char)
  - com.fasterxml.jackson.core.base.ParserBase._parseIntValue()
  - com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)
  - com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()
  - com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int,char)
  - com.fasterxml.jackson.core.base.ParserBase._reportTooLongIntegral(int,java.lang.String)
  - com.fasterxml.jackson.core.base.ParserBase._throwUnquotedSpace(int,java.lang.String)
  - com.fasterxml.jackson.core.base.ParserBase._validJsonTokenList()
  - com.fasterxml.jackson.core.base.ParserBase._validJsonValueList()
  - com.fasterxml.jackson.core.base.ParserBase.close()
  - com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()
  - com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()
  - com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()
  - com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()
  - com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()
  - com.fasterxml.jackson.core.base.ParserBase.disable(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.core.base.ParserBase.enable(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue()
  - com.fasterxml.jackson.core.base.ParserBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.core.base.ParserBase.getCurrentLocation()
  - com.fasterxml.jackson.core.base.ParserBase.getCurrentName()
  - com.fasterxml.jackson.core.base.ParserBase.getCurrentValue()
  - com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()
  - com.fasterxml.jackson.core.base.ParserBase.getDoubleValue()
  - com.fasterxml.jackson.core.base.ParserBase.getFloatValue()
  - com.fasterxml.jackson.core.base.ParserBase.getIntValue()
  - com.fasterxml.jackson.core.base.ParserBase.getLongValue()
  - com.fasterxml.jackson.core.base.ParserBase.getNumberType()
  - com.fasterxml.jackson.core.base.ParserBase.getNumberValue()
  - com.fasterxml.jackson.core.base.ParserBase.getParsingContext()
  - com.fasterxml.jackson.core.base.ParserBase.getTokenCharacterOffset()
  - com.fasterxml.jackson.core.base.ParserBase.getTokenColumnNr()
  - com.fasterxml.jackson.core.base.ParserBase.getTokenLineNr()
  - com.fasterxml.jackson.core.base.ParserBase.getTokenLocation()
  - com.fasterxml.jackson.core.base.ParserBase.growArrayBy(int[],int)
  - com.fasterxml.jackson.core.base.ParserBase.hasTextCharacters()
  - com.fasterxml.jackson.core.base.ParserBase.isClosed()
  - com.fasterxml.jackson.core.base.ParserBase.isNaN()
  - com.fasterxml.jackson.core.base.ParserBase.loadMore()
  - com.fasterxml.jackson.core.base.ParserBase.loadMoreGuaranteed()
  - com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserBase.overrideStdFeatures(int,int)
  - com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int)
  - com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)
  - com.fasterxml.jackson.core.base.ParserBase.reset(boolean,int,int,int)
  - com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String,double)
  - com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean,int,int,int)
  - com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean,int)
  - com.fasterxml.jackson.core.base.ParserBase.setCurrentValue(java.lang.Object)
  - com.fasterxml.jackson.core.base.ParserBase.setFeatureMask(int)
  - com.fasterxml.jackson.core.base.ParserBase.version()
  - com.fasterxml.jackson.core.base.ParserMinimalBase._ascii(byte[])
  - com.fasterxml.jackson.core.base.ParserMinimalBase._asciiBytes(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String,java.lang.Throwable)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._hasTextualNull(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._longIntegerDesc(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._longNumberDesc(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class<?>)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue()
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportMissingRootWS(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int,java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal()
  - com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(java.lang.String,java.lang.Throwable)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.currentToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentTokenId()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getText()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getTextLength()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getTextOffset()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.hasToken(com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.hasTokenId(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartObjectToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportInvalidNumber(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportUnexpectedNumberChar(int,java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_ARRAY_ELEMENT_FIRST
  id: MAJOR_ARRAY_ELEMENT_FIRST
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MAJOR_ARRAY_ELEMENT_FIRST
  nameWithType: NonBlockingJsonParserBase.MAJOR_ARRAY_ELEMENT_FIRST
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_ARRAY_ELEMENT_FIRST
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MAJOR_ARRAY_ELEMENT_FIRST
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_ARRAY_ELEMENT_NEXT
  id: MAJOR_ARRAY_ELEMENT_NEXT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MAJOR_ARRAY_ELEMENT_NEXT
  nameWithType: NonBlockingJsonParserBase.MAJOR_ARRAY_ELEMENT_NEXT
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_ARRAY_ELEMENT_NEXT
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MAJOR_ARRAY_ELEMENT_NEXT
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_CLOSED
  id: MAJOR_CLOSED
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MAJOR_CLOSED
  nameWithType: NonBlockingJsonParserBase.MAJOR_CLOSED
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_CLOSED
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: State after non-blocking input source has indicated that no more input is forthcoming AND we have exhausted all the input
  syntax:
    content: protected static final int MAJOR_CLOSED
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_INITIAL
  id: MAJOR_INITIAL
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MAJOR_INITIAL
  nameWithType: NonBlockingJsonParserBase.MAJOR_INITIAL
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_INITIAL
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: State right after parser has been constructed, before seeing the first byte to handle possible (but optional) BOM.
  syntax:
    content: protected static final int MAJOR_INITIAL
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_OBJECT_FIELD_FIRST
  id: MAJOR_OBJECT_FIELD_FIRST
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MAJOR_OBJECT_FIELD_FIRST
  nameWithType: NonBlockingJsonParserBase.MAJOR_OBJECT_FIELD_FIRST
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_OBJECT_FIELD_FIRST
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MAJOR_OBJECT_FIELD_FIRST
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_OBJECT_FIELD_NEXT
  id: MAJOR_OBJECT_FIELD_NEXT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MAJOR_OBJECT_FIELD_NEXT
  nameWithType: NonBlockingJsonParserBase.MAJOR_OBJECT_FIELD_NEXT
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_OBJECT_FIELD_NEXT
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MAJOR_OBJECT_FIELD_NEXT
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_OBJECT_VALUE
  id: MAJOR_OBJECT_VALUE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MAJOR_OBJECT_VALUE
  nameWithType: NonBlockingJsonParserBase.MAJOR_OBJECT_VALUE
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_OBJECT_VALUE
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MAJOR_OBJECT_VALUE
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_ROOT
  id: MAJOR_ROOT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MAJOR_ROOT
  nameWithType: NonBlockingJsonParserBase.MAJOR_ROOT
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MAJOR_ROOT
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: State right after parser a root value has been finished, but next token has not yet been recognized.
  syntax:
    content: protected static final int MAJOR_ROOT
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_C
  id: MINOR_COMMENT_C
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_COMMENT_C
  nameWithType: NonBlockingJsonParserBase.MINOR_COMMENT_C
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_C
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_COMMENT_C
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_CLOSING_ASTERISK
  id: MINOR_COMMENT_CLOSING_ASTERISK
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_COMMENT_CLOSING_ASTERISK
  nameWithType: NonBlockingJsonParserBase.MINOR_COMMENT_CLOSING_ASTERISK
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_CLOSING_ASTERISK
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_COMMENT_CLOSING_ASTERISK
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_CPP
  id: MINOR_COMMENT_CPP
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_COMMENT_CPP
  nameWithType: NonBlockingJsonParserBase.MINOR_COMMENT_CPP
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_CPP
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_COMMENT_CPP
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_LEADING_SLASH
  id: MINOR_COMMENT_LEADING_SLASH
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_COMMENT_LEADING_SLASH
  nameWithType: NonBlockingJsonParserBase.MINOR_COMMENT_LEADING_SLASH
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_LEADING_SLASH
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_COMMENT_LEADING_SLASH
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_YAML
  id: MINOR_COMMENT_YAML
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_COMMENT_YAML
  nameWithType: NonBlockingJsonParserBase.MINOR_COMMENT_YAML
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_COMMENT_YAML
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_COMMENT_YAML
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_APOS_NAME
  id: MINOR_FIELD_APOS_NAME
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_FIELD_APOS_NAME
  nameWithType: NonBlockingJsonParserBase.MINOR_FIELD_APOS_NAME
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_APOS_NAME
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_FIELD_APOS_NAME
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_LEADING_COMMA
  id: MINOR_FIELD_LEADING_COMMA
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_FIELD_LEADING_COMMA
  nameWithType: NonBlockingJsonParserBase.MINOR_FIELD_LEADING_COMMA
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_LEADING_COMMA
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_FIELD_LEADING_COMMA
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_LEADING_WS
  id: MINOR_FIELD_LEADING_WS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_FIELD_LEADING_WS
  nameWithType: NonBlockingJsonParserBase.MINOR_FIELD_LEADING_WS
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_LEADING_WS
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_FIELD_LEADING_WS
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_NAME
  id: MINOR_FIELD_NAME
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_FIELD_NAME
  nameWithType: NonBlockingJsonParserBase.MINOR_FIELD_NAME
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_NAME
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_FIELD_NAME
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_NAME_ESCAPE
  id: MINOR_FIELD_NAME_ESCAPE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_FIELD_NAME_ESCAPE
  nameWithType: NonBlockingJsonParserBase.MINOR_FIELD_NAME_ESCAPE
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_NAME_ESCAPE
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_FIELD_NAME_ESCAPE
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_UNQUOTED_NAME
  id: MINOR_FIELD_UNQUOTED_NAME
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_FIELD_UNQUOTED_NAME
  nameWithType: NonBlockingJsonParserBase.MINOR_FIELD_UNQUOTED_NAME
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_FIELD_UNQUOTED_NAME
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_FIELD_UNQUOTED_NAME
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_EXPONENT_DIGITS
  id: MINOR_NUMBER_EXPONENT_DIGITS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_NUMBER_EXPONENT_DIGITS
  nameWithType: NonBlockingJsonParserBase.MINOR_NUMBER_EXPONENT_DIGITS
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_EXPONENT_DIGITS
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_NUMBER_EXPONENT_DIGITS
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_EXPONENT_MARKER
  id: MINOR_NUMBER_EXPONENT_MARKER
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_NUMBER_EXPONENT_MARKER
  nameWithType: NonBlockingJsonParserBase.MINOR_NUMBER_EXPONENT_MARKER
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_EXPONENT_MARKER
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_NUMBER_EXPONENT_MARKER
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_FRACTION_DIGITS
  id: MINOR_NUMBER_FRACTION_DIGITS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_NUMBER_FRACTION_DIGITS
  nameWithType: NonBlockingJsonParserBase.MINOR_NUMBER_FRACTION_DIGITS
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_FRACTION_DIGITS
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_NUMBER_FRACTION_DIGITS
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_INTEGER_DIGITS
  id: MINOR_NUMBER_INTEGER_DIGITS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_NUMBER_INTEGER_DIGITS
  nameWithType: NonBlockingJsonParserBase.MINOR_NUMBER_INTEGER_DIGITS
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_INTEGER_DIGITS
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_NUMBER_INTEGER_DIGITS
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_MINUS
  id: MINOR_NUMBER_MINUS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_NUMBER_MINUS
  nameWithType: NonBlockingJsonParserBase.MINOR_NUMBER_MINUS
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_MINUS
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_NUMBER_MINUS
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_MINUSZERO
  id: MINOR_NUMBER_MINUSZERO
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_NUMBER_MINUSZERO
  nameWithType: NonBlockingJsonParserBase.MINOR_NUMBER_MINUSZERO
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_MINUSZERO
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_NUMBER_MINUSZERO
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_ZERO
  id: MINOR_NUMBER_ZERO
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_NUMBER_ZERO
  nameWithType: NonBlockingJsonParserBase.MINOR_NUMBER_ZERO
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_NUMBER_ZERO
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_NUMBER_ZERO
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_ROOT_BOM
  id: MINOR_ROOT_BOM
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_ROOT_BOM
  nameWithType: NonBlockingJsonParserBase.MINOR_ROOT_BOM
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_ROOT_BOM
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: State in which part of (UTF-8) BOM has been detected, but not yet completely.
  syntax:
    content: protected static final int MINOR_ROOT_BOM
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_ROOT_GOT_SEPARATOR
  id: MINOR_ROOT_GOT_SEPARATOR
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_ROOT_GOT_SEPARATOR
  nameWithType: NonBlockingJsonParserBase.MINOR_ROOT_GOT_SEPARATOR
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_ROOT_GOT_SEPARATOR
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: State between root-level value, having processed at least one white-space character, and expecting either more, start of a value, or end of input stream.
  syntax:
    content: protected static final int MINOR_ROOT_GOT_SEPARATOR
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_ROOT_NEED_SEPARATOR
  id: MINOR_ROOT_NEED_SEPARATOR
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_ROOT_NEED_SEPARATOR
  nameWithType: NonBlockingJsonParserBase.MINOR_ROOT_NEED_SEPARATOR
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_ROOT_NEED_SEPARATOR
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: State between root-level value, waiting for at least one white-space character as separator
  syntax:
    content: protected static final int MINOR_ROOT_NEED_SEPARATOR
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_APOS_STRING
  id: MINOR_VALUE_APOS_STRING
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_VALUE_APOS_STRING
  nameWithType: NonBlockingJsonParserBase.MINOR_VALUE_APOS_STRING
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_APOS_STRING
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_VALUE_APOS_STRING
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_EXPECTING_COLON
  id: MINOR_VALUE_EXPECTING_COLON
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_VALUE_EXPECTING_COLON
  nameWithType: NonBlockingJsonParserBase.MINOR_VALUE_EXPECTING_COLON
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_EXPECTING_COLON
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_VALUE_EXPECTING_COLON
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_EXPECTING_COMMA
  id: MINOR_VALUE_EXPECTING_COMMA
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_VALUE_EXPECTING_COMMA
  nameWithType: NonBlockingJsonParserBase.MINOR_VALUE_EXPECTING_COMMA
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_EXPECTING_COMMA
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_VALUE_EXPECTING_COMMA
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_LEADING_WS
  id: MINOR_VALUE_LEADING_WS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_VALUE_LEADING_WS
  nameWithType: NonBlockingJsonParserBase.MINOR_VALUE_LEADING_WS
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_LEADING_WS
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_VALUE_LEADING_WS
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING
  id: MINOR_VALUE_STRING
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_VALUE_STRING
  nameWithType: NonBlockingJsonParserBase.MINOR_VALUE_STRING
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_VALUE_STRING
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING_ESCAPE
  id: MINOR_VALUE_STRING_ESCAPE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_VALUE_STRING_ESCAPE
  nameWithType: NonBlockingJsonParserBase.MINOR_VALUE_STRING_ESCAPE
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING_ESCAPE
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_VALUE_STRING_ESCAPE
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING_UTF8_2
  id: MINOR_VALUE_STRING_UTF8_2
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_VALUE_STRING_UTF8_2
  nameWithType: NonBlockingJsonParserBase.MINOR_VALUE_STRING_UTF8_2
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING_UTF8_2
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_VALUE_STRING_UTF8_2
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING_UTF8_3
  id: MINOR_VALUE_STRING_UTF8_3
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_VALUE_STRING_UTF8_3
  nameWithType: NonBlockingJsonParserBase.MINOR_VALUE_STRING_UTF8_3
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING_UTF8_3
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_VALUE_STRING_UTF8_3
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING_UTF8_4
  id: MINOR_VALUE_STRING_UTF8_4
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_VALUE_STRING_UTF8_4
  nameWithType: NonBlockingJsonParserBase.MINOR_VALUE_STRING_UTF8_4
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_STRING_UTF8_4
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_VALUE_STRING_UTF8_4
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_ERROR
  id: MINOR_VALUE_TOKEN_ERROR
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_VALUE_TOKEN_ERROR
  nameWithType: NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_ERROR
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_ERROR
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: Special state at which point decoding of a non-quoted token has encountered a problem; that is, either not matching fully (like "truf" instead of "true", at "tru"), or not having trailing separator (or end of input), like "trueful". Attempt is made, then, to decode likely full input token to report suitable error.
  syntax:
    content: protected static final int MINOR_VALUE_TOKEN_ERROR
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_FALSE
  id: MINOR_VALUE_TOKEN_FALSE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_VALUE_TOKEN_FALSE
  nameWithType: NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_FALSE
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_FALSE
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_VALUE_TOKEN_FALSE
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_NON_STD
  id: MINOR_VALUE_TOKEN_NON_STD
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_VALUE_TOKEN_NON_STD
  nameWithType: NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_NON_STD
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_NON_STD
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_VALUE_TOKEN_NON_STD
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_NULL
  id: MINOR_VALUE_TOKEN_NULL
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_VALUE_TOKEN_NULL
  nameWithType: NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_NULL
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_NULL
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_VALUE_TOKEN_NULL
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_TRUE
  id: MINOR_VALUE_TOKEN_TRUE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_VALUE_TOKEN_TRUE
  nameWithType: NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_TRUE
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_TOKEN_TRUE
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_VALUE_TOKEN_TRUE
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_WS_AFTER_COMMA
  id: MINOR_VALUE_WS_AFTER_COMMA
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: MINOR_VALUE_WS_AFTER_COMMA
  nameWithType: NonBlockingJsonParserBase.MINOR_VALUE_WS_AFTER_COMMA
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.MINOR_VALUE_WS_AFTER_COMMA
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int MINOR_VALUE_WS_AFTER_COMMA
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKENS
  id: NON_STD_TOKENS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: NON_STD_TOKENS
  nameWithType: NonBlockingJsonParserBase.NON_STD_TOKENS
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKENS
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final String[] NON_STD_TOKENS
    return:
      type: java.lang.String[]
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_INFINITY
  id: NON_STD_TOKEN_INFINITY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: NON_STD_TOKEN_INFINITY
  nameWithType: NonBlockingJsonParserBase.NON_STD_TOKEN_INFINITY
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_INFINITY
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int NON_STD_TOKEN_INFINITY
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_MINUS_INFINITY
  id: NON_STD_TOKEN_MINUS_INFINITY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: NON_STD_TOKEN_MINUS_INFINITY
  nameWithType: NonBlockingJsonParserBase.NON_STD_TOKEN_MINUS_INFINITY
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_MINUS_INFINITY
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int NON_STD_TOKEN_MINUS_INFINITY
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_NAN
  id: NON_STD_TOKEN_NAN
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: NON_STD_TOKEN_NAN
  nameWithType: NonBlockingJsonParserBase.NON_STD_TOKEN_NAN
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_NAN
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int NON_STD_TOKEN_NAN
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_PLUS_INFINITY
  id: NON_STD_TOKEN_PLUS_INFINITY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: NON_STD_TOKEN_PLUS_INFINITY
  nameWithType: NonBlockingJsonParserBase.NON_STD_TOKEN_PLUS_INFINITY
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_PLUS_INFINITY
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int NON_STD_TOKEN_PLUS_INFINITY
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_VALUES
  id: NON_STD_TOKEN_VALUES
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: NON_STD_TOKEN_VALUES
  nameWithType: NonBlockingJsonParserBase.NON_STD_TOKEN_VALUES
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NON_STD_TOKEN_VALUES
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final double[] NON_STD_TOKEN_VALUES
    return:
      type: double[]
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NonBlockingJsonParserBase(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer)
  id: NonBlockingJsonParserBase(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: NonBlockingJsonParserBase(IOContext ctxt, int parserFeatures, ByteQuadsCanonicalizer sym)
  nameWithType: NonBlockingJsonParserBase.NonBlockingJsonParserBase(IOContext ctxt, int parserFeatures, ByteQuadsCanonicalizer sym)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NonBlockingJsonParserBase(IOContext ctxt, int parserFeatures, ByteQuadsCanonicalizer sym)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NonBlockingJsonParserBase*
  type: Constructor
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: public NonBlockingJsonParserBase(IOContext ctxt, int parserFeatures, ByteQuadsCanonicalizer sym)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.core.io.IOContext
    - id: parserFeatures
      type: int
    - id: sym
      type: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._addName(int[],int,int)
  id: _addName(int[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _addName(int[] quads, int qlen, int lastQuadBytes)
  nameWithType: NonBlockingJsonParserBase._addName(int[] quads, int qlen, int lastQuadBytes)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._addName(int[] quads, int qlen, int lastQuadBytes)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._addName*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: This is the main workhorse method used when we take a symbol table miss. It needs to demultiplex individual bytes, decode multi-byte chars (if any), and then construct Name instance and add it to the symbol table.
  syntax:
    content: protected final String _addName(int[] quads, int qlen, int lastQuadBytes)
    parameters:
    - id: quads
      type: int[]
    - id: qlen
      type: int
    - id: lastQuadBytes
      type: int
    return:
      type: java.lang.String
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeArrayScope()
  id: _closeArrayScope()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _closeArrayScope()
  nameWithType: NonBlockingJsonParserBase._closeArrayScope()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeArrayScope()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeArrayScope*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected final JsonToken _closeArrayScope()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeInput()
  id: _closeInput()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _closeInput()
  nameWithType: NonBlockingJsonParserBase._closeInput()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeInput()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeInput*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected void _closeInput()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeObjectScope()
  id: _closeObjectScope()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _closeObjectScope()
  nameWithType: NonBlockingJsonParserBase._closeObjectScope()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeObjectScope()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeObjectScope*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected final JsonToken _closeObjectScope()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._currBufferStart
  id: _currBufferStart
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _currBufferStart
  nameWithType: NonBlockingJsonParserBase._currBufferStart
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._currBufferStart
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: Since we are fed content that may or may not start at zero offset, we need to keep track of the first byte within that buffer, to be able to calculate logical offset within input "stream"
  syntax:
    content: protected int _currBufferStart
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._currInputRowAlt
  id: _currInputRowAlt
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _currInputRowAlt
  nameWithType: NonBlockingJsonParserBase._currInputRowAlt
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._currInputRowAlt
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: Alternate row tracker, used to keep track of position by \`\\r\` marker (whereas `_currInputRow` tracks \`\\n\`). Used to simplify tracking of linefeeds, assuming that input typically uses various linefeed combinations (\`\\r\`, \`\\n\` or \`\\r\\n\`) consistently, in which case we can simply choose max of two row candidates.
  syntax:
    content: protected int _currInputRowAlt
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._endOfInput
  id: _endOfInput
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _endOfInput
  nameWithType: NonBlockingJsonParserBase._endOfInput
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._endOfInput
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: Flag that is sent when calling application indicates that there will be no more input to parse.
  syntax:
    content: protected boolean _endOfInput
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._eofAsNextToken()
  id: _eofAsNextToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _eofAsNextToken()
  nameWithType: NonBlockingJsonParserBase._eofAsNextToken()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._eofAsNextToken()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._eofAsNextToken*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Helper method called at point when all input has been exhausted and input feeder has indicated no more input will be forthcoming.
  syntax:
    content: protected final JsonToken _eofAsNextToken()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._fieldComplete(java.lang.String)
  id: _fieldComplete(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _fieldComplete(String name)
  nameWithType: NonBlockingJsonParserBase._fieldComplete(String name)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._fieldComplete(String name)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._fieldComplete*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected final JsonToken _fieldComplete(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int)
  id: _findName(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _findName(int q1, int lastQuadBytes)
  nameWithType: NonBlockingJsonParserBase._findName(int q1, int lastQuadBytes)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int q1, int lastQuadBytes)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected final String _findName(int q1, int lastQuadBytes)
    parameters:
    - id: q1
      type: int
    - id: lastQuadBytes
      type: int
    return:
      type: java.lang.String
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int,int)
  id: _findName(int,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _findName(int q1, int q2, int lastQuadBytes)
  nameWithType: NonBlockingJsonParserBase._findName(int q1, int q2, int lastQuadBytes)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int q1, int q2, int lastQuadBytes)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected final String _findName(int q1, int q2, int lastQuadBytes)
    parameters:
    - id: q1
      type: int
    - id: q2
      type: int
    - id: lastQuadBytes
      type: int
    return:
      type: java.lang.String
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int,int,int)
  id: _findName(int,int,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _findName(int q1, int q2, int q3, int lastQuadBytes)
  nameWithType: NonBlockingJsonParserBase._findName(int q1, int q2, int q3, int lastQuadBytes)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int q1, int q2, int q3, int lastQuadBytes)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected final String _findName(int q1, int q2, int q3, int lastQuadBytes)
    parameters:
    - id: q1
      type: int
    - id: q2
      type: int
    - id: q3
      type: int
    - id: lastQuadBytes
      type: int
    return:
      type: java.lang.String
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._getText2(com.fasterxml.jackson.core.JsonToken)
  id: _getText2(com.fasterxml.jackson.core.JsonToken)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _getText2(JsonToken t)
  nameWithType: NonBlockingJsonParserBase._getText2(JsonToken t)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._getText2(JsonToken t)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._getText2*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected final String _getText2(JsonToken t)
    parameters:
    - id: t
      type: com.fasterxml.jackson.core.JsonToken
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._majorState
  id: _majorState
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _majorState
  nameWithType: NonBlockingJsonParserBase._majorState
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._majorState
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: Current main decoding state within logical tree
  syntax:
    content: protected int _majorState
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._majorStateAfterValue
  id: _majorStateAfterValue
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _majorStateAfterValue
  nameWithType: NonBlockingJsonParserBase._majorStateAfterValue
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._majorStateAfterValue
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: Value of <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._majorState" data-throw-if-not-resolved="false">#_majorState</xref> after completing a scalar value
  syntax:
    content: protected int _majorStateAfterValue
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._minorState
  id: _minorState
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _minorState
  nameWithType: NonBlockingJsonParserBase._minorState
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._minorState
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: Additional indicator within state; contextually relevant for just that state
  syntax:
    content: protected int _minorState
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._minorStateAfterSplit
  id: _minorStateAfterSplit
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _minorStateAfterSplit
  nameWithType: NonBlockingJsonParserBase._minorStateAfterSplit
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._minorStateAfterSplit
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: Secondary minor state indicator used during decoding of escapes and/or multi-byte Unicode characters
  syntax:
    content: protected int _minorStateAfterSplit
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._nonStdToken(int)
  id: _nonStdToken(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _nonStdToken(int type)
  nameWithType: NonBlockingJsonParserBase._nonStdToken(int type)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._nonStdToken(int type)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._nonStdToken*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected final String _nonStdToken(int type)
    parameters:
    - id: type
      type: int
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._nonStdTokenType
  id: _nonStdTokenType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _nonStdTokenType
  nameWithType: NonBlockingJsonParserBase._nonStdTokenType
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._nonStdTokenType
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: When tokenizing non-standard ("odd") tokens, this is the type to consider; also works as index to actual textual representation.
  syntax:
    content: protected int _nonStdTokenType
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._padLastQuad(int,int)
  id: _padLastQuad(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _padLastQuad(int q, int bytes)
  nameWithType: NonBlockingJsonParserBase._padLastQuad(int q, int bytes)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._padLastQuad(int q, int bytes)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._padLastQuad*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Helper method needed to fix \[jackson-core\#148\], masking of 0x00 character
  syntax:
    content: protected static final int _padLastQuad(int q, int bytes)
    parameters:
    - id: q
      type: int
    - id: bytes
      type: int
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._pending32
  id: _pending32
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _pending32
  nameWithType: NonBlockingJsonParserBase._pending32
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._pending32
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected int _pending32
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._pendingBytes
  id: _pendingBytes
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _pendingBytes
  nameWithType: NonBlockingJsonParserBase._pendingBytes
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._pendingBytes
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected int _pendingBytes
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quad1
  id: _quad1
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _quad1
  nameWithType: NonBlockingJsonParserBase._quad1
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quad1
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected int _quad1
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quadBuffer
  id: _quadBuffer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _quadBuffer
  nameWithType: NonBlockingJsonParserBase._quadBuffer
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quadBuffer
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: Temporary buffer used for name parsing.
  syntax:
    content: protected int[] _quadBuffer
    return:
      type: int[]
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quadLength
  id: _quadLength
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _quadLength
  nameWithType: NonBlockingJsonParserBase._quadLength
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quadLength
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected int _quadLength
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quoted32
  id: _quoted32
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _quoted32
  nameWithType: NonBlockingJsonParserBase._quoted32
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quoted32
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected int _quoted32
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quotedDigits
  id: _quotedDigits
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _quotedDigits
  nameWithType: NonBlockingJsonParserBase._quotedDigits
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._quotedDigits
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected int _quotedDigits
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._releaseBuffers()
  id: _releaseBuffers()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _releaseBuffers()
  nameWithType: NonBlockingJsonParserBase._releaseBuffers()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._releaseBuffers()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._releaseBuffers*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Method called to release internal buffers owned by the base reader. This may be called along with <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeInput*" data-throw-if-not-resolved="false">#_closeInput</xref> (for example, when explicitly closing this reader instance), or separately (if need be).
  syntax:
    content: protected void _releaseBuffers()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidChar(int)
  id: _reportInvalidChar(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _reportInvalidChar(int c)
  nameWithType: NonBlockingJsonParserBase._reportInvalidChar(int c)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidChar(int c)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidChar*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected void _reportInvalidChar(int c)
    parameters:
    - id: c
      type: int
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidInitial(int)
  id: _reportInvalidInitial(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _reportInvalidInitial(int mask)
  nameWithType: NonBlockingJsonParserBase._reportInvalidInitial(int mask)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidInitial(int mask)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidInitial*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected void _reportInvalidInitial(int mask)
    parameters:
    - id: mask
      type: int
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidOther(int)
  id: _reportInvalidOther(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _reportInvalidOther(int mask)
  nameWithType: NonBlockingJsonParserBase._reportInvalidOther(int mask)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidOther(int mask)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidOther*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected void _reportInvalidOther(int mask)
    parameters:
    - id: mask
      type: int
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidOther(int,int)
  id: _reportInvalidOther(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _reportInvalidOther(int mask, int ptr)
  nameWithType: NonBlockingJsonParserBase._reportInvalidOther(int mask, int ptr)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidOther(int mask, int ptr)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidOther*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected void _reportInvalidOther(int mask, int ptr)
    parameters:
    - id: mask
      type: int
    - id: ptr
      type: int
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startArrayScope()
  id: _startArrayScope()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _startArrayScope()
  nameWithType: NonBlockingJsonParserBase._startArrayScope()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startArrayScope()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startArrayScope*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected final JsonToken _startArrayScope()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startObjectScope()
  id: _startObjectScope()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _startObjectScope()
  nameWithType: NonBlockingJsonParserBase._startObjectScope()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startObjectScope()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startObjectScope*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected final JsonToken _startObjectScope()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._symbols
  id: _symbols
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _symbols
  nameWithType: NonBlockingJsonParserBase._symbols
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._symbols
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: Symbol table that contains field names encountered so far
  syntax:
    content: protected final ByteQuadsCanonicalizer _symbols
    return:
      type: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._updateTokenLocation()
  id: _updateTokenLocation()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _updateTokenLocation()
  nameWithType: NonBlockingJsonParserBase._updateTokenLocation()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._updateTokenLocation()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._updateTokenLocation*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected final void _updateTokenLocation()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueComplete(com.fasterxml.jackson.core.JsonToken)
  id: _valueComplete(com.fasterxml.jackson.core.JsonToken)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _valueComplete(JsonToken t)
  nameWithType: NonBlockingJsonParserBase._valueComplete(JsonToken t)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueComplete(JsonToken t)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueComplete*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected final JsonToken _valueComplete(JsonToken t)
    parameters:
    - id: t
      type: com.fasterxml.jackson.core.JsonToken
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueCompleteInt(int,java.lang.String)
  id: _valueCompleteInt(int,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _valueCompleteInt(int value, String asText)
  nameWithType: NonBlockingJsonParserBase._valueCompleteInt(int value, String asText)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueCompleteInt(int value, String asText)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueCompleteInt*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected final JsonToken _valueCompleteInt(int value, String asText)
    parameters:
    - id: value
      type: int
    - id: asText
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueNonStdNumberComplete(int)
  id: _valueNonStdNumberComplete(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: _valueNonStdNumberComplete(int type)
  nameWithType: NonBlockingJsonParserBase._valueNonStdNumberComplete(int type)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueNonStdNumberComplete(int type)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueNonStdNumberComplete*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected final JsonToken _valueNonStdNumberComplete(int type)
    parameters:
    - id: type
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.canParseAsync()
  id: canParseAsync()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: canParseAsync()
  nameWithType: NonBlockingJsonParserBase.canParseAsync()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.canParseAsync()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.canParseAsync*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: >-
    Method that can be called to determine if this parser instance uses non-blocking ("asynchronous") input access for decoding or not. Access mode is determined by earlier calls via <xref uid="com.fasterxml.jackson.core.JsonFactory" data-throw-if-not-resolved="false">JsonFactory</xref>; it may not be changed after construction.


    If non-blocking decoding is u (@code true\}, it is possible to call <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getNonBlockingInputFeeder*" data-throw-if-not-resolved="false">#getNonBlockingInputFeeder()</xref> to obtain object to use for feeding input; otherwise (`false` returned) input is read by blocking
  syntax:
    content: public boolean canParseAsync()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  id: getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: getBinaryValue(Base64Variant b64variant)
  nameWithType: NonBlockingJsonParserBase.getBinaryValue(Base64Variant b64variant)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getBinaryValue(Base64Variant b64variant)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getBinaryValue*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: >-
    Method that can be used to read (and consume -- results may not be accessible using other methods after the call) base64-encoded binary data included in the current textual JSON value. It works similar to getting String value via <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText*" data-throw-if-not-resolved="false">#getText</xref> and decoding result (except for decoding part), but should be significantly more performant.


    Note that non-decoded textual contents of the current token are not guaranteed to be accessible after this method is called. Current implementation, for example, clears up textual content during decoding. Decoded binary content, however, will be retained until parser is advanced to the next event.
  syntax:
    content: public byte[] getBinaryValue(Base64Variant b64variant)
    parameters:
    - id: b64variant
      type: com.fasterxml.jackson.core.Base64Variant
    return:
      type: byte[]
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCodec()
  id: getCodec()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: getCodec()
  nameWithType: NonBlockingJsonParserBase.getCodec()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCodec()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCodec*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Accessor for <xref uid="com.fasterxml.jackson.core.ObjectCodec" data-throw-if-not-resolved="false">ObjectCodec</xref> associated with this parser, if any. Codec is used by <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.readValueAs*" data-throw-if-not-resolved="false">#readValueAs(Class)</xref> method (and its variants).
  syntax:
    content: public ObjectCodec getCodec()
    return:
      type: com.fasterxml.jackson.core.ObjectCodec
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCurrentLocation()
  id: getCurrentLocation()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: getCurrentLocation()
  nameWithType: NonBlockingJsonParserBase.getCurrentLocation()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCurrentLocation()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCurrentLocation*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Method that returns location of the last processed character; usually for error reporting purposes
  syntax:
    content: public JsonLocation getCurrentLocation()
    return:
      type: com.fasterxml.jackson.core.JsonLocation
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getEmbeddedObject()
  id: getEmbeddedObject()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: getEmbeddedObject()
  nameWithType: NonBlockingJsonParserBase.getEmbeddedObject()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getEmbeddedObject()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getEmbeddedObject*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: >-
    Accessor that can be called if (and only if) the current token is <xref uid="com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT" data-throw-if-not-resolved="false">JsonToken#VALUE_EMBEDDED_OBJECT</xref>. For other token types, null is returned.


    Note: only some specialized parser implementations support embedding of objects (usually ones that are facades on top of non-streaming sources, such as object trees). One exception is access to binary content (whether via base64 encoding or not) which typically is accessible using this method, as well as <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getBinaryValue*" data-throw-if-not-resolved="false">#getBinaryValue()</xref>.
  syntax:
    content: public Object getEmbeddedObject()
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getInputSource()
  id: getInputSource()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: getInputSource()
  nameWithType: NonBlockingJsonParserBase.getInputSource()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getInputSource()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getInputSource*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: >-
    Method that can be used to get access to object that is used to access input being parsed; this is usually either <xref uid="java.io.InputStream" data-throw-if-not-resolved="false">InputStream</xref> or <xref uid="java.io.Reader" data-throw-if-not-resolved="false">Reader</xref>, depending on what parser was constructed with. Note that returned value may be null in some cases; including case where parser implementation does not want to exposed raw source to caller. In cases where input has been decorated, object returned here is the decorated version; this allows some level of interaction between users of parser and decorator object.


    In general use of this accessor should be considered as "last effort", i.e. only used if no other mechanism is applicable.
  syntax:
    content: public Object getInputSource()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText()
  id: getText()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: getText()
  nameWithType: NonBlockingJsonParserBase.getText()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Method for accessing textual representation of the current event; if no current event (before first call to <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.nextToken" data-throw-if-not-resolved="false">#nextToken</xref>, or after encountering end-of-input), returns null. Method can be called for any event.
  syntax:
    content: public String getText()
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText(java.io.Writer)
  id: getText(java.io.Writer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: getText(Writer writer)
  nameWithType: NonBlockingJsonParserBase.getText(Writer writer)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText(Writer writer)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: >-
    Method to read the textual representation of the current token in chunks and pass it to the given Writer. Conceptually same as calling:


    ```java

    writer.write(parser.getText());

    ```


    but should typically be more efficient as longer content does need to be combined into a single `String` to return, and write can occur directly from intermediate buffers Jackson uses.
  syntax:
    content: public int getText(Writer writer)
    parameters:
    - id: writer
      type: java.io.Writer
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextCharacters()
  id: getTextCharacters()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: getTextCharacters()
  nameWithType: NonBlockingJsonParserBase.getTextCharacters()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextCharacters()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextCharacters*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: >-
    Method similar to <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText*" data-throw-if-not-resolved="false">#getText</xref>, but that will return underlying (unmodifiable) character array that contains textual value, instead of constructing a String object to contain this information. Note, however, that:

     *  Textual contents are not guaranteed to start at index 0 (rather, call <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextOffset*" data-throw-if-not-resolved="false">#getTextOffset</xref>) to know the actual offset
     *  Length of textual contents may be less than the length of returned buffer: call <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextLength*" data-throw-if-not-resolved="false">#getTextLength</xref> for actual length of returned content.

    Note that caller **MUST NOT** modify the returned character array in any way -- doing so may corrupt current parser state and render parser instance useless.


    The only reason to call this method (over <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText*" data-throw-if-not-resolved="false">#getText</xref>) is to avoid construction of a String object (which will make a copy of contents).
  syntax:
    content: public char[] getTextCharacters()
    return:
      type: char[]
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextLength()
  id: getTextLength()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: getTextLength()
  nameWithType: NonBlockingJsonParserBase.getTextLength()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextLength()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextLength*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Accessor used with <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextCharacters*" data-throw-if-not-resolved="false">#getTextCharacters</xref>, to know length of String stored in returned buffer.
  syntax:
    content: public int getTextLength()
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextOffset()
  id: getTextOffset()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: getTextOffset()
  nameWithType: NonBlockingJsonParserBase.getTextOffset()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextOffset()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextOffset*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Accessor used with <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextCharacters*" data-throw-if-not-resolved="false">#getTextCharacters</xref>, to know offset of the first text content character within buffer.
  syntax:
    content: public int getTextOffset()
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTokenLocation()
  id: getTokenLocation()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: getTokenLocation()
  nameWithType: NonBlockingJsonParserBase.getTokenLocation()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTokenLocation()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTokenLocation*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Method that return the **starting** location of the current token; that is, position of the first character from input that starts the current token.
  syntax:
    content: public JsonLocation getTokenLocation()
    return:
      type: com.fasterxml.jackson.core.JsonLocation
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString()
  id: getValueAsString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: getValueAsString()
  nameWithType: NonBlockingJsonParserBase.getValueAsString()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Method that will try to convert value of current token to a <xref uid="java.lang.String" data-throw-if-not-resolved="false">java.lang.String</xref>. JSON Strings map naturally; scalar values get converted to their textual representation. If representation can not be converted to a String value (including structured types like Objects and Arrays and null token), default value of **null** will be returned; no exceptions are thrown.
  syntax:
    content: public String getValueAsString()
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString(java.lang.String)
  id: getValueAsString(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: getValueAsString(String defValue)
  nameWithType: NonBlockingJsonParserBase.getValueAsString(String defValue)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString(String defValue)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Method that will try to convert value of current token to a <xref uid="java.lang.String" data-throw-if-not-resolved="false">java.lang.String</xref>. JSON Strings map naturally; scalar values get converted to their textual representation. If representation can not be converted to a String value (including structured types like Objects and Arrays and null token), specified default value will be returned; no exceptions are thrown.
  syntax:
    content: public String getValueAsString(String defValue)
    parameters:
    - id: defValue
      type: java.lang.String
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.hasTextCharacters()
  id: hasTextCharacters()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: hasTextCharacters()
  nameWithType: NonBlockingJsonParserBase.hasTextCharacters()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.hasTextCharacters()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.hasTextCharacters*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: >-
    Method that can be used to determine whether calling of <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextCharacters*" data-throw-if-not-resolved="false">#getTextCharacters</xref> would be the most efficient way to access textual content for the event parser currently points to.


    Default implementation simply returns false since only actual implementation class has knowledge of its internal buffering state. Implementations are strongly encouraged to properly override this method, to allow efficient copying of content by other code.
  syntax:
    content: public boolean hasTextCharacters()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
  id: readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: readBinaryValue(Base64Variant b64variant, OutputStream out)
  nameWithType: NonBlockingJsonParserBase.readBinaryValue(Base64Variant b64variant, OutputStream out)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.readBinaryValue(Base64Variant b64variant, OutputStream out)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.readBinaryValue*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Similar to <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.readBinaryValue*" data-throw-if-not-resolved="false">#readBinaryValue(OutputStream)</xref> but allows explicitly specifying base64 variant to use.
  syntax:
    content: public int readBinaryValue(Base64Variant b64variant, OutputStream out)
    parameters:
    - id: b64variant
      type: com.fasterxml.jackson.core.Base64Variant
    - id: out
      type: java.io.OutputStream
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.releaseBuffered(java.io.OutputStream)
  id: releaseBuffered(java.io.OutputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: releaseBuffered(OutputStream out)
  nameWithType: NonBlockingJsonParserBase.releaseBuffered(OutputStream out)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.releaseBuffered(OutputStream out)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.releaseBuffered*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Method that can be called to push back any content that has been read but not consumed by the parser. This is usually done after reading all content of interest using parser. Content is released by writing it to given stream if possible; if underlying input is byte-based it can released, if not (char-based) it can not.
  syntax:
    content: public abstract int releaseBuffered(OutputStream out)
    parameters:
    - id: out
      type: java.io.OutputStream
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  id: setCodec(com.fasterxml.jackson.core.ObjectCodec)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: setCodec(ObjectCodec c)
  nameWithType: NonBlockingJsonParserBase.setCodec(ObjectCodec c)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.setCodec(ObjectCodec c)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.setCodec*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Setter that allows defining <xref uid="com.fasterxml.jackson.core.ObjectCodec" data-throw-if-not-resolved="false">ObjectCodec</xref> associated with this parser, if any. Codec is used by <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.readValueAs*" data-throw-if-not-resolved="false">#readValueAs(Class)</xref> method (and its variants).
  syntax:
    content: public void setCodec(ObjectCodec c)
    parameters:
    - id: c
      type: com.fasterxml.jackson.core.ObjectCodec
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.symbolTableForTests()
  id: symbolTableForTests()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  langs:
  - java
  name: symbolTableForTests()
  nameWithType: NonBlockingJsonParserBase.symbolTableForTests()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.symbolTableForTests()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.symbolTableForTests*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected ByteQuadsCanonicalizer symbolTableForTests()
    return:
      type: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
references:
- uid: com.fasterxml.jackson.core.io.IOContext
  name: IOContext
  nameWithType: IOContext
  fullName: com.fasterxml.jackson.core.io.IOContext
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  name: ByteQuadsCanonicalizer
  nameWithType: ByteQuadsCanonicalizer
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NonBlockingJsonParserBase*
  name: NonBlockingJsonParserBase
  nameWithType: NonBlockingJsonParserBase.NonBlockingJsonParserBase
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.NonBlockingJsonParserBase
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.ObjectCodec
  name: ObjectCodec
  nameWithType: ObjectCodec
  fullName: com.fasterxml.jackson.core.ObjectCodec
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCodec*
  name: getCodec
  nameWithType: NonBlockingJsonParserBase.getCodec
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCodec
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.setCodec*
  name: setCodec
  nameWithType: NonBlockingJsonParserBase.setCodec
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.setCodec
  package: com.fasterxml.jackson.core.json.async
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.canParseAsync*
  name: canParseAsync
  nameWithType: NonBlockingJsonParserBase.canParseAsync
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.canParseAsync
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.symbolTableForTests*
  name: symbolTableForTests
  nameWithType: NonBlockingJsonParserBase.symbolTableForTests
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.symbolTableForTests
  package: com.fasterxml.jackson.core.json.async
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.io.OutputStream
  spec.java:
  - uid: java.io.OutputStream
    name: OutputStream
    fullName: java.io.OutputStream
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.releaseBuffered*
  name: releaseBuffered
  nameWithType: NonBlockingJsonParserBase.releaseBuffered
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.releaseBuffered
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._releaseBuffers*
  name: _releaseBuffers
  nameWithType: NonBlockingJsonParserBase._releaseBuffers
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._releaseBuffers
  package: com.fasterxml.jackson.core.json.async
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getInputSource*
  name: getInputSource
  nameWithType: NonBlockingJsonParserBase.getInputSource
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getInputSource
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeInput*
  name: _closeInput
  nameWithType: NonBlockingJsonParserBase._closeInput
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeInput
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.hasTextCharacters*
  name: hasTextCharacters
  nameWithType: NonBlockingJsonParserBase.hasTextCharacters
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.hasTextCharacters
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.JsonLocation
  name: JsonLocation
  nameWithType: JsonLocation
  fullName: com.fasterxml.jackson.core.JsonLocation
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCurrentLocation*
  name: getCurrentLocation
  nameWithType: NonBlockingJsonParserBase.getCurrentLocation
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCurrentLocation
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTokenLocation*
  name: getTokenLocation
  nameWithType: NonBlockingJsonParserBase.getTokenLocation
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTokenLocation
  package: com.fasterxml.jackson.core.json.async
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText*
  name: getText
  nameWithType: NonBlockingJsonParserBase.getText
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.JsonToken
  name: JsonToken
  nameWithType: JsonToken
  fullName: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._getText2*
  name: _getText2
  nameWithType: NonBlockingJsonParserBase._getText2
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._getText2
  package: com.fasterxml.jackson.core.json.async
- uid: java.io.Writer
  spec.java:
  - uid: java.io.Writer
    name: Writer
    fullName: java.io.Writer
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString*
  name: getValueAsString
  nameWithType: NonBlockingJsonParserBase.getValueAsString
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString
  package: com.fasterxml.jackson.core.json.async
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextCharacters*
  name: getTextCharacters
  nameWithType: NonBlockingJsonParserBase.getTextCharacters
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextCharacters
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextLength*
  name: getTextLength
  nameWithType: NonBlockingJsonParserBase.getTextLength
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextLength
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextOffset*
  name: getTextOffset
  nameWithType: NonBlockingJsonParserBase.getTextOffset
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextOffset
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.Base64Variant
  name: Base64Variant
  nameWithType: Base64Variant
  fullName: com.fasterxml.jackson.core.Base64Variant
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getBinaryValue*
  name: getBinaryValue
  nameWithType: NonBlockingJsonParserBase.getBinaryValue
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getBinaryValue
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.readBinaryValue*
  name: readBinaryValue
  nameWithType: NonBlockingJsonParserBase.readBinaryValue
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.readBinaryValue
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getEmbeddedObject*
  name: getEmbeddedObject
  nameWithType: NonBlockingJsonParserBase.getEmbeddedObject
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getEmbeddedObject
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startArrayScope*
  name: _startArrayScope
  nameWithType: NonBlockingJsonParserBase._startArrayScope
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startArrayScope
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startObjectScope*
  name: _startObjectScope
  nameWithType: NonBlockingJsonParserBase._startObjectScope
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startObjectScope
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeArrayScope*
  name: _closeArrayScope
  nameWithType: NonBlockingJsonParserBase._closeArrayScope
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeArrayScope
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeObjectScope*
  name: _closeObjectScope
  nameWithType: NonBlockingJsonParserBase._closeObjectScope
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeObjectScope
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.JsonParseException
  name: JsonParseException
  nameWithType: JsonParseException
  fullName: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName*
  name: _findName
  nameWithType: NonBlockingJsonParserBase._findName
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName
  package: com.fasterxml.jackson.core.json.async
- uid: int[]
  spec.java:
  - uid: int
    name: int
    fullName: int
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._addName*
  name: _addName
  nameWithType: NonBlockingJsonParserBase._addName
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._addName
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._padLastQuad*
  name: _padLastQuad
  nameWithType: NonBlockingJsonParserBase._padLastQuad
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._padLastQuad
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._eofAsNextToken*
  name: _eofAsNextToken
  nameWithType: NonBlockingJsonParserBase._eofAsNextToken
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._eofAsNextToken
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._fieldComplete*
  name: _fieldComplete
  nameWithType: NonBlockingJsonParserBase._fieldComplete
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._fieldComplete
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueComplete*
  name: _valueComplete
  nameWithType: NonBlockingJsonParserBase._valueComplete
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueComplete
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueCompleteInt*
  name: _valueCompleteInt
  nameWithType: NonBlockingJsonParserBase._valueCompleteInt
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueCompleteInt
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueNonStdNumberComplete*
  name: _valueNonStdNumberComplete
  nameWithType: NonBlockingJsonParserBase._valueNonStdNumberComplete
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueNonStdNumberComplete
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._nonStdToken*
  name: _nonStdToken
  nameWithType: NonBlockingJsonParserBase._nonStdToken
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._nonStdToken
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._updateTokenLocation*
  name: _updateTokenLocation
  nameWithType: NonBlockingJsonParserBase._updateTokenLocation
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._updateTokenLocation
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidChar*
  name: _reportInvalidChar
  nameWithType: NonBlockingJsonParserBase._reportInvalidChar
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidChar
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidInitial*
  name: _reportInvalidInitial
  nameWithType: NonBlockingJsonParserBase._reportInvalidInitial
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidInitial
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidOther*
  name: _reportInvalidOther
  nameWithType: NonBlockingJsonParserBase._reportInvalidOther
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidOther
  package: com.fasterxml.jackson.core.json.async
- uid: java.lang.String[]
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '[]'
    fullName: '[]'
- uid: double[]
  spec.java:
  - uid: double
    name: double
    fullName: double
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.base.ParserBase
  name: ParserBase
  nameWithType: ParserBase
  fullName: com.fasterxml.jackson.core.base.ParserBase
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._asciiBytes(java.lang.String)
  name: ParserMinimalBase._asciiBytes(String)
  nameWithType: ParserMinimalBase._asciiBytes(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._asciiBytes(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.loadMoreGuaranteed()
  name: ParserBase.loadMoreGuaranteed()
  nameWithType: ParserBase.loadMoreGuaranteed()
  fullName: com.fasterxml.jackson.core.base.ParserBase.loadMoreGuaranteed()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.core.base.ParserBase.getTokenCharacterOffset()
  name: ParserBase.getTokenCharacterOffset()
  nameWithType: ParserBase.getTokenCharacterOffset()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getTokenCharacterOffset()
- uid: com.fasterxml.jackson.core.JsonParser.canReadTypeId()
  name: JsonParser.canReadTypeId()
  nameWithType: JsonParser.canReadTypeId()
  fullName: com.fasterxml.jackson.core.JsonParser.canReadTypeId()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue()
  name: ParserMinimalBase._reportInvalidEOFInValue()
  nameWithType: ParserMinimalBase._reportInvalidEOFInValue()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue()
- uid: com.fasterxml.jackson.core.base.ParserBase._getByteArrayBuilder()
  name: ParserBase._getByteArrayBuilder()
  nameWithType: ParserBase._getByteArrayBuilder()
  fullName: com.fasterxml.jackson.core.base.ParserBase._getByteArrayBuilder()
- uid: com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean,int,int,int)
  name: ParserBase.resetFloat(boolean,int,int,int)
  nameWithType: ParserBase.resetFloat(boolean,int,int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean,int,int,int)
- uid: com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)
  name: JsonParser.readBinaryValue(OutputStream)
  nameWithType: JsonParser.readBinaryValue(OutputStream)
  fullName: com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong()
  name: ParserMinimalBase.reportOverflowLong()
  nameWithType: ParserMinimalBase.reportOverflowLong()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong()
- uid: com.fasterxml.jackson.core.JsonParser.getObjectId()
  name: JsonParser.getObjectId()
  nameWithType: JsonParser.getObjectId()
  fullName: com.fasterxml.jackson.core.JsonParser.getObjectId()
- uid: com.fasterxml.jackson.core.JsonParser.canParseAsync()
  name: JsonParser.canParseAsync()
  nameWithType: JsonParser.canParseAsync()
  fullName: com.fasterxml.jackson.core.JsonParser.canParseAsync()
- uid: com.fasterxml.jackson.core.base.ParserBase.getDoubleValue()
  name: ParserBase.getDoubleValue()
  nameWithType: ParserBase.getDoubleValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getDoubleValue()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)
  name: ParserMinimalBase._getCharDesc(int)
  nameWithType: ParserMinimalBase._getCharDesc(int)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)
- uid: com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()
  name: ParserBase.convertNumberToBigInteger()
  nameWithType: ParserBase.convertNumberToBigInteger()
  fullName: com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)
  name: ParserMinimalBase.getValueAsInt(int)
  nameWithType: ParserMinimalBase.getValueAsInt(int)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getText()
  name: ParserMinimalBase.getText()
  nameWithType: ParserMinimalBase.getText()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getText()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken)
  name: ParserMinimalBase._reportInvalidEOFInValue(JsonToken)
  nameWithType: ParserMinimalBase._reportInvalidEOFInValue(JsonToken)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String)
  name: ParserMinimalBase.reportOverflowLong(String)
  nameWithType: ParserMinimalBase.reportOverflowLong(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.getCurrentName()
  name: ParserBase.getCurrentName()
  nameWithType: ParserBase.getCurrentName()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getCurrentName()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.base.ParserBase.getCurrentLocation()
  name: ParserBase.getCurrentLocation()
  nameWithType: ParserBase.getCurrentLocation()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getCurrentLocation()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.core.base.ParserBase._finishString()
  name: ParserBase._finishString()
  nameWithType: ParserBase._finishString()
  fullName: com.fasterxml.jackson.core.base.ParserBase._finishString()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()
  name: ParserMinimalBase._reportInvalidEOF()
  nameWithType: ParserMinimalBase._reportInvalidEOF()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()
- uid: com.fasterxml.jackson.core.base.ParserBase._checkStdFeatureChanges(int,int)
  name: ParserBase._checkStdFeatureChanges(int,int)
  nameWithType: ParserBase._checkStdFeatureChanges(int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase._checkStdFeatureChanges(int,int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()
  name: ParserMinimalBase.nextValue()
  nameWithType: ParserMinimalBase.nextValue()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()
- uid: com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,int,int)
  name: ParserBase._decodeBase64Escape(Base64Variant,int,int)
  nameWithType: ParserBase._decodeBase64Escape(Base64Variant,int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,int,int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._longNumberDesc(java.lang.String)
  name: ParserMinimalBase._longNumberDesc(String)
  nameWithType: ParserMinimalBase._longNumberDesc(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._longNumberDesc(java.lang.String)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._longIntegerDesc(java.lang.String)
  name: ParserMinimalBase._longIntegerDesc(String)
  nameWithType: ParserMinimalBase._longIntegerDesc(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._longIntegerDesc(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.getBooleanValue()
  name: JsonParser.getBooleanValue()
  nameWithType: JsonParser.getBooleanValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getBooleanValue()
- uid: com.fasterxml.jackson.core.base.ParserBase.hasTextCharacters()
  name: ParserBase.hasTextCharacters()
  nameWithType: ParserBase.hasTextCharacters()
  fullName: com.fasterxml.jackson.core.base.ParserBase.hasTextCharacters()
- uid: com.fasterxml.jackson.core.JsonParser.getBinaryValue()
  name: JsonParser.getBinaryValue()
  nameWithType: JsonParser.getBinaryValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getBinaryValue()
- uid: com.fasterxml.jackson.core.JsonParser.canReadObjectId()
  name: JsonParser.canReadObjectId()
  nameWithType: JsonParser.canReadObjectId()
  fullName: com.fasterxml.jackson.core.JsonParser.canReadObjectId()
- uid: com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int)
  name: ParserBase._decodeBase64Escape(Base64Variant,char,int)
  nameWithType: ParserBase._decodeBase64Escape(Base64Variant,char,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class<?>)
  name: ParserMinimalBase._reportInputCoercion(String,JsonToken,Class<?>)
  nameWithType: ParserMinimalBase._reportInputCoercion(String,JsonToken,Class<?>)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class<?>)
- uid: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)
  name: JsonParser.setRequestPayloadOnError(String)
  nameWithType: JsonParser.setRequestPayloadOnError(String)
  fullName: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.getIntValue()
  name: ParserBase.getIntValue()
  nameWithType: ParserBase.getIntValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getIntValue()
- uid: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
  name: JsonParser.isEnabled(StreamReadFeature)
  nameWithType: JsonParser.isEnabled(StreamReadFeature)
  fullName: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
- uid: com.fasterxml.jackson.core.base.ParserBase.getLongValue()
  name: ParserBase.getLongValue()
  nameWithType: ParserBase.getLongValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getLongValue()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)
  name: JsonParser.<T>readValueAs(TypeReference<?>)
  nameWithType: JsonParser.<T>readValueAs(TypeReference<?>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)
- uid: com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String,double)
  name: ParserBase.resetAsNaN(String,double)
  nameWithType: ParserBase.resetAsNaN(String,double)
  fullName: com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String,double)
- uid: com.fasterxml.jackson.core.base.ParserBase._closeInput()
  name: ParserBase._closeInput()
  nameWithType: ParserBase._closeInput()
  fullName: com.fasterxml.jackson.core.base.ParserBase._closeInput()
- uid: com.fasterxml.jackson.core.base.ParserBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  name: ParserBase.getBinaryValue(Base64Variant)
  nameWithType: ParserBase.getBinaryValue(Base64Variant)
  fullName: com.fasterxml.jackson.core.base.ParserBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
- uid: com.fasterxml.jackson.core.JsonParser.getInputSource()
  name: JsonParser.getInputSource()
  nameWithType: JsonParser.getInputSource()
  fullName: com.fasterxml.jackson.core.JsonParser.getInputSource()
- uid: com.fasterxml.jackson.core.base.ParserBase.getTokenColumnNr()
  name: ParserBase.getTokenColumnNr()
  nameWithType: ParserBase.getTokenColumnNr()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getTokenColumnNr()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal()
  name: ParserMinimalBase._throwInternal()
  nameWithType: ParserMinimalBase._throwInternal()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal()
- uid: com.fasterxml.jackson.core.base.ParserBase._parseIntValue()
  name: ParserBase._parseIntValue()
  nameWithType: ParserBase._parseIntValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase._parseIntValue()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(java.lang.String,java.lang.Throwable)
  name: ParserMinimalBase._wrapError(String,Throwable)
  nameWithType: ParserMinimalBase._wrapError(String,Throwable)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(java.lang.String,java.lang.Throwable)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)
  name: ParserMinimalBase._reportError(String)
  nameWithType: ParserMinimalBase._reportError(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportMissingRootWS(int)
  name: ParserMinimalBase._reportMissingRootWS(int)
  nameWithType: ParserMinimalBase._reportMissingRootWS(int)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportMissingRootWS(int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong()
  name: ParserMinimalBase.getValueAsLong()
  nameWithType: ParserMinimalBase.getValueAsLong()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()
  name: ParserMinimalBase.isExpectedStartArrayToken()
  nameWithType: ParserMinimalBase.isExpectedStartArrayToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken()
  name: ParserMinimalBase.getLastClearedToken()
  nameWithType: ParserMinimalBase.getLastClearedToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)
  name: JsonParser.<T>readValuesAs(Class<T>)
  nameWithType: JsonParser.<T>readValuesAs(Class<T>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)
- uid: com.fasterxml.jackson.core.base.ParserBase._handleEOF()
  name: ParserBase._handleEOF()
  nameWithType: ParserBase._handleEOF()
  fullName: com.fasterxml.jackson.core.base.ParserBase._handleEOF()
- uid: com.fasterxml.jackson.core.JsonParser.getCodec()
  name: JsonParser.getCodec()
  nameWithType: JsonParser.getCodec()
  fullName: com.fasterxml.jackson.core.JsonParser.getCodec()
- uid: com.fasterxml.jackson.core.JsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  name: JsonParser.setCodec(ObjectCodec)
  nameWithType: JsonParser.setCodec(ObjectCodec)
  fullName: com.fasterxml.jackson.core.JsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)
- uid: com.fasterxml.jackson.core.JsonParser.currentName()
  name: JsonParser.currentName()
  nameWithType: JsonParser.currentName()
  fullName: com.fasterxml.jackson.core.JsonParser.currentName()
- uid: com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()
  name: ParserBase.convertNumberToBigDecimal()
  nameWithType: ParserBase.convertNumberToBigDecimal()
  fullName: com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken()
  name: ParserMinimalBase.hasCurrentToken()
  nameWithType: ParserMinimalBase.hasCurrentToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken()
  name: ParserMinimalBase.clearCurrentToken()
  nameWithType: ParserMinimalBase.clearCurrentToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken()
- uid: com.fasterxml.jackson.core.JsonParser.requiresCustomCodec()
  name: JsonParser.requiresCustomCodec()
  nameWithType: JsonParser.requiresCustomCodec()
  fullName: com.fasterxml.jackson.core.JsonParser.requiresCustomCodec()
- uid: com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()
  name: JsonParser._reportUnsupportedOperation()
  nameWithType: JsonParser._reportUnsupportedOperation()
  fullName: com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object,java.lang.Object)
  name: ParserMinimalBase._reportError(String,Object,Object)
  nameWithType: ParserMinimalBase._reportError(String,Object,Object)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object,java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonParser.getValueAsDouble()
  name: JsonParser.getValueAsDouble()
  nameWithType: JsonParser.getValueAsDouble()
  fullName: com.fasterxml.jackson.core.JsonParser.getValueAsDouble()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt()
  name: ParserMinimalBase.getValueAsInt()
  nameWithType: ParserMinimalBase.getValueAsInt()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)
  name: ParserMinimalBase._reportInvalidEOF(String)
  nameWithType: ParserMinimalBase._reportInvalidEOF(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase._throwUnquotedSpace(int,java.lang.String)
  name: ParserBase._throwUnquotedSpace(int,String)
  nameWithType: ParserBase._throwUnquotedSpace(int,String)
  fullName: com.fasterxml.jackson.core.base.ParserBase._throwUnquotedSpace(int,java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.getTokenLocation()
  name: ParserBase.getTokenLocation()
  nameWithType: ParserBase.getTokenLocation()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getTokenLocation()
- uid: com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)
  name: ParserBase.overrideCurrentName(String)
  nameWithType: ParserBase.overrideCurrentName(String)
  fullName: com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()
  name: ParserBase.getDecimalValue()
  nameWithType: ParserBase.getDecimalValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()
- uid: com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int)
  name: ParserBase.reportInvalidBase64Char(Base64Variant,int,int)
  nameWithType: ParserBase.reportInvalidBase64Char(Base64Variant,int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int)
- uid: com.fasterxml.jackson.core.base.ParserBase._validJsonTokenList()
  name: ParserBase._validJsonTokenList()
  nameWithType: ParserBase._validJsonTokenList()
  fullName: com.fasterxml.jackson.core.base.ParserBase._validJsonTokenList()
- uid: com.fasterxml.jackson.core.base.ParserBase.reset(boolean,int,int,int)
  name: ParserBase.reset(boolean,int,int,int)
  nameWithType: ParserBase.reset(boolean,int,int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.reset(boolean,int,int,int)
- uid: com.fasterxml.jackson.core.JsonParser.nextBooleanValue()
  name: JsonParser.nextBooleanValue()
  nameWithType: JsonParser.nextBooleanValue()
  fullName: com.fasterxml.jackson.core.JsonParser.nextBooleanValue()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.currentToken()
  name: ParserMinimalBase.currentToken()
  nameWithType: ParserMinimalBase.currentToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.currentToken()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()
  name: JsonParser.<T>readValueAsTree()
  nameWithType: JsonParser.<T>readValueAsTree()
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextOffset()
  name: ParserMinimalBase.getTextOffset()
  nameWithType: ParserMinimalBase.getTextOffset()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextOffset()
- uid: com.fasterxml.jackson.core.JsonParser.getTypeId()
  name: JsonParser.getTypeId()
  nameWithType: JsonParser.getTypeId()
  fullName: com.fasterxml.jackson.core.JsonParser.getTypeId()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextLength()
  name: ParserMinimalBase.getTextLength()
  nameWithType: ParserMinimalBase.getTextLength()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextLength()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()
  name: ParserMinimalBase.skipChildren()
  nameWithType: ParserMinimalBase.skipChildren()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()
- uid: com.fasterxml.jackson.core.base.ParserBase.version()
  name: ParserBase.version()
  nameWithType: ParserBase.version()
  fullName: com.fasterxml.jackson.core.base.ParserBase.version()
- uid: com.fasterxml.jackson.core.base.ParserBase.enable(com.fasterxml.jackson.core.JsonParser.Feature)
  name: ParserBase.enable(JsonParser.Feature)
  nameWithType: ParserBase.enable(JsonParser.Feature)
  fullName: com.fasterxml.jackson.core.base.ParserBase.enable(com.fasterxml.jackson.core.JsonParser.Feature)
- uid: com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()
  name: JsonParser.getEmbeddedObject()
  nameWithType: JsonParser.getEmbeddedObject()
  fullName: com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()
- uid: com.fasterxml.jackson.core.base.ParserBase._handleUnrecognizedCharacterEscape(char)
  name: ParserBase._handleUnrecognizedCharacterEscape(char)
  nameWithType: ParserBase._handleUnrecognizedCharacterEscape(char)
  fullName: com.fasterxml.jackson.core.base.ParserBase._handleUnrecognizedCharacterEscape(char)
- uid: com.fasterxml.jackson.core.base.ParserBase.disable(com.fasterxml.jackson.core.JsonParser.Feature)
  name: ParserBase.disable(JsonParser.Feature)
  nameWithType: ParserBase.disable(JsonParser.Feature)
  fullName: com.fasterxml.jackson.core.base.ParserBase.disable(com.fasterxml.jackson.core.JsonParser.Feature)
- uid: com.fasterxml.jackson.core.JsonParser.nextIntValue(int)
  name: JsonParser.nextIntValue(int)
  nameWithType: JsonParser.nextIntValue(int)
  fullName: com.fasterxml.jackson.core.JsonParser.nextIntValue(int)
- uid: com.fasterxml.jackson.core.JsonParser.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
  name: JsonParser.canUseSchema(FormatSchema)
  nameWithType: JsonParser.canUseSchema(FormatSchema)
  fullName: com.fasterxml.jackson.core.JsonParser.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
- uid: com.fasterxml.jackson.core.base.ParserBase.isClosed()
  name: ParserBase.isClosed()
  nameWithType: ParserBase.isClosed()
  fullName: com.fasterxml.jackson.core.base.ParserBase.isClosed()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)
  name: JsonParser.<T>readValueAs(Class<T>)
  nameWithType: JsonParser.<T>readValueAs(Class<T>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)
- uid: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)
  name: JsonParser.setRequestPayloadOnError(RequestPayload)
  nameWithType: JsonParser.setRequestPayloadOnError(RequestPayload)
  fullName: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)
- uid: com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue()
  name: ParserBase.getBigIntegerValue()
  nameWithType: ParserBase.getBigIntegerValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue()
- uid: com.fasterxml.jackson.core.base.ParserBase.setCurrentValue(java.lang.Object)
  name: ParserBase.setCurrentValue(Object)
  nameWithType: ParserBase.setCurrentValue(Object)
  fullName: com.fasterxml.jackson.core.base.ParserBase.setCurrentValue(java.lang.Object)
- uid: com.fasterxml.jackson.core.base.ParserBase.overrideStdFeatures(int,int)
  name: ParserBase.overrideStdFeatures(int,int)
  nameWithType: ParserBase.overrideStdFeatures(int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.overrideStdFeatures(int,int)
- uid: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)
  name: JsonParser.releaseBuffered(OutputStream)
  nameWithType: JsonParser.releaseBuffered(OutputStream)
  fullName: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)
- uid: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  name: JsonParser.isEnabled(JsonParser.Feature)
  nameWithType: JsonParser.isEnabled(JsonParser.Feature)
  fullName: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
- uid: com.fasterxml.jackson.core.JsonParser.getText(java.io.Writer)
  name: JsonParser.getText(Writer)
  nameWithType: JsonParser.getText(Writer)
  fullName: com.fasterxml.jackson.core.JsonParser.getText(java.io.Writer)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken()
  name: ParserMinimalBase.getCurrentToken()
  nameWithType: ParserMinimalBase.getCurrentToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken()
- uid: com.fasterxml.jackson.core.base.ParserBase.getCurrentValue()
  name: ParserBase.getCurrentValue()
  nameWithType: ParserBase.getCurrentValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getCurrentValue()
- uid: com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()
  name: ParserBase.convertNumberToDouble()
  nameWithType: ParserBase.convertNumberToDouble()
  fullName: com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()
- uid: com.fasterxml.jackson.core.JsonParser.nextFieldName()
  name: JsonParser.nextFieldName()
  nameWithType: JsonParser.nextFieldName()
  fullName: com.fasterxml.jackson.core.JsonParser.nextFieldName()
- uid: com.fasterxml.jackson.core.base.ParserBase.getNumberType()
  name: ParserBase.getNumberType()
  nameWithType: ParserBase.getNumberType()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getNumberType()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.core.base.ParserBase.getTokenLineNr()
  name: ParserBase.getTokenLineNr()
  nameWithType: ParserBase.getTokenLineNr()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getTokenLineNr()
- uid: com.fasterxml.jackson.core.JsonParser._codec()
  name: JsonParser._codec()
  nameWithType: JsonParser._codec()
  fullName: com.fasterxml.jackson.core.JsonParser._codec()
- uid: com.fasterxml.jackson.core.JsonParser.nextTextValue()
  name: JsonParser.nextTextValue()
  nameWithType: JsonParser.nextTextValue()
  fullName: com.fasterxml.jackson.core.JsonParser.nextTextValue()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object)
  name: ParserMinimalBase._reportError(String,Object)
  nameWithType: ParserMinimalBase._reportError(String,Object)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId()
  name: ParserMinimalBase.currentTokenId()
  nameWithType: ParserMinimalBase.currentTokenId()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId()
- uid: com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
  name: JsonParser.readBinaryValue(Base64Variant,OutputStream)
  nameWithType: JsonParser.readBinaryValue(Base64Variant,OutputStream)
  fullName: com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._ascii(byte[])
  name: ParserMinimalBase._ascii(byte[])
  nameWithType: ParserMinimalBase._ascii(byte[])
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._ascii(byte[])
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
  name: ParserMinimalBase._decodeBase64(String,ByteArrayBuilder,Base64Variant)
  nameWithType: ParserMinimalBase._decodeBase64(String,ByteArrayBuilder,Base64Variant)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
- uid: com.fasterxml.jackson.core.JsonParser.finishToken()
  name: JsonParser.finishToken()
  nameWithType: JsonParser.finishToken()
  fullName: com.fasterxml.jackson.core.JsonParser.finishToken()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)
  name: ParserMinimalBase.getValueAsBoolean(boolean)
  nameWithType: ParserMinimalBase.getValueAsBoolean(boolean)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)
- uid: com.fasterxml.jackson.core.JsonParser.nextLongValue(long)
  name: JsonParser.nextLongValue(long)
  nameWithType: JsonParser.nextLongValue(long)
  fullName: com.fasterxml.jackson.core.JsonParser.nextLongValue(long)
- uid: com.fasterxml.jackson.core.base.ParserBase.loadMore()
  name: ParserBase.loadMore()
  nameWithType: ParserBase.loadMore()
  fullName: com.fasterxml.jackson.core.base.ParserBase.loadMore()
- uid: com.fasterxml.jackson.core.base.ParserBase.close()
  name: ParserBase.close()
  nameWithType: ParserBase.close()
  fullName: com.fasterxml.jackson.core.base.ParserBase.close()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportUnexpectedNumberChar(int,java.lang.String)
  name: ParserMinimalBase.reportUnexpectedNumberChar(int,String)
  nameWithType: ParserMinimalBase.reportUnexpectedNumberChar(int,String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportUnexpectedNumberChar(int,java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.getByteValue()
  name: JsonParser.getByteValue()
  nameWithType: JsonParser.getByteValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getByteValue()
- uid: com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()
  name: JsonParser.getNonBlockingInputFeeder()
  nameWithType: JsonParser.getNonBlockingInputFeeder()
  fullName: com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)
  name: ParserMinimalBase._throwInvalidSpace(int)
  nameWithType: ParserMinimalBase._throwInvalidSpace(int)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._hasTextualNull(java.lang.String)
  name: ParserMinimalBase._hasTextualNull(String)
  nameWithType: ParserMinimalBase._hasTextualNull(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._hasTextualNull(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt()
  name: ParserMinimalBase.reportOverflowInt()
  nameWithType: ParserMinimalBase.reportOverflowInt()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt()
- uid: com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()
  name: ParserBase.convertNumberToLong()
  nameWithType: ParserBase.convertNumberToLong()
  fullName: com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()
- uid: com.fasterxml.jackson.core.base.ParserBase._eofAsNextChar()
  name: ParserBase._eofAsNextChar()
  nameWithType: ParserBase._eofAsNextChar()
  fullName: com.fasterxml.jackson.core.base.ParserBase._eofAsNextChar()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  name: ParserMinimalBase._reportInvalidEOF(String,JsonToken)
  nameWithType: ParserMinimalBase._reportInvalidEOF(String,JsonToken)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean,int)
  name: ParserBase.resetInt(boolean,int)
  nameWithType: ParserBase.resetInt(boolean,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean,int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)
  name: ParserMinimalBase.getValueAsString(String)
  nameWithType: ParserMinimalBase.getValueAsString(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.getParsingContext()
  name: ParserBase.getParsingContext()
  nameWithType: ParserBase.getParsingContext()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getParsingContext()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()
  name: ParserMinimalBase.nextToken()
  nameWithType: ParserMinimalBase.nextToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()
- uid: com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()
  name: ParserBase._releaseBuffers()
  nameWithType: ParserBase._releaseBuffers()
  fullName: com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()
- uid: com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)
  name: ParserBase._parseNumericValue(int)
  nameWithType: ParserBase._parseNumericValue(int)
  fullName: com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters()
  name: ParserMinimalBase.getTextCharacters()
  nameWithType: ParserMinimalBase.getTextCharacters()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters()
- uid: com.fasterxml.jackson.core.base.ParserBase.growArrayBy(int[],int)
  name: ParserBase.growArrayBy(int[],int)
  nameWithType: ParserBase.growArrayBy(int[],int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.growArrayBy(int[],int)
- uid: com.fasterxml.jackson.core.JsonParser.getSchema()
  name: JsonParser.getSchema()
  nameWithType: JsonParser.getSchema()
  fullName: com.fasterxml.jackson.core.JsonParser.getSchema()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String,java.lang.Throwable)
  name: ParserMinimalBase._constructError(String,Throwable)
  nameWithType: ParserMinimalBase._constructError(String,Throwable)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String,java.lang.Throwable)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentTokenId()
  name: ParserMinimalBase.getCurrentTokenId()
  nameWithType: ParserMinimalBase.getCurrentTokenId()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentTokenId()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  name: ParserMinimalBase.reportOverflowInt(String,JsonToken)
  nameWithType: ParserMinimalBase.reportOverflowInt(String,JsonToken)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String,com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
  name: JsonParser.configure(JsonParser.Feature,boolean)
  nameWithType: JsonParser.configure(JsonParser.Feature,boolean)
  fullName: com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.hasToken(com.fasterxml.jackson.core.JsonToken)
  name: ParserMinimalBase.hasToken(JsonToken)
  nameWithType: ParserMinimalBase.hasToken(JsonToken)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.hasToken(com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int,char)
  name: ParserBase._reportMismatchedEndMarker(int,char)
  nameWithType: ParserBase._reportMismatchedEndMarker(int,char)
  fullName: com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int,char)
- uid: com.fasterxml.jackson.core.base.ParserBase.setFeatureMask(int)
  name: ParserBase.setFeatureMask(int)
  nameWithType: ParserBase.setFeatureMask(int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.setFeatureMask(int)
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)
  name: JsonParser.<T>readValuesAs(TypeReference<T>)
  nameWithType: JsonParser.<T>readValuesAs(TypeReference<T>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)
- uid: com.fasterxml.jackson.core.JsonParser.overrideFormatFeatures(int,int)
  name: JsonParser.overrideFormatFeatures(int,int)
  nameWithType: JsonParser.overrideFormatFeatures(int,int)
  fullName: com.fasterxml.jackson.core.JsonParser.overrideFormatFeatures(int,int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String)
  name: ParserMinimalBase.reportOverflowInt(String)
  nameWithType: ParserMinimalBase.reportOverflowInt(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase._getSourceReference()
  name: ParserBase._getSourceReference()
  nameWithType: ParserBase._getSourceReference()
  fullName: com.fasterxml.jackson.core.base.ParserBase._getSourceReference()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString()
  name: ParserMinimalBase.getValueAsString()
  nameWithType: ParserMinimalBase.getValueAsString()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartObjectToken()
  name: ParserMinimalBase.isExpectedStartObjectToken()
  nameWithType: ParserMinimalBase.isExpectedStartObjectToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartObjectToken()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)
  name: ParserMinimalBase.getValueAsDouble(double)
  nameWithType: ParserMinimalBase.getValueAsDouble(double)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)
- uid: com.fasterxml.jackson.core.JsonParser.getFeatureMask()
  name: JsonParser.getFeatureMask()
  nameWithType: JsonParser.getFeatureMask()
  fullName: com.fasterxml.jackson.core.JsonParser.getFeatureMask()
- uid: com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()
  name: ParserBase.convertNumberToInt()
  nameWithType: ParserBase.convertNumberToInt()
  fullName: com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  name: ParserMinimalBase.reportOverflowLong(String,JsonToken)
  nameWithType: ParserMinimalBase.reportOverflowLong(String,JsonToken)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String,com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.hasTokenId(int)
  name: ParserMinimalBase.hasTokenId(int)
  nameWithType: ParserMinimalBase.hasTokenId(int)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.hasTokenId(int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)
  name: ParserMinimalBase.getValueAsLong(long)
  nameWithType: ParserMinimalBase.getValueAsLong(long)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)
- uid: com.fasterxml.jackson.core.base.ParserBase.getFloatValue()
  name: ParserBase.getFloatValue()
  nameWithType: ParserBase.getFloatValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getFloatValue()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportInvalidNumber(java.lang.String)
  name: ParserMinimalBase.reportInvalidNumber(String)
  nameWithType: ParserMinimalBase.reportInvalidNumber(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportInvalidNumber(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)
  name: JsonParser.setSchema(FormatSchema)
  nameWithType: JsonParser.setSchema(FormatSchema)
  fullName: com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)
- uid: com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()
  name: JsonParser.getValueAsBoolean()
  nameWithType: JsonParser.getValueAsBoolean()
  fullName: com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()
- uid: com.fasterxml.jackson.core.base.ParserBase._validJsonValueList()
  name: ParserBase._validJsonValueList()
  nameWithType: ParserBase._validJsonValueList()
  fullName: com.fasterxml.jackson.core.base.ParserBase._validJsonValueList()
- uid: com.fasterxml.jackson.core.base.ParserBase._handleBase64MissingPadding(com.fasterxml.jackson.core.Base64Variant)
  name: ParserBase._handleBase64MissingPadding(Base64Variant)
  nameWithType: ParserBase._handleBase64MissingPadding(Base64Variant)
  fullName: com.fasterxml.jackson.core.base.ParserBase._handleBase64MissingPadding(com.fasterxml.jackson.core.Base64Variant)
- uid: com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)
  name: ParserBase.reportInvalidBase64Char(Base64Variant,int,int,String)
  nameWithType: ParserBase.reportInvalidBase64Char(Base64Variant,int,int,String)
  fullName: com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)
  name: JsonParser.nextFieldName(SerializableString)
  nameWithType: JsonParser.nextFieldName(SerializableString)
  fullName: com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)
- uid: com.fasterxml.jackson.core.base.ParserBase.getNumberValue()
  name: ParserBase.getNumberValue()
  nameWithType: ParserBase.getNumberValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getNumberValue()
- uid: com.fasterxml.jackson.core.JsonParser.getShortValue()
  name: JsonParser.getShortValue()
  nameWithType: JsonParser.getShortValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getShortValue()
- uid: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)
  name: JsonParser.setRequestPayloadOnError(byte[],String)
  nameWithType: JsonParser.setRequestPayloadOnError(byte[],String)
  fullName: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int,java.lang.String)
  name: ParserMinimalBase._reportUnexpectedChar(int,String)
  nameWithType: ParserMinimalBase._reportUnexpectedChar(int,String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int,java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase._decodeEscaped()
  name: ParserBase._decodeEscaped()
  nameWithType: ParserBase._decodeEscaped()
  fullName: com.fasterxml.jackson.core.base.ParserBase._decodeEscaped()
- uid: com.fasterxml.jackson.core.base.ParserBase._reportTooLongIntegral(int,java.lang.String)
  name: ParserBase._reportTooLongIntegral(int,String)
  nameWithType: ParserBase._reportTooLongIntegral(int,String)
  fullName: com.fasterxml.jackson.core.base.ParserBase._reportTooLongIntegral(int,java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.isNaN()
  name: ParserBase.isNaN()
  nameWithType: ParserBase.isNaN()
  fullName: com.fasterxml.jackson.core.base.ParserBase.isNaN()
- uid: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)
  name: JsonParser.releaseBuffered(Writer)
  nameWithType: JsonParser.releaseBuffered(Writer)
  fullName: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)
- uid: com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)
  name: JsonParser._constructError(String)
  nameWithType: JsonParser._constructError(String)
  fullName: com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.getFormatFeatures()
  name: JsonParser.getFormatFeatures()
  nameWithType: JsonParser.getFormatFeatures()
  fullName: com.fasterxml.jackson.core.JsonParser.getFormatFeatures()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class
  name: ParserMinimalBase._reportInputCoercion(String,JsonToken,Class
  nameWithType: ParserMinimalBase._reportInputCoercion(String,JsonToken,Class
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.core.JsonParser.
  name: JsonParser.
  nameWithType: JsonParser.
  fullName: com.fasterxml.jackson.core.JsonParser.
- uid: T>readValueAs(com.fasterxml.jackson.core.type.TypeReference
  name: T>readValueAs(TypeReference
  nameWithType: T>readValueAs(TypeReference
  fullName: T>readValueAs(com.fasterxml.jackson.core.type.TypeReference
- uid: T>readValuesAs(java.lang.Class
  name: T>readValuesAs(Class
  nameWithType: T>readValuesAs(Class
  fullName: T>readValuesAs(java.lang.Class
- uid: T>)
  name: T>)
  nameWithType: T>)
  fullName: T>)
- uid: T>readValueAsTree()
  name: T>readValueAsTree()
  nameWithType: T>readValueAsTree()
  fullName: T>readValueAsTree()
- uid: T>readValueAs(java.lang.Class
  name: T>readValueAs(Class
  nameWithType: T>readValueAs(Class
  fullName: T>readValueAs(java.lang.Class
- uid: T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference
  name: T>readValuesAs(TypeReference
  nameWithType: T>readValuesAs(TypeReference
  fullName: T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference
