### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.devicetwin.Query"
fullName: "com.microsoft.azure.sdk.iot.service.devicetwin.Query"
name: "Query"
nameWithType: "Query"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Query"
constructors:
- "com.microsoft.azure.sdk.iot.service.devicetwin.Query.Query(int,com.microsoft.azure.sdk.iot.service.devicetwin.QueryType)"
- "com.microsoft.azure.sdk.iot.service.devicetwin.Query.Query(java.lang.String,int,com.microsoft.azure.sdk.iot.service.devicetwin.QueryType)"
methods:
- "com.microsoft.azure.sdk.iot.service.devicetwin.Query.hasNext()"
- "com.microsoft.azure.sdk.iot.service.devicetwin.Query.next()"
- "com.microsoft.azure.sdk.iot.service.devicetwin.Query.sendQueryRequest(com.microsoft.azure.sdk.iot.service.IotHubConnectionString,java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod,int,int,java.net.Proxy)"
- "com.microsoft.azure.sdk.iot.service.devicetwin.Query.sendQueryRequest(com.microsoft.azure.sdk.iot.service.IotHubConnectionString,java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod,java.lang.Long)"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.devicetwin"
artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.2.0
