### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.Query
  id: Query
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin
  children:
  - com.microsoft.azure.sdk.iot.service.devicetwin.Query.Query(int,com.microsoft.azure.sdk.iot.service.devicetwin.QueryType)
  - com.microsoft.azure.sdk.iot.service.devicetwin.Query.Query(java.lang.String,int,com.microsoft.azure.sdk.iot.service.devicetwin.QueryType)
  - com.microsoft.azure.sdk.iot.service.devicetwin.Query.hasNext()
  - com.microsoft.azure.sdk.iot.service.devicetwin.Query.next()
  - com.microsoft.azure.sdk.iot.service.devicetwin.Query.sendQueryRequest(com.microsoft.azure.sdk.iot.service.IotHubConnectionString,java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod,java.lang.Long)
  langs:
  - java
  name: Query
  nameWithType: Query
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.Query
  type: Class
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public class Query
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.Query.Query(int,com.microsoft.azure.sdk.iot.service.devicetwin.QueryType)
  id: Query(int,com.microsoft.azure.sdk.iot.service.devicetwin.QueryType)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.Query
  langs:
  - java
  name: Query(int pageSize, QueryType requestQueryType)
  nameWithType: Query.Query(int pageSize, QueryType requestQueryType)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.Query.Query(int pageSize, QueryType requestQueryType)
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.Query.Query*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: Constructor for Query
  syntax:
    content: public Query(int pageSize, QueryType requestQueryType)
    parameters:
    - id: pageSize
      type: int
      description: page size for the query response to request query over
    - id: requestQueryType
      type: com.microsoft.azure.sdk.iot.service.devicetwin.QueryType
      description: Type of query
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.Query.Query(java.lang.String,int,com.microsoft.azure.sdk.iot.service.devicetwin.QueryType)
  id: Query(java.lang.String,int,com.microsoft.azure.sdk.iot.service.devicetwin.QueryType)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.Query
  langs:
  - java
  name: Query(String query, int pageSize, QueryType requestQueryType)
  nameWithType: Query.Query(String query, int pageSize, QueryType requestQueryType)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.Query.Query(String query, int pageSize, QueryType requestQueryType)
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.Query.Query*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: Constructor for Query
  syntax:
    content: public Query(String query, int pageSize, QueryType requestQueryType)
    parameters:
    - id: query
      type: java.lang.String
      description: Sql style query to be sent to IotHub
    - id: pageSize
      type: int
      description: page size for the query response to request query over
    - id: requestQueryType
      type: com.microsoft.azure.sdk.iot.service.devicetwin.QueryType
      description: Type of query
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.Query.hasNext()
  id: hasNext()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.Query
  langs:
  - java
  name: hasNext()
  nameWithType: Query.hasNext()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.Query.hasNext()
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.Query.hasNext*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: Returns the availability of next element in the query response
  syntax:
    content: public boolean hasNext()
    return:
      type: boolean
      description: the availability of next element in the query response
  exceptions:
  - type: java.io.IOException
    description: if sending the request is unsuccessful because of input parameters
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: if sending the request is unsuccessful because of input parameters
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.Query.next()
  id: next()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.Query
  langs:
  - java
  name: next()
  nameWithType: Query.next()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.Query.next()
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.Query.next*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: provides the next element in query response
  syntax:
    content: public Object next()
    return:
      type: java.lang.Object
      description: the next element in query response
  exceptions:
  - type: java.io.IOException
    description: if sending the request is unsuccessful because of input parameters
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: if sending the request is unsuccessful because of input parameters
  - type: java.util.NoSuchElementException
    description: if sending the request is unsuccessful because of input parameters
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.Query.sendQueryRequest(com.microsoft.azure.sdk.iot.service.IotHubConnectionString,java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod,java.lang.Long)
  id: sendQueryRequest(com.microsoft.azure.sdk.iot.service.IotHubConnectionString,java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod,java.lang.Long)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.Query
  langs:
  - java
  name: sendQueryRequest(IotHubConnectionString iotHubConnectionString, URL url, HttpMethod method, Long timeoutInMs)
  nameWithType: Query.sendQueryRequest(IotHubConnectionString iotHubConnectionString, URL url, HttpMethod method, Long timeoutInMs)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.Query.sendQueryRequest(IotHubConnectionString iotHubConnectionString, URL url, HttpMethod method, Long timeoutInMs)
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.Query.sendQueryRequest*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: Sends request for the query to the IotHub
  syntax:
    content: public QueryResponse sendQueryRequest(IotHubConnectionString iotHubConnectionString, URL url, HttpMethod method, Long timeoutInMs)
    parameters:
    - id: iotHubConnectionString
      type: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
      description: Hub Connection String
    - id: url
      type: java.net.URL
      description: URL to Query on
    - id: method
      type: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
      description: HTTP Method for the requesting a query
    - id: timeoutInMs
      type: java.lang.Long
      description: Maximum time to wait for the hub to respond
    return:
      type: com.microsoft.azure.sdk.iot.service.devicetwin.QueryResponse
      description: QueryResponse object which holds the response Iterator
  exceptions:
  - type: java.io.IOException
    description: If any of the input parameters are not valid
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: If any of the input parameters are not valid
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.QueryType
  name: QueryType
  nameWithType: QueryType
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.QueryType
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.Query.Query*
  name: Query
  nameWithType: Query.Query
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.Query.Query
  package: com.microsoft.azure.sdk.iot.service.devicetwin
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
  name: IotHubException
  nameWithType: IotHubException
  fullName: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
- uid: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
  name: IotHubConnectionString
  nameWithType: IotHubConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
- uid: java.net.URL
  spec.java:
  - uid: java.net.URL
    name: URL
    fullName: java.net.URL
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
- uid: java.lang.Long
  spec.java:
  - uid: java.lang.Long
    name: Long
    fullName: java.lang.Long
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.QueryResponse
  name: QueryResponse
  nameWithType: QueryResponse
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.QueryResponse
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.Query.sendQueryRequest*
  name: sendQueryRequest
  nameWithType: Query.sendQueryRequest
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.Query.sendQueryRequest
  package: com.microsoft.azure.sdk.iot.service.devicetwin
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.Query.hasNext*
  name: hasNext
  nameWithType: Query.hasNext
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.Query.hasNext
  package: com.microsoft.azure.sdk.iot.service.devicetwin
- uid: java.util.NoSuchElementException
  spec.java:
  - uid: java.util.NoSuchElementException
    name: NoSuchElementException
    fullName: java.util.NoSuchElementException
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.Query.next*
  name: next
  nameWithType: Query.next
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.Query.next
  package: com.microsoft.azure.sdk.iot.service.devicetwin
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
