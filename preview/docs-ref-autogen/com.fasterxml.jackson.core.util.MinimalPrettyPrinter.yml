### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  id: MinimalPrettyPrinter
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util
  children:
  - com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter()
  - com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter(java.lang.String)
  - com.fasterxml.jackson.core.util.MinimalPrettyPrinter._rootValueSeparator
  - com.fasterxml.jackson.core.util.MinimalPrettyPrinter._separators
  - com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.core.util.MinimalPrettyPrinter.setRootValueSeparator(java.lang.String)
  - com.fasterxml.jackson.core.util.MinimalPrettyPrinter.setSeparators(com.fasterxml.jackson.core.util.Separators)
  - com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int)
  - com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int)
  - com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)
  langs:
  - java
  name: MinimalPrettyPrinter
  nameWithType: MinimalPrettyPrinter
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  type: Class
  package: com.fasterxml.jackson.core.util
  summary: >-
    <xref uid="com.fasterxml.jackson.core.PrettyPrinter" data-throw-if-not-resolved="false">PrettyPrinter</xref> implementation that adds no indentation, just implements everything necessary for value output to work as expected, and provide simpler extension points to allow for creating simple custom implementations that add specific decoration or overrides. Since behavior then is very similar to using no pretty printer at all, usually sub-classes are used.


    Beyond purely minimal implementation, there is limited amount of configurability which may be useful for actual use: for example, it is possible to redefine separator used between root-level values (default is single space; can be changed to line-feed).


    Note: does NOT implement <xref uid="com.fasterxml.jackson.core.util.Instantiatable" data-throw-if-not-resolved="false">Instantiatable</xref> since this is a stateless implementation; that is, a single instance can be shared between threads.
  syntax:
    content: public class MinimalPrettyPrinter implements PrettyPrinter, Serializable
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.core.PrettyPrinter
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter()
  id: MinimalPrettyPrinter()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  langs:
  - java
  name: MinimalPrettyPrinter()
  nameWithType: MinimalPrettyPrinter.MinimalPrettyPrinter()
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter()
  overload: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter*
  type: Constructor
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public MinimalPrettyPrinter()
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter(java.lang.String)
  id: MinimalPrettyPrinter(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  langs:
  - java
  name: MinimalPrettyPrinter(String rootValueSeparator)
  nameWithType: MinimalPrettyPrinter.MinimalPrettyPrinter(String rootValueSeparator)
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter(String rootValueSeparator)
  overload: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter*
  type: Constructor
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public MinimalPrettyPrinter(String rootValueSeparator)
    parameters:
    - id: rootValueSeparator
      type: java.lang.String
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter._rootValueSeparator
  id: _rootValueSeparator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  langs:
  - java
  name: _rootValueSeparator
  nameWithType: MinimalPrettyPrinter._rootValueSeparator
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter._rootValueSeparator
  type: Field
  package: com.fasterxml.jackson.core.util
  syntax:
    content: protected String _rootValueSeparator
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter._separators
  id: _separators
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  langs:
  - java
  name: _separators
  nameWithType: MinimalPrettyPrinter._separators
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter._separators
  type: Field
  package: com.fasterxml.jackson.core.util
  syntax:
    content: protected Separators _separators
    return:
      type: com.fasterxml.jackson.core.util.Separators
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)
  id: beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  langs:
  - java
  name: beforeArrayValues(JsonGenerator g)
  nameWithType: MinimalPrettyPrinter.beforeArrayValues(JsonGenerator g)
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeArrayValues(JsonGenerator g)
  overload: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeArrayValues*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called after array start marker has been output, and right before the first value is to be output. It is **not** called for arrays with no values.


    Default handling does not output anything, but pretty-printer is free to add any white space decoration.
  syntax:
    content: public void beforeArrayValues(JsonGenerator g)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)
  id: beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  langs:
  - java
  name: beforeObjectEntries(JsonGenerator g)
  nameWithType: MinimalPrettyPrinter.beforeObjectEntries(JsonGenerator g)
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeObjectEntries(JsonGenerator g)
  overload: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeObjectEntries*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called after object start marker has been output, and right before the field name of the first entry is to be output. It is **not** called for objects without entries.


    Default handling does not output anything, but pretty-printer is free to add any white space decoration.
  syntax:
    content: public void beforeObjectEntries(JsonGenerator g)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.setRootValueSeparator(java.lang.String)
  id: setRootValueSeparator(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  langs:
  - java
  name: setRootValueSeparator(String sep)
  nameWithType: MinimalPrettyPrinter.setRootValueSeparator(String sep)
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.setRootValueSeparator(String sep)
  overload: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.setRootValueSeparator*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public void setRootValueSeparator(String sep)
    parameters:
    - id: sep
      type: java.lang.String
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.setSeparators(com.fasterxml.jackson.core.util.Separators)
  id: setSeparators(com.fasterxml.jackson.core.util.Separators)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  langs:
  - java
  name: setSeparators(Separators separators)
  nameWithType: MinimalPrettyPrinter.setSeparators(Separators separators)
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.setSeparators(Separators separators)
  overload: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.setSeparators*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public MinimalPrettyPrinter setSeparators(Separators separators)
    parameters:
    - id: separators
      type: com.fasterxml.jackson.core.util.Separators
    return:
      type: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  id: writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  langs:
  - java
  name: writeArrayValueSeparator(JsonGenerator g)
  nameWithType: MinimalPrettyPrinter.writeArrayValueSeparator(JsonGenerator g)
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeArrayValueSeparator(JsonGenerator g)
  overload: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeArrayValueSeparator*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called after an array value has been completely output, and before another value is to be output.


    Default handling (without pretty-printing) will output a single comma to separate values.
  syntax:
    content: public void writeArrayValueSeparator(JsonGenerator g)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int)
  id: writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  langs:
  - java
  name: writeEndArray(JsonGenerator g, int nrOfValues)
  nameWithType: MinimalPrettyPrinter.writeEndArray(JsonGenerator g, int nrOfValues)
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndArray(JsonGenerator g, int nrOfValues)
  overload: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndArray*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called after an Array value has been completely output (minus closing bracket).


    Default handling (without pretty-printing) will output the closing bracket. Pretty-printer is to output a bracket as well, but can surround that with other (white-space) decoration.
  syntax:
    content: public void writeEndArray(JsonGenerator g, int nrOfValues)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: nrOfValues
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int)
  id: writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  langs:
  - java
  name: writeEndObject(JsonGenerator g, int nrOfEntries)
  nameWithType: MinimalPrettyPrinter.writeEndObject(JsonGenerator g, int nrOfEntries)
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndObject(JsonGenerator g, int nrOfEntries)
  overload: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndObject*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called after an Object value has been completely output (minus closing curly bracket).


    Default handling (without pretty-printing) will output the closing curly bracket. Pretty-printer is to output a curly bracket as well, but can surround that with other (white-space) decoration.
  syntax:
    content: public void writeEndObject(JsonGenerator g, int nrOfEntries)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: nrOfEntries
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)
  id: writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  langs:
  - java
  name: writeObjectEntrySeparator(JsonGenerator g)
  nameWithType: MinimalPrettyPrinter.writeObjectEntrySeparator(JsonGenerator g)
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectEntrySeparator(JsonGenerator g)
  overload: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectEntrySeparator*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called after an object entry (field:value) has been completely output, and before another value is to be output.


    Default handling (without pretty-printing) will output a single comma to separate the two.
  syntax:
    content: public void writeObjectEntrySeparator(JsonGenerator g)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  id: writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  langs:
  - java
  name: writeObjectFieldValueSeparator(JsonGenerator g)
  nameWithType: MinimalPrettyPrinter.writeObjectFieldValueSeparator(JsonGenerator g)
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectFieldValueSeparator(JsonGenerator g)
  overload: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectFieldValueSeparator*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called after an object field has been output, but before the value is output.


    Default handling will just output a single colon to separate the two, without additional spaces.
  syntax:
    content: public void writeObjectFieldValueSeparator(JsonGenerator g)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  id: writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  langs:
  - java
  name: writeRootValueSeparator(JsonGenerator g)
  nameWithType: MinimalPrettyPrinter.writeRootValueSeparator(JsonGenerator g)
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeRootValueSeparator(JsonGenerator g)
  overload: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeRootValueSeparator*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called after a root-level value has been completely output, and before another value is to be output.


    Default handling (without pretty-printing) will output a space, to allow values to be parsed correctly. Pretty-printer is to output some other suitable and nice-looking separator (tab(s), space(s), linefeed(s) or any combination thereof).
  syntax:
    content: public void writeRootValueSeparator(JsonGenerator g)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)
  id: writeStartArray(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  langs:
  - java
  name: writeStartArray(JsonGenerator g)
  nameWithType: MinimalPrettyPrinter.writeStartArray(JsonGenerator g)
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartArray(JsonGenerator g)
  overload: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartArray*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called when an Array value is to be output, before any member/child values are output.


    Default handling (without pretty-printing) will output the opening bracket. Pretty-printer is to output a bracket as well, but can surround that with other (white-space) decoration.
  syntax:
    content: public void writeStartArray(JsonGenerator g)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)
  id: writeStartObject(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.MinimalPrettyPrinter
  langs:
  - java
  name: writeStartObject(JsonGenerator g)
  nameWithType: MinimalPrettyPrinter.writeStartObject(JsonGenerator g)
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartObject(JsonGenerator g)
  overload: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartObject*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called when an Object value is to be output, before any fields are output.


    Default handling (without pretty-printing) will output the opening curly bracket. Pretty-printer is to output a curly bracket as well, but can surround that with other (white-space) decoration.
  syntax:
    content: public void writeStartObject(JsonGenerator g)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
references:
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter*
  name: MinimalPrettyPrinter
  nameWithType: MinimalPrettyPrinter.MinimalPrettyPrinter
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.MinimalPrettyPrinter
  package: com.fasterxml.jackson.core.util
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.setRootValueSeparator*
  name: setRootValueSeparator
  nameWithType: MinimalPrettyPrinter.setRootValueSeparator
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.setRootValueSeparator
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.Separators
  name: Separators
  nameWithType: Separators
  fullName: com.fasterxml.jackson.core.util.Separators
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.setSeparators*
  name: setSeparators
  nameWithType: MinimalPrettyPrinter.setSeparators
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.setSeparators
  package: com.fasterxml.jackson.core.util
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeRootValueSeparator*
  name: writeRootValueSeparator
  nameWithType: MinimalPrettyPrinter.writeRootValueSeparator
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeRootValueSeparator
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartObject*
  name: writeStartObject
  nameWithType: MinimalPrettyPrinter.writeStartObject
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartObject
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeObjectEntries*
  name: beforeObjectEntries
  nameWithType: MinimalPrettyPrinter.beforeObjectEntries
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeObjectEntries
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectFieldValueSeparator*
  name: writeObjectFieldValueSeparator
  nameWithType: MinimalPrettyPrinter.writeObjectFieldValueSeparator
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectFieldValueSeparator
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectEntrySeparator*
  name: writeObjectEntrySeparator
  nameWithType: MinimalPrettyPrinter.writeObjectEntrySeparator
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeObjectEntrySeparator
  package: com.fasterxml.jackson.core.util
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndObject*
  name: writeEndObject
  nameWithType: MinimalPrettyPrinter.writeEndObject
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndObject
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartArray*
  name: writeStartArray
  nameWithType: MinimalPrettyPrinter.writeStartArray
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeStartArray
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeArrayValues*
  name: beforeArrayValues
  nameWithType: MinimalPrettyPrinter.beforeArrayValues
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.beforeArrayValues
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeArrayValueSeparator*
  name: writeArrayValueSeparator
  nameWithType: MinimalPrettyPrinter.writeArrayValueSeparator
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeArrayValueSeparator
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndArray*
  name: writeEndArray
  nameWithType: MinimalPrettyPrinter.writeEndArray
  fullName: com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeEndArray
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.PrettyPrinter
  name: PrettyPrinter
  nameWithType: PrettyPrinter
  fullName: com.fasterxml.jackson.core.PrettyPrinter
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
