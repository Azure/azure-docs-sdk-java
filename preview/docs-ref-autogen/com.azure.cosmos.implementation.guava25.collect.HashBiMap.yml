### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.HashBiMap"
fullName: "com.azure.cosmos.implementation.guava25.collect.HashBiMap<K,V>"
name: "HashBiMap<K,V>"
nameWithType: "HashBiMap<K,V>"
summary: "A <xref uid=\"com.azure.cosmos.implementation.guava25.collect.BiMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BiMap\"></xref> backed by two hash tables. This implementation allows null keys and values. A `HashBiMap` and its inverse are both serializable.\n\nThis implementation guarantees insertion-based iteration order of its keys.\n\nSee the Guava User Guide article on [ `BiMap` ][_BiMap_].\n\n\n[_BiMap_]: https://github.com/google/guava/wiki/NewCollectionTypesExplained#bimap"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.util.AbstractMap\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Maps.IteratorBasedAbstractMap\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.cosmos.implementation.guava25.collect.Maps.IteratorBasedAbstractMap.clear()"
- "com.azure.cosmos.implementation.guava25.collect.Maps.IteratorBasedAbstractMap.entrySet()"
- "com.azure.cosmos.implementation.guava25.collect.Maps.IteratorBasedAbstractMap.size()"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "java.util.AbstractMap.clone()"
- "java.util.AbstractMap.containsKey(java.lang.Object)"
- "java.util.AbstractMap.containsValue(java.lang.Object)"
- "java.util.AbstractMap.equals(java.lang.Object)"
- "java.util.AbstractMap.get(java.lang.Object)"
- "java.util.AbstractMap.hashCode()"
- "java.util.AbstractMap.isEmpty()"
- "java.util.AbstractMap.keySet()"
- "java.util.AbstractMap.put(K,V)"
- "java.util.AbstractMap.putAll(java.util.Map<? extends K,? extends V>)"
- "java.util.AbstractMap.remove(java.lang.Object)"
- "java.util.AbstractMap.toString()"
- "java.util.AbstractMap.values()"
syntax: "public final class HashBiMap<K,V> extends Maps.IteratorBasedAbstractMap<K,V> implements BiMap<K,V>, Serializable"
methods:
- "com.azure.cosmos.implementation.guava25.collect.HashBiMap.<K,V>create()"
- "com.azure.cosmos.implementation.guava25.collect.HashBiMap.<K,V>create(int)"
- "com.azure.cosmos.implementation.guava25.collect.HashBiMap.<K,V>create(java.util.Map<? extends K,? extends V>)"
- "com.azure.cosmos.implementation.guava25.collect.HashBiMap.clear()"
- "com.azure.cosmos.implementation.guava25.collect.HashBiMap.containsKey(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.HashBiMap.containsValue(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.HashBiMap.forEach(java.util.function.BiConsumer<? super K,? super V>)"
- "com.azure.cosmos.implementation.guava25.collect.HashBiMap.forcePut(K,V)"
- "com.azure.cosmos.implementation.guava25.collect.HashBiMap.get(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.HashBiMap.inverse()"
- "com.azure.cosmos.implementation.guava25.collect.HashBiMap.keySet()"
- "com.azure.cosmos.implementation.guava25.collect.HashBiMap.put(K,V)"
- "com.azure.cosmos.implementation.guava25.collect.HashBiMap.remove(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.HashBiMap.replaceAll(java.util.function.BiFunction<? super K,? super V,? extends V>)"
- "com.azure.cosmos.implementation.guava25.collect.HashBiMap.size()"
- "com.azure.cosmos.implementation.guava25.collect.HashBiMap.values()"
type: "class"
typeParameters:
- name: "K"
- name: "V"
implements:
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.BiMap?alt=com.azure.cosmos.implementation.guava25.collect.BiMap&text=BiMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
