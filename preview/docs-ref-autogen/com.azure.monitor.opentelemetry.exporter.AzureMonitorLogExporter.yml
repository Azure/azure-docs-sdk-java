### YamlMime:JavaType
uid: "com.azure.monitor.opentelemetry.exporter.AzureMonitorLogExporter"
fullName: "com.azure.monitor.opentelemetry.exporter.AzureMonitorLogExporter"
name: "AzureMonitorLogExporter"
nameWithType: "AzureMonitorLogExporter"
summary: "This class is an implementation of Open<wbr>Telemetry <xref uid=\"io.opentelemetry.sdk.logs.export.LogExporter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogExporter\"></xref> that allows different logging services to export recorded data for sampled logs in their own format."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzureMonitorLogExporter implements LogExporter"
methods:
- uid: "com.azure.monitor.opentelemetry.exporter.AzureMonitorLogExporter.export(java.util.Collection<io.opentelemetry.sdk.logs.data.LogData>)"
  fullName: "com.azure.monitor.opentelemetry.exporter.AzureMonitorLogExporter.export(Collection<LogData> logs)"
  name: "export(Collection<LogData> logs)"
  nameWithType: "AzureMonitorLogExporter.export(Collection<LogData> logs)"
  parameters:
  - name: "logs"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"io.opentelemetry.sdk.logs.data.LogData?alt=io.opentelemetry.sdk.logs.data.LogData&text=LogData\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CompletableResultCode export(Collection<LogData> logs)"
  returns:
    type: "<xref href=\"io.opentelemetry.sdk.common.CompletableResultCode?alt=io.opentelemetry.sdk.common.CompletableResultCode&text=CompletableResultCode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.monitor.opentelemetry.exporter.AzureMonitorLogExporter.flush()"
  fullName: "com.azure.monitor.opentelemetry.exporter.AzureMonitorLogExporter.flush()"
  name: "flush()"
  nameWithType: "AzureMonitorLogExporter.flush()"
  syntax: "public CompletableResultCode flush()"
  returns:
    type: "<xref href=\"io.opentelemetry.sdk.common.CompletableResultCode?alt=io.opentelemetry.sdk.common.CompletableResultCode&text=CompletableResultCode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.monitor.opentelemetry.exporter.AzureMonitorLogExporter.shutdown()"
  fullName: "com.azure.monitor.opentelemetry.exporter.AzureMonitorLogExporter.shutdown()"
  name: "shutdown()"
  nameWithType: "AzureMonitorLogExporter.shutdown()"
  syntax: "public CompletableResultCode shutdown()"
  returns:
    type: "<xref href=\"io.opentelemetry.sdk.common.CompletableResultCode?alt=io.opentelemetry.sdk.common.CompletableResultCode&text=CompletableResultCode\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "This class is an implementation of OpenTelemetry <xref uid=\"io.opentelemetry.sdk.logs.export.LogExporter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogExporter\"></xref> that allows different logging services to export recorded data for sampled logs in their own format."
implements:
- "<xref href=\"io.opentelemetry.sdk.logs.export.LogExporter?alt=io.opentelemetry.sdk.logs.export.LogExporter&text=LogExporter\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.monitor.opentelemetry.exporter"
artifact: com.azure:azure-monitor-opentelemetry-exporter:1.0.0-beta.6
