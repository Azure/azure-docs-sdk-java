### YamlMime:JavaType
uid: "com.azure.resourcemanager.synapse.models.ServerBlobAuditingPolicy.DefinitionStages.WithStorageAccountAccessKey"
fullName: "com.azure.resourcemanager.synapse.models.ServerBlobAuditingPolicy.DefinitionStages.WithStorageAccountAccessKey"
name: "ServerBlobAuditingPolicy.DefinitionStages.WithStorageAccountAccessKey"
nameWithType: "ServerBlobAuditingPolicy.DefinitionStages.WithStorageAccountAccessKey"
summary: "The stage of the Server<wbr>Blob<wbr>Auditing<wbr>Policy definition allowing to specify storage<wbr>Account<wbr>Access<wbr>Key."
syntax: "public static interface ServerBlobAuditingPolicy.DefinitionStages.WithStorageAccountAccessKey"
methods:
- uid: "com.azure.resourcemanager.synapse.models.ServerBlobAuditingPolicy.DefinitionStages.WithStorageAccountAccessKey.withStorageAccountAccessKey(java.lang.String)"
  fullName: "com.azure.resourcemanager.synapse.models.ServerBlobAuditingPolicy.DefinitionStages.WithStorageAccountAccessKey.withStorageAccountAccessKey(String storageAccountAccessKey)"
  name: "withStorageAccountAccessKey(String storageAccountAccessKey)"
  nameWithType: "ServerBlobAuditingPolicy.DefinitionStages.WithStorageAccountAccessKey.withStorageAccountAccessKey(String storageAccountAccessKey)"
  summary: "Specifies the storage<wbr>Account<wbr>Access<wbr>Key property: Specifies the identifier key of the auditing storage account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Specifies the identifier key of the auditing storage account. If state is\n     Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL\n     server system-assigned managed identity to access the storage. Prerequisites for using managed\n     identity authentication: 1. Assign SQL Server a system-assigned managed identity in Azure Active\n     Directory (AAD). 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob\n     Data Contributor' RBAC role to the server identity. For more information, see [Auditing to storage\n     using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)."
    name: "storageAccountAccessKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ServerBlobAuditingPolicy.DefinitionStages.WithCreate withStorageAccountAccessKey(String storageAccountAccessKey)"
  desc: "Specifies the storageAccountAccessKey property: Specifies the identifier key of the auditing storage account. If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage. Prerequisites for using managed identity authentication: 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD). 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity. For more information, see \\[Auditing to storage using Managed Identity authentication\\](https://go.microsoft.com/fwlink/?linkid=2114355)."
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.ServerBlobAuditingPolicy.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.synapse.models.ServerBlobAuditingPolicy.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The stage of the ServerBlobAuditingPolicy definition allowing to specify storageAccountAccessKey."
metadata: {}
package: "com.azure.resourcemanager.synapse.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-synapse:1.0.0-beta.6
