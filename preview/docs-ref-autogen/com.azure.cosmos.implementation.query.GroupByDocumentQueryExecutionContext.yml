### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext
  id: GroupByDocumentQueryExecutionContext
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query
  children:
  - com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext.<T>createAsync(java.util.function.BiFunction<java.lang.String,com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams<T>,reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>>,java.lang.String,java.util.Map<java.lang.String,com.azure.cosmos.implementation.query.aggregation.AggregateOperator>,java.util.List<java.lang.String>,boolean,com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams<T>)
  - com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext.CONTINUATION_TOKEN_NOT_SUPPORTED_WITH_GROUP_BY
  - com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext.RewrittenGroupByProjection
  - com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext.drainAsync(int)
  langs:
  - java
  name: GroupByDocumentQueryExecutionContext<T>
  nameWithType: GroupByDocumentQueryExecutionContext<T>
  fullName: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext<T>
  type: Class
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public final class GroupByDocumentQueryExecutionContext<T> implements IDocumentQueryExecutionComponent<T>
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext.<T>createAsync(java.util.function.BiFunction<java.lang.String,com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams<T>,reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>>,java.lang.String,java.util.Map<java.lang.String,com.azure.cosmos.implementation.query.aggregation.AggregateOperator>,java.util.List<java.lang.String>,boolean,com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams<T>)
  id: <T>createAsync(java.util.function.BiFunction<java.lang.String,com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams<T>,reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>>,java.lang.String,java.util.Map<java.lang.String,com.azure.cosmos.implementation.query.aggregation.AggregateOperator>,java.util.List<java.lang.String>,boolean,com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext
  langs:
  - java
  name: <T>createAsync(BiFunction<String,PipelinedDocumentQueryParams<T>,Flux<IDocumentQueryExecutionComponent<T>>> createSourceComponentFunction, String continuationToken, Map<String,AggregateOperator> groupByAliasToAggregateType, List<String> orderedAliases, boolean hasSelectValue, PipelinedDocumentQueryParams<T> documentQueryParams)
  nameWithType: GroupByDocumentQueryExecutionContext<T>.<T>createAsync(BiFunction<String,PipelinedDocumentQueryParams<T>,Flux<IDocumentQueryExecutionComponent<T>>> createSourceComponentFunction, String continuationToken, Map<String,AggregateOperator> groupByAliasToAggregateType, List<String> orderedAliases, boolean hasSelectValue, PipelinedDocumentQueryParams<T> documentQueryParams)
  fullName: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext<T>.<T>createAsync(BiFunction<String,PipelinedDocumentQueryParams<T>,Flux<IDocumentQueryExecutionComponent<T>>> createSourceComponentFunction, String continuationToken, Map<String,AggregateOperator> groupByAliasToAggregateType, List<String> orderedAliases, boolean hasSelectValue, PipelinedDocumentQueryParams<T> documentQueryParams)
  overload: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext.createAsync*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public static Flux<IDocumentQueryExecutionComponent<T>> <T>createAsync(BiFunction<String,PipelinedDocumentQueryParams<T>,Flux<IDocumentQueryExecutionComponent<T>>> createSourceComponentFunction, String continuationToken, Map<String,AggregateOperator> groupByAliasToAggregateType, List<String> orderedAliases, boolean hasSelectValue, PipelinedDocumentQueryParams<T> documentQueryParams)
    parameters:
    - id: createSourceComponentFunction
      type: java.util.function.BiFunction<java.lang.String,com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams<T>,reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>>
    - id: continuationToken
      type: java.lang.String
    - id: groupByAliasToAggregateType
      type: java.util.Map<java.lang.String,com.azure.cosmos.implementation.query.aggregation.AggregateOperator>
    - id: orderedAliases
      type: java.util.List<java.lang.String>
    - id: hasSelectValue
      type: boolean
    - id: documentQueryParams
      type: com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams<T>
    return:
      type: reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>
- uid: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext.CONTINUATION_TOKEN_NOT_SUPPORTED_WITH_GROUP_BY
  id: CONTINUATION_TOKEN_NOT_SUPPORTED_WITH_GROUP_BY
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext
  langs:
  - java
  name: CONTINUATION_TOKEN_NOT_SUPPORTED_WITH_GROUP_BY
  nameWithType: GroupByDocumentQueryExecutionContext<T>.CONTINUATION_TOKEN_NOT_SUPPORTED_WITH_GROUP_BY
  fullName: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext<T>.CONTINUATION_TOKEN_NOT_SUPPORTED_WITH_GROUP_BY
  type: Field
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public static final String CONTINUATION_TOKEN_NOT_SUPPORTED_WITH_GROUP_BY
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext.GroupByDocumentQueryExecutionContext(com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>,com.azure.cosmos.implementation.query.GroupingTable)
  id: GroupByDocumentQueryExecutionContext(com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>,com.azure.cosmos.implementation.query.GroupingTable)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext
  langs:
  - java
  name: GroupByDocumentQueryExecutionContext(IDocumentQueryExecutionComponent<T> component, GroupingTable groupingTable)
  nameWithType: GroupByDocumentQueryExecutionContext<T>.GroupByDocumentQueryExecutionContext(IDocumentQueryExecutionComponent<T> component, GroupingTable groupingTable)
  fullName: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext<T>.GroupByDocumentQueryExecutionContext(IDocumentQueryExecutionComponent<T> component, GroupingTable groupingTable)
  overload: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext.GroupByDocumentQueryExecutionContext*
  type: Constructor
  package: com.azure.cosmos.implementation.query
  syntax:
    content: " GroupByDocumentQueryExecutionContext(IDocumentQueryExecutionComponent<T> component, GroupingTable groupingTable)"
    parameters:
    - id: component
      type: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>
    - id: groupingTable
      type: com.azure.cosmos.implementation.query.GroupingTable
- uid: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext.drainAsync(int)
  id: drainAsync(int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext
  langs:
  - java
  name: drainAsync(int maxPageSize)
  nameWithType: GroupByDocumentQueryExecutionContext<T>.drainAsync(int maxPageSize)
  fullName: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext<T>.drainAsync(int maxPageSize)
  overload: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext.drainAsync*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public Flux<FeedResponse<T>> drainAsync(int maxPageSize)
    parameters:
    - id: maxPageSize
      type: int
    return:
      type: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>
references:
- uid: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>
  spec.java:
  - uid: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent
    name: IDocumentQueryExecutionComponent
    fullName: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.query.GroupingTable
  name: GroupingTable
  nameWithType: GroupingTable
  fullName: com.azure.cosmos.implementation.query.GroupingTable
- uid: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext.GroupByDocumentQueryExecutionContext*
  name: GroupByDocumentQueryExecutionContext
  nameWithType: GroupByDocumentQueryExecutionContext<T>.GroupByDocumentQueryExecutionContext
  fullName: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext<T>.GroupByDocumentQueryExecutionContext
  package: com.azure.cosmos.implementation.query
- uid: java.util.function.BiFunction<java.lang.String,com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams<T>,reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>>
  spec.java:
  - uid: java.util.function.BiFunction
    name: BiFunction
    fullName: java.util.function.BiFunction
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams
    name: PipelinedDocumentQueryParams
    fullName: com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent
    name: IDocumentQueryExecutionComponent
    fullName: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.util.Map<java.lang.String,com.azure.cosmos.implementation.query.aggregation.AggregateOperator>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: com.azure.cosmos.implementation.query.aggregation.AggregateOperator
    name: AggregateOperator
    fullName: com.azure.cosmos.implementation.query.aggregation.AggregateOperator
  - name: '>'
    fullName: '>'
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams<T>
  spec.java:
  - uid: com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams
    name: PipelinedDocumentQueryParams
    fullName: com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent
    name: IDocumentQueryExecutionComponent
    fullName: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext.createAsync*
  name: <T>createAsync
  nameWithType: GroupByDocumentQueryExecutionContext<T>.<T>createAsync
  fullName: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext<T>.<T>createAsync
  package: com.azure.cosmos.implementation.query
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.FeedResponse
    name: FeedResponse
    fullName: com.azure.cosmos.models.FeedResponse
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext.drainAsync*
  name: drainAsync
  nameWithType: GroupByDocumentQueryExecutionContext<T>.drainAsync
  fullName: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext<T>.drainAsync
  package: com.azure.cosmos.implementation.query
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext.RewrittenGroupByProjection
  name: GroupByDocumentQueryExecutionContext<T>.RewrittenGroupByProjection
  nameWithType: GroupByDocumentQueryExecutionContext<T>.RewrittenGroupByProjection
  fullName: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext<T>.RewrittenGroupByProjection
- uid: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent
  name: IDocumentQueryExecutionComponent
  nameWithType: IDocumentQueryExecutionComponent
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent
- uid: T>,reactor.core.publisher.Flux
  name: T>,Flux
  nameWithType: T>,Flux
  fullName: T>,reactor.core.publisher.Flux
- uid: java.util.function.BiFunction
  name: BiFunction
  nameWithType: BiFunction
  fullName: java.util.function.BiFunction
- uid: java.lang.String,com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams
  name: String,PipelinedDocumentQueryParams
  nameWithType: String,PipelinedDocumentQueryParams
  fullName: java.lang.String,com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams
- uid: java.lang.String,com.azure.cosmos.implementation.query.aggregation.AggregateOperator
  name: String,AggregateOperator
  nameWithType: String,AggregateOperator
  fullName: java.lang.String,com.azure.cosmos.implementation.query.aggregation.AggregateOperator
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams
  name: PipelinedDocumentQueryParams
  nameWithType: PipelinedDocumentQueryParams
  fullName: com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: com.azure.cosmos.models.FeedResponse
  name: FeedResponse
  nameWithType: FeedResponse
  fullName: com.azure.cosmos.models.FeedResponse
