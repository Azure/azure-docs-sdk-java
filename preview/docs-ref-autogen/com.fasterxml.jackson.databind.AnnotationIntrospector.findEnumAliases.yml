### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.AnnotationIntrospector.findEnumAliases*"
fullName: "com.fasterxml.jackson.databind.AnnotationIntrospector.findEnumAliases"
name: "findEnumAliases"
nameWithType: "AnnotationIntrospector.findEnumAliases"
members:
- uid: "com.fasterxml.jackson.databind.AnnotationIntrospector.findEnumAliases(java.lang.Class<?>,java.lang.Enum<?>[],java.lang.String[][])"
  fullName: "com.fasterxml.jackson.databind.AnnotationIntrospector.findEnumAliases(Class<?> enumType, Enum<?>[] enumValues, String[][] aliases)"
  name: "findEnumAliases(Class<?> enumType, Enum<?>[] enumValues, String[][] aliases)"
  nameWithType: "AnnotationIntrospector.findEnumAliases(Class<?> enumType, Enum<?>[] enumValues, String[][] aliases)"
  summary: "Method that is related to <xref uid=\"com.fasterxml.jackson.databind.AnnotationIntrospector.findEnumValues*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#findEnumValues\"></xref> but is called to check if there are alternative names (aliased) that can be accepted for entries, in addition to primary names introspected earlier. If so, these aliases should be returned in `aliases` <xref uid=\"java.util.List\" data-throw-if-not-resolved=\"false\" data-raw-source=\"List\"></xref> passed as argument (and initialized for proper size by caller)."
  parameters:
  - name: "enumType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "enumValues"
    type: "<xref href=\"java.lang.Enum?alt=java.lang.Enum&text=Enum\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;[]"
  - name: "aliases"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[][]"
  syntax: "public void findEnumAliases(Class<?> enumType, Enum<?>[] enumValues, String[][] aliases)"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
