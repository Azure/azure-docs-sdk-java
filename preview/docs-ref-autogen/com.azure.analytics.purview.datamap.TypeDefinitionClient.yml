### YamlMime:JavaType
uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient"
fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient"
name: "TypeDefinitionClient"
nameWithType: "TypeDefinitionClient"
summary: "Initializes a new instance of the synchronous Data<wbr>Map<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **TypeDefinitionClient**"
methods:
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.batchCreate(com.azure.analytics.purview.datamap.models.AtlasTypesDef)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.batchCreate(AtlasTypesDef body)"
  name: "batchCreate(AtlasTypesDef body)"
  nameWithType: "TypeDefinitionClient.batchCreate(AtlasTypesDef body)"
  summary: "Create all atlas type definitions in bulk."
  parameters:
  - description: "Body parameter."
    name: "body"
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasTypesDef?alt=com.azure.analytics.purview.datamap.models.AtlasTypesDef&text=AtlasTypesDef\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AtlasTypesDef batchCreate(AtlasTypesDef body)"
  desc: "Create all atlas type definitions in bulk. Please avoid recreating existing types."
  returns:
    description: "the definitions of types."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasTypesDef?alt=com.azure.analytics.purview.datamap.models.AtlasTypesDef&text=AtlasTypesDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.batchCreateWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.batchCreateWithResponse(BinaryData body, RequestOptions requestOptions)"
  name: "batchCreateWithResponse(BinaryData body, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.batchCreateWithResponse(BinaryData body, RequestOptions requestOptions)"
  summary: "Create all atlas type definitions in bulk."
  parameters:
  - description: "Body parameter."
    name: "body"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> batchCreateWithResponse(BinaryData body, RequestOptions requestOptions)"
  desc: "Create all atlas type definitions in bulk. Please avoid recreating existing types.\n\n**Request Body Schema**\n\n```java\n{\n     businessMetadataDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): {\n                 availableLocales (Optional): [\n                     String (Optional)\n                 ]\n                 calendar: Double (Optional)\n                 dateInstance (Optional): (recursive schema, see dateInstance above)\n                 dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n                 instance (Optional): (recursive schema, see instance above)\n                 lenient: Boolean (Optional)\n                 numberFormat (Optional): {\n                     availableLocales (Optional): [\n                         String (Optional)\n                     ]\n                     currency: String (Optional)\n                     currencyInstance (Optional): (recursive schema, see currencyInstance above)\n                     groupingUsed: Boolean (Optional)\n                     instance (Optional): (recursive schema, see instance above)\n                     integerInstance (Optional): (recursive schema, see integerInstance above)\n                     maximumFractionDigits: Integer (Optional)\n                     maximumIntegerDigits: Integer (Optional)\n                     minimumFractionDigits: Integer (Optional)\n                     minimumIntegerDigits: Integer (Optional)\n                     numberInstance (Optional): (recursive schema, see numberInstance above)\n                     parseIntegerOnly: Boolean (Optional)\n                     percentInstance (Optional): (recursive schema, see percentInstance above)\n                     roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n                 }\n                 timeInstance (Optional): (recursive schema, see timeInstance above)\n                 timeZone (Optional): {\n                     dstSavings: Integer (Optional)\n                     id: String (Optional)\n                     availableIds (Optional): [\n                         String (Optional)\n                     ]\n                     default (Optional): (recursive schema, see default above)\n                     displayName: String (Optional)\n                     rawOffset: Integer (Optional)\n                 }\n             }\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                  (Optional){\n                     cardinality: String(SINGLE/LIST/SET) (Optional)\n                     constraints (Optional): [\n                          (Optional){\n                             params (Optional): {\n                                 String: BinaryData (Required)\n                             }\n                             type: String (Optional)\n                         }\n                     ]\n                     defaultValue: String (Optional)\n                     description: String (Optional)\n                     includeInNotification: Boolean (Optional)\n                     isIndexable: Boolean (Optional)\n                     isOptional: Boolean (Optional)\n                     isUnique: Boolean (Optional)\n                     name: String (Optional)\n                     options (Optional): {\n                         String: String (Required)\n                     }\n                     typeName: String (Optional)\n                     valuesMaxCount: Integer (Optional)\n                     valuesMinCount: Integer (Optional)\n                 }\n             ]\n         }\n     ]\n     classificationDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             entityTypes (Optional): [\n                 String (Optional)\n             ]\n             subTypes (Optional): [\n                 String (Optional)\n             ]\n             superTypes (Optional): [\n                 String (Optional)\n             ]\n         }\n     ]\n     entityDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             subTypes (Optional): [\n                 String (Optional)\n             ]\n             superTypes (Optional): [\n                 String (Optional)\n             ]\n             relationshipAttributeDefs (Optional): [\n                  (Optional){\n                     cardinality: String(SINGLE/LIST/SET) (Optional)\n                     constraints (Optional): [\n                         (recursive schema, see above)\n                     ]\n                     defaultValue: String (Optional)\n                     description: String (Optional)\n                     includeInNotification: Boolean (Optional)\n                     isIndexable: Boolean (Optional)\n                     isOptional: Boolean (Optional)\n                     isUnique: Boolean (Optional)\n                     name: String (Optional)\n                     options (Optional): {\n                         String: String (Required)\n                     }\n                     typeName: String (Optional)\n                     valuesMaxCount: Integer (Optional)\n                     valuesMinCount: Integer (Optional)\n                     isLegacyAttribute: Boolean (Optional)\n                     relationshipTypeName: String (Optional)\n                 }\n             ]\n         }\n     ]\n     enumDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             defaultValue: String (Optional)\n             elementDefs (Optional): [\n                  (Optional){\n                     description: String (Optional)\n                     ordinal: Integer (Optional)\n                     value: String (Optional)\n                 }\n             ]\n         }\n     ]\n     relationshipDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             endDef1 (Optional): {\n                 cardinality: String(SINGLE/LIST/SET) (Optional)\n                 description: String (Optional)\n                 isContainer: Boolean (Optional)\n                 isLegacyAttribute: Boolean (Optional)\n                 name: String (Optional)\n                 type: String (Optional)\n             }\n             endDef2 (Optional): (recursive schema, see endDef2 above)\n             relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION) (Optional)\n             relationshipLabel: String (Optional)\n         }\n     ]\n     structDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n     termTemplateDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     businessMetadataDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): {\n                 availableLocales (Optional): [\n                     String (Optional)\n                 ]\n                 calendar: Double (Optional)\n                 dateInstance (Optional): (recursive schema, see dateInstance above)\n                 dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n                 instance (Optional): (recursive schema, see instance above)\n                 lenient: Boolean (Optional)\n                 numberFormat (Optional): {\n                     availableLocales (Optional): [\n                         String (Optional)\n                     ]\n                     currency: String (Optional)\n                     currencyInstance (Optional): (recursive schema, see currencyInstance above)\n                     groupingUsed: Boolean (Optional)\n                     instance (Optional): (recursive schema, see instance above)\n                     integerInstance (Optional): (recursive schema, see integerInstance above)\n                     maximumFractionDigits: Integer (Optional)\n                     maximumIntegerDigits: Integer (Optional)\n                     minimumFractionDigits: Integer (Optional)\n                     minimumIntegerDigits: Integer (Optional)\n                     numberInstance (Optional): (recursive schema, see numberInstance above)\n                     parseIntegerOnly: Boolean (Optional)\n                     percentInstance (Optional): (recursive schema, see percentInstance above)\n                     roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n                 }\n                 timeInstance (Optional): (recursive schema, see timeInstance above)\n                 timeZone (Optional): {\n                     dstSavings: Integer (Optional)\n                     id: String (Optional)\n                     availableIds (Optional): [\n                         String (Optional)\n                     ]\n                     default (Optional): (recursive schema, see default above)\n                     displayName: String (Optional)\n                     rawOffset: Integer (Optional)\n                 }\n             }\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                  (Optional){\n                     cardinality: String(SINGLE/LIST/SET) (Optional)\n                     constraints (Optional): [\n                          (Optional){\n                             params (Optional): {\n                                 String: BinaryData (Required)\n                             }\n                             type: String (Optional)\n                         }\n                     ]\n                     defaultValue: String (Optional)\n                     description: String (Optional)\n                     includeInNotification: Boolean (Optional)\n                     isIndexable: Boolean (Optional)\n                     isOptional: Boolean (Optional)\n                     isUnique: Boolean (Optional)\n                     name: String (Optional)\n                     options (Optional): {\n                         String: String (Required)\n                     }\n                     typeName: String (Optional)\n                     valuesMaxCount: Integer (Optional)\n                     valuesMinCount: Integer (Optional)\n                 }\n             ]\n         }\n     ]\n     classificationDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             entityTypes (Optional): [\n                 String (Optional)\n             ]\n             subTypes (Optional): [\n                 String (Optional)\n             ]\n             superTypes (Optional): [\n                 String (Optional)\n             ]\n         }\n     ]\n     entityDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             subTypes (Optional): [\n                 String (Optional)\n             ]\n             superTypes (Optional): [\n                 String (Optional)\n             ]\n             relationshipAttributeDefs (Optional): [\n                  (Optional){\n                     cardinality: String(SINGLE/LIST/SET) (Optional)\n                     constraints (Optional): [\n                         (recursive schema, see above)\n                     ]\n                     defaultValue: String (Optional)\n                     description: String (Optional)\n                     includeInNotification: Boolean (Optional)\n                     isIndexable: Boolean (Optional)\n                     isOptional: Boolean (Optional)\n                     isUnique: Boolean (Optional)\n                     name: String (Optional)\n                     options (Optional): {\n                         String: String (Required)\n                     }\n                     typeName: String (Optional)\n                     valuesMaxCount: Integer (Optional)\n                     valuesMinCount: Integer (Optional)\n                     isLegacyAttribute: Boolean (Optional)\n                     relationshipTypeName: String (Optional)\n                 }\n             ]\n         }\n     ]\n     enumDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             defaultValue: String (Optional)\n             elementDefs (Optional): [\n                  (Optional){\n                     description: String (Optional)\n                     ordinal: Integer (Optional)\n                     value: String (Optional)\n                 }\n             ]\n         }\n     ]\n     relationshipDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             endDef1 (Optional): {\n                 cardinality: String(SINGLE/LIST/SET) (Optional)\n                 description: String (Optional)\n                 isContainer: Boolean (Optional)\n                 isLegacyAttribute: Boolean (Optional)\n                 name: String (Optional)\n                 type: String (Optional)\n             }\n             endDef2 (Optional): (recursive schema, see endDef2 above)\n             relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION) (Optional)\n             relationshipLabel: String (Optional)\n         }\n     ]\n     structDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n     termTemplateDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n }\n```"
  returns:
    description: "the definitions of types along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.batchDelete(com.azure.analytics.purview.datamap.models.AtlasTypesDef)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.batchDelete(AtlasTypesDef body)"
  name: "batchDelete(AtlasTypesDef body)"
  nameWithType: "TypeDefinitionClient.batchDelete(AtlasTypesDef body)"
  summary: "Delete API for all types in bulk."
  parameters:
  - description: "Body parameter."
    name: "body"
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasTypesDef?alt=com.azure.analytics.purview.datamap.models.AtlasTypesDef&text=AtlasTypesDef\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void batchDelete(AtlasTypesDef body)"
  desc: "Delete API for all types in bulk."
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.batchDeleteWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.batchDeleteWithResponse(BinaryData body, RequestOptions requestOptions)"
  name: "batchDeleteWithResponse(BinaryData body, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.batchDeleteWithResponse(BinaryData body, RequestOptions requestOptions)"
  summary: "Delete API for all types in bulk."
  parameters:
  - description: "Body parameter."
    name: "body"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> batchDeleteWithResponse(BinaryData body, RequestOptions requestOptions)"
  desc: "Delete API for all types in bulk.\n\n**Request Body Schema**\n\n```java\n{\n     businessMetadataDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): {\n                 availableLocales (Optional): [\n                     String (Optional)\n                 ]\n                 calendar: Double (Optional)\n                 dateInstance (Optional): (recursive schema, see dateInstance above)\n                 dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n                 instance (Optional): (recursive schema, see instance above)\n                 lenient: Boolean (Optional)\n                 numberFormat (Optional): {\n                     availableLocales (Optional): [\n                         String (Optional)\n                     ]\n                     currency: String (Optional)\n                     currencyInstance (Optional): (recursive schema, see currencyInstance above)\n                     groupingUsed: Boolean (Optional)\n                     instance (Optional): (recursive schema, see instance above)\n                     integerInstance (Optional): (recursive schema, see integerInstance above)\n                     maximumFractionDigits: Integer (Optional)\n                     maximumIntegerDigits: Integer (Optional)\n                     minimumFractionDigits: Integer (Optional)\n                     minimumIntegerDigits: Integer (Optional)\n                     numberInstance (Optional): (recursive schema, see numberInstance above)\n                     parseIntegerOnly: Boolean (Optional)\n                     percentInstance (Optional): (recursive schema, see percentInstance above)\n                     roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n                 }\n                 timeInstance (Optional): (recursive schema, see timeInstance above)\n                 timeZone (Optional): {\n                     dstSavings: Integer (Optional)\n                     id: String (Optional)\n                     availableIds (Optional): [\n                         String (Optional)\n                     ]\n                     default (Optional): (recursive schema, see default above)\n                     displayName: String (Optional)\n                     rawOffset: Integer (Optional)\n                 }\n             }\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                  (Optional){\n                     cardinality: String(SINGLE/LIST/SET) (Optional)\n                     constraints (Optional): [\n                          (Optional){\n                             params (Optional): {\n                                 String: BinaryData (Required)\n                             }\n                             type: String (Optional)\n                         }\n                     ]\n                     defaultValue: String (Optional)\n                     description: String (Optional)\n                     includeInNotification: Boolean (Optional)\n                     isIndexable: Boolean (Optional)\n                     isOptional: Boolean (Optional)\n                     isUnique: Boolean (Optional)\n                     name: String (Optional)\n                     options (Optional): {\n                         String: String (Required)\n                     }\n                     typeName: String (Optional)\n                     valuesMaxCount: Integer (Optional)\n                     valuesMinCount: Integer (Optional)\n                 }\n             ]\n         }\n     ]\n     classificationDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             entityTypes (Optional): [\n                 String (Optional)\n             ]\n             subTypes (Optional): [\n                 String (Optional)\n             ]\n             superTypes (Optional): [\n                 String (Optional)\n             ]\n         }\n     ]\n     entityDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             subTypes (Optional): [\n                 String (Optional)\n             ]\n             superTypes (Optional): [\n                 String (Optional)\n             ]\n             relationshipAttributeDefs (Optional): [\n                  (Optional){\n                     cardinality: String(SINGLE/LIST/SET) (Optional)\n                     constraints (Optional): [\n                         (recursive schema, see above)\n                     ]\n                     defaultValue: String (Optional)\n                     description: String (Optional)\n                     includeInNotification: Boolean (Optional)\n                     isIndexable: Boolean (Optional)\n                     isOptional: Boolean (Optional)\n                     isUnique: Boolean (Optional)\n                     name: String (Optional)\n                     options (Optional): {\n                         String: String (Required)\n                     }\n                     typeName: String (Optional)\n                     valuesMaxCount: Integer (Optional)\n                     valuesMinCount: Integer (Optional)\n                     isLegacyAttribute: Boolean (Optional)\n                     relationshipTypeName: String (Optional)\n                 }\n             ]\n         }\n     ]\n     enumDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             defaultValue: String (Optional)\n             elementDefs (Optional): [\n                  (Optional){\n                     description: String (Optional)\n                     ordinal: Integer (Optional)\n                     value: String (Optional)\n                 }\n             ]\n         }\n     ]\n     relationshipDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             endDef1 (Optional): {\n                 cardinality: String(SINGLE/LIST/SET) (Optional)\n                 description: String (Optional)\n                 isContainer: Boolean (Optional)\n                 isLegacyAttribute: Boolean (Optional)\n                 name: String (Optional)\n                 type: String (Optional)\n             }\n             endDef2 (Optional): (recursive schema, see endDef2 above)\n             relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION) (Optional)\n             relationshipLabel: String (Optional)\n         }\n     ]\n     structDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n     termTemplateDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.batchUpdate(com.azure.analytics.purview.datamap.models.AtlasTypesDef)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.batchUpdate(AtlasTypesDef body)"
  name: "batchUpdate(AtlasTypesDef body)"
  nameWithType: "TypeDefinitionClient.batchUpdate(AtlasTypesDef body)"
  summary: "Update all types in bulk, changes detected in the type definitions would be persisted."
  parameters:
  - description: "Body parameter."
    name: "body"
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasTypesDef?alt=com.azure.analytics.purview.datamap.models.AtlasTypesDef&text=AtlasTypesDef\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AtlasTypesDef batchUpdate(AtlasTypesDef body)"
  desc: "Update all types in bulk, changes detected in the type definitions would be persisted."
  returns:
    description: "the definitions of types."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasTypesDef?alt=com.azure.analytics.purview.datamap.models.AtlasTypesDef&text=AtlasTypesDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.batchUpdateWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.batchUpdateWithResponse(BinaryData body, RequestOptions requestOptions)"
  name: "batchUpdateWithResponse(BinaryData body, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.batchUpdateWithResponse(BinaryData body, RequestOptions requestOptions)"
  summary: "Update all types in bulk, changes detected in the type definitions would be persisted."
  parameters:
  - description: "Body parameter."
    name: "body"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> batchUpdateWithResponse(BinaryData body, RequestOptions requestOptions)"
  desc: "Update all types in bulk, changes detected in the type definitions would be persisted.\n\n**Request Body Schema**\n\n```java\n{\n     businessMetadataDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): {\n                 availableLocales (Optional): [\n                     String (Optional)\n                 ]\n                 calendar: Double (Optional)\n                 dateInstance (Optional): (recursive schema, see dateInstance above)\n                 dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n                 instance (Optional): (recursive schema, see instance above)\n                 lenient: Boolean (Optional)\n                 numberFormat (Optional): {\n                     availableLocales (Optional): [\n                         String (Optional)\n                     ]\n                     currency: String (Optional)\n                     currencyInstance (Optional): (recursive schema, see currencyInstance above)\n                     groupingUsed: Boolean (Optional)\n                     instance (Optional): (recursive schema, see instance above)\n                     integerInstance (Optional): (recursive schema, see integerInstance above)\n                     maximumFractionDigits: Integer (Optional)\n                     maximumIntegerDigits: Integer (Optional)\n                     minimumFractionDigits: Integer (Optional)\n                     minimumIntegerDigits: Integer (Optional)\n                     numberInstance (Optional): (recursive schema, see numberInstance above)\n                     parseIntegerOnly: Boolean (Optional)\n                     percentInstance (Optional): (recursive schema, see percentInstance above)\n                     roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n                 }\n                 timeInstance (Optional): (recursive schema, see timeInstance above)\n                 timeZone (Optional): {\n                     dstSavings: Integer (Optional)\n                     id: String (Optional)\n                     availableIds (Optional): [\n                         String (Optional)\n                     ]\n                     default (Optional): (recursive schema, see default above)\n                     displayName: String (Optional)\n                     rawOffset: Integer (Optional)\n                 }\n             }\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                  (Optional){\n                     cardinality: String(SINGLE/LIST/SET) (Optional)\n                     constraints (Optional): [\n                          (Optional){\n                             params (Optional): {\n                                 String: BinaryData (Required)\n                             }\n                             type: String (Optional)\n                         }\n                     ]\n                     defaultValue: String (Optional)\n                     description: String (Optional)\n                     includeInNotification: Boolean (Optional)\n                     isIndexable: Boolean (Optional)\n                     isOptional: Boolean (Optional)\n                     isUnique: Boolean (Optional)\n                     name: String (Optional)\n                     options (Optional): {\n                         String: String (Required)\n                     }\n                     typeName: String (Optional)\n                     valuesMaxCount: Integer (Optional)\n                     valuesMinCount: Integer (Optional)\n                 }\n             ]\n         }\n     ]\n     classificationDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             entityTypes (Optional): [\n                 String (Optional)\n             ]\n             subTypes (Optional): [\n                 String (Optional)\n             ]\n             superTypes (Optional): [\n                 String (Optional)\n             ]\n         }\n     ]\n     entityDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             subTypes (Optional): [\n                 String (Optional)\n             ]\n             superTypes (Optional): [\n                 String (Optional)\n             ]\n             relationshipAttributeDefs (Optional): [\n                  (Optional){\n                     cardinality: String(SINGLE/LIST/SET) (Optional)\n                     constraints (Optional): [\n                         (recursive schema, see above)\n                     ]\n                     defaultValue: String (Optional)\n                     description: String (Optional)\n                     includeInNotification: Boolean (Optional)\n                     isIndexable: Boolean (Optional)\n                     isOptional: Boolean (Optional)\n                     isUnique: Boolean (Optional)\n                     name: String (Optional)\n                     options (Optional): {\n                         String: String (Required)\n                     }\n                     typeName: String (Optional)\n                     valuesMaxCount: Integer (Optional)\n                     valuesMinCount: Integer (Optional)\n                     isLegacyAttribute: Boolean (Optional)\n                     relationshipTypeName: String (Optional)\n                 }\n             ]\n         }\n     ]\n     enumDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             defaultValue: String (Optional)\n             elementDefs (Optional): [\n                  (Optional){\n                     description: String (Optional)\n                     ordinal: Integer (Optional)\n                     value: String (Optional)\n                 }\n             ]\n         }\n     ]\n     relationshipDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             endDef1 (Optional): {\n                 cardinality: String(SINGLE/LIST/SET) (Optional)\n                 description: String (Optional)\n                 isContainer: Boolean (Optional)\n                 isLegacyAttribute: Boolean (Optional)\n                 name: String (Optional)\n                 type: String (Optional)\n             }\n             endDef2 (Optional): (recursive schema, see endDef2 above)\n             relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION) (Optional)\n             relationshipLabel: String (Optional)\n         }\n     ]\n     structDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n     termTemplateDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     businessMetadataDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): {\n                 availableLocales (Optional): [\n                     String (Optional)\n                 ]\n                 calendar: Double (Optional)\n                 dateInstance (Optional): (recursive schema, see dateInstance above)\n                 dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n                 instance (Optional): (recursive schema, see instance above)\n                 lenient: Boolean (Optional)\n                 numberFormat (Optional): {\n                     availableLocales (Optional): [\n                         String (Optional)\n                     ]\n                     currency: String (Optional)\n                     currencyInstance (Optional): (recursive schema, see currencyInstance above)\n                     groupingUsed: Boolean (Optional)\n                     instance (Optional): (recursive schema, see instance above)\n                     integerInstance (Optional): (recursive schema, see integerInstance above)\n                     maximumFractionDigits: Integer (Optional)\n                     maximumIntegerDigits: Integer (Optional)\n                     minimumFractionDigits: Integer (Optional)\n                     minimumIntegerDigits: Integer (Optional)\n                     numberInstance (Optional): (recursive schema, see numberInstance above)\n                     parseIntegerOnly: Boolean (Optional)\n                     percentInstance (Optional): (recursive schema, see percentInstance above)\n                     roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n                 }\n                 timeInstance (Optional): (recursive schema, see timeInstance above)\n                 timeZone (Optional): {\n                     dstSavings: Integer (Optional)\n                     id: String (Optional)\n                     availableIds (Optional): [\n                         String (Optional)\n                     ]\n                     default (Optional): (recursive schema, see default above)\n                     displayName: String (Optional)\n                     rawOffset: Integer (Optional)\n                 }\n             }\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                  (Optional){\n                     cardinality: String(SINGLE/LIST/SET) (Optional)\n                     constraints (Optional): [\n                          (Optional){\n                             params (Optional): {\n                                 String: BinaryData (Required)\n                             }\n                             type: String (Optional)\n                         }\n                     ]\n                     defaultValue: String (Optional)\n                     description: String (Optional)\n                     includeInNotification: Boolean (Optional)\n                     isIndexable: Boolean (Optional)\n                     isOptional: Boolean (Optional)\n                     isUnique: Boolean (Optional)\n                     name: String (Optional)\n                     options (Optional): {\n                         String: String (Required)\n                     }\n                     typeName: String (Optional)\n                     valuesMaxCount: Integer (Optional)\n                     valuesMinCount: Integer (Optional)\n                 }\n             ]\n         }\n     ]\n     classificationDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             entityTypes (Optional): [\n                 String (Optional)\n             ]\n             subTypes (Optional): [\n                 String (Optional)\n             ]\n             superTypes (Optional): [\n                 String (Optional)\n             ]\n         }\n     ]\n     entityDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             subTypes (Optional): [\n                 String (Optional)\n             ]\n             superTypes (Optional): [\n                 String (Optional)\n             ]\n             relationshipAttributeDefs (Optional): [\n                  (Optional){\n                     cardinality: String(SINGLE/LIST/SET) (Optional)\n                     constraints (Optional): [\n                         (recursive schema, see above)\n                     ]\n                     defaultValue: String (Optional)\n                     description: String (Optional)\n                     includeInNotification: Boolean (Optional)\n                     isIndexable: Boolean (Optional)\n                     isOptional: Boolean (Optional)\n                     isUnique: Boolean (Optional)\n                     name: String (Optional)\n                     options (Optional): {\n                         String: String (Required)\n                     }\n                     typeName: String (Optional)\n                     valuesMaxCount: Integer (Optional)\n                     valuesMinCount: Integer (Optional)\n                     isLegacyAttribute: Boolean (Optional)\n                     relationshipTypeName: String (Optional)\n                 }\n             ]\n         }\n     ]\n     enumDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             defaultValue: String (Optional)\n             elementDefs (Optional): [\n                  (Optional){\n                     description: String (Optional)\n                     ordinal: Integer (Optional)\n                     value: String (Optional)\n                 }\n             ]\n         }\n     ]\n     relationshipDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             endDef1 (Optional): {\n                 cardinality: String(SINGLE/LIST/SET) (Optional)\n                 description: String (Optional)\n                 isContainer: Boolean (Optional)\n                 isLegacyAttribute: Boolean (Optional)\n                 name: String (Optional)\n                 type: String (Optional)\n             }\n             endDef2 (Optional): (recursive schema, see endDef2 above)\n             relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION) (Optional)\n             relationshipLabel: String (Optional)\n         }\n     ]\n     structDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n     termTemplateDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n }\n```"
  returns:
    description: "the definitions of types along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.delete(java.lang.String)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.delete(String name)"
  name: "delete(String name)"
  nameWithType: "TypeDefinitionClient.delete(String name)"
  summary: "Delete API for type identified by its name."
  parameters:
  - description: "The name of the type."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void delete(String name)"
  desc: "Delete API for type identified by its name."
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.deleteWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.deleteWithResponse(String name, RequestOptions requestOptions)"
  name: "deleteWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.deleteWithResponse(String name, RequestOptions requestOptions)"
  summary: "Delete API for type identified by its name."
  parameters:
  - description: "The name of the type."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteWithResponse(String name, RequestOptions requestOptions)"
  desc: "Delete API for type identified by its name."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.get()"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.get()"
  name: "get()"
  nameWithType: "TypeDefinitionClient.get()"
  summary: "List all type definitions in bulk."
  syntax: "public AtlasTypesDef get()"
  desc: "List all type definitions in bulk."
  returns:
    description: "the definitions of types."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasTypesDef?alt=com.azure.analytics.purview.datamap.models.AtlasTypesDef&text=AtlasTypesDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.get(java.lang.Boolean,com.azure.analytics.purview.datamap.models.TypeCategory)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.get(Boolean includeTermTemplate, TypeCategory type)"
  name: "get(Boolean includeTermTemplate, TypeCategory type)"
  nameWithType: "TypeDefinitionClient.get(Boolean includeTermTemplate, TypeCategory type)"
  summary: "List all type definitions in bulk."
  parameters:
  - description: "Whether include termtemplatedef when return all typedefs.\n This is always true\n when search filter type=term_template."
    name: "includeTermTemplate"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  - description: "Typedef name as search filter when get typedefs."
    name: "type"
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.TypeCategory?alt=com.azure.analytics.purview.datamap.models.TypeCategory&text=TypeCategory\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AtlasTypesDef get(Boolean includeTermTemplate, TypeCategory type)"
  desc: "List all type definitions in bulk."
  returns:
    description: "the definitions of types."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasTypesDef?alt=com.azure.analytics.purview.datamap.models.AtlasTypesDef&text=AtlasTypesDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getBusinessMetadataById(java.lang.String)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getBusinessMetadataById(String guid)"
  name: "getBusinessMetadataById(String guid)"
  nameWithType: "TypeDefinitionClient.getBusinessMetadataById(String guid)"
  summary: "Get the business<wbr>Metadata definition for the given guid."
  parameters:
  - description: "businessMetadata guid."
    name: "guid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AtlasBusinessMetadataDef getBusinessMetadataById(String guid)"
  desc: "Get the businessMetadata definition for the given guid."
  returns:
    description: "the businessMetadata definition for the given guid."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasBusinessMetadataDef?alt=com.azure.analytics.purview.datamap.models.AtlasBusinessMetadataDef&text=AtlasBusinessMetadataDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getBusinessMetadataByIdWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getBusinessMetadataByIdWithResponse(String guid, RequestOptions requestOptions)"
  name: "getBusinessMetadataByIdWithResponse(String guid, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getBusinessMetadataByIdWithResponse(String guid, RequestOptions requestOptions)"
  summary: "Get the business<wbr>Metadata definition for the given guid."
  parameters:
  - description: "businessMetadata guid."
    name: "guid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getBusinessMetadataByIdWithResponse(String guid, RequestOptions requestOptions)"
  desc: "Get the businessMetadata definition for the given guid.\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n     createTime: Long (Optional)\n     createdBy: String (Optional)\n     dateFormatter (Optional): {\n         availableLocales (Optional): [\n             String (Optional)\n         ]\n         calendar: Double (Optional)\n         dateInstance (Optional): (recursive schema, see dateInstance above)\n         dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n         instance (Optional): (recursive schema, see instance above)\n         lenient: Boolean (Optional)\n         numberFormat (Optional): {\n             availableLocales (Optional): [\n                 String (Optional)\n             ]\n             currency: String (Optional)\n             currencyInstance (Optional): (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean (Optional)\n             instance (Optional): (recursive schema, see instance above)\n             integerInstance (Optional): (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer (Optional)\n             maximumIntegerDigits: Integer (Optional)\n             minimumFractionDigits: Integer (Optional)\n             minimumIntegerDigits: Integer (Optional)\n             numberInstance (Optional): (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean (Optional)\n             percentInstance (Optional): (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n         }\n         timeInstance (Optional): (recursive schema, see timeInstance above)\n         timeZone (Optional): {\n             dstSavings: Integer (Optional)\n             id: String (Optional)\n             availableIds (Optional): [\n                 String (Optional)\n             ]\n             default (Optional): (recursive schema, see default above)\n             displayName: String (Optional)\n             rawOffset: Integer (Optional)\n         }\n     }\n     description: String (Optional)\n     guid: String (Optional)\n     name: String (Optional)\n     options (Optional): {\n         String: String (Required)\n     }\n     serviceType: String (Optional)\n     typeVersion: String (Optional)\n     updateTime: Long (Optional)\n     updatedBy: String (Optional)\n     version: Long (Optional)\n     lastModifiedTS: String (Optional)\n     attributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                  (Optional){\n                     params (Optional): {\n                         String: BinaryData (Required)\n                     }\n                     type: String (Optional)\n                 }\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "the businessMetadata definition for the given guid along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getBusinessMetadataByName(java.lang.String)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getBusinessMetadataByName(String name)"
  name: "getBusinessMetadataByName(String name)"
  nameWithType: "TypeDefinitionClient.getBusinessMetadataByName(String name)"
  summary: "Get the business<wbr>Metadata definition by it's name (unique)."
  parameters:
  - description: "businessMetadata name."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AtlasBusinessMetadataDef getBusinessMetadataByName(String name)"
  desc: "Get the businessMetadata definition by it's name (unique)."
  returns:
    description: "the businessMetadata definition by it's name (unique)."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasBusinessMetadataDef?alt=com.azure.analytics.purview.datamap.models.AtlasBusinessMetadataDef&text=AtlasBusinessMetadataDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getBusinessMetadataByNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getBusinessMetadataByNameWithResponse(String name, RequestOptions requestOptions)"
  name: "getBusinessMetadataByNameWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getBusinessMetadataByNameWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get the business<wbr>Metadata definition by it's name (unique)."
  parameters:
  - description: "businessMetadata name."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getBusinessMetadataByNameWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get the businessMetadata definition by it's name (unique).\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n     createTime: Long (Optional)\n     createdBy: String (Optional)\n     dateFormatter (Optional): {\n         availableLocales (Optional): [\n             String (Optional)\n         ]\n         calendar: Double (Optional)\n         dateInstance (Optional): (recursive schema, see dateInstance above)\n         dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n         instance (Optional): (recursive schema, see instance above)\n         lenient: Boolean (Optional)\n         numberFormat (Optional): {\n             availableLocales (Optional): [\n                 String (Optional)\n             ]\n             currency: String (Optional)\n             currencyInstance (Optional): (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean (Optional)\n             instance (Optional): (recursive schema, see instance above)\n             integerInstance (Optional): (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer (Optional)\n             maximumIntegerDigits: Integer (Optional)\n             minimumFractionDigits: Integer (Optional)\n             minimumIntegerDigits: Integer (Optional)\n             numberInstance (Optional): (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean (Optional)\n             percentInstance (Optional): (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n         }\n         timeInstance (Optional): (recursive schema, see timeInstance above)\n         timeZone (Optional): {\n             dstSavings: Integer (Optional)\n             id: String (Optional)\n             availableIds (Optional): [\n                 String (Optional)\n             ]\n             default (Optional): (recursive schema, see default above)\n             displayName: String (Optional)\n             rawOffset: Integer (Optional)\n         }\n     }\n     description: String (Optional)\n     guid: String (Optional)\n     name: String (Optional)\n     options (Optional): {\n         String: String (Required)\n     }\n     serviceType: String (Optional)\n     typeVersion: String (Optional)\n     updateTime: Long (Optional)\n     updatedBy: String (Optional)\n     version: Long (Optional)\n     lastModifiedTS: String (Optional)\n     attributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                  (Optional){\n                     params (Optional): {\n                         String: BinaryData (Required)\n                     }\n                     type: String (Optional)\n                 }\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "the businessMetadata definition by it's name (unique) along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getById(java.lang.String)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getById(String guid)"
  name: "getById(String guid)"
  nameWithType: "TypeDefinitionClient.getById(String guid)"
  summary: "Get the type definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the type."
    name: "guid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AtlasTypeDef getById(String guid)"
  desc: "Get the type definition for the given GUID."
  returns:
    description: "the type definition for the given GUID."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasTypeDef?alt=com.azure.analytics.purview.datamap.models.AtlasTypeDef&text=AtlasTypeDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getByIdWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getByIdWithResponse(String guid, RequestOptions requestOptions)"
  name: "getByIdWithResponse(String guid, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getByIdWithResponse(String guid, RequestOptions requestOptions)"
  summary: "Get the type definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the type."
    name: "guid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getByIdWithResponse(String guid, RequestOptions requestOptions)"
  desc: "Get the type definition for the given GUID.\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n     createTime: Long (Optional)\n     createdBy: String (Optional)\n     dateFormatter (Optional): {\n         availableLocales (Optional): [\n             String (Optional)\n         ]\n         calendar: Double (Optional)\n         dateInstance (Optional): (recursive schema, see dateInstance above)\n         dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n         instance (Optional): (recursive schema, see instance above)\n         lenient: Boolean (Optional)\n         numberFormat (Optional): {\n             availableLocales (Optional): [\n                 String (Optional)\n             ]\n             currency: String (Optional)\n             currencyInstance (Optional): (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean (Optional)\n             instance (Optional): (recursive schema, see instance above)\n             integerInstance (Optional): (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer (Optional)\n             maximumIntegerDigits: Integer (Optional)\n             minimumFractionDigits: Integer (Optional)\n             minimumIntegerDigits: Integer (Optional)\n             numberInstance (Optional): (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean (Optional)\n             percentInstance (Optional): (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n         }\n         timeInstance (Optional): (recursive schema, see timeInstance above)\n         timeZone (Optional): {\n             dstSavings: Integer (Optional)\n             id: String (Optional)\n             availableIds (Optional): [\n                 String (Optional)\n             ]\n             default (Optional): (recursive schema, see default above)\n             displayName: String (Optional)\n             rawOffset: Integer (Optional)\n         }\n     }\n     description: String (Optional)\n     guid: String (Optional)\n     name: String (Optional)\n     options (Optional): {\n         String: String (Required)\n     }\n     serviceType: String (Optional)\n     typeVersion: String (Optional)\n     updateTime: Long (Optional)\n     updatedBy: String (Optional)\n     version: Long (Optional)\n     lastModifiedTS: String (Optional)\n     entityTypes (Optional): [\n         String (Optional)\n     ]\n     subTypes (Optional): [\n         String (Optional)\n     ]\n     superTypes (Optional): [\n         String (Optional)\n     ]\n     relationshipAttributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                  (Optional){\n                     params (Optional): {\n                         String: BinaryData (Required)\n                     }\n                     type: String (Optional)\n                 }\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n             isLegacyAttribute: Boolean (Optional)\n             relationshipTypeName: String (Optional)\n         }\n     ]\n     defaultValue: String (Optional)\n     elementDefs (Optional): [\n          (Optional){\n             description: String (Optional)\n             ordinal: Integer (Optional)\n             value: String (Optional)\n         }\n     ]\n     endDef1 (Optional): {\n         cardinality: String(SINGLE/LIST/SET) (Optional)\n         description: String (Optional)\n         isContainer: Boolean (Optional)\n         isLegacyAttribute: Boolean (Optional)\n         name: String (Optional)\n         type: String (Optional)\n     }\n     endDef2 (Optional): (recursive schema, see endDef2 above)\n     relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION) (Optional)\n     relationshipLabel: String (Optional)\n     attributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                 (recursive schema, see above)\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "the type definition for the given GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getByName(java.lang.String)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getByName(String name)"
  name: "getByName(String name)"
  nameWithType: "TypeDefinitionClient.getByName(String name)"
  summary: "Get the type definition by its name (unique)."
  parameters:
  - description: "The name of the type."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AtlasTypeDef getByName(String name)"
  desc: "Get the type definition by its name (unique)."
  returns:
    description: "the type definition by its name (unique)."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasTypeDef?alt=com.azure.analytics.purview.datamap.models.AtlasTypeDef&text=AtlasTypeDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getByNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getByNameWithResponse(String name, RequestOptions requestOptions)"
  name: "getByNameWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getByNameWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get the type definition by its name (unique)."
  parameters:
  - description: "The name of the type."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getByNameWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get the type definition by its name (unique).\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n     createTime: Long (Optional)\n     createdBy: String (Optional)\n     dateFormatter (Optional): {\n         availableLocales (Optional): [\n             String (Optional)\n         ]\n         calendar: Double (Optional)\n         dateInstance (Optional): (recursive schema, see dateInstance above)\n         dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n         instance (Optional): (recursive schema, see instance above)\n         lenient: Boolean (Optional)\n         numberFormat (Optional): {\n             availableLocales (Optional): [\n                 String (Optional)\n             ]\n             currency: String (Optional)\n             currencyInstance (Optional): (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean (Optional)\n             instance (Optional): (recursive schema, see instance above)\n             integerInstance (Optional): (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer (Optional)\n             maximumIntegerDigits: Integer (Optional)\n             minimumFractionDigits: Integer (Optional)\n             minimumIntegerDigits: Integer (Optional)\n             numberInstance (Optional): (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean (Optional)\n             percentInstance (Optional): (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n         }\n         timeInstance (Optional): (recursive schema, see timeInstance above)\n         timeZone (Optional): {\n             dstSavings: Integer (Optional)\n             id: String (Optional)\n             availableIds (Optional): [\n                 String (Optional)\n             ]\n             default (Optional): (recursive schema, see default above)\n             displayName: String (Optional)\n             rawOffset: Integer (Optional)\n         }\n     }\n     description: String (Optional)\n     guid: String (Optional)\n     name: String (Optional)\n     options (Optional): {\n         String: String (Required)\n     }\n     serviceType: String (Optional)\n     typeVersion: String (Optional)\n     updateTime: Long (Optional)\n     updatedBy: String (Optional)\n     version: Long (Optional)\n     lastModifiedTS: String (Optional)\n     entityTypes (Optional): [\n         String (Optional)\n     ]\n     subTypes (Optional): [\n         String (Optional)\n     ]\n     superTypes (Optional): [\n         String (Optional)\n     ]\n     relationshipAttributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                  (Optional){\n                     params (Optional): {\n                         String: BinaryData (Required)\n                     }\n                     type: String (Optional)\n                 }\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n             isLegacyAttribute: Boolean (Optional)\n             relationshipTypeName: String (Optional)\n         }\n     ]\n     defaultValue: String (Optional)\n     elementDefs (Optional): [\n          (Optional){\n             description: String (Optional)\n             ordinal: Integer (Optional)\n             value: String (Optional)\n         }\n     ]\n     endDef1 (Optional): {\n         cardinality: String(SINGLE/LIST/SET) (Optional)\n         description: String (Optional)\n         isContainer: Boolean (Optional)\n         isLegacyAttribute: Boolean (Optional)\n         name: String (Optional)\n         type: String (Optional)\n     }\n     endDef2 (Optional): (recursive schema, see endDef2 above)\n     relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION) (Optional)\n     relationshipLabel: String (Optional)\n     attributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                 (recursive schema, see above)\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "the type definition by its name (unique) along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getClassificationById(java.lang.String)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getClassificationById(String guid)"
  name: "getClassificationById(String guid)"
  nameWithType: "TypeDefinitionClient.getClassificationById(String guid)"
  summary: "Get the classification definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the classification."
    name: "guid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AtlasClassificationDef getClassificationById(String guid)"
  desc: "Get the classification definition for the given GUID."
  returns:
    description: "the classification definition for the given GUID."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasClassificationDef?alt=com.azure.analytics.purview.datamap.models.AtlasClassificationDef&text=AtlasClassificationDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getClassificationByIdWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getClassificationByIdWithResponse(String guid, RequestOptions requestOptions)"
  name: "getClassificationByIdWithResponse(String guid, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getClassificationByIdWithResponse(String guid, RequestOptions requestOptions)"
  summary: "Get the classification definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the classification."
    name: "guid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getClassificationByIdWithResponse(String guid, RequestOptions requestOptions)"
  desc: "Get the classification definition for the given GUID.\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n     createTime: Long (Optional)\n     createdBy: String (Optional)\n     dateFormatter (Optional): {\n         availableLocales (Optional): [\n             String (Optional)\n         ]\n         calendar: Double (Optional)\n         dateInstance (Optional): (recursive schema, see dateInstance above)\n         dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n         instance (Optional): (recursive schema, see instance above)\n         lenient: Boolean (Optional)\n         numberFormat (Optional): {\n             availableLocales (Optional): [\n                 String (Optional)\n             ]\n             currency: String (Optional)\n             currencyInstance (Optional): (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean (Optional)\n             instance (Optional): (recursive schema, see instance above)\n             integerInstance (Optional): (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer (Optional)\n             maximumIntegerDigits: Integer (Optional)\n             minimumFractionDigits: Integer (Optional)\n             minimumIntegerDigits: Integer (Optional)\n             numberInstance (Optional): (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean (Optional)\n             percentInstance (Optional): (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n         }\n         timeInstance (Optional): (recursive schema, see timeInstance above)\n         timeZone (Optional): {\n             dstSavings: Integer (Optional)\n             id: String (Optional)\n             availableIds (Optional): [\n                 String (Optional)\n             ]\n             default (Optional): (recursive schema, see default above)\n             displayName: String (Optional)\n             rawOffset: Integer (Optional)\n         }\n     }\n     description: String (Optional)\n     guid: String (Optional)\n     name: String (Optional)\n     options (Optional): {\n         String: String (Required)\n     }\n     serviceType: String (Optional)\n     typeVersion: String (Optional)\n     updateTime: Long (Optional)\n     updatedBy: String (Optional)\n     version: Long (Optional)\n     lastModifiedTS: String (Optional)\n     attributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                  (Optional){\n                     params (Optional): {\n                         String: BinaryData (Required)\n                     }\n                     type: String (Optional)\n                 }\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n         }\n     ]\n     entityTypes (Optional): [\n         String (Optional)\n     ]\n     subTypes (Optional): [\n         String (Optional)\n     ]\n     superTypes (Optional): [\n         String (Optional)\n     ]\n }\n```"
  returns:
    description: "the classification definition for the given GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getClassificationByName(java.lang.String)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getClassificationByName(String name)"
  name: "getClassificationByName(String name)"
  nameWithType: "TypeDefinitionClient.getClassificationByName(String name)"
  summary: "Get the classification definition by its name (unique)."
  parameters:
  - description: "The name of the classification."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AtlasClassificationDef getClassificationByName(String name)"
  desc: "Get the classification definition by its name (unique)."
  returns:
    description: "the classification definition by its name (unique)."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasClassificationDef?alt=com.azure.analytics.purview.datamap.models.AtlasClassificationDef&text=AtlasClassificationDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getClassificationByNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getClassificationByNameWithResponse(String name, RequestOptions requestOptions)"
  name: "getClassificationByNameWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getClassificationByNameWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get the classification definition by its name (unique)."
  parameters:
  - description: "The name of the classification."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getClassificationByNameWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get the classification definition by its name (unique).\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n     createTime: Long (Optional)\n     createdBy: String (Optional)\n     dateFormatter (Optional): {\n         availableLocales (Optional): [\n             String (Optional)\n         ]\n         calendar: Double (Optional)\n         dateInstance (Optional): (recursive schema, see dateInstance above)\n         dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n         instance (Optional): (recursive schema, see instance above)\n         lenient: Boolean (Optional)\n         numberFormat (Optional): {\n             availableLocales (Optional): [\n                 String (Optional)\n             ]\n             currency: String (Optional)\n             currencyInstance (Optional): (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean (Optional)\n             instance (Optional): (recursive schema, see instance above)\n             integerInstance (Optional): (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer (Optional)\n             maximumIntegerDigits: Integer (Optional)\n             minimumFractionDigits: Integer (Optional)\n             minimumIntegerDigits: Integer (Optional)\n             numberInstance (Optional): (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean (Optional)\n             percentInstance (Optional): (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n         }\n         timeInstance (Optional): (recursive schema, see timeInstance above)\n         timeZone (Optional): {\n             dstSavings: Integer (Optional)\n             id: String (Optional)\n             availableIds (Optional): [\n                 String (Optional)\n             ]\n             default (Optional): (recursive schema, see default above)\n             displayName: String (Optional)\n             rawOffset: Integer (Optional)\n         }\n     }\n     description: String (Optional)\n     guid: String (Optional)\n     name: String (Optional)\n     options (Optional): {\n         String: String (Required)\n     }\n     serviceType: String (Optional)\n     typeVersion: String (Optional)\n     updateTime: Long (Optional)\n     updatedBy: String (Optional)\n     version: Long (Optional)\n     lastModifiedTS: String (Optional)\n     attributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                  (Optional){\n                     params (Optional): {\n                         String: BinaryData (Required)\n                     }\n                     type: String (Optional)\n                 }\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n         }\n     ]\n     entityTypes (Optional): [\n         String (Optional)\n     ]\n     subTypes (Optional): [\n         String (Optional)\n     ]\n     superTypes (Optional): [\n         String (Optional)\n     ]\n }\n```"
  returns:
    description: "the classification definition by its name (unique) along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getEntityById(java.lang.String)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getEntityById(String guid)"
  name: "getEntityById(String guid)"
  nameWithType: "TypeDefinitionClient.getEntityById(String guid)"
  summary: "Get the Entity definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the entity."
    name: "guid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AtlasEntityDef getEntityById(String guid)"
  desc: "Get the Entity definition for the given GUID."
  returns:
    description: "the Entity definition for the given GUID."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasEntityDef?alt=com.azure.analytics.purview.datamap.models.AtlasEntityDef&text=AtlasEntityDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getEntityByIdWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getEntityByIdWithResponse(String guid, RequestOptions requestOptions)"
  name: "getEntityByIdWithResponse(String guid, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getEntityByIdWithResponse(String guid, RequestOptions requestOptions)"
  summary: "Get the Entity definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the entity."
    name: "guid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getEntityByIdWithResponse(String guid, RequestOptions requestOptions)"
  desc: "Get the Entity definition for the given GUID.\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n     createTime: Long (Optional)\n     createdBy: String (Optional)\n     dateFormatter (Optional): {\n         availableLocales (Optional): [\n             String (Optional)\n         ]\n         calendar: Double (Optional)\n         dateInstance (Optional): (recursive schema, see dateInstance above)\n         dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n         instance (Optional): (recursive schema, see instance above)\n         lenient: Boolean (Optional)\n         numberFormat (Optional): {\n             availableLocales (Optional): [\n                 String (Optional)\n             ]\n             currency: String (Optional)\n             currencyInstance (Optional): (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean (Optional)\n             instance (Optional): (recursive schema, see instance above)\n             integerInstance (Optional): (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer (Optional)\n             maximumIntegerDigits: Integer (Optional)\n             minimumFractionDigits: Integer (Optional)\n             minimumIntegerDigits: Integer (Optional)\n             numberInstance (Optional): (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean (Optional)\n             percentInstance (Optional): (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n         }\n         timeInstance (Optional): (recursive schema, see timeInstance above)\n         timeZone (Optional): {\n             dstSavings: Integer (Optional)\n             id: String (Optional)\n             availableIds (Optional): [\n                 String (Optional)\n             ]\n             default (Optional): (recursive schema, see default above)\n             displayName: String (Optional)\n             rawOffset: Integer (Optional)\n         }\n     }\n     description: String (Optional)\n     guid: String (Optional)\n     name: String (Optional)\n     options (Optional): {\n         String: String (Required)\n     }\n     serviceType: String (Optional)\n     typeVersion: String (Optional)\n     updateTime: Long (Optional)\n     updatedBy: String (Optional)\n     version: Long (Optional)\n     lastModifiedTS: String (Optional)\n     attributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                  (Optional){\n                     params (Optional): {\n                         String: BinaryData (Required)\n                     }\n                     type: String (Optional)\n                 }\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n         }\n     ]\n     subTypes (Optional): [\n         String (Optional)\n     ]\n     superTypes (Optional): [\n         String (Optional)\n     ]\n     relationshipAttributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                 (recursive schema, see above)\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n             isLegacyAttribute: Boolean (Optional)\n             relationshipTypeName: String (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "the Entity definition for the given GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getEntityByName(java.lang.String)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getEntityByName(String name)"
  name: "getEntityByName(String name)"
  nameWithType: "TypeDefinitionClient.getEntityByName(String name)"
  summary: "Get the entity definition by its name (unique)."
  parameters:
  - description: "The name of the entity."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AtlasEntityDef getEntityByName(String name)"
  desc: "Get the entity definition by its name (unique)."
  returns:
    description: "the entity definition by its name (unique)."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasEntityDef?alt=com.azure.analytics.purview.datamap.models.AtlasEntityDef&text=AtlasEntityDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getEntityByNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getEntityByNameWithResponse(String name, RequestOptions requestOptions)"
  name: "getEntityByNameWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getEntityByNameWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get the entity definition by its name (unique)."
  parameters:
  - description: "The name of the entity."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getEntityByNameWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get the entity definition by its name (unique).\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n     createTime: Long (Optional)\n     createdBy: String (Optional)\n     dateFormatter (Optional): {\n         availableLocales (Optional): [\n             String (Optional)\n         ]\n         calendar: Double (Optional)\n         dateInstance (Optional): (recursive schema, see dateInstance above)\n         dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n         instance (Optional): (recursive schema, see instance above)\n         lenient: Boolean (Optional)\n         numberFormat (Optional): {\n             availableLocales (Optional): [\n                 String (Optional)\n             ]\n             currency: String (Optional)\n             currencyInstance (Optional): (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean (Optional)\n             instance (Optional): (recursive schema, see instance above)\n             integerInstance (Optional): (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer (Optional)\n             maximumIntegerDigits: Integer (Optional)\n             minimumFractionDigits: Integer (Optional)\n             minimumIntegerDigits: Integer (Optional)\n             numberInstance (Optional): (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean (Optional)\n             percentInstance (Optional): (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n         }\n         timeInstance (Optional): (recursive schema, see timeInstance above)\n         timeZone (Optional): {\n             dstSavings: Integer (Optional)\n             id: String (Optional)\n             availableIds (Optional): [\n                 String (Optional)\n             ]\n             default (Optional): (recursive schema, see default above)\n             displayName: String (Optional)\n             rawOffset: Integer (Optional)\n         }\n     }\n     description: String (Optional)\n     guid: String (Optional)\n     name: String (Optional)\n     options (Optional): {\n         String: String (Required)\n     }\n     serviceType: String (Optional)\n     typeVersion: String (Optional)\n     updateTime: Long (Optional)\n     updatedBy: String (Optional)\n     version: Long (Optional)\n     lastModifiedTS: String (Optional)\n     attributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                  (Optional){\n                     params (Optional): {\n                         String: BinaryData (Required)\n                     }\n                     type: String (Optional)\n                 }\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n         }\n     ]\n     subTypes (Optional): [\n         String (Optional)\n     ]\n     superTypes (Optional): [\n         String (Optional)\n     ]\n     relationshipAttributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                 (recursive schema, see above)\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n             isLegacyAttribute: Boolean (Optional)\n             relationshipTypeName: String (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "the entity definition by its name (unique) along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getEnumById(java.lang.String)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getEnumById(String guid)"
  name: "getEnumById(String guid)"
  nameWithType: "TypeDefinitionClient.getEnumById(String guid)"
  summary: "Get the enum definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the enum."
    name: "guid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AtlasEnumDef getEnumById(String guid)"
  desc: "Get the enum definition for the given GUID."
  returns:
    description: "the enum definition for the given GUID."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasEnumDef?alt=com.azure.analytics.purview.datamap.models.AtlasEnumDef&text=AtlasEnumDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getEnumByIdWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getEnumByIdWithResponse(String guid, RequestOptions requestOptions)"
  name: "getEnumByIdWithResponse(String guid, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getEnumByIdWithResponse(String guid, RequestOptions requestOptions)"
  summary: "Get the enum definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the enum."
    name: "guid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getEnumByIdWithResponse(String guid, RequestOptions requestOptions)"
  desc: "Get the enum definition for the given GUID.\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n     createTime: Long (Optional)\n     createdBy: String (Optional)\n     dateFormatter (Optional): {\n         availableLocales (Optional): [\n             String (Optional)\n         ]\n         calendar: Double (Optional)\n         dateInstance (Optional): (recursive schema, see dateInstance above)\n         dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n         instance (Optional): (recursive schema, see instance above)\n         lenient: Boolean (Optional)\n         numberFormat (Optional): {\n             availableLocales (Optional): [\n                 String (Optional)\n             ]\n             currency: String (Optional)\n             currencyInstance (Optional): (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean (Optional)\n             instance (Optional): (recursive schema, see instance above)\n             integerInstance (Optional): (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer (Optional)\n             maximumIntegerDigits: Integer (Optional)\n             minimumFractionDigits: Integer (Optional)\n             minimumIntegerDigits: Integer (Optional)\n             numberInstance (Optional): (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean (Optional)\n             percentInstance (Optional): (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n         }\n         timeInstance (Optional): (recursive schema, see timeInstance above)\n         timeZone (Optional): {\n             dstSavings: Integer (Optional)\n             id: String (Optional)\n             availableIds (Optional): [\n                 String (Optional)\n             ]\n             default (Optional): (recursive schema, see default above)\n             displayName: String (Optional)\n             rawOffset: Integer (Optional)\n         }\n     }\n     description: String (Optional)\n     guid: String (Optional)\n     name: String (Optional)\n     options (Optional): {\n         String: String (Required)\n     }\n     serviceType: String (Optional)\n     typeVersion: String (Optional)\n     updateTime: Long (Optional)\n     updatedBy: String (Optional)\n     version: Long (Optional)\n     lastModifiedTS: String (Optional)\n     defaultValue: String (Optional)\n     elementDefs (Optional): [\n          (Optional){\n             description: String (Optional)\n             ordinal: Integer (Optional)\n             value: String (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "the enum definition for the given GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getEnumByName(java.lang.String)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getEnumByName(String name)"
  name: "getEnumByName(String name)"
  nameWithType: "TypeDefinitionClient.getEnumByName(String name)"
  summary: "Get the enum definition by its name (unique)."
  parameters:
  - description: "The name of the enum."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AtlasEnumDef getEnumByName(String name)"
  desc: "Get the enum definition by its name (unique)."
  returns:
    description: "the enum definition by its name (unique)."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasEnumDef?alt=com.azure.analytics.purview.datamap.models.AtlasEnumDef&text=AtlasEnumDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getEnumByNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getEnumByNameWithResponse(String name, RequestOptions requestOptions)"
  name: "getEnumByNameWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getEnumByNameWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get the enum definition by its name (unique)."
  parameters:
  - description: "The name of the enum."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getEnumByNameWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get the enum definition by its name (unique).\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n     createTime: Long (Optional)\n     createdBy: String (Optional)\n     dateFormatter (Optional): {\n         availableLocales (Optional): [\n             String (Optional)\n         ]\n         calendar: Double (Optional)\n         dateInstance (Optional): (recursive schema, see dateInstance above)\n         dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n         instance (Optional): (recursive schema, see instance above)\n         lenient: Boolean (Optional)\n         numberFormat (Optional): {\n             availableLocales (Optional): [\n                 String (Optional)\n             ]\n             currency: String (Optional)\n             currencyInstance (Optional): (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean (Optional)\n             instance (Optional): (recursive schema, see instance above)\n             integerInstance (Optional): (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer (Optional)\n             maximumIntegerDigits: Integer (Optional)\n             minimumFractionDigits: Integer (Optional)\n             minimumIntegerDigits: Integer (Optional)\n             numberInstance (Optional): (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean (Optional)\n             percentInstance (Optional): (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n         }\n         timeInstance (Optional): (recursive schema, see timeInstance above)\n         timeZone (Optional): {\n             dstSavings: Integer (Optional)\n             id: String (Optional)\n             availableIds (Optional): [\n                 String (Optional)\n             ]\n             default (Optional): (recursive schema, see default above)\n             displayName: String (Optional)\n             rawOffset: Integer (Optional)\n         }\n     }\n     description: String (Optional)\n     guid: String (Optional)\n     name: String (Optional)\n     options (Optional): {\n         String: String (Required)\n     }\n     serviceType: String (Optional)\n     typeVersion: String (Optional)\n     updateTime: Long (Optional)\n     updatedBy: String (Optional)\n     version: Long (Optional)\n     lastModifiedTS: String (Optional)\n     defaultValue: String (Optional)\n     elementDefs (Optional): [\n          (Optional){\n             description: String (Optional)\n             ordinal: Integer (Optional)\n             value: String (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "the enum definition by its name (unique) along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getHeaders()"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getHeaders()"
  name: "getHeaders()"
  nameWithType: "TypeDefinitionClient.getHeaders()"
  summary: "List all type definitions returned as a list of minimal information header."
  syntax: "public List<AtlasTypeDefHeader> getHeaders()"
  desc: "List all type definitions returned as a list of minimal information header."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.analytics.purview.datamap.models.AtlasTypeDefHeader?alt=com.azure.analytics.purview.datamap.models.AtlasTypeDefHeader&text=AtlasTypeDefHeader\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getHeaders(java.lang.Boolean,com.azure.analytics.purview.datamap.models.TypeCategory)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getHeaders(Boolean includeTermTemplate, TypeCategory type)"
  name: "getHeaders(Boolean includeTermTemplate, TypeCategory type)"
  nameWithType: "TypeDefinitionClient.getHeaders(Boolean includeTermTemplate, TypeCategory type)"
  summary: "List all type definitions returned as a list of minimal information header."
  parameters:
  - description: "Whether include termtemplatedef when return all typedefs.\n This is always true\n when search filter type=term_template."
    name: "includeTermTemplate"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  - description: "Typedef name as search filter when get typedefs."
    name: "type"
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.TypeCategory?alt=com.azure.analytics.purview.datamap.models.TypeCategory&text=TypeCategory\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public List<AtlasTypeDefHeader> getHeaders(Boolean includeTermTemplate, TypeCategory type)"
  desc: "List all type definitions returned as a list of minimal information header."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.analytics.purview.datamap.models.AtlasTypeDefHeader?alt=com.azure.analytics.purview.datamap.models.AtlasTypeDefHeader&text=AtlasTypeDefHeader\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getHeadersWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getHeadersWithResponse(RequestOptions requestOptions)"
  name: "getHeadersWithResponse(RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getHeadersWithResponse(RequestOptions requestOptions)"
  summary: "List all type definitions returned as a list of minimal information header."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getHeadersWithResponse(RequestOptions requestOptions)"
  desc: "List all type definitions returned as a list of minimal information header.\n\n**Query Parameters**\n\n    | ------------------- | ------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name                | Type    | Required | Description                                                                                                                                                                                       |\n    | includeTermTemplate | Boolean | No       | Whether include termtemplatedef when return all typedefs. This is always true when search filter type=term\\_template                                                                              |\n    | type                | String  | No       | Typedef name as search filter when get typedefs. Allowed values: \"PRIMITIVE\", \"OBJECT\\_ID\\_TYPE\", \"ENUM\", \"STRUCT\", \"CLASSIFICATION\", \"ENTITY\", \"ARRAY\", \"MAP\", \"RELATIONSHIP\", \"TERM\\_TEMPLATE\". |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n         guid: String (Optional)\n         name: String (Optional)\n     }\n ]\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getRelationshipById(java.lang.String)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getRelationshipById(String guid)"
  name: "getRelationshipById(String guid)"
  nameWithType: "TypeDefinitionClient.getRelationshipById(String guid)"
  summary: "Get the relationship definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the relationship."
    name: "guid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AtlasRelationshipDef getRelationshipById(String guid)"
  desc: "Get the relationship definition for the given GUID."
  returns:
    description: "the relationship definition for the given GUID."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasRelationshipDef?alt=com.azure.analytics.purview.datamap.models.AtlasRelationshipDef&text=AtlasRelationshipDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getRelationshipByIdWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getRelationshipByIdWithResponse(String guid, RequestOptions requestOptions)"
  name: "getRelationshipByIdWithResponse(String guid, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getRelationshipByIdWithResponse(String guid, RequestOptions requestOptions)"
  summary: "Get the relationship definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the relationship."
    name: "guid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getRelationshipByIdWithResponse(String guid, RequestOptions requestOptions)"
  desc: "Get the relationship definition for the given GUID.\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n     createTime: Long (Optional)\n     createdBy: String (Optional)\n     dateFormatter (Optional): {\n         availableLocales (Optional): [\n             String (Optional)\n         ]\n         calendar: Double (Optional)\n         dateInstance (Optional): (recursive schema, see dateInstance above)\n         dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n         instance (Optional): (recursive schema, see instance above)\n         lenient: Boolean (Optional)\n         numberFormat (Optional): {\n             availableLocales (Optional): [\n                 String (Optional)\n             ]\n             currency: String (Optional)\n             currencyInstance (Optional): (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean (Optional)\n             instance (Optional): (recursive schema, see instance above)\n             integerInstance (Optional): (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer (Optional)\n             maximumIntegerDigits: Integer (Optional)\n             minimumFractionDigits: Integer (Optional)\n             minimumIntegerDigits: Integer (Optional)\n             numberInstance (Optional): (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean (Optional)\n             percentInstance (Optional): (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n         }\n         timeInstance (Optional): (recursive schema, see timeInstance above)\n         timeZone (Optional): {\n             dstSavings: Integer (Optional)\n             id: String (Optional)\n             availableIds (Optional): [\n                 String (Optional)\n             ]\n             default (Optional): (recursive schema, see default above)\n             displayName: String (Optional)\n             rawOffset: Integer (Optional)\n         }\n     }\n     description: String (Optional)\n     guid: String (Optional)\n     name: String (Optional)\n     options (Optional): {\n         String: String (Required)\n     }\n     serviceType: String (Optional)\n     typeVersion: String (Optional)\n     updateTime: Long (Optional)\n     updatedBy: String (Optional)\n     version: Long (Optional)\n     lastModifiedTS: String (Optional)\n     attributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                  (Optional){\n                     params (Optional): {\n                         String: BinaryData (Required)\n                     }\n                     type: String (Optional)\n                 }\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n         }\n     ]\n     endDef1 (Optional): {\n         cardinality: String(SINGLE/LIST/SET) (Optional)\n         description: String (Optional)\n         isContainer: Boolean (Optional)\n         isLegacyAttribute: Boolean (Optional)\n         name: String (Optional)\n         type: String (Optional)\n     }\n     endDef2 (Optional): (recursive schema, see endDef2 above)\n     relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION) (Optional)\n     relationshipLabel: String (Optional)\n }\n```"
  returns:
    description: "the relationship definition for the given GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getRelationshipByName(java.lang.String)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getRelationshipByName(String name)"
  name: "getRelationshipByName(String name)"
  nameWithType: "TypeDefinitionClient.getRelationshipByName(String name)"
  summary: "Get the relationship definition by its name (unique)."
  parameters:
  - description: "The name of the relationship."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AtlasRelationshipDef getRelationshipByName(String name)"
  desc: "Get the relationship definition by its name (unique)."
  returns:
    description: "the relationship definition by its name (unique)."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasRelationshipDef?alt=com.azure.analytics.purview.datamap.models.AtlasRelationshipDef&text=AtlasRelationshipDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getRelationshipByNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getRelationshipByNameWithResponse(String name, RequestOptions requestOptions)"
  name: "getRelationshipByNameWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getRelationshipByNameWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get the relationship definition by its name (unique)."
  parameters:
  - description: "The name of the relationship."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getRelationshipByNameWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get the relationship definition by its name (unique).\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n     createTime: Long (Optional)\n     createdBy: String (Optional)\n     dateFormatter (Optional): {\n         availableLocales (Optional): [\n             String (Optional)\n         ]\n         calendar: Double (Optional)\n         dateInstance (Optional): (recursive schema, see dateInstance above)\n         dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n         instance (Optional): (recursive schema, see instance above)\n         lenient: Boolean (Optional)\n         numberFormat (Optional): {\n             availableLocales (Optional): [\n                 String (Optional)\n             ]\n             currency: String (Optional)\n             currencyInstance (Optional): (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean (Optional)\n             instance (Optional): (recursive schema, see instance above)\n             integerInstance (Optional): (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer (Optional)\n             maximumIntegerDigits: Integer (Optional)\n             minimumFractionDigits: Integer (Optional)\n             minimumIntegerDigits: Integer (Optional)\n             numberInstance (Optional): (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean (Optional)\n             percentInstance (Optional): (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n         }\n         timeInstance (Optional): (recursive schema, see timeInstance above)\n         timeZone (Optional): {\n             dstSavings: Integer (Optional)\n             id: String (Optional)\n             availableIds (Optional): [\n                 String (Optional)\n             ]\n             default (Optional): (recursive schema, see default above)\n             displayName: String (Optional)\n             rawOffset: Integer (Optional)\n         }\n     }\n     description: String (Optional)\n     guid: String (Optional)\n     name: String (Optional)\n     options (Optional): {\n         String: String (Required)\n     }\n     serviceType: String (Optional)\n     typeVersion: String (Optional)\n     updateTime: Long (Optional)\n     updatedBy: String (Optional)\n     version: Long (Optional)\n     lastModifiedTS: String (Optional)\n     attributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                  (Optional){\n                     params (Optional): {\n                         String: BinaryData (Required)\n                     }\n                     type: String (Optional)\n                 }\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n         }\n     ]\n     endDef1 (Optional): {\n         cardinality: String(SINGLE/LIST/SET) (Optional)\n         description: String (Optional)\n         isContainer: Boolean (Optional)\n         isLegacyAttribute: Boolean (Optional)\n         name: String (Optional)\n         type: String (Optional)\n     }\n     endDef2 (Optional): (recursive schema, see endDef2 above)\n     relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION) (Optional)\n     relationshipLabel: String (Optional)\n }\n```"
  returns:
    description: "the relationship definition by its name (unique) along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getStructById(java.lang.String)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getStructById(String guid)"
  name: "getStructById(String guid)"
  nameWithType: "TypeDefinitionClient.getStructById(String guid)"
  summary: "Get the struct definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the struct."
    name: "guid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AtlasStructDef getStructById(String guid)"
  desc: "Get the struct definition for the given GUID."
  returns:
    description: "the struct definition for the given GUID."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasStructDef?alt=com.azure.analytics.purview.datamap.models.AtlasStructDef&text=AtlasStructDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getStructByIdWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getStructByIdWithResponse(String guid, RequestOptions requestOptions)"
  name: "getStructByIdWithResponse(String guid, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getStructByIdWithResponse(String guid, RequestOptions requestOptions)"
  summary: "Get the struct definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the struct."
    name: "guid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getStructByIdWithResponse(String guid, RequestOptions requestOptions)"
  desc: "Get the struct definition for the given GUID.\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n     createTime: Long (Optional)\n     createdBy: String (Optional)\n     dateFormatter (Optional): {\n         availableLocales (Optional): [\n             String (Optional)\n         ]\n         calendar: Double (Optional)\n         dateInstance (Optional): (recursive schema, see dateInstance above)\n         dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n         instance (Optional): (recursive schema, see instance above)\n         lenient: Boolean (Optional)\n         numberFormat (Optional): {\n             availableLocales (Optional): [\n                 String (Optional)\n             ]\n             currency: String (Optional)\n             currencyInstance (Optional): (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean (Optional)\n             instance (Optional): (recursive schema, see instance above)\n             integerInstance (Optional): (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer (Optional)\n             maximumIntegerDigits: Integer (Optional)\n             minimumFractionDigits: Integer (Optional)\n             minimumIntegerDigits: Integer (Optional)\n             numberInstance (Optional): (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean (Optional)\n             percentInstance (Optional): (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n         }\n         timeInstance (Optional): (recursive schema, see timeInstance above)\n         timeZone (Optional): {\n             dstSavings: Integer (Optional)\n             id: String (Optional)\n             availableIds (Optional): [\n                 String (Optional)\n             ]\n             default (Optional): (recursive schema, see default above)\n             displayName: String (Optional)\n             rawOffset: Integer (Optional)\n         }\n     }\n     description: String (Optional)\n     guid: String (Optional)\n     name: String (Optional)\n     options (Optional): {\n         String: String (Required)\n     }\n     serviceType: String (Optional)\n     typeVersion: String (Optional)\n     updateTime: Long (Optional)\n     updatedBy: String (Optional)\n     version: Long (Optional)\n     lastModifiedTS: String (Optional)\n     attributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                  (Optional){\n                     params (Optional): {\n                         String: BinaryData (Required)\n                     }\n                     type: String (Optional)\n                 }\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "the struct definition for the given GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getStructByName(java.lang.String)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getStructByName(String name)"
  name: "getStructByName(String name)"
  nameWithType: "TypeDefinitionClient.getStructByName(String name)"
  summary: "Get the struct definition by its name (unique)."
  parameters:
  - description: "The name of the struct."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AtlasStructDef getStructByName(String name)"
  desc: "Get the struct definition by its name (unique)."
  returns:
    description: "the struct definition by its name (unique)."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AtlasStructDef?alt=com.azure.analytics.purview.datamap.models.AtlasStructDef&text=AtlasStructDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getStructByNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getStructByNameWithResponse(String name, RequestOptions requestOptions)"
  name: "getStructByNameWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getStructByNameWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get the struct definition by its name (unique)."
  parameters:
  - description: "The name of the struct."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getStructByNameWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get the struct definition by its name (unique).\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n     createTime: Long (Optional)\n     createdBy: String (Optional)\n     dateFormatter (Optional): {\n         availableLocales (Optional): [\n             String (Optional)\n         ]\n         calendar: Double (Optional)\n         dateInstance (Optional): (recursive schema, see dateInstance above)\n         dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n         instance (Optional): (recursive schema, see instance above)\n         lenient: Boolean (Optional)\n         numberFormat (Optional): {\n             availableLocales (Optional): [\n                 String (Optional)\n             ]\n             currency: String (Optional)\n             currencyInstance (Optional): (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean (Optional)\n             instance (Optional): (recursive schema, see instance above)\n             integerInstance (Optional): (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer (Optional)\n             maximumIntegerDigits: Integer (Optional)\n             minimumFractionDigits: Integer (Optional)\n             minimumIntegerDigits: Integer (Optional)\n             numberInstance (Optional): (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean (Optional)\n             percentInstance (Optional): (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n         }\n         timeInstance (Optional): (recursive schema, see timeInstance above)\n         timeZone (Optional): {\n             dstSavings: Integer (Optional)\n             id: String (Optional)\n             availableIds (Optional): [\n                 String (Optional)\n             ]\n             default (Optional): (recursive schema, see default above)\n             displayName: String (Optional)\n             rawOffset: Integer (Optional)\n         }\n     }\n     description: String (Optional)\n     guid: String (Optional)\n     name: String (Optional)\n     options (Optional): {\n         String: String (Required)\n     }\n     serviceType: String (Optional)\n     typeVersion: String (Optional)\n     updateTime: Long (Optional)\n     updatedBy: String (Optional)\n     version: Long (Optional)\n     lastModifiedTS: String (Optional)\n     attributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                  (Optional){\n                     params (Optional): {\n                         String: BinaryData (Required)\n                     }\n                     type: String (Optional)\n                 }\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "the struct definition by its name (unique) along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getTermTemplateById(java.lang.String)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getTermTemplateById(String guid)"
  name: "getTermTemplateById(String guid)"
  nameWithType: "TypeDefinitionClient.getTermTemplateById(String guid)"
  summary: "Get the term template definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the term template."
    name: "guid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public TermTemplateDef getTermTemplateById(String guid)"
  desc: "Get the term template definition for the given GUID."
  returns:
    description: "the term template definition for the given GUID."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.TermTemplateDef?alt=com.azure.analytics.purview.datamap.models.TermTemplateDef&text=TermTemplateDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getTermTemplateByIdWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getTermTemplateByIdWithResponse(String guid, RequestOptions requestOptions)"
  name: "getTermTemplateByIdWithResponse(String guid, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getTermTemplateByIdWithResponse(String guid, RequestOptions requestOptions)"
  summary: "Get the term template definition for the given GUID."
  parameters:
  - description: "The globally unique identifier of the term template."
    name: "guid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getTermTemplateByIdWithResponse(String guid, RequestOptions requestOptions)"
  desc: "Get the term template definition for the given GUID.\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n     createTime: Long (Optional)\n     createdBy: String (Optional)\n     dateFormatter (Optional): {\n         availableLocales (Optional): [\n             String (Optional)\n         ]\n         calendar: Double (Optional)\n         dateInstance (Optional): (recursive schema, see dateInstance above)\n         dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n         instance (Optional): (recursive schema, see instance above)\n         lenient: Boolean (Optional)\n         numberFormat (Optional): {\n             availableLocales (Optional): [\n                 String (Optional)\n             ]\n             currency: String (Optional)\n             currencyInstance (Optional): (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean (Optional)\n             instance (Optional): (recursive schema, see instance above)\n             integerInstance (Optional): (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer (Optional)\n             maximumIntegerDigits: Integer (Optional)\n             minimumFractionDigits: Integer (Optional)\n             minimumIntegerDigits: Integer (Optional)\n             numberInstance (Optional): (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean (Optional)\n             percentInstance (Optional): (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n         }\n         timeInstance (Optional): (recursive schema, see timeInstance above)\n         timeZone (Optional): {\n             dstSavings: Integer (Optional)\n             id: String (Optional)\n             availableIds (Optional): [\n                 String (Optional)\n             ]\n             default (Optional): (recursive schema, see default above)\n             displayName: String (Optional)\n             rawOffset: Integer (Optional)\n         }\n     }\n     description: String (Optional)\n     guid: String (Optional)\n     name: String (Optional)\n     options (Optional): {\n         String: String (Required)\n     }\n     serviceType: String (Optional)\n     typeVersion: String (Optional)\n     updateTime: Long (Optional)\n     updatedBy: String (Optional)\n     version: Long (Optional)\n     lastModifiedTS: String (Optional)\n     attributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                  (Optional){\n                     params (Optional): {\n                         String: BinaryData (Required)\n                     }\n                     type: String (Optional)\n                 }\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "the term template definition for the given GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getTermTemplateByName(java.lang.String)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getTermTemplateByName(String name)"
  name: "getTermTemplateByName(String name)"
  nameWithType: "TypeDefinitionClient.getTermTemplateByName(String name)"
  summary: "Get the term template definition by its name (unique)."
  parameters:
  - description: "The unique name of the term template."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public TermTemplateDef getTermTemplateByName(String name)"
  desc: "Get the term template definition by its name (unique)."
  returns:
    description: "the term template definition by its name (unique)."
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.TermTemplateDef?alt=com.azure.analytics.purview.datamap.models.TermTemplateDef&text=TermTemplateDef\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getTermTemplateByNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getTermTemplateByNameWithResponse(String name, RequestOptions requestOptions)"
  name: "getTermTemplateByNameWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getTermTemplateByNameWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get the term template definition by its name (unique)."
  parameters:
  - description: "The unique name of the term template."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getTermTemplateByNameWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get the term template definition by its name (unique).\n\n**Response Body Schema**\n\n```java\n{\n     category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n     createTime: Long (Optional)\n     createdBy: String (Optional)\n     dateFormatter (Optional): {\n         availableLocales (Optional): [\n             String (Optional)\n         ]\n         calendar: Double (Optional)\n         dateInstance (Optional): (recursive schema, see dateInstance above)\n         dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n         instance (Optional): (recursive schema, see instance above)\n         lenient: Boolean (Optional)\n         numberFormat (Optional): {\n             availableLocales (Optional): [\n                 String (Optional)\n             ]\n             currency: String (Optional)\n             currencyInstance (Optional): (recursive schema, see currencyInstance above)\n             groupingUsed: Boolean (Optional)\n             instance (Optional): (recursive schema, see instance above)\n             integerInstance (Optional): (recursive schema, see integerInstance above)\n             maximumFractionDigits: Integer (Optional)\n             maximumIntegerDigits: Integer (Optional)\n             minimumFractionDigits: Integer (Optional)\n             minimumIntegerDigits: Integer (Optional)\n             numberInstance (Optional): (recursive schema, see numberInstance above)\n             parseIntegerOnly: Boolean (Optional)\n             percentInstance (Optional): (recursive schema, see percentInstance above)\n             roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n         }\n         timeInstance (Optional): (recursive schema, see timeInstance above)\n         timeZone (Optional): {\n             dstSavings: Integer (Optional)\n             id: String (Optional)\n             availableIds (Optional): [\n                 String (Optional)\n             ]\n             default (Optional): (recursive schema, see default above)\n             displayName: String (Optional)\n             rawOffset: Integer (Optional)\n         }\n     }\n     description: String (Optional)\n     guid: String (Optional)\n     name: String (Optional)\n     options (Optional): {\n         String: String (Required)\n     }\n     serviceType: String (Optional)\n     typeVersion: String (Optional)\n     updateTime: Long (Optional)\n     updatedBy: String (Optional)\n     version: Long (Optional)\n     lastModifiedTS: String (Optional)\n     attributeDefs (Optional): [\n          (Optional){\n             cardinality: String(SINGLE/LIST/SET) (Optional)\n             constraints (Optional): [\n                  (Optional){\n                     params (Optional): {\n                         String: BinaryData (Required)\n                     }\n                     type: String (Optional)\n                 }\n             ]\n             defaultValue: String (Optional)\n             description: String (Optional)\n             includeInNotification: Boolean (Optional)\n             isIndexable: Boolean (Optional)\n             isOptional: Boolean (Optional)\n             isUnique: Boolean (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             typeName: String (Optional)\n             valuesMaxCount: Integer (Optional)\n             valuesMinCount: Integer (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "the term template definition by its name (unique) along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.TypeDefinitionClient.getWithResponse(RequestOptions requestOptions)"
  name: "getWithResponse(RequestOptions requestOptions)"
  nameWithType: "TypeDefinitionClient.getWithResponse(RequestOptions requestOptions)"
  summary: "List all type definitions in bulk."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getWithResponse(RequestOptions requestOptions)"
  desc: "List all type definitions in bulk.\n\n**Query Parameters**\n\n    | ------------------- | ------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name                | Type    | Required | Description                                                                                                                                                                                       |\n    | includeTermTemplate | Boolean | No       | Whether include termtemplatedef when return all typedefs. This is always true when search filter type=term\\_template                                                                              |\n    | type                | String  | No       | Typedef name as search filter when get typedefs. Allowed values: \"PRIMITIVE\", \"OBJECT\\_ID\\_TYPE\", \"ENUM\", \"STRUCT\", \"CLASSIFICATION\", \"ENTITY\", \"ARRAY\", \"MAP\", \"RELATIONSHIP\", \"TERM\\_TEMPLATE\". |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     businessMetadataDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): {\n                 availableLocales (Optional): [\n                     String (Optional)\n                 ]\n                 calendar: Double (Optional)\n                 dateInstance (Optional): (recursive schema, see dateInstance above)\n                 dateTimeInstance (Optional): (recursive schema, see dateTimeInstance above)\n                 instance (Optional): (recursive schema, see instance above)\n                 lenient: Boolean (Optional)\n                 numberFormat (Optional): {\n                     availableLocales (Optional): [\n                         String (Optional)\n                     ]\n                     currency: String (Optional)\n                     currencyInstance (Optional): (recursive schema, see currencyInstance above)\n                     groupingUsed: Boolean (Optional)\n                     instance (Optional): (recursive schema, see instance above)\n                     integerInstance (Optional): (recursive schema, see integerInstance above)\n                     maximumFractionDigits: Integer (Optional)\n                     maximumIntegerDigits: Integer (Optional)\n                     minimumFractionDigits: Integer (Optional)\n                     minimumIntegerDigits: Integer (Optional)\n                     numberInstance (Optional): (recursive schema, see numberInstance above)\n                     parseIntegerOnly: Boolean (Optional)\n                     percentInstance (Optional): (recursive schema, see percentInstance above)\n                     roundingMode: String(UP/DOWN/CEILING/FLOOR/HALF_UP/HALF_DOWN/HALF_EVEN/UNNECESSARY) (Optional)\n                 }\n                 timeInstance (Optional): (recursive schema, see timeInstance above)\n                 timeZone (Optional): {\n                     dstSavings: Integer (Optional)\n                     id: String (Optional)\n                     availableIds (Optional): [\n                         String (Optional)\n                     ]\n                     default (Optional): (recursive schema, see default above)\n                     displayName: String (Optional)\n                     rawOffset: Integer (Optional)\n                 }\n             }\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                  (Optional){\n                     cardinality: String(SINGLE/LIST/SET) (Optional)\n                     constraints (Optional): [\n                          (Optional){\n                             params (Optional): {\n                                 String: BinaryData (Required)\n                             }\n                             type: String (Optional)\n                         }\n                     ]\n                     defaultValue: String (Optional)\n                     description: String (Optional)\n                     includeInNotification: Boolean (Optional)\n                     isIndexable: Boolean (Optional)\n                     isOptional: Boolean (Optional)\n                     isUnique: Boolean (Optional)\n                     name: String (Optional)\n                     options (Optional): {\n                         String: String (Required)\n                     }\n                     typeName: String (Optional)\n                     valuesMaxCount: Integer (Optional)\n                     valuesMinCount: Integer (Optional)\n                 }\n             ]\n         }\n     ]\n     classificationDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             entityTypes (Optional): [\n                 String (Optional)\n             ]\n             subTypes (Optional): [\n                 String (Optional)\n             ]\n             superTypes (Optional): [\n                 String (Optional)\n             ]\n         }\n     ]\n     entityDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             subTypes (Optional): [\n                 String (Optional)\n             ]\n             superTypes (Optional): [\n                 String (Optional)\n             ]\n             relationshipAttributeDefs (Optional): [\n                  (Optional){\n                     cardinality: String(SINGLE/LIST/SET) (Optional)\n                     constraints (Optional): [\n                         (recursive schema, see above)\n                     ]\n                     defaultValue: String (Optional)\n                     description: String (Optional)\n                     includeInNotification: Boolean (Optional)\n                     isIndexable: Boolean (Optional)\n                     isOptional: Boolean (Optional)\n                     isUnique: Boolean (Optional)\n                     name: String (Optional)\n                     options (Optional): {\n                         String: String (Required)\n                     }\n                     typeName: String (Optional)\n                     valuesMaxCount: Integer (Optional)\n                     valuesMinCount: Integer (Optional)\n                     isLegacyAttribute: Boolean (Optional)\n                     relationshipTypeName: String (Optional)\n                 }\n             ]\n         }\n     ]\n     enumDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             defaultValue: String (Optional)\n             elementDefs (Optional): [\n                  (Optional){\n                     description: String (Optional)\n                     ordinal: Integer (Optional)\n                     value: String (Optional)\n                 }\n             ]\n         }\n     ]\n     relationshipDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n             endDef1 (Optional): {\n                 cardinality: String(SINGLE/LIST/SET) (Optional)\n                 description: String (Optional)\n                 isContainer: Boolean (Optional)\n                 isLegacyAttribute: Boolean (Optional)\n                 name: String (Optional)\n                 type: String (Optional)\n             }\n             endDef2 (Optional): (recursive schema, see endDef2 above)\n             relationshipCategory: String(ASSOCIATION/AGGREGATION/COMPOSITION) (Optional)\n             relationshipLabel: String (Optional)\n         }\n     ]\n     structDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n     termTemplateDefs (Optional): [\n          (Optional){\n             category: String(PRIMITIVE/OBJECT_ID_TYPE/ENUM/STRUCT/CLASSIFICATION/ENTITY/ARRAY/MAP/RELATIONSHIP/TERM_TEMPLATE) (Optional)\n             createTime: Long (Optional)\n             createdBy: String (Optional)\n             dateFormatter (Optional): (recursive schema, see dateFormatter above)\n             description: String (Optional)\n             guid: String (Optional)\n             name: String (Optional)\n             options (Optional): {\n                 String: String (Required)\n             }\n             serviceType: String (Optional)\n             typeVersion: String (Optional)\n             updateTime: Long (Optional)\n             updatedBy: String (Optional)\n             version: Long (Optional)\n             lastModifiedTS: String (Optional)\n             attributeDefs (Optional): [\n                 (recursive schema, see above)\n             ]\n         }\n     ]\n }\n```"
  returns:
    description: "the definitions of types along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the synchronous DataMapClient type."
metadata: {}
package: "com.azure.analytics.purview.datamap"
artifact: com.azure:azure-analytics-purview-datamap:1.0.0-beta.2
