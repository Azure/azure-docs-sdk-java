### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl"
fullName: "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl"
name: "PeeringManagementClientImpl"
nameWithType: "PeeringManagementClientImpl"
summary: "Initializes a new instance of the PeeringManagementClientImpl type."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PeeringManagementClientImpl implements PeeringManagementClient"
methods:
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.<T,U>getLroFinalResultOrError(com.azure.core.util.polling.AsyncPollResponse<com.azure.core.management.polling.PollResult<T>,U>)"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.<T,U>getLroResult(reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,com.azure.core.util.Context)"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getApiVersion()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getCdnPeeringPrefixes()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getContext()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getDefaultPollInterval()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getEndpoint()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getHttpPipeline()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getLegacyPeerings()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getOperations()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getPeerAsns()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getPeeringLocations()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getPeeringServiceCountries()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getPeeringServiceLocations()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getPeeringServiceProviders()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getPeeringServices()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getPeerings()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getPrefixes()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getReceivedRoutes()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getRegisteredAsns()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getRegisteredPrefixes()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getResourceProviders()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.getSubscriptionId()"
- "com.azure.resourcemanager.peering.implementation.PeeringManagementClientImpl.mergeContext(com.azure.core.util.Context)"
type: "class"
implements:
- "<xref href=\"com.azure.resourcemanager.peering.fluent.PeeringManagementClient?alt=com.azure.resourcemanager.peering.fluent.PeeringManagementClient&text=PeeringManagementClient\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.peering.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
