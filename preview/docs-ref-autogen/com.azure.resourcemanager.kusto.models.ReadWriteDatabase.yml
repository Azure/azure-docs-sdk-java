### YamlMime:JavaType
uid: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase"
fullName: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase"
name: "ReadWriteDatabase"
nameWithType: "ReadWriteDatabase"
summary: "Class representing a read write database."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.kusto.fluent.models.DatabaseInner?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.resourcemanager.kusto.fluent.models.DatabaseInner.location()"
- "com.azure.resourcemanager.kusto.fluent.models.DatabaseInner.validate()"
- "com.azure.resourcemanager.kusto.fluent.models.DatabaseInner.withLocation(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ReadWriteDatabase extends DatabaseInner"
constructors:
- uid: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.ReadWriteDatabase()"
  fullName: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.ReadWriteDatabase()"
  name: "ReadWriteDatabase()"
  nameWithType: "ReadWriteDatabase.ReadWriteDatabase()"
  syntax: "public ReadWriteDatabase()"
methods:
- uid: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.hotCachePeriod()"
  fullName: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.hotCachePeriod()"
  name: "hotCachePeriod()"
  nameWithType: "ReadWriteDatabase.hotCachePeriod()"
  summary: "Get the hot<wbr>Cache<wbr>Period property: The time the data should be kept in cache for fast queries in Time<wbr>Span."
  syntax: "public Duration hotCachePeriod()"
  desc: "Get the hotCachePeriod property: The time the data should be kept in cache for fast queries in TimeSpan."
  returns:
    description: "the hotCachePeriod value."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.isFollowed()"
  fullName: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.isFollowed()"
  name: "isFollowed()"
  nameWithType: "ReadWriteDatabase.isFollowed()"
  summary: "Get the is<wbr>Followed property: Indicates whether the database is followed."
  syntax: "public Boolean isFollowed()"
  desc: "Get the isFollowed property: Indicates whether the database is followed."
  returns:
    description: "the isFollowed value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.provisioningState()"
  fullName: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.provisioningState()"
  name: "provisioningState()"
  nameWithType: "ReadWriteDatabase.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioned state of the resource."
  syntax: "public ProvisioningState provisioningState()"
  desc: "Get the provisioningState property: The provisioned state of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.kusto.models.ProvisioningState?alt=com.azure.resourcemanager.kusto.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.softDeletePeriod()"
  fullName: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.softDeletePeriod()"
  name: "softDeletePeriod()"
  nameWithType: "ReadWriteDatabase.softDeletePeriod()"
  summary: "Get the soft<wbr>Delete<wbr>Period property: The time the data should be kept before it stops being accessible to queries in Time<wbr>Span."
  syntax: "public Duration softDeletePeriod()"
  desc: "Get the softDeletePeriod property: The time the data should be kept before it stops being accessible to queries in TimeSpan."
  returns:
    description: "the softDeletePeriod value."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.statistics()"
  fullName: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.statistics()"
  name: "statistics()"
  nameWithType: "ReadWriteDatabase.statistics()"
  summary: "Get the statistics property: The statistics of the database."
  syntax: "public DatabaseStatistics statistics()"
  desc: "Get the statistics property: The statistics of the database."
  returns:
    description: "the statistics value."
    type: "<xref href=\"com.azure.resourcemanager.kusto.models.DatabaseStatistics?alt=com.azure.resourcemanager.kusto.models.DatabaseStatistics&text=DatabaseStatistics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.validate()"
  fullName: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.validate()"
  name: "validate()"
  nameWithType: "ReadWriteDatabase.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.kusto.fluent.models.DatabaseInner.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.withHotCachePeriod(java.time.Duration)"
  fullName: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.withHotCachePeriod(Duration hotCachePeriod)"
  name: "withHotCachePeriod(Duration hotCachePeriod)"
  nameWithType: "ReadWriteDatabase.withHotCachePeriod(Duration hotCachePeriod)"
  summary: "Set the hot<wbr>Cache<wbr>Period property: The time the data should be kept in cache for fast queries in Time<wbr>Span."
  parameters:
  - description: "the hotCachePeriod value to set."
    name: "hotCachePeriod"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReadWriteDatabase withHotCachePeriod(Duration hotCachePeriod)"
  desc: "Set the hotCachePeriod property: The time the data should be kept in cache for fast queries in TimeSpan."
  returns:
    description: "the ReadWriteDatabase object itself."
    type: "<xref href=\"com.azure.resourcemanager.kusto.models.ReadWriteDatabase?alt=com.azure.resourcemanager.kusto.models.ReadWriteDatabase&text=ReadWriteDatabase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "ReadWriteDatabase.withLocation(String location)"
  summary: "Set the location property: Resource location."
  overridden: "com.azure.resourcemanager.kusto.fluent.models.DatabaseInner.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReadWriteDatabase withLocation(String location)"
  desc: "Set the location property: Resource location."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.kusto.models.ReadWriteDatabase?alt=com.azure.resourcemanager.kusto.models.ReadWriteDatabase&text=ReadWriteDatabase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.withSoftDeletePeriod(java.time.Duration)"
  fullName: "com.azure.resourcemanager.kusto.models.ReadWriteDatabase.withSoftDeletePeriod(Duration softDeletePeriod)"
  name: "withSoftDeletePeriod(Duration softDeletePeriod)"
  nameWithType: "ReadWriteDatabase.withSoftDeletePeriod(Duration softDeletePeriod)"
  summary: "Set the soft<wbr>Delete<wbr>Period property: The time the data should be kept before it stops being accessible to queries in Time<wbr>Span."
  parameters:
  - description: "the softDeletePeriod value to set."
    name: "softDeletePeriod"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReadWriteDatabase withSoftDeletePeriod(Duration softDeletePeriod)"
  desc: "Set the softDeletePeriod property: The time the data should be kept before it stops being accessible to queries in TimeSpan."
  returns:
    description: "the ReadWriteDatabase object itself."
    type: "<xref href=\"com.azure.resourcemanager.kusto.models.ReadWriteDatabase?alt=com.azure.resourcemanager.kusto.models.ReadWriteDatabase&text=ReadWriteDatabase\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Class representing a read write database."
metadata: {}
package: "com.azure.resourcemanager.kusto.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-kusto:1.0.0-beta.4
