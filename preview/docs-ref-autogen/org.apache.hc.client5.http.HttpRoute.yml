### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.HttpRoute
  id: HttpRoute
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http
  children:
  - org.apache.hc.client5.http.HttpRoute.HttpRoute(org.apache.hc.core5.http.HttpHost)
  - org.apache.hc.client5.http.HttpRoute.HttpRoute(org.apache.hc.core5.http.HttpHost,java.net.InetAddress,boolean)
  - org.apache.hc.client5.http.HttpRoute.HttpRoute(org.apache.hc.core5.http.HttpHost,java.net.InetAddress,org.apache.hc.core5.http.HttpHost,boolean)
  - org.apache.hc.client5.http.HttpRoute.HttpRoute(org.apache.hc.core5.http.HttpHost,java.net.InetAddress,org.apache.hc.core5.http.HttpHost,boolean,org.apache.hc.client5.http.RouteInfo.TunnelType,org.apache.hc.client5.http.RouteInfo.LayerType)
  - org.apache.hc.client5.http.HttpRoute.HttpRoute(org.apache.hc.core5.http.HttpHost,java.net.InetAddress,org.apache.hc.core5.http.HttpHost[],boolean,org.apache.hc.client5.http.RouteInfo.TunnelType,org.apache.hc.client5.http.RouteInfo.LayerType)
  - org.apache.hc.client5.http.HttpRoute.HttpRoute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.HttpHost)
  - org.apache.hc.client5.http.HttpRoute.clone()
  - org.apache.hc.client5.http.HttpRoute.equals(java.lang.Object)
  - org.apache.hc.client5.http.HttpRoute.getHopCount()
  - org.apache.hc.client5.http.HttpRoute.getHopTarget(int)
  - org.apache.hc.client5.http.HttpRoute.getLayerType()
  - org.apache.hc.client5.http.HttpRoute.getLocalAddress()
  - org.apache.hc.client5.http.HttpRoute.getLocalSocketAddress()
  - org.apache.hc.client5.http.HttpRoute.getProxyHost()
  - org.apache.hc.client5.http.HttpRoute.getTargetHost()
  - org.apache.hc.client5.http.HttpRoute.getTunnelType()
  - org.apache.hc.client5.http.HttpRoute.hashCode()
  - org.apache.hc.client5.http.HttpRoute.isLayered()
  - org.apache.hc.client5.http.HttpRoute.isSecure()
  - org.apache.hc.client5.http.HttpRoute.isTunnelled()
  - org.apache.hc.client5.http.HttpRoute.toString()
  langs:
  - java
  name: HttpRoute
  nameWithType: HttpRoute
  fullName: org.apache.hc.client5.http.HttpRoute
  type: Class
  package: org.apache.hc.client5.http
  summary: Connection route definition for HTTP requests.
  syntax:
    content: public final class HttpRoute implements RouteInfo, Cloneable
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.client5.http.RouteInfo
  - java.lang.Cloneable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.HttpRoute.HttpRoute(org.apache.hc.core5.http.HttpHost)
  id: HttpRoute(org.apache.hc.core5.http.HttpHost)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: HttpRoute(HttpHost target)
  nameWithType: HttpRoute.HttpRoute(HttpHost target)
  fullName: org.apache.hc.client5.http.HttpRoute.HttpRoute(HttpHost target)
  overload: org.apache.hc.client5.http.HttpRoute.HttpRoute*
  type: Constructor
  package: org.apache.hc.client5.http
  summary: Creates a new direct insecure route.
  syntax:
    content: public HttpRoute(HttpHost target)
    parameters:
    - id: target
      type: org.apache.hc.core5.http.HttpHost
      description: the host to which to route
- uid: org.apache.hc.client5.http.HttpRoute.HttpRoute(org.apache.hc.core5.http.HttpHost,java.net.InetAddress,boolean)
  id: HttpRoute(org.apache.hc.core5.http.HttpHost,java.net.InetAddress,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: HttpRoute(HttpHost target, InetAddress local, boolean secure)
  nameWithType: HttpRoute.HttpRoute(HttpHost target, InetAddress local, boolean secure)
  fullName: org.apache.hc.client5.http.HttpRoute.HttpRoute(HttpHost target, InetAddress local, boolean secure)
  overload: org.apache.hc.client5.http.HttpRoute.HttpRoute*
  type: Constructor
  package: org.apache.hc.client5.http
  summary: Creates a new direct route. That is a route without a proxy.
  syntax:
    content: public HttpRoute(HttpHost target, InetAddress local, boolean secure)
    parameters:
    - id: target
      type: org.apache.hc.core5.http.HttpHost
      description: the host to which to route
    - id: local
      type: java.net.InetAddress
      description: >-
        the local address to route from, or
                          <code>null</code> for the default
    - id: secure
      type: boolean
      description: >-
        <code>true</code> if the route is (to be) secure,
                          <code>false</code> otherwise
- uid: org.apache.hc.client5.http.HttpRoute.HttpRoute(org.apache.hc.core5.http.HttpHost,java.net.InetAddress,java.util.List<org.apache.hc.core5.http.HttpHost>,boolean,org.apache.hc.client5.http.RouteInfo.TunnelType,org.apache.hc.client5.http.RouteInfo.LayerType)
  id: HttpRoute(org.apache.hc.core5.http.HttpHost,java.net.InetAddress,java.util.List<org.apache.hc.core5.http.HttpHost>,boolean,org.apache.hc.client5.http.RouteInfo.TunnelType,org.apache.hc.client5.http.RouteInfo.LayerType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: HttpRoute(HttpHost targetHost, InetAddress local, List<HttpHost> proxies, boolean secure, RouteInfo.TunnelType tunnelled, RouteInfo.LayerType layered)
  nameWithType: HttpRoute.HttpRoute(HttpHost targetHost, InetAddress local, List<HttpHost> proxies, boolean secure, RouteInfo.TunnelType tunnelled, RouteInfo.LayerType layered)
  fullName: org.apache.hc.client5.http.HttpRoute.HttpRoute(HttpHost targetHost, InetAddress local, List<HttpHost> proxies, boolean secure, RouteInfo.TunnelType tunnelled, RouteInfo.LayerType layered)
  overload: org.apache.hc.client5.http.HttpRoute.HttpRoute*
  type: Constructor
  package: org.apache.hc.client5.http
  syntax:
    content: private HttpRoute(HttpHost targetHost, InetAddress local, List<HttpHost> proxies, boolean secure, RouteInfo.TunnelType tunnelled, RouteInfo.LayerType layered)
    parameters:
    - id: targetHost
      type: org.apache.hc.core5.http.HttpHost
    - id: local
      type: java.net.InetAddress
    - id: proxies
      type: java.util.List<org.apache.hc.core5.http.HttpHost>
    - id: secure
      type: boolean
    - id: tunnelled
      type: org.apache.hc.client5.http.RouteInfo.TunnelType
    - id: layered
      type: org.apache.hc.client5.http.RouteInfo.LayerType
- uid: org.apache.hc.client5.http.HttpRoute.HttpRoute(org.apache.hc.core5.http.HttpHost,java.net.InetAddress,org.apache.hc.core5.http.HttpHost,boolean)
  id: HttpRoute(org.apache.hc.core5.http.HttpHost,java.net.InetAddress,org.apache.hc.core5.http.HttpHost,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: HttpRoute(HttpHost target, InetAddress local, HttpHost proxy, boolean secure)
  nameWithType: HttpRoute.HttpRoute(HttpHost target, InetAddress local, HttpHost proxy, boolean secure)
  fullName: org.apache.hc.client5.http.HttpRoute.HttpRoute(HttpHost target, InetAddress local, HttpHost proxy, boolean secure)
  overload: org.apache.hc.client5.http.HttpRoute.HttpRoute*
  type: Constructor
  package: org.apache.hc.client5.http
  summary: Creates a new route through a proxy. When using this constructor, the `proxy` MUST be given. For convenience, it is assumed that a secure connection will be layered over a tunnel through the proxy.
  syntax:
    content: public HttpRoute(HttpHost target, InetAddress local, HttpHost proxy, boolean secure)
    parameters:
    - id: target
      type: org.apache.hc.core5.http.HttpHost
      description: the host to which to route
    - id: local
      type: java.net.InetAddress
      description: >-
        the local address to route from, or
                          <code>null</code> for the default
    - id: proxy
      type: org.apache.hc.core5.http.HttpHost
      description: the proxy to use
    - id: secure
      type: boolean
      description: >-
        <code>true</code> if the route is (to be) secure,
                          <code>false</code> otherwise
- uid: org.apache.hc.client5.http.HttpRoute.HttpRoute(org.apache.hc.core5.http.HttpHost,java.net.InetAddress,org.apache.hc.core5.http.HttpHost,boolean,org.apache.hc.client5.http.RouteInfo.TunnelType,org.apache.hc.client5.http.RouteInfo.LayerType)
  id: HttpRoute(org.apache.hc.core5.http.HttpHost,java.net.InetAddress,org.apache.hc.core5.http.HttpHost,boolean,org.apache.hc.client5.http.RouteInfo.TunnelType,org.apache.hc.client5.http.RouteInfo.LayerType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: HttpRoute(HttpHost target, InetAddress local, HttpHost proxy, boolean secure, RouteInfo.TunnelType tunnelled, RouteInfo.LayerType layered)
  nameWithType: HttpRoute.HttpRoute(HttpHost target, InetAddress local, HttpHost proxy, boolean secure, RouteInfo.TunnelType tunnelled, RouteInfo.LayerType layered)
  fullName: org.apache.hc.client5.http.HttpRoute.HttpRoute(HttpHost target, InetAddress local, HttpHost proxy, boolean secure, RouteInfo.TunnelType tunnelled, RouteInfo.LayerType layered)
  overload: org.apache.hc.client5.http.HttpRoute.HttpRoute*
  type: Constructor
  package: org.apache.hc.client5.http
  summary: Creates a new route with at most one proxy.
  syntax:
    content: public HttpRoute(HttpHost target, InetAddress local, HttpHost proxy, boolean secure, RouteInfo.TunnelType tunnelled, RouteInfo.LayerType layered)
    parameters:
    - id: target
      type: org.apache.hc.core5.http.HttpHost
      description: the host to which to route
    - id: local
      type: java.net.InetAddress
      description: >-
        the local address to route from, or
                          <code>null</code> for the default
    - id: proxy
      type: org.apache.hc.core5.http.HttpHost
      description: >-
        the proxy to use, or
                          <code>null</code> for a direct route
    - id: secure
      type: boolean
      description: >-
        <code>true</code> if the route is (to be) secure,
                          <code>false</code> otherwise
    - id: tunnelled
      type: org.apache.hc.client5.http.RouteInfo.TunnelType
      description: >-
        <code>true</code> if the route is (to be) tunnelled
                          via the proxy,
                          <code>false</code> otherwise
    - id: layered
      type: org.apache.hc.client5.http.RouteInfo.LayerType
      description: >-
        <code>true</code> if the route includes a
                          layered protocol,
                          <code>false</code> otherwise
- uid: org.apache.hc.client5.http.HttpRoute.HttpRoute(org.apache.hc.core5.http.HttpHost,java.net.InetAddress,org.apache.hc.core5.http.HttpHost[],boolean,org.apache.hc.client5.http.RouteInfo.TunnelType,org.apache.hc.client5.http.RouteInfo.LayerType)
  id: HttpRoute(org.apache.hc.core5.http.HttpHost,java.net.InetAddress,org.apache.hc.core5.http.HttpHost[],boolean,org.apache.hc.client5.http.RouteInfo.TunnelType,org.apache.hc.client5.http.RouteInfo.LayerType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: HttpRoute(HttpHost target, InetAddress local, HttpHost[] proxies, boolean secure, RouteInfo.TunnelType tunnelled, RouteInfo.LayerType layered)
  nameWithType: HttpRoute.HttpRoute(HttpHost target, InetAddress local, HttpHost[] proxies, boolean secure, RouteInfo.TunnelType tunnelled, RouteInfo.LayerType layered)
  fullName: org.apache.hc.client5.http.HttpRoute.HttpRoute(HttpHost target, InetAddress local, HttpHost[] proxies, boolean secure, RouteInfo.TunnelType tunnelled, RouteInfo.LayerType layered)
  overload: org.apache.hc.client5.http.HttpRoute.HttpRoute*
  type: Constructor
  package: org.apache.hc.client5.http
  summary: Creates a new route with all attributes specified explicitly.
  syntax:
    content: public HttpRoute(HttpHost target, InetAddress local, HttpHost[] proxies, boolean secure, RouteInfo.TunnelType tunnelled, RouteInfo.LayerType layered)
    parameters:
    - id: target
      type: org.apache.hc.core5.http.HttpHost
      description: the host to which to route
    - id: local
      type: java.net.InetAddress
      description: >-
        the local address to route from, or
                          <code>null</code> for the default
    - id: proxies
      type: org.apache.hc.core5.http.HttpHost[]
      description: >-
        the proxy chain to use, or
                          <code>null</code> for a direct route
    - id: secure
      type: boolean
      description: >-
        <code>true</code> if the route is (to be) secure,
                          <code>false</code> otherwise
    - id: tunnelled
      type: org.apache.hc.client5.http.RouteInfo.TunnelType
      description: the tunnel type of this route
    - id: layered
      type: org.apache.hc.client5.http.RouteInfo.LayerType
      description: the layering type of this route
- uid: org.apache.hc.client5.http.HttpRoute.HttpRoute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.HttpHost)
  id: HttpRoute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.HttpHost)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: HttpRoute(HttpHost target, HttpHost proxy)
  nameWithType: HttpRoute.HttpRoute(HttpHost target, HttpHost proxy)
  fullName: org.apache.hc.client5.http.HttpRoute.HttpRoute(HttpHost target, HttpHost proxy)
  overload: org.apache.hc.client5.http.HttpRoute.HttpRoute*
  type: Constructor
  package: org.apache.hc.client5.http
  summary: Creates a new plain route through a proxy.
  syntax:
    content: public HttpRoute(HttpHost target, HttpHost proxy)
    parameters:
    - id: target
      type: org.apache.hc.core5.http.HttpHost
      description: the host to which to route
    - id: proxy
      type: org.apache.hc.core5.http.HttpHost
      description: the proxy to use
- uid: org.apache.hc.client5.http.HttpRoute.clone()
  id: clone()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: clone()
  nameWithType: HttpRoute.clone()
  fullName: org.apache.hc.client5.http.HttpRoute.clone()
  overload: org.apache.hc.client5.http.HttpRoute.clone*
  type: Method
  package: org.apache.hc.client5.http
  syntax:
    content: public Object clone()
    return:
      type: java.lang.Object
  exceptions:
  - type: java.lang.CloneNotSupportedException
- uid: org.apache.hc.client5.http.HttpRoute.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: equals(Object obj)
  nameWithType: HttpRoute.equals(Object obj)
  fullName: org.apache.hc.client5.http.HttpRoute.equals(Object obj)
  overload: org.apache.hc.client5.http.HttpRoute.equals*
  type: Method
  package: org.apache.hc.client5.http
  summary: Compares this route to another.
  syntax:
    content: public final boolean equals(Object obj)
    parameters:
    - id: obj
      type: java.lang.Object
      description: the object to compare with
    return:
      type: boolean
      description: >-
        <code>true</code> if the argument is the same route,
                  <code>false</code>
- uid: org.apache.hc.client5.http.HttpRoute.getHopCount()
  id: getHopCount()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: getHopCount()
  nameWithType: HttpRoute.getHopCount()
  fullName: org.apache.hc.client5.http.HttpRoute.getHopCount()
  overload: org.apache.hc.client5.http.HttpRoute.getHopCount*
  type: Method
  package: org.apache.hc.client5.http
  summary: Obtains the number of hops in this route. A direct route has one hop. A route through a proxy has two hops. A route through a chain of *n* proxies has *n+1* hops.
  syntax:
    content: public final int getHopCount()
    return:
      type: int
- uid: org.apache.hc.client5.http.HttpRoute.getHopTarget(int)
  id: getHopTarget(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: getHopTarget(int hop)
  nameWithType: HttpRoute.getHopTarget(int hop)
  fullName: org.apache.hc.client5.http.HttpRoute.getHopTarget(int hop)
  overload: org.apache.hc.client5.http.HttpRoute.getHopTarget*
  type: Method
  package: org.apache.hc.client5.http
  summary: Obtains the target of a hop in this route. The target of the last hop is the <xref uid="org.apache.hc.client5.http.HttpRoute.getTargetHost*" data-throw-if-not-resolved="false">target host</xref>, the target of previous hops is the respective proxy in the chain. For a route through exactly one proxy, target of hop 0 is the proxy and target of hop 1 is the target host.
  syntax:
    content: public final HttpHost getHopTarget(int hop)
    parameters:
    - id: hop
      type: int
    return:
      type: org.apache.hc.core5.http.HttpHost
- uid: org.apache.hc.client5.http.HttpRoute.getLayerType()
  id: getLayerType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: getLayerType()
  nameWithType: HttpRoute.getLayerType()
  fullName: org.apache.hc.client5.http.HttpRoute.getLayerType()
  overload: org.apache.hc.client5.http.HttpRoute.getLayerType*
  type: Method
  package: org.apache.hc.client5.http
  summary: Obtains the layering type of this route. In the presence of proxies, only layering over an end-to-end tunnel is considered.
  syntax:
    content: public final RouteInfo.LayerType getLayerType()
    return:
      type: org.apache.hc.client5.http.RouteInfo.LayerType
- uid: org.apache.hc.client5.http.HttpRoute.getLocalAddress()
  id: getLocalAddress()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: getLocalAddress()
  nameWithType: HttpRoute.getLocalAddress()
  fullName: org.apache.hc.client5.http.HttpRoute.getLocalAddress()
  overload: org.apache.hc.client5.http.HttpRoute.getLocalAddress*
  type: Method
  package: org.apache.hc.client5.http
  summary: Obtains the local address to connect from.
  syntax:
    content: public final InetAddress getLocalAddress()
    return:
      type: java.net.InetAddress
- uid: org.apache.hc.client5.http.HttpRoute.getLocalSocketAddress()
  id: getLocalSocketAddress()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: getLocalSocketAddress()
  nameWithType: HttpRoute.getLocalSocketAddress()
  fullName: org.apache.hc.client5.http.HttpRoute.getLocalSocketAddress()
  overload: org.apache.hc.client5.http.HttpRoute.getLocalSocketAddress*
  type: Method
  package: org.apache.hc.client5.http
  syntax:
    content: public final InetSocketAddress getLocalSocketAddress()
    return:
      type: java.net.InetSocketAddress
- uid: org.apache.hc.client5.http.HttpRoute.getProxyHost()
  id: getProxyHost()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: getProxyHost()
  nameWithType: HttpRoute.getProxyHost()
  fullName: org.apache.hc.client5.http.HttpRoute.getProxyHost()
  overload: org.apache.hc.client5.http.HttpRoute.getProxyHost*
  type: Method
  package: org.apache.hc.client5.http
  summary: Obtains the first proxy host.
  syntax:
    content: public final HttpHost getProxyHost()
    return:
      type: org.apache.hc.core5.http.HttpHost
- uid: org.apache.hc.client5.http.HttpRoute.getTargetHost()
  id: getTargetHost()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: getTargetHost()
  nameWithType: HttpRoute.getTargetHost()
  fullName: org.apache.hc.client5.http.HttpRoute.getTargetHost()
  overload: org.apache.hc.client5.http.HttpRoute.getTargetHost*
  type: Method
  package: org.apache.hc.client5.http
  summary: Obtains the target host.
  syntax:
    content: public final HttpHost getTargetHost()
    return:
      type: org.apache.hc.core5.http.HttpHost
- uid: org.apache.hc.client5.http.HttpRoute.getTunnelType()
  id: getTunnelType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: getTunnelType()
  nameWithType: HttpRoute.getTunnelType()
  fullName: org.apache.hc.client5.http.HttpRoute.getTunnelType()
  overload: org.apache.hc.client5.http.HttpRoute.getTunnelType*
  type: Method
  package: org.apache.hc.client5.http
  summary: Obtains the tunnel type of this route. If there is a proxy chain, only end-to-end tunnels are considered.
  syntax:
    content: public final RouteInfo.TunnelType getTunnelType()
    return:
      type: org.apache.hc.client5.http.RouteInfo.TunnelType
- uid: org.apache.hc.client5.http.HttpRoute.hashCode()
  id: hashCode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: hashCode()
  nameWithType: HttpRoute.hashCode()
  fullName: org.apache.hc.client5.http.HttpRoute.hashCode()
  overload: org.apache.hc.client5.http.HttpRoute.hashCode*
  type: Method
  package: org.apache.hc.client5.http
  summary: Generates a hash code for this route.
  syntax:
    content: public final int hashCode()
    return:
      type: int
      description: the hash code
- uid: org.apache.hc.client5.http.HttpRoute.isLayered()
  id: isLayered()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: isLayered()
  nameWithType: HttpRoute.isLayered()
  fullName: org.apache.hc.client5.http.HttpRoute.isLayered()
  overload: org.apache.hc.client5.http.HttpRoute.isLayered*
  type: Method
  package: org.apache.hc.client5.http
  summary: Checks whether this route includes a layered protocol. In the presence of proxies, only layering over an end-to-end tunnel is considered.
  syntax:
    content: public final boolean isLayered()
    return:
      type: boolean
- uid: org.apache.hc.client5.http.HttpRoute.isSecure()
  id: isSecure()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: isSecure()
  nameWithType: HttpRoute.isSecure()
  fullName: org.apache.hc.client5.http.HttpRoute.isSecure()
  overload: org.apache.hc.client5.http.HttpRoute.isSecure*
  type: Method
  package: org.apache.hc.client5.http
  summary: Checks whether this route is secure.
  syntax:
    content: public final boolean isSecure()
    return:
      type: boolean
- uid: org.apache.hc.client5.http.HttpRoute.isTunnelled()
  id: isTunnelled()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: isTunnelled()
  nameWithType: HttpRoute.isTunnelled()
  fullName: org.apache.hc.client5.http.HttpRoute.isTunnelled()
  overload: org.apache.hc.client5.http.HttpRoute.isTunnelled*
  type: Method
  package: org.apache.hc.client5.http
  summary: Checks whether this route is tunnelled through a proxy. If there is a proxy chain, only end-to-end tunnels are considered.
  syntax:
    content: public final boolean isTunnelled()
    return:
      type: boolean
- uid: org.apache.hc.client5.http.HttpRoute.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRoute
  langs:
  - java
  name: toString()
  nameWithType: HttpRoute.toString()
  fullName: org.apache.hc.client5.http.HttpRoute.toString()
  overload: org.apache.hc.client5.http.HttpRoute.toString*
  type: Method
  package: org.apache.hc.client5.http
  summary: Obtains a description of this route.
  syntax:
    content: public final String toString()
    return:
      type: java.lang.String
      description: a human-readable representation of this route
references:
- uid: org.apache.hc.core5.http.HttpHost
  name: HttpHost
  nameWithType: HttpHost
  fullName: org.apache.hc.core5.http.HttpHost
- uid: java.net.InetAddress
  spec.java:
  - uid: java.net.InetAddress
    name: InetAddress
    fullName: java.net.InetAddress
- uid: java.util.List<org.apache.hc.core5.http.HttpHost>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: org.apache.hc.core5.http.HttpHost
    name: HttpHost
    fullName: org.apache.hc.core5.http.HttpHost
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.client5.http.RouteInfo.TunnelType
  name: RouteInfo.TunnelType
  nameWithType: RouteInfo.TunnelType
  fullName: org.apache.hc.client5.http.RouteInfo.TunnelType
- uid: org.apache.hc.client5.http.RouteInfo.LayerType
  name: RouteInfo.LayerType
  nameWithType: RouteInfo.LayerType
  fullName: org.apache.hc.client5.http.RouteInfo.LayerType
- uid: org.apache.hc.client5.http.HttpRoute.HttpRoute*
  name: HttpRoute
  nameWithType: HttpRoute.HttpRoute
  fullName: org.apache.hc.client5.http.HttpRoute.HttpRoute
  package: org.apache.hc.client5.http
- uid: org.apache.hc.core5.http.HttpHost[]
  spec.java:
  - uid: org.apache.hc.core5.http.HttpHost
    name: HttpHost
    fullName: org.apache.hc.core5.http.HttpHost
  - name: '[]'
    fullName: '[]'
- uid: org.apache.hc.client5.http.HttpRoute.getTargetHost*
  name: getTargetHost
  nameWithType: HttpRoute.getTargetHost
  fullName: org.apache.hc.client5.http.HttpRoute.getTargetHost
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.HttpRoute.getLocalAddress*
  name: getLocalAddress
  nameWithType: HttpRoute.getLocalAddress
  fullName: org.apache.hc.client5.http.HttpRoute.getLocalAddress
  package: org.apache.hc.client5.http
- uid: java.net.InetSocketAddress
  spec.java:
  - uid: java.net.InetSocketAddress
    name: InetSocketAddress
    fullName: java.net.InetSocketAddress
- uid: org.apache.hc.client5.http.HttpRoute.getLocalSocketAddress*
  name: getLocalSocketAddress
  nameWithType: HttpRoute.getLocalSocketAddress
  fullName: org.apache.hc.client5.http.HttpRoute.getLocalSocketAddress
  package: org.apache.hc.client5.http
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.client5.http.HttpRoute.getHopCount*
  name: getHopCount
  nameWithType: HttpRoute.getHopCount
  fullName: org.apache.hc.client5.http.HttpRoute.getHopCount
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.HttpRoute.getHopTarget*
  name: getHopTarget
  nameWithType: HttpRoute.getHopTarget
  fullName: org.apache.hc.client5.http.HttpRoute.getHopTarget
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.HttpRoute.getProxyHost*
  name: getProxyHost
  nameWithType: HttpRoute.getProxyHost
  fullName: org.apache.hc.client5.http.HttpRoute.getProxyHost
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.HttpRoute.getTunnelType*
  name: getTunnelType
  nameWithType: HttpRoute.getTunnelType
  fullName: org.apache.hc.client5.http.HttpRoute.getTunnelType
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.HttpRoute.isTunnelled*
  name: isTunnelled
  nameWithType: HttpRoute.isTunnelled
  fullName: org.apache.hc.client5.http.HttpRoute.isTunnelled
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.HttpRoute.getLayerType*
  name: getLayerType
  nameWithType: HttpRoute.getLayerType
  fullName: org.apache.hc.client5.http.HttpRoute.getLayerType
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.HttpRoute.isLayered*
  name: isLayered
  nameWithType: HttpRoute.isLayered
  fullName: org.apache.hc.client5.http.HttpRoute.isLayered
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.HttpRoute.isSecure*
  name: isSecure
  nameWithType: HttpRoute.isSecure
  fullName: org.apache.hc.client5.http.HttpRoute.isSecure
  package: org.apache.hc.client5.http
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: org.apache.hc.client5.http.HttpRoute.equals*
  name: equals
  nameWithType: HttpRoute.equals
  fullName: org.apache.hc.client5.http.HttpRoute.equals
  package: org.apache.hc.client5.http
- uid: org.apache.hc.client5.http.HttpRoute.hashCode*
  name: hashCode
  nameWithType: HttpRoute.hashCode
  fullName: org.apache.hc.client5.http.HttpRoute.hashCode
  package: org.apache.hc.client5.http
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.hc.client5.http.HttpRoute.toString*
  name: toString
  nameWithType: HttpRoute.toString
  fullName: org.apache.hc.client5.http.HttpRoute.toString
  package: org.apache.hc.client5.http
- uid: java.lang.CloneNotSupportedException
  spec.java:
  - uid: java.lang.CloneNotSupportedException
    name: CloneNotSupportedException
    fullName: java.lang.CloneNotSupportedException
- uid: org.apache.hc.client5.http.HttpRoute.clone*
  name: clone
  nameWithType: HttpRoute.clone
  fullName: org.apache.hc.client5.http.HttpRoute.clone
  package: org.apache.hc.client5.http
- uid: java.lang.Cloneable
  name: Cloneable
  nameWithType: Cloneable
  fullName: java.lang.Cloneable
- uid: org.apache.hc.client5.http.RouteInfo
  name: RouteInfo
  nameWithType: RouteInfo
  fullName: org.apache.hc.client5.http.RouteInfo
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
