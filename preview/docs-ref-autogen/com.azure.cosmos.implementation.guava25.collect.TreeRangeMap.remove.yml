### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.TreeRangeMap.remove*"
fullName: "com.azure.cosmos.implementation.guava25.collect.TreeRangeMap<K,V>.remove"
name: "remove"
nameWithType: "TreeRangeMap<K,V>.remove"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.TreeRangeMap.remove(com.azure.cosmos.implementation.guava25.collect.Range<K>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.TreeRangeMap<K,V>.remove(Range<K> rangeToRemove)"
  name: "remove(Range<K> rangeToRemove)"
  nameWithType: "TreeRangeMap<K,V>.remove(Range<K> rangeToRemove)"
  summary: "Removes all associations from this range map in the specified range (optional operation).\n\nIf `!range.contains(k)`, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.TreeRangeMap.get*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"get(k)\"></xref> will return the same result before and after a call to `remove(range)`. If `range.contains(k)`, then after a call to `remove(range)`, `get(k)` will return `null`."
  parameters:
  - name: "rangeToRemove"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Range?alt=com.azure.cosmos.implementation.guava25.collect.Range&text=Range\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void remove(Range<K> rangeToRemove)"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
