### YamlMime:ManagedReference
items:
- uid: "com.azure.core.implementation.http.UnexpectedExceptionInformation"
  id: "UnexpectedExceptionInformation"
  parent: "com.azure.core.implementation.http"
  children:
  - "com.azure.core.implementation.http.UnexpectedExceptionInformation.UnexpectedExceptionInformation(java.lang.Class<? extends com.azure.core.exception.HttpResponseException>)"
  - "com.azure.core.implementation.http.UnexpectedExceptionInformation.getExceptionBodyType()"
  - "com.azure.core.implementation.http.UnexpectedExceptionInformation.getExceptionType()"
  langs:
  - "java"
  name: "UnexpectedExceptionInformation"
  nameWithType: "UnexpectedExceptionInformation"
  fullName: "com.azure.core.implementation.http.UnexpectedExceptionInformation"
  type: "Class"
  package: "com.azure.core.implementation.http"
  summary: "Contains the information needed to generate a exception type to be thrown or returned when a REST API returns an error status code."
  syntax:
    content: "public class UnexpectedExceptionInformation"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.implementation.http.UnexpectedExceptionInformation.UnexpectedExceptionInformation(java.lang.Class<? extends com.azure.core.exception.HttpResponseException>)"
  id: "UnexpectedExceptionInformation(java.lang.Class<? extends com.azure.core.exception.HttpResponseException>)"
  parent: "com.azure.core.implementation.http.UnexpectedExceptionInformation"
  langs:
  - "java"
  name: "UnexpectedExceptionInformation(Class<? extends HttpResponseException> exceptionType)"
  nameWithType: "UnexpectedExceptionInformation.UnexpectedExceptionInformation(Class<? extends HttpResponseException> exceptionType)"
  fullName: "com.azure.core.implementation.http.UnexpectedExceptionInformation.UnexpectedExceptionInformation(Class<? extends HttpResponseException> exceptionType)"
  overload: "com.azure.core.implementation.http.UnexpectedExceptionInformation.UnexpectedExceptionInformation*"
  type: "Constructor"
  package: "com.azure.core.implementation.http"
  summary: "Creates an UnexpectedExceptionInformation object with the given exception type and expected response body."
  syntax:
    content: "public UnexpectedExceptionInformation(Class<? extends HttpResponseException> exceptionType)"
    parameters:
    - id: "exceptionType"
      type: "java.lang.Class<? extends com.azure.core.exception.HttpResponseException>"
      description: "Exception type to be thrown."
- uid: "com.azure.core.implementation.http.UnexpectedExceptionInformation.getExceptionBodyType()"
  id: "getExceptionBodyType()"
  parent: "com.azure.core.implementation.http.UnexpectedExceptionInformation"
  langs:
  - "java"
  name: "getExceptionBodyType()"
  nameWithType: "UnexpectedExceptionInformation.getExceptionBodyType()"
  fullName: "com.azure.core.implementation.http.UnexpectedExceptionInformation.getExceptionBodyType()"
  overload: "com.azure.core.implementation.http.UnexpectedExceptionInformation.getExceptionBodyType*"
  type: "Method"
  package: "com.azure.core.implementation.http"
  syntax:
    content: "public Class<?> getExceptionBodyType()"
    return:
      type: "java.lang.Class<?>"
      description: "the exception's response body."
- uid: "com.azure.core.implementation.http.UnexpectedExceptionInformation.getExceptionType()"
  id: "getExceptionType()"
  parent: "com.azure.core.implementation.http.UnexpectedExceptionInformation"
  langs:
  - "java"
  name: "getExceptionType()"
  nameWithType: "UnexpectedExceptionInformation.getExceptionType()"
  fullName: "com.azure.core.implementation.http.UnexpectedExceptionInformation.getExceptionType()"
  overload: "com.azure.core.implementation.http.UnexpectedExceptionInformation.getExceptionType*"
  type: "Method"
  package: "com.azure.core.implementation.http"
  syntax:
    content: "public Class<? extends HttpResponseException> getExceptionType()"
    return:
      type: "java.lang.Class<? extends com.azure.core.exception.HttpResponseException>"
      description: "the exception type."
references:
- uid: "java.lang.Class<? extends com.azure.core.exception.HttpResponseException>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "? extends com.azure.core.exception.HttpResponseException"
    name: "HttpResponseException"
    fullName: "? extends com.azure.core.exception.HttpResponseException"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.implementation.http.UnexpectedExceptionInformation.UnexpectedExceptionInformation*"
  name: "UnexpectedExceptionInformation"
  nameWithType: "UnexpectedExceptionInformation.UnexpectedExceptionInformation"
  fullName: "com.azure.core.implementation.http.UnexpectedExceptionInformation.UnexpectedExceptionInformation"
  package: "com.azure.core.implementation.http"
- uid: "com.azure.core.implementation.http.UnexpectedExceptionInformation.getExceptionType*"
  name: "getExceptionType"
  nameWithType: "UnexpectedExceptionInformation.getExceptionType"
  fullName: "com.azure.core.implementation.http.UnexpectedExceptionInformation.getExceptionType"
  package: "com.azure.core.implementation.http"
- uid: "java.lang.Class<?>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.implementation.http.UnexpectedExceptionInformation.getExceptionBodyType*"
  name: "getExceptionBodyType"
  nameWithType: "UnexpectedExceptionInformation.getExceptionBodyType"
  fullName: "com.azure.core.implementation.http.UnexpectedExceptionInformation.getExceptionBodyType"
  package: "com.azure.core.implementation.http"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "? extends com.azure.core.exception.HttpResponseException"
  name: "? extends HttpResponseException"
  nameWithType: "? extends HttpResponseException"
  fullName: "? extends com.azure.core.exception.HttpResponseException"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
