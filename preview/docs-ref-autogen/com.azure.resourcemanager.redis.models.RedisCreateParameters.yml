### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters
  id: RedisCreateParameters
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models
  children:
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.RedisCreateParameters()
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.enableNonSslPort()
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.location()
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.minimumTlsVersion()
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.redisConfiguration()
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.shardCount()
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.sku()
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.staticIp()
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.subnetId()
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.tags()
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.tenantSettings()
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.validate()
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.withEnableNonSslPort(java.lang.Boolean)
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.withLocation(java.lang.String)
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.withMinimumTlsVersion(com.azure.resourcemanager.redis.models.TlsVersion)
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.withRedisConfiguration(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.withShardCount(java.lang.Integer)
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.withSku(com.azure.resourcemanager.redis.models.Sku)
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.withStaticIp(java.lang.String)
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.withSubnetId(java.lang.String)
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.withTags(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.withTenantSettings(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.withZones(java.util.List<java.lang.String>)
  - com.azure.resourcemanager.redis.models.RedisCreateParameters.zones()
  langs:
  - java
  name: RedisCreateParameters
  nameWithType: RedisCreateParameters
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters
  type: Class
  package: com.azure.resourcemanager.redis.models
  summary: Parameters supplied to the Create Redis operation.
  syntax:
    content: public class RedisCreateParameters
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.RedisCreateParameters()
  id: RedisCreateParameters()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: RedisCreateParameters()
  nameWithType: RedisCreateParameters.RedisCreateParameters()
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.RedisCreateParameters()
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.RedisCreateParameters*
  type: Constructor
  package: com.azure.resourcemanager.redis.models
  syntax:
    content: public RedisCreateParameters()
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.enableNonSslPort()
  id: enableNonSslPort()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: enableNonSslPort()
  nameWithType: RedisCreateParameters.enableNonSslPort()
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.enableNonSslPort()
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.enableNonSslPort*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Get the enableNonSslPort property: Specifies whether the non-ssl Redis server port (6379) is enabled.'
  syntax:
    content: public Boolean enableNonSslPort()
    return:
      type: java.lang.Boolean
      description: the enableNonSslPort value.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.location()
  id: location()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: location()
  nameWithType: RedisCreateParameters.location()
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.location()
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.location*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Get the location property: The geo-location where the resource lives.'
  syntax:
    content: public String location()
    return:
      type: java.lang.String
      description: the location value.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.minimumTlsVersion()
  id: minimumTlsVersion()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: minimumTlsVersion()
  nameWithType: RedisCreateParameters.minimumTlsVersion()
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.minimumTlsVersion()
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.minimumTlsVersion*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: "Get the minimumTlsVersion property: Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')."
  syntax:
    content: public TlsVersion minimumTlsVersion()
    return:
      type: com.azure.resourcemanager.redis.models.TlsVersion
      description: the minimumTlsVersion value.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.redisConfiguration()
  id: redisConfiguration()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: redisConfiguration()
  nameWithType: RedisCreateParameters.redisConfiguration()
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.redisConfiguration()
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.redisConfiguration*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Get the redisConfiguration property: All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.'
  syntax:
    content: public Map<String,String> redisConfiguration()
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the redisConfiguration value.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.shardCount()
  id: shardCount()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: shardCount()
  nameWithType: RedisCreateParameters.shardCount()
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.shardCount()
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.shardCount*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Get the shardCount property: The number of shards to be created on a Premium Cluster Cache.'
  syntax:
    content: public Integer shardCount()
    return:
      type: java.lang.Integer
      description: the shardCount value.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.sku()
  id: sku()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: sku()
  nameWithType: RedisCreateParameters.sku()
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.sku()
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.sku*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Get the sku property: The SKU of the Redis cache to deploy.'
  syntax:
    content: public Sku sku()
    return:
      type: com.azure.resourcemanager.redis.models.Sku
      description: the sku value.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.staticIp()
  id: staticIp()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: staticIp()
  nameWithType: RedisCreateParameters.staticIp()
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.staticIp()
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.staticIp*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Get the staticIp property: Static IP address. Required when deploying a Redis cache inside an existing Azure Virtual Network.'
  syntax:
    content: public String staticIp()
    return:
      type: java.lang.String
      description: the staticIp value.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.subnetId()
  id: subnetId()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: subnetId()
  nameWithType: RedisCreateParameters.subnetId()
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.subnetId()
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.subnetId*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Get the subnetId property: The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/\{subscriptionId\}/resourceGroups/\{resourceGroupName\}/Microsoft.\{Network|ClassicNetwork\}/VirtualNetworks/vnet1/subnets/subnet1.'
  syntax:
    content: public String subnetId()
    return:
      type: java.lang.String
      description: the subnetId value.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.tags()
  id: tags()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: tags()
  nameWithType: RedisCreateParameters.tags()
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.tags()
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.tags*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Get the tags property: Resource tags.'
  syntax:
    content: public Map<String,String> tags()
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the tags value.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.tenantSettings()
  id: tenantSettings()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: tenantSettings()
  nameWithType: RedisCreateParameters.tenantSettings()
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.tenantSettings()
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.tenantSettings*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Get the tenantSettings property: A dictionary of tenant settings.'
  syntax:
    content: public Map<String,String> tenantSettings()
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the tenantSettings value.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.validate()
  id: validate()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: validate()
  nameWithType: RedisCreateParameters.validate()
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.validate()
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.validate*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: Validates the instance.
  syntax:
    content: public void validate()
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withEnableNonSslPort(java.lang.Boolean)
  id: withEnableNonSslPort(java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: withEnableNonSslPort(Boolean enableNonSslPort)
  nameWithType: RedisCreateParameters.withEnableNonSslPort(Boolean enableNonSslPort)
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withEnableNonSslPort(Boolean enableNonSslPort)
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.withEnableNonSslPort*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Set the enableNonSslPort property: Specifies whether the non-ssl Redis server port (6379) is enabled.'
  syntax:
    content: public RedisCreateParameters withEnableNonSslPort(Boolean enableNonSslPort)
    parameters:
    - id: enableNonSslPort
      type: java.lang.Boolean
      description: the enableNonSslPort value to set.
    return:
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: the RedisCreateParameters object itself.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withLocation(java.lang.String)
  id: withLocation(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: withLocation(String location)
  nameWithType: RedisCreateParameters.withLocation(String location)
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withLocation(String location)
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.withLocation*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Set the location property: The geo-location where the resource lives.'
  syntax:
    content: public RedisCreateParameters withLocation(String location)
    parameters:
    - id: location
      type: java.lang.String
      description: the location value to set.
    return:
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: the RedisCreateParameters object itself.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withMinimumTlsVersion(com.azure.resourcemanager.redis.models.TlsVersion)
  id: withMinimumTlsVersion(com.azure.resourcemanager.redis.models.TlsVersion)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: withMinimumTlsVersion(TlsVersion minimumTlsVersion)
  nameWithType: RedisCreateParameters.withMinimumTlsVersion(TlsVersion minimumTlsVersion)
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withMinimumTlsVersion(TlsVersion minimumTlsVersion)
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.withMinimumTlsVersion*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: "Set the minimumTlsVersion property: Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')."
  syntax:
    content: public RedisCreateParameters withMinimumTlsVersion(TlsVersion minimumTlsVersion)
    parameters:
    - id: minimumTlsVersion
      type: com.azure.resourcemanager.redis.models.TlsVersion
      description: the minimumTlsVersion value to set.
    return:
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: the RedisCreateParameters object itself.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withRedisConfiguration(java.util.Map<java.lang.String,java.lang.String>)
  id: withRedisConfiguration(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: withRedisConfiguration(Map<String,String> redisConfiguration)
  nameWithType: RedisCreateParameters.withRedisConfiguration(Map<String,String> redisConfiguration)
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withRedisConfiguration(Map<String,String> redisConfiguration)
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.withRedisConfiguration*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Set the redisConfiguration property: All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.'
  syntax:
    content: public RedisCreateParameters withRedisConfiguration(Map<String,String> redisConfiguration)
    parameters:
    - id: redisConfiguration
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the redisConfiguration value to set.
    return:
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: the RedisCreateParameters object itself.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withShardCount(java.lang.Integer)
  id: withShardCount(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: withShardCount(Integer shardCount)
  nameWithType: RedisCreateParameters.withShardCount(Integer shardCount)
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withShardCount(Integer shardCount)
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.withShardCount*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Set the shardCount property: The number of shards to be created on a Premium Cluster Cache.'
  syntax:
    content: public RedisCreateParameters withShardCount(Integer shardCount)
    parameters:
    - id: shardCount
      type: java.lang.Integer
      description: the shardCount value to set.
    return:
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: the RedisCreateParameters object itself.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withSku(com.azure.resourcemanager.redis.models.Sku)
  id: withSku(com.azure.resourcemanager.redis.models.Sku)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: withSku(Sku sku)
  nameWithType: RedisCreateParameters.withSku(Sku sku)
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withSku(Sku sku)
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.withSku*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Set the sku property: The SKU of the Redis cache to deploy.'
  syntax:
    content: public RedisCreateParameters withSku(Sku sku)
    parameters:
    - id: sku
      type: com.azure.resourcemanager.redis.models.Sku
      description: the sku value to set.
    return:
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: the RedisCreateParameters object itself.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withStaticIp(java.lang.String)
  id: withStaticIp(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: withStaticIp(String staticIp)
  nameWithType: RedisCreateParameters.withStaticIp(String staticIp)
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withStaticIp(String staticIp)
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.withStaticIp*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Set the staticIp property: Static IP address. Required when deploying a Redis cache inside an existing Azure Virtual Network.'
  syntax:
    content: public RedisCreateParameters withStaticIp(String staticIp)
    parameters:
    - id: staticIp
      type: java.lang.String
      description: the staticIp value to set.
    return:
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: the RedisCreateParameters object itself.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withSubnetId(java.lang.String)
  id: withSubnetId(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: withSubnetId(String subnetId)
  nameWithType: RedisCreateParameters.withSubnetId(String subnetId)
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withSubnetId(String subnetId)
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.withSubnetId*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Set the subnetId property: The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/\{subscriptionId\}/resourceGroups/\{resourceGroupName\}/Microsoft.\{Network|ClassicNetwork\}/VirtualNetworks/vnet1/subnets/subnet1.'
  syntax:
    content: public RedisCreateParameters withSubnetId(String subnetId)
    parameters:
    - id: subnetId
      type: java.lang.String
      description: the subnetId value to set.
    return:
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: the RedisCreateParameters object itself.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withTags(java.util.Map<java.lang.String,java.lang.String>)
  id: withTags(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: withTags(Map<String,String> tags)
  nameWithType: RedisCreateParameters.withTags(Map<String,String> tags)
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withTags(Map<String,String> tags)
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.withTags*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Set the tags property: Resource tags.'
  syntax:
    content: public RedisCreateParameters withTags(Map<String,String> tags)
    parameters:
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the tags value to set.
    return:
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: the RedisCreateParameters object itself.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withTenantSettings(java.util.Map<java.lang.String,java.lang.String>)
  id: withTenantSettings(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: withTenantSettings(Map<String,String> tenantSettings)
  nameWithType: RedisCreateParameters.withTenantSettings(Map<String,String> tenantSettings)
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withTenantSettings(Map<String,String> tenantSettings)
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.withTenantSettings*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Set the tenantSettings property: A dictionary of tenant settings.'
  syntax:
    content: public RedisCreateParameters withTenantSettings(Map<String,String> tenantSettings)
    parameters:
    - id: tenantSettings
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the tenantSettings value to set.
    return:
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: the RedisCreateParameters object itself.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withZones(java.util.List<java.lang.String>)
  id: withZones(java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: withZones(List<String> zones)
  nameWithType: RedisCreateParameters.withZones(List<String> zones)
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withZones(List<String> zones)
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.withZones*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Set the zones property: A list of availability zones denoting where the resource needs to come from.'
  syntax:
    content: public RedisCreateParameters withZones(List<String> zones)
    parameters:
    - id: zones
      type: java.util.List<java.lang.String>
      description: the zones value to set.
    return:
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: the RedisCreateParameters object itself.
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.zones()
  id: zones()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCreateParameters
  langs:
  - java
  name: zones()
  nameWithType: RedisCreateParameters.zones()
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.zones()
  overload: com.azure.resourcemanager.redis.models.RedisCreateParameters.zones*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Get the zones property: A list of availability zones denoting where the resource needs to come from.'
  syntax:
    content: public List<String> zones()
    return:
      type: java.util.List<java.lang.String>
      description: the zones value.
references:
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.RedisCreateParameters*
  name: RedisCreateParameters
  nameWithType: RedisCreateParameters.RedisCreateParameters
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.RedisCreateParameters
  package: com.azure.resourcemanager.redis.models
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.zones*
  name: zones
  nameWithType: RedisCreateParameters.zones
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.zones
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withZones*
  name: withZones
  nameWithType: RedisCreateParameters.withZones
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withZones
  package: com.azure.resourcemanager.redis.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.location*
  name: location
  nameWithType: RedisCreateParameters.location
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.location
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withLocation*
  name: withLocation
  nameWithType: RedisCreateParameters.withLocation
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withLocation
  package: com.azure.resourcemanager.redis.models
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.tags*
  name: tags
  nameWithType: RedisCreateParameters.tags
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.tags
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withTags*
  name: withTags
  nameWithType: RedisCreateParameters.withTags
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withTags
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.redisConfiguration*
  name: redisConfiguration
  nameWithType: RedisCreateParameters.redisConfiguration
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.redisConfiguration
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withRedisConfiguration*
  name: withRedisConfiguration
  nameWithType: RedisCreateParameters.withRedisConfiguration
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withRedisConfiguration
  package: com.azure.resourcemanager.redis.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.enableNonSslPort*
  name: enableNonSslPort
  nameWithType: RedisCreateParameters.enableNonSslPort
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.enableNonSslPort
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withEnableNonSslPort*
  name: withEnableNonSslPort
  nameWithType: RedisCreateParameters.withEnableNonSslPort
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withEnableNonSslPort
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.tenantSettings*
  name: tenantSettings
  nameWithType: RedisCreateParameters.tenantSettings
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.tenantSettings
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withTenantSettings*
  name: withTenantSettings
  nameWithType: RedisCreateParameters.withTenantSettings
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withTenantSettings
  package: com.azure.resourcemanager.redis.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.shardCount*
  name: shardCount
  nameWithType: RedisCreateParameters.shardCount
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.shardCount
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withShardCount*
  name: withShardCount
  nameWithType: RedisCreateParameters.withShardCount
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withShardCount
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.TlsVersion
  name: TlsVersion
  nameWithType: TlsVersion
  fullName: com.azure.resourcemanager.redis.models.TlsVersion
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.minimumTlsVersion*
  name: minimumTlsVersion
  nameWithType: RedisCreateParameters.minimumTlsVersion
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.minimumTlsVersion
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withMinimumTlsVersion*
  name: withMinimumTlsVersion
  nameWithType: RedisCreateParameters.withMinimumTlsVersion
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withMinimumTlsVersion
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.Sku
  name: Sku
  nameWithType: Sku
  fullName: com.azure.resourcemanager.redis.models.Sku
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.sku*
  name: sku
  nameWithType: RedisCreateParameters.sku
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.sku
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withSku*
  name: withSku
  nameWithType: RedisCreateParameters.withSku
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withSku
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.subnetId*
  name: subnetId
  nameWithType: RedisCreateParameters.subnetId
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.subnetId
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withSubnetId*
  name: withSubnetId
  nameWithType: RedisCreateParameters.withSubnetId
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withSubnetId
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.staticIp*
  name: staticIp
  nameWithType: RedisCreateParameters.staticIp
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.staticIp
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.withStaticIp*
  name: withStaticIp
  nameWithType: RedisCreateParameters.withStaticIp
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.withStaticIp
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters.validate*
  name: validate
  nameWithType: RedisCreateParameters.validate
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters.validate
  package: com.azure.resourcemanager.redis.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
