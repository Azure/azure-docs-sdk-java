### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap.entries*"
fullName: "com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap<K,V>.entries"
name: "entries"
nameWithType: "LinkedListMultimap<K,V>.entries"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap.entries()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap<K,V>.entries()"
  name: "entries()"
  nameWithType: "LinkedListMultimap<K,V>.entries()"
  summary: "Returns a view collection of all key-value pairs contained in this multimap, as <xref uid=\"java.util.Map.Entry\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Entry\"></xref> instances.\n\nChanges to the returned collection or the entries it contains will update the underlying multimap, and vice versa. However, *adding* to the returned collection is not possible.\n\nThe iterator generated by the returned collection traverses the entries in the order they were added to the multimap. Because the entries may have duplicates and follow the insertion ordering, this method returns a <xref uid=\"java.util.List\" data-throw-if-not-resolved=\"false\" data-raw-source=\"List\"></xref>, instead of the <xref uid=\"java.util.Collection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Collection\"></xref> specified in the <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ListMultimap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ListMultimap\"></xref> interface.\n\nAn entry's <xref uid=\"java.util.Map.Entry.getKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Entry#getKey\"></xref> method always returns the same key, regardless of what happens subsequently. As long as the corresponding key-value mapping is not removed from the multimap, <xref uid=\"java.util.Map.Entry.getValue\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Entry#getValue\"></xref> returns the value from the multimap, which may change over time, and <xref uid=\"java.util.Map.Entry.setValue\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Entry#setValue\"></xref> modifies that value. Removing the mapping from the multimap does not alter the value returned by `getValue()`, though a subsequent `setValue()` call won't update the multimap but will lead to a revised value being returned by `getValue()`."
  overridden: "com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.entries()"
  syntax: "public List<Map.Entry<K,V>> entries()"
  returns:
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map.Entry?alt=java.util.Map.Entry&text=Entry\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
