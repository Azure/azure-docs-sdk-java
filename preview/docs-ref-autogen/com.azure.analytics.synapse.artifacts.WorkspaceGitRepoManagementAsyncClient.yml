### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.WorkspaceGitRepoManagementAsyncClient"
fullName: "com.azure.analytics.synapse.artifacts.WorkspaceGitRepoManagementAsyncClient"
name: "WorkspaceGitRepoManagementAsyncClient"
nameWithType: "WorkspaceGitRepoManagementAsyncClient"
summary: "Initializes a new instance of the asynchronous Artifacts<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class WorkspaceGitRepoManagementAsyncClient"
methods:
- uid: "com.azure.analytics.synapse.artifacts.WorkspaceGitRepoManagementAsyncClient.getGitHubAccessToken(com.azure.analytics.synapse.artifacts.models.GitHubAccessTokenRequest)"
  fullName: "com.azure.analytics.synapse.artifacts.WorkspaceGitRepoManagementAsyncClient.getGitHubAccessToken(GitHubAccessTokenRequest gitHubAccessTokenRequest)"
  name: "getGitHubAccessToken(GitHubAccessTokenRequest gitHubAccessTokenRequest)"
  nameWithType: "WorkspaceGitRepoManagementAsyncClient.getGitHubAccessToken(GitHubAccessTokenRequest gitHubAccessTokenRequest)"
  summary: "Get the Git<wbr>Hub access token."
  parameters:
  - description: "The gitHubAccessTokenRequest parameter."
    name: "gitHubAccessTokenRequest"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.GitHubAccessTokenRequest?alt=com.azure.analytics.synapse.artifacts.models.GitHubAccessTokenRequest&text=GitHubAccessTokenRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<GitHubAccessTokenResponse> getGitHubAccessToken(GitHubAccessTokenRequest gitHubAccessTokenRequest)"
  desc: "Get the GitHub access token."
  returns:
    description: "the GitHub access token on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.GitHubAccessTokenResponse?alt=com.azure.analytics.synapse.artifacts.models.GitHubAccessTokenResponse&text=GitHubAccessTokenResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.WorkspaceGitRepoManagementAsyncClient.getGitHubAccessToken(com.azure.analytics.synapse.artifacts.models.GitHubAccessTokenRequest,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.WorkspaceGitRepoManagementAsyncClient.getGitHubAccessToken(GitHubAccessTokenRequest gitHubAccessTokenRequest, String clientRequestId)"
  name: "getGitHubAccessToken(GitHubAccessTokenRequest gitHubAccessTokenRequest, String clientRequestId)"
  nameWithType: "WorkspaceGitRepoManagementAsyncClient.getGitHubAccessToken(GitHubAccessTokenRequest gitHubAccessTokenRequest, String clientRequestId)"
  summary: "Get the Git<wbr>Hub access token."
  parameters:
  - description: "The gitHubAccessTokenRequest parameter."
    name: "gitHubAccessTokenRequest"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.GitHubAccessTokenRequest?alt=com.azure.analytics.synapse.artifacts.models.GitHubAccessTokenRequest&text=GitHubAccessTokenRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "Can provide a guid, which is helpful for debugging and to provide better customer support."
    name: "clientRequestId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<GitHubAccessTokenResponse> getGitHubAccessToken(GitHubAccessTokenRequest gitHubAccessTokenRequest, String clientRequestId)"
  desc: "Get the GitHub access token."
  returns:
    description: "the GitHub access token on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.GitHubAccessTokenResponse?alt=com.azure.analytics.synapse.artifacts.models.GitHubAccessTokenResponse&text=GitHubAccessTokenResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.WorkspaceGitRepoManagementAsyncClient.getGitHubAccessTokenWithResponse(com.azure.analytics.synapse.artifacts.models.GitHubAccessTokenRequest,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.WorkspaceGitRepoManagementAsyncClient.getGitHubAccessTokenWithResponse(GitHubAccessTokenRequest gitHubAccessTokenRequest, String clientRequestId)"
  name: "getGitHubAccessTokenWithResponse(GitHubAccessTokenRequest gitHubAccessTokenRequest, String clientRequestId)"
  nameWithType: "WorkspaceGitRepoManagementAsyncClient.getGitHubAccessTokenWithResponse(GitHubAccessTokenRequest gitHubAccessTokenRequest, String clientRequestId)"
  summary: "Get the Git<wbr>Hub access token."
  parameters:
  - description: "The gitHubAccessTokenRequest parameter."
    name: "gitHubAccessTokenRequest"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.GitHubAccessTokenRequest?alt=com.azure.analytics.synapse.artifacts.models.GitHubAccessTokenRequest&text=GitHubAccessTokenRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "Can provide a guid, which is helpful for debugging and to provide better customer support."
    name: "clientRequestId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<GitHubAccessTokenResponse>> getGitHubAccessTokenWithResponse(GitHubAccessTokenRequest gitHubAccessTokenRequest, String clientRequestId)"
  desc: "Get the GitHub access token."
  returns:
    description: "the GitHub access token along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.GitHubAccessTokenResponse?alt=com.azure.analytics.synapse.artifacts.models.GitHubAccessTokenResponse&text=GitHubAccessTokenResponse\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous ArtifactsClient type."
metadata: {}
package: "com.azure.analytics.synapse.artifacts"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
