### YamlMime:JavaType
uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner"
fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner"
name: "NameAvailabilityInner"
nameWithType: "NameAvailabilityInner"
summary: "Represents a resource name availability."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse&text=CheckNameAvailabilityResponse\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.fromJson(com.azure.json.JsonReader)?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.message()?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.message&text=message\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.nameAvailable()?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.nameAvailable&text=nameAvailable\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.reason()?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.reason&text=reason\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.toJson(com.azure.json.JsonWriter)?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.validate()?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.validate&text=validate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.withMessage(java.lang.String)?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.withMessage&text=withMessage\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.withNameAvailable(java.lang.Boolean)?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.withNameAvailable&text=withNameAvailable\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.withReason(com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityReason)?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.withReason&text=withReason\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **NameAvailabilityInner**</br> extends <xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse&text=CheckNameAvailabilityResponse\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.NameAvailabilityInner()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.NameAvailabilityInner()"
  name: "NameAvailabilityInner()"
  nameWithType: "NameAvailabilityInner.NameAvailabilityInner()"
  summary: "Creates an instance of Name<wbr>Availability<wbr>Inner class."
  syntax: "public NameAvailabilityInner()"
  desc: "Creates an instance of NameAvailabilityInner class."
methods:
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "NameAvailabilityInner.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Name<wbr>Availability<wbr>Inner from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static NameAvailabilityInner fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the NameAvailabilityInner."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of NameAvailabilityInner from the JsonReader."
  returns:
    description: "An instance of NameAvailabilityInner if the JsonReader was pointing to an instance of it, or null if it\n was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner?alt=com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner&text=NameAvailabilityInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.name()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.name()"
  name: "name()"
  nameWithType: "NameAvailabilityInner.name()"
  summary: "Get the name property: name of the PostgreSQL server."
  syntax: "public String name()"
  desc: "Get the name property: name of the PostgreSQL server."
  returns:
    description: "the name value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "NameAvailabilityInner.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.type()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.type()"
  name: "type()"
  nameWithType: "NameAvailabilityInner.type()"
  summary: "Get the type property: type of the server."
  syntax: "public String type()"
  desc: "Get the type property: type of the server."
  returns:
    description: "the type value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.validate()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.validate()"
  name: "validate()"
  nameWithType: "NameAvailabilityInner.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.withMessage(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.withMessage(String message)"
  name: "withMessage(String message)"
  nameWithType: "NameAvailabilityInner.withMessage(String message)"
  summary: "Set the message property: Detailed reason why the given name is available."
  overridden: "com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.withMessage(java.lang.String)"
  parameters:
  - name: "message"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public NameAvailabilityInner withMessage(String message)"
  desc: "Set the message property: Detailed reason why the given name is available."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner?alt=com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner&text=NameAvailabilityInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.withNameAvailable(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.withNameAvailable(Boolean nameAvailable)"
  name: "withNameAvailable(Boolean nameAvailable)"
  nameWithType: "NameAvailabilityInner.withNameAvailable(Boolean nameAvailable)"
  summary: "Set the name<wbr>Available property: Indicates if the resource name is available."
  overridden: "com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.withNameAvailable(java.lang.Boolean)"
  parameters:
  - name: "nameAvailable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public NameAvailabilityInner withNameAvailable(Boolean nameAvailable)"
  desc: "Set the nameAvailable property: Indicates if the resource name is available."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner?alt=com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner&text=NameAvailabilityInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.withReason(com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityReason)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner.withReason(CheckNameAvailabilityReason reason)"
  name: "withReason(CheckNameAvailabilityReason reason)"
  nameWithType: "NameAvailabilityInner.withReason(CheckNameAvailabilityReason reason)"
  summary: "Set the reason property: The reason why the given name is not available."
  overridden: "com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityResponse.withReason(com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityReason)"
  parameters:
  - name: "reason"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityReason?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.CheckNameAvailabilityReason&text=CheckNameAvailabilityReason\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NameAvailabilityInner withReason(CheckNameAvailabilityReason reason)"
  desc: "Set the reason property: The reason why the given name is not available."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner?alt=com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.NameAvailabilityInner&text=NameAvailabilityInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents a resource name availability."
metadata: {}
package: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-postgresqlflexibleserver:1.1.0-beta.4
