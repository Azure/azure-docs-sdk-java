### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService"
fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService"
name: "GoogleBigQueryLinkedService"
nameWithType: "GoogleBigQueryLinkedService"
summary: "Google Big<wbr>Query service linked service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedService?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.LinkedService.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.annotations()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.connectVia()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.description()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.parameters()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class GoogleBigQueryLinkedService extends LinkedService"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.GoogleBigQueryLinkedService()"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.GoogleBigQueryLinkedService()"
  name: "GoogleBigQueryLinkedService()"
  nameWithType: "GoogleBigQueryLinkedService.GoogleBigQueryLinkedService()"
  syntax: "public GoogleBigQueryLinkedService()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.additionalProjects()"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.additionalProjects()"
  name: "additionalProjects()"
  nameWithType: "GoogleBigQueryLinkedService.additionalProjects()"
  summary: "Get the additional<wbr>Projects property: A comma-separated list of public Big<wbr>Query projects to access."
  syntax: "public Object additionalProjects()"
  desc: "Get the additionalProjects property: A comma-separated list of public BigQuery projects to access."
  returns:
    description: "the additionalProjects value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.authenticationType()"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.authenticationType()"
  name: "authenticationType()"
  nameWithType: "GoogleBigQueryLinkedService.authenticationType()"
  summary: "Get the authentication<wbr>Type property: The OAuth 2.0 authentication mechanism used for authentication."
  syntax: "public GoogleBigQueryAuthenticationType authenticationType()"
  desc: "Get the authenticationType property: The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR."
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryAuthenticationType&text=GoogleBigQueryAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.clientId()"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.clientId()"
  name: "clientId()"
  nameWithType: "GoogleBigQueryLinkedService.clientId()"
  summary: "Get the client<wbr>Id property: The client id of the google application used to acquire the refresh token."
  syntax: "public Object clientId()"
  desc: "Get the clientId property: The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string)."
  returns:
    description: "the clientId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.clientSecret()"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.clientSecret()"
  name: "clientSecret()"
  nameWithType: "GoogleBigQueryLinkedService.clientSecret()"
  summary: "Get the client<wbr>Secret property: The client secret of the google application used to acquire the refresh token."
  syntax: "public SecretBase clientSecret()"
  desc: "Get the clientSecret property: The client secret of the google application used to acquire the refresh token."
  returns:
    description: "the clientSecret value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.email()"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.email()"
  name: "email()"
  nameWithType: "GoogleBigQueryLinkedService.email()"
  summary: "Get the email property: The service account email ID that is used for Service<wbr>Authentication and can only be used on self-hosted IR."
  syntax: "public Object email()"
  desc: "Get the email property: The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR."
  returns:
    description: "the email value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "GoogleBigQueryLinkedService.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public Object encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.keyFilePath()"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.keyFilePath()"
  name: "keyFilePath()"
  nameWithType: "GoogleBigQueryLinkedService.keyFilePath()"
  summary: "Get the key<wbr>File<wbr>Path property: The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR."
  syntax: "public Object keyFilePath()"
  desc: "Get the keyFilePath property: The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR."
  returns:
    description: "the keyFilePath value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.project()"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.project()"
  name: "project()"
  nameWithType: "GoogleBigQueryLinkedService.project()"
  summary: "Get the project property: The default Big<wbr>Query project to query against."
  syntax: "public Object project()"
  desc: "Get the project property: The default BigQuery project to query against."
  returns:
    description: "the project value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.refreshToken()"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.refreshToken()"
  name: "refreshToken()"
  nameWithType: "GoogleBigQueryLinkedService.refreshToken()"
  summary: "Get the refresh<wbr>Token property: The refresh token obtained from Google for authorizing access to Big<wbr>Query for User<wbr>Authentication."
  syntax: "public SecretBase refreshToken()"
  desc: "Get the refreshToken property: The refresh token obtained from Google for authorizing access to BigQuery for UserAuthentication."
  returns:
    description: "the refreshToken value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.requestGoogleDriveScope()"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.requestGoogleDriveScope()"
  name: "requestGoogleDriveScope()"
  nameWithType: "GoogleBigQueryLinkedService.requestGoogleDriveScope()"
  summary: "Get the request<wbr>Google<wbr>Drive<wbr>Scope property: Whether to request access to Google Drive."
  syntax: "public Object requestGoogleDriveScope()"
  desc: "Get the requestGoogleDriveScope property: Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false."
  returns:
    description: "the requestGoogleDriveScope value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.trustedCertPath()"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.trustedCertPath()"
  name: "trustedCertPath()"
  nameWithType: "GoogleBigQueryLinkedService.trustedCertPath()"
  summary: "Get the trusted<wbr>Cert<wbr>Path property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL."
  syntax: "public Object trustedCertPath()"
  desc: "Get the trustedCertPath property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
  returns:
    description: "the trustedCertPath value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.useSystemTrustStore()"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.useSystemTrustStore()"
  name: "useSystemTrustStore()"
  nameWithType: "GoogleBigQueryLinkedService.useSystemTrustStore()"
  summary: "Get the use<wbr>System<wbr>Trust<wbr>Store property: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file."
  syntax: "public Object useSystemTrustStore()"
  desc: "Get the useSystemTrustStore property: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
  returns:
    description: "the useSystemTrustStore value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.validate()"
  name: "validate()"
  nameWithType: "GoogleBigQueryLinkedService.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withAdditionalProjects(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withAdditionalProjects(Object additionalProjects)"
  name: "withAdditionalProjects(Object additionalProjects)"
  nameWithType: "GoogleBigQueryLinkedService.withAdditionalProjects(Object additionalProjects)"
  summary: "Set the additional<wbr>Projects property: A comma-separated list of public Big<wbr>Query projects to access."
  parameters:
  - description: "the additionalProjects value to set."
    name: "additionalProjects"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GoogleBigQueryLinkedService withAdditionalProjects(Object additionalProjects)"
  desc: "Set the additionalProjects property: A comma-separated list of public BigQuery projects to access."
  returns:
    description: "the GoogleBigQueryLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService&text=GoogleBigQueryLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "GoogleBigQueryLinkedService.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public GoogleBigQueryLinkedService withAnnotations(List<Object> annotations)"
  desc: "Set the annotations property: List of tags that can be used for describing the linked service."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService&text=GoogleBigQueryLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withAuthenticationType(com.azure.resourcemanager.datafactory.models.GoogleBigQueryAuthenticationType)"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withAuthenticationType(GoogleBigQueryAuthenticationType authenticationType)"
  name: "withAuthenticationType(GoogleBigQueryAuthenticationType authenticationType)"
  nameWithType: "GoogleBigQueryLinkedService.withAuthenticationType(GoogleBigQueryAuthenticationType authenticationType)"
  summary: "Set the authentication<wbr>Type property: The OAuth 2.0 authentication mechanism used for authentication."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryAuthenticationType&text=GoogleBigQueryAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GoogleBigQueryLinkedService withAuthenticationType(GoogleBigQueryAuthenticationType authenticationType)"
  desc: "Set the authenticationType property: The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR."
  returns:
    description: "the GoogleBigQueryLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService&text=GoogleBigQueryLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withClientId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withClientId(Object clientId)"
  name: "withClientId(Object clientId)"
  nameWithType: "GoogleBigQueryLinkedService.withClientId(Object clientId)"
  summary: "Set the client<wbr>Id property: The client id of the google application used to acquire the refresh token."
  parameters:
  - description: "the clientId value to set."
    name: "clientId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GoogleBigQueryLinkedService withClientId(Object clientId)"
  desc: "Set the clientId property: The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string)."
  returns:
    description: "the GoogleBigQueryLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService&text=GoogleBigQueryLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withClientSecret(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withClientSecret(SecretBase clientSecret)"
  name: "withClientSecret(SecretBase clientSecret)"
  nameWithType: "GoogleBigQueryLinkedService.withClientSecret(SecretBase clientSecret)"
  summary: "Set the client<wbr>Secret property: The client secret of the google application used to acquire the refresh token."
  parameters:
  - description: "the clientSecret value to set."
    name: "clientSecret"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GoogleBigQueryLinkedService withClientSecret(SecretBase clientSecret)"
  desc: "Set the clientSecret property: The client secret of the google application used to acquire the refresh token."
  returns:
    description: "the GoogleBigQueryLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService&text=GoogleBigQueryLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  name: "withConnectVia(IntegrationRuntimeReference connectVia)"
  nameWithType: "GoogleBigQueryLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  summary: "Set the connect<wbr>Via property: The integration runtime reference."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  parameters:
  - name: "connectVia"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference?alt=com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference&text=IntegrationRuntimeReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GoogleBigQueryLinkedService withConnectVia(IntegrationRuntimeReference connectVia)"
  desc: "Set the connectVia property: The integration runtime reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService&text=GoogleBigQueryLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "GoogleBigQueryLinkedService.withDescription(String description)"
  summary: "Set the description property: Linked service description."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GoogleBigQueryLinkedService withDescription(String description)"
  desc: "Set the description property: Linked service description."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService&text=GoogleBigQueryLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withEmail(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withEmail(Object email)"
  name: "withEmail(Object email)"
  nameWithType: "GoogleBigQueryLinkedService.withEmail(Object email)"
  summary: "Set the email property: The service account email ID that is used for Service<wbr>Authentication and can only be used on self-hosted IR."
  parameters:
  - description: "the email value to set."
    name: "email"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GoogleBigQueryLinkedService withEmail(Object email)"
  desc: "Set the email property: The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR."
  returns:
    description: "the GoogleBigQueryLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService&text=GoogleBigQueryLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "GoogleBigQueryLinkedService.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GoogleBigQueryLinkedService withEncryptedCredential(Object encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the GoogleBigQueryLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService&text=GoogleBigQueryLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withKeyFilePath(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withKeyFilePath(Object keyFilePath)"
  name: "withKeyFilePath(Object keyFilePath)"
  nameWithType: "GoogleBigQueryLinkedService.withKeyFilePath(Object keyFilePath)"
  summary: "Set the key<wbr>File<wbr>Path property: The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR."
  parameters:
  - description: "the keyFilePath value to set."
    name: "keyFilePath"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GoogleBigQueryLinkedService withKeyFilePath(Object keyFilePath)"
  desc: "Set the keyFilePath property: The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR."
  returns:
    description: "the GoogleBigQueryLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService&text=GoogleBigQueryLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  name: "withParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "GoogleBigQueryLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: Parameters for linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public GoogleBigQueryLinkedService withParameters(Map<String,ParameterSpecification> parameters)"
  desc: "Set the parameters property: Parameters for linked service."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService&text=GoogleBigQueryLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withProject(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withProject(Object project)"
  name: "withProject(Object project)"
  nameWithType: "GoogleBigQueryLinkedService.withProject(Object project)"
  summary: "Set the project property: The default Big<wbr>Query project to query against."
  parameters:
  - description: "the project value to set."
    name: "project"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GoogleBigQueryLinkedService withProject(Object project)"
  desc: "Set the project property: The default BigQuery project to query against."
  returns:
    description: "the GoogleBigQueryLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService&text=GoogleBigQueryLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withRefreshToken(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withRefreshToken(SecretBase refreshToken)"
  name: "withRefreshToken(SecretBase refreshToken)"
  nameWithType: "GoogleBigQueryLinkedService.withRefreshToken(SecretBase refreshToken)"
  summary: "Set the refresh<wbr>Token property: The refresh token obtained from Google for authorizing access to Big<wbr>Query for User<wbr>Authentication."
  parameters:
  - description: "the refreshToken value to set."
    name: "refreshToken"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GoogleBigQueryLinkedService withRefreshToken(SecretBase refreshToken)"
  desc: "Set the refreshToken property: The refresh token obtained from Google for authorizing access to BigQuery for UserAuthentication."
  returns:
    description: "the GoogleBigQueryLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService&text=GoogleBigQueryLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withRequestGoogleDriveScope(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withRequestGoogleDriveScope(Object requestGoogleDriveScope)"
  name: "withRequestGoogleDriveScope(Object requestGoogleDriveScope)"
  nameWithType: "GoogleBigQueryLinkedService.withRequestGoogleDriveScope(Object requestGoogleDriveScope)"
  summary: "Set the request<wbr>Google<wbr>Drive<wbr>Scope property: Whether to request access to Google Drive."
  parameters:
  - description: "the requestGoogleDriveScope value to set."
    name: "requestGoogleDriveScope"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GoogleBigQueryLinkedService withRequestGoogleDriveScope(Object requestGoogleDriveScope)"
  desc: "Set the requestGoogleDriveScope property: Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false."
  returns:
    description: "the GoogleBigQueryLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService&text=GoogleBigQueryLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withTrustedCertPath(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withTrustedCertPath(Object trustedCertPath)"
  name: "withTrustedCertPath(Object trustedCertPath)"
  nameWithType: "GoogleBigQueryLinkedService.withTrustedCertPath(Object trustedCertPath)"
  summary: "Set the trusted<wbr>Cert<wbr>Path property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL."
  parameters:
  - description: "the trustedCertPath value to set."
    name: "trustedCertPath"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GoogleBigQueryLinkedService withTrustedCertPath(Object trustedCertPath)"
  desc: "Set the trustedCertPath property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
  returns:
    description: "the GoogleBigQueryLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService&text=GoogleBigQueryLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withUseSystemTrustStore(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService.withUseSystemTrustStore(Object useSystemTrustStore)"
  name: "withUseSystemTrustStore(Object useSystemTrustStore)"
  nameWithType: "GoogleBigQueryLinkedService.withUseSystemTrustStore(Object useSystemTrustStore)"
  summary: "Set the use<wbr>System<wbr>Trust<wbr>Store property: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file."
  parameters:
  - description: "the useSystemTrustStore value to set."
    name: "useSystemTrustStore"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GoogleBigQueryLinkedService withUseSystemTrustStore(Object useSystemTrustStore)"
  desc: "Set the useSystemTrustStore property: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
  returns:
    description: "the GoogleBigQueryLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService?alt=com.azure.resourcemanager.datafactory.models.GoogleBigQueryLinkedService&text=GoogleBigQueryLinkedService\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Google BigQuery service linked service."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
