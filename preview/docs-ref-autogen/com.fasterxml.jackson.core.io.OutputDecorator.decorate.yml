### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.io.OutputDecorator.decorate*"
fullName: "com.fasterxml.jackson.core.io.OutputDecorator.decorate"
name: "decorate"
nameWithType: "OutputDecorator.decorate"
members:
- uid: "com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream)"
  fullName: "com.fasterxml.jackson.core.io.OutputDecorator.decorate(IOContext ctxt, OutputStream out)"
  name: "decorate(IOContext ctxt, OutputStream out)"
  nameWithType: "OutputDecorator.decorate(IOContext ctxt, OutputStream out)"
  summary: "Method called by <xref uid=\"com.fasterxml.jackson.core.JsonFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.core.JsonFactory\"></xref> instance when creating generator for given <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref>, when this decorator has been registered."
  parameters:
  - description: "IO context in use (provides access to declared encoding)"
    name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.core.io.IOContext?alt=com.fasterxml.jackson.core.io.IOContext&text=IOContext\" data-throw-if-not-resolved=\"False\" />"
  - description: "Original output destination"
    name: "out"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract OutputStream decorate(IOContext ctxt, OutputStream out)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "OutputStream to use; either passed in argument, or something that\n   calls it"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Writer)"
  fullName: "com.fasterxml.jackson.core.io.OutputDecorator.decorate(IOContext ctxt, Writer w)"
  name: "decorate(IOContext ctxt, Writer w)"
  nameWithType: "OutputDecorator.decorate(IOContext ctxt, Writer w)"
  summary: "Method called by <xref uid=\"com.fasterxml.jackson.core.JsonFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.core.JsonFactory\"></xref> instance when creating generator for given <xref uid=\"java.io.Writer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Writer\"></xref>, when this decorator has been registered."
  parameters:
  - description: "IO context in use (provides access to declared encoding)"
    name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.core.io.IOContext?alt=com.fasterxml.jackson.core.io.IOContext&text=IOContext\" data-throw-if-not-resolved=\"False\" />"
  - description: "Original output writer"
    name: "w"
    type: "<xref href=\"java.io.Writer?alt=java.io.Writer&text=Writer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Writer decorate(IOContext ctxt, Writer w)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Writer to use; either passed in argument, or something that calls it"
    type: "<xref href=\"java.io.Writer?alt=java.io.Writer&text=Writer\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.io"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
