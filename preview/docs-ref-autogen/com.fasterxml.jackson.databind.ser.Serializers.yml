### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ser.Serializers
  id: Serializers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser
  children:
  - com.fasterxml.jackson.databind.ser.Serializers.Base
  - com.fasterxml.jackson.databind.ser.Serializers.findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.Serializers.findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.Serializers.findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.Serializers.findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.Serializers.findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.Serializers.findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.Serializers.findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  langs:
  - java
  name: Serializers
  nameWithType: Serializers
  fullName: com.fasterxml.jackson.databind.ser.Serializers
  type: Interface
  package: com.fasterxml.jackson.databind.ser
  summary: Interface that defines API for simple extensions that can provide additional serializers for various types. Access is by a single callback method; instance is to either return a configured <xref uid="com.fasterxml.jackson.databind.JsonSerializer" data-throw-if-not-resolved="false">JsonSerializer</xref> for specified type, or null to indicate that it does not support handling of the type. In latter case, further calls can be made for other providers; in former case returned serializer is used for handling of instances of specified type.
  syntax:
    content: public interface Serializers
- uid: com.fasterxml.jackson.databind.ser.Serializers.findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  id: findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.Serializers
  langs:
  - java
  name: findArraySerializer(SerializationConfig config, ArrayType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  nameWithType: Serializers.findArraySerializer(SerializationConfig config, ArrayType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  fullName: com.fasterxml.jackson.databind.ser.Serializers.findArraySerializer(SerializationConfig config, ArrayType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  overload: com.fasterxml.jackson.databind.ser.Serializers.findArraySerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called by serialization framework first time a serializer is needed for specified array type. Implementation should return a serializer instance if it supports specified type; or null if it does not.
  syntax:
    content: public abstract JsonSerializer<?> findArraySerializer(SerializationConfig config, ArrayType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.type.ArrayType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: elementTypeSerializer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    - id: elementValueSerializer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.ser.Serializers.findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  id: findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.Serializers
  langs:
  - java
  name: findCollectionLikeSerializer(SerializationConfig config, CollectionLikeType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  nameWithType: Serializers.findCollectionLikeSerializer(SerializationConfig config, CollectionLikeType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  fullName: com.fasterxml.jackson.databind.ser.Serializers.findCollectionLikeSerializer(SerializationConfig config, CollectionLikeType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  overload: com.fasterxml.jackson.databind.ser.Serializers.findCollectionLikeSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called by serialization framework first time a serializer is needed for specified "Collection-like" type (type that acts like <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref>, but does not implement it). Implementation should return a serializer instance if it supports specified type; or null if it does not.
  syntax:
    content: public abstract JsonSerializer<?> findCollectionLikeSerializer(SerializationConfig config, CollectionLikeType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.type.CollectionLikeType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: elementTypeSerializer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    - id: elementValueSerializer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.ser.Serializers.findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  id: findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.Serializers
  langs:
  - java
  name: findCollectionSerializer(SerializationConfig config, CollectionType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  nameWithType: Serializers.findCollectionSerializer(SerializationConfig config, CollectionType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  fullName: com.fasterxml.jackson.databind.ser.Serializers.findCollectionSerializer(SerializationConfig config, CollectionType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  overload: com.fasterxml.jackson.databind.ser.Serializers.findCollectionSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called by serialization framework first time a serializer is needed for specified <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> type. Implementation should return a serializer instance if it supports specified type; or null if it does not.
  syntax:
    content: public abstract JsonSerializer<?> findCollectionSerializer(SerializationConfig config, CollectionType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.type.CollectionType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: elementTypeSerializer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    - id: elementValueSerializer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.ser.Serializers.findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  id: findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.Serializers
  langs:
  - java
  name: findMapLikeSerializer(SerializationConfig config, MapLikeType type, BeanDescription beanDesc, JsonSerializer<Object> keySerializer, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  nameWithType: Serializers.findMapLikeSerializer(SerializationConfig config, MapLikeType type, BeanDescription beanDesc, JsonSerializer<Object> keySerializer, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  fullName: com.fasterxml.jackson.databind.ser.Serializers.findMapLikeSerializer(SerializationConfig config, MapLikeType type, BeanDescription beanDesc, JsonSerializer<Object> keySerializer, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  overload: com.fasterxml.jackson.databind.ser.Serializers.findMapLikeSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called by serialization framework first time a serializer is needed for specified "Map-like" type (type that acts like <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>, but does not implement it). Implementation should return a serializer instance if it supports specified type; or null if it does not.
  syntax:
    content: public abstract JsonSerializer<?> findMapLikeSerializer(SerializationConfig config, MapLikeType type, BeanDescription beanDesc, JsonSerializer<Object> keySerializer, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.type.MapLikeType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: keySerializer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    - id: elementTypeSerializer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    - id: elementValueSerializer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.ser.Serializers.findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  id: findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.Serializers
  langs:
  - java
  name: findMapSerializer(SerializationConfig config, MapType type, BeanDescription beanDesc, JsonSerializer<Object> keySerializer, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  nameWithType: Serializers.findMapSerializer(SerializationConfig config, MapType type, BeanDescription beanDesc, JsonSerializer<Object> keySerializer, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  fullName: com.fasterxml.jackson.databind.ser.Serializers.findMapSerializer(SerializationConfig config, MapType type, BeanDescription beanDesc, JsonSerializer<Object> keySerializer, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  overload: com.fasterxml.jackson.databind.ser.Serializers.findMapSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called by serialization framework first time a serializer is needed for specified <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> type. Implementation should return a serializer instance if it supports specified type; or null if it does not.
  syntax:
    content: public abstract JsonSerializer<?> findMapSerializer(SerializationConfig config, MapType type, BeanDescription beanDesc, JsonSerializer<Object> keySerializer, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.type.MapType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: keySerializer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    - id: elementTypeSerializer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    - id: elementValueSerializer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.ser.Serializers.findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  id: findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.Serializers
  langs:
  - java
  name: findReferenceSerializer(SerializationConfig config, ReferenceType type, BeanDescription beanDesc, TypeSerializer contentTypeSerializer, JsonSerializer<Object> contentValueSerializer)
  nameWithType: Serializers.findReferenceSerializer(SerializationConfig config, ReferenceType type, BeanDescription beanDesc, TypeSerializer contentTypeSerializer, JsonSerializer<Object> contentValueSerializer)
  fullName: com.fasterxml.jackson.databind.ser.Serializers.findReferenceSerializer(SerializationConfig config, ReferenceType type, BeanDescription beanDesc, TypeSerializer contentTypeSerializer, JsonSerializer<Object> contentValueSerializer)
  overload: com.fasterxml.jackson.databind.ser.Serializers.findReferenceSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called by serialization framework first time a serializer is needed for given <xref uid="com.fasterxml.jackson.databind.type.ReferenceType" data-throw-if-not-resolved="false">ReferenceType</xref>
  syntax:
    content: public abstract JsonSerializer<?> findReferenceSerializer(SerializationConfig config, ReferenceType type, BeanDescription beanDesc, TypeSerializer contentTypeSerializer, JsonSerializer<Object> contentValueSerializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.type.ReferenceType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: contentTypeSerializer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    - id: contentValueSerializer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.ser.Serializers.findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  id: findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.Serializers
  langs:
  - java
  name: findSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc)
  nameWithType: Serializers.findSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.ser.Serializers.findSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.ser.Serializers.findSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called by serialization framework first time a serializer is needed for specified type, which is not of a container or reference type (for which other methods are called).
  syntax:
    content: public abstract JsonSerializer<?> findSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
      description: Serialization configuration in use
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
      description: Fully resolved type of instances to serialize
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
      description: Additional information about type
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
      description: >-
        Configured serializer to use for the type; or null if implementation
            does not recognize or support type
references:
- uid: com.fasterxml.jackson.databind.SerializationConfig
  name: SerializationConfig
  nameWithType: SerializationConfig
  fullName: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.BeanDescription
  name: BeanDescription
  nameWithType: BeanDescription
  fullName: com.fasterxml.jackson.databind.BeanDescription
- uid: com.fasterxml.jackson.databind.JsonSerializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.Serializers.findSerializer*
  name: findSerializer
  nameWithType: Serializers.findSerializer
  fullName: com.fasterxml.jackson.databind.ser.Serializers.findSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.type.ReferenceType
  name: ReferenceType
  nameWithType: ReferenceType
  fullName: com.fasterxml.jackson.databind.type.ReferenceType
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.Serializers.findReferenceSerializer*
  name: findReferenceSerializer
  nameWithType: Serializers.findReferenceSerializer
  fullName: com.fasterxml.jackson.databind.ser.Serializers.findReferenceSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.type.ArrayType
  name: ArrayType
  nameWithType: ArrayType
  fullName: com.fasterxml.jackson.databind.type.ArrayType
- uid: com.fasterxml.jackson.databind.ser.Serializers.findArraySerializer*
  name: findArraySerializer
  nameWithType: Serializers.findArraySerializer
  fullName: com.fasterxml.jackson.databind.ser.Serializers.findArraySerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.type.CollectionType
  name: CollectionType
  nameWithType: CollectionType
  fullName: com.fasterxml.jackson.databind.type.CollectionType
- uid: com.fasterxml.jackson.databind.ser.Serializers.findCollectionSerializer*
  name: findCollectionSerializer
  nameWithType: Serializers.findCollectionSerializer
  fullName: com.fasterxml.jackson.databind.ser.Serializers.findCollectionSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.type.CollectionLikeType
  name: CollectionLikeType
  nameWithType: CollectionLikeType
  fullName: com.fasterxml.jackson.databind.type.CollectionLikeType
- uid: com.fasterxml.jackson.databind.ser.Serializers.findCollectionLikeSerializer*
  name: findCollectionLikeSerializer
  nameWithType: Serializers.findCollectionLikeSerializer
  fullName: com.fasterxml.jackson.databind.ser.Serializers.findCollectionLikeSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.type.MapType
  name: MapType
  nameWithType: MapType
  fullName: com.fasterxml.jackson.databind.type.MapType
- uid: com.fasterxml.jackson.databind.ser.Serializers.findMapSerializer*
  name: findMapSerializer
  nameWithType: Serializers.findMapSerializer
  fullName: com.fasterxml.jackson.databind.ser.Serializers.findMapSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.type.MapLikeType
  name: MapLikeType
  nameWithType: MapLikeType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType
- uid: com.fasterxml.jackson.databind.ser.Serializers.findMapLikeSerializer*
  name: findMapLikeSerializer
  nameWithType: Serializers.findMapLikeSerializer
  fullName: com.fasterxml.jackson.databind.ser.Serializers.findMapLikeSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.Serializers.Base
  name: Serializers.Base
  nameWithType: Serializers.Base
  fullName: com.fasterxml.jackson.databind.ser.Serializers.Base
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.lang.Object
  name: Object
  nameWithType: Object
  fullName: java.lang.Object
