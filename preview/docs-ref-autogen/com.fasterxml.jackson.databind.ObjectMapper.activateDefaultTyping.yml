### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ObjectMapper.activateDefaultTyping*"
fullName: "com.fasterxml.jackson.databind.ObjectMapper.activateDefaultTyping"
name: "activateDefaultTyping"
nameWithType: "ObjectMapper.activateDefaultTyping"
members:
- uid: "com.fasterxml.jackson.databind.ObjectMapper.activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.activateDefaultTyping(PolymorphicTypeValidator ptv)"
  name: "activateDefaultTyping(PolymorphicTypeValidator ptv)"
  nameWithType: "ObjectMapper.activateDefaultTyping(PolymorphicTypeValidator ptv)"
  summary: "Convenience method that is equivalent to calling\n\n```java\nactivateDefaultTyping(ptv, DefaultTyping.OBJECT_AND_NON_CONCRETE);\n```\n\nNOTE: choice of <xref uid=\"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PolymorphicTypeValidator\"></xref> to pass is critical for security as allowing all subtypes can be risky for untrusted content."
  parameters:
  - description: "Validator used to verify that actual subtypes to deserialize are valid against\n    whatever criteria validator uses: important in case where untrusted content is deserialized."
    name: "ptv"
    type: "<xref href=\"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator?alt=com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator&text=PolymorphicTypeValidator\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ObjectMapper activateDefaultTyping(PolymorphicTypeValidator ptv)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.ObjectMapper?alt=com.fasterxml.jackson.databind.ObjectMapper&text=ObjectMapper\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectMapper.activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.activateDefaultTyping(PolymorphicTypeValidator ptv, ObjectMapper.DefaultTyping applicability)"
  name: "activateDefaultTyping(PolymorphicTypeValidator ptv, ObjectMapper.DefaultTyping applicability)"
  nameWithType: "ObjectMapper.activateDefaultTyping(PolymorphicTypeValidator ptv, ObjectMapper.DefaultTyping applicability)"
  summary: "Convenience method that is equivalent to calling\n\n```java\nactivateDefaultTyping(ptv, dti, JsonTypeInfo.As.WRAPPER_ARRAY);\n```\n\nNOTE: choice of <xref uid=\"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PolymorphicTypeValidator\"></xref> to pass is critical for security as allowing all subtypes can be risky for untrusted content."
  parameters:
  - description: "Validator used to verify that actual subtypes to deserialize are valid against\n    whatever criteria validator uses: important in case where untrusted content is deserialized."
    name: "ptv"
    type: "<xref href=\"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator?alt=com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator&text=PolymorphicTypeValidator\" data-throw-if-not-resolved=\"False\" />"
  - description: "Defines kinds of types for which additional type information\n    is added; see <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DefaultTyping\"></xref> for more information."
    name: "applicability"
    type: "<xref href=\"com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping?alt=com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping&text=DefaultTyping\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ObjectMapper activateDefaultTyping(PolymorphicTypeValidator ptv, ObjectMapper.DefaultTyping applicability)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.ObjectMapper?alt=com.fasterxml.jackson.databind.ObjectMapper&text=ObjectMapper\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectMapper.activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,com.fasterxml.jackson.annotation.JsonTypeInfo.As)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.activateDefaultTyping(PolymorphicTypeValidator ptv, ObjectMapper.DefaultTyping applicability, JsonTypeInfo.As includeAs)"
  name: "activateDefaultTyping(PolymorphicTypeValidator ptv, ObjectMapper.DefaultTyping applicability, JsonTypeInfo.As includeAs)"
  nameWithType: "ObjectMapper.activateDefaultTyping(PolymorphicTypeValidator ptv, ObjectMapper.DefaultTyping applicability, JsonTypeInfo.As includeAs)"
  summary: "Method for enabling automatic inclusion of type information (\"Default Typing\"), needed for proper deserialization of polymorphic types (unless types have been annotated with <xref uid=\"com.fasterxml.jackson.annotation.JsonTypeInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.annotation.JsonTypeInfo\"></xref>).\n\nNOTE: use of `JsonTypeInfo.As#EXTERNAL_PROPERTY` **NOT SUPPORTED**; and attempts of do so will throw an <xref uid=\"java.lang.IllegalArgumentException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IllegalArgumentException\"></xref> to make this limitation explicit.\n\nNOTE: choice of <xref uid=\"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PolymorphicTypeValidator\"></xref> to pass is critical for security as allowing all subtypes can be risky for untrusted content."
  parameters:
  - description: "Validator used to verify that actual subtypes to deserialize are valid against\n    whatever criteria validator uses: important in case where untrusted content is deserialized."
    name: "ptv"
    type: "<xref href=\"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator?alt=com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator&text=PolymorphicTypeValidator\" data-throw-if-not-resolved=\"False\" />"
  - description: "Defines kinds of types for which additional type information\n    is added; see <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DefaultTyping\"></xref> for more information."
    name: "applicability"
    type: "<xref href=\"com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping?alt=com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping&text=DefaultTyping\" data-throw-if-not-resolved=\"False\" />"
  - name: "includeAs"
    type: "<xref href=\"com.fasterxml.jackson.annotation.JsonTypeInfo.As?alt=com.fasterxml.jackson.annotation.JsonTypeInfo.As&text=As\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ObjectMapper activateDefaultTyping(PolymorphicTypeValidator ptv, ObjectMapper.DefaultTyping applicability, JsonTypeInfo.As includeAs)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.ObjectMapper?alt=com.fasterxml.jackson.databind.ObjectMapper&text=ObjectMapper\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
