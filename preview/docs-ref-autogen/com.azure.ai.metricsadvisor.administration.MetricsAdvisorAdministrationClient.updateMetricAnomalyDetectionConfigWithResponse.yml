### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.updateMetricAnomalyDetectionConfigWithResponse*"
fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.updateMetricAnomalyDetectionConfigWithResponse"
name: "updateMetricAnomalyDetectionConfigWithResponse"
nameWithType: "MetricsAdvisorAdministrationClient.updateMetricAnomalyDetectionConfigWithResponse"
members:
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.updateMetricAnomalyDetectionConfigWithResponse(com.azure.ai.metricsadvisor.models.AnomalyDetectionConfiguration,com.azure.core.util.Context)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.updateMetricAnomalyDetectionConfigWithResponse(AnomalyDetectionConfiguration detectionConfiguration, Context context)"
  name: "updateMetricAnomalyDetectionConfigWithResponse(AnomalyDetectionConfiguration detectionConfiguration, Context context)"
  nameWithType: "MetricsAdvisorAdministrationClient.updateMetricAnomalyDetectionConfigWithResponse(AnomalyDetectionConfiguration detectionConfiguration, Context context)"
  summary: "Update a configuration to detect anomalies in the time series of a metric.\n\n**Code sample**\n\n```java\nfinal String detectionConfigId = \"7b8069a1-1564-46da-9f50-b5d0dd9129ab\";\n Response<AnomalyDetectionConfiguration> getResponse = metricsAdvisorAdminClient\n     .getMetricAnomalyDetectionConfigWithResponse(detectionConfigId, Context.NONE);\n AnomalyDetectionConfiguration detectionConfig = getResponse.getValue();\n detectionConfig.setName(\"updated config name\");\n detectionConfig.setDescription(\"updated with more detection conditions\");\n DimensionKey seriesGroupKey = new DimensionKey()\n     .put(\"city\", \"Seoul\");\n detectionConfig.addSeriesGroupDetectionCondition(\n     new MetricSeriesGroupDetectionCondition(seriesGroupKey)\n         .setSmartDetectionCondition(new SmartDetectionCondition()\n             .setSensitivity(10.0)\n             .setAnomalyDetectorDirection(AnomalyDetectorDirection.UP)\n             .setSuppressCondition(new SuppressCondition().setMinNumber(2).setMinRatio(2))));\n \n Response<AnomalyDetectionConfiguration> updateResponse = metricsAdvisorAdminClient\n     .updateMetricAnomalyDetectionConfigWithResponse(detectionConfig, Context.NONE);\n \n System.out.printf(\"Response StatusCode: %s%n\", updateResponse.getStatusCode());\n AnomalyDetectionConfiguration updatedDetectionConfig = updateResponse.getValue();\n System.out.printf(\"Detection config Id: %s%n\", updatedDetectionConfig.getId());\n System.out.printf(\"Name: %s%n\", updatedDetectionConfig.getName());\n System.out.printf(\"Description: %s%n\", updatedDetectionConfig.getDescription());\n System.out.printf(\"MetricId: %s%n\", updatedDetectionConfig.getMetricId());\n```"
  parameters:
  - description: "The anomaly detection configuration."
    name: "detectionConfiguration"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.AnomalyDetectionConfiguration?alt=com.azure.ai.metricsadvisor.models.AnomalyDetectionConfiguration&text=AnomalyDetectionConfiguration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<AnomalyDetectionConfiguration> updateMetricAnomalyDetectionConfigWithResponse(AnomalyDetectionConfiguration detectionConfiguration, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> containing the updated <xref uid=\"com.azure.ai.metricsadvisor.models.AnomalyDetectionConfiguration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnomalyDetectionConfiguration\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.AnomalyDetectionConfiguration?alt=com.azure.ai.metricsadvisor.models.AnomalyDetectionConfiguration&text=AnomalyDetectionConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
