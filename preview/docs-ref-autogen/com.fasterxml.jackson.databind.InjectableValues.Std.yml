### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.InjectableValues.Std
  id: Std
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind
  children:
  - com.fasterxml.jackson.databind.InjectableValues.Std.Std()
  - com.fasterxml.jackson.databind.InjectableValues.Std.Std(java.util.Map<java.lang.String,java.lang.Object>)
  - com.fasterxml.jackson.databind.InjectableValues.Std._values
  - com.fasterxml.jackson.databind.InjectableValues.Std.addValue(java.lang.Class<?>,java.lang.Object)
  - com.fasterxml.jackson.databind.InjectableValues.Std.addValue(java.lang.String,java.lang.Object)
  - com.fasterxml.jackson.databind.InjectableValues.Std.findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object)
  langs:
  - java
  name: InjectableValues.Std
  nameWithType: InjectableValues.Std
  fullName: com.fasterxml.jackson.databind.InjectableValues.Std
  type: Class
  package: com.fasterxml.jackson.databind
  summary: Simple standard implementation which uses a simple Map to store values to inject, identified by simple String keys.
  syntax:
    content: public static class InjectableValues.Std extends InjectableValues implements Serializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.InjectableValues
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.InjectableValues.findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.InjectableValues.Std.Std()
  id: Std()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.InjectableValues.Std
  langs:
  - java
  name: Std()
  nameWithType: InjectableValues.Std.Std()
  fullName: com.fasterxml.jackson.databind.InjectableValues.Std.Std()
  overload: com.fasterxml.jackson.databind.InjectableValues.Std.Std*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: public Std()
- uid: com.fasterxml.jackson.databind.InjectableValues.Std.Std(java.util.Map<java.lang.String,java.lang.Object>)
  id: Std(java.util.Map<java.lang.String,java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.InjectableValues.Std
  langs:
  - java
  name: Std(Map<String,Object> values)
  nameWithType: InjectableValues.Std.Std(Map<String,Object> values)
  fullName: com.fasterxml.jackson.databind.InjectableValues.Std.Std(Map<String,Object> values)
  overload: com.fasterxml.jackson.databind.InjectableValues.Std.Std*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: public Std(Map<String,Object> values)
    parameters:
    - id: values
      type: java.util.Map<java.lang.String,java.lang.Object>
- uid: com.fasterxml.jackson.databind.InjectableValues.Std._values
  id: _values
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.InjectableValues.Std
  langs:
  - java
  name: _values
  nameWithType: InjectableValues.Std._values
  fullName: com.fasterxml.jackson.databind.InjectableValues.Std._values
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final Map<String,Object> _values
    return:
      type: java.util.Map<java.lang.String,java.lang.Object>
- uid: com.fasterxml.jackson.databind.InjectableValues.Std.addValue(java.lang.Class<?>,java.lang.Object)
  id: addValue(java.lang.Class<?>,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.InjectableValues.Std
  langs:
  - java
  name: addValue(Class<?> classKey, Object value)
  nameWithType: InjectableValues.Std.addValue(Class<?> classKey, Object value)
  fullName: com.fasterxml.jackson.databind.InjectableValues.Std.addValue(Class<?> classKey, Object value)
  overload: com.fasterxml.jackson.databind.InjectableValues.Std.addValue*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public InjectableValues.Std addValue(Class<?> classKey, Object value)
    parameters:
    - id: classKey
      type: java.lang.Class<?>
    - id: value
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.InjectableValues.Std
- uid: com.fasterxml.jackson.databind.InjectableValues.Std.addValue(java.lang.String,java.lang.Object)
  id: addValue(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.InjectableValues.Std
  langs:
  - java
  name: addValue(String key, Object value)
  nameWithType: InjectableValues.Std.addValue(String key, Object value)
  fullName: com.fasterxml.jackson.databind.InjectableValues.Std.addValue(String key, Object value)
  overload: com.fasterxml.jackson.databind.InjectableValues.Std.addValue*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public InjectableValues.Std addValue(String key, Object value)
    parameters:
    - id: key
      type: java.lang.String
    - id: value
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.InjectableValues.Std
- uid: com.fasterxml.jackson.databind.InjectableValues.Std.findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object)
  id: findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.InjectableValues.Std
  langs:
  - java
  name: findInjectableValue(Object valueId, DeserializationContext ctxt, BeanProperty forProperty, Object beanInstance)
  nameWithType: InjectableValues.Std.findInjectableValue(Object valueId, DeserializationContext ctxt, BeanProperty forProperty, Object beanInstance)
  fullName: com.fasterxml.jackson.databind.InjectableValues.Std.findInjectableValue(Object valueId, DeserializationContext ctxt, BeanProperty forProperty, Object beanInstance)
  overload: com.fasterxml.jackson.databind.InjectableValues.Std.findInjectableValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method called to find value identified by id `valueId` to inject as value of specified property during deserialization, passing POJO instance in which value will be injected if it is available (will be available when injected via field or setter; not available when injected via constructor or factory method argument).
  syntax:
    content: public Object findInjectableValue(Object valueId, DeserializationContext ctxt, BeanProperty forProperty, Object beanInstance)
    parameters:
    - id: valueId
      type: java.lang.Object
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: forProperty
      type: com.fasterxml.jackson.databind.BeanProperty
    - id: beanInstance
      type: java.lang.Object
    return:
      type: java.lang.Object
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
references:
- uid: com.fasterxml.jackson.databind.InjectableValues.Std.Std*
  name: Std
  nameWithType: InjectableValues.Std.Std
  fullName: com.fasterxml.jackson.databind.InjectableValues.Std.Std
  package: com.fasterxml.jackson.databind
- uid: java.util.Map<java.lang.String,java.lang.Object>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.InjectableValues.Std.addValue*
  name: addValue
  nameWithType: InjectableValues.Std.addValue
  fullName: com.fasterxml.jackson.databind.InjectableValues.Std.addValue
  package: com.fasterxml.jackson.databind
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: com.fasterxml.jackson.databind.BeanProperty
  name: BeanProperty
  nameWithType: BeanProperty
  fullName: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.InjectableValues.Std.findInjectableValue*
  name: findInjectableValue
  nameWithType: InjectableValues.Std.findInjectableValue
  fullName: com.fasterxml.jackson.databind.InjectableValues.Std.findInjectableValue
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.InjectableValues
  name: InjectableValues
  nameWithType: InjectableValues
  fullName: com.fasterxml.jackson.databind.InjectableValues
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.InjectableValues.findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object)
  name: InjectableValues.findInjectableValue(Object,DeserializationContext,BeanProperty,Object)
  nameWithType: InjectableValues.findInjectableValue(Object,DeserializationContext,BeanProperty,Object)
  fullName: com.fasterxml.jackson.databind.InjectableValues.findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.String,java.lang.Object
  name: String,Object
  nameWithType: String,Object
  fullName: java.lang.String,java.lang.Object
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
