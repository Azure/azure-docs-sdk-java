### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.models.Users"
fullName: "com.azure.resourcemanager.apimanagement.models.Users"
name: "Users"
nameWithType: "Users"
summary: "Resource collection API of Users."
syntax: "public interface Users"
methods:
- uid: "com.azure.resourcemanager.apimanagement.models.Users.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Users.define(String name)"
  name: "define(String name)"
  nameWithType: "Users.define(String name)"
  summary: "Begins definition for a new User<wbr>Contract resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract UserContract.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new UserContract resource."
  returns:
    description: "the first stage of the new UserContract definition."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.UserContract.DefinitionStages.Blank?alt=com.azure.resourcemanager.apimanagement.models.UserContract.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.Users.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Users.delete(String resourceGroupName, String serviceName, String userId, String ifMatch)"
  name: "delete(String resourceGroupName, String serviceName, String userId, String ifMatch)"
  nameWithType: "Users.delete(String resourceGroupName, String serviceName, String userId, String ifMatch)"
  summary: "Deletes specific user."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "User identifier. Must be unique in the current API Management service instance."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET\n     request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String serviceName, String userId, String ifMatch)"
  desc: "Deletes specific user."
- uid: "com.azure.resourcemanager.apimanagement.models.Users.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Users.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Users.deleteById(String id)"
  summary: "Deletes specific user."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Deletes specific user."
- uid: "com.azure.resourcemanager.apimanagement.models.Users.deleteByIdWithResponse(java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Boolean,com.azure.resourcemanager.apimanagement.models.AppType,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Users.deleteByIdWithResponse(String id, String ifMatch, Boolean deleteSubscriptions, Boolean notify, AppType appType, Context context)"
  name: "deleteByIdWithResponse(String id, String ifMatch, Boolean deleteSubscriptions, Boolean notify, AppType appType, Context context)"
  nameWithType: "Users.deleteByIdWithResponse(String id, String ifMatch, Boolean deleteSubscriptions, Boolean notify, AppType appType, Context context)"
  summary: "Deletes specific user."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET\n     request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether to delete user's subscription or not."
    name: "deleteSubscriptions"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Send an Account Closed Email notification to the User."
    name: "notify"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Determines the type of application which send the create user request. Default is legacy publisher\n     portal."
    name: "appType"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.AppType?alt=com.azure.resourcemanager.apimanagement.models.AppType&text=AppType\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByIdWithResponse(String id, String ifMatch, Boolean deleteSubscriptions, Boolean notify, AppType appType, Context context)"
  desc: "Deletes specific user."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Users.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Boolean,com.azure.resourcemanager.apimanagement.models.AppType,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Users.deleteWithResponse(String resourceGroupName, String serviceName, String userId, String ifMatch, Boolean deleteSubscriptions, Boolean notify, AppType appType, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String serviceName, String userId, String ifMatch, Boolean deleteSubscriptions, Boolean notify, AppType appType, Context context)"
  nameWithType: "Users.deleteWithResponse(String resourceGroupName, String serviceName, String userId, String ifMatch, Boolean deleteSubscriptions, Boolean notify, AppType appType, Context context)"
  summary: "Deletes specific user."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "User identifier. Must be unique in the current API Management service instance."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET\n     request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether to delete user's subscription or not."
    name: "deleteSubscriptions"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Send an Account Closed Email notification to the User."
    name: "notify"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Determines the type of application which send the create user request. Default is legacy publisher\n     portal."
    name: "appType"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.AppType?alt=com.azure.resourcemanager.apimanagement.models.AppType&text=AppType\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String serviceName, String userId, String ifMatch, Boolean deleteSubscriptions, Boolean notify, AppType appType, Context context)"
  desc: "Deletes specific user."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Users.generateSsoUrl(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Users.generateSsoUrl(String resourceGroupName, String serviceName, String userId)"
  name: "generateSsoUrl(String resourceGroupName, String serviceName, String userId)"
  nameWithType: "Users.generateSsoUrl(String resourceGroupName, String serviceName, String userId)"
  summary: "Retrieves a redirection URL containing an authentication token for signing a given user into the developer portal."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "User identifier. Must be unique in the current API Management service instance."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract GenerateSsoUrlResult generateSsoUrl(String resourceGroupName, String serviceName, String userId)"
  desc: "Retrieves a redirection URL containing an authentication token for signing a given user into the developer portal."
  returns:
    description: "generate SSO Url operations response details."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.GenerateSsoUrlResult?alt=com.azure.resourcemanager.apimanagement.models.GenerateSsoUrlResult&text=GenerateSsoUrlResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.Users.generateSsoUrlWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Users.generateSsoUrlWithResponse(String resourceGroupName, String serviceName, String userId, Context context)"
  name: "generateSsoUrlWithResponse(String resourceGroupName, String serviceName, String userId, Context context)"
  nameWithType: "Users.generateSsoUrlWithResponse(String resourceGroupName, String serviceName, String userId, Context context)"
  summary: "Retrieves a redirection URL containing an authentication token for signing a given user into the developer portal."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "User identifier. Must be unique in the current API Management service instance."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<GenerateSsoUrlResult> generateSsoUrlWithResponse(String resourceGroupName, String serviceName, String userId, Context context)"
  desc: "Retrieves a redirection URL containing an authentication token for signing a given user into the developer portal."
  returns:
    description: "generate SSO Url operations response details along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.models.GenerateSsoUrlResult?alt=com.azure.resourcemanager.apimanagement.models.GenerateSsoUrlResult&text=GenerateSsoUrlResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Users.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Users.get(String resourceGroupName, String serviceName, String userId)"
  name: "get(String resourceGroupName, String serviceName, String userId)"
  nameWithType: "Users.get(String resourceGroupName, String serviceName, String userId)"
  summary: "Gets the details of the user specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "User identifier. Must be unique in the current API Management service instance."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract UserContract get(String resourceGroupName, String serviceName, String userId)"
  desc: "Gets the details of the user specified by its identifier."
  returns:
    description: "the details of the user specified by its identifier."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.UserContract?alt=com.azure.resourcemanager.apimanagement.models.UserContract&text=UserContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.Users.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Users.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Users.getById(String id)"
  summary: "Gets the details of the user specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract UserContract getById(String id)"
  desc: "Gets the details of the user specified by its identifier."
  returns:
    description: "the details of the user specified by its identifier."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.UserContract?alt=com.azure.resourcemanager.apimanagement.models.UserContract&text=UserContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.Users.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Users.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Users.getByIdWithResponse(String id, Context context)"
  summary: "Gets the details of the user specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<UserContract> getByIdWithResponse(String id, Context context)"
  desc: "Gets the details of the user specified by its identifier."
  returns:
    description: "the details of the user specified by its identifier."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.models.UserContract?alt=com.azure.resourcemanager.apimanagement.models.UserContract&text=UserContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Users.getEntityTag(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Users.getEntityTag(String resourceGroupName, String serviceName, String userId)"
  name: "getEntityTag(String resourceGroupName, String serviceName, String userId)"
  nameWithType: "Users.getEntityTag(String resourceGroupName, String serviceName, String userId)"
  summary: "Gets the entity state (Etag) version of the user specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "User identifier. Must be unique in the current API Management service instance."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void getEntityTag(String resourceGroupName, String serviceName, String userId)"
  desc: "Gets the entity state (Etag) version of the user specified by its identifier."
- uid: "com.azure.resourcemanager.apimanagement.models.Users.getEntityTagWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Users.getEntityTagWithResponse(String resourceGroupName, String serviceName, String userId, Context context)"
  name: "getEntityTagWithResponse(String resourceGroupName, String serviceName, String userId, Context context)"
  nameWithType: "Users.getEntityTagWithResponse(String resourceGroupName, String serviceName, String userId, Context context)"
  summary: "Gets the entity state (Etag) version of the user specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "User identifier. Must be unique in the current API Management service instance."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract UsersGetEntityTagResponse getEntityTagWithResponse(String resourceGroupName, String serviceName, String userId, Context context)"
  desc: "Gets the entity state (Etag) version of the user specified by its identifier."
  returns:
    description: "the entity state (Etag) version of the user specified by its identifier."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.UsersGetEntityTagResponse?alt=com.azure.resourcemanager.apimanagement.models.UsersGetEntityTagResponse&text=UsersGetEntityTagResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.Users.getSharedAccessToken(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.models.UserTokenParameters)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Users.getSharedAccessToken(String resourceGroupName, String serviceName, String userId, UserTokenParameters parameters)"
  name: "getSharedAccessToken(String resourceGroupName, String serviceName, String userId, UserTokenParameters parameters)"
  nameWithType: "Users.getSharedAccessToken(String resourceGroupName, String serviceName, String userId, UserTokenParameters parameters)"
  summary: "Gets the Shared Access Authorization Token for the User."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "User identifier. Must be unique in the current API Management service instance."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Create Authorization Token parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.UserTokenParameters?alt=com.azure.resourcemanager.apimanagement.models.UserTokenParameters&text=UserTokenParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract UserTokenResult getSharedAccessToken(String resourceGroupName, String serviceName, String userId, UserTokenParameters parameters)"
  desc: "Gets the Shared Access Authorization Token for the User."
  returns:
    description: "the Shared Access Authorization Token for the User."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.UserTokenResult?alt=com.azure.resourcemanager.apimanagement.models.UserTokenResult&text=UserTokenResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.Users.getSharedAccessTokenWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.models.UserTokenParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Users.getSharedAccessTokenWithResponse(String resourceGroupName, String serviceName, String userId, UserTokenParameters parameters, Context context)"
  name: "getSharedAccessTokenWithResponse(String resourceGroupName, String serviceName, String userId, UserTokenParameters parameters, Context context)"
  nameWithType: "Users.getSharedAccessTokenWithResponse(String resourceGroupName, String serviceName, String userId, UserTokenParameters parameters, Context context)"
  summary: "Gets the Shared Access Authorization Token for the User."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "User identifier. Must be unique in the current API Management service instance."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Create Authorization Token parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.UserTokenParameters?alt=com.azure.resourcemanager.apimanagement.models.UserTokenParameters&text=UserTokenParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<UserTokenResult> getSharedAccessTokenWithResponse(String resourceGroupName, String serviceName, String userId, UserTokenParameters parameters, Context context)"
  desc: "Gets the Shared Access Authorization Token for the User."
  returns:
    description: "the Shared Access Authorization Token for the User along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.models.UserTokenResult?alt=com.azure.resourcemanager.apimanagement.models.UserTokenResult&text=UserTokenResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Users.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Users.getWithResponse(String resourceGroupName, String serviceName, String userId, Context context)"
  name: "getWithResponse(String resourceGroupName, String serviceName, String userId, Context context)"
  nameWithType: "Users.getWithResponse(String resourceGroupName, String serviceName, String userId, Context context)"
  summary: "Gets the details of the user specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "User identifier. Must be unique in the current API Management service instance."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<UserContract> getWithResponse(String resourceGroupName, String serviceName, String userId, Context context)"
  desc: "Gets the details of the user specified by its identifier."
  returns:
    description: "the details of the user specified by its identifier."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.models.UserContract?alt=com.azure.resourcemanager.apimanagement.models.UserContract&text=UserContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Users.listByService(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Users.listByService(String resourceGroupName, String serviceName)"
  name: "listByService(String resourceGroupName, String serviceName)"
  nameWithType: "Users.listByService(String resourceGroupName, String serviceName)"
  summary: "Lists a collection of registered users in the specified service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<UserContract> listByService(String resourceGroupName, String serviceName)"
  desc: "Lists a collection of registered users in the specified service instance."
  returns:
    description: "paged Users list representation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.models.UserContract?alt=com.azure.resourcemanager.apimanagement.models.UserContract&text=UserContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Users.listByService(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Boolean,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Users.listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Boolean expandGroups, Context context)"
  name: "listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Boolean expandGroups, Context context)"
  nameWithType: "Users.listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Boolean expandGroups, Context context)"
  summary: "Lists a collection of registered users in the specified service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "| Field | Usage | Supported operators | Supported functions\n     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq,\n     ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| firstName | filter | ge, le, eq, ne,\n     gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| lastName | filter | ge, le, eq, ne, gt, lt\n     | substringof, contains, startswith, endswith |&lt;/br&gt;| email | filter | ge, le, eq, ne, gt, lt |\n     substringof, contains, startswith, endswith |&lt;/br&gt;| state | filter | eq | |&lt;/br&gt;|\n     registrationDate | filter | ge, le, eq, ne, gt, lt | |&lt;/br&gt;| note | filter | ge, le, eq, ne, gt, lt |\n     substringof, contains, startswith, endswith |&lt;/br&gt;| groups | expand | | |&lt;/br&gt;."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Number of records to skip."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Detailed Group in response."
    name: "expandGroups"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<UserContract> listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Boolean expandGroups, Context context)"
  desc: "Lists a collection of registered users in the specified service instance."
  returns:
    description: "paged Users list representation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.models.UserContract?alt=com.azure.resourcemanager.apimanagement.models.UserContract&text=UserContract\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Users."
metadata: {}
package: "com.azure.resourcemanager.apimanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.3
