### YamlMime:JavaType
uid: "com.azure.resourcemanager.signalr.models.SignalRResource.UpdateStages.WithServerless"
fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.UpdateStages.WithServerless"
name: "SignalRResource.UpdateStages.WithServerless"
nameWithType: "SignalRResource.UpdateStages.WithServerless"
summary: "The stage of the Signal<wbr>RResource update allowing to specify serverless."
syntax: "public static interface **SignalRResource.UpdateStages.WithServerless**"
methods:
- uid: "com.azure.resourcemanager.signalr.models.SignalRResource.UpdateStages.WithServerless.withServerless(com.azure.resourcemanager.signalr.models.ServerlessSettings)"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRResource.UpdateStages.WithServerless.withServerless(ServerlessSettings serverless)"
  name: "withServerless(ServerlessSettings serverless)"
  nameWithType: "SignalRResource.UpdateStages.WithServerless.withServerless(ServerlessSettings serverless)"
  summary: "Specifies the serverless property: Serverless settings.."
  modifiers:
  - "abstract"
  parameters:
  - description: "Serverless settings."
    name: "serverless"
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.ServerlessSettings?alt=com.azure.resourcemanager.signalr.models.ServerlessSettings&text=ServerlessSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SignalRResource.Update withServerless(ServerlessSettings serverless)"
  desc: "Specifies the serverless property: Serverless settings.."
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRResource.Update?alt=com.azure.resourcemanager.signalr.models.SignalRResource.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The stage of the SignalRResource update allowing to specify serverless."
metadata: {}
package: "com.azure.resourcemanager.signalr.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-signalr:1.0.0-beta.5
