### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.eventhubs.models.EventPosition
  id: EventPosition
  parent: com.azure.messaging.eventhubs.models
  children:
  - com.azure.messaging.eventhubs.models.EventPosition.earliest()
  - com.azure.messaging.eventhubs.models.EventPosition.enqueuedDateTime()
  - com.azure.messaging.eventhubs.models.EventPosition.equals(Object)
  - com.azure.messaging.eventhubs.models.EventPosition.fromEnqueuedTime(Instant)
  - com.azure.messaging.eventhubs.models.EventPosition.fromOffset(String)
  - com.azure.messaging.eventhubs.models.EventPosition.fromOffset(String,boolean)
  - com.azure.messaging.eventhubs.models.EventPosition.fromSequenceNumber(long)
  - com.azure.messaging.eventhubs.models.EventPosition.fromSequenceNumber(long,boolean)
  - com.azure.messaging.eventhubs.models.EventPosition.hashCode()
  - com.azure.messaging.eventhubs.models.EventPosition.isInclusive()
  - com.azure.messaging.eventhubs.models.EventPosition.latest()
  - com.azure.messaging.eventhubs.models.EventPosition.offset()
  - com.azure.messaging.eventhubs.models.EventPosition.sequenceNumber()
  - com.azure.messaging.eventhubs.models.EventPosition.toString()
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  langs:
  - java
  name: EventPosition
  nameWithType: EventPosition
  fullName: com.azure.messaging.eventhubs.models.EventPosition
  type: Class
  source:
    remote: &o0
      path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventPosition.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventPosition.java
    startLine: 21
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Defines a position of an <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> in the Event Hub partition. The position can be an offset, sequence number, or enqueued time.</p>\r\n<p></p>"
  syntax: &o1
    content: public class EventPosition
  inheritance:
  - java.lang.Object
- uid: com.azure.messaging.eventhubs.models.EventPosition.earliest()
  id: earliest()
  parent: com.azure.messaging.eventhubs.models.EventPosition
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  langs:
  - java
  name: earliest()
  nameWithType: EventPosition.earliest()
  fullName: com.azure.messaging.eventhubs.models.EventPosition.earliest()
  overload: com.azure.messaging.eventhubs.models.EventPosition.earliest*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventPosition.java
    startLine: 53
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Corresponds to the location of the first event present in the partition. Use this position to begin receiving from the first event that was enqueued in the partition which has not expired due to the retention policy.</p>\r\n<p></p>"
  syntax:
    content: public static EventPosition earliest()
    return:
      type: com.azure.messaging.eventhubs.models.EventPosition
      description: <p>An <xref uid="com.azure.messaging.eventhubs.models.EventPosition" data-throw-if-not-resolved="false">EventPosition</xref> set to the start of an Event Hub stream. </p>
- uid: com.azure.messaging.eventhubs.models.EventPosition.enqueuedDateTime()
  id: enqueuedDateTime()
  parent: com.azure.messaging.eventhubs.models.EventPosition
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  langs:
  - java
  name: enqueuedDateTime()
  nameWithType: EventPosition.enqueuedDateTime()
  fullName: com.azure.messaging.eventhubs.models.EventPosition.enqueuedDateTime()
  overload: com.azure.messaging.eventhubs.models.EventPosition.enqueuedDateTime*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventPosition.java
    startLine: 176
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Gets the instant, in UTC, from which the next available event should be chosen..</p>\r\n<p></p>"
  syntax:
    content: public Instant enqueuedDateTime()
    return:
      type: 328f8254
      description: <p>The instant, in UTC, from which the next available event should be chosen.. </p>
- uid: com.azure.messaging.eventhubs.models.EventPosition.equals(Object)
  id: equals(Object)
  parent: com.azure.messaging.eventhubs.models.EventPosition
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  langs:
  - java
  name: equals(Object obj)
  nameWithType: EventPosition.equals(Object obj)
  fullName: com.azure.messaging.eventhubs.models.EventPosition.equals(Object obj)
  overload: com.azure.messaging.eventhubs.models.EventPosition.equals*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventPosition.java
    startLine: 189
  package: com.azure.messaging.eventhubs.models
  syntax:
    content: public boolean equals(Object obj)
    parameters:
    - id: obj
      type: "79317049"
    return:
      type: 4fc6e284
- uid: com.azure.messaging.eventhubs.models.EventPosition.fromEnqueuedTime(Instant)
  id: fromEnqueuedTime(Instant)
  parent: com.azure.messaging.eventhubs.models.EventPosition
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  langs:
  - java
  name: fromEnqueuedTime(Instant enqueuedDateTime)
  nameWithType: EventPosition.fromEnqueuedTime(Instant enqueuedDateTime)
  fullName: com.azure.messaging.eventhubs.models.EventPosition.fromEnqueuedTime(Instant enqueuedDateTime)
  overload: com.azure.messaging.eventhubs.models.EventPosition.fromEnqueuedTime*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventPosition.java
    startLine: 76
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Creates a position at the given <xref uid=\"\" data-throw-if-not-resolved=\"false\">Instant</xref>. Corresponds to a specific instance within a partition to begin looking for an event. The event enqueued after the requested<code>enqueuedDateTime \r\n    </code> becomes the current position.</p>\r\n<p></p>"
  syntax:
    content: public static EventPosition fromEnqueuedTime(Instant enqueuedDateTime)
    parameters:
    - id: enqueuedDateTime
      type: 328f8254
      description: <p>The instant, in UTC, from which the next available event should be chosen. </p>
    return:
      type: com.azure.messaging.eventhubs.models.EventPosition
      description: <p>An <xref uid="com.azure.messaging.eventhubs.models.EventPosition" data-throw-if-not-resolved="false">EventPosition</xref> object. </p>
- uid: com.azure.messaging.eventhubs.models.EventPosition.fromOffset(String)
  id: fromOffset(String)
  parent: com.azure.messaging.eventhubs.models.EventPosition
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  langs:
  - java
  name: fromOffset(String offset)
  nameWithType: EventPosition.fromOffset(String offset)
  fullName: com.azure.messaging.eventhubs.models.EventPosition.fromOffset(String offset)
  overload: com.azure.messaging.eventhubs.models.EventPosition.fromOffset*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventPosition.java
    startLine: 94
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Corresponds to the event in the partition at the provided offset, inclusive of that event.</p>\r\n<p>The offset is the relative position for event in the context of the stream. The offset should not be considered a stable value, as the same offset may refer to a different event as events reach the age limit for retention and are no longer visible within the stream. </p>\r\n<p></p>"
  syntax: &o2
    content: public static EventPosition fromOffset(String offset)
    parameters:
    - id: offset
      type: "26831127"
      description: <p>The offset of the event within that partition. </p>
    return:
      type: com.azure.messaging.eventhubs.models.EventPosition
      description: <p>An <xref uid="com.azure.messaging.eventhubs.models.EventPosition" data-throw-if-not-resolved="false">EventPosition</xref> object. </p>
- uid: com.azure.messaging.eventhubs.models.EventPosition.fromOffset(String,boolean)
  id: fromOffset(String,boolean)
  parent: com.azure.messaging.eventhubs.models.EventPosition
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  langs:
  - java
  name: fromOffset(String offset, boolean isInclusive)
  nameWithType: EventPosition.fromOffset(String offset, boolean isInclusive)
  fullName: com.azure.messaging.eventhubs.models.EventPosition.fromOffset(String offset, boolean isInclusive)
  overload: com.azure.messaging.eventhubs.models.EventPosition.fromOffset*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventPosition.java
    startLine: 107
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Creates a position to an event in the partition at the provided offset. If<code>isInclusive \r\n    </code> is true, the event with the same offset is returned. Otherwise, the next event is received.</p>\r\n<p></p>"
  syntax:
    content: public static EventPosition fromOffset(String offset, boolean isInclusive)
    parameters:
    - id: offset
      type: "26831127"
      description: <p>The offset of an event with respect to its relative position in the </p>
    - id: isInclusive
      type: 4fc6e284
      description: >-
        <p>If true, the event with the<code>offset 

            </code> is included; otherwise, the next event will be received. </p>
    return:
      type: com.azure.messaging.eventhubs.models.EventPosition
      description: <p>An <xref uid="com.azure.messaging.eventhubs.models.EventPosition" data-throw-if-not-resolved="false">EventPosition</xref> object. </p>
- uid: com.azure.messaging.eventhubs.models.EventPosition.fromSequenceNumber(long)
  id: fromSequenceNumber(long)
  parent: com.azure.messaging.eventhubs.models.EventPosition
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  langs:
  - java
  name: fromSequenceNumber(long sequenceNumber)
  nameWithType: EventPosition.fromSequenceNumber(long sequenceNumber)
  fullName: com.azure.messaging.eventhubs.models.EventPosition.fromSequenceNumber(long sequenceNumber)
  overload: com.azure.messaging.eventhubs.models.EventPosition.fromSequenceNumber*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventPosition.java
    startLine: 122
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Creates a position to an event in the partition at the provided sequence number. The event with the sequence number will not be included. Instead, the next event is returned.</p>\r\n<p></p>"
  syntax:
    content: public static EventPosition fromSequenceNumber(long sequenceNumber)
    parameters:
    - id: sequenceNumber
      type: 0364520f
      description: <p>is the sequence number of the event. </p>
    return:
      type: com.azure.messaging.eventhubs.models.EventPosition
      description: <p>An <xref uid="com.azure.messaging.eventhubs.models.EventPosition" data-throw-if-not-resolved="false">EventPosition</xref> object. </p>
- uid: com.azure.messaging.eventhubs.models.EventPosition.fromSequenceNumber(long,boolean)
  id: fromSequenceNumber(long,boolean)
  parent: com.azure.messaging.eventhubs.models.EventPosition
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  langs:
  - java
  name: fromSequenceNumber(long sequenceNumber, boolean isInclusive)
  nameWithType: EventPosition.fromSequenceNumber(long sequenceNumber, boolean isInclusive)
  fullName: com.azure.messaging.eventhubs.models.EventPosition.fromSequenceNumber(long sequenceNumber, boolean isInclusive)
  overload: com.azure.messaging.eventhubs.models.EventPosition.fromSequenceNumber*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventPosition.java
    startLine: 135
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Creates a position at the given sequence number. If<code>isInclusive \r\n    </code> is true, the event with the same sequence number is returned. Otherwise, the next event in the sequence is received.</p>\r\n<p></p>"
  syntax:
    content: public static EventPosition fromSequenceNumber(long sequenceNumber, boolean isInclusive)
    parameters:
    - id: sequenceNumber
      type: 0364520f
      description: <p>is the sequence number of the event. </p>
    - id: isInclusive
      type: 4fc6e284
      description: >-
        <p>If true, the event with the<code>sequenceNumber 

            </code> is included; otherwise, the next event will be received. </p>
    return:
      type: com.azure.messaging.eventhubs.models.EventPosition
      description: <p>An <xref uid="com.azure.messaging.eventhubs.models.EventPosition" data-throw-if-not-resolved="false">EventPosition</xref> object. </p>
- uid: com.azure.messaging.eventhubs.models.EventPosition.hashCode()
  id: hashCode()
  parent: com.azure.messaging.eventhubs.models.EventPosition
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  langs:
  - java
  name: hashCode()
  nameWithType: EventPosition.hashCode()
  fullName: com.azure.messaging.eventhubs.models.EventPosition.hashCode()
  overload: com.azure.messaging.eventhubs.models.EventPosition.hashCode*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventPosition.java
    startLine: 203
  package: com.azure.messaging.eventhubs.models
  syntax:
    content: public int hashCode()
    return:
      type: f75371fa
- uid: com.azure.messaging.eventhubs.models.EventPosition.isInclusive()
  id: isInclusive()
  parent: com.azure.messaging.eventhubs.models.EventPosition
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  langs:
  - java
  name: isInclusive()
  nameWithType: EventPosition.isInclusive()
  fullName: com.azure.messaging.eventhubs.models.EventPosition.isInclusive()
  overload: com.azure.messaging.eventhubs.models.EventPosition.isInclusive*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventPosition.java
    startLine: 147
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Gets the boolean value of if the event is included. If true, the event with the<code>sequenceNumber \r\n    </code> is included; otherwise, the next event will be received.</p>\r\n<p></p>"
  syntax:
    content: public boolean isInclusive()
    return:
      type: 4fc6e284
      description: <p>The boolean if the event will be received. </p>
- uid: com.azure.messaging.eventhubs.models.EventPosition.latest()
  id: latest()
  parent: com.azure.messaging.eventhubs.models.EventPosition
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  langs:
  - java
  name: latest()
  nameWithType: EventPosition.latest()
  fullName: com.azure.messaging.eventhubs.models.EventPosition.latest()
  overload: com.azure.messaging.eventhubs.models.EventPosition.latest*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventPosition.java
    startLine: 64
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Corresponds to the end of the partition, where no more events are currently enqueued. Use this position to begin receiving from the next event to be enqueued in the partition after an <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumer\" data-throw-if-not-resolved=\"false\">EventHubConsumer</xref> is created with this position.</p>\r\n<p></p>"
  syntax:
    content: public static EventPosition latest()
    return:
      type: com.azure.messaging.eventhubs.models.EventPosition
      description: <p>An <xref uid="com.azure.messaging.eventhubs.models.EventPosition" data-throw-if-not-resolved="false">EventPosition</xref> set to the end of an Event Hubs stream and listens for new events. </p>
- uid: com.azure.messaging.eventhubs.models.EventPosition.offset()
  id: offset()
  parent: com.azure.messaging.eventhubs.models.EventPosition
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  langs:
  - java
  name: offset()
  nameWithType: EventPosition.offset()
  fullName: com.azure.messaging.eventhubs.models.EventPosition.offset()
  overload: com.azure.messaging.eventhubs.models.EventPosition.offset*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventPosition.java
    startLine: 158
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Gets the relative position for event in the context of the stream. The offset should not be considered a stable value, as the same offset may refer to a different event as events reach the age limit for retention and are no longer visible within the stream.</p>\r\n<p></p>"
  syntax:
    content: public String offset()
    return:
      type: "26831127"
      description: <p>The offset of the event within that partition. </p>
- uid: com.azure.messaging.eventhubs.models.EventPosition.sequenceNumber()
  id: sequenceNumber()
  parent: com.azure.messaging.eventhubs.models.EventPosition
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  langs:
  - java
  name: sequenceNumber()
  nameWithType: EventPosition.sequenceNumber()
  fullName: com.azure.messaging.eventhubs.models.EventPosition.sequenceNumber()
  overload: com.azure.messaging.eventhubs.models.EventPosition.sequenceNumber*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventPosition.java
    startLine: 167
  package: com.azure.messaging.eventhubs.models
  summary: "<p>Gets the sequence number of the event.</p>\r\n<p></p>"
  syntax:
    content: public Long sequenceNumber()
    return:
      type: 34f09483
      description: <p>The sequence number of the event. </p>
- uid: com.azure.messaging.eventhubs.models.EventPosition.toString()
  id: toString()
  parent: com.azure.messaging.eventhubs.models.EventPosition
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  langs:
  - java
  name: toString()
  nameWithType: EventPosition.toString()
  fullName: com.azure.messaging.eventhubs.models.EventPosition.toString()
  overload: com.azure.messaging.eventhubs.models.EventPosition.toString*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/models/EventPosition.java
    startLine: 181
  package: com.azure.messaging.eventhubs.models
  syntax:
    content: public String toString()
    return:
      type: "26831127"
references:
- uid: com.azure.messaging.eventhubs.models.EventPosition.earliest*
  name: earliest
  nameWithType: EventPosition.earliest
  fullName: com.azure.messaging.eventhubs.models.EventPosition.earliest
  package: com.azure.messaging.eventhubs.models
- uid: com.azure.messaging.eventhubs.models.EventPosition.latest*
  name: latest
  nameWithType: EventPosition.latest
  fullName: com.azure.messaging.eventhubs.models.EventPosition.latest
  package: com.azure.messaging.eventhubs.models
- uid: 328f8254
  spec.java:
  - name: Instant
    fullName: Instant
- uid: com.azure.messaging.eventhubs.models.EventPosition.fromEnqueuedTime*
  name: fromEnqueuedTime
  nameWithType: EventPosition.fromEnqueuedTime
  fullName: com.azure.messaging.eventhubs.models.EventPosition.fromEnqueuedTime
  package: com.azure.messaging.eventhubs.models
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.azure.messaging.eventhubs.models.EventPosition.fromOffset*
  name: fromOffset
  nameWithType: EventPosition.fromOffset
  fullName: com.azure.messaging.eventhubs.models.EventPosition.fromOffset
  package: com.azure.messaging.eventhubs.models
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: com.azure.messaging.eventhubs.models.EventPosition.fromSequenceNumber*
  name: fromSequenceNumber
  nameWithType: EventPosition.fromSequenceNumber
  fullName: com.azure.messaging.eventhubs.models.EventPosition.fromSequenceNumber
  package: com.azure.messaging.eventhubs.models
- uid: com.azure.messaging.eventhubs.models.EventPosition.isInclusive*
  name: isInclusive
  nameWithType: EventPosition.isInclusive
  fullName: com.azure.messaging.eventhubs.models.EventPosition.isInclusive
  package: com.azure.messaging.eventhubs.models
- uid: com.azure.messaging.eventhubs.models.EventPosition.offset*
  name: offset
  nameWithType: EventPosition.offset
  fullName: com.azure.messaging.eventhubs.models.EventPosition.offset
  package: com.azure.messaging.eventhubs.models
- uid: 34f09483
  spec.java:
  - name: Long
    fullName: Long
- uid: com.azure.messaging.eventhubs.models.EventPosition.sequenceNumber*
  name: sequenceNumber
  nameWithType: EventPosition.sequenceNumber
  fullName: com.azure.messaging.eventhubs.models.EventPosition.sequenceNumber
  package: com.azure.messaging.eventhubs.models
- uid: com.azure.messaging.eventhubs.models.EventPosition.enqueuedDateTime*
  name: enqueuedDateTime
  nameWithType: EventPosition.enqueuedDateTime
  fullName: com.azure.messaging.eventhubs.models.EventPosition.enqueuedDateTime
  package: com.azure.messaging.eventhubs.models
- uid: com.azure.messaging.eventhubs.models.EventPosition.toString*
  name: toString
  nameWithType: EventPosition.toString
  fullName: com.azure.messaging.eventhubs.models.EventPosition.toString
  package: com.azure.messaging.eventhubs.models
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: com.azure.messaging.eventhubs.models.EventPosition.equals*
  name: equals
  nameWithType: EventPosition.equals
  fullName: com.azure.messaging.eventhubs.models.EventPosition.equals
  package: com.azure.messaging.eventhubs.models
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.azure.messaging.eventhubs.models.EventPosition.hashCode*
  name: hashCode
  nameWithType: EventPosition.hashCode
  fullName: com.azure.messaging.eventhubs.models.EventPosition.hashCode
  package: com.azure.messaging.eventhubs.models
- uid: com.azure.messaging.eventhubs.models.EventPosition
  parent: com.azure.messaging.eventhubs.models
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  name: EventPosition
  nameWithType: EventPosition
  fullName: com.azure.messaging.eventhubs.models.EventPosition
  type: Class
  summary: "<p>Defines a position of an <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> in the Event Hub partition. The position can be an offset, sequence number, or enqueued time.</p>\r\n<p></p>"
  syntax: *o1
- uid: com.azure.messaging.eventhubs.models.EventPosition.fromOffset(String)
  parent: com.azure.messaging.eventhubs.models.EventPosition
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  name: fromOffset(String offset)
  nameWithType: EventPosition.fromOffset(String offset)
  fullName: com.azure.messaging.eventhubs.models.EventPosition.fromOffset(String offset)
  type: Method
  summary: "<p>Corresponds to the event in the partition at the provided offset, inclusive of that event.</p>\r\n<p>The offset is the relative position for event in the context of the stream. The offset should not be considered a stable value, as the same offset may refer to a different event as events reach the age limit for retention and are no longer visible within the stream. </p>\r\n<p></p>"
  syntax: *o2
- uid: com.azure.core.util.logging.ClientLogger
  parent: com.azure.core.util.logging
  href: com.azure.core.util.logging.ClientLogger.yml
  name: ClientLogger
  nameWithType: ClientLogger
  fullName: com.azure.core.util.logging.ClientLogger
  type: Class
  summary: "<p>This is a fluent logger helper class that wraps a plug-able <xref uid=\"\" data-throw-if-not-resolved=\"false\">Logger</xref>.</p>\r\n<p>This logger logs formattable messages that use<code>{} \r\n    </code> as the placeholder. When a throwable is the last argument of the format varargs and the logger is enabled for <xref uid=\"\" data-throw-if-not-resolved=\"false\">verbose</xref> logging the stack trace for the throwable will be included in the log message.</p>\r\n<p>A minimum logging level threshold is determined by the <xref uid=\"com.azure.core.util.configuration.BaseConfigurations.AZURE_LOG_LEVEL\" data-throw-if-not-resolved=\"false\">AZURE_LOG_LEVEL</xref> environment configuration, by default logging is disabled.</p>\r\n<p>\r\n  <b>Log level hierarchy</b>\r\n</p>\r\n<p>\r\n  <orderedlist>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Error</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Warning</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Info</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Verbose</xref>\r\n      </p>\r\n    </li>\r\n  </orderedlist>\r\n</p>\r\n<p></p>"
  syntax:
    content: public class ClientLogger
- uid: com.azure.messaging.eventhubs.EventHubConsumer
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventHubConsumer.yml
  name: EventHubConsumer
  nameWithType: EventHubConsumer
  fullName: com.azure.messaging.eventhubs.EventHubConsumer
  type: Class
  summary: "<p>A consumer responsible for reading <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> from a specific Event Hub partition in the context of a specific consumer group.</p>\r\n<p>\r\n  <ul>\r\n    <li>\r\n      <p>If <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumer\" data-throw-if-not-resolved=\"false\">EventHubConsumer</xref> is created where <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel()\" data-throw-if-not-resolved=\"false\">EventHubConsumerOptions#ownerLevel()</xref> has a value, then Event Hubs service will guarantee only one active consumer exists per partitionId and consumer group combination. This consumer is sometimes referred to as an \"Epoch Consumer.\" </p>\r\n    </li>\r\n    <li>\r\n      <p>Multiple consumers per partitionId and consumer group combination can be created by not setting <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel()\" data-throw-if-not-resolved=\"false\">EventHubConsumerOptions#ownerLevel()</xref> when creating consumers. This non-exclusive consumer is sometimes referred to as a \"Non-Epoch Consumer.\" </p>\r\n    </li>\r\n  </ul>\r\n</p>\r\n<p>\r\n  <b>Consuming events from Event Hub</b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubconsumer.receive}</p>\r\n<p>\r\n  <b>Rate limiting consumption of events from Event Hub</b>\r\n</p>\r\n<p>For event consumers that need to limit the number of events they receive at a given time, they can use <xref uid=\"\" data-throw-if-not-resolved=\"false\">BaseSubscriber#request(long)</xref>.</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubconsumer.receiveBackpressure}</p>\r\n<p></p>"
  syntax:
    content: public class EventHubConsumer
- uid: com.azure.messaging.eventhubs.EventData
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventData.yml
  name: EventData
  nameWithType: EventData
  fullName: com.azure.messaging.eventhubs.EventData
  type: Class
  summary: "<p>The data structure encapsulating the event being sent-to and received-from Event Hubs. Each Event Hub partition can be visualized as a stream of <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>.</p>\r\n<p>Here's how AMQP message sections map to <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>. For reference, the specification can be found here: <a href=\"http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf\">AMQP 1.0 specification</a></p>\r\n<p>\r\n  <orderedlist>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"com.azure.messaging.eventhubs.EventData.properties()\" data-throw-if-not-resolved=\"false\">properties()</xref> - AMQPMessage.ApplicationProperties section </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"com.azure.messaging.eventhubs.EventData.body()\" data-throw-if-not-resolved=\"false\">body()</xref> - if AMQPMessage.Body has Data section </p>\r\n    </li>\r\n  </orderedlist>\r\n</p>\r\n<p>Serializing a received <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> with AMQP sections other than ApplicationProperties (with primitive Java types) and Data section is not supported. </p>\r\n<p></p>"
  syntax:
    content: public class EventData
