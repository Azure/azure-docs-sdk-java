### YamlMime:JavaMember
uid: "com.azure.resourcemanager.policyinsights.implementation.RemediationsClientImpl.cancelAtResource*"
fullName: "com.azure.resourcemanager.policyinsights.implementation.RemediationsClientImpl.cancelAtResource"
name: "cancelAtResource"
nameWithType: "RemediationsClientImpl.cancelAtResource"
members:
- uid: "com.azure.resourcemanager.policyinsights.implementation.RemediationsClientImpl.cancelAtResource(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.implementation.RemediationsClientImpl.cancelAtResource(String resourceId, String remediationName)"
  name: "cancelAtResource(String resourceId, String remediationName)"
  nameWithType: "RemediationsClientImpl.cancelAtResource(String resourceId, String remediationName)"
  summary: "Cancel a remediation at resource scope."
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the remediation."
    name: "remediationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RemediationInner cancelAtResource(String resourceId, String remediationName)"
  returns:
    description: "the remediation definition."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner&text=RemediationInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.policyinsights.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-policyinsights:1.0.0-beta.1
