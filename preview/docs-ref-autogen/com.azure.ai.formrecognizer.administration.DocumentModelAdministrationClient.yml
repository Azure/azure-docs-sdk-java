### YamlMime:JavaType
uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient"
fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient"
name: "DocumentModelAdministrationClient"
nameWithType: "DocumentModelAdministrationClient"
summary: "This class provides a synchronous client that contains model management the operations that apply to Azure Form Recognizer. Operations allowed by the client are creating, building of custom document analysis models, deleting models, listing models, copying a custom-built model to another Form Recognizer account, composing models from component models, getting operation information and getting account information.\n\n**Instantiating a synchronous Document Model Administration Client**\n\n```java\nDocumentModelAdministrationClient documentModelAdministrationClient =\n     new DocumentModelAdministrationClientBuilder().buildClient();\n```"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DocumentModelAdministrationClient"
methods:
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.beginBuildModel(java.lang.String,com.azure.ai.formrecognizer.administration.models.DocumentBuildMode)"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.beginBuildModel(String trainingFilesUrl, DocumentBuildMode buildMode)"
  name: "beginBuildModel(String trainingFilesUrl, DocumentBuildMode buildMode)"
  nameWithType: "DocumentModelAdministrationClient.beginBuildModel(String trainingFilesUrl, DocumentBuildMode buildMode)"
  summary: "Builds a custom document analysis model.\n\nModels are built using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff', image/bmp. Other type of content is ignored.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nString trainingFilesUrl = \"{SAS-URL-of-your-container-in-blob-storage}\";\n DocumentModel documentModel\n     = documentModelAdministrationClient.beginBuildModel(trainingFilesUrl, DocumentBuildMode.TEMPLATE)\n     .getFinalResult();\n\n System.out.printf(\"Model ID: %s%n\", documentModel.getModelId());\n System.out.printf(\"Model Created on: %s%n\", documentModel.getCreatedOn());\n documentModel.getDocTypes().forEach((key, docTypeInfo) -> {\n     docTypeInfo.getFieldSchema().forEach((field, documentFieldSchema) -> {\n         System.out.printf(\"Field: %s\", field);\n         System.out.printf(\"Field type: %s\", documentFieldSchema.getType());\n         System.out.printf(\"Field confidence: %.2f\", docTypeInfo.getFieldConfidence().get(field));\n     });\n });\n```"
  parameters:
  - description: "an Azure Storage blob container's SAS URI. A container URI (without SAS)\n can be used if the container is public or has a managed identity configured. For more information on\n setting up a training data set, see: <a href=\"https://aka.ms/azsdk/formrecognizer/buildcustommodel\">here</a>."
    name: "trainingFilesUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the preferred technique for creating models. For faster training of models use\n <xref uid=\"com.azure.ai.formrecognizer.administration.models.DocumentBuildMode.TEMPLATE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentBuildMode#TEMPLATE\"></xref>. See <a href=\"https://aka.ms/azsdk/formrecognizer/buildmode\">here</a>\n for more information on building mode for custom documents."
    name: "buildMode"
    type: "<xref href=\"com.azure.ai.formrecognizer.administration.models.DocumentBuildMode?alt=com.azure.ai.formrecognizer.administration.models.DocumentBuildMode&text=DocumentBuildMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<DocumentOperationResult,DocumentModel> beginBuildModel(String trainingFilesUrl, DocumentBuildMode buildMode)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the building model operation until it has completed, has failed, or has\n been cancelled. The completed operation returns the trained <xref uid=\"com.azure.ai.formrecognizer.administration.models.DocumentModel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"custom document analysis model\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.DocumentOperationResult?alt=com.azure.ai.formrecognizer.models.DocumentOperationResult&text=DocumentOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.administration.models.DocumentModel?alt=com.azure.ai.formrecognizer.administration.models.DocumentModel&text=DocumentModel\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.beginBuildModel(java.lang.String,com.azure.ai.formrecognizer.administration.models.DocumentBuildMode,com.azure.ai.formrecognizer.administration.models.BuildModelOptions,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.beginBuildModel(String trainingFilesUrl, DocumentBuildMode buildMode, BuildModelOptions buildModelOptions, Context context)"
  name: "beginBuildModel(String trainingFilesUrl, DocumentBuildMode buildMode, BuildModelOptions buildModelOptions, Context context)"
  nameWithType: "DocumentModelAdministrationClient.beginBuildModel(String trainingFilesUrl, DocumentBuildMode buildMode, BuildModelOptions buildModelOptions, Context context)"
  summary: "Builds a custom document analysis model.\n\nModels are built using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff', image/bmp. Other type of content is ignored.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nString trainingFilesUrl = \"{SAS-URL-of-your-container-in-blob-storage}\";\n String modelId = \"custom-model-id\";\n String prefix = \"Invoice\";\n Map<String, String> attrs = new HashMap<String, String>();\n attrs.put(\"createdBy\", \"sample\");\n\n DocumentModel documentModel = documentModelAdministrationClient.beginBuildModel(trainingFilesUrl,\n         DocumentBuildMode.TEMPLATE,\n         new BuildModelOptions()\n             .setModelId(modelId)\n             .setDescription(\"model desc\")\n             .setPrefix(prefix)\n             .setTags(attrs), Context.NONE)\n     .getFinalResult();\n\n System.out.printf(\"Model ID: %s%n\", documentModel.getModelId());\n System.out.printf(\"Model Description: %s%n\", documentModel.getDescription());\n System.out.printf(\"Model Created on: %s%n\", documentModel.getCreatedOn());\n System.out.printf(\"Model assigned tags: %s%n\", documentModel.getTags());\n documentModel.getDocTypes().forEach((key, docTypeInfo) -> {\n     docTypeInfo.getFieldSchema().forEach((field, documentFieldSchema) -> {\n         System.out.printf(\"Field: %s\", field);\n         System.out.printf(\"Field type: %s\", documentFieldSchema.getType());\n         System.out.printf(\"Field confidence: %.2f\", docTypeInfo.getFieldConfidence().get(field));\n     });\n });\n```"
  parameters:
  - description: "an Azure Storage blob container's SAS URI. A container URI (without SAS)\n can be used if the container is public or has a managed identity configured. For more information on\n setting up a training data set, see: <a href=\"https://aka.ms/azsdk/formrecognizer/buildcustommodel\">here</a>."
    name: "trainingFilesUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the preferred technique for creating models. For faster training of models use\n <xref uid=\"com.azure.ai.formrecognizer.administration.models.DocumentBuildMode.TEMPLATE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentBuildMode#TEMPLATE\"></xref>. See <a href=\"https://aka.ms/azsdk/formrecognizer/buildmode\">here</a>\n for more information on building mode for custom documents."
    name: "buildMode"
    type: "<xref href=\"com.azure.ai.formrecognizer.administration.models.DocumentBuildMode?alt=com.azure.ai.formrecognizer.administration.models.DocumentBuildMode&text=DocumentBuildMode\" data-throw-if-not-resolved=\"False\" />"
  - description: "The configurable <xref uid=\"com.azure.ai.formrecognizer.administration.models.BuildModelOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref> to pass when\n building a custom document analysis model."
    name: "buildModelOptions"
    type: "<xref href=\"com.azure.ai.formrecognizer.administration.models.BuildModelOptions?alt=com.azure.ai.formrecognizer.administration.models.BuildModelOptions&text=BuildModelOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<DocumentOperationResult,DocumentModel> beginBuildModel(String trainingFilesUrl, DocumentBuildMode buildMode, BuildModelOptions buildModelOptions, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the building model operation until it has completed, has failed, or has\n been cancelled. The completed operation returns the built <xref uid=\"com.azure.ai.formrecognizer.administration.models.DocumentModel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"custom document analysis model\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.DocumentOperationResult?alt=com.azure.ai.formrecognizer.models.DocumentOperationResult&text=DocumentOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.administration.models.DocumentModel?alt=com.azure.ai.formrecognizer.administration.models.DocumentModel&text=DocumentModel\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.beginCopyModelTo(java.lang.String,com.azure.ai.formrecognizer.administration.models.CopyAuthorization)"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.beginCopyModelTo(String modelId, CopyAuthorization target)"
  name: "beginCopyModelTo(String modelId, CopyAuthorization target)"
  nameWithType: "DocumentModelAdministrationClient.beginCopyModelTo(String modelId, CopyAuthorization target)"
  summary: "Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n\nThis should be called with the source Form Recognizer resource (with the model that is intended to be copied). The target parameter should be supplied from the target resource's output from <xref uid=\"com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getCopyAuthorization()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelAdministrationClient#getCopyAuthorization()\"></xref> method.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nString copyModelId = \"copy-model\";\n // Get authorization to copy the model to target resource\n CopyAuthorization copyAuthorization = documentModelAdministrationClient.getCopyAuthorization();\n // Start copy operation from the source client\n DocumentModel documentModel =\n     documentModelAdministrationClient.beginCopyModelTo(copyModelId, copyAuthorization).getFinalResult();\n System.out.printf(\"Copied model has model ID: %s, was created on: %s.%n,\",\n     documentModel.getModelId(),\n     documentModel.getCreatedOn());\n```"
  parameters:
  - description: "Model identifier of the model to copy to target resource."
    name: "modelId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the copy authorization to the target Form Recognizer resource. The copy authorization can be\n generated from the target resource's call to <xref uid=\"com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getCopyAuthorization()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelAdministrationClient#getCopyAuthorization()\"></xref>"
    name: "target"
    type: "<xref href=\"com.azure.ai.formrecognizer.administration.models.CopyAuthorization?alt=com.azure.ai.formrecognizer.administration.models.CopyAuthorization&text=CopyAuthorization\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<DocumentOperationResult,DocumentModel> beginCopyModelTo(String modelId, CopyAuthorization target)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the copy model operation until it has completed, has failed,\n or has been cancelled."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.DocumentOperationResult?alt=com.azure.ai.formrecognizer.models.DocumentOperationResult&text=DocumentOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.administration.models.DocumentModel?alt=com.azure.ai.formrecognizer.administration.models.DocumentModel&text=DocumentModel\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.beginCopyModelTo(java.lang.String,com.azure.ai.formrecognizer.administration.models.CopyAuthorization,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.beginCopyModelTo(String modelId, CopyAuthorization target, Context context)"
  name: "beginCopyModelTo(String modelId, CopyAuthorization target, Context context)"
  nameWithType: "DocumentModelAdministrationClient.beginCopyModelTo(String modelId, CopyAuthorization target, Context context)"
  summary: "Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n\nThis should be called with the source Form Recognizer resource (with the model that is intended to be copied). The target parameter should be supplied from the target resource's output from <xref uid=\"com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getCopyAuthorization()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelAdministrationClient#getCopyAuthorization()\"></xref> method.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nString copyModelId = \"copy-model\";\n // Get authorization to copy the model to target resource\n CopyAuthorization copyAuthorization = documentModelAdministrationClient.getCopyAuthorization();\n // Start copy operation from the source client\n DocumentModel documentModel =\n     documentModelAdministrationClient.beginCopyModelTo(copyModelId, copyAuthorization, Context.NONE).getFinalResult();\n System.out.printf(\"Copied model has model ID: %s, was created on: %s.%n,\",\n     documentModel.getModelId(),\n     documentModel.getCreatedOn());\n```"
  parameters:
  - description: "Model identifier of the model to copy to target resource."
    name: "modelId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the copy authorization to the target Form Recognizer resource. The copy authorization can be\n generated from the target resource's call to <xref uid=\"com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getCopyAuthorization()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelAdministrationClient#getCopyAuthorization()\"></xref>."
    name: "target"
    type: "<xref href=\"com.azure.ai.formrecognizer.administration.models.CopyAuthorization?alt=com.azure.ai.formrecognizer.administration.models.CopyAuthorization&text=CopyAuthorization\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<DocumentOperationResult,DocumentModel> beginCopyModelTo(String modelId, CopyAuthorization target, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the copy model operation until it has completed, has failed,\n or has been cancelled."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.DocumentOperationResult?alt=com.azure.ai.formrecognizer.models.DocumentOperationResult&text=DocumentOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.administration.models.DocumentModel?alt=com.azure.ai.formrecognizer.administration.models.DocumentModel&text=DocumentModel\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.beginCreateComposedModel(java.util.List<java.lang.String>)"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.beginCreateComposedModel(List<String> componentModelIds)"
  name: "beginCreateComposedModel(List<String> componentModelIds)"
  nameWithType: "DocumentModelAdministrationClient.beginCreateComposedModel(List<String> componentModelIds)"
  summary: "Create a composed model from the provided list of existing models in the account.\n\nThis operations fails if the list consists of an invalid, non-existing model Id or duplicate IDs.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nString modelId1 = \"{custom-model-id_1}\";\n String modelId2 = \"{custom-model-id_2}\";\n final DocumentModel documentModel\n     = documentModelAdministrationClient.beginCreateComposedModel(Arrays.asList(modelId1, modelId2))\n     .getFinalResult();\n\n System.out.printf(\"Model ID: %s%n\", documentModel.getModelId());\n System.out.printf(\"Model Description: %s%n\", documentModel.getDescription());\n System.out.printf(\"Model Created on: %s%n\", documentModel.getCreatedOn());\n documentModel.getDocTypes().forEach((key, docTypeInfo) -> {\n     docTypeInfo.getFieldSchema().forEach((field, documentFieldSchema) -> {\n         System.out.printf(\"Field: %s\", field);\n         System.out.printf(\"Field type: %s\", documentFieldSchema.getType());\n         System.out.printf(\"Field confidence: %.2f\", docTypeInfo.getFieldConfidence().get(field));\n     });\n });\n```"
  parameters:
  - description: "The list of models IDs to form the composed model."
    name: "componentModelIds"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SyncPoller<DocumentOperationResult,DocumentModel> beginCreateComposedModel(List<String> componentModelIds)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the create composed model operation until it has completed, has failed,\n or has been cancelled. The completed operation returns the <xref uid=\"com.azure.ai.formrecognizer.administration.models.DocumentModel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"composed model\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.DocumentOperationResult?alt=com.azure.ai.formrecognizer.models.DocumentOperationResult&text=DocumentOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.administration.models.DocumentModel?alt=com.azure.ai.formrecognizer.administration.models.DocumentModel&text=DocumentModel\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.beginCreateComposedModel(java.util.List<java.lang.String>,com.azure.ai.formrecognizer.administration.models.CreateComposedModelOptions,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.beginCreateComposedModel(List<String> componentModelIds, CreateComposedModelOptions createComposedModelOptions, Context context)"
  name: "beginCreateComposedModel(List<String> componentModelIds, CreateComposedModelOptions createComposedModelOptions, Context context)"
  nameWithType: "DocumentModelAdministrationClient.beginCreateComposedModel(List<String> componentModelIds, CreateComposedModelOptions createComposedModelOptions, Context context)"
  summary: "Create a composed model from the provided list of existing models in the account.\n\nThis operations fails if the list consists of an invalid, non-existing model Id or duplicate IDs.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nString modelId1 = \"{custom-model-id_1}\";\n String modelId2 = \"{custom-model-id_2}\";\n String modelId = \"my-composed-model\";\n Map<String, String> attrs = new HashMap<String, String>();\n attrs.put(\"createdBy\", \"sample\");\n\n final DocumentModel documentModel =\n     documentModelAdministrationClient.beginCreateComposedModel(Arrays.asList(modelId1, modelId2),\n             new CreateComposedModelOptions()\n                 .setModelId(modelId)\n                 .setDescription(\"my composed model desc\")\n                 .setTags(attrs),\n             Context.NONE)\n         .setPollInterval(Duration.ofSeconds(5))\n         .getFinalResult();\n\n System.out.printf(\"Model ID: %s%n\", documentModel.getModelId());\n System.out.printf(\"Model Description: %s%n\", documentModel.getDescription());\n System.out.printf(\"Model Created on: %s%n\", documentModel.getCreatedOn());\n System.out.printf(\"Model assigned tags: %s%n\", documentModel.getTags());\n documentModel.getDocTypes().forEach((key, docTypeInfo) -> {\n     docTypeInfo.getFieldSchema().forEach((field, documentFieldSchema) -> {\n         System.out.printf(\"Field: %s\", field);\n         System.out.printf(\"Field type: %s\", documentFieldSchema.getType());\n         System.out.printf(\"Field confidence: %.2f\", docTypeInfo.getFieldConfidence().get(field));\n     });\n });\n```"
  parameters:
  - description: "The list of models IDs to form the composed model."
    name: "componentModelIds"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The configurable <xref uid=\"com.azure.ai.formrecognizer.administration.models.CreateComposedModelOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref> to pass when\n creating a composed model."
    name: "createComposedModelOptions"
    type: "<xref href=\"com.azure.ai.formrecognizer.administration.models.CreateComposedModelOptions?alt=com.azure.ai.formrecognizer.administration.models.CreateComposedModelOptions&text=CreateComposedModelOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<DocumentOperationResult,DocumentModel> beginCreateComposedModel(List<String> componentModelIds, CreateComposedModelOptions createComposedModelOptions, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the create composed model operation until it has completed, has failed,\n or has been cancelled. The completed operation returns the <xref uid=\"com.azure.ai.formrecognizer.administration.models.DocumentModel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"composed model\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.DocumentOperationResult?alt=com.azure.ai.formrecognizer.models.DocumentOperationResult&text=DocumentOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.administration.models.DocumentModel?alt=com.azure.ai.formrecognizer.administration.models.DocumentModel&text=DocumentModel\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.deleteModel(java.lang.String)"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.deleteModel(String modelId)"
  name: "deleteModel(String modelId)"
  nameWithType: "DocumentModelAdministrationClient.deleteModel(String modelId)"
  summary: "Deletes the specified custom document analysis model.\n\n**Code sample**\n\n```java\nString modelId = \"{custom-model-id}\";\n documentModelAdministrationClient.deleteModel(modelId);\n System.out.printf(\"Model ID: %s is deleted.%n\", modelId);\n```"
  parameters:
  - description: "The unique model identifier."
    name: "modelId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteModel(String modelId)"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.deleteModelWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.deleteModelWithResponse(String modelId, Context context)"
  name: "deleteModelWithResponse(String modelId, Context context)"
  nameWithType: "DocumentModelAdministrationClient.deleteModelWithResponse(String modelId, Context context)"
  summary: "Deletes the specified custom document analysis model.\n\n**Code sample**\n\n```java\nString modelId = \"{custom-model-id}\";\n Response<Void> response = documentModelAdministrationClient.deleteModelWithResponse(modelId, Context.NONE);\n System.out.printf(\"Response Status Code: %d.\", response.getStatusCode());\n System.out.printf(\"Model ID: %s is deleted.%n\", modelId);\n```"
  parameters:
  - description: "The unique model identifier."
    name: "modelId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteModelWithResponse(String modelId, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> containing containing status code and HTTP headers."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getAccountProperties()"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getAccountProperties()"
  name: "getAccountProperties()"
  nameWithType: "DocumentModelAdministrationClient.getAccountProperties()"
  summary: "Get account information of the Form Recognizer account.\n\n**Code sample**\n\n```java\nAccountProperties accountProperties = documentModelAdministrationClient.getAccountProperties();\n System.out.printf(\"Max number of models that can be build for this account: %d%n\",\n     accountProperties.getDocumentModelLimit());\n System.out.printf(\"Current count of built document analysis models: %d%n\",\n     accountProperties.getDocumentModelCount());\n```"
  syntax: "public AccountProperties getAccountProperties()"
  returns:
    description: "The requested account information of the Form Recognizer account."
    type: "<xref href=\"com.azure.ai.formrecognizer.administration.models.AccountProperties?alt=com.azure.ai.formrecognizer.administration.models.AccountProperties&text=AccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getAccountPropertiesWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getAccountPropertiesWithResponse(Context context)"
  name: "getAccountPropertiesWithResponse(Context context)"
  nameWithType: "DocumentModelAdministrationClient.getAccountPropertiesWithResponse(Context context)"
  summary: "Get account information of the Form Recognizer account with an Http response and a specified <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref>.\n\n**Code sample**\n\n```java\nResponse<AccountProperties> response =\n     documentModelAdministrationClient.getAccountPropertiesWithResponse(Context.NONE);\n System.out.printf(\"Response Status Code: %d.\", response.getStatusCode());\n AccountProperties accountProperties = response.getValue();\n System.out.printf(\"Max number of models that can be build for this account: %d%n\",\n     accountProperties.getDocumentModelLimit());\n System.out.printf(\"Current count of built document analysis models: %d%n\",\n     accountProperties.getDocumentModelCount());\n```"
  parameters:
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<AccountProperties> getAccountPropertiesWithResponse(Context context)"
  returns:
    description: "The requested account information of the Form Recognizer account."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.administration.models.AccountProperties?alt=com.azure.ai.formrecognizer.administration.models.AccountProperties&text=AccountProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getCopyAuthorization()"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getCopyAuthorization()"
  name: "getCopyAuthorization()"
  nameWithType: "DocumentModelAdministrationClient.getCopyAuthorization()"
  summary: "Generate authorization for copying a custom model into the target Form Recognizer resource.\n\nThis should be called by the target resource (where the model will be copied to) and the output can be passed as the target parameter into <xref uid=\"com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.beginCopyModelTo(java.lang.String,com.azure.ai.formrecognizer.administration.models.CopyAuthorization)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelAdministrationClient#beginCopyModelTo(String, CopyAuthorization)\"></xref>."
  syntax: "public CopyAuthorization getCopyAuthorization()"
  returns:
    description: "The <xref uid=\"com.azure.ai.formrecognizer.administration.models.CopyAuthorization\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CopyAuthorization\"></xref>"
    type: "<xref href=\"com.azure.ai.formrecognizer.administration.models.CopyAuthorization?alt=com.azure.ai.formrecognizer.administration.models.CopyAuthorization&text=CopyAuthorization\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getCopyAuthorizationWithResponse(com.azure.ai.formrecognizer.administration.models.CopyAuthorizationOptions,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getCopyAuthorizationWithResponse(CopyAuthorizationOptions copyAuthorizationOptions, Context context)"
  name: "getCopyAuthorizationWithResponse(CopyAuthorizationOptions copyAuthorizationOptions, Context context)"
  nameWithType: "DocumentModelAdministrationClient.getCopyAuthorizationWithResponse(CopyAuthorizationOptions copyAuthorizationOptions, Context context)"
  summary: "Generate authorization for copying a custom model into the target Form Recognizer resource.\n\nThis should be called by the target resource (where the model will be copied to) and the output can be passed as the target parameter into <xref uid=\"com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.beginCopyModelTo(java.lang.String,com.azure.ai.formrecognizer.administration.models.CopyAuthorization)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelAdministrationClient#beginCopyModelTo(String, CopyAuthorization)\"></xref>."
  parameters:
  - description: "The configurable <xref uid=\"com.azure.ai.formrecognizer.administration.models.CopyAuthorizationOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref> to pass when\n copying a model."
    name: "copyAuthorizationOptions"
    type: "<xref href=\"com.azure.ai.formrecognizer.administration.models.CopyAuthorizationOptions?alt=com.azure.ai.formrecognizer.administration.models.CopyAuthorizationOptions&text=CopyAuthorizationOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call.\n\n <p><strong>Code sample</strong></p>\n <!-- src_embed com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getCopyAuthorizationWithResponse#CopyAuthorizationOptions-Context -->\n <pre>\n String modelId = &quot;my-copied-model&quot;;\n Map&lt;String, String&gt; attrs = new HashMap&lt;String, String&gt;&#40;&#41;;\n attrs.put&#40;&quot;createdBy&quot;, &quot;sample&quot;&#41;;\n\n Response&lt;CopyAuthorization&gt; copyAuthorizationResponse =\n     documentModelAdministrationClient.getCopyAuthorizationWithResponse&#40;\n         new CopyAuthorizationOptions&#40;&#41;\n             .setModelId&#40;modelId&#41;\n             .setDescription&#40;&quot;model-desc&quot;&#41;\n             .setTags&#40;attrs&#41;,\n         Context.NONE&#41;;\n\n System.out.printf&#40;&quot;Copy Authorization operation returned with status: %s&quot;,\n     copyAuthorizationResponse.getStatusCode&#40;&#41;&#41;;\n CopyAuthorization copyAuthorization = copyAuthorizationResponse.getValue&#40;&#41;;\n System.out.printf&#40;&quot;Copy Authorization for model id: %s, access token: %s, &quot;\n         + &quot;expiration time: %s, target resource ID; %s, target resource region: %s%n&quot;,\n     copyAuthorization.getTargetModelId&#40;&#41;,\n     copyAuthorization.getAccessToken&#40;&#41;,\n     copyAuthorization.getExpiresOn&#40;&#41;,\n     copyAuthorization.getTargetResourceId&#40;&#41;,\n     copyAuthorization.getTargetResourceRegion&#40;&#41;\n &#41;;\n </pre>\n <!-- end com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getCopyAuthorizationWithResponse#CopyAuthorizationOptions-Context -->"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<CopyAuthorization> getCopyAuthorizationWithResponse(CopyAuthorizationOptions copyAuthorizationOptions, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> containing the <xref uid=\"com.azure.ai.formrecognizer.administration.models.CopyAuthorization\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CopyAuthorization\"></xref>"
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.administration.models.CopyAuthorization?alt=com.azure.ai.formrecognizer.administration.models.CopyAuthorization&text=CopyAuthorization\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getDocumentAnalysisClient()"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getDocumentAnalysisClient()"
  name: "getDocumentAnalysisClient()"
  nameWithType: "DocumentModelAdministrationClient.getDocumentAnalysisClient()"
  summary: "Creates a new <xref uid=\"com.azure.ai.formrecognizer.DocumentAnalysisClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentAnalysisClient\"></xref> object. The new <xref uid=\"com.azure.ai.formrecognizer.DocumentAnalysisClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentAnalysisClient\"></xref> uses the same request policy pipeline as the <xref uid=\"com.azure.ai.formrecognizer.DocumentAnalysisClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentAnalysisClient\"></xref>."
  syntax: "public DocumentAnalysisClient getDocumentAnalysisClient()"
  returns:
    description: "A new <xref uid=\"com.azure.ai.formrecognizer.DocumentAnalysisClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentAnalysisClient\"></xref> object."
    type: "<xref href=\"com.azure.ai.formrecognizer.DocumentAnalysisClient?alt=com.azure.ai.formrecognizer.DocumentAnalysisClient&text=DocumentAnalysisClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getModel(java.lang.String)"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getModel(String modelId)"
  name: "getModel(String modelId)"
  nameWithType: "DocumentModelAdministrationClient.getModel(String modelId)"
  summary: "Get detailed information for a specified model ID.\n\n**Code sample**\n\n```java\nString modelId = \"{custom-model-id}\";\n DocumentModel documentModel = documentModelAdministrationClient.getModel(modelId);\n System.out.printf(\"Model ID: %s%n\", documentModel.getModelId());\n System.out.printf(\"Model Description: %s%n\", documentModel.getDescription());\n System.out.printf(\"Model Created on: %s%n\", documentModel.getCreatedOn());\n documentModel.getDocTypes().forEach((key, docTypeInfo) -> {\n     docTypeInfo.getFieldSchema().forEach((field, documentFieldSchema) -> {\n         System.out.printf(\"Field: %s\", field);\n         System.out.printf(\"Field type: %s\", documentFieldSchema.getType());\n         System.out.printf(\"Field confidence: %.2f\", docTypeInfo.getFieldConfidence().get(field));\n     });\n });\n```"
  parameters:
  - description: "The unique model identifier."
    name: "modelId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DocumentModel getModel(String modelId)"
  returns:
    description: "The detailed information for the specified model."
    type: "<xref href=\"com.azure.ai.formrecognizer.administration.models.DocumentModel?alt=com.azure.ai.formrecognizer.administration.models.DocumentModel&text=DocumentModel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getModelWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getModelWithResponse(String modelId, Context context)"
  name: "getModelWithResponse(String modelId, Context context)"
  nameWithType: "DocumentModelAdministrationClient.getModelWithResponse(String modelId, Context context)"
  summary: "Get detailed information for a specified model ID.\n\n**Code sample**\n\n```java\nString modelId = \"{custom-model-id}\";\n Response<DocumentModel> response = documentModelAdministrationClient.getModelWithResponse(modelId, Context.NONE);\n System.out.printf(\"Response Status Code: %d.\", response.getStatusCode());\n DocumentModel documentModel = response.getValue();\n System.out.printf(\"Model ID: %s%n\", documentModel.getModelId());\n System.out.printf(\"Model Description: %s%n\", documentModel.getDescription());\n System.out.printf(\"Model Created on: %s%n\", documentModel.getCreatedOn());\n documentModel.getDocTypes().forEach((key, docTypeInfo) -> {\n     docTypeInfo.getFieldSchema().forEach((field, documentFieldSchema) -> {\n         System.out.printf(\"Field: %s\", field);\n         System.out.printf(\"Field type: %s\", documentFieldSchema.getType());\n         System.out.printf(\"Field confidence: %.2f\", docTypeInfo.getFieldConfidence().get(field));\n     });\n });\n```"
  parameters:
  - description: "The unique model identifier."
    name: "modelId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<DocumentModel> getModelWithResponse(String modelId, Context context)"
  returns:
    description: "The detailed information for the specified model."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.administration.models.DocumentModel?alt=com.azure.ai.formrecognizer.administration.models.DocumentModel&text=DocumentModel\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getOperation(java.lang.String)"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getOperation(String operationId)"
  name: "getOperation(String operationId)"
  nameWithType: "DocumentModelAdministrationClient.getOperation(String operationId)"
  summary: "Get detailed operation information for the specified ID with Http response.\n\nThis operations fails if the operation ID used is past 24 hours.\n\n**Code sample**\n\n```java\nString operationId = \"{operation-id}\";\n ModelOperation modelOperation = documentModelAdministrationClient.getOperation(operationId);\n System.out.printf(\"Operation ID: %s%n\", modelOperation.getOperationId());\n System.out.printf(\"Operation Kind: %s%n\", modelOperation.getKind());\n System.out.printf(\"Operation Status: %s%n\", modelOperation.getStatus());\n System.out.printf(\"Model ID created with this operation: %s%n\", modelOperation.getModelId());\n if (ModelOperationStatus.FAILED.equals(modelOperation.getStatus())) {\n     System.out.printf(\"Operation fail error: %s%n\", modelOperation.getError().getMessage());\n }\n```"
  parameters:
  - description: "Unique operation ID."
    name: "operationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ModelOperation getOperation(String operationId)"
  returns:
    description: "The detailed information for the specified operation."
    type: "<xref href=\"com.azure.ai.formrecognizer.administration.models.ModelOperation?alt=com.azure.ai.formrecognizer.administration.models.ModelOperation&text=ModelOperation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getOperationWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.getOperationWithResponse(String operationId, Context context)"
  name: "getOperationWithResponse(String operationId, Context context)"
  nameWithType: "DocumentModelAdministrationClient.getOperationWithResponse(String operationId, Context context)"
  summary: "Get detailed operation information for the specified ID with Http response.\n\nThis operations fails if the operation ID used is past 24 hours.\n\n**Code sample**\n\n```java\nString operationId = \"{operation-id}\";\n Response<ModelOperation> response =\n     documentModelAdministrationClient.getOperationWithResponse(operationId, Context.NONE);\n System.out.printf(\"Response Status Code: %d.\", response.getStatusCode());\n ModelOperation modelOperation = response.getValue();\n System.out.printf(\"Operation ID: %s%n\", modelOperation.getOperationId());\n System.out.printf(\"Operation Kind: %s%n\", modelOperation.getKind());\n System.out.printf(\"Operation Status: %s%n\", modelOperation.getStatus());\n System.out.printf(\"Model ID created with this operation: %s%n\", modelOperation.getModelId());\n if (ModelOperationStatus.FAILED.equals(modelOperation.getStatus())) {\n     System.out.printf(\"Operation fail error: %s%n\", modelOperation.getError().getMessage());\n }\n```"
  parameters:
  - description: "Unique operation ID."
    name: "operationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ModelOperation> getOperationWithResponse(String operationId, Context context)"
  returns:
    description: "The detailed information for the specified operation."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.administration.models.ModelOperation?alt=com.azure.ai.formrecognizer.administration.models.ModelOperation&text=ModelOperation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.listModels()"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.listModels()"
  name: "listModels()"
  nameWithType: "DocumentModelAdministrationClient.listModels()"
  summary: "List information for each model on the Form Recognizer account that were built successfully.\n\n**Code sample**\n\n```java\ndocumentModelAdministrationClient.listModels()\n     .forEach(documentModel ->\n         System.out.printf(\"Model ID: %s, Model description: %s, Created on: %s.%n\",\n             documentModel.getModelId(),\n             documentModel.getDescription(),\n             documentModel.getCreatedOn())\n     );\n```"
  syntax: "public PagedIterable<DocumentModelInfo> listModels()"
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> of <xref uid=\"com.azure.ai.formrecognizer.administration.models.DocumentModelInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelInfo\"></xref> custom form model information."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.administration.models.DocumentModelInfo?alt=com.azure.ai.formrecognizer.administration.models.DocumentModelInfo&text=DocumentModelInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.listModels(com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.listModels(Context context)"
  name: "listModels(Context context)"
  nameWithType: "DocumentModelAdministrationClient.listModels(Context context)"
  summary: "List information for each model on the Form Recognizer account that were built successfully with a Http response and a specified <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref>.\n\n**Code sample**\n\n```java\ndocumentModelAdministrationClient.listModels(Context.NONE)\n     .forEach(documentModel ->\n         System.out.printf(\"Model ID: %s, Model description: %s, Created on: %s.%n\",\n             documentModel.getModelId(),\n             documentModel.getDescription(),\n             documentModel.getCreatedOn())\n     );\n```"
  parameters:
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<DocumentModelInfo> listModels(Context context)"
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> of <xref uid=\"com.azure.ai.formrecognizer.administration.models.DocumentModelInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelInfo\"></xref> custom form model information."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.administration.models.DocumentModelInfo?alt=com.azure.ai.formrecognizer.administration.models.DocumentModelInfo&text=DocumentModelInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.listOperations()"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.listOperations()"
  name: "listOperations()"
  nameWithType: "DocumentModelAdministrationClient.listOperations()"
  summary: "List information for each model operation on the Form Recognizer account in the past 24 hours.\n\n**Code sample**\n\n```java\nPagedIterable<ModelOperationInfo>\n     modelOperationInfo = documentModelAdministrationClient.listOperations();\n modelOperationInfo.forEach(modelOperation -> {\n     System.out.printf(\"Operation ID: %s%n\", modelOperation.getOperationId());\n     System.out.printf(\"Operation Status: %s%n\", modelOperation.getStatus());\n     System.out.printf(\"Operation Created on: %s%n\", modelOperation.getCreatedOn());\n     System.out.printf(\"Operation Percent completed: %d%n\", modelOperation.getPercentCompleted());\n     System.out.printf(\"Operation Kind: %s%n\", modelOperation.getKind());\n     System.out.printf(\"Operation Last updated on: %s%n\", modelOperation.getLastUpdatedOn());\n     System.out.printf(\"Operation resource location: %s%n\", modelOperation.getResourceLocation());\n });\n```"
  syntax: "public PagedIterable<ModelOperationInfo> listOperations()"
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> of <xref uid=\"com.azure.ai.formrecognizer.administration.models.ModelOperationInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ModelOperationInfo\"></xref> custom form model information."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.administration.models.ModelOperationInfo?alt=com.azure.ai.formrecognizer.administration.models.ModelOperationInfo&text=ModelOperationInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.listOperations(com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.listOperations(Context context)"
  name: "listOperations(Context context)"
  nameWithType: "DocumentModelAdministrationClient.listOperations(Context context)"
  summary: "List information for each operation on the Form Recognizer account in the past 24 hours with an HTTP response and a specified <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref>.\n\n**Code sample**\n\n```java\nPagedIterable<ModelOperationInfo>\n     modelOperationInfo = documentModelAdministrationClient.listOperations(Context.NONE);\n modelOperationInfo.forEach(modelOperation -> {\n     System.out.printf(\"Operation ID: %s%n\", modelOperation.getOperationId());\n     System.out.printf(\"Operation Status: %s%n\", modelOperation.getStatus());\n     System.out.printf(\"Operation Created on: %s%n\", modelOperation.getCreatedOn());\n     System.out.printf(\"Operation Percent completed: %d%n\", modelOperation.getPercentCompleted());\n     System.out.printf(\"Operation Kind: %s%n\", modelOperation.getKind());\n     System.out.printf(\"Operation Last updated on: %s%n\", modelOperation.getLastUpdatedOn());\n     System.out.printf(\"Operation resource location: %s%n\", modelOperation.getResourceLocation());\n });\n```"
  parameters:
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<ModelOperationInfo> listOperations(Context context)"
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> of <xref uid=\"com.azure.ai.formrecognizer.administration.models.ModelOperationInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ModelOperationInfo\"></xref> custom form model information."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.administration.models.ModelOperationInfo?alt=com.azure.ai.formrecognizer.administration.models.ModelOperationInfo&text=ModelOperationInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
metadata: {}
package: "com.azure.ai.formrecognizer.administration"
artifact: com.azure:azure-ai-formrecognizer:4.0.0-beta.5
