### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleMissingInstantiator*"
fullName: "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleMissingInstantiator"
name: "handleMissingInstantiator"
nameWithType: "DeserializationProblemHandler.handleMissingInstantiator"
members:
- uid: "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleMissingInstantiator(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>,com.fasterxml.jackson.core.JsonParser,java.lang.String)"
  fullName: "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleMissingInstantiator(DeserializationContext ctxt, Class<?> instClass, JsonParser p, String msg)"
  name: "handleMissingInstantiator(DeserializationContext ctxt, Class<?> instClass, JsonParser p, String msg)"
  nameWithType: "DeserializationProblemHandler.handleMissingInstantiator(DeserializationContext ctxt, Class<?> instClass, JsonParser p, String msg)"
  parameters:
  - name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.databind.DeserializationContext?alt=com.fasterxml.jackson.databind.DeserializationContext&text=DeserializationContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "instClass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "p"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - name: "msg"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Object handleMissingInstantiator(DeserializationContext ctxt, Class<?> instClass, JsonParser p, String msg)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleMissingInstantiator(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String)"
  fullName: "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleMissingInstantiator(DeserializationContext ctxt, Class<?> instClass, ValueInstantiator valueInsta, JsonParser p, String msg)"
  name: "handleMissingInstantiator(DeserializationContext ctxt, Class<?> instClass, ValueInstantiator valueInsta, JsonParser p, String msg)"
  nameWithType: "DeserializationProblemHandler.handleMissingInstantiator(DeserializationContext ctxt, Class<?> instClass, ValueInstantiator valueInsta, JsonParser p, String msg)"
  summary: "Method called when instance creation for a type fails due to lack of an instantiator. Method is called before actual deserialization from input is attempted, so handler may do one of following things:\n\n *  Indicate it does not know what to do by returning <xref uid=\"com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.NOT_HANDLED\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#NOT_HANDLED\"></xref>\n *  Throw a <xref uid=\"java.io.IOException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IOException\"></xref> to indicate specific fail message (instead of standard exception caller would throw\n *  Handle content to match (by consuming or skipping it), and return actual instantiated value (of type `targetType`) to use as replacement; value may be \\`null\\` as well as expected target type."
  parameters:
  - name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.databind.DeserializationContext?alt=com.fasterxml.jackson.databind.DeserializationContext&text=DeserializationContext\" data-throw-if-not-resolved=\"False\" />"
  - description: "Type that was to be instantiated"
    name: "instClass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "valueInsta"
    type: "<xref href=\"com.fasterxml.jackson.databind.deser.ValueInstantiator?alt=com.fasterxml.jackson.databind.deser.ValueInstantiator&text=ValueInstantiator\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parser to use for accessing content that needs handling, to either\n   use it or skip it (latter with <xref uid=\"com.fasterxml.jackson.core.JsonParser.skipChildren()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser#skipChildren()\"></xref>."
    name: "p"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - name: "msg"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Object handleMissingInstantiator(DeserializationContext ctxt, Class<?> instClass, ValueInstantiator valueInsta, JsonParser p, String msg)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Either <xref uid=\"com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.NOT_HANDLED\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#NOT_HANDLED\"></xref> to indicate that handler does not know\n    what to do (and exception may be thrown), or value to use (possibly\n    <code>null</code>"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.deser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
