### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.changefeed.LeaseManager.renew*"
fullName: "com.azure.cosmos.implementation.changefeed.LeaseManager.renew"
name: "renew"
nameWithType: "LeaseManager.renew"
members:
- uid: "com.azure.cosmos.implementation.changefeed.LeaseManager.renew(com.azure.cosmos.implementation.changefeed.Lease)"
  fullName: "com.azure.cosmos.implementation.changefeed.LeaseManager.renew(Lease lease)"
  name: "renew(Lease lease)"
  nameWithType: "LeaseManager.renew(Lease lease)"
  summary: "Renew the lease; leases are periodically renewed to prevent expiration. It can throw <xref uid=\"com.azure.cosmos.implementation.changefeed.exceptions.LeaseLostException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LeaseLostException\"></xref> if other host acquired the lease."
  parameters:
  - description: "the lease to renew."
    name: "lease"
    type: "<xref href=\"com.azure.cosmos.implementation.changefeed.Lease?alt=com.azure.cosmos.implementation.changefeed.Lease&text=Lease\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Lease> renew(Lease lease)"
  returns:
    description: "the updated lease."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.changefeed.Lease?alt=com.azure.cosmos.implementation.changefeed.Lease&text=Lease\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.changefeed"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
