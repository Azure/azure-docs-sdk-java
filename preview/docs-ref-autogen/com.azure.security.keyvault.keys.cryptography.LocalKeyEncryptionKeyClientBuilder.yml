### YamlMime:ManagedReference
items:
- uid: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder
  id: LocalKeyEncryptionKeyClientBuilder
  artifact: com.azure:azure-security-keyvault-keys:4.2.0-beta.4
  parent: com.azure.security.keyvault.keys.cryptography
  children:
  - com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.LocalKeyEncryptionKeyClientBuilder()
  - com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.buildAsyncKeyEncryptionKey(com.azure.security.keyvault.keys.models.JsonWebKey)
  - com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.buildKeyEncryptionKey(com.azure.security.keyvault.keys.models.JsonWebKey)
  langs:
  - java
  name: LocalKeyEncryptionKeyClientBuilder
  nameWithType: LocalKeyEncryptionKeyClientBuilder
  fullName: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder
  type: Class
  package: com.azure.security.keyvault.keys.cryptography
  summary: >-
    This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid="com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyAsyncClient" data-throw-if-not-resolved="false">AsyncKeyEncryptionKey</xref> and <xref uid="com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClient" data-throw-if-not-resolved="false">KeyEncryptionKey</xref>, by calling <xref uid="com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.buildAsyncKeyEncryptionKey(com.azure.security.keyvault.keys.models.JsonWebKey)" data-throw-if-not-resolved="false">LocalKeyEncryptionKeyClientBuilder#buildAsyncKeyEncryptionKey(JsonWebKey)</xref> and <xref uid="com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.buildKeyEncryptionKey(com.azure.security.keyvault.keys.models.JsonWebKey)" data-throw-if-not-resolved="false">LocalKeyEncryptionKeyClientBuilder#buildKeyEncryptionKey(JsonWebKey)</xref> respectively. It constructs an instance of the desired client.


    The minimal configuration options required by <xref uid="com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder" data-throw-if-not-resolved="false">LocalKeyEncryptionKeyClientBuilder</xref> to build <xref uid="com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyAsyncClient" data-throw-if-not-resolved="false">LocalKeyEncryptionKeyAsyncClient</xref> or <xref uid="com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClient" data-throw-if-not-resolved="false">LocalKeyEncryptionKeyClient</xref> is <xref uid="com.azure.security.keyvault.keys.models.JsonWebKey" data-throw-if-not-resolved="false">json web key</xref>).
  syntax:
    content: public final class LocalKeyEncryptionKeyClientBuilder
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.LocalKeyEncryptionKeyClientBuilder()
  id: LocalKeyEncryptionKeyClientBuilder()
  artifact: com.azure:azure-security-keyvault-keys:4.2.0-beta.4
  parent: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder
  langs:
  - java
  name: LocalKeyEncryptionKeyClientBuilder()
  nameWithType: LocalKeyEncryptionKeyClientBuilder.LocalKeyEncryptionKeyClientBuilder()
  fullName: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.LocalKeyEncryptionKeyClientBuilder()
  overload: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.LocalKeyEncryptionKeyClientBuilder*
  type: Constructor
  package: com.azure.security.keyvault.keys.cryptography
  syntax:
    content: public LocalKeyEncryptionKeyClientBuilder()
- uid: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.buildAsyncKeyEncryptionKey(com.azure.security.keyvault.keys.models.JsonWebKey)
  id: buildAsyncKeyEncryptionKey(com.azure.security.keyvault.keys.models.JsonWebKey)
  artifact: com.azure:azure-security-keyvault-keys:4.2.0-beta.4
  parent: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder
  langs:
  - java
  name: buildAsyncKeyEncryptionKey(JsonWebKey key)
  nameWithType: LocalKeyEncryptionKeyClientBuilder.buildAsyncKeyEncryptionKey(JsonWebKey key)
  fullName: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.buildAsyncKeyEncryptionKey(JsonWebKey key)
  overload: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.buildAsyncKeyEncryptionKey*
  type: Method
  package: com.azure.security.keyvault.keys.cryptography
  summary: >-
    Creates a <xref uid="com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClient" data-throw-if-not-resolved="false">LocalKeyEncryptionKeyClient</xref> based on options set in the builder. Every time `buildAsyncKeyEncryptionKey(String)` is called, a new instance of <xref uid="com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyAsyncClient" data-throw-if-not-resolved="false">LocalKeyEncryptionKeyAsyncClient</xref> is created.


    The `key` is required to build the <xref uid="com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyAsyncClient" data-throw-if-not-resolved="false">client</xref>.
  syntax:
    content: public Mono<? extends AsyncKeyEncryptionKey> buildAsyncKeyEncryptionKey(JsonWebKey key)
    parameters:
    - id: key
      type: com.azure.security.keyvault.keys.models.JsonWebKey
      description: the key to be used for crypto operations.
    return:
      type: reactor.core.publisher.Mono<? extends com.azure.core.cryptography.AsyncKeyEncryptionKey>
      description: A <xref uid="com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyAsyncClient" data-throw-if-not-resolved="false">LocalKeyEncryptionKeyAsyncClient</xref> with the options set from the builder.
- uid: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.buildKeyEncryptionKey(com.azure.security.keyvault.keys.models.JsonWebKey)
  id: buildKeyEncryptionKey(com.azure.security.keyvault.keys.models.JsonWebKey)
  artifact: com.azure:azure-security-keyvault-keys:4.2.0-beta.4
  parent: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder
  langs:
  - java
  name: buildKeyEncryptionKey(JsonWebKey key)
  nameWithType: LocalKeyEncryptionKeyClientBuilder.buildKeyEncryptionKey(JsonWebKey key)
  fullName: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.buildKeyEncryptionKey(JsonWebKey key)
  overload: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.buildKeyEncryptionKey*
  type: Method
  package: com.azure.security.keyvault.keys.cryptography
  summary: >-
    Creates a <xref uid="com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClient" data-throw-if-not-resolved="false">LocalKeyEncryptionKeyClient</xref> based on options set in the builder. Every time `buildKeyEncryptionKey(String)` is called, a new instance of <xref uid="com.azure.core.cryptography.KeyEncryptionKey" data-throw-if-not-resolved="false">KeyEncryptionKey</xref> is created.


    The `key` is required to build the <xref uid="com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClient" data-throw-if-not-resolved="false">client</xref>.
  syntax:
    content: public KeyEncryptionKey buildKeyEncryptionKey(JsonWebKey key)
    parameters:
    - id: key
      type: com.azure.security.keyvault.keys.models.JsonWebKey
      description: the key to be used for crypto operations.
    return:
      type: com.azure.core.cryptography.KeyEncryptionKey
      description: A <xref uid="com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClient" data-throw-if-not-resolved="false">LocalKeyEncryptionKeyClient</xref> with the options set from the builder.
references:
- uid: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.LocalKeyEncryptionKeyClientBuilder*
  name: LocalKeyEncryptionKeyClientBuilder
  nameWithType: LocalKeyEncryptionKeyClientBuilder.LocalKeyEncryptionKeyClientBuilder
  fullName: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.LocalKeyEncryptionKeyClientBuilder
  package: com.azure.security.keyvault.keys.cryptography
- uid: com.azure.security.keyvault.keys.models.JsonWebKey
  name: JsonWebKey
  nameWithType: JsonWebKey
  fullName: com.azure.security.keyvault.keys.models.JsonWebKey
- uid: com.azure.core.cryptography.KeyEncryptionKey
  spec.java:
  - uid: com.azure.core.cryptography.KeyEncryptionKey
    name: KeyEncryptionKey
    fullName: com.azure.core.cryptography.KeyEncryptionKey
- uid: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.buildKeyEncryptionKey*
  name: buildKeyEncryptionKey
  nameWithType: LocalKeyEncryptionKeyClientBuilder.buildKeyEncryptionKey
  fullName: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.buildKeyEncryptionKey
  package: com.azure.security.keyvault.keys.cryptography
- uid: reactor.core.publisher.Mono<? extends com.azure.core.cryptography.AsyncKeyEncryptionKey>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: '? extends com.azure.core.cryptography.AsyncKeyEncryptionKey'
    name: AsyncKeyEncryptionKey
    fullName: '? extends com.azure.core.cryptography.AsyncKeyEncryptionKey'
  - name: '>'
    fullName: '>'
- uid: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.buildAsyncKeyEncryptionKey*
  name: buildAsyncKeyEncryptionKey
  nameWithType: LocalKeyEncryptionKeyClientBuilder.buildAsyncKeyEncryptionKey
  fullName: com.azure.security.keyvault.keys.cryptography.LocalKeyEncryptionKeyClientBuilder.buildAsyncKeyEncryptionKey
  package: com.azure.security.keyvault.keys.cryptography
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: '? extends com.azure.core.cryptography.AsyncKeyEncryptionKey'
  name: '? extends AsyncKeyEncryptionKey'
  nameWithType: '? extends AsyncKeyEncryptionKey'
  fullName: '? extends com.azure.core.cryptography.AsyncKeyEncryptionKey'
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
