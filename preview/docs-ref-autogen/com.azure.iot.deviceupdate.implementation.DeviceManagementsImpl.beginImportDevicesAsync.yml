### YamlMime:JavaMember
uid: "com.azure.iot.deviceupdate.implementation.DeviceManagementsImpl.beginImportDevicesAsync*"
fullName: "com.azure.iot.deviceupdate.implementation.DeviceManagementsImpl.beginImportDevicesAsync"
name: "beginImportDevicesAsync"
nameWithType: "DeviceManagementsImpl.beginImportDevicesAsync"
members:
- uid: "com.azure.iot.deviceupdate.implementation.DeviceManagementsImpl.beginImportDevicesAsync(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.iot.deviceupdate.implementation.DeviceManagementsImpl.beginImportDevicesAsync(BinaryData importType, RequestOptions requestOptions)"
  name: "beginImportDevicesAsync(BinaryData importType, RequestOptions requestOptions)"
  nameWithType: "DeviceManagementsImpl.beginImportDevicesAsync(BinaryData importType, RequestOptions requestOptions)"
  summary: "Import existing devices from IoT Hub.\n\n**Query Parameters**\n\n    | ---------- | ------ | -------- | --------------- |\n    | Name       | Type   | Required | Description     |\n    | apiVersion | String | Yes      | Api Version     |\n    | action     | String | Yes      | Devices action. |\n\n**Request Body Schema**\n\n```java\nString(Devices/Modules/All)\n```"
  parameters:
  - description: "The types of devices to import."
    name: "importType"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BinaryData,BinaryData> beginImportDevicesAsync(BinaryData importType, RequestOptions requestOptions)"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.iot.deviceupdate.implementation.DeviceManagementsImpl.beginImportDevicesAsync(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.iot.deviceupdate.implementation.DeviceManagementsImpl.beginImportDevicesAsync(BinaryData importType, RequestOptions requestOptions, Context context)"
  name: "beginImportDevicesAsync(BinaryData importType, RequestOptions requestOptions, Context context)"
  nameWithType: "DeviceManagementsImpl.beginImportDevicesAsync(BinaryData importType, RequestOptions requestOptions, Context context)"
  summary: "Import existing devices from IoT Hub.\n\n**Query Parameters**\n\n    | ---------- | ------ | -------- | --------------- |\n    | Name       | Type   | Required | Description     |\n    | apiVersion | String | Yes      | Api Version     |\n    | action     | String | Yes      | Devices action. |\n\n**Request Body Schema**\n\n```java\nString(Devices/Modules/All)\n```"
  parameters:
  - description: "The types of devices to import."
    name: "importType"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BinaryData,BinaryData> beginImportDevicesAsync(BinaryData importType, RequestOptions requestOptions, Context context)"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.iot.deviceupdate.implementation"
artifact: com.azure:azure-iot-deviceupdate:1.0.0-beta.2
