### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.nio.AsyncClientConnectionManager
  id: AsyncClientConnectionManager
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.nio
  children:
  - org.apache.hc.client5.http.nio.AsyncClientConnectionManager.connect(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint,org.apache.hc.core5.reactor.ConnectionInitiator,org.apache.hc.core5.util.Timeout,java.lang.Object,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint>)
  - org.apache.hc.client5.http.nio.AsyncClientConnectionManager.lease(java.lang.String,org.apache.hc.client5.http.HttpRoute,java.lang.Object,org.apache.hc.core5.util.Timeout,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint>)
  - org.apache.hc.client5.http.nio.AsyncClientConnectionManager.release(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint,java.lang.Object,org.apache.hc.core5.util.TimeValue)
  - org.apache.hc.client5.http.nio.AsyncClientConnectionManager.upgrade(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint,java.lang.Object,org.apache.hc.core5.http.protocol.HttpContext)
  langs:
  - java
  name: AsyncClientConnectionManager
  nameWithType: AsyncClientConnectionManager
  fullName: org.apache.hc.client5.http.nio.AsyncClientConnectionManager
  type: Interface
  package: org.apache.hc.client5.http.nio
  summary: >-
    Represents a manager of persistent non-blocking client connections.


    The purpose of an HTTP connection manager is to serve as a factory for new HTTP connections, manage persistent connections and synchronize access to persistent connections making sure that only one thread of execution can have access to a connection at a time.


    Implementations of this interface must be thread-safe. Access to shared data must be synchronized as methods of this interface may be executed from multiple threads.
  syntax:
    content: public interface AsyncClientConnectionManager extends ModalCloseable
  implements:
  - org.apache.hc.core5.io.ModalCloseable
- uid: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.connect(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint,org.apache.hc.core5.reactor.ConnectionInitiator,org.apache.hc.core5.util.Timeout,java.lang.Object,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint>)
  id: connect(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint,org.apache.hc.core5.reactor.ConnectionInitiator,org.apache.hc.core5.util.Timeout,java.lang.Object,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.nio.AsyncClientConnectionManager
  langs:
  - java
  name: connect(AsyncConnectionEndpoint endpoint, ConnectionInitiator connectionInitiator, Timeout connectTimeout, Object attachment, HttpContext context, FutureCallback<AsyncConnectionEndpoint> callback)
  nameWithType: AsyncClientConnectionManager.connect(AsyncConnectionEndpoint endpoint, ConnectionInitiator connectionInitiator, Timeout connectTimeout, Object attachment, HttpContext context, FutureCallback<AsyncConnectionEndpoint> callback)
  fullName: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.connect(AsyncConnectionEndpoint endpoint, ConnectionInitiator connectionInitiator, Timeout connectTimeout, Object attachment, HttpContext context, FutureCallback<AsyncConnectionEndpoint> callback)
  overload: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.connect*
  type: Method
  package: org.apache.hc.client5.http.nio
  summary: Connects the endpoint to the initial hop (connection target in case of a direct route or to the first proxy hop in case of a route via a proxy or multiple proxies).
  syntax:
    content: public abstract Future<AsyncConnectionEndpoint> connect(AsyncConnectionEndpoint endpoint, ConnectionInitiator connectionInitiator, Timeout connectTimeout, Object attachment, HttpContext context, FutureCallback<AsyncConnectionEndpoint> callback)
    parameters:
    - id: endpoint
      type: org.apache.hc.client5.http.nio.AsyncConnectionEndpoint
      description: the managed endpoint.
    - id: connectionInitiator
      type: org.apache.hc.core5.reactor.ConnectionInitiator
    - id: connectTimeout
      type: org.apache.hc.core5.util.Timeout
      description: connect timeout.
    - id: attachment
      type: java.lang.Object
      description: connect request attachment.
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: the actual HTTP context.
    - id: callback
      type: org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint>
      description: result callback.
    return:
      type: java.util.concurrent.Future<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint>
- uid: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.lease(java.lang.String,org.apache.hc.client5.http.HttpRoute,java.lang.Object,org.apache.hc.core5.util.Timeout,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint>)
  id: lease(java.lang.String,org.apache.hc.client5.http.HttpRoute,java.lang.Object,org.apache.hc.core5.util.Timeout,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.nio.AsyncClientConnectionManager
  langs:
  - java
  name: lease(String id, HttpRoute route, Object state, Timeout requestTimeout, FutureCallback<AsyncConnectionEndpoint> callback)
  nameWithType: AsyncClientConnectionManager.lease(String id, HttpRoute route, Object state, Timeout requestTimeout, FutureCallback<AsyncConnectionEndpoint> callback)
  fullName: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.lease(String id, HttpRoute route, Object state, Timeout requestTimeout, FutureCallback<AsyncConnectionEndpoint> callback)
  overload: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.lease*
  type: Method
  package: org.apache.hc.client5.http.nio
  summary: >-
    Returns a <xref uid="java.util.concurrent.Future" data-throw-if-not-resolved="false">Future</xref> object which can be used to obtain an <xref uid="org.apache.hc.client5.http.nio.AsyncConnectionEndpoint" data-throw-if-not-resolved="false">AsyncConnectionEndpoint</xref> or to cancel the request by calling <xref uid="java.util.concurrent.Future.cancel*" data-throw-if-not-resolved="false">Future#cancel(boolean)</xref>.


    Please note that newly allocated endpoints can be leased <xref uid="org.apache.hc.client5.http.nio.AsyncConnectionEndpoint.isConnected()" data-throw-if-not-resolved="false">disconnected</xref>. The consumer of the endpoint is responsible for fully establishing the route to the endpoint target by calling <xref uid="#connect(AsyncConnectionEndpoint,
     ConnectionInitiator, Timeout, Object, HttpContext, FutureCallback)" data-throw-if-not-resolved="false">#connect(AsyncConnectionEndpoint,
     ConnectionInitiator, Timeout, Object, HttpContext, FutureCallback)</xref> in order to connect directly to the target or to the first proxy hop, and optionally calling <xref uid="org.apache.hc.client5.http.nio.AsyncClientConnectionManager.upgrade(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint,java.lang.Object,org.apache.hc.core5.http.protocol.HttpContext)" data-throw-if-not-resolved="false">#upgrade(AsyncConnectionEndpoint, Object, HttpContext)</xref> method to upgrade the underlying transport to Transport Layer Security after having executed a `CONNECT` method to all intermediate proxy hops.
  syntax:
    content: public abstract Future<AsyncConnectionEndpoint> lease(String id, HttpRoute route, Object state, Timeout requestTimeout, FutureCallback<AsyncConnectionEndpoint> callback)
    parameters:
    - id: id
      type: java.lang.String
      description: unique operation ID or <code>null</code>.
    - id: route
      type: org.apache.hc.client5.http.HttpRoute
      description: HTTP route of the requested connection.
    - id: state
      type: java.lang.Object
      description: >-
        expected state of the connection or <code>null</code>
                      if the connection is not expected to carry any state.
    - id: requestTimeout
      type: org.apache.hc.core5.util.Timeout
      description: lease request timeout.
    - id: callback
      type: org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint>
      description: result callback.
    return:
      type: java.util.concurrent.Future<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint>
- uid: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.release(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint,java.lang.Object,org.apache.hc.core5.util.TimeValue)
  id: release(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint,java.lang.Object,org.apache.hc.core5.util.TimeValue)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.nio.AsyncClientConnectionManager
  langs:
  - java
  name: release(AsyncConnectionEndpoint endpoint, Object newState, TimeValue validDuration)
  nameWithType: AsyncClientConnectionManager.release(AsyncConnectionEndpoint endpoint, Object newState, TimeValue validDuration)
  fullName: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.release(AsyncConnectionEndpoint endpoint, Object newState, TimeValue validDuration)
  overload: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.release*
  type: Method
  package: org.apache.hc.client5.http.nio
  summary: Releases the endpoint back to the manager making it potentially re-usable by other consumers. Optionally, the maximum period of how long the manager should keep the connection alive can be defined using `validDuration` and `timeUnit` parameters.
  syntax:
    content: public abstract void release(AsyncConnectionEndpoint endpoint, Object newState, TimeValue validDuration)
    parameters:
    - id: endpoint
      type: org.apache.hc.client5.http.nio.AsyncConnectionEndpoint
      description: the managed endpoint.
    - id: newState
      type: java.lang.Object
      description: the new connection state of <code>null</code> if state-less.
    - id: validDuration
      type: org.apache.hc.core5.util.TimeValue
      description: the duration of time this connection is valid for reuse.
- uid: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.upgrade(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint,java.lang.Object,org.apache.hc.core5.http.protocol.HttpContext)
  id: upgrade(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint,java.lang.Object,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.nio.AsyncClientConnectionManager
  langs:
  - java
  name: upgrade(AsyncConnectionEndpoint endpoint, Object attachment, HttpContext context)
  nameWithType: AsyncClientConnectionManager.upgrade(AsyncConnectionEndpoint endpoint, Object attachment, HttpContext context)
  fullName: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.upgrade(AsyncConnectionEndpoint endpoint, Object attachment, HttpContext context)
  overload: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.upgrade*
  type: Method
  package: org.apache.hc.client5.http.nio
  summary: Upgrades transport security of the given endpoint by using the TLS security protocol.
  syntax:
    content: public abstract void upgrade(AsyncConnectionEndpoint endpoint, Object attachment, HttpContext context)
    parameters:
    - id: endpoint
      type: org.apache.hc.client5.http.nio.AsyncConnectionEndpoint
      description: the managed endpoint.
    - id: attachment
      type: java.lang.Object
      description: the attachment the upgrade attachment object.
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: the actual HTTP context.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.hc.client5.http.HttpRoute
  name: HttpRoute
  nameWithType: HttpRoute
  fullName: org.apache.hc.client5.http.HttpRoute
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: org.apache.hc.core5.util.Timeout
  name: Timeout
  nameWithType: Timeout
  fullName: org.apache.hc.core5.util.Timeout
- uid: org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint>
  spec.java:
  - uid: org.apache.hc.core5.concurrent.FutureCallback
    name: FutureCallback
    fullName: org.apache.hc.core5.concurrent.FutureCallback
  - name: <
    fullName: <
  - uid: org.apache.hc.client5.http.nio.AsyncConnectionEndpoint
    name: AsyncConnectionEndpoint
    fullName: org.apache.hc.client5.http.nio.AsyncConnectionEndpoint
  - name: '>'
    fullName: '>'
- uid: java.util.concurrent.Future<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint>
  spec.java:
  - uid: java.util.concurrent.Future
    name: Future
    fullName: java.util.concurrent.Future
  - name: <
    fullName: <
  - uid: org.apache.hc.client5.http.nio.AsyncConnectionEndpoint
    name: AsyncConnectionEndpoint
    fullName: org.apache.hc.client5.http.nio.AsyncConnectionEndpoint
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.lease*
  name: lease
  nameWithType: AsyncClientConnectionManager.lease
  fullName: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.lease
  package: org.apache.hc.client5.http.nio
- uid: org.apache.hc.client5.http.nio.AsyncConnectionEndpoint
  name: AsyncConnectionEndpoint
  nameWithType: AsyncConnectionEndpoint
  fullName: org.apache.hc.client5.http.nio.AsyncConnectionEndpoint
- uid: org.apache.hc.core5.util.TimeValue
  name: TimeValue
  nameWithType: TimeValue
  fullName: org.apache.hc.core5.util.TimeValue
- uid: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.release*
  name: release
  nameWithType: AsyncClientConnectionManager.release
  fullName: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.release
  package: org.apache.hc.client5.http.nio
- uid: org.apache.hc.core5.reactor.ConnectionInitiator
  name: ConnectionInitiator
  nameWithType: ConnectionInitiator
  fullName: org.apache.hc.core5.reactor.ConnectionInitiator
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.connect*
  name: connect
  nameWithType: AsyncClientConnectionManager.connect
  fullName: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.connect
  package: org.apache.hc.client5.http.nio
- uid: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.upgrade*
  name: upgrade
  nameWithType: AsyncClientConnectionManager.upgrade
  fullName: org.apache.hc.client5.http.nio.AsyncClientConnectionManager.upgrade
  package: org.apache.hc.client5.http.nio
- uid: org.apache.hc.core5.io.ModalCloseable
  name: ModalCloseable
  nameWithType: ModalCloseable
  fullName: org.apache.hc.core5.io.ModalCloseable
- uid: org.apache.hc.core5.concurrent.FutureCallback
  name: FutureCallback
  nameWithType: FutureCallback
  fullName: org.apache.hc.core5.concurrent.FutureCallback
- uid: java.util.concurrent.Future
  name: Future
  nameWithType: Future
  fullName: java.util.concurrent.Future
