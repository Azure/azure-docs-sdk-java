### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity"
fullName: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity"
name: "SynapseNotebookActivity"
nameWithType: "SynapseNotebookActivity"
summary: "Execute Synapse notebook activity."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.analytics.synapse.artifacts.models.Activity?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.analytics.synapse.artifacts.models.Activity.getAdditionalProperties()"
- "com.azure.analytics.synapse.artifacts.models.Activity.getDependsOn()"
- "com.azure.analytics.synapse.artifacts.models.Activity.getDescription()"
- "com.azure.analytics.synapse.artifacts.models.Activity.getName()"
- "com.azure.analytics.synapse.artifacts.models.Activity.getUserProperties()"
- "com.azure.analytics.synapse.artifacts.models.Activity.setAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.getLinkedServiceName()"
- "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.getPolicy()"
- "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setDependsOn(java.util.List<com.azure.analytics.synapse.artifacts.models.ActivityDependency>)"
- "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setDescription(java.lang.String)"
- "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setLinkedServiceName(com.azure.analytics.synapse.artifacts.models.LinkedServiceReference)"
- "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setName(java.lang.String)"
- "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setPolicy(com.azure.analytics.synapse.artifacts.models.ActivityPolicy)"
- "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setUserProperties(java.util.List<com.azure.analytics.synapse.artifacts.models.UserProperty>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class SynapseNotebookActivity extends ExecutionActivity"
constructors:
- uid: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.SynapseNotebookActivity()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.SynapseNotebookActivity()"
  name: "SynapseNotebookActivity()"
  nameWithType: "SynapseNotebookActivity.SynapseNotebookActivity()"
  syntax: "public SynapseNotebookActivity()"
methods:
- uid: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.getNotebook()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.getNotebook()"
  name: "getNotebook()"
  nameWithType: "SynapseNotebookActivity.getNotebook()"
  summary: "Get the notebook property: Synapse notebook reference."
  syntax: "public SynapseNotebookReference getNotebook()"
  desc: "Get the notebook property: Synapse notebook reference."
  returns:
    description: "the notebook value."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SynapseNotebookReference?alt=com.azure.analytics.synapse.artifacts.models.SynapseNotebookReference&text=SynapseNotebookReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.getParameters()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.getParameters()"
  name: "getParameters()"
  nameWithType: "SynapseNotebookActivity.getParameters()"
  summary: "Get the parameters property: Notebook parameters."
  syntax: "public Map<String,NotebookParameter> getParameters()"
  desc: "Get the parameters property: Notebook parameters."
  returns:
    description: "the parameters value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.analytics.synapse.artifacts.models.NotebookParameter?alt=com.azure.analytics.synapse.artifacts.models.NotebookParameter&text=NotebookParameter\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.getSparkPool()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.getSparkPool()"
  name: "getSparkPool()"
  nameWithType: "SynapseNotebookActivity.getSparkPool()"
  summary: "Get the spark<wbr>Pool property: The name of the big data pool which will be used to execute the notebook."
  syntax: "public BigDataPoolParametrizationReference getSparkPool()"
  desc: "Get the sparkPool property: The name of the big data pool which will be used to execute the notebook."
  returns:
    description: "the sparkPool value."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolParametrizationReference?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolParametrizationReference&text=BigDataPoolParametrizationReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setDependsOn(java.util.List<com.azure.analytics.synapse.artifacts.models.ActivityDependency>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setDependsOn(List<ActivityDependency> dependsOn)"
  name: "setDependsOn(List<ActivityDependency> dependsOn)"
  nameWithType: "SynapseNotebookActivity.setDependsOn(List<ActivityDependency> dependsOn)"
  summary: "Set the depends<wbr>On property: Activity depends on condition."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setDependsOn(java.util.List<com.azure.analytics.synapse.artifacts.models.ActivityDependency>)"
  parameters:
  - name: "dependsOn"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.ActivityDependency?alt=com.azure.analytics.synapse.artifacts.models.ActivityDependency&text=ActivityDependency\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SynapseNotebookActivity setDependsOn(List<ActivityDependency> dependsOn)"
  desc: "Set the dependsOn property: Activity depends on condition."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity?alt=com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity&text=SynapseNotebookActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setDescription(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setDescription(String description)"
  name: "setDescription(String description)"
  nameWithType: "SynapseNotebookActivity.setDescription(String description)"
  summary: "Set the description property: Activity description."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SynapseNotebookActivity setDescription(String description)"
  desc: "Set the description property: Activity description."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity?alt=com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity&text=SynapseNotebookActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setLinkedServiceName(com.azure.analytics.synapse.artifacts.models.LinkedServiceReference)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setLinkedServiceName(LinkedServiceReference linkedServiceName)"
  name: "setLinkedServiceName(LinkedServiceReference linkedServiceName)"
  nameWithType: "SynapseNotebookActivity.setLinkedServiceName(LinkedServiceReference linkedServiceName)"
  summary: "Set the linked<wbr>Service<wbr>Name property: Linked service reference."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setLinkedServiceName(com.azure.analytics.synapse.artifacts.models.LinkedServiceReference)"
  parameters:
  - name: "linkedServiceName"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.LinkedServiceReference?alt=com.azure.analytics.synapse.artifacts.models.LinkedServiceReference&text=LinkedServiceReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SynapseNotebookActivity setLinkedServiceName(LinkedServiceReference linkedServiceName)"
  desc: "Set the linkedServiceName property: Linked service reference."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity?alt=com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity&text=SynapseNotebookActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setName(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setName(String name)"
  name: "setName(String name)"
  nameWithType: "SynapseNotebookActivity.setName(String name)"
  summary: "Set the name property: Activity name."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setName(java.lang.String)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SynapseNotebookActivity setName(String name)"
  desc: "Set the name property: Activity name."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity?alt=com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity&text=SynapseNotebookActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setNotebook(com.azure.analytics.synapse.artifacts.models.SynapseNotebookReference)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setNotebook(SynapseNotebookReference notebook)"
  name: "setNotebook(SynapseNotebookReference notebook)"
  nameWithType: "SynapseNotebookActivity.setNotebook(SynapseNotebookReference notebook)"
  summary: "Set the notebook property: Synapse notebook reference."
  parameters:
  - description: "the notebook value to set."
    name: "notebook"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SynapseNotebookReference?alt=com.azure.analytics.synapse.artifacts.models.SynapseNotebookReference&text=SynapseNotebookReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SynapseNotebookActivity setNotebook(SynapseNotebookReference notebook)"
  desc: "Set the notebook property: Synapse notebook reference."
  returns:
    description: "the SynapseNotebookActivity object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity?alt=com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity&text=SynapseNotebookActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setParameters(java.util.Map<java.lang.String,com.azure.analytics.synapse.artifacts.models.NotebookParameter>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setParameters(Map<String,NotebookParameter> parameters)"
  name: "setParameters(Map<String,NotebookParameter> parameters)"
  nameWithType: "SynapseNotebookActivity.setParameters(Map<String,NotebookParameter> parameters)"
  summary: "Set the parameters property: Notebook parameters."
  parameters:
  - description: "the parameters value to set."
    name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.analytics.synapse.artifacts.models.NotebookParameter?alt=com.azure.analytics.synapse.artifacts.models.NotebookParameter&text=NotebookParameter\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SynapseNotebookActivity setParameters(Map<String,NotebookParameter> parameters)"
  desc: "Set the parameters property: Notebook parameters."
  returns:
    description: "the SynapseNotebookActivity object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity?alt=com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity&text=SynapseNotebookActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setPolicy(com.azure.analytics.synapse.artifacts.models.ActivityPolicy)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setPolicy(ActivityPolicy policy)"
  name: "setPolicy(ActivityPolicy policy)"
  nameWithType: "SynapseNotebookActivity.setPolicy(ActivityPolicy policy)"
  summary: "Set the policy property: Activity policy."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setPolicy(com.azure.analytics.synapse.artifacts.models.ActivityPolicy)"
  parameters:
  - name: "policy"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ActivityPolicy?alt=com.azure.analytics.synapse.artifacts.models.ActivityPolicy&text=ActivityPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SynapseNotebookActivity setPolicy(ActivityPolicy policy)"
  desc: "Set the policy property: Activity policy."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity?alt=com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity&text=SynapseNotebookActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setSparkPool(com.azure.analytics.synapse.artifacts.models.BigDataPoolParametrizationReference)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setSparkPool(BigDataPoolParametrizationReference sparkPool)"
  name: "setSparkPool(BigDataPoolParametrizationReference sparkPool)"
  nameWithType: "SynapseNotebookActivity.setSparkPool(BigDataPoolParametrizationReference sparkPool)"
  summary: "Set the spark<wbr>Pool property: The name of the big data pool which will be used to execute the notebook."
  parameters:
  - description: "the sparkPool value to set."
    name: "sparkPool"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolParametrizationReference?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolParametrizationReference&text=BigDataPoolParametrizationReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SynapseNotebookActivity setSparkPool(BigDataPoolParametrizationReference sparkPool)"
  desc: "Set the sparkPool property: The name of the big data pool which will be used to execute the notebook."
  returns:
    description: "the SynapseNotebookActivity object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity?alt=com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity&text=SynapseNotebookActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setUserProperties(java.util.List<com.azure.analytics.synapse.artifacts.models.UserProperty>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity.setUserProperties(List<UserProperty> userProperties)"
  name: "setUserProperties(List<UserProperty> userProperties)"
  nameWithType: "SynapseNotebookActivity.setUserProperties(List<UserProperty> userProperties)"
  summary: "Set the user<wbr>Properties property: Activity user properties."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setUserProperties(java.util.List<com.azure.analytics.synapse.artifacts.models.UserProperty>)"
  parameters:
  - name: "userProperties"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.UserProperty?alt=com.azure.analytics.synapse.artifacts.models.UserProperty&text=UserProperty\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SynapseNotebookActivity setUserProperties(List<UserProperty> userProperties)"
  desc: "Set the userProperties property: Activity user properties."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity?alt=com.azure.analytics.synapse.artifacts.models.SynapseNotebookActivity&text=SynapseNotebookActivity\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Execute Synapse notebook activity."
metadata: {}
package: "com.azure.analytics.synapse.artifacts.models"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
