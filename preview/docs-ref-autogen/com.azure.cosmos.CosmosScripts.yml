### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.CosmosScripts"
  id: "CosmosScripts"
  parent: "com.azure.cosmos"
  children:
  - "com.azure.cosmos.CosmosScripts.CosmosScripts(com.azure.cosmos.CosmosContainer,com.azure.cosmos.CosmosAsyncScripts)"
  - "com.azure.cosmos.CosmosScripts.convertResponse(com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse)"
  - "com.azure.cosmos.CosmosScripts.convertResponse(com.azure.cosmos.models.CosmosAsyncTriggerResponse)"
  - "com.azure.cosmos.CosmosScripts.convertResponse(com.azure.cosmos.models.CosmosAsyncUserDefinedFunctionResponse)"
  - "com.azure.cosmos.CosmosScripts.createStoredProcedure(com.azure.cosmos.models.CosmosStoredProcedureProperties)"
  - "com.azure.cosmos.CosmosScripts.createStoredProcedure(com.azure.cosmos.models.CosmosStoredProcedureProperties,com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)"
  - "com.azure.cosmos.CosmosScripts.createTrigger(com.azure.cosmos.models.CosmosTriggerProperties)"
  - "com.azure.cosmos.CosmosScripts.createUserDefinedFunction(com.azure.cosmos.models.CosmosUserDefinedFunctionProperties)"
  - "com.azure.cosmos.CosmosScripts.getStoredProcedure(java.lang.String)"
  - "com.azure.cosmos.CosmosScripts.getTrigger(java.lang.String)"
  - "com.azure.cosmos.CosmosScripts.getUserDefinedFunction(java.lang.String)"
  - "com.azure.cosmos.CosmosScripts.mapStoredProcedureResponseAndBlock(reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse>)"
  - "com.azure.cosmos.CosmosScripts.mapTriggerResponseAndBlock(reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosAsyncTriggerResponse>)"
  - "com.azure.cosmos.CosmosScripts.mapUDFResponseAndBlock(reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosAsyncUserDefinedFunctionResponse>)"
  - "com.azure.cosmos.CosmosScripts.queryStoredProcedures(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.FeedOptions)"
  - "com.azure.cosmos.CosmosScripts.queryStoredProcedures(java.lang.String,com.azure.cosmos.models.FeedOptions)"
  - "com.azure.cosmos.CosmosScripts.queryTriggers(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.FeedOptions)"
  - "com.azure.cosmos.CosmosScripts.queryTriggers(java.lang.String,com.azure.cosmos.models.FeedOptions)"
  - "com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.FeedOptions)"
  - "com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions(java.lang.String,com.azure.cosmos.models.FeedOptions)"
  - "com.azure.cosmos.CosmosScripts.readAllStoredProcedures(com.azure.cosmos.models.FeedOptions)"
  - "com.azure.cosmos.CosmosScripts.readAllTriggers(com.azure.cosmos.models.FeedOptions)"
  - "com.azure.cosmos.CosmosScripts.readAllUserDefinedFunctions(com.azure.cosmos.models.FeedOptions)"
  langs:
  - "java"
  name: "CosmosScripts"
  nameWithType: "CosmosScripts"
  fullName: "com.azure.cosmos.CosmosScripts"
  type: "Class"
  package: "com.azure.cosmos"
  summary: "The type Cosmos sync scripts."
  syntax:
    content: "public class CosmosScripts"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.CosmosScripts.CosmosScripts(com.azure.cosmos.CosmosContainer,com.azure.cosmos.CosmosAsyncScripts)"
  id: "CosmosScripts(com.azure.cosmos.CosmosContainer,com.azure.cosmos.CosmosAsyncScripts)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "CosmosScripts(CosmosContainer container, CosmosAsyncScripts asyncScripts)"
  nameWithType: "CosmosScripts.CosmosScripts(CosmosContainer container, CosmosAsyncScripts asyncScripts)"
  fullName: "com.azure.cosmos.CosmosScripts.CosmosScripts(CosmosContainer container, CosmosAsyncScripts asyncScripts)"
  overload: "com.azure.cosmos.CosmosScripts.CosmosScripts*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Instantiates a new Cosmos sync scripts."
  syntax:
    content: " CosmosScripts(CosmosContainer container, CosmosAsyncScripts asyncScripts)"
    parameters:
    - id: "container"
      type: "com.azure.cosmos.CosmosContainer"
      description: "the container"
    - id: "asyncScripts"
      type: "com.azure.cosmos.CosmosAsyncScripts"
      description: "the async scripts"
- uid: "com.azure.cosmos.CosmosScripts.convertResponse(com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse)"
  id: "convertResponse(com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "convertResponse(CosmosAsyncStoredProcedureResponse response)"
  nameWithType: "CosmosScripts.convertResponse(CosmosAsyncStoredProcedureResponse response)"
  fullName: "com.azure.cosmos.CosmosScripts.convertResponse(CosmosAsyncStoredProcedureResponse response)"
  overload: "com.azure.cosmos.CosmosScripts.convertResponse*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Convert response cosmos sync stored procedure response."
  syntax:
    content: " CosmosStoredProcedureResponse convertResponse(CosmosAsyncStoredProcedureResponse response)"
    parameters:
    - id: "response"
      type: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse"
      description: "the response"
    return:
      type: "com.azure.cosmos.models.CosmosStoredProcedureResponse"
      description: "the cosmos sync stored procedure response"
- uid: "com.azure.cosmos.CosmosScripts.convertResponse(com.azure.cosmos.models.CosmosAsyncTriggerResponse)"
  id: "convertResponse(com.azure.cosmos.models.CosmosAsyncTriggerResponse)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "convertResponse(CosmosAsyncTriggerResponse response)"
  nameWithType: "CosmosScripts.convertResponse(CosmosAsyncTriggerResponse response)"
  fullName: "com.azure.cosmos.CosmosScripts.convertResponse(CosmosAsyncTriggerResponse response)"
  overload: "com.azure.cosmos.CosmosScripts.convertResponse*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Convert response cosmos sync trigger response."
  syntax:
    content: " CosmosTriggerResponse convertResponse(CosmosAsyncTriggerResponse response)"
    parameters:
    - id: "response"
      type: "com.azure.cosmos.models.CosmosAsyncTriggerResponse"
      description: "the response"
    return:
      type: "com.azure.cosmos.models.CosmosTriggerResponse"
      description: "the cosmos sync trigger response"
- uid: "com.azure.cosmos.CosmosScripts.convertResponse(com.azure.cosmos.models.CosmosAsyncUserDefinedFunctionResponse)"
  id: "convertResponse(com.azure.cosmos.models.CosmosAsyncUserDefinedFunctionResponse)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "convertResponse(CosmosAsyncUserDefinedFunctionResponse response)"
  nameWithType: "CosmosScripts.convertResponse(CosmosAsyncUserDefinedFunctionResponse response)"
  fullName: "com.azure.cosmos.CosmosScripts.convertResponse(CosmosAsyncUserDefinedFunctionResponse response)"
  overload: "com.azure.cosmos.CosmosScripts.convertResponse*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Convert response cosmos sync user defined function response."
  syntax:
    content: " CosmosUserDefinedFunctionResponse convertResponse(CosmosAsyncUserDefinedFunctionResponse response)"
    parameters:
    - id: "response"
      type: "com.azure.cosmos.models.CosmosAsyncUserDefinedFunctionResponse"
      description: "the response"
    return:
      type: "com.azure.cosmos.models.CosmosUserDefinedFunctionResponse"
      description: "the cosmos sync user defined function response"
- uid: "com.azure.cosmos.CosmosScripts.createStoredProcedure(com.azure.cosmos.models.CosmosStoredProcedureProperties)"
  id: "createStoredProcedure(com.azure.cosmos.models.CosmosStoredProcedureProperties)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "createStoredProcedure(CosmosStoredProcedureProperties properties)"
  nameWithType: "CosmosScripts.createStoredProcedure(CosmosStoredProcedureProperties properties)"
  fullName: "com.azure.cosmos.CosmosScripts.createStoredProcedure(CosmosStoredProcedureProperties properties)"
  overload: "com.azure.cosmos.CosmosScripts.createStoredProcedure*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Create stored procedure"
  syntax:
    content: "public CosmosStoredProcedureResponse createStoredProcedure(CosmosStoredProcedureProperties properties)"
    parameters:
    - id: "properties"
      type: "com.azure.cosmos.models.CosmosStoredProcedureProperties"
      description: "the properties"
    return:
      type: "com.azure.cosmos.models.CosmosStoredProcedureResponse"
      description: "the cosmos sync stored procedure response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosScripts.createStoredProcedure(com.azure.cosmos.models.CosmosStoredProcedureProperties,com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)"
  id: "createStoredProcedure(com.azure.cosmos.models.CosmosStoredProcedureProperties,com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "createStoredProcedure(CosmosStoredProcedureProperties properties, CosmosStoredProcedureRequestOptions options)"
  nameWithType: "CosmosScripts.createStoredProcedure(CosmosStoredProcedureProperties properties, CosmosStoredProcedureRequestOptions options)"
  fullName: "com.azure.cosmos.CosmosScripts.createStoredProcedure(CosmosStoredProcedureProperties properties, CosmosStoredProcedureRequestOptions options)"
  overload: "com.azure.cosmos.CosmosScripts.createStoredProcedure*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Create stored procedure cosmos"
  syntax:
    content: "public CosmosStoredProcedureResponse createStoredProcedure(CosmosStoredProcedureProperties properties, CosmosStoredProcedureRequestOptions options)"
    parameters:
    - id: "properties"
      type: "com.azure.cosmos.models.CosmosStoredProcedureProperties"
      description: "the properties"
    - id: "options"
      type: "com.azure.cosmos.models.CosmosStoredProcedureRequestOptions"
      description: "the options"
    return:
      type: "com.azure.cosmos.models.CosmosStoredProcedureResponse"
      description: "the cosmos sync stored procedure response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosScripts.createTrigger(com.azure.cosmos.models.CosmosTriggerProperties)"
  id: "createTrigger(com.azure.cosmos.models.CosmosTriggerProperties)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "createTrigger(CosmosTriggerProperties properties)"
  nameWithType: "CosmosScripts.createTrigger(CosmosTriggerProperties properties)"
  fullName: "com.azure.cosmos.CosmosScripts.createTrigger(CosmosTriggerProperties properties)"
  overload: "com.azure.cosmos.CosmosScripts.createTrigger*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Create trigger"
  syntax:
    content: "public CosmosTriggerResponse createTrigger(CosmosTriggerProperties properties)"
    parameters:
    - id: "properties"
      type: "com.azure.cosmos.models.CosmosTriggerProperties"
      description: "the properties"
    return:
      type: "com.azure.cosmos.models.CosmosTriggerResponse"
      description: "the cosmos sync trigger response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosScripts.createUserDefinedFunction(com.azure.cosmos.models.CosmosUserDefinedFunctionProperties)"
  id: "createUserDefinedFunction(com.azure.cosmos.models.CosmosUserDefinedFunctionProperties)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "createUserDefinedFunction(CosmosUserDefinedFunctionProperties properties)"
  nameWithType: "CosmosScripts.createUserDefinedFunction(CosmosUserDefinedFunctionProperties properties)"
  fullName: "com.azure.cosmos.CosmosScripts.createUserDefinedFunction(CosmosUserDefinedFunctionProperties properties)"
  overload: "com.azure.cosmos.CosmosScripts.createUserDefinedFunction*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Create user defined function"
  syntax:
    content: "public CosmosUserDefinedFunctionResponse createUserDefinedFunction(CosmosUserDefinedFunctionProperties properties)"
    parameters:
    - id: "properties"
      type: "com.azure.cosmos.models.CosmosUserDefinedFunctionProperties"
      description: "the properties"
    return:
      type: "com.azure.cosmos.models.CosmosUserDefinedFunctionResponse"
      description: "the cosmos sync user defined function response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosScripts.getStoredProcedure(java.lang.String)"
  id: "getStoredProcedure(java.lang.String)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "getStoredProcedure(String id)"
  nameWithType: "CosmosScripts.getStoredProcedure(String id)"
  fullName: "com.azure.cosmos.CosmosScripts.getStoredProcedure(String id)"
  overload: "com.azure.cosmos.CosmosScripts.getStoredProcedure*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets stored procedure."
  syntax:
    content: "public CosmosStoredProcedure getStoredProcedure(String id)"
    parameters:
    - id: "id"
      type: "java.lang.String"
      description: "the id"
    return:
      type: "com.azure.cosmos.CosmosStoredProcedure"
      description: "the stored procedure"
- uid: "com.azure.cosmos.CosmosScripts.getTrigger(java.lang.String)"
  id: "getTrigger(java.lang.String)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "getTrigger(String id)"
  nameWithType: "CosmosScripts.getTrigger(String id)"
  fullName: "com.azure.cosmos.CosmosScripts.getTrigger(String id)"
  overload: "com.azure.cosmos.CosmosScripts.getTrigger*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets trigger."
  syntax:
    content: "public CosmosTrigger getTrigger(String id)"
    parameters:
    - id: "id"
      type: "java.lang.String"
      description: "the id"
    return:
      type: "com.azure.cosmos.CosmosTrigger"
      description: "the trigger"
- uid: "com.azure.cosmos.CosmosScripts.getUserDefinedFunction(java.lang.String)"
  id: "getUserDefinedFunction(java.lang.String)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "getUserDefinedFunction(String id)"
  nameWithType: "CosmosScripts.getUserDefinedFunction(String id)"
  fullName: "com.azure.cosmos.CosmosScripts.getUserDefinedFunction(String id)"
  overload: "com.azure.cosmos.CosmosScripts.getUserDefinedFunction*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets user defined function."
  syntax:
    content: "public CosmosUserDefinedFunction getUserDefinedFunction(String id)"
    parameters:
    - id: "id"
      type: "java.lang.String"
      description: "the id"
    return:
      type: "com.azure.cosmos.CosmosUserDefinedFunction"
      description: "the user defined function"
- uid: "com.azure.cosmos.CosmosScripts.mapStoredProcedureResponseAndBlock(reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse>)"
  id: "mapStoredProcedureResponseAndBlock(reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse>)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "mapStoredProcedureResponseAndBlock(Mono<CosmosAsyncStoredProcedureResponse> storedProcedureResponseMono)"
  nameWithType: "CosmosScripts.mapStoredProcedureResponseAndBlock(Mono<CosmosAsyncStoredProcedureResponse> storedProcedureResponseMono)"
  fullName: "com.azure.cosmos.CosmosScripts.mapStoredProcedureResponseAndBlock(Mono<CosmosAsyncStoredProcedureResponse> storedProcedureResponseMono)"
  overload: "com.azure.cosmos.CosmosScripts.mapStoredProcedureResponseAndBlock*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Map stored procedure response and block cosmos sync stored procedure response."
  syntax:
    content: " CosmosStoredProcedureResponse mapStoredProcedureResponseAndBlock(Mono<CosmosAsyncStoredProcedureResponse> storedProcedureResponseMono)"
    parameters:
    - id: "storedProcedureResponseMono"
      type: "reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse>"
      description: "the stored procedure response mono"
    return:
      type: "com.azure.cosmos.models.CosmosStoredProcedureResponse"
      description: "the cosmos sync stored procedure response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosScripts.mapTriggerResponseAndBlock(reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosAsyncTriggerResponse>)"
  id: "mapTriggerResponseAndBlock(reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosAsyncTriggerResponse>)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "mapTriggerResponseAndBlock(Mono<CosmosAsyncTriggerResponse> responseMono)"
  nameWithType: "CosmosScripts.mapTriggerResponseAndBlock(Mono<CosmosAsyncTriggerResponse> responseMono)"
  fullName: "com.azure.cosmos.CosmosScripts.mapTriggerResponseAndBlock(Mono<CosmosAsyncTriggerResponse> responseMono)"
  overload: "com.azure.cosmos.CosmosScripts.mapTriggerResponseAndBlock*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Map trigger response and block cosmos sync trigger response."
  syntax:
    content: " CosmosTriggerResponse mapTriggerResponseAndBlock(Mono<CosmosAsyncTriggerResponse> responseMono)"
    parameters:
    - id: "responseMono"
      type: "reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosAsyncTriggerResponse>"
      description: "the response mono"
    return:
      type: "com.azure.cosmos.models.CosmosTriggerResponse"
      description: "the cosmos sync trigger response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosScripts.mapUDFResponseAndBlock(reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosAsyncUserDefinedFunctionResponse>)"
  id: "mapUDFResponseAndBlock(reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosAsyncUserDefinedFunctionResponse>)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "mapUDFResponseAndBlock(Mono<CosmosAsyncUserDefinedFunctionResponse> responseMono)"
  nameWithType: "CosmosScripts.mapUDFResponseAndBlock(Mono<CosmosAsyncUserDefinedFunctionResponse> responseMono)"
  fullName: "com.azure.cosmos.CosmosScripts.mapUDFResponseAndBlock(Mono<CosmosAsyncUserDefinedFunctionResponse> responseMono)"
  overload: "com.azure.cosmos.CosmosScripts.mapUDFResponseAndBlock*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Map udf response and block cosmos sync user defined function response."
  syntax:
    content: " CosmosUserDefinedFunctionResponse mapUDFResponseAndBlock(Mono<CosmosAsyncUserDefinedFunctionResponse> responseMono)"
    parameters:
    - id: "responseMono"
      type: "reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosAsyncUserDefinedFunctionResponse>"
      description: "the response mono"
    return:
      type: "com.azure.cosmos.models.CosmosUserDefinedFunctionResponse"
      description: "the cosmos sync user defined function response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosScripts.queryStoredProcedures(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.FeedOptions)"
  id: "queryStoredProcedures(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.FeedOptions)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "queryStoredProcedures(SqlQuerySpec querySpec, FeedOptions options)"
  nameWithType: "CosmosScripts.queryStoredProcedures(SqlQuerySpec querySpec, FeedOptions options)"
  fullName: "com.azure.cosmos.CosmosScripts.queryStoredProcedures(SqlQuerySpec querySpec, FeedOptions options)"
  overload: "com.azure.cosmos.CosmosScripts.queryStoredProcedures*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Query stored procedures <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>."
  syntax:
    content: "public CosmosPagedIterable<CosmosStoredProcedureProperties> queryStoredProcedures(SqlQuerySpec querySpec, FeedOptions options)"
    parameters:
    - id: "querySpec"
      type: "com.azure.cosmos.models.SqlQuerySpec"
      description: "the query spec"
    - id: "options"
      type: "com.azure.cosmos.models.FeedOptions"
      description: "the options"
    return:
      type: "com.azure.cosmos.CosmosPagedIterable<com.azure.cosmos.models.CosmosStoredProcedureProperties>"
      description: "the <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>"
- uid: "com.azure.cosmos.CosmosScripts.queryStoredProcedures(java.lang.String,com.azure.cosmos.models.FeedOptions)"
  id: "queryStoredProcedures(java.lang.String,com.azure.cosmos.models.FeedOptions)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "queryStoredProcedures(String query, FeedOptions options)"
  nameWithType: "CosmosScripts.queryStoredProcedures(String query, FeedOptions options)"
  fullName: "com.azure.cosmos.CosmosScripts.queryStoredProcedures(String query, FeedOptions options)"
  overload: "com.azure.cosmos.CosmosScripts.queryStoredProcedures*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Query stored procedures <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>."
  syntax:
    content: "public CosmosPagedIterable<CosmosStoredProcedureProperties> queryStoredProcedures(String query, FeedOptions options)"
    parameters:
    - id: "query"
      type: "java.lang.String"
      description: "the query"
    - id: "options"
      type: "com.azure.cosmos.models.FeedOptions"
      description: "the options"
    return:
      type: "com.azure.cosmos.CosmosPagedIterable<com.azure.cosmos.models.CosmosStoredProcedureProperties>"
      description: "the <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>"
- uid: "com.azure.cosmos.CosmosScripts.queryTriggers(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.FeedOptions)"
  id: "queryTriggers(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.FeedOptions)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "queryTriggers(SqlQuerySpec querySpec, FeedOptions options)"
  nameWithType: "CosmosScripts.queryTriggers(SqlQuerySpec querySpec, FeedOptions options)"
  fullName: "com.azure.cosmos.CosmosScripts.queryTriggers(SqlQuerySpec querySpec, FeedOptions options)"
  overload: "com.azure.cosmos.CosmosScripts.queryTriggers*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Query triggers <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>."
  syntax:
    content: "public CosmosPagedIterable<CosmosTriggerProperties> queryTriggers(SqlQuerySpec querySpec, FeedOptions options)"
    parameters:
    - id: "querySpec"
      type: "com.azure.cosmos.models.SqlQuerySpec"
      description: "the query spec"
    - id: "options"
      type: "com.azure.cosmos.models.FeedOptions"
      description: "the options"
    return:
      type: "com.azure.cosmos.CosmosPagedIterable<com.azure.cosmos.models.CosmosTriggerProperties>"
      description: "the <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>"
- uid: "com.azure.cosmos.CosmosScripts.queryTriggers(java.lang.String,com.azure.cosmos.models.FeedOptions)"
  id: "queryTriggers(java.lang.String,com.azure.cosmos.models.FeedOptions)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "queryTriggers(String query, FeedOptions options)"
  nameWithType: "CosmosScripts.queryTriggers(String query, FeedOptions options)"
  fullName: "com.azure.cosmos.CosmosScripts.queryTriggers(String query, FeedOptions options)"
  overload: "com.azure.cosmos.CosmosScripts.queryTriggers*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Query triggers <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>."
  syntax:
    content: "public CosmosPagedIterable<CosmosTriggerProperties> queryTriggers(String query, FeedOptions options)"
    parameters:
    - id: "query"
      type: "java.lang.String"
      description: "the query"
    - id: "options"
      type: "com.azure.cosmos.models.FeedOptions"
      description: "the options"
    return:
      type: "com.azure.cosmos.CosmosPagedIterable<com.azure.cosmos.models.CosmosTriggerProperties>"
      description: "the <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>"
- uid: "com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.FeedOptions)"
  id: "queryUserDefinedFunctions(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.FeedOptions)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "queryUserDefinedFunctions(SqlQuerySpec querySpec, FeedOptions options)"
  nameWithType: "CosmosScripts.queryUserDefinedFunctions(SqlQuerySpec querySpec, FeedOptions options)"
  fullName: "com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions(SqlQuerySpec querySpec, FeedOptions options)"
  overload: "com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Query user defined functions <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>."
  syntax:
    content: "public CosmosPagedIterable<CosmosUserDefinedFunctionProperties> queryUserDefinedFunctions(SqlQuerySpec querySpec, FeedOptions options)"
    parameters:
    - id: "querySpec"
      type: "com.azure.cosmos.models.SqlQuerySpec"
      description: "the query spec"
    - id: "options"
      type: "com.azure.cosmos.models.FeedOptions"
      description: "the options"
    return:
      type: "com.azure.cosmos.CosmosPagedIterable<com.azure.cosmos.models.CosmosUserDefinedFunctionProperties>"
      description: "the <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>"
- uid: "com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions(java.lang.String,com.azure.cosmos.models.FeedOptions)"
  id: "queryUserDefinedFunctions(java.lang.String,com.azure.cosmos.models.FeedOptions)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "queryUserDefinedFunctions(String query, FeedOptions options)"
  nameWithType: "CosmosScripts.queryUserDefinedFunctions(String query, FeedOptions options)"
  fullName: "com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions(String query, FeedOptions options)"
  overload: "com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Query user defined functions <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>."
  syntax:
    content: "public CosmosPagedIterable<CosmosUserDefinedFunctionProperties> queryUserDefinedFunctions(String query, FeedOptions options)"
    parameters:
    - id: "query"
      type: "java.lang.String"
      description: "the query"
    - id: "options"
      type: "com.azure.cosmos.models.FeedOptions"
      description: "the options"
    return:
      type: "com.azure.cosmos.CosmosPagedIterable<com.azure.cosmos.models.CosmosUserDefinedFunctionProperties>"
      description: "the <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>"
- uid: "com.azure.cosmos.CosmosScripts.readAllStoredProcedures(com.azure.cosmos.models.FeedOptions)"
  id: "readAllStoredProcedures(com.azure.cosmos.models.FeedOptions)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "readAllStoredProcedures(FeedOptions options)"
  nameWithType: "CosmosScripts.readAllStoredProcedures(FeedOptions options)"
  fullName: "com.azure.cosmos.CosmosScripts.readAllStoredProcedures(FeedOptions options)"
  overload: "com.azure.cosmos.CosmosScripts.readAllStoredProcedures*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Read all stored procedures <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>."
  syntax:
    content: "public CosmosPagedIterable<CosmosStoredProcedureProperties> readAllStoredProcedures(FeedOptions options)"
    parameters:
    - id: "options"
      type: "com.azure.cosmos.models.FeedOptions"
      description: "the options"
    return:
      type: "com.azure.cosmos.CosmosPagedIterable<com.azure.cosmos.models.CosmosStoredProcedureProperties>"
      description: "the <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>"
- uid: "com.azure.cosmos.CosmosScripts.readAllTriggers(com.azure.cosmos.models.FeedOptions)"
  id: "readAllTriggers(com.azure.cosmos.models.FeedOptions)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "readAllTriggers(FeedOptions options)"
  nameWithType: "CosmosScripts.readAllTriggers(FeedOptions options)"
  fullName: "com.azure.cosmos.CosmosScripts.readAllTriggers(FeedOptions options)"
  overload: "com.azure.cosmos.CosmosScripts.readAllTriggers*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Read all triggers <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>."
  syntax:
    content: "public CosmosPagedIterable<CosmosTriggerProperties> readAllTriggers(FeedOptions options)"
    parameters:
    - id: "options"
      type: "com.azure.cosmos.models.FeedOptions"
      description: "the options"
    return:
      type: "com.azure.cosmos.CosmosPagedIterable<com.azure.cosmos.models.CosmosTriggerProperties>"
      description: "the <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>"
- uid: "com.azure.cosmos.CosmosScripts.readAllUserDefinedFunctions(com.azure.cosmos.models.FeedOptions)"
  id: "readAllUserDefinedFunctions(com.azure.cosmos.models.FeedOptions)"
  parent: "com.azure.cosmos.CosmosScripts"
  langs:
  - "java"
  name: "readAllUserDefinedFunctions(FeedOptions options)"
  nameWithType: "CosmosScripts.readAllUserDefinedFunctions(FeedOptions options)"
  fullName: "com.azure.cosmos.CosmosScripts.readAllUserDefinedFunctions(FeedOptions options)"
  overload: "com.azure.cosmos.CosmosScripts.readAllUserDefinedFunctions*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Read all user defined functions <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>."
  syntax:
    content: "public CosmosPagedIterable<CosmosUserDefinedFunctionProperties> readAllUserDefinedFunctions(FeedOptions options)"
    parameters:
    - id: "options"
      type: "com.azure.cosmos.models.FeedOptions"
      description: "the options"
    return:
      type: "com.azure.cosmos.CosmosPagedIterable<com.azure.cosmos.models.CosmosUserDefinedFunctionProperties>"
      description: "the <xref uid=\"com.azure.cosmos.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\">CosmosPagedIterable</xref>"
references:
- uid: "com.azure.cosmos.CosmosContainer"
  name: "CosmosContainer"
  nameWithType: "CosmosContainer"
  fullName: "com.azure.cosmos.CosmosContainer"
- uid: "com.azure.cosmos.CosmosAsyncScripts"
  name: "CosmosAsyncScripts"
  nameWithType: "CosmosAsyncScripts"
  fullName: "com.azure.cosmos.CosmosAsyncScripts"
- uid: "com.azure.cosmos.CosmosScripts.CosmosScripts*"
  name: "CosmosScripts"
  nameWithType: "CosmosScripts.CosmosScripts"
  fullName: "com.azure.cosmos.CosmosScripts.CosmosScripts"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosClientException"
  name: "CosmosClientException"
  nameWithType: "CosmosClientException"
  fullName: "com.azure.cosmos.CosmosClientException"
- uid: "com.azure.cosmos.models.CosmosStoredProcedureProperties"
  name: "CosmosStoredProcedureProperties"
  nameWithType: "CosmosStoredProcedureProperties"
  fullName: "com.azure.cosmos.models.CosmosStoredProcedureProperties"
- uid: "com.azure.cosmos.models.CosmosStoredProcedureResponse"
  name: "CosmosStoredProcedureResponse"
  nameWithType: "CosmosStoredProcedureResponse"
  fullName: "com.azure.cosmos.models.CosmosStoredProcedureResponse"
- uid: "com.azure.cosmos.CosmosScripts.createStoredProcedure*"
  name: "createStoredProcedure"
  nameWithType: "CosmosScripts.createStoredProcedure"
  fullName: "com.azure.cosmos.CosmosScripts.createStoredProcedure"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.models.CosmosStoredProcedureRequestOptions"
  name: "CosmosStoredProcedureRequestOptions"
  nameWithType: "CosmosStoredProcedureRequestOptions"
  fullName: "com.azure.cosmos.models.CosmosStoredProcedureRequestOptions"
- uid: "com.azure.cosmos.models.FeedOptions"
  name: "FeedOptions"
  nameWithType: "FeedOptions"
  fullName: "com.azure.cosmos.models.FeedOptions"
- uid: "com.azure.cosmos.CosmosPagedIterable<com.azure.cosmos.models.CosmosStoredProcedureProperties>"
  spec.java:
  - uid: "com.azure.cosmos.CosmosPagedIterable"
    name: "CosmosPagedIterable"
    fullName: "com.azure.cosmos.CosmosPagedIterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.models.CosmosStoredProcedureProperties"
    name: "CosmosStoredProcedureProperties"
    fullName: "com.azure.cosmos.models.CosmosStoredProcedureProperties"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.CosmosScripts.readAllStoredProcedures*"
  name: "readAllStoredProcedures"
  nameWithType: "CosmosScripts.readAllStoredProcedures"
  fullName: "com.azure.cosmos.CosmosScripts.readAllStoredProcedures"
  package: "com.azure.cosmos"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.CosmosScripts.queryStoredProcedures*"
  name: "queryStoredProcedures"
  nameWithType: "CosmosScripts.queryStoredProcedures"
  fullName: "com.azure.cosmos.CosmosScripts.queryStoredProcedures"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.models.SqlQuerySpec"
  name: "SqlQuerySpec"
  nameWithType: "SqlQuerySpec"
  fullName: "com.azure.cosmos.models.SqlQuerySpec"
- uid: "com.azure.cosmos.CosmosStoredProcedure"
  name: "CosmosStoredProcedure"
  nameWithType: "CosmosStoredProcedure"
  fullName: "com.azure.cosmos.CosmosStoredProcedure"
- uid: "com.azure.cosmos.CosmosScripts.getStoredProcedure*"
  name: "getStoredProcedure"
  nameWithType: "CosmosScripts.getStoredProcedure"
  fullName: "com.azure.cosmos.CosmosScripts.getStoredProcedure"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.models.CosmosUserDefinedFunctionProperties"
  name: "CosmosUserDefinedFunctionProperties"
  nameWithType: "CosmosUserDefinedFunctionProperties"
  fullName: "com.azure.cosmos.models.CosmosUserDefinedFunctionProperties"
- uid: "com.azure.cosmos.models.CosmosUserDefinedFunctionResponse"
  name: "CosmosUserDefinedFunctionResponse"
  nameWithType: "CosmosUserDefinedFunctionResponse"
  fullName: "com.azure.cosmos.models.CosmosUserDefinedFunctionResponse"
- uid: "com.azure.cosmos.CosmosScripts.createUserDefinedFunction*"
  name: "createUserDefinedFunction"
  nameWithType: "CosmosScripts.createUserDefinedFunction"
  fullName: "com.azure.cosmos.CosmosScripts.createUserDefinedFunction"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosPagedIterable<com.azure.cosmos.models.CosmosUserDefinedFunctionProperties>"
  spec.java:
  - uid: "com.azure.cosmos.CosmosPagedIterable"
    name: "CosmosPagedIterable"
    fullName: "com.azure.cosmos.CosmosPagedIterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.models.CosmosUserDefinedFunctionProperties"
    name: "CosmosUserDefinedFunctionProperties"
    fullName: "com.azure.cosmos.models.CosmosUserDefinedFunctionProperties"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.CosmosScripts.readAllUserDefinedFunctions*"
  name: "readAllUserDefinedFunctions"
  nameWithType: "CosmosScripts.readAllUserDefinedFunctions"
  fullName: "com.azure.cosmos.CosmosScripts.readAllUserDefinedFunctions"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions*"
  name: "queryUserDefinedFunctions"
  nameWithType: "CosmosScripts.queryUserDefinedFunctions"
  fullName: "com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosUserDefinedFunction"
  name: "CosmosUserDefinedFunction"
  nameWithType: "CosmosUserDefinedFunction"
  fullName: "com.azure.cosmos.CosmosUserDefinedFunction"
- uid: "com.azure.cosmos.CosmosScripts.getUserDefinedFunction*"
  name: "getUserDefinedFunction"
  nameWithType: "CosmosScripts.getUserDefinedFunction"
  fullName: "com.azure.cosmos.CosmosScripts.getUserDefinedFunction"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.models.CosmosTriggerProperties"
  name: "CosmosTriggerProperties"
  nameWithType: "CosmosTriggerProperties"
  fullName: "com.azure.cosmos.models.CosmosTriggerProperties"
- uid: "com.azure.cosmos.models.CosmosTriggerResponse"
  name: "CosmosTriggerResponse"
  nameWithType: "CosmosTriggerResponse"
  fullName: "com.azure.cosmos.models.CosmosTriggerResponse"
- uid: "com.azure.cosmos.CosmosScripts.createTrigger*"
  name: "createTrigger"
  nameWithType: "CosmosScripts.createTrigger"
  fullName: "com.azure.cosmos.CosmosScripts.createTrigger"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosPagedIterable<com.azure.cosmos.models.CosmosTriggerProperties>"
  spec.java:
  - uid: "com.azure.cosmos.CosmosPagedIterable"
    name: "CosmosPagedIterable"
    fullName: "com.azure.cosmos.CosmosPagedIterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.models.CosmosTriggerProperties"
    name: "CosmosTriggerProperties"
    fullName: "com.azure.cosmos.models.CosmosTriggerProperties"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.CosmosScripts.readAllTriggers*"
  name: "readAllTriggers"
  nameWithType: "CosmosScripts.readAllTriggers"
  fullName: "com.azure.cosmos.CosmosScripts.readAllTriggers"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosScripts.queryTriggers*"
  name: "queryTriggers"
  nameWithType: "CosmosScripts.queryTriggers"
  fullName: "com.azure.cosmos.CosmosScripts.queryTriggers"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosTrigger"
  name: "CosmosTrigger"
  nameWithType: "CosmosTrigger"
  fullName: "com.azure.cosmos.CosmosTrigger"
- uid: "com.azure.cosmos.CosmosScripts.getTrigger*"
  name: "getTrigger"
  nameWithType: "CosmosScripts.getTrigger"
  fullName: "com.azure.cosmos.CosmosScripts.getTrigger"
  package: "com.azure.cosmos"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse"
    name: "CosmosAsyncStoredProcedureResponse"
    fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.CosmosScripts.mapStoredProcedureResponseAndBlock*"
  name: "mapStoredProcedureResponseAndBlock"
  nameWithType: "CosmosScripts.mapStoredProcedureResponseAndBlock"
  fullName: "com.azure.cosmos.CosmosScripts.mapStoredProcedureResponseAndBlock"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse"
  name: "CosmosAsyncStoredProcedureResponse"
  nameWithType: "CosmosAsyncStoredProcedureResponse"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse"
- uid: "com.azure.cosmos.CosmosScripts.convertResponse*"
  name: "convertResponse"
  nameWithType: "CosmosScripts.convertResponse"
  fullName: "com.azure.cosmos.CosmosScripts.convertResponse"
  package: "com.azure.cosmos"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosAsyncUserDefinedFunctionResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.models.CosmosAsyncUserDefinedFunctionResponse"
    name: "CosmosAsyncUserDefinedFunctionResponse"
    fullName: "com.azure.cosmos.models.CosmosAsyncUserDefinedFunctionResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.CosmosScripts.mapUDFResponseAndBlock*"
  name: "mapUDFResponseAndBlock"
  nameWithType: "CosmosScripts.mapUDFResponseAndBlock"
  fullName: "com.azure.cosmos.CosmosScripts.mapUDFResponseAndBlock"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.models.CosmosAsyncUserDefinedFunctionResponse"
  name: "CosmosAsyncUserDefinedFunctionResponse"
  nameWithType: "CosmosAsyncUserDefinedFunctionResponse"
  fullName: "com.azure.cosmos.models.CosmosAsyncUserDefinedFunctionResponse"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosAsyncTriggerResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.models.CosmosAsyncTriggerResponse"
    name: "CosmosAsyncTriggerResponse"
    fullName: "com.azure.cosmos.models.CosmosAsyncTriggerResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.CosmosScripts.mapTriggerResponseAndBlock*"
  name: "mapTriggerResponseAndBlock"
  nameWithType: "CosmosScripts.mapTriggerResponseAndBlock"
  fullName: "com.azure.cosmos.CosmosScripts.mapTriggerResponseAndBlock"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.models.CosmosAsyncTriggerResponse"
  name: "CosmosAsyncTriggerResponse"
  nameWithType: "CosmosAsyncTriggerResponse"
  fullName: "com.azure.cosmos.models.CosmosAsyncTriggerResponse"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.cosmos.CosmosPagedIterable"
  name: "CosmosPagedIterable"
  nameWithType: "CosmosPagedIterable"
  fullName: "com.azure.cosmos.CosmosPagedIterable"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
