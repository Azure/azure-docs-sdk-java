### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.CosmosScripts
  id: CosmosScripts
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos
  children:
  - com.azure.cosmos.CosmosScripts.createStoredProcedure(com.azure.cosmos.models.CosmosStoredProcedureProperties)
  - com.azure.cosmos.CosmosScripts.createStoredProcedure(com.azure.cosmos.models.CosmosStoredProcedureProperties,com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)
  - com.azure.cosmos.CosmosScripts.createTrigger(com.azure.cosmos.models.CosmosTriggerProperties)
  - com.azure.cosmos.CosmosScripts.createUserDefinedFunction(com.azure.cosmos.models.CosmosUserDefinedFunctionProperties)
  - com.azure.cosmos.CosmosScripts.getStoredProcedure(java.lang.String)
  - com.azure.cosmos.CosmosScripts.getTrigger(java.lang.String)
  - com.azure.cosmos.CosmosScripts.getUserDefinedFunction(java.lang.String)
  - com.azure.cosmos.CosmosScripts.queryStoredProcedures(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions)
  - com.azure.cosmos.CosmosScripts.queryStoredProcedures(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)
  - com.azure.cosmos.CosmosScripts.queryTriggers(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions)
  - com.azure.cosmos.CosmosScripts.queryTriggers(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)
  - com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions)
  - com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)
  - com.azure.cosmos.CosmosScripts.readAllStoredProcedures()
  - com.azure.cosmos.CosmosScripts.readAllTriggers()
  - com.azure.cosmos.CosmosScripts.readAllUserDefinedFunctions()
  langs:
  - java
  name: CosmosScripts
  nameWithType: CosmosScripts
  fullName: com.azure.cosmos.CosmosScripts
  type: Class
  package: com.azure.cosmos
  summary: The type Cosmos sync scripts.
  syntax:
    content: public class CosmosScripts
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.CosmosScripts.CosmosScripts(com.azure.cosmos.CosmosContainer,com.azure.cosmos.CosmosAsyncScripts)
  id: CosmosScripts(com.azure.cosmos.CosmosContainer,com.azure.cosmos.CosmosAsyncScripts)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosScripts
  langs:
  - java
  name: CosmosScripts(CosmosContainer container, CosmosAsyncScripts asyncScripts)
  nameWithType: CosmosScripts.CosmosScripts(CosmosContainer container, CosmosAsyncScripts asyncScripts)
  fullName: com.azure.cosmos.CosmosScripts.CosmosScripts(CosmosContainer container, CosmosAsyncScripts asyncScripts)
  overload: com.azure.cosmos.CosmosScripts.CosmosScripts*
  type: Constructor
  package: com.azure.cosmos
  summary: Instantiates a new Cosmos sync scripts.
  syntax:
    content: " CosmosScripts(CosmosContainer container, CosmosAsyncScripts asyncScripts)"
    parameters:
    - id: container
      type: com.azure.cosmos.CosmosContainer
      description: the container
    - id: asyncScripts
      type: com.azure.cosmos.CosmosAsyncScripts
      description: the async scripts
- uid: com.azure.cosmos.CosmosScripts.createStoredProcedure(com.azure.cosmos.models.CosmosStoredProcedureProperties)
  id: createStoredProcedure(com.azure.cosmos.models.CosmosStoredProcedureProperties)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosScripts
  langs:
  - java
  name: createStoredProcedure(CosmosStoredProcedureProperties properties)
  nameWithType: CosmosScripts.createStoredProcedure(CosmosStoredProcedureProperties properties)
  fullName: com.azure.cosmos.CosmosScripts.createStoredProcedure(CosmosStoredProcedureProperties properties)
  overload: com.azure.cosmos.CosmosScripts.createStoredProcedure*
  type: Method
  package: com.azure.cosmos
  summary: Create stored procedure
  syntax:
    content: public CosmosStoredProcedureResponse createStoredProcedure(CosmosStoredProcedureProperties properties)
    parameters:
    - id: properties
      type: com.azure.cosmos.models.CosmosStoredProcedureProperties
      description: the properties
    return:
      type: com.azure.cosmos.models.CosmosStoredProcedureResponse
      description: the cosmos stored procedure response
- uid: com.azure.cosmos.CosmosScripts.createStoredProcedure(com.azure.cosmos.models.CosmosStoredProcedureProperties,com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)
  id: createStoredProcedure(com.azure.cosmos.models.CosmosStoredProcedureProperties,com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosScripts
  langs:
  - java
  name: createStoredProcedure(CosmosStoredProcedureProperties properties, CosmosStoredProcedureRequestOptions options)
  nameWithType: CosmosScripts.createStoredProcedure(CosmosStoredProcedureProperties properties, CosmosStoredProcedureRequestOptions options)
  fullName: com.azure.cosmos.CosmosScripts.createStoredProcedure(CosmosStoredProcedureProperties properties, CosmosStoredProcedureRequestOptions options)
  overload: com.azure.cosmos.CosmosScripts.createStoredProcedure*
  type: Method
  package: com.azure.cosmos
  summary: Create stored procedure cosmos
  syntax:
    content: public CosmosStoredProcedureResponse createStoredProcedure(CosmosStoredProcedureProperties properties, CosmosStoredProcedureRequestOptions options)
    parameters:
    - id: properties
      type: com.azure.cosmos.models.CosmosStoredProcedureProperties
      description: the properties
    - id: options
      type: com.azure.cosmos.models.CosmosStoredProcedureRequestOptions
      description: the options
    return:
      type: com.azure.cosmos.models.CosmosStoredProcedureResponse
      description: the cosmos stored procedure response
- uid: com.azure.cosmos.CosmosScripts.createTrigger(com.azure.cosmos.models.CosmosTriggerProperties)
  id: createTrigger(com.azure.cosmos.models.CosmosTriggerProperties)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosScripts
  langs:
  - java
  name: createTrigger(CosmosTriggerProperties properties)
  nameWithType: CosmosScripts.createTrigger(CosmosTriggerProperties properties)
  fullName: com.azure.cosmos.CosmosScripts.createTrigger(CosmosTriggerProperties properties)
  overload: com.azure.cosmos.CosmosScripts.createTrigger*
  type: Method
  package: com.azure.cosmos
  summary: Create trigger
  syntax:
    content: public CosmosTriggerResponse createTrigger(CosmosTriggerProperties properties)
    parameters:
    - id: properties
      type: com.azure.cosmos.models.CosmosTriggerProperties
      description: the properties
    return:
      type: com.azure.cosmos.models.CosmosTriggerResponse
      description: the cosmos trigger response
- uid: com.azure.cosmos.CosmosScripts.createUserDefinedFunction(com.azure.cosmos.models.CosmosUserDefinedFunctionProperties)
  id: createUserDefinedFunction(com.azure.cosmos.models.CosmosUserDefinedFunctionProperties)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosScripts
  langs:
  - java
  name: createUserDefinedFunction(CosmosUserDefinedFunctionProperties properties)
  nameWithType: CosmosScripts.createUserDefinedFunction(CosmosUserDefinedFunctionProperties properties)
  fullName: com.azure.cosmos.CosmosScripts.createUserDefinedFunction(CosmosUserDefinedFunctionProperties properties)
  overload: com.azure.cosmos.CosmosScripts.createUserDefinedFunction*
  type: Method
  package: com.azure.cosmos
  summary: Create user defined function
  syntax:
    content: public CosmosUserDefinedFunctionResponse createUserDefinedFunction(CosmosUserDefinedFunctionProperties properties)
    parameters:
    - id: properties
      type: com.azure.cosmos.models.CosmosUserDefinedFunctionProperties
      description: the properties
    return:
      type: com.azure.cosmos.models.CosmosUserDefinedFunctionResponse
      description: the cosmos user defined function response
- uid: com.azure.cosmos.CosmosScripts.getStoredProcedure(java.lang.String)
  id: getStoredProcedure(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosScripts
  langs:
  - java
  name: getStoredProcedure(String id)
  nameWithType: CosmosScripts.getStoredProcedure(String id)
  fullName: com.azure.cosmos.CosmosScripts.getStoredProcedure(String id)
  overload: com.azure.cosmos.CosmosScripts.getStoredProcedure*
  type: Method
  package: com.azure.cosmos
  summary: Gets stored procedure.
  syntax:
    content: public CosmosStoredProcedure getStoredProcedure(String id)
    parameters:
    - id: id
      type: java.lang.String
      description: the id
    return:
      type: com.azure.cosmos.CosmosStoredProcedure
      description: the stored procedure
- uid: com.azure.cosmos.CosmosScripts.getTrigger(java.lang.String)
  id: getTrigger(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosScripts
  langs:
  - java
  name: getTrigger(String id)
  nameWithType: CosmosScripts.getTrigger(String id)
  fullName: com.azure.cosmos.CosmosScripts.getTrigger(String id)
  overload: com.azure.cosmos.CosmosScripts.getTrigger*
  type: Method
  package: com.azure.cosmos
  summary: Gets trigger.
  syntax:
    content: public CosmosTrigger getTrigger(String id)
    parameters:
    - id: id
      type: java.lang.String
      description: the id
    return:
      type: com.azure.cosmos.CosmosTrigger
      description: the trigger
- uid: com.azure.cosmos.CosmosScripts.getUserDefinedFunction(java.lang.String)
  id: getUserDefinedFunction(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosScripts
  langs:
  - java
  name: getUserDefinedFunction(String id)
  nameWithType: CosmosScripts.getUserDefinedFunction(String id)
  fullName: com.azure.cosmos.CosmosScripts.getUserDefinedFunction(String id)
  overload: com.azure.cosmos.CosmosScripts.getUserDefinedFunction*
  type: Method
  package: com.azure.cosmos
  summary: Gets user defined function.
  syntax:
    content: public CosmosUserDefinedFunction getUserDefinedFunction(String id)
    parameters:
    - id: id
      type: java.lang.String
      description: the id
    return:
      type: com.azure.cosmos.CosmosUserDefinedFunction
      description: the user defined function
- uid: com.azure.cosmos.CosmosScripts.queryStoredProcedures(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions)
  id: queryStoredProcedures(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosScripts
  langs:
  - java
  name: queryStoredProcedures(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)
  nameWithType: CosmosScripts.queryStoredProcedures(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)
  fullName: com.azure.cosmos.CosmosScripts.queryStoredProcedures(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)
  overload: com.azure.cosmos.CosmosScripts.queryStoredProcedures*
  type: Method
  package: com.azure.cosmos
  summary: Query stored procedures <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>.
  syntax:
    content: public CosmosPagedIterable<CosmosStoredProcedureProperties> queryStoredProcedures(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)
    parameters:
    - id: querySpec
      type: com.azure.cosmos.models.SqlQuerySpec
      description: the query spec
    - id: options
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the options
    return:
      type: com.azure.cosmos.util.CosmosPagedIterable<com.azure.cosmos.models.CosmosStoredProcedureProperties>
      description: the <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>
- uid: com.azure.cosmos.CosmosScripts.queryStoredProcedures(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)
  id: queryStoredProcedures(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosScripts
  langs:
  - java
  name: queryStoredProcedures(String query, CosmosQueryRequestOptions options)
  nameWithType: CosmosScripts.queryStoredProcedures(String query, CosmosQueryRequestOptions options)
  fullName: com.azure.cosmos.CosmosScripts.queryStoredProcedures(String query, CosmosQueryRequestOptions options)
  overload: com.azure.cosmos.CosmosScripts.queryStoredProcedures*
  type: Method
  package: com.azure.cosmos
  summary: Query stored procedures <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>.
  syntax:
    content: public CosmosPagedIterable<CosmosStoredProcedureProperties> queryStoredProcedures(String query, CosmosQueryRequestOptions options)
    parameters:
    - id: query
      type: java.lang.String
      description: the query
    - id: options
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the options
    return:
      type: com.azure.cosmos.util.CosmosPagedIterable<com.azure.cosmos.models.CosmosStoredProcedureProperties>
      description: the <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>
- uid: com.azure.cosmos.CosmosScripts.queryTriggers(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions)
  id: queryTriggers(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosScripts
  langs:
  - java
  name: queryTriggers(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)
  nameWithType: CosmosScripts.queryTriggers(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)
  fullName: com.azure.cosmos.CosmosScripts.queryTriggers(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)
  overload: com.azure.cosmos.CosmosScripts.queryTriggers*
  type: Method
  package: com.azure.cosmos
  summary: Query triggers <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>.
  syntax:
    content: public CosmosPagedIterable<CosmosTriggerProperties> queryTriggers(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)
    parameters:
    - id: querySpec
      type: com.azure.cosmos.models.SqlQuerySpec
      description: the query spec
    - id: options
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the options
    return:
      type: com.azure.cosmos.util.CosmosPagedIterable<com.azure.cosmos.models.CosmosTriggerProperties>
      description: the <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>
- uid: com.azure.cosmos.CosmosScripts.queryTriggers(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)
  id: queryTriggers(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosScripts
  langs:
  - java
  name: queryTriggers(String query, CosmosQueryRequestOptions options)
  nameWithType: CosmosScripts.queryTriggers(String query, CosmosQueryRequestOptions options)
  fullName: com.azure.cosmos.CosmosScripts.queryTriggers(String query, CosmosQueryRequestOptions options)
  overload: com.azure.cosmos.CosmosScripts.queryTriggers*
  type: Method
  package: com.azure.cosmos
  summary: Query triggers <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>.
  syntax:
    content: public CosmosPagedIterable<CosmosTriggerProperties> queryTriggers(String query, CosmosQueryRequestOptions options)
    parameters:
    - id: query
      type: java.lang.String
      description: the query
    - id: options
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the options
    return:
      type: com.azure.cosmos.util.CosmosPagedIterable<com.azure.cosmos.models.CosmosTriggerProperties>
      description: the <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>
- uid: com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions)
  id: queryUserDefinedFunctions(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosScripts
  langs:
  - java
  name: queryUserDefinedFunctions(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)
  nameWithType: CosmosScripts.queryUserDefinedFunctions(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)
  fullName: com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)
  overload: com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions*
  type: Method
  package: com.azure.cosmos
  summary: Query user defined functions <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>.
  syntax:
    content: public CosmosPagedIterable<CosmosUserDefinedFunctionProperties> queryUserDefinedFunctions(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)
    parameters:
    - id: querySpec
      type: com.azure.cosmos.models.SqlQuerySpec
      description: the query spec
    - id: options
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the options
    return:
      type: com.azure.cosmos.util.CosmosPagedIterable<com.azure.cosmos.models.CosmosUserDefinedFunctionProperties>
      description: the <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>
- uid: com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)
  id: queryUserDefinedFunctions(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosScripts
  langs:
  - java
  name: queryUserDefinedFunctions(String query, CosmosQueryRequestOptions options)
  nameWithType: CosmosScripts.queryUserDefinedFunctions(String query, CosmosQueryRequestOptions options)
  fullName: com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions(String query, CosmosQueryRequestOptions options)
  overload: com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions*
  type: Method
  package: com.azure.cosmos
  summary: Query user defined functions <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>.
  syntax:
    content: public CosmosPagedIterable<CosmosUserDefinedFunctionProperties> queryUserDefinedFunctions(String query, CosmosQueryRequestOptions options)
    parameters:
    - id: query
      type: java.lang.String
      description: the query
    - id: options
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
      description: the options
    return:
      type: com.azure.cosmos.util.CosmosPagedIterable<com.azure.cosmos.models.CosmosUserDefinedFunctionProperties>
      description: the <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>
- uid: com.azure.cosmos.CosmosScripts.readAllStoredProcedures()
  id: readAllStoredProcedures()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosScripts
  langs:
  - java
  name: readAllStoredProcedures()
  nameWithType: CosmosScripts.readAllStoredProcedures()
  fullName: com.azure.cosmos.CosmosScripts.readAllStoredProcedures()
  overload: com.azure.cosmos.CosmosScripts.readAllStoredProcedures*
  type: Method
  package: com.azure.cosmos
  summary: Read all stored procedures <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>.
  syntax:
    content: public CosmosPagedIterable<CosmosStoredProcedureProperties> readAllStoredProcedures()
    return:
      type: com.azure.cosmos.util.CosmosPagedIterable<com.azure.cosmos.models.CosmosStoredProcedureProperties>
      description: the <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>
- uid: com.azure.cosmos.CosmosScripts.readAllTriggers()
  id: readAllTriggers()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosScripts
  langs:
  - java
  name: readAllTriggers()
  nameWithType: CosmosScripts.readAllTriggers()
  fullName: com.azure.cosmos.CosmosScripts.readAllTriggers()
  overload: com.azure.cosmos.CosmosScripts.readAllTriggers*
  type: Method
  package: com.azure.cosmos
  summary: Read all triggers <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>.
  syntax:
    content: public CosmosPagedIterable<CosmosTriggerProperties> readAllTriggers()
    return:
      type: com.azure.cosmos.util.CosmosPagedIterable<com.azure.cosmos.models.CosmosTriggerProperties>
      description: the <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>
- uid: com.azure.cosmos.CosmosScripts.readAllUserDefinedFunctions()
  id: readAllUserDefinedFunctions()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosScripts
  langs:
  - java
  name: readAllUserDefinedFunctions()
  nameWithType: CosmosScripts.readAllUserDefinedFunctions()
  fullName: com.azure.cosmos.CosmosScripts.readAllUserDefinedFunctions()
  overload: com.azure.cosmos.CosmosScripts.readAllUserDefinedFunctions*
  type: Method
  package: com.azure.cosmos
  summary: Read all user defined functions <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>.
  syntax:
    content: public CosmosPagedIterable<CosmosUserDefinedFunctionProperties> readAllUserDefinedFunctions()
    return:
      type: com.azure.cosmos.util.CosmosPagedIterable<com.azure.cosmos.models.CosmosUserDefinedFunctionProperties>
      description: the <xref uid="com.azure.cosmos.util.CosmosPagedIterable" data-throw-if-not-resolved="false">CosmosPagedIterable</xref>
references:
- uid: com.azure.cosmos.CosmosContainer
  name: CosmosContainer
  nameWithType: CosmosContainer
  fullName: com.azure.cosmos.CosmosContainer
- uid: com.azure.cosmos.CosmosAsyncScripts
  name: CosmosAsyncScripts
  nameWithType: CosmosAsyncScripts
  fullName: com.azure.cosmos.CosmosAsyncScripts
- uid: com.azure.cosmos.CosmosScripts.CosmosScripts*
  name: CosmosScripts
  nameWithType: CosmosScripts.CosmosScripts
  fullName: com.azure.cosmos.CosmosScripts.CosmosScripts
  package: com.azure.cosmos
- uid: com.azure.cosmos.models.CosmosStoredProcedureProperties
  name: CosmosStoredProcedureProperties
  nameWithType: CosmosStoredProcedureProperties
  fullName: com.azure.cosmos.models.CosmosStoredProcedureProperties
- uid: com.azure.cosmos.models.CosmosStoredProcedureResponse
  name: CosmosStoredProcedureResponse
  nameWithType: CosmosStoredProcedureResponse
  fullName: com.azure.cosmos.models.CosmosStoredProcedureResponse
- uid: com.azure.cosmos.CosmosScripts.createStoredProcedure*
  name: createStoredProcedure
  nameWithType: CosmosScripts.createStoredProcedure
  fullName: com.azure.cosmos.CosmosScripts.createStoredProcedure
  package: com.azure.cosmos
- uid: com.azure.cosmos.models.CosmosStoredProcedureRequestOptions
  name: CosmosStoredProcedureRequestOptions
  nameWithType: CosmosStoredProcedureRequestOptions
  fullName: com.azure.cosmos.models.CosmosStoredProcedureRequestOptions
- uid: com.azure.cosmos.util.CosmosPagedIterable<com.azure.cosmos.models.CosmosStoredProcedureProperties>
  spec.java:
  - uid: com.azure.cosmos.util.CosmosPagedIterable
    name: CosmosPagedIterable
    fullName: com.azure.cosmos.util.CosmosPagedIterable
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.CosmosStoredProcedureProperties
    name: CosmosStoredProcedureProperties
    fullName: com.azure.cosmos.models.CosmosStoredProcedureProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.CosmosScripts.readAllStoredProcedures*
  name: readAllStoredProcedures
  nameWithType: CosmosScripts.readAllStoredProcedures
  fullName: com.azure.cosmos.CosmosScripts.readAllStoredProcedures
  package: com.azure.cosmos
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions
  name: CosmosQueryRequestOptions
  nameWithType: CosmosQueryRequestOptions
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions
- uid: com.azure.cosmos.CosmosScripts.queryStoredProcedures*
  name: queryStoredProcedures
  nameWithType: CosmosScripts.queryStoredProcedures
  fullName: com.azure.cosmos.CosmosScripts.queryStoredProcedures
  package: com.azure.cosmos
- uid: com.azure.cosmos.models.SqlQuerySpec
  name: SqlQuerySpec
  nameWithType: SqlQuerySpec
  fullName: com.azure.cosmos.models.SqlQuerySpec
- uid: com.azure.cosmos.CosmosStoredProcedure
  name: CosmosStoredProcedure
  nameWithType: CosmosStoredProcedure
  fullName: com.azure.cosmos.CosmosStoredProcedure
- uid: com.azure.cosmos.CosmosScripts.getStoredProcedure*
  name: getStoredProcedure
  nameWithType: CosmosScripts.getStoredProcedure
  fullName: com.azure.cosmos.CosmosScripts.getStoredProcedure
  package: com.azure.cosmos
- uid: com.azure.cosmos.models.CosmosUserDefinedFunctionProperties
  name: CosmosUserDefinedFunctionProperties
  nameWithType: CosmosUserDefinedFunctionProperties
  fullName: com.azure.cosmos.models.CosmosUserDefinedFunctionProperties
- uid: com.azure.cosmos.models.CosmosUserDefinedFunctionResponse
  name: CosmosUserDefinedFunctionResponse
  nameWithType: CosmosUserDefinedFunctionResponse
  fullName: com.azure.cosmos.models.CosmosUserDefinedFunctionResponse
- uid: com.azure.cosmos.CosmosScripts.createUserDefinedFunction*
  name: createUserDefinedFunction
  nameWithType: CosmosScripts.createUserDefinedFunction
  fullName: com.azure.cosmos.CosmosScripts.createUserDefinedFunction
  package: com.azure.cosmos
- uid: com.azure.cosmos.util.CosmosPagedIterable<com.azure.cosmos.models.CosmosUserDefinedFunctionProperties>
  spec.java:
  - uid: com.azure.cosmos.util.CosmosPagedIterable
    name: CosmosPagedIterable
    fullName: com.azure.cosmos.util.CosmosPagedIterable
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.CosmosUserDefinedFunctionProperties
    name: CosmosUserDefinedFunctionProperties
    fullName: com.azure.cosmos.models.CosmosUserDefinedFunctionProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.CosmosScripts.readAllUserDefinedFunctions*
  name: readAllUserDefinedFunctions
  nameWithType: CosmosScripts.readAllUserDefinedFunctions
  fullName: com.azure.cosmos.CosmosScripts.readAllUserDefinedFunctions
  package: com.azure.cosmos
- uid: com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions*
  name: queryUserDefinedFunctions
  nameWithType: CosmosScripts.queryUserDefinedFunctions
  fullName: com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions
  package: com.azure.cosmos
- uid: com.azure.cosmos.CosmosUserDefinedFunction
  name: CosmosUserDefinedFunction
  nameWithType: CosmosUserDefinedFunction
  fullName: com.azure.cosmos.CosmosUserDefinedFunction
- uid: com.azure.cosmos.CosmosScripts.getUserDefinedFunction*
  name: getUserDefinedFunction
  nameWithType: CosmosScripts.getUserDefinedFunction
  fullName: com.azure.cosmos.CosmosScripts.getUserDefinedFunction
  package: com.azure.cosmos
- uid: com.azure.cosmos.models.CosmosTriggerProperties
  name: CosmosTriggerProperties
  nameWithType: CosmosTriggerProperties
  fullName: com.azure.cosmos.models.CosmosTriggerProperties
- uid: com.azure.cosmos.models.CosmosTriggerResponse
  name: CosmosTriggerResponse
  nameWithType: CosmosTriggerResponse
  fullName: com.azure.cosmos.models.CosmosTriggerResponse
- uid: com.azure.cosmos.CosmosScripts.createTrigger*
  name: createTrigger
  nameWithType: CosmosScripts.createTrigger
  fullName: com.azure.cosmos.CosmosScripts.createTrigger
  package: com.azure.cosmos
- uid: com.azure.cosmos.util.CosmosPagedIterable<com.azure.cosmos.models.CosmosTriggerProperties>
  spec.java:
  - uid: com.azure.cosmos.util.CosmosPagedIterable
    name: CosmosPagedIterable
    fullName: com.azure.cosmos.util.CosmosPagedIterable
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.CosmosTriggerProperties
    name: CosmosTriggerProperties
    fullName: com.azure.cosmos.models.CosmosTriggerProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.CosmosScripts.readAllTriggers*
  name: readAllTriggers
  nameWithType: CosmosScripts.readAllTriggers
  fullName: com.azure.cosmos.CosmosScripts.readAllTriggers
  package: com.azure.cosmos
- uid: com.azure.cosmos.CosmosScripts.queryTriggers*
  name: queryTriggers
  nameWithType: CosmosScripts.queryTriggers
  fullName: com.azure.cosmos.CosmosScripts.queryTriggers
  package: com.azure.cosmos
- uid: com.azure.cosmos.CosmosTrigger
  name: CosmosTrigger
  nameWithType: CosmosTrigger
  fullName: com.azure.cosmos.CosmosTrigger
- uid: com.azure.cosmos.CosmosScripts.getTrigger*
  name: getTrigger
  nameWithType: CosmosScripts.getTrigger
  fullName: com.azure.cosmos.CosmosScripts.getTrigger
  package: com.azure.cosmos
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.cosmos.util.CosmosPagedIterable
  name: CosmosPagedIterable
  nameWithType: CosmosPagedIterable
  fullName: com.azure.cosmos.util.CosmosPagedIterable
