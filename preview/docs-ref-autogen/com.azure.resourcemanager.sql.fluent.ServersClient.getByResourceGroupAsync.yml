### YamlMime:JavaMember
uid: "com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupAsync*"
fullName: "com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupAsync"
name: "getByResourceGroupAsync"
nameWithType: "ServersClient.getByResourceGroupAsync"
members:
- uid: "com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.sql.fluent.ServersClient.getByResourceGroupAsync(String resourceGroupName, String serverName)"
  name: "getByResourceGroupAsync(String resourceGroupName, String serverName)"
  nameWithType: "ServersClient.getByResourceGroupAsync(String resourceGroupName, String serverName)"
  summary: "Gets a server."
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the server."
    name: "serverName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<ServerInner> getByResourceGroupAsync(String resourceGroupName, String serverName)"
  returns:
    description: "a server."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.sql.fluent.models.ServerInner?alt=com.azure.resourcemanager.sql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.sql.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
