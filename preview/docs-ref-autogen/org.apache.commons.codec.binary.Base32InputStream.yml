### YamlMime:JavaType
uid: "org.apache.commons.codec.binary.Base32InputStream"
fullName: "org.apache.commons.codec.binary.Base32InputStream"
name: "Base32InputStream"
nameWithType: "Base32InputStream"
summary: "Provides Base32 encoding and decoding in a streaming fashion (unlimited size). When encoding the default lineLength is 76 characters and the default lineEnding is CRLF, but these can be overridden by using the appropriate constructor.\n\nThe default behaviour of the Base32InputStream is to DECODE, whereas the default behaviour of the Base32OutputStream is to ENCODE, but this behaviour can be overridden by using a different constructor.\n\nSince this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc)."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.io.InputStream\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.io.FilterInputStream\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.apache.commons.codec.binary.BaseNCodecInputStream\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.io.FilterInputStream.close()"
- "java.io.FilterInputStream.read(byte[])"
- "java.io.InputStream.nullInputStream()"
- "java.io.InputStream.readAllBytes()"
- "java.io.InputStream.readNBytes(byte[],int,int)"
- "java.io.InputStream.readNBytes(int)"
- "java.io.InputStream.transferTo(java.io.OutputStream)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "org.apache.commons.codec.binary.BaseNCodecInputStream.available()"
- "org.apache.commons.codec.binary.BaseNCodecInputStream.mark(int)"
- "org.apache.commons.codec.binary.BaseNCodecInputStream.markSupported()"
- "org.apache.commons.codec.binary.BaseNCodecInputStream.read()"
- "org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)"
- "org.apache.commons.codec.binary.BaseNCodecInputStream.reset()"
- "org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)"
syntax: "public class Base32InputStream extends BaseNCodecInputStream"
constructors:
- "org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(java.io.InputStream)"
- "org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(java.io.InputStream,boolean)"
- "org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(java.io.InputStream,boolean,int,byte[])"
type: "class"
metadata: {}
package: "org.apache.commons.codec.binary"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
