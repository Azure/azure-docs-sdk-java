### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace"
fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace"
name: "PartnerNamespace"
nameWithType: "PartnerNamespace"
summary: "An immutable client-side representation of Partner<wbr>Namespace."
syntax: "public interface PartnerNamespace"
methods:
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.disableLocalAuth()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.disableLocalAuth()"
  name: "disableLocalAuth()"
  nameWithType: "PartnerNamespace.disableLocalAuth()"
  summary: "Gets the disable<wbr>Local<wbr>Auth property: This boolean is used to enable or disable local auth."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean disableLocalAuth()"
  desc: "Gets the disableLocalAuth property: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace."
  returns:
    description: "the disableLocalAuth value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.endpoint()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.endpoint()"
  name: "endpoint()"
  nameWithType: "PartnerNamespace.endpoint()"
  summary: "Gets the endpoint property: Endpoint for the partner namespace."
  modifiers:
  - "abstract"
  syntax: "public abstract String endpoint()"
  desc: "Gets the endpoint property: Endpoint for the partner namespace."
  returns:
    description: "the endpoint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.id()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.id()"
  name: "id()"
  nameWithType: "PartnerNamespace.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.inboundIpRules()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.inboundIpRules()"
  name: "inboundIpRules()"
  nameWithType: "PartnerNamespace.inboundIpRules()"
  summary: "Gets the inbound<wbr>IpRules property: This can be used to restrict traffic from specific IPs instead of all IPs."
  modifiers:
  - "abstract"
  syntax: "public abstract List<InboundIpRule> inboundIpRules()"
  desc: "Gets the inboundIpRules property: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled."
  returns:
    description: "the inboundIpRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.InboundIpRule?alt=com.azure.resourcemanager.eventgrid.models.InboundIpRule&text=InboundIpRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.innerModel()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.innerModel()"
  name: "innerModel()"
  nameWithType: "PartnerNamespace.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>eventgrid.<wbr>fluent.<wbr>models.<wbr>Partner<wbr>Namespace<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerNamespaceInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner&text=PartnerNamespaceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.listSharedAccessKeys()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.listSharedAccessKeys()"
  name: "listSharedAccessKeys()"
  nameWithType: "PartnerNamespace.listSharedAccessKeys()"
  summary: "List the two keys used to publish to a partner namespace."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerNamespaceSharedAccessKeys listSharedAccessKeys()"
  desc: "List the two keys used to publish to a partner namespace."
  returns:
    description: "shared access keys of the partner namespace."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespaceSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespaceSharedAccessKeys&text=PartnerNamespaceSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.listSharedAccessKeysWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.listSharedAccessKeysWithResponse(Context context)"
  name: "listSharedAccessKeysWithResponse(Context context)"
  nameWithType: "PartnerNamespace.listSharedAccessKeysWithResponse(Context context)"
  summary: "List the two keys used to publish to a partner namespace."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PartnerNamespaceSharedAccessKeys> listSharedAccessKeysWithResponse(Context context)"
  desc: "List the two keys used to publish to a partner namespace."
  returns:
    description: "shared access keys of the partner namespace along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespaceSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespaceSharedAccessKeys&text=PartnerNamespaceSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.location()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.location()"
  name: "location()"
  nameWithType: "PartnerNamespace.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  desc: "Gets the location property: The geo-location where the resource lives."
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.name()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.name()"
  name: "name()"
  nameWithType: "PartnerNamespace.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.partnerRegistrationFullyQualifiedId()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.partnerRegistrationFullyQualifiedId()"
  name: "partnerRegistrationFullyQualifiedId()"
  nameWithType: "PartnerNamespace.partnerRegistrationFullyQualifiedId()"
  summary: "Gets the partner<wbr>Registration<wbr>Fully<wbr>Qualified<wbr>Id property: The fully qualified ARM Id of the partner registration that should be associated with this partner namespace."
  modifiers:
  - "abstract"
  syntax: "public abstract String partnerRegistrationFullyQualifiedId()"
  desc: "Gets the partnerRegistrationFullyQualifiedId property: The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format: /subscriptions/\\{subscriptionId\\}/resourceGroups/\\{resourceGroupName\\}/providers/Microsoft.EventGrid/partnerRegistrations/\\{partnerRegistrationName\\}."
  returns:
    description: "the partnerRegistrationFullyQualifiedId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.partnerTopicRoutingMode()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.partnerTopicRoutingMode()"
  name: "partnerTopicRoutingMode()"
  nameWithType: "PartnerNamespace.partnerTopicRoutingMode()"
  summary: "Gets the partner<wbr>Topic<wbr>Routing<wbr>Mode property: This determines if events published to this partner namespace should use the source attribute in the event payload or use the channel name in the header when matching to the partner topic."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerTopicRoutingMode partnerTopicRoutingMode()"
  desc: "Gets the partnerTopicRoutingMode property: This determines if events published to this partner namespace should use the source attribute in the event payload or use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic."
  returns:
    description: "the partnerTopicRoutingMode value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopicRoutingMode?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopicRoutingMode&text=PartnerTopicRoutingMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.privateEndpointConnections()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.privateEndpointConnections()"
  name: "privateEndpointConnections()"
  nameWithType: "PartnerNamespace.privateEndpointConnections()"
  summary: "Gets the private<wbr>Endpoint<wbr>Connections property: The private<wbr>Endpoint<wbr>Connections property."
  modifiers:
  - "abstract"
  syntax: "public abstract List<PrivateEndpointConnection> privateEndpointConnections()"
  desc: "Gets the privateEndpointConnections property: The privateEndpointConnections property."
  returns:
    description: "the privateEndpointConnections value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.PrivateEndpointConnection?alt=com.azure.resourcemanager.eventgrid.models.PrivateEndpointConnection&text=PrivateEndpointConnection\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.provisioningState()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.provisioningState()"
  name: "provisioningState()"
  nameWithType: "PartnerNamespace.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: Provisioning state of the partner namespace."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerNamespaceProvisioningState provisioningState()"
  desc: "Gets the provisioningState property: Provisioning state of the partner namespace."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespaceProvisioningState?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespaceProvisioningState&text=PartnerNamespaceProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "PartnerNamespace.publicNetworkAccess()"
  summary: "Gets the public<wbr>Network<wbr>Access property: This determines if traffic is allowed over public network."
  modifiers:
  - "abstract"
  syntax: "public abstract PublicNetworkAccess publicNetworkAccess()"
  desc: "Gets the publicNetworkAccess property: This determines if traffic is allowed over public network. By default it is enabled. You can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\" />."
  returns:
    description: "the publicNetworkAccess value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess?alt=com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.refresh()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.refresh()"
  name: "refresh()"
  nameWithType: "PartnerNamespace.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerNamespace refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespace?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespace&text=PartnerNamespace\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "PartnerNamespace.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PartnerNamespace refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespace?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespace&text=PartnerNamespace\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.regenerateKey(com.azure.resourcemanager.eventgrid.models.PartnerNamespaceRegenerateKeyRequest)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.regenerateKey(PartnerNamespaceRegenerateKeyRequest regenerateKeyRequest)"
  name: "regenerateKey(PartnerNamespaceRegenerateKeyRequest regenerateKeyRequest)"
  nameWithType: "PartnerNamespace.regenerateKey(PartnerNamespaceRegenerateKeyRequest regenerateKeyRequest)"
  summary: "Regenerate a shared access key for a partner namespace."
  modifiers:
  - "abstract"
  parameters:
  - description: "Request body to regenerate key."
    name: "regenerateKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespaceRegenerateKeyRequest?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespaceRegenerateKeyRequest&text=PartnerNamespaceRegenerateKeyRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PartnerNamespaceSharedAccessKeys regenerateKey(PartnerNamespaceRegenerateKeyRequest regenerateKeyRequest)"
  desc: "Regenerate a shared access key for a partner namespace."
  returns:
    description: "shared access keys of the partner namespace."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespaceSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespaceSharedAccessKeys&text=PartnerNamespaceSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.regenerateKeyWithResponse(com.azure.resourcemanager.eventgrid.models.PartnerNamespaceRegenerateKeyRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.regenerateKeyWithResponse(PartnerNamespaceRegenerateKeyRequest regenerateKeyRequest, Context context)"
  name: "regenerateKeyWithResponse(PartnerNamespaceRegenerateKeyRequest regenerateKeyRequest, Context context)"
  nameWithType: "PartnerNamespace.regenerateKeyWithResponse(PartnerNamespaceRegenerateKeyRequest regenerateKeyRequest, Context context)"
  summary: "Regenerate a shared access key for a partner namespace."
  modifiers:
  - "abstract"
  parameters:
  - description: "Request body to regenerate key."
    name: "regenerateKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespaceRegenerateKeyRequest?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespaceRegenerateKeyRequest&text=PartnerNamespaceRegenerateKeyRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PartnerNamespaceSharedAccessKeys> regenerateKeyWithResponse(PartnerNamespaceRegenerateKeyRequest regenerateKeyRequest, Context context)"
  desc: "Regenerate a shared access key for a partner namespace."
  returns:
    description: "shared access keys of the partner namespace along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespaceSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespaceSharedAccessKeys&text=PartnerNamespaceSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.region()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.region()"
  name: "region()"
  nameWithType: "PartnerNamespace.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  desc: "Gets the region of the resource."
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.regionName()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.regionName()"
  name: "regionName()"
  nameWithType: "PartnerNamespace.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  desc: "Gets the name of the resource region."
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.resourceGroupName()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "PartnerNamespace.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  desc: "Gets the name of the resource group."
  returns:
    description: "the name of the resource group."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.systemData()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.systemData()"
  name: "systemData()"
  nameWithType: "PartnerNamespace.systemData()"
  summary: "Gets the system<wbr>Data property: The system metadata relating to Partner Namespace resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  desc: "Gets the systemData property: The system metadata relating to Partner Namespace resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.tags()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.tags()"
  name: "tags()"
  nameWithType: "PartnerNamespace.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  desc: "Gets the tags property: Resource tags."
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.type()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.type()"
  name: "type()"
  nameWithType: "PartnerNamespace.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.update()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespace.update()"
  name: "update()"
  nameWithType: "PartnerNamespace.update()"
  summary: "Begins update for the Partner<wbr>Namespace resource."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerNamespace.Update update()"
  desc: "Begins update for the PartnerNamespace resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespace.Update?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespace.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of PartnerNamespace."
metadata: {}
package: "com.azure.resourcemanager.eventgrid.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.2.0-beta.3
