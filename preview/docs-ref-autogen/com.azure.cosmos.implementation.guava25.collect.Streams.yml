### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.Streams"
fullName: "com.azure.cosmos.implementation.guava25.collect.Streams"
name: "Streams"
nameWithType: "Streams"
summary: "Static utility methods related to `Stream` instances."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Streams"
methods:
- "com.azure.cosmos.implementation.guava25.collect.Streams.<A,B,R>zip(java.util.stream.Stream<A>,java.util.stream.Stream<B>,java.util.function.BiFunction<? super A,? super B,R>)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.<A,B>forEachPair(java.util.stream.Stream<A>,java.util.stream.Stream<B>,java.util.function.BiConsumer<? super A,? super B>)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.<R>mapWithIndex(java.util.stream.DoubleStream,com.azure.cosmos.implementation.guava25.collect.Streams.DoubleFunctionWithIndex<R>)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.<R>mapWithIndex(java.util.stream.IntStream,com.azure.cosmos.implementation.guava25.collect.Streams.IntFunctionWithIndex<R>)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.<R>mapWithIndex(java.util.stream.LongStream,com.azure.cosmos.implementation.guava25.collect.Streams.LongFunctionWithIndex<R>)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.<T,R>mapWithIndex(java.util.stream.Stream<T>,com.azure.cosmos.implementation.guava25.collect.Streams.FunctionWithIndex<? super T,? extends R>)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.<T>concat(java.util.stream.Stream<? extends T>...)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.<T>findLast(java.util.stream.Stream<T>)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.<T>stream(com.azure.cosmos.implementation.guava25.base.Optional<T>)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.<T>stream(java.lang.Iterable<T>)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.<T>stream(java.util.Collection<T>)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.<T>stream(java.util.Iterator<T>)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.<T>stream(java.util.Optional<T>)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.concat(java.util.stream.DoubleStream...)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.concat(java.util.stream.IntStream...)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.concat(java.util.stream.LongStream...)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.findLast(java.util.stream.DoubleStream)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.findLast(java.util.stream.IntStream)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.findLast(java.util.stream.LongStream)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.stream(java.util.OptionalDouble)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.stream(java.util.OptionalInt)"
- "com.azure.cosmos.implementation.guava25.collect.Streams.stream(java.util.OptionalLong)"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
