### YamlMime:JavaMember
uid: "com.azure.resourcemanager.timeseriesinsights.implementation.AccessPolicyResourceImpl.withExistingEnvironment*"
fullName: "com.azure.resourcemanager.timeseriesinsights.implementation.AccessPolicyResourceImpl.withExistingEnvironment"
name: "withExistingEnvironment"
nameWithType: "AccessPolicyResourceImpl.withExistingEnvironment"
members:
- uid: "com.azure.resourcemanager.timeseriesinsights.implementation.AccessPolicyResourceImpl.withExistingEnvironment(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.timeseriesinsights.implementation.AccessPolicyResourceImpl.withExistingEnvironment(String resourceGroupName, String environmentName)"
  name: "withExistingEnvironment(String resourceGroupName, String environmentName)"
  nameWithType: "AccessPolicyResourceImpl.withExistingEnvironment(String resourceGroupName, String environmentName)"
  summary: "Specifies resourceGroupName, environmentName."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "environmentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AccessPolicyResourceImpl withExistingEnvironment(String resourceGroupName, String environmentName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.timeseriesinsights.implementation.AccessPolicyResourceImpl?alt=com.azure.resourcemanager.timeseriesinsights.implementation.AccessPolicyResourceImpl&text=AccessPolicyResourceImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.timeseriesinsights.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-timeseriesinsights:1.0.0-beta.1
