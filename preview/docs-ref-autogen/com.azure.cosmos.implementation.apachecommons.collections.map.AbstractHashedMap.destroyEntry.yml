### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.destroyEntry*"
fullName: "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap<K,V>.destroyEntry"
name: "destroyEntry"
nameWithType: "AbstractHashedMap<K,V>.destroyEntry"
members:
- uid: "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.destroyEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)"
  fullName: "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap<K,V>.destroyEntry(AbstractHashedMap.HashEntry<K,V> entry)"
  name: "destroyEntry(AbstractHashedMap.HashEntry<K,V> entry)"
  nameWithType: "AbstractHashedMap<K,V>.destroyEntry(AbstractHashedMap.HashEntry<K,V> entry)"
  summary: "Kills an entry ready for the garbage collector.\n\nThis implementation prepares the HashEntry for garbage collection. Subclasses can override this to implement caching (override clear as well)."
  parameters:
  - description: "the entry to destroy"
    name: "entry"
    type: "<xref href=\"com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry?alt=com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry&text=HashEntry\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "protected void destroyEntry(AbstractHashedMap.HashEntry<K,V> entry)"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.apachecommons.collections.map"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
