### YamlMime:JavaType
uid: "com.azure.monitor.ingestion.models.UploadLogsOptions"
fullName: "com.azure.monitor.ingestion.models.UploadLogsOptions"
name: "UploadLogsOptions"
nameWithType: "UploadLogsOptions"
summary: "The options model to configure the request to upload logs to Azure Monitor."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class UploadLogsOptions"
constructors:
- uid: "com.azure.monitor.ingestion.models.UploadLogsOptions.UploadLogsOptions()"
  fullName: "com.azure.monitor.ingestion.models.UploadLogsOptions.UploadLogsOptions()"
  name: "UploadLogsOptions()"
  nameWithType: "UploadLogsOptions.UploadLogsOptions()"
  syntax: "public UploadLogsOptions()"
methods:
- uid: "com.azure.monitor.ingestion.models.UploadLogsOptions.getMaxConcurrency()"
  fullName: "com.azure.monitor.ingestion.models.UploadLogsOptions.getMaxConcurrency()"
  name: "getMaxConcurrency()"
  nameWithType: "UploadLogsOptions.getMaxConcurrency()"
  summary: "Returns the max concurrent requests to send to the Azure Monitor service when uploading logs."
  syntax: "public Integer getMaxConcurrency()"
  desc: "Returns the max concurrent requests to send to the Azure Monitor service when uploading logs."
  returns:
    description: "the max concurrent requests to send to the Azure Monitor service when uploading logs."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.monitor.ingestion.models.UploadLogsOptions.getObjectSerializer()"
  fullName: "com.azure.monitor.ingestion.models.UploadLogsOptions.getObjectSerializer()"
  name: "getObjectSerializer()"
  nameWithType: "UploadLogsOptions.getObjectSerializer()"
  summary: "Returns the serializer to use to convert the log objects to JSON."
  syntax: "public ObjectSerializer getObjectSerializer()"
  desc: "Returns the serializer to use to convert the log objects to JSON."
  returns:
    description: "the serializer to use to convert the log objects to JSON."
    type: "<xref href=\"com.azure.core.util.serializer.ObjectSerializer?alt=com.azure.core.util.serializer.ObjectSerializer&text=ObjectSerializer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.monitor.ingestion.models.UploadLogsOptions.setMaxConcurrency(java.lang.Integer)"
  fullName: "com.azure.monitor.ingestion.models.UploadLogsOptions.setMaxConcurrency(Integer maxConcurrency)"
  name: "setMaxConcurrency(Integer maxConcurrency)"
  nameWithType: "UploadLogsOptions.setMaxConcurrency(Integer maxConcurrency)"
  summary: "Sets the max concurrent requests to send to the Azure Monitor service when uploading logs."
  parameters:
  - description: "the max concurrent requests to send to the Azure Monitor service when uploading logs."
    name: "maxConcurrency"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UploadLogsOptions setMaxConcurrency(Integer maxConcurrency)"
  desc: "Sets the max concurrent requests to send to the Azure Monitor service when uploading logs."
  returns:
    description: "the update <xref uid=\"com.azure.monitor.ingestion.models.UploadLogsOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UploadLogsOptions\"></xref> instance."
    type: "<xref href=\"com.azure.monitor.ingestion.models.UploadLogsOptions?alt=com.azure.monitor.ingestion.models.UploadLogsOptions&text=UploadLogsOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.monitor.ingestion.models.UploadLogsOptions.setObjectSerializer(com.azure.core.util.serializer.ObjectSerializer)"
  fullName: "com.azure.monitor.ingestion.models.UploadLogsOptions.setObjectSerializer(ObjectSerializer objectSerializer)"
  name: "setObjectSerializer(ObjectSerializer objectSerializer)"
  nameWithType: "UploadLogsOptions.setObjectSerializer(ObjectSerializer objectSerializer)"
  summary: "Sets the serializer to use to convert the log objects to JSON."
  parameters:
  - description: "the serializer to use to convert the log objects to JSON."
    name: "objectSerializer"
    type: "<xref href=\"com.azure.core.util.serializer.ObjectSerializer?alt=com.azure.core.util.serializer.ObjectSerializer&text=ObjectSerializer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UploadLogsOptions setObjectSerializer(ObjectSerializer objectSerializer)"
  desc: "Sets the serializer to use to convert the log objects to JSON."
  returns:
    description: "the update <xref uid=\"com.azure.monitor.ingestion.models.UploadLogsOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UploadLogsOptions\"></xref> instance."
    type: "<xref href=\"com.azure.monitor.ingestion.models.UploadLogsOptions?alt=com.azure.monitor.ingestion.models.UploadLogsOptions&text=UploadLogsOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The options model to configure the request to upload logs to Azure Monitor."
metadata: {}
package: "com.azure.monitor.ingestion.models"
artifact: com.azure:azure-monitor-ingestion:1.0.0-beta.2
