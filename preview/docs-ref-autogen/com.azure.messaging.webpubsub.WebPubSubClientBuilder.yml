### YamlMime:JavaType
uid: "com.azure.messaging.webpubsub.WebPubSubClientBuilder"
fullName: "com.azure.messaging.webpubsub.WebPubSubClientBuilder"
name: "WebPubSubClientBuilder"
nameWithType: "WebPubSubClientBuilder"
summary: "This class provides a fluent builder API to aid the configuration and instantiation of <xref uid=\"com.azure.messaging.webpubsub.WebPubSubServiceClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"sync\"></xref> and <xref uid=\"com.azure.messaging.webpubsub.WebPubSubAsyncServiceClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"async\"></xref> Azure Web Pub Sub clients, using the <xref uid=\"com.azure.messaging.webpubsub.WebPubSubClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"buildClient\"></xref> and <xref uid=\"com.azure.messaging.webpubsub.WebPubSubClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"buildAsyncClient\"></xref> methods respectively.\n\nTo fully configure a Azure Web Pub Sub client, it is necessary to supply a <xref uid=\"com.azure.messaging.webpubsub.WebPubSubClientBuilder.connectionString(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"connection string\"></xref> retrieved from the Azure Portal, or else a combination of <xref uid=\"com.azure.messaging.webpubsub.WebPubSubClientBuilder.credential(com.azure.core.credential.AzureKeyCredential)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"credential\"></xref> and <xref uid=\"com.azure.messaging.webpubsub.WebPubSubClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"endpoint\"></xref>.\n\nAn Azure Web Pub Sub client is required to connect to a specific <xref uid=\"com.azure.messaging.webpubsub.WebPubSubClientBuilder.hub(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"hub\"></xref>. An exception will be thrown when the build methods are called if the hub value is null or an empty String.\n\n**Code Samples**\n\n```java\nWebPubSubAsyncServiceClient client = new WebPubSubClientBuilder()\n     .connectionString(\"<Insert connection string from Azure Portal>\")\n     .buildAsyncClient();\n```\n\nThis demonstrates using the connection string provided by the Azure Portal. Another approach is to use the combination of credential and endpoint details, as shown below:\n\n```java\nWebPubSubAsyncServiceClient client = new WebPubSubClientBuilder()\n     .credential(new AzureKeyCredential(\"<Insert key from Azure Portal>\"))\n     .endpoint(\"<Insert endpoint from Azure Portal>\")\n     .buildAsyncClient();\n```\n\nOf course, synchronous clients may also be instantiated, by calling <xref uid=\"com.azure.messaging.webpubsub.WebPubSubClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"buildClient\"></xref> rather than <xref uid=\"com.azure.messaging.webpubsub.WebPubSubClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"buildAsyncClient\"></xref>.\n\n```java\nWebPubSubServiceClient client = new WebPubSubClientBuilder()\n     .connectionString(\"<Insert connection string from Azure Portal>\")\n     .buildClient();\n```"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class WebPubSubClientBuilder"
constructors:
- "com.azure.messaging.webpubsub.WebPubSubClientBuilder.WebPubSubClientBuilder()"
methods:
- "com.azure.messaging.webpubsub.WebPubSubClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
- "com.azure.messaging.webpubsub.WebPubSubClientBuilder.buildAsyncClient()"
- "com.azure.messaging.webpubsub.WebPubSubClientBuilder.buildClient()"
- "com.azure.messaging.webpubsub.WebPubSubClientBuilder.clientOptions(com.azure.core.util.ClientOptions)"
- "com.azure.messaging.webpubsub.WebPubSubClientBuilder.configuration(com.azure.core.util.Configuration)"
- "com.azure.messaging.webpubsub.WebPubSubClientBuilder.connectionString(java.lang.String)"
- "com.azure.messaging.webpubsub.WebPubSubClientBuilder.credential(com.azure.core.credential.AzureKeyCredential)"
- "com.azure.messaging.webpubsub.WebPubSubClientBuilder.endpoint(java.lang.String)"
- "com.azure.messaging.webpubsub.WebPubSubClientBuilder.httpClient(com.azure.core.http.HttpClient)"
- "com.azure.messaging.webpubsub.WebPubSubClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
- "com.azure.messaging.webpubsub.WebPubSubClientBuilder.hub(java.lang.String)"
- "com.azure.messaging.webpubsub.WebPubSubClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
- "com.azure.messaging.webpubsub.WebPubSubClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)"
- "com.azure.messaging.webpubsub.WebPubSubClientBuilder.serviceVersion(com.azure.messaging.webpubsub.WebPubSubServiceVersion)"
type: "class"
metadata: {}
package: "com.azure.messaging.webpubsub"
artifact: com.azure:azure-messaging-webpubsub:1.0.0-beta.2
