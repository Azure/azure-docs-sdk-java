### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.auth.KerberosCredentials
  id: KerberosCredentials
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.auth
  children:
  - org.apache.hc.client5.http.auth.KerberosCredentials.KerberosCredentials(org.ietf.jgss.GSSCredential)
  - org.apache.hc.client5.http.auth.KerberosCredentials.getGSSCredential()
  - org.apache.hc.client5.http.auth.KerberosCredentials.getPassword()
  - org.apache.hc.client5.http.auth.KerberosCredentials.getUserPrincipal()
  langs:
  - java
  name: KerberosCredentials
  nameWithType: KerberosCredentials
  fullName: org.apache.hc.client5.http.auth.KerberosCredentials
  type: Class
  package: org.apache.hc.client5.http.auth
  summary: Kerberos specific <xref uid="org.apache.hc.client5.http.auth.Credentials" data-throw-if-not-resolved="false">Credentials</xref> representation based on <xref uid="org.ietf.jgss.GSSCredential" data-throw-if-not-resolved="false">GSSCredential</xref>.
  syntax:
    content: public class KerberosCredentials implements Credentials, Serializable
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.client5.http.auth.Credentials
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.auth.KerberosCredentials.KerberosCredentials(org.ietf.jgss.GSSCredential)
  id: KerberosCredentials(org.ietf.jgss.GSSCredential)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.auth.KerberosCredentials
  langs:
  - java
  name: KerberosCredentials(GSSCredential gssCredential)
  nameWithType: KerberosCredentials.KerberosCredentials(GSSCredential gssCredential)
  fullName: org.apache.hc.client5.http.auth.KerberosCredentials.KerberosCredentials(GSSCredential gssCredential)
  overload: org.apache.hc.client5.http.auth.KerberosCredentials.KerberosCredentials*
  type: Constructor
  package: org.apache.hc.client5.http.auth
  summary: Constructor with GSSCredential argument
  syntax:
    content: public KerberosCredentials(GSSCredential gssCredential)
    parameters:
    - id: gssCredential
      type: org.ietf.jgss.GSSCredential
- uid: org.apache.hc.client5.http.auth.KerberosCredentials.getGSSCredential()
  id: getGSSCredential()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.auth.KerberosCredentials
  langs:
  - java
  name: getGSSCredential()
  nameWithType: KerberosCredentials.getGSSCredential()
  fullName: org.apache.hc.client5.http.auth.KerberosCredentials.getGSSCredential()
  overload: org.apache.hc.client5.http.auth.KerberosCredentials.getGSSCredential*
  type: Method
  package: org.apache.hc.client5.http.auth
  syntax:
    content: public GSSCredential getGSSCredential()
    return:
      type: org.ietf.jgss.GSSCredential
- uid: org.apache.hc.client5.http.auth.KerberosCredentials.getPassword()
  id: getPassword()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.auth.KerberosCredentials
  langs:
  - java
  name: getPassword()
  nameWithType: KerberosCredentials.getPassword()
  fullName: org.apache.hc.client5.http.auth.KerberosCredentials.getPassword()
  overload: org.apache.hc.client5.http.auth.KerberosCredentials.getPassword*
  type: Method
  package: org.apache.hc.client5.http.auth
  syntax:
    content: public char[] getPassword()
    return:
      type: char[]
- uid: org.apache.hc.client5.http.auth.KerberosCredentials.getUserPrincipal()
  id: getUserPrincipal()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.auth.KerberosCredentials
  langs:
  - java
  name: getUserPrincipal()
  nameWithType: KerberosCredentials.getUserPrincipal()
  fullName: org.apache.hc.client5.http.auth.KerberosCredentials.getUserPrincipal()
  overload: org.apache.hc.client5.http.auth.KerberosCredentials.getUserPrincipal*
  type: Method
  package: org.apache.hc.client5.http.auth
  syntax:
    content: public Principal getUserPrincipal()
    return:
      type: java.security.Principal
references:
- uid: org.ietf.jgss.GSSCredential
  spec.java:
  - uid: org.ietf.jgss.GSSCredential
    name: GSSCredential
    fullName: org.ietf.jgss.GSSCredential
- uid: org.apache.hc.client5.http.auth.KerberosCredentials.KerberosCredentials*
  name: KerberosCredentials
  nameWithType: KerberosCredentials.KerberosCredentials
  fullName: org.apache.hc.client5.http.auth.KerberosCredentials.KerberosCredentials
  package: org.apache.hc.client5.http.auth
- uid: org.apache.hc.client5.http.auth.KerberosCredentials.getGSSCredential*
  name: getGSSCredential
  nameWithType: KerberosCredentials.getGSSCredential
  fullName: org.apache.hc.client5.http.auth.KerberosCredentials.getGSSCredential
  package: org.apache.hc.client5.http.auth
- uid: java.security.Principal
  spec.java:
  - uid: java.security.Principal
    name: Principal
    fullName: java.security.Principal
- uid: org.apache.hc.client5.http.auth.KerberosCredentials.getUserPrincipal*
  name: getUserPrincipal
  nameWithType: KerberosCredentials.getUserPrincipal
  fullName: org.apache.hc.client5.http.auth.KerberosCredentials.getUserPrincipal
  package: org.apache.hc.client5.http.auth
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: org.apache.hc.client5.http.auth.KerberosCredentials.getPassword*
  name: getPassword
  nameWithType: KerberosCredentials.getPassword
  fullName: org.apache.hc.client5.http.auth.KerberosCredentials.getPassword
  package: org.apache.hc.client5.http.auth
- uid: org.apache.hc.client5.http.auth.Credentials
  name: Credentials
  nameWithType: Credentials
  fullName: org.apache.hc.client5.http.auth.Credentials
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
