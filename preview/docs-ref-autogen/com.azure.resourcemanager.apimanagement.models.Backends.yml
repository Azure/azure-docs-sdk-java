### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.models.Backends"
fullName: "com.azure.resourcemanager.apimanagement.models.Backends"
name: "Backends"
nameWithType: "Backends"
summary: "Resource collection API of Backends."
syntax: "public interface Backends"
methods:
- uid: "com.azure.resourcemanager.apimanagement.models.Backends.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Backends.define(String name)"
  name: "define(String name)"
  nameWithType: "Backends.define(String name)"
  summary: "Begins definition for a new Backend<wbr>Contract resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BackendContract.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new BackendContract resource."
  returns:
    description: "the first stage of the new BackendContract definition."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendContract.DefinitionStages.Blank?alt=com.azure.resourcemanager.apimanagement.models.BackendContract.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.Backends.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Backends.delete(String resourceGroupName, String serviceName, String backendId, String ifMatch)"
  name: "delete(String resourceGroupName, String serviceName, String backendId, String ifMatch)"
  nameWithType: "Backends.delete(String resourceGroupName, String serviceName, String backendId, String ifMatch)"
  summary: "Deletes the specified backend."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET\n     request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String serviceName, String backendId, String ifMatch)"
  desc: "Deletes the specified backend."
- uid: "com.azure.resourcemanager.apimanagement.models.Backends.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Backends.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Backends.deleteById(String id)"
  summary: "Deletes the specified backend."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Deletes the specified backend."
- uid: "com.azure.resourcemanager.apimanagement.models.Backends.deleteByIdWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Backends.deleteByIdWithResponse(String id, String ifMatch, Context context)"
  name: "deleteByIdWithResponse(String id, String ifMatch, Context context)"
  nameWithType: "Backends.deleteByIdWithResponse(String id, String ifMatch, Context context)"
  summary: "Deletes the specified backend."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET\n     request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByIdWithResponse(String id, String ifMatch, Context context)"
  desc: "Deletes the specified backend."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Backends.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Backends.deleteWithResponse(String resourceGroupName, String serviceName, String backendId, String ifMatch, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String serviceName, String backendId, String ifMatch, Context context)"
  nameWithType: "Backends.deleteWithResponse(String resourceGroupName, String serviceName, String backendId, String ifMatch, Context context)"
  summary: "Deletes the specified backend."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET\n     request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String serviceName, String backendId, String ifMatch, Context context)"
  desc: "Deletes the specified backend."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Backends.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Backends.get(String resourceGroupName, String serviceName, String backendId)"
  name: "get(String resourceGroupName, String serviceName, String backendId)"
  nameWithType: "Backends.get(String resourceGroupName, String serviceName, String backendId)"
  summary: "Gets the details of the backend specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BackendContract get(String resourceGroupName, String serviceName, String backendId)"
  desc: "Gets the details of the backend specified by its identifier."
  returns:
    description: "the details of the backend specified by its identifier."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendContract?alt=com.azure.resourcemanager.apimanagement.models.BackendContract&text=BackendContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.Backends.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Backends.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Backends.getById(String id)"
  summary: "Gets the details of the backend specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BackendContract getById(String id)"
  desc: "Gets the details of the backend specified by its identifier."
  returns:
    description: "the details of the backend specified by its identifier."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendContract?alt=com.azure.resourcemanager.apimanagement.models.BackendContract&text=BackendContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.Backends.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Backends.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Backends.getByIdWithResponse(String id, Context context)"
  summary: "Gets the details of the backend specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<BackendContract> getByIdWithResponse(String id, Context context)"
  desc: "Gets the details of the backend specified by its identifier."
  returns:
    description: "the details of the backend specified by its identifier."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendContract?alt=com.azure.resourcemanager.apimanagement.models.BackendContract&text=BackendContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Backends.getEntityTag(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Backends.getEntityTag(String resourceGroupName, String serviceName, String backendId)"
  name: "getEntityTag(String resourceGroupName, String serviceName, String backendId)"
  nameWithType: "Backends.getEntityTag(String resourceGroupName, String serviceName, String backendId)"
  summary: "Gets the entity state (Etag) version of the backend specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void getEntityTag(String resourceGroupName, String serviceName, String backendId)"
  desc: "Gets the entity state (Etag) version of the backend specified by its identifier."
- uid: "com.azure.resourcemanager.apimanagement.models.Backends.getEntityTagWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Backends.getEntityTagWithResponse(String resourceGroupName, String serviceName, String backendId, Context context)"
  name: "getEntityTagWithResponse(String resourceGroupName, String serviceName, String backendId, Context context)"
  nameWithType: "Backends.getEntityTagWithResponse(String resourceGroupName, String serviceName, String backendId, Context context)"
  summary: "Gets the entity state (Etag) version of the backend specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BackendsGetEntityTagResponse getEntityTagWithResponse(String resourceGroupName, String serviceName, String backendId, Context context)"
  desc: "Gets the entity state (Etag) version of the backend specified by its identifier."
  returns:
    description: "the entity state (Etag) version of the backend specified by its identifier."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendsGetEntityTagResponse?alt=com.azure.resourcemanager.apimanagement.models.BackendsGetEntityTagResponse&text=BackendsGetEntityTagResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.Backends.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Backends.getWithResponse(String resourceGroupName, String serviceName, String backendId, Context context)"
  name: "getWithResponse(String resourceGroupName, String serviceName, String backendId, Context context)"
  nameWithType: "Backends.getWithResponse(String resourceGroupName, String serviceName, String backendId, Context context)"
  summary: "Gets the details of the backend specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<BackendContract> getWithResponse(String resourceGroupName, String serviceName, String backendId, Context context)"
  desc: "Gets the details of the backend specified by its identifier."
  returns:
    description: "the details of the backend specified by its identifier."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendContract?alt=com.azure.resourcemanager.apimanagement.models.BackendContract&text=BackendContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Backends.listByService(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Backends.listByService(String resourceGroupName, String serviceName)"
  name: "listByService(String resourceGroupName, String serviceName)"
  nameWithType: "Backends.listByService(String resourceGroupName, String serviceName)"
  summary: "Lists a collection of backends in the specified service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<BackendContract> listByService(String resourceGroupName, String serviceName)"
  desc: "Lists a collection of backends in the specified service instance."
  returns:
    description: "paged Backend list representation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendContract?alt=com.azure.resourcemanager.apimanagement.models.BackendContract&text=BackendContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Backends.listByService(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Backends.listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Context context)"
  name: "listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Context context)"
  nameWithType: "Backends.listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Context context)"
  summary: "Lists a collection of backends in the specified service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "| Field | Usage | Supported operators | Supported functions\n     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq,\n     ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| title | filter | ge, le, eq, ne, gt,\n     lt | substringof, contains, startswith, endswith |&lt;/br&gt;| url | filter | ge, le, eq, ne, gt, lt |\n     substringof, contains, startswith, endswith |&lt;/br&gt;."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Number of records to skip."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<BackendContract> listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Context context)"
  desc: "Lists a collection of backends in the specified service instance."
  returns:
    description: "paged Backend list representation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendContract?alt=com.azure.resourcemanager.apimanagement.models.BackendContract&text=BackendContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Backends.reconnect(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Backends.reconnect(String resourceGroupName, String serviceName, String backendId)"
  name: "reconnect(String resourceGroupName, String serviceName, String backendId)"
  nameWithType: "Backends.reconnect(String resourceGroupName, String serviceName, String backendId)"
  summary: "Notifies the APIM proxy to create a new connection to the backend after the specified timeout."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void reconnect(String resourceGroupName, String serviceName, String backendId)"
  desc: "Notifies the APIM proxy to create a new connection to the backend after the specified timeout. If no timeout was specified, timeout of 2 minutes is used."
- uid: "com.azure.resourcemanager.apimanagement.models.Backends.reconnectWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.models.BackendReconnectContract,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Backends.reconnectWithResponse(String resourceGroupName, String serviceName, String backendId, BackendReconnectContract parameters, Context context)"
  name: "reconnectWithResponse(String resourceGroupName, String serviceName, String backendId, BackendReconnectContract parameters, Context context)"
  nameWithType: "Backends.reconnectWithResponse(String resourceGroupName, String serviceName, String backendId, BackendReconnectContract parameters, Context context)"
  summary: "Notifies the APIM proxy to create a new connection to the backend after the specified timeout."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the Backend entity. Must be unique in the current API Management service instance."
    name: "backendId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Reconnect request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendReconnectContract?alt=com.azure.resourcemanager.apimanagement.models.BackendReconnectContract&text=BackendReconnectContract\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> reconnectWithResponse(String resourceGroupName, String serviceName, String backendId, BackendReconnectContract parameters, Context context)"
  desc: "Notifies the APIM proxy to create a new connection to the backend after the specified timeout. If no timeout was specified, timeout of 2 minutes is used."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Backends."
metadata: {}
package: "com.azure.resourcemanager.apimanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.3
