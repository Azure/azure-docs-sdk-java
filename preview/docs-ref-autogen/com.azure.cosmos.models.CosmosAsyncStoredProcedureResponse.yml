### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse"
  id: "CosmosAsyncStoredProcedureResponse"
  parent: "com.azure.cosmos.models"
  children:
  - "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.CosmosAsyncStoredProcedureResponse(com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.StoredProcedure>,com.azure.cosmos.CosmosAsyncContainer)"
  - "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.CosmosAsyncStoredProcedureResponse(com.azure.cosmos.implementation.StoredProcedureResponse,com.azure.cosmos.CosmosAsyncContainer,java.lang.String)"
  - "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getActivityId()"
  - "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getProperties()"
  - "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getRequestCharge()"
  - "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getResponseAsString()"
  - "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getScriptLog()"
  - "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getSessionToken()"
  - "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getStatusCode()"
  - "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getStoredProcedure()"
  langs:
  - "java"
  name: "CosmosAsyncStoredProcedureResponse"
  nameWithType: "CosmosAsyncStoredProcedureResponse"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse"
  type: "Class"
  package: "com.azure.cosmos.models"
  summary: "The type Cosmos async stored procedure response."
  syntax:
    content: "public class CosmosAsyncStoredProcedureResponse extends CosmosResponse<CosmosStoredProcedureProperties>"
  inheritance:
  - "java.lang.Object"
  - "com.azure.cosmos.models.CosmosResponse"
  inheritedMembers:
  - "com.azure.cosmos.models.CosmosResponse.getActivityId()"
  - "com.azure.cosmos.models.CosmosResponse.getCosmosResponseDiagnostics()"
  - "com.azure.cosmos.models.CosmosResponse.getCurrentResourceQuotaUsage()"
  - "com.azure.cosmos.models.CosmosResponse.getMaxResourceQuota()"
  - "com.azure.cosmos.models.CosmosResponse.getProperties()"
  - "com.azure.cosmos.models.CosmosResponse.getRequestCharge()"
  - "com.azure.cosmos.models.CosmosResponse.getRequestLatency()"
  - "com.azure.cosmos.models.CosmosResponse.getResponseHeaders()"
  - "com.azure.cosmos.models.CosmosResponse.getSessionToken()"
  - "com.azure.cosmos.models.CosmosResponse.getStatusCode()"
  - "com.azure.cosmos.models.CosmosResponse.setProperties(T)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.CosmosAsyncStoredProcedureResponse(com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.StoredProcedure>,com.azure.cosmos.CosmosAsyncContainer)"
  id: "CosmosAsyncStoredProcedureResponse(com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.StoredProcedure>,com.azure.cosmos.CosmosAsyncContainer)"
  parent: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse"
  langs:
  - "java"
  name: "CosmosAsyncStoredProcedureResponse(ResourceResponse<StoredProcedure> response, CosmosAsyncContainer cosmosContainer)"
  nameWithType: "CosmosAsyncStoredProcedureResponse.CosmosAsyncStoredProcedureResponse(ResourceResponse<StoredProcedure> response, CosmosAsyncContainer cosmosContainer)"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.CosmosAsyncStoredProcedureResponse(ResourceResponse<StoredProcedure> response, CosmosAsyncContainer cosmosContainer)"
  overload: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.CosmosAsyncStoredProcedureResponse*"
  type: "Constructor"
  package: "com.azure.cosmos.models"
  syntax:
    content: " CosmosAsyncStoredProcedureResponse(ResourceResponse<StoredProcedure> response, CosmosAsyncContainer cosmosContainer)"
    parameters:
    - id: "response"
      type: "com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.StoredProcedure>"
    - id: "cosmosContainer"
      type: "com.azure.cosmos.CosmosAsyncContainer"
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.CosmosAsyncStoredProcedureResponse(com.azure.cosmos.implementation.StoredProcedureResponse,com.azure.cosmos.CosmosAsyncContainer,java.lang.String)"
  id: "CosmosAsyncStoredProcedureResponse(com.azure.cosmos.implementation.StoredProcedureResponse,com.azure.cosmos.CosmosAsyncContainer,java.lang.String)"
  parent: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse"
  langs:
  - "java"
  name: "CosmosAsyncStoredProcedureResponse(StoredProcedureResponse response, CosmosAsyncContainer cosmosContainer, String storedProcedureId)"
  nameWithType: "CosmosAsyncStoredProcedureResponse.CosmosAsyncStoredProcedureResponse(StoredProcedureResponse response, CosmosAsyncContainer cosmosContainer, String storedProcedureId)"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.CosmosAsyncStoredProcedureResponse(StoredProcedureResponse response, CosmosAsyncContainer cosmosContainer, String storedProcedureId)"
  overload: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.CosmosAsyncStoredProcedureResponse*"
  type: "Constructor"
  package: "com.azure.cosmos.models"
  syntax:
    content: " CosmosAsyncStoredProcedureResponse(StoredProcedureResponse response, CosmosAsyncContainer cosmosContainer, String storedProcedureId)"
    parameters:
    - id: "response"
      type: "com.azure.cosmos.implementation.StoredProcedureResponse"
    - id: "cosmosContainer"
      type: "com.azure.cosmos.CosmosAsyncContainer"
    - id: "storedProcedureId"
      type: "java.lang.String"
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getActivityId()"
  id: "getActivityId()"
  parent: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse"
  langs:
  - "java"
  name: "getActivityId()"
  nameWithType: "CosmosAsyncStoredProcedureResponse.getActivityId()"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getActivityId()"
  overload: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getActivityId*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the Activity ID for the request."
  syntax:
    content: "public String getActivityId()"
    return:
      type: "java.lang.String"
      description: "the activity id."
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getProperties()"
  id: "getProperties()"
  parent: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse"
  langs:
  - "java"
  name: "getProperties()"
  nameWithType: "CosmosAsyncStoredProcedureResponse.getProperties()"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getProperties()"
  overload: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getProperties*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the stored procedure properties"
  syntax:
    content: "public CosmosStoredProcedureProperties getProperties()"
    return:
      type: "com.azure.cosmos.models.CosmosStoredProcedureProperties"
      description: "the stored procedure properties or null"
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getRequestCharge()"
  id: "getRequestCharge()"
  parent: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse"
  langs:
  - "java"
  name: "getRequestCharge()"
  nameWithType: "CosmosAsyncStoredProcedureResponse.getRequestCharge()"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getRequestCharge()"
  overload: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getRequestCharge*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the number of index paths (terms) generated by the operation."
  syntax:
    content: "public double getRequestCharge()"
    return:
      type: "double"
      description: "the request charge."
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getResponseAsString()"
  id: "getResponseAsString()"
  parent: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse"
  langs:
  - "java"
  name: "getResponseAsString()"
  nameWithType: "CosmosAsyncStoredProcedureResponse.getResponseAsString()"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getResponseAsString()"
  overload: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getResponseAsString*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the response of the stored procedure as a string."
  syntax:
    content: "public String getResponseAsString()"
    return:
      type: "java.lang.String"
      description: "the response as a string."
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getScriptLog()"
  id: "getScriptLog()"
  parent: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse"
  langs:
  - "java"
  name: "getScriptLog()"
  nameWithType: "CosmosAsyncStoredProcedureResponse.getScriptLog()"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getScriptLog()"
  overload: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getScriptLog*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the output from stored procedure console.log() statements."
  syntax:
    content: "public String getScriptLog()"
    return:
      type: "java.lang.String"
      description: "the output string from the stored procedure console.log() statements."
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getSessionToken()"
  id: "getSessionToken()"
  parent: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse"
  langs:
  - "java"
  name: "getSessionToken()"
  nameWithType: "CosmosAsyncStoredProcedureResponse.getSessionToken()"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getSessionToken()"
  overload: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getSessionToken*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the token used for managing client's consistency requirements."
  syntax:
    content: "public String getSessionToken()"
    return:
      type: "java.lang.String"
      description: "the session token."
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getStatusCode()"
  id: "getStatusCode()"
  parent: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse"
  langs:
  - "java"
  name: "getStatusCode()"
  nameWithType: "CosmosAsyncStoredProcedureResponse.getStatusCode()"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getStatusCode()"
  overload: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getStatusCode*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the HTTP status code associated with the response."
  syntax:
    content: "public int getStatusCode()"
    return:
      type: "int"
      description: "the status code."
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getStoredProcedure()"
  id: "getStoredProcedure()"
  parent: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse"
  langs:
  - "java"
  name: "getStoredProcedure()"
  nameWithType: "CosmosAsyncStoredProcedureResponse.getStoredProcedure()"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getStoredProcedure()"
  overload: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getStoredProcedure*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the stored procedure object"
  syntax:
    content: "public CosmosAsyncStoredProcedure getStoredProcedure()"
    return:
      type: "com.azure.cosmos.CosmosAsyncStoredProcedure"
      description: "the stored procedure object or null in case of delete request"
references:
- uid: "com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.StoredProcedure>"
  spec.java:
  - uid: "com.azure.cosmos.implementation.ResourceResponse"
    name: "ResourceResponse"
    fullName: "com.azure.cosmos.implementation.ResourceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.StoredProcedure"
    name: "StoredProcedure"
    fullName: "com.azure.cosmos.implementation.StoredProcedure"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.CosmosAsyncContainer"
  name: "CosmosAsyncContainer"
  nameWithType: "CosmosAsyncContainer"
  fullName: "com.azure.cosmos.CosmosAsyncContainer"
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.CosmosAsyncStoredProcedureResponse*"
  name: "CosmosAsyncStoredProcedureResponse"
  nameWithType: "CosmosAsyncStoredProcedureResponse.CosmosAsyncStoredProcedureResponse"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.CosmosAsyncStoredProcedureResponse"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.implementation.StoredProcedureResponse"
  name: "StoredProcedureResponse"
  nameWithType: "StoredProcedureResponse"
  fullName: "com.azure.cosmos.implementation.StoredProcedureResponse"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.models.CosmosStoredProcedureProperties"
  name: "CosmosStoredProcedureProperties"
  nameWithType: "CosmosStoredProcedureProperties"
  fullName: "com.azure.cosmos.models.CosmosStoredProcedureProperties"
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getProperties*"
  name: "getProperties"
  nameWithType: "CosmosAsyncStoredProcedureResponse.getProperties"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getProperties"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.CosmosAsyncStoredProcedure"
  name: "CosmosAsyncStoredProcedure"
  nameWithType: "CosmosAsyncStoredProcedure"
  fullName: "com.azure.cosmos.CosmosAsyncStoredProcedure"
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getStoredProcedure*"
  name: "getStoredProcedure"
  nameWithType: "CosmosAsyncStoredProcedureResponse.getStoredProcedure"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getStoredProcedure"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getActivityId*"
  name: "getActivityId"
  nameWithType: "CosmosAsyncStoredProcedureResponse.getActivityId"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getActivityId"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getSessionToken*"
  name: "getSessionToken"
  nameWithType: "CosmosAsyncStoredProcedureResponse.getSessionToken"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getSessionToken"
  package: "com.azure.cosmos.models"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getStatusCode*"
  name: "getStatusCode"
  nameWithType: "CosmosAsyncStoredProcedureResponse.getStatusCode"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getStatusCode"
  package: "com.azure.cosmos.models"
- uid: "double"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getRequestCharge*"
  name: "getRequestCharge"
  nameWithType: "CosmosAsyncStoredProcedureResponse.getRequestCharge"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getRequestCharge"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getResponseAsString*"
  name: "getResponseAsString"
  nameWithType: "CosmosAsyncStoredProcedureResponse.getResponseAsString"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getResponseAsString"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getScriptLog*"
  name: "getScriptLog"
  nameWithType: "CosmosAsyncStoredProcedureResponse.getScriptLog"
  fullName: "com.azure.cosmos.models.CosmosAsyncStoredProcedureResponse.getScriptLog"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.CosmosResponse<com.azure.cosmos.models.CosmosStoredProcedureProperties>"
  name: "CosmosResponse<CosmosStoredProcedureProperties>"
  nameWithType: "CosmosResponse<CosmosStoredProcedureProperties>"
  fullName: "com.azure.cosmos.models.CosmosResponse<com.azure.cosmos.models.CosmosStoredProcedureProperties>"
- uid: "com.azure.cosmos.models.CosmosResponse.getActivityId()"
  name: "CosmosResponse.getActivityId()"
  nameWithType: "CosmosResponse.getActivityId()"
  fullName: "com.azure.cosmos.models.CosmosResponse.getActivityId()"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.azure.cosmos.models.CosmosResponse.getMaxResourceQuota()"
  name: "CosmosResponse.getMaxResourceQuota()"
  nameWithType: "CosmosResponse.getMaxResourceQuota()"
  fullName: "com.azure.cosmos.models.CosmosResponse.getMaxResourceQuota()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.cosmos.models.CosmosResponse.getRequestLatency()"
  name: "CosmosResponse.getRequestLatency()"
  nameWithType: "CosmosResponse.getRequestLatency()"
  fullName: "com.azure.cosmos.models.CosmosResponse.getRequestLatency()"
- uid: "com.azure.cosmos.models.CosmosResponse.setProperties(T)"
  name: "CosmosResponse.setProperties(T)"
  nameWithType: "CosmosResponse.setProperties(T)"
  fullName: "com.azure.cosmos.models.CosmosResponse.setProperties(T)"
- uid: "com.azure.cosmos.models.CosmosResponse.getStatusCode()"
  name: "CosmosResponse.getStatusCode()"
  nameWithType: "CosmosResponse.getStatusCode()"
  fullName: "com.azure.cosmos.models.CosmosResponse.getStatusCode()"
- uid: "com.azure.cosmos.models.CosmosResponse.getProperties()"
  name: "CosmosResponse.getProperties()"
  nameWithType: "CosmosResponse.getProperties()"
  fullName: "com.azure.cosmos.models.CosmosResponse.getProperties()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.cosmos.models.CosmosResponse.getCurrentResourceQuotaUsage()"
  name: "CosmosResponse.getCurrentResourceQuotaUsage()"
  nameWithType: "CosmosResponse.getCurrentResourceQuotaUsage()"
  fullName: "com.azure.cosmos.models.CosmosResponse.getCurrentResourceQuotaUsage()"
- uid: "com.azure.cosmos.models.CosmosResponse.getSessionToken()"
  name: "CosmosResponse.getSessionToken()"
  nameWithType: "CosmosResponse.getSessionToken()"
  fullName: "com.azure.cosmos.models.CosmosResponse.getSessionToken()"
- uid: "com.azure.cosmos.models.CosmosResponse.getResponseHeaders()"
  name: "CosmosResponse.getResponseHeaders()"
  nameWithType: "CosmosResponse.getResponseHeaders()"
  fullName: "com.azure.cosmos.models.CosmosResponse.getResponseHeaders()"
- uid: "com.azure.cosmos.models.CosmosResponse.getRequestCharge()"
  name: "CosmosResponse.getRequestCharge()"
  nameWithType: "CosmosResponse.getRequestCharge()"
  fullName: "com.azure.cosmos.models.CosmosResponse.getRequestCharge()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.azure.cosmos.models.CosmosResponse.getCosmosResponseDiagnostics()"
  name: "CosmosResponse.getCosmosResponseDiagnostics()"
  nameWithType: "CosmosResponse.getCosmosResponseDiagnostics()"
  fullName: "com.azure.cosmos.models.CosmosResponse.getCosmosResponseDiagnostics()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.StoredProcedure"
  name: "StoredProcedure"
  nameWithType: "StoredProcedure"
  fullName: "com.azure.cosmos.implementation.StoredProcedure"
- uid: "com.azure.cosmos.implementation.ResourceResponse"
  name: "ResourceResponse"
  nameWithType: "ResourceResponse"
  fullName: "com.azure.cosmos.implementation.ResourceResponse"
- uid: "com.azure.cosmos.models.CosmosResponse"
  name: "CosmosResponse"
  nameWithType: "CosmosResponse"
  fullName: "com.azure.cosmos.models.CosmosResponse"
