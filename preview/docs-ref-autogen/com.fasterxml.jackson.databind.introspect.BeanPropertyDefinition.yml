### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  id: BeanPropertyDefinition
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect
  children:
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.BeanPropertyDefinition()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.EMPTY_INCLUDE
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.couldDeserialize()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.couldSerialize()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findInclusion()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findObjectIdInfo()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findReferenceName()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findReferenceType()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findViews()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getAccessor()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getConstructorParameter()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getConstructorParameters()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getField()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getFullName()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getGetter()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getInternalName()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getMetadata()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getMutator()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getName()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getNonConstructorMutator()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getPrimaryMember()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getPrimaryType()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getRawPrimaryType()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getSetter()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getWrapperName()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasConstructorParameter()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasField()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasGetter()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasName(com.fasterxml.jackson.databind.PropertyName)
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasSetter()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isExplicitlyIncluded()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isExplicitlyNamed()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isRequired()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isTypeId()
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.withName(com.fasterxml.jackson.databind.PropertyName)
  - com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.withSimpleName(java.lang.String)
  langs:
  - java
  name: BeanPropertyDefinition
  nameWithType: BeanPropertyDefinition
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  type: Class
  package: com.fasterxml.jackson.databind.introspect
  summary: Simple value classes that contain definitions of properties, used during introspection of properties to use for serialization and deserialization purposes. These instances are created before actual <xref uid="com.fasterxml.jackson.databind.BeanProperty" data-throw-if-not-resolved="false">BeanProperty</xref> instances are created, i.e. they are used earlier in the process flow, and are typically use to construct actual <xref uid="com.fasterxml.jackson.databind.BeanProperty" data-throw-if-not-resolved="false">BeanProperty</xref> instances.
  syntax:
    content: public abstract class BeanPropertyDefinition implements Named
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.databind.util.Named
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.BeanPropertyDefinition()
  id: BeanPropertyDefinition()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: BeanPropertyDefinition()
  nameWithType: BeanPropertyDefinition.BeanPropertyDefinition()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.BeanPropertyDefinition()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.BeanPropertyDefinition*
  type: Constructor
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public BeanPropertyDefinition()
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.EMPTY_INCLUDE
  id: EMPTY_INCLUDE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: EMPTY_INCLUDE
  nameWithType: BeanPropertyDefinition.EMPTY_INCLUDE
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.EMPTY_INCLUDE
  type: Field
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: protected static final JsonInclude.Value EMPTY_INCLUDE
    return:
      type: com.fasterxml.jackson.annotation.JsonInclude.Value
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.couldDeserialize()
  id: couldDeserialize()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: couldDeserialize()
  nameWithType: BeanPropertyDefinition.couldDeserialize()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.couldDeserialize()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.couldDeserialize*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public boolean couldDeserialize()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.couldSerialize()
  id: couldSerialize()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: couldSerialize()
  nameWithType: BeanPropertyDefinition.couldSerialize()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.couldSerialize()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.couldSerialize*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public boolean couldSerialize()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findInclusion()
  id: findInclusion()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: findInclusion()
  nameWithType: BeanPropertyDefinition.findInclusion()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findInclusion()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findInclusion*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method used to check if this property has specific inclusion override associated with it or not. It should NOT check for any default settings (global, per-type, or containing POJO settings)
  syntax:
    content: public abstract JsonInclude.Value findInclusion()
    return:
      type: com.fasterxml.jackson.annotation.JsonInclude.Value
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findObjectIdInfo()
  id: findObjectIdInfo()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: findObjectIdInfo()
  nameWithType: BeanPropertyDefinition.findObjectIdInfo()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findObjectIdInfo()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findObjectIdInfo*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method used to check whether this logical property indicates that value POJOs should be written using additional Object Identifier (or, when multiple references exist, all but first AS Object Identifier).
  syntax:
    content: public ObjectIdInfo findObjectIdInfo()
    return:
      type: com.fasterxml.jackson.databind.introspect.ObjectIdInfo
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findReferenceName()
  id: findReferenceName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: findReferenceName()
  nameWithType: BeanPropertyDefinition.findReferenceName()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findReferenceName()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findReferenceName*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public String findReferenceName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findReferenceType()
  id: findReferenceType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: findReferenceType()
  nameWithType: BeanPropertyDefinition.findReferenceType()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findReferenceType()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findReferenceType*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method used to find whether property is part of a bi-directional reference.
  syntax:
    content: public AnnotationIntrospector.ReferenceProperty findReferenceType()
    return:
      type: com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findViews()
  id: findViews()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: findViews()
  nameWithType: BeanPropertyDefinition.findViews()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findViews()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findViews*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method used to find View-inclusion definitions for the property.
  syntax:
    content: public Class<?>[] findViews()
    return:
      type: java.lang.Class<?>[]
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getAccessor()
  id: getAccessor()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: getAccessor()
  nameWithType: BeanPropertyDefinition.getAccessor()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getAccessor()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getAccessor*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method used to find accessor (getter, field to access) to use for accessing value of the property. Null if no such member exists.
  syntax:
    content: public AnnotatedMember getAccessor()
    return:
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getConstructorParameter()
  id: getConstructorParameter()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: getConstructorParameter()
  nameWithType: BeanPropertyDefinition.getConstructorParameter()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getConstructorParameter()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getConstructorParameter*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public abstract AnnotatedParameter getConstructorParameter()
    return:
      type: com.fasterxml.jackson.databind.introspect.AnnotatedParameter
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getConstructorParameters()
  id: getConstructorParameters()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: getConstructorParameters()
  nameWithType: BeanPropertyDefinition.getConstructorParameters()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getConstructorParameters()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getConstructorParameters*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Additional method that may be called instead of <xref uid="com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getConstructorParameter()" data-throw-if-not-resolved="false">#getConstructorParameter()</xref> to get access to all constructor parameters, not just the highest priority one.
  syntax:
    content: public Iterator<AnnotatedParameter> getConstructorParameters()
    return:
      type: java.util.Iterator<com.fasterxml.jackson.databind.introspect.AnnotatedParameter>
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getField()
  id: getField()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: getField()
  nameWithType: BeanPropertyDefinition.getField()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getField()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getField*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public abstract AnnotatedField getField()
    return:
      type: com.fasterxml.jackson.databind.introspect.AnnotatedField
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getFullName()
  id: getFullName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: getFullName()
  nameWithType: BeanPropertyDefinition.getFullName()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getFullName()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getFullName*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public abstract PropertyName getFullName()
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getGetter()
  id: getGetter()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: getGetter()
  nameWithType: BeanPropertyDefinition.getGetter()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getGetter()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getGetter*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public abstract AnnotatedMethod getGetter()
    return:
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMethod
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getInternalName()
  id: getInternalName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: getInternalName()
  nameWithType: BeanPropertyDefinition.getInternalName()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getInternalName()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getInternalName*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Accessor that can be used to determine implicit name from underlying element(s) before possible renaming. This is the "internal" name derived from accessor ("x" from "getX"), and is not based on annotations or naming strategy.
  syntax:
    content: public abstract String getInternalName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getMetadata()
  id: getMetadata()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: getMetadata()
  nameWithType: BeanPropertyDefinition.getMetadata()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getMetadata()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getMetadata*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: 'Method for accessing additional metadata. NOTE: will never return null, so de-referencing return value is safe.'
  syntax:
    content: public abstract PropertyMetadata getMetadata()
    return:
      type: com.fasterxml.jackson.databind.PropertyMetadata
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getMutator()
  id: getMutator()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: getMutator()
  nameWithType: BeanPropertyDefinition.getMutator()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getMutator()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getMutator*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method used to find mutator (constructor parameter, setter, field) to use for changing value of the property. Null if no such member exists.
  syntax:
    content: public AnnotatedMember getMutator()
    return:
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getName()
  id: getName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: getName()
  nameWithType: BeanPropertyDefinition.getName()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getName()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getName*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Accessor for name used for external representation (in JSON).
  syntax:
    content: public abstract String getName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getNonConstructorMutator()
  id: getNonConstructorMutator()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: getNonConstructorMutator()
  nameWithType: BeanPropertyDefinition.getNonConstructorMutator()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getNonConstructorMutator()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getNonConstructorMutator*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public AnnotatedMember getNonConstructorMutator()
    return:
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getPrimaryMember()
  id: getPrimaryMember()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: getPrimaryMember()
  nameWithType: BeanPropertyDefinition.getPrimaryMember()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getPrimaryMember()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getPrimaryMember*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: >-
    Method used to find the property member (getter, setter, field) that has the highest precedence in current context (getter method when serializing, if available, and so forth), if any.


    Note: may throw <xref uid="" data-throw-if-not-resolved="false">IllegalArgumentException</xref> in case problems are found trying to getter or setter info.


    Note: abstract since 2.5
  syntax:
    content: public abstract AnnotatedMember getPrimaryMember()
    return:
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getPrimaryType()
  id: getPrimaryType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: getPrimaryType()
  nameWithType: BeanPropertyDefinition.getPrimaryType()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getPrimaryType()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getPrimaryType*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public abstract JavaType getPrimaryType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getRawPrimaryType()
  id: getRawPrimaryType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: getRawPrimaryType()
  nameWithType: BeanPropertyDefinition.getRawPrimaryType()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getRawPrimaryType()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getRawPrimaryType*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public abstract Class<?> getRawPrimaryType()
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getSetter()
  id: getSetter()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: getSetter()
  nameWithType: BeanPropertyDefinition.getSetter()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getSetter()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getSetter*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public abstract AnnotatedMethod getSetter()
    return:
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMethod
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getWrapperName()
  id: getWrapperName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: getWrapperName()
  nameWithType: BeanPropertyDefinition.getWrapperName()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getWrapperName()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getWrapperName*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Accessor for finding wrapper name to use for property (if any).
  syntax:
    content: public abstract PropertyName getWrapperName()
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasConstructorParameter()
  id: hasConstructorParameter()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: hasConstructorParameter()
  nameWithType: BeanPropertyDefinition.hasConstructorParameter()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasConstructorParameter()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasConstructorParameter*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public abstract boolean hasConstructorParameter()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasField()
  id: hasField()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: hasField()
  nameWithType: BeanPropertyDefinition.hasField()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasField()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasField*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public abstract boolean hasField()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasGetter()
  id: hasGetter()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: hasGetter()
  nameWithType: BeanPropertyDefinition.hasGetter()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasGetter()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasGetter*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public abstract boolean hasGetter()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasName(com.fasterxml.jackson.databind.PropertyName)
  id: hasName(com.fasterxml.jackson.databind.PropertyName)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: hasName(PropertyName name)
  nameWithType: BeanPropertyDefinition.hasName(PropertyName name)
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasName(PropertyName name)
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasName*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public boolean hasName(PropertyName name)
    parameters:
    - id: name
      type: com.fasterxml.jackson.databind.PropertyName
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasSetter()
  id: hasSetter()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: hasSetter()
  nameWithType: BeanPropertyDefinition.hasSetter()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasSetter()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasSetter*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public abstract boolean hasSetter()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isExplicitlyIncluded()
  id: isExplicitlyIncluded()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: isExplicitlyIncluded()
  nameWithType: BeanPropertyDefinition.isExplicitlyIncluded()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isExplicitlyIncluded()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isExplicitlyIncluded*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Accessor that can be called to check whether property was included due to an explicit marker (usually annotation), or just by naming convention.
  syntax:
    content: public abstract boolean isExplicitlyIncluded()
    return:
      type: boolean
      description: >-
        True if property was explicitly included (usually by having
           one of components being annotated); false if inclusion was purely
           due to naming or visibility definitions (that is, implicit)
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isExplicitlyNamed()
  id: isExplicitlyNamed()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: isExplicitlyNamed()
  nameWithType: BeanPropertyDefinition.isExplicitlyNamed()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isExplicitlyNamed()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isExplicitlyNamed*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: >-
    Accessor that can be called to check whether property name was due to an explicit marker (usually annotation), or just by naming convention or use of "use-default-name" marker (annotation).


    Note that entries that return true from this method will always return true for <xref uid="com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isExplicitlyIncluded()" data-throw-if-not-resolved="false">#isExplicitlyIncluded()</xref>, but not necessarily vice versa.
  syntax:
    content: public boolean isExplicitlyNamed()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isRequired()
  id: isRequired()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: isRequired()
  nameWithType: BeanPropertyDefinition.isRequired()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isRequired()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isRequired*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method used to check if this property is expected to have a value; and if none found, should either be considered invalid (and most likely fail deserialization), or handled by other means (by providing default value)
  syntax:
    content: public boolean isRequired()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isTypeId()
  id: isTypeId()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: isTypeId()
  nameWithType: BeanPropertyDefinition.isTypeId()
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isTypeId()
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isTypeId*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method used to check whether this logical property has a marker to indicate it should be used as the type id for polymorphic type handling.
  syntax:
    content: public boolean isTypeId()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.withName(com.fasterxml.jackson.databind.PropertyName)
  id: withName(com.fasterxml.jackson.databind.PropertyName)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: withName(PropertyName newName)
  nameWithType: BeanPropertyDefinition.withName(PropertyName newName)
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.withName(PropertyName newName)
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.withName*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method that can be used to create a definition with same settings as this one, but with different (external) name; that is, one for which <xref uid="com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getName()" data-throw-if-not-resolved="false">#getName()</xref> would return `newName`.
  syntax:
    content: public abstract BeanPropertyDefinition withName(PropertyName newName)
    parameters:
    - id: newName
      type: com.fasterxml.jackson.databind.PropertyName
    return:
      type: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.withSimpleName(java.lang.String)
  id: withSimpleName(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  langs:
  - java
  name: withSimpleName(String newSimpleName)
  nameWithType: BeanPropertyDefinition.withSimpleName(String newSimpleName)
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.withSimpleName(String newSimpleName)
  overload: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.withSimpleName*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Alternate "mutant factory" that will only change simple name, but leave other optional parts (like namespace) as is.
  syntax:
    content: public abstract BeanPropertyDefinition withSimpleName(String newSimpleName)
    parameters:
    - id: newSimpleName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
references:
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.BeanPropertyDefinition*
  name: BeanPropertyDefinition
  nameWithType: BeanPropertyDefinition.BeanPropertyDefinition
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.BeanPropertyDefinition
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.PropertyName
  name: PropertyName
  nameWithType: PropertyName
  fullName: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.withName*
  name: withName
  nameWithType: BeanPropertyDefinition.withName
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.withName
  package: com.fasterxml.jackson.databind.introspect
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.withSimpleName*
  name: withSimpleName
  nameWithType: BeanPropertyDefinition.withSimpleName
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.withSimpleName
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getName*
  name: getName
  nameWithType: BeanPropertyDefinition.getName
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getName
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getFullName*
  name: getFullName
  nameWithType: BeanPropertyDefinition.getFullName
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getFullName
  package: com.fasterxml.jackson.databind.introspect
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasName*
  name: hasName
  nameWithType: BeanPropertyDefinition.hasName
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasName
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getInternalName*
  name: getInternalName
  nameWithType: BeanPropertyDefinition.getInternalName
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getInternalName
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getWrapperName*
  name: getWrapperName
  nameWithType: BeanPropertyDefinition.getWrapperName
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getWrapperName
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isExplicitlyIncluded*
  name: isExplicitlyIncluded
  nameWithType: BeanPropertyDefinition.isExplicitlyIncluded
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isExplicitlyIncluded
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isExplicitlyNamed*
  name: isExplicitlyNamed
  nameWithType: BeanPropertyDefinition.isExplicitlyNamed
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isExplicitlyNamed
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getPrimaryType*
  name: getPrimaryType
  nameWithType: BeanPropertyDefinition.getPrimaryType
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getPrimaryType
  package: com.fasterxml.jackson.databind.introspect
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getRawPrimaryType*
  name: getRawPrimaryType
  nameWithType: BeanPropertyDefinition.getRawPrimaryType
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getRawPrimaryType
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.PropertyMetadata
  name: PropertyMetadata
  nameWithType: PropertyMetadata
  fullName: com.fasterxml.jackson.databind.PropertyMetadata
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getMetadata*
  name: getMetadata
  nameWithType: BeanPropertyDefinition.getMetadata
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getMetadata
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isRequired*
  name: isRequired
  nameWithType: BeanPropertyDefinition.isRequired
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isRequired
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.couldDeserialize*
  name: couldDeserialize
  nameWithType: BeanPropertyDefinition.couldDeserialize
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.couldDeserialize
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.couldSerialize*
  name: couldSerialize
  nameWithType: BeanPropertyDefinition.couldSerialize
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.couldSerialize
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasGetter*
  name: hasGetter
  nameWithType: BeanPropertyDefinition.hasGetter
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasGetter
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasSetter*
  name: hasSetter
  nameWithType: BeanPropertyDefinition.hasSetter
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasSetter
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasField*
  name: hasField
  nameWithType: BeanPropertyDefinition.hasField
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasField
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasConstructorParameter*
  name: hasConstructorParameter
  nameWithType: BeanPropertyDefinition.hasConstructorParameter
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.hasConstructorParameter
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedMethod
  name: AnnotatedMethod
  nameWithType: AnnotatedMethod
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedMethod
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getGetter*
  name: getGetter
  nameWithType: BeanPropertyDefinition.getGetter
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getGetter
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getSetter*
  name: getSetter
  nameWithType: BeanPropertyDefinition.getSetter
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getSetter
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedField
  name: AnnotatedField
  nameWithType: AnnotatedField
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedField
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getField*
  name: getField
  nameWithType: BeanPropertyDefinition.getField
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getField
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedParameter
  name: AnnotatedParameter
  nameWithType: AnnotatedParameter
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedParameter
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getConstructorParameter*
  name: getConstructorParameter
  nameWithType: BeanPropertyDefinition.getConstructorParameter
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getConstructorParameter
  package: com.fasterxml.jackson.databind.introspect
- uid: java.util.Iterator<com.fasterxml.jackson.databind.introspect.AnnotatedParameter>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.introspect.AnnotatedParameter
    name: AnnotatedParameter
    fullName: com.fasterxml.jackson.databind.introspect.AnnotatedParameter
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getConstructorParameters*
  name: getConstructorParameters
  nameWithType: BeanPropertyDefinition.getConstructorParameters
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getConstructorParameters
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedMember
  name: AnnotatedMember
  nameWithType: AnnotatedMember
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedMember
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getAccessor*
  name: getAccessor
  nameWithType: BeanPropertyDefinition.getAccessor
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getAccessor
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getMutator*
  name: getMutator
  nameWithType: BeanPropertyDefinition.getMutator
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getMutator
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getNonConstructorMutator*
  name: getNonConstructorMutator
  nameWithType: BeanPropertyDefinition.getNonConstructorMutator
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getNonConstructorMutator
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getPrimaryMember*
  name: getPrimaryMember
  nameWithType: BeanPropertyDefinition.getPrimaryMember
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getPrimaryMember
  package: com.fasterxml.jackson.databind.introspect
- uid: java.lang.Class<?>[]
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findViews*
  name: findViews
  nameWithType: BeanPropertyDefinition.findViews
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findViews
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty
  name: AnnotationIntrospector.ReferenceProperty
  nameWithType: AnnotationIntrospector.ReferenceProperty
  fullName: com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findReferenceType*
  name: findReferenceType
  nameWithType: BeanPropertyDefinition.findReferenceType
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findReferenceType
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findReferenceName*
  name: findReferenceName
  nameWithType: BeanPropertyDefinition.findReferenceName
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findReferenceName
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isTypeId*
  name: isTypeId
  nameWithType: BeanPropertyDefinition.isTypeId
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isTypeId
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.ObjectIdInfo
  name: ObjectIdInfo
  nameWithType: ObjectIdInfo
  fullName: com.fasterxml.jackson.databind.introspect.ObjectIdInfo
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findObjectIdInfo*
  name: findObjectIdInfo
  nameWithType: BeanPropertyDefinition.findObjectIdInfo
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findObjectIdInfo
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.annotation.JsonInclude.Value
  name: JsonInclude.Value
  nameWithType: JsonInclude.Value
  fullName: com.fasterxml.jackson.annotation.JsonInclude.Value
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findInclusion*
  name: findInclusion
  nameWithType: BeanPropertyDefinition.findInclusion
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findInclusion
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.util.Named
  name: Named
  nameWithType: Named
  fullName: com.fasterxml.jackson.databind.util.Named
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
- uid: ?>[]
  name: ?>[]
  nameWithType: ?>[]
  fullName: ?>[]
