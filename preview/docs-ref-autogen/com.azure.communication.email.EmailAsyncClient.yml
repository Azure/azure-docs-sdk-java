### YamlMime:JavaType
uid: "com.azure.communication.email.EmailAsyncClient"
fullName: "com.azure.communication.email.EmailAsyncClient"
name: "EmailAsyncClient"
nameWithType: "EmailAsyncClient"
summary: "Initializes a new instance of the asynchronous Email<wbr>Async<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class EmailAsyncClient"
methods:
- uid: "com.azure.communication.email.EmailAsyncClient.getSendStatus(java.lang.String)"
  fullName: "com.azure.communication.email.EmailAsyncClient.getSendStatus(String messageId)"
  name: "getSendStatus(String messageId)"
  nameWithType: "EmailAsyncClient.getSendStatus(String messageId)"
  summary: "Gets the status of a message sent previously."
  parameters:
  - description: "System generated message id (GUID) returned from a previous call to send email."
    name: "messageId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SendStatusResult> getSendStatus(String messageId)"
  desc: "Gets the status of a message sent previously."
  returns:
    description: "the status of a message sent previously"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.email.models.SendStatusResult?alt=com.azure.communication.email.models.SendStatusResult&text=SendStatusResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.email.EmailAsyncClient.send(com.azure.communication.email.models.EmailMessage)"
  fullName: "com.azure.communication.email.EmailAsyncClient.send(EmailMessage emailMessage)"
  name: "send(EmailMessage emailMessage)"
  nameWithType: "EmailAsyncClient.send(EmailMessage emailMessage)"
  summary: "Queues an email message to be sent to one or more recipients"
  parameters:
  - description: "Message payload for sending an email."
    name: "emailMessage"
    type: "<xref href=\"com.azure.communication.email.models.EmailMessage?alt=com.azure.communication.email.models.EmailMessage&text=EmailMessage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SendEmailResult> send(EmailMessage emailMessage)"
  desc: "Queues an email message to be sent to one or more recipients"
  returns:
    description: "the SendEmailResult"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.email.models.SendEmailResult?alt=com.azure.communication.email.models.SendEmailResult&text=SendEmailResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous EmailAsyncClient type."
metadata: {}
package: "com.azure.communication.email"
artifact: com.azure:azure-communication-email:1.0.0-beta.1
