### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset
  id: EnumMultiset
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.EnumMultiset.<E>create(java.lang.Class<E>)
  - com.azure.cosmos.implementation.guava25.collect.EnumMultiset.<E>create(java.lang.Iterable<E>)
  - com.azure.cosmos.implementation.guava25.collect.EnumMultiset.<E>create(java.lang.Iterable<E>,java.lang.Class<E>)
  - com.azure.cosmos.implementation.guava25.collect.EnumMultiset.add(E,int)
  - com.azure.cosmos.implementation.guava25.collect.EnumMultiset.clear()
  - com.azure.cosmos.implementation.guava25.collect.EnumMultiset.count(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.EnumMultiset.forEachEntry(java.util.function.ObjIntConsumer<? super E>)
  - com.azure.cosmos.implementation.guava25.collect.EnumMultiset.iterator()
  - com.azure.cosmos.implementation.guava25.collect.EnumMultiset.remove(java.lang.Object,int)
  - com.azure.cosmos.implementation.guava25.collect.EnumMultiset.setCount(E,int)
  - com.azure.cosmos.implementation.guava25.collect.EnumMultiset.size()
  langs:
  - java
  name: EnumMultiset<E>
  nameWithType: EnumMultiset<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Multiset implementation specialized for enum elements, supporting all single-element operations in O(1).


    See the Guava User Guide article on [ `Multiset`][_Multiset].



    [_Multiset]: https://github.com/google/guava/wiki/NewCollectionTypesExplained#multiset
  syntax:
    content: public final class EnumMultiset<E> extends AbstractMultiset<E> implements Serializable
    typeParameters:
    - id: E
  inheritance:
  - java.lang.Object
  - java.util.AbstractCollection
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.add(E)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.add(E,int)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.addAll(java.util.Collection<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.clear()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.contains(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.elementSet()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.entrySet()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.equals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.hashCode()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.isEmpty()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.remove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.remove(java.lang.Object,int)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.removeAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.retainAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.setCount(E,int)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.setCount(E,int,int)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.toString()
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - java.util.AbstractCollection.<T>toArray(T[])
  - java.util.AbstractCollection.containsAll(java.util.Collection<?>)
  - java.util.AbstractCollection.iterator()
  - java.util.AbstractCollection.size()
  - java.util.AbstractCollection.toArray()
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.<E>create(java.lang.Class<E>)
  id: <E>create(java.lang.Class<E>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumMultiset
  langs:
  - java
  name: <E>create(Class<E> type)
  nameWithType: EnumMultiset<E>.<E>create(Class<E> type)
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.<E>create(Class<E> type)
  overload: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.create*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Creates an empty `EnumMultiset`.
  syntax:
    content: public static EnumMultiset<E> <E>create(Class<E> type)
    parameters:
    - id: type
      type: java.lang.Class<E>
    return:
      type: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.<E>create(java.lang.Iterable<E>)
  id: <E>create(java.lang.Iterable<E>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumMultiset
  langs:
  - java
  name: <E>create(Iterable<E> elements)
  nameWithType: EnumMultiset<E>.<E>create(Iterable<E> elements)
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.<E>create(Iterable<E> elements)
  overload: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.create*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Creates a new `EnumMultiset` containing the specified elements.


    This implementation is highly efficient when `elements` is itself a <xref uid="com.azure.cosmos.implementation.guava25.collect.Multiset" data-throw-if-not-resolved="false">Multiset</xref>.
  syntax:
    content: public static EnumMultiset<E> <E>create(Iterable<E> elements)
    parameters:
    - id: elements
      type: java.lang.Iterable<E>
      description: the elements that the multiset should contain
    return:
      type: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.<E>create(java.lang.Iterable<E>,java.lang.Class<E>)
  id: <E>create(java.lang.Iterable<E>,java.lang.Class<E>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumMultiset
  langs:
  - java
  name: <E>create(Iterable<E> elements, Class<E> type)
  nameWithType: EnumMultiset<E>.<E>create(Iterable<E> elements, Class<E> type)
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.<E>create(Iterable<E> elements, Class<E> type)
  overload: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.create*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a new `EnumMultiset` instance containing the given elements. Unlike <xref uid="com.azure.cosmos.implementation.guava25.collect.EnumMultiset.&lt;E&gt;create(java.lang.Iterable&lt;E&gt;)" data-throw-if-not-resolved="false">EnumMultiset#create(Iterable)</xref>, this method does not produce an exception on an empty iterable.
  syntax:
    content: public static EnumMultiset<E> <E>create(Iterable<E> elements, Class<E> type)
    parameters:
    - id: elements
      type: java.lang.Iterable<E>
    - id: type
      type: java.lang.Class<E>
    return:
      type: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.EnumMultiset(java.lang.Class<E>)
  id: EnumMultiset(java.lang.Class<E>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumMultiset
  langs:
  - java
  name: EnumMultiset(Class<E> type)
  nameWithType: EnumMultiset<E>.EnumMultiset(Class<E> type)
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.EnumMultiset(Class<E> type)
  overload: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.EnumMultiset*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Creates an empty `EnumMultiset`.
  syntax:
    content: private EnumMultiset(Class<E> type)
    parameters:
    - id: type
      type: java.lang.Class<E>
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.add(E,int)
  id: add(E,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumMultiset
  langs:
  - java
  name: add(E element, int occurrences)
  nameWithType: EnumMultiset<E>.add(E element, int occurrences)
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.add(E element, int occurrences)
  overload: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.add*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Adds a number of occurrences of an element to this multiset. Note that if `occurrences == 1`, this method has the identical effect to <xref uid="com.azure.cosmos.implementation.guava25.collect.EnumMultiset.add*" data-throw-if-not-resolved="false">#add(Object)</xref>. This method is functionally equivalent (except in the case of overflow) to the call `addAll(Collections.nCopies(element, occurrences))`, which would presumably perform much more poorly.
  syntax:
    content: public int add(E element, int occurrences)
    parameters:
    - id: element
      type: E
    - id: occurrences
      type: int
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.clear()
  id: clear()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumMultiset
  langs:
  - java
  name: clear()
  nameWithType: EnumMultiset<E>.clear()
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.clear()
  overload: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.clear*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public void clear()
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.count(java.lang.Object)
  id: count(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumMultiset
  langs:
  - java
  name: count(Object element)
  nameWithType: EnumMultiset<E>.count(Object element)
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.count(Object element)
  overload: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.count*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public int count(Object element)
    parameters:
    - id: element
      type: java.lang.Object
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.forEachEntry(java.util.function.ObjIntConsumer<? super E>)
  id: forEachEntry(java.util.function.ObjIntConsumer<? super E>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumMultiset
  langs:
  - java
  name: forEachEntry(ObjIntConsumer<? super E> action)
  nameWithType: EnumMultiset<E>.forEachEntry(ObjIntConsumer<? super E> action)
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.forEachEntry(ObjIntConsumer<? super E> action)
  overload: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.forEachEntry*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public void forEachEntry(ObjIntConsumer<? super E> action)
    parameters:
    - id: action
      type: java.util.function.ObjIntConsumer<? super E>
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.iterator()
  id: iterator()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumMultiset
  langs:
  - java
  name: iterator()
  nameWithType: EnumMultiset<E>.iterator()
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.iterator()
  overload: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.iterator*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public Iterator<E> iterator()
    return:
      type: java.util.Iterator<E>
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.remove(java.lang.Object,int)
  id: remove(java.lang.Object,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumMultiset
  langs:
  - java
  name: remove(Object element, int occurrences)
  nameWithType: EnumMultiset<E>.remove(Object element, int occurrences)
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.remove(Object element, int occurrences)
  overload: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.remove*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Removes a number of occurrences of the specified element from this multiset. If the multiset contains fewer than this number of occurrences to begin with, all occurrences will be removed. Note that if `occurrences == 1`, this is functionally equivalent to the call `remove(element)`.
  syntax:
    content: public int remove(Object element, int occurrences)
    parameters:
    - id: element
      type: java.lang.Object
    - id: occurrences
      type: int
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.setCount(E,int)
  id: setCount(E,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumMultiset
  langs:
  - java
  name: setCount(E element, int count)
  nameWithType: EnumMultiset<E>.setCount(E element, int count)
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.setCount(E element, int count)
  overload: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.setCount*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Adds or removes the necessary occurrences of an element such that the element attains the desired count.
  syntax:
    content: public int setCount(E element, int count)
    parameters:
    - id: element
      type: E
    - id: count
      type: int
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.size()
  id: size()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumMultiset
  langs:
  - java
  name: size()
  nameWithType: EnumMultiset<E>.size()
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.size()
  overload: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.size*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public int size()
    return:
      type: int
references:
- uid: java.lang.Class<E>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.EnumMultiset*
  name: EnumMultiset
  nameWithType: EnumMultiset<E>.EnumMultiset
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.EnumMultiset
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset
    name: EnumMultiset
    fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.create*
  name: <E>create
  nameWithType: EnumMultiset<E>.<E>create
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.<E>create
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Iterable<E>
  spec.java:
  - uid: java.lang.Iterable
    name: Iterable
    fullName: java.lang.Iterable
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.size*
  name: size
  nameWithType: EnumMultiset<E>.size
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.size
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.count*
  name: count
  nameWithType: EnumMultiset<E>.count
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.count
  package: com.azure.cosmos.implementation.guava25.collect
- uid: E
  spec.java:
  - uid: E
    name: E
    fullName: E
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.add*
  name: add
  nameWithType: EnumMultiset<E>.add
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.add
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.remove*
  name: remove
  nameWithType: EnumMultiset<E>.remove
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.remove
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.setCount*
  name: setCount
  nameWithType: EnumMultiset<E>.setCount
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.setCount
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.clear*
  name: clear
  nameWithType: EnumMultiset<E>.clear
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.clear
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.function.ObjIntConsumer<? super E>
  spec.java:
  - uid: java.util.function.ObjIntConsumer
    name: ObjIntConsumer
    fullName: java.util.function.ObjIntConsumer
  - name: <
    fullName: <
  - uid: '? super E'
    name: '? super E'
    fullName: '? super E'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.forEachEntry*
  name: forEachEntry
  nameWithType: EnumMultiset<E>.forEachEntry
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.forEachEntry
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Iterator<E>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.EnumMultiset.iterator*
  name: iterator
  nameWithType: EnumMultiset<E>.iterator
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.iterator
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset<E>
  name: AbstractMultiset<E>
  nameWithType: AbstractMultiset<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset<E>
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.contains(java.lang.Object)
  name: AbstractMultiset.contains(Object)
  nameWithType: AbstractMultiset.contains(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.contains(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.retainAll(java.util.Collection<?>)
  name: AbstractMultiset.retainAll(Collection<?>)
  nameWithType: AbstractMultiset.retainAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.retainAll(java.util.Collection<?>)
- uid: java.util.AbstractCollection.size()
  name: AbstractCollection.size()
  nameWithType: AbstractCollection.size()
  fullName: java.util.AbstractCollection.size()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.setCount(E,int,int)
  name: AbstractMultiset.setCount(E,int,int)
  nameWithType: AbstractMultiset.setCount(E,int,int)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.setCount(E,int,int)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.clear()
  name: AbstractMultiset.clear()
  nameWithType: AbstractMultiset.clear()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.clear()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.util.AbstractCollection.<T>toArray(T[])
  name: AbstractCollection.<T>toArray(T[])
  nameWithType: AbstractCollection.<T>toArray(T[])
  fullName: java.util.AbstractCollection.<T>toArray(T[])
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.util.AbstractCollection.toArray()
  name: AbstractCollection.toArray()
  nameWithType: AbstractCollection.toArray()
  fullName: java.util.AbstractCollection.toArray()
- uid: java.util.AbstractCollection.iterator()
  name: AbstractCollection.iterator()
  nameWithType: AbstractCollection.iterator()
  fullName: java.util.AbstractCollection.iterator()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.removeAll(java.util.Collection<?>)
  name: AbstractMultiset.removeAll(Collection<?>)
  nameWithType: AbstractMultiset.removeAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.removeAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.remove(java.lang.Object,int)
  name: AbstractMultiset.remove(Object,int)
  nameWithType: AbstractMultiset.remove(Object,int)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.remove(java.lang.Object,int)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.toString()
  name: AbstractMultiset.toString()
  nameWithType: AbstractMultiset.toString()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.toString()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.isEmpty()
  name: AbstractMultiset.isEmpty()
  nameWithType: AbstractMultiset.isEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.isEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.entrySet()
  name: AbstractMultiset.entrySet()
  nameWithType: AbstractMultiset.entrySet()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.entrySet()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.hashCode()
  name: AbstractMultiset.hashCode()
  nameWithType: AbstractMultiset.hashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.hashCode()
- uid: java.util.AbstractCollection.containsAll(java.util.Collection<?>)
  name: AbstractCollection.containsAll(Collection<?>)
  nameWithType: AbstractCollection.containsAll(Collection<?>)
  fullName: java.util.AbstractCollection.containsAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.add(E,int)
  name: AbstractMultiset.add(E,int)
  nameWithType: AbstractMultiset.add(E,int)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.add(E,int)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.remove(java.lang.Object)
  name: AbstractMultiset.remove(Object)
  nameWithType: AbstractMultiset.remove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.remove(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.addAll(java.util.Collection<? extends E>)
  name: AbstractMultiset.addAll(Collection<? extends E>)
  nameWithType: AbstractMultiset.addAll(Collection<? extends E>)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.addAll(java.util.Collection<? extends E>)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.add(E)
  name: AbstractMultiset.add(E)
  nameWithType: AbstractMultiset.add(E)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.add(E)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.elementSet()
  name: AbstractMultiset.elementSet()
  nameWithType: AbstractMultiset.elementSet()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.elementSet()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.setCount(E,int)
  name: AbstractMultiset.setCount(E,int)
  nameWithType: AbstractMultiset.setCount(E,int)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.setCount(E,int)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.equals(java.lang.Object)
  name: AbstractMultiset.equals(Object)
  nameWithType: AbstractMultiset.equals(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.equals(java.lang.Object)
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: java.lang.Iterable
  name: Iterable
  nameWithType: Iterable
  fullName: java.lang.Iterable
- uid: '? super E'
  name: '? super E'
  nameWithType: '? super E'
  fullName: '? super E'
- uid: java.util.function.ObjIntConsumer
  name: ObjIntConsumer
  nameWithType: ObjIntConsumer
  fullName: java.util.function.ObjIntConsumer
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset
  name: AbstractMultiset
  nameWithType: AbstractMultiset
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.retainAll(java.util.Collection
  name: AbstractMultiset.retainAll(Collection
  nameWithType: AbstractMultiset.retainAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.retainAll(java.util.Collection
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: T>toArray(T[])
  name: T>toArray(T[])
  nameWithType: T>toArray(T[])
  fullName: T>toArray(T[])
- uid: java.util.AbstractCollection.
  name: AbstractCollection.
  nameWithType: AbstractCollection.
  fullName: java.util.AbstractCollection.
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.removeAll(java.util.Collection
  name: AbstractMultiset.removeAll(Collection
  nameWithType: AbstractMultiset.removeAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.removeAll(java.util.Collection
- uid: java.util.AbstractCollection.containsAll(java.util.Collection
  name: AbstractCollection.containsAll(Collection
  nameWithType: AbstractCollection.containsAll(Collection
  fullName: java.util.AbstractCollection.containsAll(java.util.Collection
- uid: '? extends E>)'
  name: '? extends E>)'
  nameWithType: '? extends E>)'
  fullName: '? extends E>)'
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.addAll(java.util.Collection
  name: AbstractMultiset.addAll(Collection
  nameWithType: AbstractMultiset.addAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.addAll(java.util.Collection
