### YamlMime:JavaType
uid: "com.azure.ai.openai.assistants.AssistantsClient"
fullName: "com.azure.ai.openai.assistants.AssistantsClient"
name: "AssistantsClient"
nameWithType: "AssistantsClient"
summary: "Initializes a new instance of the synchronous Assistants<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **AssistantsClient**"
methods:
- uid: "com.azure.ai.openai.assistants.AssistantsClient.cancelRun(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.cancelRun(String threadId, String runId)"
  name: "cancelRun(String threadId, String runId)"
  nameWithType: "AssistantsClient.cancelRun(String threadId, String runId)"
  summary: "Cancels a run of an in progress thread."
  parameters:
  - description: "The ID of the thread being run."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the run to cancel."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ThreadRun cancelRun(String threadId, String runId)"
  desc: "Cancels a run of an in progress thread."
  returns:
    description: "data representing a single evaluation run of an assistant thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ThreadRun?alt=com.azure.ai.openai.assistants.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.cancelRunWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.cancelRunWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  name: "cancelRunWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.cancelRunWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  summary: "Cancels a run of an in progress thread."
  parameters:
  - description: "The ID of the thread being run."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the run to cancel."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> cancelRunWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  desc: "Cancels a run of an in progress thread.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     thread_id: String (Required)\n     assistant_id: String (Required)\n     status: String(queued/in_progress/requires_action/cancelling/cancelled/failed/completed/expired) (Required)\n     required_action (Optional): {\n     }\n     last_error (Required): {\n         code: String (Required)\n         message: String (Required)\n     }\n     model: String (Required)\n     instructions: String (Required)\n     tools (Required): [\n          (Required){\n         }\n     ]\n     file_ids (Required): [\n         String (Required)\n     ]\n     created_at: long (Required)\n     expires_at: OffsetDateTime (Required)\n     started_at: OffsetDateTime (Required)\n     completed_at: OffsetDateTime (Required)\n     cancelled_at: OffsetDateTime (Required)\n     failed_at: OffsetDateTime (Required)\n     metadata (Required): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "data representing a single evaluation run of an assistant thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.createAssistant(com.azure.ai.openai.assistants.models.AssistantCreationOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.createAssistant(AssistantCreationOptions assistantCreationOptions)"
  name: "createAssistant(AssistantCreationOptions assistantCreationOptions)"
  nameWithType: "AssistantsClient.createAssistant(AssistantCreationOptions assistantCreationOptions)"
  summary: "Creates a new assistant."
  parameters:
  - description: "The request details to use when creating a new assistant."
    name: "assistantCreationOptions"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.AssistantCreationOptions?alt=com.azure.ai.openai.assistants.models.AssistantCreationOptions&text=AssistantCreationOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Assistant createAssistant(AssistantCreationOptions assistantCreationOptions)"
  desc: "Creates a new assistant."
  returns:
    description: "represents an assistant that can call the model and use tools."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.Assistant?alt=com.azure.ai.openai.assistants.models.Assistant&text=Assistant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.createAssistantFile(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.createAssistantFile(String assistantId, String fileId)"
  name: "createAssistantFile(String assistantId, String fileId)"
  nameWithType: "AssistantsClient.createAssistantFile(String assistantId, String fileId)"
  summary: "Attaches a previously uploaded file to an assistant for use by tools that can read files."
  parameters:
  - description: "The ID of the assistant to attach the file to."
    name: "assistantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the previously uploaded file to attach."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AssistantFile createAssistantFile(String assistantId, String fileId)"
  desc: "Attaches a previously uploaded file to an assistant for use by tools that can read files."
  returns:
    description: "information about a file attached to an assistant, as used by tools that can read files."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.AssistantFile?alt=com.azure.ai.openai.assistants.models.AssistantFile&text=AssistantFile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.createAssistantFileWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.createAssistantFileWithResponse(String assistantId, BinaryData request, RequestOptions requestOptions)"
  name: "createAssistantFileWithResponse(String assistantId, BinaryData request, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.createAssistantFileWithResponse(String assistantId, BinaryData request, RequestOptions requestOptions)"
  summary: "Attaches a previously uploaded file to an assistant for use by tools that can read files."
  parameters:
  - description: "The ID of the assistant to attach the file to."
    name: "assistantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The request parameter."
    name: "request"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createAssistantFileWithResponse(String assistantId, BinaryData request, RequestOptions requestOptions)"
  desc: "Attaches a previously uploaded file to an assistant for use by tools that can read files.\n\n**Request Body Schema**\n\n```java\n{\n     file_id: String (Required)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     created_at: long (Required)\n     assistant_id: String (Required)\n }\n```"
  returns:
    description: "information about a file attached to an assistant, as used by tools that can read files along with\n <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.createAssistantWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.createAssistantWithResponse(BinaryData assistantCreationOptions, RequestOptions requestOptions)"
  name: "createAssistantWithResponse(BinaryData assistantCreationOptions, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.createAssistantWithResponse(BinaryData assistantCreationOptions, RequestOptions requestOptions)"
  summary: "Creates a new assistant."
  parameters:
  - description: "The request details to use when creating a new assistant."
    name: "assistantCreationOptions"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createAssistantWithResponse(BinaryData assistantCreationOptions, RequestOptions requestOptions)"
  desc: "Creates a new assistant.\n\n**Request Body Schema**\n\n```java\n{\n     model: String (Required)\n     name: String (Optional)\n     description: String (Optional)\n     instructions: String (Optional)\n     tools (Optional): [\n          (Optional){\n         }\n     ]\n     file_ids (Optional): [\n         String (Optional)\n     ]\n     metadata (Optional): {\n         String: String (Required)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     created_at: long (Required)\n     name: String (Required)\n     description: String (Required)\n     model: String (Required)\n     instructions: String (Required)\n     tools (Required): [\n          (Required){\n         }\n     ]\n     file_ids (Required): [\n         String (Required)\n     ]\n     metadata (Required): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "represents an assistant that can call the model and use tools along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.createMessage(java.lang.String,com.azure.ai.openai.assistants.models.MessageRole,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.createMessage(String threadId, MessageRole role, String content)"
  name: "createMessage(String threadId, MessageRole role, String content)"
  nameWithType: "AssistantsClient.createMessage(String threadId, MessageRole role, String content)"
  summary: "Creates a new message on a specified thread."
  parameters:
  - description: "The ID of the thread to create the new message on."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The role to associate with the new message."
    name: "role"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.MessageRole?alt=com.azure.ai.openai.assistants.models.MessageRole&text=MessageRole\" data-throw-if-not-resolved=\"False\" />"
  - description: "The textual content for the new message."
    name: "content"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ThreadMessage createMessage(String threadId, MessageRole role, String content)"
  desc: "Creates a new message on a specified thread."
  returns:
    description: "a single, existing message within an assistant thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ThreadMessage?alt=com.azure.ai.openai.assistants.models.ThreadMessage&text=ThreadMessage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.createMessage(java.lang.String,com.azure.ai.openai.assistants.models.MessageRole,java.lang.String,java.util.List<java.lang.String>,java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.createMessage(String threadId, MessageRole role, String content, List<String> fileIds, Map<String,String> metadata)"
  name: "createMessage(String threadId, MessageRole role, String content, List<String> fileIds, Map<String,String> metadata)"
  nameWithType: "AssistantsClient.createMessage(String threadId, MessageRole role, String content, List<String> fileIds, Map<String,String> metadata)"
  summary: "Creates a new message on a specified thread."
  parameters:
  - description: "The ID of the thread to create the new message on."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The role to associate with the new message."
    name: "role"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.MessageRole?alt=com.azure.ai.openai.assistants.models.MessageRole&text=MessageRole\" data-throw-if-not-resolved=\"False\" />"
  - description: "The textual content for the new message."
    name: "content"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A list of up to 10 file IDs to associate with the message, as used by tools like\n 'code_interpreter' or 'retrieval' that can read files."
    name: "fileIds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  - description: "A set of up to 16 key/value pairs that can be attached to an object, used for storing additional\n information about that object in a structured format. Keys may be up to 64 characters in length and values may be\n up to 512 characters in length."
    name: "metadata"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public ThreadMessage createMessage(String threadId, MessageRole role, String content, List<String> fileIds, Map<String,String> metadata)"
  desc: "Creates a new message on a specified thread."
  returns:
    description: "a single, existing message within an assistant thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ThreadMessage?alt=com.azure.ai.openai.assistants.models.ThreadMessage&text=ThreadMessage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.createMessageWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.createMessageWithResponse(String threadId, BinaryData request, RequestOptions requestOptions)"
  name: "createMessageWithResponse(String threadId, BinaryData request, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.createMessageWithResponse(String threadId, BinaryData request, RequestOptions requestOptions)"
  summary: "Creates a new message on a specified thread."
  parameters:
  - description: "The ID of the thread to create the new message on."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The request parameter."
    name: "request"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createMessageWithResponse(String threadId, BinaryData request, RequestOptions requestOptions)"
  desc: "Creates a new message on a specified thread.\n\n**Request Body Schema**\n\n```java\n{\n     role: String(user/assistant) (Required)\n     content: String (Required)\n     file_ids (Optional): [\n         String (Optional)\n     ]\n     metadata (Optional): {\n         String: String (Required)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     created_at: long (Required)\n     thread_id: String (Required)\n     role: String(user/assistant) (Required)\n     content (Required): [\n          (Required){\n         }\n     ]\n     assistant_id: String (Optional)\n     run_id: String (Optional)\n     file_ids (Required): [\n         String (Required)\n     ]\n     metadata (Required): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "a single, existing message within an assistant thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.createRun(com.azure.ai.openai.assistants.models.AssistantThread,com.azure.ai.openai.assistants.models.Assistant)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.createRun(AssistantThread thread, Assistant assistant)"
  name: "createRun(AssistantThread thread, Assistant assistant)"
  nameWithType: "AssistantsClient.createRun(AssistantThread thread, Assistant assistant)"
  summary: "Creates a new run for an assistant thread."
  parameters:
  - description: "The thread to run."
    name: "thread"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.AssistantThread?alt=com.azure.ai.openai.assistants.models.AssistantThread&text=AssistantThread\" data-throw-if-not-resolved=\"False\" />"
  - description: "The assistant that will run the thread."
    name: "assistant"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.Assistant?alt=com.azure.ai.openai.assistants.models.Assistant&text=Assistant\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ThreadRun createRun(AssistantThread thread, Assistant assistant)"
  desc: "Creates a new run for an assistant thread."
  returns:
    description: "data representing a single evaluation run of an assistant thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ThreadRun?alt=com.azure.ai.openai.assistants.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.createRun(java.lang.String,com.azure.ai.openai.assistants.models.CreateRunOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.createRun(String threadId, CreateRunOptions createRunOptions)"
  name: "createRun(String threadId, CreateRunOptions createRunOptions)"
  nameWithType: "AssistantsClient.createRun(String threadId, CreateRunOptions createRunOptions)"
  summary: "Creates a new run for an assistant thread."
  parameters:
  - description: "The ID of the thread to run."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The details for the run to create."
    name: "createRunOptions"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.CreateRunOptions?alt=com.azure.ai.openai.assistants.models.CreateRunOptions&text=CreateRunOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ThreadRun createRun(String threadId, CreateRunOptions createRunOptions)"
  desc: "Creates a new run for an assistant thread."
  returns:
    description: "data representing a single evaluation run of an assistant thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ThreadRun?alt=com.azure.ai.openai.assistants.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.createRunWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.createRunWithResponse(String threadId, BinaryData createRunOptions, RequestOptions requestOptions)"
  name: "createRunWithResponse(String threadId, BinaryData createRunOptions, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.createRunWithResponse(String threadId, BinaryData createRunOptions, RequestOptions requestOptions)"
  summary: "Creates a new run for an assistant thread."
  parameters:
  - description: "The ID of the thread to run."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The details for the run to create."
    name: "createRunOptions"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createRunWithResponse(String threadId, BinaryData createRunOptions, RequestOptions requestOptions)"
  desc: "Creates a new run for an assistant thread.\n\n**Request Body Schema**\n\n```java\n{\n     assistant_id: String (Required)\n     model: String (Optional)\n     instructions: String (Optional)\n     additional_instructions: String (Optional)\n     tools (Optional): [\n          (Optional){\n         }\n     ]\n     metadata (Optional): {\n         String: String (Required)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     thread_id: String (Required)\n     assistant_id: String (Required)\n     status: String(queued/in_progress/requires_action/cancelling/cancelled/failed/completed/expired) (Required)\n     required_action (Optional): {\n     }\n     last_error (Required): {\n         code: String (Required)\n         message: String (Required)\n     }\n     model: String (Required)\n     instructions: String (Required)\n     tools (Required): [\n          (Required){\n         }\n     ]\n     file_ids (Required): [\n         String (Required)\n     ]\n     created_at: long (Required)\n     expires_at: OffsetDateTime (Required)\n     started_at: OffsetDateTime (Required)\n     completed_at: OffsetDateTime (Required)\n     cancelled_at: OffsetDateTime (Required)\n     failed_at: OffsetDateTime (Required)\n     metadata (Required): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "data representing a single evaluation run of an assistant thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.createThread(com.azure.ai.openai.assistants.models.AssistantThreadCreationOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.createThread(AssistantThreadCreationOptions assistantThreadCreationOptions)"
  name: "createThread(AssistantThreadCreationOptions assistantThreadCreationOptions)"
  nameWithType: "AssistantsClient.createThread(AssistantThreadCreationOptions assistantThreadCreationOptions)"
  summary: "Creates a new thread."
  parameters:
  - description: "The details used to create a new assistant thread."
    name: "assistantThreadCreationOptions"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.AssistantThreadCreationOptions?alt=com.azure.ai.openai.assistants.models.AssistantThreadCreationOptions&text=AssistantThreadCreationOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AssistantThread createThread(AssistantThreadCreationOptions assistantThreadCreationOptions)"
  desc: "Creates a new thread. Threads contain messages and can be run by assistants."
  returns:
    description: "information about a single thread associated with an assistant."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.AssistantThread?alt=com.azure.ai.openai.assistants.models.AssistantThread&text=AssistantThread\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.createThreadAndRun(com.azure.ai.openai.assistants.models.CreateAndRunThreadOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.createThreadAndRun(CreateAndRunThreadOptions createAndRunThreadOptions)"
  name: "createThreadAndRun(CreateAndRunThreadOptions createAndRunThreadOptions)"
  nameWithType: "AssistantsClient.createThreadAndRun(CreateAndRunThreadOptions createAndRunThreadOptions)"
  summary: "Creates a new assistant thread and immediately starts a run using that new thread."
  parameters:
  - description: "The details used when creating and immediately running a new assistant thread."
    name: "createAndRunThreadOptions"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.CreateAndRunThreadOptions?alt=com.azure.ai.openai.assistants.models.CreateAndRunThreadOptions&text=CreateAndRunThreadOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ThreadRun createThreadAndRun(CreateAndRunThreadOptions createAndRunThreadOptions)"
  desc: "Creates a new assistant thread and immediately starts a run using that new thread."
  returns:
    description: "data representing a single evaluation run of an assistant thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ThreadRun?alt=com.azure.ai.openai.assistants.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.createThreadAndRunWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.createThreadAndRunWithResponse(BinaryData createAndRunThreadOptions, RequestOptions requestOptions)"
  name: "createThreadAndRunWithResponse(BinaryData createAndRunThreadOptions, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.createThreadAndRunWithResponse(BinaryData createAndRunThreadOptions, RequestOptions requestOptions)"
  summary: "Creates a new assistant thread and immediately starts a run using that new thread."
  parameters:
  - description: "The details used when creating and immediately running a new assistant thread."
    name: "createAndRunThreadOptions"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createThreadAndRunWithResponse(BinaryData createAndRunThreadOptions, RequestOptions requestOptions)"
  desc: "Creates a new assistant thread and immediately starts a run using that new thread.\n\n**Request Body Schema**\n\n```java\n{\n     assistant_id: String (Required)\n     thread (Optional): {\n         messages (Optional): [\n              (Optional){\n                 role: String(user/assistant) (Required)\n                 content: String (Required)\n                 file_ids (Optional): [\n                     String (Optional)\n                 ]\n                 metadata (Optional): {\n                     String: String (Required)\n                 }\n             }\n         ]\n         metadata (Optional): {\n             String: String (Required)\n         }\n     }\n     model: String (Optional)\n     instructions: String (Optional)\n     tools (Optional): [\n          (Optional){\n         }\n     ]\n     metadata (Optional): {\n         String: String (Required)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     thread_id: String (Required)\n     assistant_id: String (Required)\n     status: String(queued/in_progress/requires_action/cancelling/cancelled/failed/completed/expired) (Required)\n     required_action (Optional): {\n     }\n     last_error (Required): {\n         code: String (Required)\n         message: String (Required)\n     }\n     model: String (Required)\n     instructions: String (Required)\n     tools (Required): [\n          (Required){\n         }\n     ]\n     file_ids (Required): [\n         String (Required)\n     ]\n     created_at: long (Required)\n     expires_at: OffsetDateTime (Required)\n     started_at: OffsetDateTime (Required)\n     completed_at: OffsetDateTime (Required)\n     cancelled_at: OffsetDateTime (Required)\n     failed_at: OffsetDateTime (Required)\n     metadata (Required): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "data representing a single evaluation run of an assistant thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.createThreadWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.createThreadWithResponse(BinaryData assistantThreadCreationOptions, RequestOptions requestOptions)"
  name: "createThreadWithResponse(BinaryData assistantThreadCreationOptions, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.createThreadWithResponse(BinaryData assistantThreadCreationOptions, RequestOptions requestOptions)"
  summary: "Creates a new thread."
  parameters:
  - description: "The details used to create a new assistant thread."
    name: "assistantThreadCreationOptions"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createThreadWithResponse(BinaryData assistantThreadCreationOptions, RequestOptions requestOptions)"
  desc: "Creates a new thread. Threads contain messages and can be run by assistants.\n\n**Request Body Schema**\n\n```java\n{\n     messages (Optional): [\n          (Optional){\n             role: String(user/assistant) (Required)\n             content: String (Required)\n             file_ids (Optional): [\n                 String (Optional)\n             ]\n             metadata (Optional): {\n                 String: String (Required)\n             }\n         }\n     ]\n     metadata (Optional): {\n         String: String (Required)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     created_at: long (Required)\n     metadata (Required): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "information about a single thread associated with an assistant along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.deleteAssistant(java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.deleteAssistant(String assistantId)"
  name: "deleteAssistant(String assistantId)"
  nameWithType: "AssistantsClient.deleteAssistant(String assistantId)"
  summary: "Deletes an assistant."
  parameters:
  - description: "The ID of the assistant to delete."
    name: "assistantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AssistantDeletionStatus deleteAssistant(String assistantId)"
  desc: "Deletes an assistant."
  returns:
    description: "the status of an assistant deletion operation."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.AssistantDeletionStatus?alt=com.azure.ai.openai.assistants.models.AssistantDeletionStatus&text=AssistantDeletionStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.deleteAssistantFile(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.deleteAssistantFile(String assistantId, String fileId)"
  name: "deleteAssistantFile(String assistantId, String fileId)"
  nameWithType: "AssistantsClient.deleteAssistantFile(String assistantId, String fileId)"
  summary: "Unlinks a previously attached file from an assistant, rendering it unavailable for use by tools that can read files."
  parameters:
  - description: "The ID of the assistant from which the specified file should be unlinked."
    name: "assistantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the file to unlink from the specified assistant."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AssistantFileDeletionStatus deleteAssistantFile(String assistantId, String fileId)"
  desc: "Unlinks a previously attached file from an assistant, rendering it unavailable for use by tools that can read files."
  returns:
    description: "the status of an assistant file deletion operation."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.AssistantFileDeletionStatus?alt=com.azure.ai.openai.assistants.models.AssistantFileDeletionStatus&text=AssistantFileDeletionStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.deleteAssistantFileWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.deleteAssistantFileWithResponse(String assistantId, String fileId, RequestOptions requestOptions)"
  name: "deleteAssistantFileWithResponse(String assistantId, String fileId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.deleteAssistantFileWithResponse(String assistantId, String fileId, RequestOptions requestOptions)"
  summary: "Unlinks a previously attached file from an assistant, rendering it unavailable for use by tools that can read files."
  parameters:
  - description: "The ID of the assistant from which the specified file should be unlinked."
    name: "assistantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the file to unlink from the specified assistant."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> deleteAssistantFileWithResponse(String assistantId, String fileId, RequestOptions requestOptions)"
  desc: "Unlinks a previously attached file from an assistant, rendering it unavailable for use by tools that can read files.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     deleted: boolean (Required)\n     object: String (Required)\n }\n```"
  returns:
    description: "the status of an assistant file deletion operation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.deleteAssistantWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.deleteAssistantWithResponse(String assistantId, RequestOptions requestOptions)"
  name: "deleteAssistantWithResponse(String assistantId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.deleteAssistantWithResponse(String assistantId, RequestOptions requestOptions)"
  summary: "Deletes an assistant."
  parameters:
  - description: "The ID of the assistant to delete."
    name: "assistantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> deleteAssistantWithResponse(String assistantId, RequestOptions requestOptions)"
  desc: "Deletes an assistant.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     deleted: boolean (Required)\n     object: String (Required)\n }\n```"
  returns:
    description: "the status of an assistant deletion operation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.deleteFile(java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.deleteFile(String fileId)"
  name: "deleteFile(String fileId)"
  nameWithType: "AssistantsClient.deleteFile(String fileId)"
  summary: "Delete a previously uploaded file."
  parameters:
  - description: "The ID of the file to delete."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public FileDeletionStatus deleteFile(String fileId)"
  desc: "Delete a previously uploaded file."
  returns:
    description: "a status response from a file deletion operation."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.FileDeletionStatus?alt=com.azure.ai.openai.assistants.models.FileDeletionStatus&text=FileDeletionStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.deleteFileWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.deleteFileWithResponse(String fileId, RequestOptions requestOptions)"
  name: "deleteFileWithResponse(String fileId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.deleteFileWithResponse(String fileId, RequestOptions requestOptions)"
  summary: "Delete a previously uploaded file."
  parameters:
  - description: "The ID of the file to delete."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> deleteFileWithResponse(String fileId, RequestOptions requestOptions)"
  desc: "Delete a previously uploaded file.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     deleted: boolean (Required)\n     object: String (Required)\n }\n```"
  returns:
    description: "a status response from a file deletion operation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.deleteThread(java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.deleteThread(String threadId)"
  name: "deleteThread(String threadId)"
  nameWithType: "AssistantsClient.deleteThread(String threadId)"
  summary: "Deletes an existing thread."
  parameters:
  - description: "The ID of the thread to delete."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ThreadDeletionStatus deleteThread(String threadId)"
  desc: "Deletes an existing thread."
  returns:
    description: "the status of a thread deletion operation."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ThreadDeletionStatus?alt=com.azure.ai.openai.assistants.models.ThreadDeletionStatus&text=ThreadDeletionStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.deleteThreadWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.deleteThreadWithResponse(String threadId, RequestOptions requestOptions)"
  name: "deleteThreadWithResponse(String threadId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.deleteThreadWithResponse(String threadId, RequestOptions requestOptions)"
  summary: "Deletes an existing thread."
  parameters:
  - description: "The ID of the thread to delete."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> deleteThreadWithResponse(String threadId, RequestOptions requestOptions)"
  desc: "Deletes an existing thread.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     deleted: boolean (Required)\n     object: String (Required)\n }\n```"
  returns:
    description: "the status of a thread deletion operation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.getAssistant(java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.getAssistant(String assistantId)"
  name: "getAssistant(String assistantId)"
  nameWithType: "AssistantsClient.getAssistant(String assistantId)"
  summary: "Retrieves an existing assistant."
  parameters:
  - description: "The ID of the assistant to retrieve."
    name: "assistantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Assistant getAssistant(String assistantId)"
  desc: "Retrieves an existing assistant."
  returns:
    description: "represents an assistant that can call the model and use tools."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.Assistant?alt=com.azure.ai.openai.assistants.models.Assistant&text=Assistant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.getAssistantFile(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.getAssistantFile(String assistantId, String fileId)"
  name: "getAssistantFile(String assistantId, String fileId)"
  nameWithType: "AssistantsClient.getAssistantFile(String assistantId, String fileId)"
  summary: "Retrieves a file attached to an assistant."
  parameters:
  - description: "The ID of the assistant associated with the attached file."
    name: "assistantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the file to retrieve."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AssistantFile getAssistantFile(String assistantId, String fileId)"
  desc: "Retrieves a file attached to an assistant."
  returns:
    description: "information about a file attached to an assistant, as used by tools that can read files."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.AssistantFile?alt=com.azure.ai.openai.assistants.models.AssistantFile&text=AssistantFile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.getAssistantFileWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.getAssistantFileWithResponse(String assistantId, String fileId, RequestOptions requestOptions)"
  name: "getAssistantFileWithResponse(String assistantId, String fileId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.getAssistantFileWithResponse(String assistantId, String fileId, RequestOptions requestOptions)"
  summary: "Retrieves a file attached to an assistant."
  parameters:
  - description: "The ID of the assistant associated with the attached file."
    name: "assistantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the file to retrieve."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getAssistantFileWithResponse(String assistantId, String fileId, RequestOptions requestOptions)"
  desc: "Retrieves a file attached to an assistant.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     created_at: long (Required)\n     assistant_id: String (Required)\n }\n```"
  returns:
    description: "information about a file attached to an assistant, as used by tools that can read files along with\n <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.getAssistantWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.getAssistantWithResponse(String assistantId, RequestOptions requestOptions)"
  name: "getAssistantWithResponse(String assistantId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.getAssistantWithResponse(String assistantId, RequestOptions requestOptions)"
  summary: "Retrieves an existing assistant."
  parameters:
  - description: "The ID of the assistant to retrieve."
    name: "assistantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getAssistantWithResponse(String assistantId, RequestOptions requestOptions)"
  desc: "Retrieves an existing assistant.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     created_at: long (Required)\n     name: String (Required)\n     description: String (Required)\n     model: String (Required)\n     instructions: String (Required)\n     tools (Required): [\n          (Required){\n         }\n     ]\n     file_ids (Required): [\n         String (Required)\n     ]\n     metadata (Required): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "represents an assistant that can call the model and use tools along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.getFile(java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.getFile(String fileId)"
  name: "getFile(String fileId)"
  nameWithType: "AssistantsClient.getFile(String fileId)"
  summary: "Returns information about a specific file."
  parameters:
  - description: "The ID of the file to retrieve."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public OpenAIFile getFile(String fileId)"
  desc: "Returns information about a specific file. Does not retrieve file content."
  returns:
    description: "represents an assistant that can call the model and use tools."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.OpenAIFile?alt=com.azure.ai.openai.assistants.models.OpenAIFile&text=OpenAIFile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.getFileWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.getFileWithResponse(String fileId, RequestOptions requestOptions)"
  name: "getFileWithResponse(String fileId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.getFileWithResponse(String fileId, RequestOptions requestOptions)"
  summary: "Returns information about a specific file."
  parameters:
  - description: "The ID of the file to retrieve."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getFileWithResponse(String fileId, RequestOptions requestOptions)"
  desc: "Returns information about a specific file. Does not retrieve file content.\n\n**Response Body Schema**\n\n```java\n{\n     object: String (Required)\n     id: String (Required)\n     bytes: int (Required)\n     filename: String (Required)\n     created_at: long (Required)\n     purpose: String(fine-tune/fine-tune-results/assistants/assistants_output) (Required)\n }\n```"
  returns:
    description: "represents an assistant that can call the model and use tools along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.getMessage(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.getMessage(String threadId, String messageId)"
  name: "getMessage(String threadId, String messageId)"
  nameWithType: "AssistantsClient.getMessage(String threadId, String messageId)"
  summary: "Gets an existing message from an existing thread."
  parameters:
  - description: "The ID of the thread to retrieve the specified message from."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the message to retrieve from the specified thread."
    name: "messageId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ThreadMessage getMessage(String threadId, String messageId)"
  desc: "Gets an existing message from an existing thread."
  returns:
    description: "an existing message from an existing thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ThreadMessage?alt=com.azure.ai.openai.assistants.models.ThreadMessage&text=ThreadMessage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.getMessageFile(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.getMessageFile(String threadId, String messageId, String fileId)"
  name: "getMessageFile(String threadId, String messageId, String fileId)"
  nameWithType: "AssistantsClient.getMessageFile(String threadId, String messageId, String fileId)"
  summary: "Gets information about a file attachment to a message within a thread."
  parameters:
  - description: "The ID of the thread containing the message to get information from."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the message to get information from."
    name: "messageId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the file to get information about."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public MessageFile getMessageFile(String threadId, String messageId, String fileId)"
  desc: "Gets information about a file attachment to a message within a thread."
  returns:
    description: "information about a file attachment to a message within a thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.MessageFile?alt=com.azure.ai.openai.assistants.models.MessageFile&text=MessageFile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.getMessageFileWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.getMessageFileWithResponse(String threadId, String messageId, String fileId, RequestOptions requestOptions)"
  name: "getMessageFileWithResponse(String threadId, String messageId, String fileId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.getMessageFileWithResponse(String threadId, String messageId, String fileId, RequestOptions requestOptions)"
  summary: "Gets information about a file attachment to a message within a thread."
  parameters:
  - description: "The ID of the thread containing the message to get information from."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the message to get information from."
    name: "messageId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the file to get information about."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getMessageFileWithResponse(String threadId, String messageId, String fileId, RequestOptions requestOptions)"
  desc: "Gets information about a file attachment to a message within a thread.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     created_at: long (Required)\n     message_id: String (Required)\n }\n```"
  returns:
    description: "information about a file attachment to a message within a thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.getMessageWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.getMessageWithResponse(String threadId, String messageId, RequestOptions requestOptions)"
  name: "getMessageWithResponse(String threadId, String messageId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.getMessageWithResponse(String threadId, String messageId, RequestOptions requestOptions)"
  summary: "Gets an existing message from an existing thread."
  parameters:
  - description: "The ID of the thread to retrieve the specified message from."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the message to retrieve from the specified thread."
    name: "messageId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getMessageWithResponse(String threadId, String messageId, RequestOptions requestOptions)"
  desc: "Gets an existing message from an existing thread.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     created_at: long (Required)\n     thread_id: String (Required)\n     role: String(user/assistant) (Required)\n     content (Required): [\n          (Required){\n         }\n     ]\n     assistant_id: String (Optional)\n     run_id: String (Optional)\n     file_ids (Required): [\n         String (Required)\n     ]\n     metadata (Required): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "an existing message from an existing thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.getRun(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.getRun(String threadId, String runId)"
  name: "getRun(String threadId, String runId)"
  nameWithType: "AssistantsClient.getRun(String threadId, String runId)"
  summary: "Gets an existing run from an existing thread."
  parameters:
  - description: "The ID of the thread to retrieve run information from."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the thread to retrieve information about."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ThreadRun getRun(String threadId, String runId)"
  desc: "Gets an existing run from an existing thread."
  returns:
    description: "an existing run from an existing thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ThreadRun?alt=com.azure.ai.openai.assistants.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.getRunStep(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.getRunStep(String threadId, String runId, String stepId)"
  name: "getRunStep(String threadId, String runId, String stepId)"
  nameWithType: "AssistantsClient.getRunStep(String threadId, String runId, String stepId)"
  summary: "Gets a single run step from a thread run."
  parameters:
  - description: "The ID of the thread that was run."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the specific run to retrieve the step from."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the step to retrieve information about."
    name: "stepId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public RunStep getRunStep(String threadId, String runId, String stepId)"
  desc: "Gets a single run step from a thread run."
  returns:
    description: "a single run step from a thread run."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.RunStep?alt=com.azure.ai.openai.assistants.models.RunStep&text=RunStep\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.getRunStepWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.getRunStepWithResponse(String threadId, String runId, String stepId, RequestOptions requestOptions)"
  name: "getRunStepWithResponse(String threadId, String runId, String stepId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.getRunStepWithResponse(String threadId, String runId, String stepId, RequestOptions requestOptions)"
  summary: "Gets a single run step from a thread run."
  parameters:
  - description: "The ID of the thread that was run."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the specific run to retrieve the step from."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the step to retrieve information about."
    name: "stepId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getRunStepWithResponse(String threadId, String runId, String stepId, RequestOptions requestOptions)"
  desc: "Gets a single run step from a thread run.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     type: String(message_creation/tool_calls) (Required)\n     assistant_id: String (Required)\n     thread_id: String (Required)\n     run_id: String (Required)\n     status: String(in_progress/cancelled/failed/completed/expired) (Required)\n     step_details (Required): {\n     }\n     last_error (Required): {\n         code: String(server_error/rate_limit_exceeded) (Required)\n         message: String (Required)\n     }\n     created_at: long (Required)\n     expired_at: OffsetDateTime (Required)\n     completed_at: OffsetDateTime (Required)\n     cancelled_at: OffsetDateTime (Required)\n     failed_at: OffsetDateTime (Required)\n     metadata (Required): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "a single run step from a thread run along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.getRunWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.getRunWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  name: "getRunWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.getRunWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  summary: "Gets an existing run from an existing thread."
  parameters:
  - description: "The ID of the thread to retrieve run information from."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the thread to retrieve information about."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getRunWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  desc: "Gets an existing run from an existing thread.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     thread_id: String (Required)\n     assistant_id: String (Required)\n     status: String(queued/in_progress/requires_action/cancelling/cancelled/failed/completed/expired) (Required)\n     required_action (Optional): {\n     }\n     last_error (Required): {\n         code: String (Required)\n         message: String (Required)\n     }\n     model: String (Required)\n     instructions: String (Required)\n     tools (Required): [\n          (Required){\n         }\n     ]\n     file_ids (Required): [\n         String (Required)\n     ]\n     created_at: long (Required)\n     expires_at: OffsetDateTime (Required)\n     started_at: OffsetDateTime (Required)\n     completed_at: OffsetDateTime (Required)\n     cancelled_at: OffsetDateTime (Required)\n     failed_at: OffsetDateTime (Required)\n     metadata (Required): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "an existing run from an existing thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.getThread(java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.getThread(String threadId)"
  name: "getThread(String threadId)"
  nameWithType: "AssistantsClient.getThread(String threadId)"
  summary: "Gets information about an existing thread."
  parameters:
  - description: "The ID of the thread to retrieve information about."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AssistantThread getThread(String threadId)"
  desc: "Gets information about an existing thread."
  returns:
    description: "information about an existing thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.AssistantThread?alt=com.azure.ai.openai.assistants.models.AssistantThread&text=AssistantThread\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.getThreadWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.getThreadWithResponse(String threadId, RequestOptions requestOptions)"
  name: "getThreadWithResponse(String threadId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.getThreadWithResponse(String threadId, RequestOptions requestOptions)"
  summary: "Gets information about an existing thread."
  parameters:
  - description: "The ID of the thread to retrieve information about."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getThreadWithResponse(String threadId, RequestOptions requestOptions)"
  desc: "Gets information about an existing thread.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     created_at: long (Required)\n     metadata (Required): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "information about an existing thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listAssistantFiles(java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listAssistantFiles(String assistantId)"
  name: "listAssistantFiles(String assistantId)"
  nameWithType: "AssistantsClient.listAssistantFiles(String assistantId)"
  summary: "Gets a list of files attached to a specific assistant, as used by tools that can read files."
  parameters:
  - description: "The ID of the assistant to retrieve the list of attached files for."
    name: "assistantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PageableList<AssistantFile> listAssistantFiles(String assistantId)"
  desc: "Gets a list of files attached to a specific assistant, as used by tools that can read files."
  returns:
    description: "a list of files attached to a specific assistant, as used by tools that can read files."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.PageableList?alt=com.azure.ai.openai.assistants.models.PageableList&text=PageableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.assistants.models.AssistantFile?alt=com.azure.ai.openai.assistants.models.AssistantFile&text=AssistantFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listAssistantFiles(java.lang.String,java.lang.Integer,com.azure.ai.openai.assistants.models.ListSortOrder,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listAssistantFiles(String assistantId, Integer limit, ListSortOrder order, String after, String before)"
  name: "listAssistantFiles(String assistantId, Integer limit, ListSortOrder order, String after, String before)"
  nameWithType: "AssistantsClient.listAssistantFiles(String assistantId, Integer limit, ListSortOrder order, String after, String before)"
  summary: "Gets a list of files attached to a specific assistant, as used by tools that can read files."
  parameters:
  - description: "The ID of the assistant to retrieve the list of attached files for."
    name: "assistantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default\n is 20."
    name: "limit"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "Sort order by the created_at timestamp of the objects. asc for ascending order and desc for\n descending order."
    name: "order"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ListSortOrder?alt=com.azure.ai.openai.assistants.models.ListSortOrder&text=ListSortOrder\" data-throw-if-not-resolved=\"False\" />"
  - description: "A cursor for use in pagination. after is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include after=obj_foo in order to fetch the next page of the list."
    name: "after"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A cursor for use in pagination. before is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include before=obj_foo in order to fetch the previous page of the list."
    name: "before"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PageableList<AssistantFile> listAssistantFiles(String assistantId, Integer limit, ListSortOrder order, String after, String before)"
  desc: "Gets a list of files attached to a specific assistant, as used by tools that can read files."
  returns:
    description: "a list of files attached to a specific assistant, as used by tools that can read files."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.PageableList?alt=com.azure.ai.openai.assistants.models.PageableList&text=PageableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.assistants.models.AssistantFile?alt=com.azure.ai.openai.assistants.models.AssistantFile&text=AssistantFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listAssistantFilesWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listAssistantFilesWithResponse(String assistantId, RequestOptions requestOptions)"
  name: "listAssistantFilesWithResponse(String assistantId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.listAssistantFilesWithResponse(String assistantId, RequestOptions requestOptions)"
  summary: "Gets a list of files attached to a specific assistant, as used by tools that can read files."
  parameters:
  - description: "The ID of the assistant to retrieve the list of attached files for."
    name: "assistantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> listAssistantFilesWithResponse(String assistantId, RequestOptions requestOptions)"
  desc: "Gets a list of files attached to a specific assistant, as used by tools that can read files.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                                                                                                                                                                                                                           |\n    | limit  | Integer | No       | A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.                                                                                                                                                                            |\n    | order  | String  | No       | Sort order by the created\\_at timestamp of the objects. asc for ascending order and desc for descending order. Allowed values: \"asc\", \"desc\".                                                                                                                                         |\n    | after  | String  | No       | A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include after=obj\\_foo in order to fetch the next page of the list.       |\n    | before | String  | No       | A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include before=obj\\_foo in order to fetch the previous page of the list. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     object: String (Required)\n     data (Required): [\n          (Required){\n             id: String (Required)\n             object: String (Required)\n             created_at: long (Required)\n             assistant_id: String (Required)\n         }\n     ]\n     first_id: String (Required)\n     last_id: String (Required)\n     has_more: boolean (Required)\n }\n```"
  returns:
    description: "a list of files attached to a specific assistant, as used by tools that can read files along with\n <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listAssistants()"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listAssistants()"
  name: "listAssistants()"
  nameWithType: "AssistantsClient.listAssistants()"
  summary: "Gets a list of assistants that were previously created."
  syntax: "public PageableList<Assistant> listAssistants()"
  desc: "Gets a list of assistants that were previously created."
  returns:
    description: "a list of assistants that were previously created."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.PageableList?alt=com.azure.ai.openai.assistants.models.PageableList&text=PageableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.assistants.models.Assistant?alt=com.azure.ai.openai.assistants.models.Assistant&text=Assistant\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listAssistants(java.lang.Integer,com.azure.ai.openai.assistants.models.ListSortOrder,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listAssistants(Integer limit, ListSortOrder order, String after, String before)"
  name: "listAssistants(Integer limit, ListSortOrder order, String after, String before)"
  nameWithType: "AssistantsClient.listAssistants(Integer limit, ListSortOrder order, String after, String before)"
  summary: "Gets a list of assistants that were previously created."
  parameters:
  - description: "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default\n is 20."
    name: "limit"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "Sort order by the created_at timestamp of the objects. asc for ascending order and desc for\n descending order."
    name: "order"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ListSortOrder?alt=com.azure.ai.openai.assistants.models.ListSortOrder&text=ListSortOrder\" data-throw-if-not-resolved=\"False\" />"
  - description: "A cursor for use in pagination. after is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include after=obj_foo in order to fetch the next page of the list."
    name: "after"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A cursor for use in pagination. before is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include before=obj_foo in order to fetch the previous page of the list."
    name: "before"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PageableList<Assistant> listAssistants(Integer limit, ListSortOrder order, String after, String before)"
  desc: "Gets a list of assistants that were previously created."
  returns:
    description: "a list of assistants that were previously created."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.PageableList?alt=com.azure.ai.openai.assistants.models.PageableList&text=PageableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.assistants.models.Assistant?alt=com.azure.ai.openai.assistants.models.Assistant&text=Assistant\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listAssistantsWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listAssistantsWithResponse(RequestOptions requestOptions)"
  name: "listAssistantsWithResponse(RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.listAssistantsWithResponse(RequestOptions requestOptions)"
  summary: "Gets a list of assistants that were previously created."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> listAssistantsWithResponse(RequestOptions requestOptions)"
  desc: "Gets a list of assistants that were previously created.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                                                                                                                                                                                                                           |\n    | limit  | Integer | No       | A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.                                                                                                                                                                            |\n    | order  | String  | No       | Sort order by the created\\_at timestamp of the objects. asc for ascending order and desc for descending order. Allowed values: \"asc\", \"desc\".                                                                                                                                         |\n    | after  | String  | No       | A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include after=obj\\_foo in order to fetch the next page of the list.       |\n    | before | String  | No       | A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include before=obj\\_foo in order to fetch the previous page of the list. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     object: String (Required)\n     data (Required): [\n          (Required){\n             id: String (Required)\n             object: String (Required)\n             created_at: long (Required)\n             name: String (Required)\n             description: String (Required)\n             model: String (Required)\n             instructions: String (Required)\n             tools (Required): [\n                  (Required){\n                 }\n             ]\n             file_ids (Required): [\n                 String (Required)\n             ]\n             metadata (Required): {\n                 String: String (Required)\n             }\n         }\n     ]\n     first_id: String (Required)\n     last_id: String (Required)\n     has_more: boolean (Required)\n }\n```"
  returns:
    description: "a list of assistants that were previously created along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listFiles()"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listFiles()"
  name: "listFiles()"
  nameWithType: "AssistantsClient.listFiles()"
  summary: "Gets a list of previously uploaded files."
  syntax: "public List<OpenAIFile> listFiles()"
  desc: "Gets a list of previously uploaded files."
  returns:
    description: "a list of previously uploaded files."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.openai.assistants.models.OpenAIFile?alt=com.azure.ai.openai.assistants.models.OpenAIFile&text=OpenAIFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listFiles(com.azure.ai.openai.assistants.models.FilePurpose)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listFiles(FilePurpose purpose)"
  name: "listFiles(FilePurpose purpose)"
  nameWithType: "AssistantsClient.listFiles(FilePurpose purpose)"
  summary: "Gets a list of previously uploaded files."
  parameters:
  - description: "A value that, when provided, limits list results to files matching the corresponding purpose."
    name: "purpose"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.FilePurpose?alt=com.azure.ai.openai.assistants.models.FilePurpose&text=FilePurpose\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public List<OpenAIFile> listFiles(FilePurpose purpose)"
  desc: "Gets a list of previously uploaded files."
  returns:
    description: "a list of previously uploaded files."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.openai.assistants.models.OpenAIFile?alt=com.azure.ai.openai.assistants.models.OpenAIFile&text=OpenAIFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listFilesWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listFilesWithResponse(RequestOptions requestOptions)"
  name: "listFilesWithResponse(RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.listFilesWithResponse(RequestOptions requestOptions)"
  summary: "Gets a list of previously uploaded files."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> listFilesWithResponse(RequestOptions requestOptions)"
  desc: "Gets a list of previously uploaded files.\n\n**Query Parameters**\n\n    | ------- | ------ | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name    | Type   | Required | Description                                                                                                                                                                         |\n    | purpose | String | No       | A value that, when provided, limits list results to files matching the corresponding purpose. Allowed values: \"fine-tune\", \"fine-tune-results\", \"assistants\", \"assistants\\_output\". |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     object: String (Required)\n     data (Required): [\n          (Required){\n             object: String (Required)\n             id: String (Required)\n             bytes: int (Required)\n             filename: String (Required)\n             created_at: long (Required)\n             purpose: String(fine-tune/fine-tune-results/assistants/assistants_output) (Required)\n         }\n     ]\n }\n```"
  returns:
    description: "a list of previously uploaded files along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listMessageFiles(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listMessageFiles(String threadId, String messageId)"
  name: "listMessageFiles(String threadId, String messageId)"
  nameWithType: "AssistantsClient.listMessageFiles(String threadId, String messageId)"
  summary: "Gets a list of previously uploaded files associated with a message from a thread."
  parameters:
  - description: "The ID of the thread containing the message to list files from."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the message to list files from."
    name: "messageId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PageableList<MessageFile> listMessageFiles(String threadId, String messageId)"
  desc: "Gets a list of previously uploaded files associated with a message from a thread."
  returns:
    description: "a list of previously uploaded files associated with a message from a thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.PageableList?alt=com.azure.ai.openai.assistants.models.PageableList&text=PageableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.assistants.models.MessageFile?alt=com.azure.ai.openai.assistants.models.MessageFile&text=MessageFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listMessageFiles(java.lang.String,java.lang.String,java.lang.Integer,com.azure.ai.openai.assistants.models.ListSortOrder,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listMessageFiles(String threadId, String messageId, Integer limit, ListSortOrder order, String after, String before)"
  name: "listMessageFiles(String threadId, String messageId, Integer limit, ListSortOrder order, String after, String before)"
  nameWithType: "AssistantsClient.listMessageFiles(String threadId, String messageId, Integer limit, ListSortOrder order, String after, String before)"
  summary: "Gets a list of previously uploaded files associated with a message from a thread."
  parameters:
  - description: "The ID of the thread containing the message to list files from."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the message to list files from."
    name: "messageId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default\n is 20."
    name: "limit"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "Sort order by the created_at timestamp of the objects. asc for ascending order and desc for\n descending order."
    name: "order"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ListSortOrder?alt=com.azure.ai.openai.assistants.models.ListSortOrder&text=ListSortOrder\" data-throw-if-not-resolved=\"False\" />"
  - description: "A cursor for use in pagination. after is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include after=obj_foo in order to fetch the next page of the list."
    name: "after"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A cursor for use in pagination. before is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include before=obj_foo in order to fetch the previous page of the list."
    name: "before"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PageableList<MessageFile> listMessageFiles(String threadId, String messageId, Integer limit, ListSortOrder order, String after, String before)"
  desc: "Gets a list of previously uploaded files associated with a message from a thread."
  returns:
    description: "a list of previously uploaded files associated with a message from a thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.PageableList?alt=com.azure.ai.openai.assistants.models.PageableList&text=PageableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.assistants.models.MessageFile?alt=com.azure.ai.openai.assistants.models.MessageFile&text=MessageFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listMessageFilesWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listMessageFilesWithResponse(String threadId, String messageId, RequestOptions requestOptions)"
  name: "listMessageFilesWithResponse(String threadId, String messageId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.listMessageFilesWithResponse(String threadId, String messageId, RequestOptions requestOptions)"
  summary: "Gets a list of previously uploaded files associated with a message from a thread."
  parameters:
  - description: "The ID of the thread containing the message to list files from."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the message to list files from."
    name: "messageId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> listMessageFilesWithResponse(String threadId, String messageId, RequestOptions requestOptions)"
  desc: "Gets a list of previously uploaded files associated with a message from a thread.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                                                                                                                                                                                                                           |\n    | limit  | Integer | No       | A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.                                                                                                                                                                            |\n    | order  | String  | No       | Sort order by the created\\_at timestamp of the objects. asc for ascending order and desc for descending order. Allowed values: \"asc\", \"desc\".                                                                                                                                         |\n    | after  | String  | No       | A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include after=obj\\_foo in order to fetch the next page of the list.       |\n    | before | String  | No       | A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include before=obj\\_foo in order to fetch the previous page of the list. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     object: String (Required)\n     data (Required): [\n          (Required){\n             id: String (Required)\n             object: String (Required)\n             created_at: long (Required)\n             message_id: String (Required)\n         }\n     ]\n     first_id: String (Required)\n     last_id: String (Required)\n     has_more: boolean (Required)\n }\n```"
  returns:
    description: "a list of previously uploaded files associated with a message from a thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listMessages(java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listMessages(String threadId)"
  name: "listMessages(String threadId)"
  nameWithType: "AssistantsClient.listMessages(String threadId)"
  summary: "Gets a list of messages that exist on a thread."
  parameters:
  - description: "The ID of the thread to list messages from."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PageableList<ThreadMessage> listMessages(String threadId)"
  desc: "Gets a list of messages that exist on a thread."
  returns:
    description: "a list of messages that exist on a thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.PageableList?alt=com.azure.ai.openai.assistants.models.PageableList&text=PageableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.assistants.models.ThreadMessage?alt=com.azure.ai.openai.assistants.models.ThreadMessage&text=ThreadMessage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listMessages(java.lang.String,java.lang.Integer,com.azure.ai.openai.assistants.models.ListSortOrder,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listMessages(String threadId, Integer limit, ListSortOrder order, String after, String before)"
  name: "listMessages(String threadId, Integer limit, ListSortOrder order, String after, String before)"
  nameWithType: "AssistantsClient.listMessages(String threadId, Integer limit, ListSortOrder order, String after, String before)"
  summary: "Gets a list of messages that exist on a thread."
  parameters:
  - description: "The ID of the thread to list messages from."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default\n is 20."
    name: "limit"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "Sort order by the created_at timestamp of the objects. asc for ascending order and desc for\n descending order."
    name: "order"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ListSortOrder?alt=com.azure.ai.openai.assistants.models.ListSortOrder&text=ListSortOrder\" data-throw-if-not-resolved=\"False\" />"
  - description: "A cursor for use in pagination. after is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include after=obj_foo in order to fetch the next page of the list."
    name: "after"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A cursor for use in pagination. before is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include before=obj_foo in order to fetch the previous page of the list."
    name: "before"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PageableList<ThreadMessage> listMessages(String threadId, Integer limit, ListSortOrder order, String after, String before)"
  desc: "Gets a list of messages that exist on a thread."
  returns:
    description: "a list of messages that exist on a thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.PageableList?alt=com.azure.ai.openai.assistants.models.PageableList&text=PageableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.assistants.models.ThreadMessage?alt=com.azure.ai.openai.assistants.models.ThreadMessage&text=ThreadMessage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listMessagesWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listMessagesWithResponse(String threadId, RequestOptions requestOptions)"
  name: "listMessagesWithResponse(String threadId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.listMessagesWithResponse(String threadId, RequestOptions requestOptions)"
  summary: "Gets a list of messages that exist on a thread."
  parameters:
  - description: "The ID of the thread to list messages from."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> listMessagesWithResponse(String threadId, RequestOptions requestOptions)"
  desc: "Gets a list of messages that exist on a thread.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                                                                                                                                                                                                                           |\n    | limit  | Integer | No       | A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.                                                                                                                                                                            |\n    | order  | String  | No       | Sort order by the created\\_at timestamp of the objects. asc for ascending order and desc for descending order. Allowed values: \"asc\", \"desc\".                                                                                                                                         |\n    | after  | String  | No       | A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include after=obj\\_foo in order to fetch the next page of the list.       |\n    | before | String  | No       | A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include before=obj\\_foo in order to fetch the previous page of the list. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     object: String (Required)\n     data (Required): [\n          (Required){\n             id: String (Required)\n             object: String (Required)\n             created_at: long (Required)\n             thread_id: String (Required)\n             role: String(user/assistant) (Required)\n             content (Required): [\n                  (Required){\n                 }\n             ]\n             assistant_id: String (Optional)\n             run_id: String (Optional)\n             file_ids (Required): [\n                 String (Required)\n             ]\n             metadata (Required): {\n                 String: String (Required)\n             }\n         }\n     ]\n     first_id: String (Required)\n     last_id: String (Required)\n     has_more: boolean (Required)\n }\n```"
  returns:
    description: "a list of messages that exist on a thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listRunSteps(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listRunSteps(String threadId, String runId)"
  name: "listRunSteps(String threadId, String runId)"
  nameWithType: "AssistantsClient.listRunSteps(String threadId, String runId)"
  summary: "Gets a list of run steps from a thread run."
  parameters:
  - description: "The ID of the thread that was run."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the run to list steps from."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PageableList<RunStep> listRunSteps(String threadId, String runId)"
  desc: "Gets a list of run steps from a thread run."
  returns:
    description: "a list of run steps from a thread run."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.PageableList?alt=com.azure.ai.openai.assistants.models.PageableList&text=PageableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.assistants.models.RunStep?alt=com.azure.ai.openai.assistants.models.RunStep&text=RunStep\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listRunSteps(java.lang.String,java.lang.String,java.lang.Integer,com.azure.ai.openai.assistants.models.ListSortOrder,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listRunSteps(String threadId, String runId, Integer limit, ListSortOrder order, String after, String before)"
  name: "listRunSteps(String threadId, String runId, Integer limit, ListSortOrder order, String after, String before)"
  nameWithType: "AssistantsClient.listRunSteps(String threadId, String runId, Integer limit, ListSortOrder order, String after, String before)"
  summary: "Gets a list of run steps from a thread run."
  parameters:
  - description: "The ID of the thread that was run."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the run to list steps from."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default\n is 20."
    name: "limit"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "Sort order by the created_at timestamp of the objects. asc for ascending order and desc for\n descending order."
    name: "order"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ListSortOrder?alt=com.azure.ai.openai.assistants.models.ListSortOrder&text=ListSortOrder\" data-throw-if-not-resolved=\"False\" />"
  - description: "A cursor for use in pagination. after is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include after=obj_foo in order to fetch the next page of the list."
    name: "after"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A cursor for use in pagination. before is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include before=obj_foo in order to fetch the previous page of the list."
    name: "before"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PageableList<RunStep> listRunSteps(String threadId, String runId, Integer limit, ListSortOrder order, String after, String before)"
  desc: "Gets a list of run steps from a thread run."
  returns:
    description: "a list of run steps from a thread run."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.PageableList?alt=com.azure.ai.openai.assistants.models.PageableList&text=PageableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.assistants.models.RunStep?alt=com.azure.ai.openai.assistants.models.RunStep&text=RunStep\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listRunStepsWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listRunStepsWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  name: "listRunStepsWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.listRunStepsWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  summary: "Gets a list of run steps from a thread run."
  parameters:
  - description: "The ID of the thread that was run."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the run to list steps from."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> listRunStepsWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  desc: "Gets a list of run steps from a thread run.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                                                                                                                                                                                                                           |\n    | limit  | Integer | No       | A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.                                                                                                                                                                            |\n    | order  | String  | No       | Sort order by the created\\_at timestamp of the objects. asc for ascending order and desc for descending order. Allowed values: \"asc\", \"desc\".                                                                                                                                         |\n    | after  | String  | No       | A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include after=obj\\_foo in order to fetch the next page of the list.       |\n    | before | String  | No       | A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include before=obj\\_foo in order to fetch the previous page of the list. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     object: String (Required)\n     data (Required): [\n          (Required){\n             id: String (Required)\n             object: String (Required)\n             type: String(message_creation/tool_calls) (Required)\n             assistant_id: String (Required)\n             thread_id: String (Required)\n             run_id: String (Required)\n             status: String(in_progress/cancelled/failed/completed/expired) (Required)\n             step_details (Required): {\n             }\n             last_error (Required): {\n                 code: String(server_error/rate_limit_exceeded) (Required)\n                 message: String (Required)\n             }\n             created_at: long (Required)\n             expired_at: OffsetDateTime (Required)\n             completed_at: OffsetDateTime (Required)\n             cancelled_at: OffsetDateTime (Required)\n             failed_at: OffsetDateTime (Required)\n             metadata (Required): {\n                 String: String (Required)\n             }\n         }\n     ]\n     first_id: String (Required)\n     last_id: String (Required)\n     has_more: boolean (Required)\n }\n```"
  returns:
    description: "a list of run steps from a thread run along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listRuns(java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listRuns(String threadId)"
  name: "listRuns(String threadId)"
  nameWithType: "AssistantsClient.listRuns(String threadId)"
  summary: "Gets a list of runs for a specified thread."
  parameters:
  - description: "The ID of the thread to list runs from."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PageableList<ThreadRun> listRuns(String threadId)"
  desc: "Gets a list of runs for a specified thread."
  returns:
    description: "a list of runs for a specified thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.PageableList?alt=com.azure.ai.openai.assistants.models.PageableList&text=PageableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.assistants.models.ThreadRun?alt=com.azure.ai.openai.assistants.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listRuns(java.lang.String,java.lang.Integer,com.azure.ai.openai.assistants.models.ListSortOrder,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listRuns(String threadId, Integer limit, ListSortOrder order, String after, String before)"
  name: "listRuns(String threadId, Integer limit, ListSortOrder order, String after, String before)"
  nameWithType: "AssistantsClient.listRuns(String threadId, Integer limit, ListSortOrder order, String after, String before)"
  summary: "Gets a list of runs for a specified thread."
  parameters:
  - description: "The ID of the thread to list runs from."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default\n is 20."
    name: "limit"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "Sort order by the created_at timestamp of the objects. asc for ascending order and desc for\n descending order."
    name: "order"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ListSortOrder?alt=com.azure.ai.openai.assistants.models.ListSortOrder&text=ListSortOrder\" data-throw-if-not-resolved=\"False\" />"
  - description: "A cursor for use in pagination. after is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include after=obj_foo in order to fetch the next page of the list."
    name: "after"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A cursor for use in pagination. before is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include before=obj_foo in order to fetch the previous page of the list."
    name: "before"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PageableList<ThreadRun> listRuns(String threadId, Integer limit, ListSortOrder order, String after, String before)"
  desc: "Gets a list of runs for a specified thread."
  returns:
    description: "a list of runs for a specified thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.PageableList?alt=com.azure.ai.openai.assistants.models.PageableList&text=PageableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.assistants.models.ThreadRun?alt=com.azure.ai.openai.assistants.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.listRunsWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.listRunsWithResponse(String threadId, RequestOptions requestOptions)"
  name: "listRunsWithResponse(String threadId, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.listRunsWithResponse(String threadId, RequestOptions requestOptions)"
  summary: "Gets a list of runs for a specified thread."
  parameters:
  - description: "The ID of the thread to list runs from."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> listRunsWithResponse(String threadId, RequestOptions requestOptions)"
  desc: "Gets a list of runs for a specified thread.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                                                                                                                                                                                                                           |\n    | limit  | Integer | No       | A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.                                                                                                                                                                            |\n    | order  | String  | No       | Sort order by the created\\_at timestamp of the objects. asc for ascending order and desc for descending order. Allowed values: \"asc\", \"desc\".                                                                                                                                         |\n    | after  | String  | No       | A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include after=obj\\_foo in order to fetch the next page of the list.       |\n    | before | String  | No       | A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include before=obj\\_foo in order to fetch the previous page of the list. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     object: String (Required)\n     data (Required): [\n          (Required){\n             id: String (Required)\n             object: String (Required)\n             thread_id: String (Required)\n             assistant_id: String (Required)\n             status: String(queued/in_progress/requires_action/cancelling/cancelled/failed/completed/expired) (Required)\n             required_action (Optional): {\n             }\n             last_error (Required): {\n                 code: String (Required)\n                 message: String (Required)\n             }\n             model: String (Required)\n             instructions: String (Required)\n             tools (Required): [\n                  (Required){\n                 }\n             ]\n             file_ids (Required): [\n                 String (Required)\n             ]\n             created_at: long (Required)\n             expires_at: OffsetDateTime (Required)\n             started_at: OffsetDateTime (Required)\n             completed_at: OffsetDateTime (Required)\n             cancelled_at: OffsetDateTime (Required)\n             failed_at: OffsetDateTime (Required)\n             metadata (Required): {\n                 String: String (Required)\n             }\n         }\n     ]\n     first_id: String (Required)\n     last_id: String (Required)\n     has_more: boolean (Required)\n }\n```"
  returns:
    description: "a list of runs for a specified thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.submitToolOutputsToRun(java.lang.String,java.lang.String,java.util.List<com.azure.ai.openai.assistants.models.ToolOutput>)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.submitToolOutputsToRun(String threadId, String runId, List<ToolOutput> toolOutputs)"
  name: "submitToolOutputsToRun(String threadId, String runId, List<ToolOutput> toolOutputs)"
  nameWithType: "AssistantsClient.submitToolOutputsToRun(String threadId, String runId, List<ToolOutput> toolOutputs)"
  summary: "Submits outputs from tools as requested by tool calls in a run."
  parameters:
  - description: "The ID of the thread that was run."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the run that requires tool outputs."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The list of tool outputs requested by tool calls from the specified run."
    name: "toolOutputs"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.openai.assistants.models.ToolOutput?alt=com.azure.ai.openai.assistants.models.ToolOutput&text=ToolOutput\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ThreadRun submitToolOutputsToRun(String threadId, String runId, List<ToolOutput> toolOutputs)"
  desc: "Submits outputs from tools as requested by tool calls in a run. Runs that need submitted tool outputs will have a status of 'requires\\_action' with a required\\_action.type of 'submit\\_tool\\_outputs'."
  returns:
    description: "data representing a single evaluation run of an assistant thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ThreadRun?alt=com.azure.ai.openai.assistants.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.submitToolOutputsToRunWithResponse(java.lang.String,java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.submitToolOutputsToRunWithResponse(String threadId, String runId, BinaryData request, RequestOptions requestOptions)"
  name: "submitToolOutputsToRunWithResponse(String threadId, String runId, BinaryData request, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.submitToolOutputsToRunWithResponse(String threadId, String runId, BinaryData request, RequestOptions requestOptions)"
  summary: "Submits outputs from tools as requested by tool calls in a run."
  parameters:
  - description: "The ID of the thread that was run."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the run that requires tool outputs."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The request parameter."
    name: "request"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> submitToolOutputsToRunWithResponse(String threadId, String runId, BinaryData request, RequestOptions requestOptions)"
  desc: "Submits outputs from tools as requested by tool calls in a run. Runs that need submitted tool outputs will have a status of 'requires\\_action' with a required\\_action.type of 'submit\\_tool\\_outputs'.\n\n**Request Body Schema**\n\n```java\n{\n     tool_outputs (Required): [\n          (Required){\n             tool_call_id: String (Optional)\n             output: String (Optional)\n         }\n     ]\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     thread_id: String (Required)\n     assistant_id: String (Required)\n     status: String(queued/in_progress/requires_action/cancelling/cancelled/failed/completed/expired) (Required)\n     required_action (Optional): {\n     }\n     last_error (Required): {\n         code: String (Required)\n         message: String (Required)\n     }\n     model: String (Required)\n     instructions: String (Required)\n     tools (Required): [\n          (Required){\n         }\n     ]\n     file_ids (Required): [\n         String (Required)\n     ]\n     created_at: long (Required)\n     expires_at: OffsetDateTime (Required)\n     started_at: OffsetDateTime (Required)\n     completed_at: OffsetDateTime (Required)\n     cancelled_at: OffsetDateTime (Required)\n     failed_at: OffsetDateTime (Required)\n     metadata (Required): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "data representing a single evaluation run of an assistant thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.updateAssistant(java.lang.String,com.azure.ai.openai.assistants.models.UpdateAssistantOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.updateAssistant(String assistantId, UpdateAssistantOptions updateAssistantOptions)"
  name: "updateAssistant(String assistantId, UpdateAssistantOptions updateAssistantOptions)"
  nameWithType: "AssistantsClient.updateAssistant(String assistantId, UpdateAssistantOptions updateAssistantOptions)"
  summary: "Modifies an existing assistant."
  parameters:
  - description: "The ID of the assistant to modify."
    name: "assistantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The request details to use when modifying an existing assistant."
    name: "updateAssistantOptions"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.UpdateAssistantOptions?alt=com.azure.ai.openai.assistants.models.UpdateAssistantOptions&text=UpdateAssistantOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Assistant updateAssistant(String assistantId, UpdateAssistantOptions updateAssistantOptions)"
  desc: "Modifies an existing assistant."
  returns:
    description: "represents an assistant that can call the model and use tools."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.Assistant?alt=com.azure.ai.openai.assistants.models.Assistant&text=Assistant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.updateAssistantWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.updateAssistantWithResponse(String assistantId, BinaryData updateAssistantOptions, RequestOptions requestOptions)"
  name: "updateAssistantWithResponse(String assistantId, BinaryData updateAssistantOptions, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.updateAssistantWithResponse(String assistantId, BinaryData updateAssistantOptions, RequestOptions requestOptions)"
  summary: "Modifies an existing assistant."
  parameters:
  - description: "The ID of the assistant to modify."
    name: "assistantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The request details to use when modifying an existing assistant."
    name: "updateAssistantOptions"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> updateAssistantWithResponse(String assistantId, BinaryData updateAssistantOptions, RequestOptions requestOptions)"
  desc: "Modifies an existing assistant.\n\n**Request Body Schema**\n\n```java\n{\n     model: String (Optional)\n     name: String (Optional)\n     description: String (Optional)\n     instructions: String (Optional)\n     tools (Optional): [\n          (Optional){\n         }\n     ]\n     file_ids (Optional): [\n         String (Optional)\n     ]\n     metadata (Optional): {\n         String: String (Required)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     created_at: long (Required)\n     name: String (Required)\n     description: String (Required)\n     model: String (Required)\n     instructions: String (Required)\n     tools (Required): [\n          (Required){\n         }\n     ]\n     file_ids (Required): [\n         String (Required)\n     ]\n     metadata (Required): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "represents an assistant that can call the model and use tools along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.updateMessage(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.updateMessage(String threadId, String messageId)"
  name: "updateMessage(String threadId, String messageId)"
  nameWithType: "AssistantsClient.updateMessage(String threadId, String messageId)"
  summary: "Modifies an existing message on an existing thread."
  parameters:
  - description: "The ID of the thread containing the specified message to modify."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the message to modify on the specified thread."
    name: "messageId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ThreadMessage updateMessage(String threadId, String messageId)"
  desc: "Modifies an existing message on an existing thread."
  returns:
    description: "a single, existing message within an assistant thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ThreadMessage?alt=com.azure.ai.openai.assistants.models.ThreadMessage&text=ThreadMessage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.updateMessage(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.updateMessage(String threadId, String messageId, Map<String,String> metadata)"
  name: "updateMessage(String threadId, String messageId, Map<String,String> metadata)"
  nameWithType: "AssistantsClient.updateMessage(String threadId, String messageId, Map<String,String> metadata)"
  summary: "Modifies an existing message on an existing thread."
  parameters:
  - description: "The ID of the thread containing the specified message to modify."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the message to modify on the specified thread."
    name: "messageId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A set of up to 16 key/value pairs that can be attached to an object, used for storing additional\n information about that object in a structured format. Keys may be up to 64 characters in length and values may be\n up to 512 characters in length."
    name: "metadata"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public ThreadMessage updateMessage(String threadId, String messageId, Map<String,String> metadata)"
  desc: "Modifies an existing message on an existing thread."
  returns:
    description: "a single, existing message within an assistant thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ThreadMessage?alt=com.azure.ai.openai.assistants.models.ThreadMessage&text=ThreadMessage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.updateMessageWithResponse(java.lang.String,java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.updateMessageWithResponse(String threadId, String messageId, BinaryData request, RequestOptions requestOptions)"
  name: "updateMessageWithResponse(String threadId, String messageId, BinaryData request, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.updateMessageWithResponse(String threadId, String messageId, BinaryData request, RequestOptions requestOptions)"
  summary: "Modifies an existing message on an existing thread."
  parameters:
  - description: "The ID of the thread containing the specified message to modify."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the message to modify on the specified thread."
    name: "messageId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The request parameter."
    name: "request"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> updateMessageWithResponse(String threadId, String messageId, BinaryData request, RequestOptions requestOptions)"
  desc: "Modifies an existing message on an existing thread.\n\n**Request Body Schema**\n\n```java\n{\n     metadata (Optional): {\n         String: String (Required)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     created_at: long (Required)\n     thread_id: String (Required)\n     role: String(user/assistant) (Required)\n     content (Required): [\n          (Required){\n         }\n     ]\n     assistant_id: String (Optional)\n     run_id: String (Optional)\n     file_ids (Required): [\n         String (Required)\n     ]\n     metadata (Required): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "a single, existing message within an assistant thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.updateRun(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.updateRun(String threadId, String runId)"
  name: "updateRun(String threadId, String runId)"
  nameWithType: "AssistantsClient.updateRun(String threadId, String runId)"
  summary: "Modifies an existing thread run."
  parameters:
  - description: "The ID of the thread associated with the specified run."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the run to modify."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ThreadRun updateRun(String threadId, String runId)"
  desc: "Modifies an existing thread run."
  returns:
    description: "data representing a single evaluation run of an assistant thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ThreadRun?alt=com.azure.ai.openai.assistants.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.updateRun(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.updateRun(String threadId, String runId, Map<String,String> metadata)"
  name: "updateRun(String threadId, String runId, Map<String,String> metadata)"
  nameWithType: "AssistantsClient.updateRun(String threadId, String runId, Map<String,String> metadata)"
  summary: "Modifies an existing thread run."
  parameters:
  - description: "The ID of the thread associated with the specified run."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the run to modify."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A set of up to 16 key/value pairs that can be attached to an object, used for storing additional\n information about that object in a structured format. Keys may be up to 64 characters in length and values may be\n up to 512 characters in length."
    name: "metadata"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public ThreadRun updateRun(String threadId, String runId, Map<String,String> metadata)"
  desc: "Modifies an existing thread run."
  returns:
    description: "data representing a single evaluation run of an assistant thread."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.ThreadRun?alt=com.azure.ai.openai.assistants.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.updateRunWithResponse(java.lang.String,java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.updateRunWithResponse(String threadId, String runId, BinaryData request, RequestOptions requestOptions)"
  name: "updateRunWithResponse(String threadId, String runId, BinaryData request, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.updateRunWithResponse(String threadId, String runId, BinaryData request, RequestOptions requestOptions)"
  summary: "Modifies an existing thread run."
  parameters:
  - description: "The ID of the thread associated with the specified run."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the run to modify."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The request parameter."
    name: "request"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> updateRunWithResponse(String threadId, String runId, BinaryData request, RequestOptions requestOptions)"
  desc: "Modifies an existing thread run.\n\n**Request Body Schema**\n\n```java\n{\n     metadata (Optional): {\n         String: String (Required)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     thread_id: String (Required)\n     assistant_id: String (Required)\n     status: String(queued/in_progress/requires_action/cancelling/cancelled/failed/completed/expired) (Required)\n     required_action (Optional): {\n     }\n     last_error (Required): {\n         code: String (Required)\n         message: String (Required)\n     }\n     model: String (Required)\n     instructions: String (Required)\n     tools (Required): [\n          (Required){\n         }\n     ]\n     file_ids (Required): [\n         String (Required)\n     ]\n     created_at: long (Required)\n     expires_at: OffsetDateTime (Required)\n     started_at: OffsetDateTime (Required)\n     completed_at: OffsetDateTime (Required)\n     cancelled_at: OffsetDateTime (Required)\n     failed_at: OffsetDateTime (Required)\n     metadata (Required): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "data representing a single evaluation run of an assistant thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.updateThread(java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.updateThread(String threadId)"
  name: "updateThread(String threadId)"
  nameWithType: "AssistantsClient.updateThread(String threadId)"
  summary: "Modifies an existing thread."
  parameters:
  - description: "The ID of the thread to modify."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AssistantThread updateThread(String threadId)"
  desc: "Modifies an existing thread."
  returns:
    description: "information about a single thread associated with an assistant."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.AssistantThread?alt=com.azure.ai.openai.assistants.models.AssistantThread&text=AssistantThread\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.updateThread(java.lang.String,java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.updateThread(String threadId, Map<String,String> metadata)"
  name: "updateThread(String threadId, Map<String,String> metadata)"
  nameWithType: "AssistantsClient.updateThread(String threadId, Map<String,String> metadata)"
  summary: "Modifies an existing thread."
  parameters:
  - description: "The ID of the thread to modify."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A set of up to 16 key/value pairs that can be attached to an object, used for storing additional\n information about that object in a structured format. Keys may be up to 64 characters in length and values may be\n up to 512 characters in length."
    name: "metadata"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public AssistantThread updateThread(String threadId, Map<String,String> metadata)"
  desc: "Modifies an existing thread."
  returns:
    description: "information about a single thread associated with an assistant."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.AssistantThread?alt=com.azure.ai.openai.assistants.models.AssistantThread&text=AssistantThread\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.updateThreadWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.updateThreadWithResponse(String threadId, BinaryData request, RequestOptions requestOptions)"
  name: "updateThreadWithResponse(String threadId, BinaryData request, RequestOptions requestOptions)"
  nameWithType: "AssistantsClient.updateThreadWithResponse(String threadId, BinaryData request, RequestOptions requestOptions)"
  summary: "Modifies an existing thread."
  parameters:
  - description: "The ID of the thread to modify."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The request parameter."
    name: "request"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> updateThreadWithResponse(String threadId, BinaryData request, RequestOptions requestOptions)"
  desc: "Modifies an existing thread.\n\n**Request Body Schema**\n\n```java\n{\n     metadata (Optional): {\n         String: String (Required)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     created_at: long (Required)\n     metadata (Required): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "information about a single thread associated with an assistant along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.uploadFile(com.azure.ai.openai.assistants.models.FileDetails,com.azure.ai.openai.assistants.models.FilePurpose)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.uploadFile(FileDetails file, FilePurpose purpose)"
  name: "uploadFile(FileDetails file, FilePurpose purpose)"
  nameWithType: "AssistantsClient.uploadFile(FileDetails file, FilePurpose purpose)"
  summary: "Uploads a file for use by other operations."
  parameters:
  - description: "The file data (not filename) to upload."
    name: "file"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.FileDetails?alt=com.azure.ai.openai.assistants.models.FileDetails&text=FileDetails\" data-throw-if-not-resolved=\"False\" />"
  - description: "The intended purpose of the file."
    name: "purpose"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.FilePurpose?alt=com.azure.ai.openai.assistants.models.FilePurpose&text=FilePurpose\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OpenAIFile uploadFile(FileDetails file, FilePurpose purpose)"
  desc: "Uploads a file for use by other operations."
  returns:
    description: "represents an assistant that can call the model and use tools."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.OpenAIFile?alt=com.azure.ai.openai.assistants.models.OpenAIFile&text=OpenAIFile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.assistants.AssistantsClient.uploadFile(com.azure.ai.openai.assistants.models.FileDetails,com.azure.ai.openai.assistants.models.FilePurpose,java.lang.String)"
  fullName: "com.azure.ai.openai.assistants.AssistantsClient.uploadFile(FileDetails file, FilePurpose purpose, String filename)"
  name: "uploadFile(FileDetails file, FilePurpose purpose, String filename)"
  nameWithType: "AssistantsClient.uploadFile(FileDetails file, FilePurpose purpose, String filename)"
  summary: "Uploads a file for use by other operations."
  parameters:
  - description: "The file data (not filename) to upload."
    name: "file"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.FileDetails?alt=com.azure.ai.openai.assistants.models.FileDetails&text=FileDetails\" data-throw-if-not-resolved=\"False\" />"
  - description: "The intended purpose of the file."
    name: "purpose"
    type: "<xref href=\"com.azure.ai.openai.assistants.models.FilePurpose?alt=com.azure.ai.openai.assistants.models.FilePurpose&text=FilePurpose\" data-throw-if-not-resolved=\"False\" />"
  - description: "A filename to associate with the uploaded data."
    name: "filename"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public OpenAIFile uploadFile(FileDetails file, FilePurpose purpose, String filename)"
  desc: "Uploads a file for use by other operations."
  returns:
    description: "represents an assistant that can call the model and use tools."
    type: "<xref href=\"com.azure.ai.openai.assistants.models.OpenAIFile?alt=com.azure.ai.openai.assistants.models.OpenAIFile&text=OpenAIFile\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Initializes a new instance of the synchronous AssistantsClient type."
metadata: {}
package: "com.azure.ai.openai.assistants"
artifact: com.azure:azure-ai-openai-assistants:1.0.0-beta.2
