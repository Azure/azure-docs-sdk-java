### YamlMime:JavaMember
uid: "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.findIgnoredForSerialization*"
fullName: "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.findIgnoredForSerialization"
name: "findIgnoredForSerialization"
nameWithType: "JsonIgnoreProperties.Value.findIgnoredForSerialization"
members:
- uid: "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.findIgnoredForSerialization()"
  fullName: "com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.findIgnoredForSerialization()"
  name: "findIgnoredForSerialization()"
  nameWithType: "JsonIgnoreProperties.Value.findIgnoredForSerialization()"
  summary: "Method called to find names of properties to ignore when used for serialization: functionally same as <xref uid=\"com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.getIgnored*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getIgnored\"></xref> if <xref uid=\"com.fasterxml.jackson.annotation.JsonIgnoreProperties.Value.getAllowGetters()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getAllowGetters()\"></xref> is false (that is, there is \"allowGetters=false\" or equivalent), otherwise returns empty <xref uid=\"java.util.Set\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Set\"></xref>."
  syntax: "public Set<String> findIgnoredForSerialization()"
  returns:
    type: "<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
