### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.annotation.NoClass
  id: NoClass
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.annotation
  langs:
  - java
  name: NoClass
  nameWithType: NoClass
  fullName: com.fasterxml.jackson.databind.annotation.NoClass
  type: Class
  package: com.fasterxml.jackson.databind.annotation
  summary: >-
    Marker class used with annotations to indicate "no class". This is a silly but necessary work-around -- annotations cannot take nulls as either default or explicit values. Hence for class values we must explicitly use a bogus placeholder to denote equivalent of "no class" (for which 'null' is usually the natural choice).


    Note that since 2.4, most (but not all! <xref uid="com.fasterxml.jackson.annotation.JsonTypeInfo.defaultImpl" data-throw-if-not-resolved="false">com.fasterxml.jackson.annotation.JsonTypeInfo#defaultImpl</xref> is a notable exception\}) usage should start using <xref uid="java.lang.Void" data-throw-if-not-resolved="false">java.lang.Void</xref> instead as the "not defined" marker.
  syntax:
    content: public final class NoClass
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.annotation.NoClass.NoClass()
  id: NoClass()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.annotation.NoClass
  langs:
  - java
  name: NoClass()
  nameWithType: NoClass.NoClass()
  fullName: com.fasterxml.jackson.databind.annotation.NoClass.NoClass()
  overload: com.fasterxml.jackson.databind.annotation.NoClass.NoClass*
  type: Constructor
  package: com.fasterxml.jackson.databind.annotation
  syntax:
    content: private NoClass()
references:
- uid: com.fasterxml.jackson.databind.annotation.NoClass.NoClass*
  name: NoClass
  nameWithType: NoClass.NoClass
  fullName: com.fasterxml.jackson.databind.annotation.NoClass.NoClass
  package: com.fasterxml.jackson.databind.annotation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
