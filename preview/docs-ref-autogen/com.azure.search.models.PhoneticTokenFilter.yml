### YamlMime:ManagedReference
items:
- uid: "com.azure.search.models.PhoneticTokenFilter"
  id: "PhoneticTokenFilter"
  parent: "com.azure.search.models"
  children:
  - "com.azure.search.models.PhoneticTokenFilter.PhoneticTokenFilter()"
  - "com.azure.search.models.PhoneticTokenFilter.getEncoder()"
  - "com.azure.search.models.PhoneticTokenFilter.isReplaceOriginalTokens()"
  - "com.azure.search.models.PhoneticTokenFilter.setEncoder(com.azure.search.models.PhoneticEncoder)"
  - "com.azure.search.models.PhoneticTokenFilter.setReplaceOriginalTokens(java.lang.Boolean)"
  langs:
  - "java"
  name: "PhoneticTokenFilter"
  nameWithType: "PhoneticTokenFilter"
  fullName: "com.azure.search.models.PhoneticTokenFilter"
  type: "Class"
  package: "com.azure.search.models"
  summary: "Create tokens for phonetic matches. This token filter is implemented using Apache Lucene."
  syntax:
    content: "public final class PhoneticTokenFilter extends TokenFilter"
  inheritance:
  - "java.lang.Object"
  - "com.azure.search.models.TokenFilter"
  inheritedMembers:
  - "com.azure.search.models.TokenFilter.getName()"
  - "com.azure.search.models.TokenFilter.setName(java.lang.String)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.search.models.PhoneticTokenFilter.PhoneticTokenFilter()"
  id: "PhoneticTokenFilter()"
  parent: "com.azure.search.models.PhoneticTokenFilter"
  langs:
  - "java"
  name: "PhoneticTokenFilter()"
  nameWithType: "PhoneticTokenFilter.PhoneticTokenFilter()"
  fullName: "com.azure.search.models.PhoneticTokenFilter.PhoneticTokenFilter()"
  overload: "com.azure.search.models.PhoneticTokenFilter.PhoneticTokenFilter*"
  type: "Constructor"
  package: "com.azure.search.models"
  syntax:
    content: "public PhoneticTokenFilter()"
- uid: "com.azure.search.models.PhoneticTokenFilter.getEncoder()"
  id: "getEncoder()"
  parent: "com.azure.search.models.PhoneticTokenFilter"
  langs:
  - "java"
  name: "getEncoder()"
  nameWithType: "PhoneticTokenFilter.getEncoder()"
  fullName: "com.azure.search.models.PhoneticTokenFilter.getEncoder()"
  overload: "com.azure.search.models.PhoneticTokenFilter.getEncoder*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Get the encoder property: The phonetic encoder to use. Default is \"metaphone\". Possible values include: 'metaphone', 'doubleMetaphone', 'soundex', 'refinedSoundex', 'caverphone1', 'caverphone2', 'cologne', 'nysiis', 'koelnerPhonetik', 'haasePhonetik', 'beiderMorse'."
  syntax:
    content: "public PhoneticEncoder getEncoder()"
    return:
      type: "com.azure.search.models.PhoneticEncoder"
      description: "the encoder value."
- uid: "com.azure.search.models.PhoneticTokenFilter.isReplaceOriginalTokens()"
  id: "isReplaceOriginalTokens()"
  parent: "com.azure.search.models.PhoneticTokenFilter"
  langs:
  - "java"
  name: "isReplaceOriginalTokens()"
  nameWithType: "PhoneticTokenFilter.isReplaceOriginalTokens()"
  fullName: "com.azure.search.models.PhoneticTokenFilter.isReplaceOriginalTokens()"
  overload: "com.azure.search.models.PhoneticTokenFilter.isReplaceOriginalTokens*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Get the replaceOriginalTokens property: A value indicating whether encoded tokens should replace original tokens. If false, encoded tokens are added as synonyms. Default is true."
  syntax:
    content: "public Boolean isReplaceOriginalTokens()"
    return:
      type: "java.lang.Boolean"
      description: "the replaceOriginalTokens value."
- uid: "com.azure.search.models.PhoneticTokenFilter.setEncoder(com.azure.search.models.PhoneticEncoder)"
  id: "setEncoder(com.azure.search.models.PhoneticEncoder)"
  parent: "com.azure.search.models.PhoneticTokenFilter"
  langs:
  - "java"
  name: "setEncoder(PhoneticEncoder encoder)"
  nameWithType: "PhoneticTokenFilter.setEncoder(PhoneticEncoder encoder)"
  fullName: "com.azure.search.models.PhoneticTokenFilter.setEncoder(PhoneticEncoder encoder)"
  overload: "com.azure.search.models.PhoneticTokenFilter.setEncoder*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Set the encoder property: The phonetic encoder to use. Default is \"metaphone\". Possible values include: 'metaphone', 'doubleMetaphone', 'soundex', 'refinedSoundex', 'caverphone1', 'caverphone2', 'cologne', 'nysiis', 'koelnerPhonetik', 'haasePhonetik', 'beiderMorse'."
  syntax:
    content: "public PhoneticTokenFilter setEncoder(PhoneticEncoder encoder)"
    parameters:
    - id: "encoder"
      type: "com.azure.search.models.PhoneticEncoder"
      description: "the encoder value to set."
    return:
      type: "com.azure.search.models.PhoneticTokenFilter"
      description: "the PhoneticTokenFilter object itself."
- uid: "com.azure.search.models.PhoneticTokenFilter.setReplaceOriginalTokens(java.lang.Boolean)"
  id: "setReplaceOriginalTokens(java.lang.Boolean)"
  parent: "com.azure.search.models.PhoneticTokenFilter"
  langs:
  - "java"
  name: "setReplaceOriginalTokens(Boolean replaceOriginalTokens)"
  nameWithType: "PhoneticTokenFilter.setReplaceOriginalTokens(Boolean replaceOriginalTokens)"
  fullName: "com.azure.search.models.PhoneticTokenFilter.setReplaceOriginalTokens(Boolean replaceOriginalTokens)"
  overload: "com.azure.search.models.PhoneticTokenFilter.setReplaceOriginalTokens*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Set the replaceOriginalTokens property: A value indicating whether encoded tokens should replace original tokens. If false, encoded tokens are added as synonyms. Default is true."
  syntax:
    content: "public PhoneticTokenFilter setReplaceOriginalTokens(Boolean replaceOriginalTokens)"
    parameters:
    - id: "replaceOriginalTokens"
      type: "java.lang.Boolean"
      description: "the replaceOriginalTokens value to set."
    return:
      type: "com.azure.search.models.PhoneticTokenFilter"
      description: "the PhoneticTokenFilter object itself."
references:
- uid: "com.azure.search.models.PhoneticTokenFilter.PhoneticTokenFilter*"
  name: "PhoneticTokenFilter"
  nameWithType: "PhoneticTokenFilter.PhoneticTokenFilter"
  fullName: "com.azure.search.models.PhoneticTokenFilter.PhoneticTokenFilter"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.PhoneticEncoder"
  name: "PhoneticEncoder"
  nameWithType: "PhoneticEncoder"
  fullName: "com.azure.search.models.PhoneticEncoder"
- uid: "com.azure.search.models.PhoneticTokenFilter.getEncoder*"
  name: "getEncoder"
  nameWithType: "PhoneticTokenFilter.getEncoder"
  fullName: "com.azure.search.models.PhoneticTokenFilter.getEncoder"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.PhoneticTokenFilter.setEncoder*"
  name: "setEncoder"
  nameWithType: "PhoneticTokenFilter.setEncoder"
  fullName: "com.azure.search.models.PhoneticTokenFilter.setEncoder"
  package: "com.azure.search.models"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.azure.search.models.PhoneticTokenFilter.isReplaceOriginalTokens*"
  name: "isReplaceOriginalTokens"
  nameWithType: "PhoneticTokenFilter.isReplaceOriginalTokens"
  fullName: "com.azure.search.models.PhoneticTokenFilter.isReplaceOriginalTokens"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.PhoneticTokenFilter.setReplaceOriginalTokens*"
  name: "setReplaceOriginalTokens"
  nameWithType: "PhoneticTokenFilter.setReplaceOriginalTokens"
  fullName: "com.azure.search.models.PhoneticTokenFilter.setReplaceOriginalTokens"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.TokenFilter"
  name: "TokenFilter"
  nameWithType: "TokenFilter"
  fullName: "com.azure.search.models.TokenFilter"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.azure.search.models.TokenFilter.getName()"
  name: "TokenFilter.getName()"
  nameWithType: "TokenFilter.getName()"
  fullName: "com.azure.search.models.TokenFilter.getName()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.azure.search.models.TokenFilter.setName(java.lang.String)"
  name: "TokenFilter.setName(String)"
  nameWithType: "TokenFilter.setName(String)"
  fullName: "com.azure.search.models.TokenFilter.setName(java.lang.String)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
