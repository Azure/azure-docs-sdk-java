### YamlMime:JavaType
uid: "com.azure.storage.blob.BlobClient"
fullName: "com.azure.storage.blob.BlobClient"
name: "BlobClient"
nameWithType: "BlobClient"
summary: "This class provides a client that contains generic blob operations for Azure Storage Blobs."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase?alt=com.azure.storage.blob.specialized.BlobClientBase&text=BlobClientBase\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl(java.lang.String)?alt=com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl&text=abortCopyFromUrl\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse&text=abortCopyFromUrlWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.beginCopy(com.azure.storage.blob.options.BlobBeginCopyOptions)?alt=com.azure.storage.blob.specialized.BlobClientBase.beginCopy&text=beginCopy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.time.Duration)?alt=com.azure.storage.blob.specialized.BlobClientBase.beginCopy&text=beginCopy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)?alt=com.azure.storage.blob.specialized.BlobClientBase.beginCopy&text=beginCopy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl(java.lang.String)?alt=com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl&text=copyFromUrl\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(com.azure.storage.blob.options.BlobCopyFromUrlOptions,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse&text=copyFromUrlWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse&text=copyFromUrlWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.createSnapshot()?alt=com.azure.storage.blob.specialized.BlobClientBase.createSnapshot&text=createSnapshot\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse&text=createSnapshotWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.delete()?alt=com.azure.storage.blob.specialized.BlobClientBase.delete&text=delete\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.deleteIfExists()?alt=com.azure.storage.blob.specialized.BlobClientBase.deleteIfExists&text=deleteIfExists\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.deleteIfExistsWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.deleteIfExistsWithResponse&text=deleteIfExistsWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.deleteImmutabilityPolicy()?alt=com.azure.storage.blob.specialized.BlobClientBase.deleteImmutabilityPolicy&text=deleteImmutabilityPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.deleteImmutabilityPolicyWithResponse(java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.deleteImmutabilityPolicyWithResponse&text=deleteImmutabilityPolicyWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse&text=deleteWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.download(java.io.OutputStream)?alt=com.azure.storage.blob.specialized.BlobClientBase.download&text=download\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.downloadContent()?alt=com.azure.storage.blob.specialized.BlobClientBase.downloadContent&text=downloadContent\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.downloadContentWithResponse(com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.downloadContentWithResponse&text=downloadContentWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.downloadStream(java.io.OutputStream)?alt=com.azure.storage.blob.specialized.BlobClientBase.downloadStream&text=downloadStream\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.downloadStreamWithResponse(java.io.OutputStream,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.downloadStreamWithResponse&text=downloadStreamWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String)?alt=com.azure.storage.blob.specialized.BlobClientBase.downloadToFile&text=downloadToFile\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String,boolean)?alt=com.azure.storage.blob.specialized.BlobClientBase.downloadToFile&text=downloadToFile\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(com.azure.storage.blob.options.BlobDownloadToFileOptions,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse&text=downloadToFileWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse&text=downloadToFileWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set<java.nio.file.OpenOption>,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse&text=downloadToFileWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse(java.io.OutputStream,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse&text=downloadWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.exists()?alt=com.azure.storage.blob.specialized.BlobClientBase.exists&text=exists\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse(java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse&text=existsWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.generateSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues)?alt=com.azure.storage.blob.specialized.BlobClientBase.generateSas&text=generateSas\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.generateSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.generateSas&text=generateSas\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.storage.blob.models.UserDelegationKey)?alt=com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas&text=generateUserDelegationSas\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.storage.blob.models.UserDelegationKey,java.lang.String,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas&text=generateUserDelegationSas\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo()?alt=com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo&text=getAccountInfo\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse&text=getAccountInfoWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getAccountName()?alt=com.azure.storage.blob.specialized.BlobClientBase.getAccountName&text=getAccountName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getAccountUrl()?alt=com.azure.storage.blob.specialized.BlobClientBase.getAccountUrl&text=getAccountUrl\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getBlobName()?alt=com.azure.storage.blob.specialized.BlobClientBase.getBlobName&text=getBlobName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl()?alt=com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl&text=getBlobUrl\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getContainerClient()?alt=com.azure.storage.blob.specialized.BlobClientBase.getContainerClient&text=getContainerClient\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getContainerName()?alt=com.azure.storage.blob.specialized.BlobClientBase.getContainerName&text=getContainerName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey()?alt=com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey&text=getCustomerProvidedKey\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKeyClient(com.azure.storage.blob.models.CustomerProvidedKey)?alt=com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKeyClient&text=getCustomerProvidedKeyClient\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getEncryptionScopeClient(java.lang.String)?alt=com.azure.storage.blob.specialized.BlobClientBase.getEncryptionScopeClient&text=getEncryptionScopeClient\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline()?alt=com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline&text=getHttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getProperties()?alt=com.azure.storage.blob.specialized.BlobClientBase.getProperties&text=getProperties\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse(com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse&text=getPropertiesWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion()?alt=com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion&text=getServiceVersion\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient(java.lang.String)?alt=com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient&text=getSnapshotClient\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()?alt=com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId&text=getSnapshotId\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getTags()?alt=com.azure.storage.blob.specialized.BlobClientBase.getTags&text=getTags\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getTagsWithResponse(com.azure.storage.blob.options.BlobGetTagsOptions,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.getTagsWithResponse&text=getTagsWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getVersionClient(java.lang.String)?alt=com.azure.storage.blob.specialized.BlobClientBase.getVersionClient&text=getVersionClient\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.getVersionId()?alt=com.azure.storage.blob.specialized.BlobClientBase.getVersionId&text=getVersionId\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.isSnapshot()?alt=com.azure.storage.blob.specialized.BlobClientBase.isSnapshot&text=isSnapshot\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.openInputStream()?alt=com.azure.storage.blob.specialized.BlobClientBase.openInputStream&text=openInputStream\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions)?alt=com.azure.storage.blob.specialized.BlobClientBase.openInputStream&text=openInputStream\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.options.BlobInputStreamOptions)?alt=com.azure.storage.blob.specialized.BlobClientBase.openInputStream&text=openInputStream\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.options.BlobInputStreamOptions,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.openInputStream&text=openInputStream\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStream(java.lang.String)?alt=com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStream&text=openQueryInputStream\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStreamWithResponse(com.azure.storage.blob.options.BlobQueryOptions)?alt=com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStreamWithResponse&text=openQueryInputStreamWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.query(java.io.OutputStream,java.lang.String)?alt=com.azure.storage.blob.specialized.BlobClientBase.query&text=query\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.queryWithResponse(com.azure.storage.blob.options.BlobQueryOptions,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.queryWithResponse&text=queryWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.setAccessTier(com.azure.storage.blob.models.AccessTier)?alt=com.azure.storage.blob.specialized.BlobClientBase.setAccessTier&text=setAccessTier\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse&text=setAccessTierWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(com.azure.storage.blob.options.BlobSetAccessTierOptions,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse&text=setAccessTierWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)?alt=com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders&text=setHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse&text=setHttpHeadersWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.setImmutabilityPolicy(com.azure.storage.blob.models.BlobImmutabilityPolicy)?alt=com.azure.storage.blob.specialized.BlobClientBase.setImmutabilityPolicy&text=setImmutabilityPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.setImmutabilityPolicyWithResponse(com.azure.storage.blob.models.BlobImmutabilityPolicy,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.setImmutabilityPolicyWithResponse&text=setImmutabilityPolicyWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.setLegalHold(boolean)?alt=com.azure.storage.blob.specialized.BlobClientBase.setLegalHold&text=setLegalHold\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.setLegalHoldWithResponse(boolean,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.setLegalHoldWithResponse&text=setLegalHoldWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map<java.lang.String,java.lang.String>)?alt=com.azure.storage.blob.specialized.BlobClientBase.setMetadata&text=setMetadata\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse&text=setMetadataWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.setTags(java.util.Map<java.lang.String,java.lang.String>)?alt=com.azure.storage.blob.specialized.BlobClientBase.setTags&text=setTags\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.setTagsWithResponse(com.azure.storage.blob.options.BlobSetTagsOptions,java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.setTagsWithResponse&text=setTagsWithResponse\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.undelete()?alt=com.azure.storage.blob.specialized.BlobClientBase.undelete&text=undelete\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse(java.time.Duration,com.azure.core.util.Context)?alt=com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse&text=undeleteWithResponse\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **BlobClient**</br> extends <xref href=\"com.azure.storage.blob.specialized.BlobClientBase?alt=com.azure.storage.blob.specialized.BlobClientBase&text=BlobClientBase\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.storage.blob.BlobClient.BlobClient(com.azure.storage.blob.BlobAsyncClient)"
  fullName: "com.azure.storage.blob.BlobClient.BlobClient(BlobAsyncClient client)"
  name: "BlobClient(BlobAsyncClient client)"
  nameWithType: "BlobClient.BlobClient(BlobAsyncClient client)"
  summary: "Protected constructor for use by <xref uid=\"com.azure.storage.blob.BlobClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBuilder\"></xref>."
  modifiers:
  - "protected"
  parameters:
  - description: "the async blob client"
    name: "client"
    type: "<xref href=\"com.azure.storage.blob.BlobAsyncClient?alt=com.azure.storage.blob.BlobAsyncClient&text=BlobAsyncClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected BlobClient(BlobAsyncClient client)"
  desc: "Protected constructor for use by <xref uid=\"com.azure.storage.blob.BlobClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBuilder\"></xref>."
fields:
- uid: "com.azure.storage.blob.BlobClient.BLOB_DEFAULT_HTBB_UPLOAD_BLOCK_SIZE"
  fullName: "com.azure.storage.blob.BlobClient.BLOB_DEFAULT_HTBB_UPLOAD_BLOCK_SIZE"
  name: "BLOB_DEFAULT_HTBB_UPLOAD_BLOCK_SIZE"
  nameWithType: "BlobClient.BLOB_DEFAULT_HTBB_UPLOAD_BLOCK_SIZE"
  summary: "If a blob is known to be greater than 100MB, using a larger block size will trigger some server-side optimizations."
  modifiers:
  - "static"
  - "final"
  field:
    value: "8388608"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final int BLOB_DEFAULT_HTBB_UPLOAD_BLOCK_SIZE"
  desc: "If a blob is known to be greater than 100MB, using a larger block size will trigger some server-side optimizations. If the block size is not set and the size of the blob is known to be greater than 100MB, this value will be used."
- uid: "com.azure.storage.blob.BlobClient.BLOB_DEFAULT_NUMBER_OF_BUFFERS"
  fullName: "com.azure.storage.blob.BlobClient.BLOB_DEFAULT_NUMBER_OF_BUFFERS"
  name: "BLOB_DEFAULT_NUMBER_OF_BUFFERS"
  nameWithType: "BlobClient.BLOB_DEFAULT_NUMBER_OF_BUFFERS"
  summary: "The number of buffers to use if none is specied on the buffered upload method."
  modifiers:
  - "static"
  - "final"
  field:
    value: "8"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final int BLOB_DEFAULT_NUMBER_OF_BUFFERS"
  desc: "The number of buffers to use if none is specied on the buffered upload method."
- uid: "com.azure.storage.blob.BlobClient.BLOB_DEFAULT_UPLOAD_BLOCK_SIZE"
  fullName: "com.azure.storage.blob.BlobClient.BLOB_DEFAULT_UPLOAD_BLOCK_SIZE"
  name: "BLOB_DEFAULT_UPLOAD_BLOCK_SIZE"
  nameWithType: "BlobClient.BLOB_DEFAULT_UPLOAD_BLOCK_SIZE"
  summary: "The block size to use if none is specified in parallel operations."
  modifiers:
  - "static"
  - "final"
  field:
    value: "4194304"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final int BLOB_DEFAULT_UPLOAD_BLOCK_SIZE"
  desc: "The block size to use if none is specified in parallel operations."
methods:
- uid: "com.azure.storage.blob.BlobClient.getAppendBlobClient()"
  fullName: "com.azure.storage.blob.BlobClient.getAppendBlobClient()"
  name: "getAppendBlobClient()"
  nameWithType: "BlobClient.getAppendBlobClient()"
  summary: "Creates a new <xref uid=\"com.azure.storage.blob.specialized.AppendBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AppendBlobClient\"></xref> associated with this blob."
  syntax: "public AppendBlobClient getAppendBlobClient()"
  desc: "Creates a new <xref uid=\"com.azure.storage.blob.specialized.AppendBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AppendBlobClient\"></xref> associated with this blob."
  returns:
    description: "A <xref uid=\"com.azure.storage.blob.specialized.AppendBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AppendBlobClient\"></xref> associated with this blob."
    type: "<xref href=\"com.azure.storage.blob.specialized.AppendBlobClient?alt=com.azure.storage.blob.specialized.AppendBlobClient&text=AppendBlobClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.BlobClient.getBlockBlobClient()"
  fullName: "com.azure.storage.blob.BlobClient.getBlockBlobClient()"
  name: "getBlockBlobClient()"
  nameWithType: "BlobClient.getBlockBlobClient()"
  summary: "Creates a new <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlockBlobClient\"></xref> associated with this blob."
  syntax: "public BlockBlobClient getBlockBlobClient()"
  desc: "Creates a new <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlockBlobClient\"></xref> associated with this blob."
  returns:
    description: "A <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlockBlobClient\"></xref> associated with this blob."
    type: "<xref href=\"com.azure.storage.blob.specialized.BlockBlobClient?alt=com.azure.storage.blob.specialized.BlockBlobClient&text=BlockBlobClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.BlobClient.getCustomerProvidedKeyClient(com.azure.storage.blob.models.CustomerProvidedKey)"
  fullName: "com.azure.storage.blob.BlobClient.getCustomerProvidedKeyClient(CustomerProvidedKey customerProvidedKey)"
  name: "getCustomerProvidedKeyClient(CustomerProvidedKey customerProvidedKey)"
  nameWithType: "BlobClient.getCustomerProvidedKeyClient(CustomerProvidedKey customerProvidedKey)"
  summary: "Creates a new <xref uid=\"com.azure.storage.blob.BlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClient\"></xref> with the specified `customerProvidedKey`."
  overridden: "com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKeyClient(com.azure.storage.blob.models.CustomerProvidedKey)"
  parameters:
  - description: "the <xref uid=\"com.azure.storage.blob.models.CustomerProvidedKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CustomerProvidedKey\"></xref> for the blob,\n pass <code>null</code> to use no customer provided key."
    name: "customerProvidedKey"
    type: "<xref href=\"com.azure.storage.blob.models.CustomerProvidedKey?alt=com.azure.storage.blob.models.CustomerProvidedKey&text=CustomerProvidedKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobClient getCustomerProvidedKeyClient(CustomerProvidedKey customerProvidedKey)"
  desc: "Creates a new <xref uid=\"com.azure.storage.blob.BlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClient\"></xref> with the specified `customerProvidedKey`."
  returns:
    description: "a <xref uid=\"com.azure.storage.blob.BlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClient\"></xref> with the specified <code>customerProvidedKey</code>."
    type: "<xref href=\"com.azure.storage.blob.BlobClient?alt=com.azure.storage.blob.BlobClient&text=BlobClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.BlobClient.getEncryptionScopeClient(java.lang.String)"
  fullName: "com.azure.storage.blob.BlobClient.getEncryptionScopeClient(String encryptionScope)"
  name: "getEncryptionScopeClient(String encryptionScope)"
  nameWithType: "BlobClient.getEncryptionScopeClient(String encryptionScope)"
  summary: "Creates a new <xref uid=\"com.azure.storage.blob.BlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClient\"></xref> with the specified `encryptionScope`."
  overridden: "com.azure.storage.blob.specialized.BlobClientBase.getEncryptionScopeClient(java.lang.String)"
  parameters:
  - description: "the encryption scope for the blob, pass <code>null</code> to use no encryption scope."
    name: "encryptionScope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public BlobClient getEncryptionScopeClient(String encryptionScope)"
  desc: "Creates a new <xref uid=\"com.azure.storage.blob.BlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClient\"></xref> with the specified `encryptionScope`."
  returns:
    description: "a <xref uid=\"com.azure.storage.blob.BlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClient\"></xref> with the specified <code>encryptionScope</code>."
    type: "<xref href=\"com.azure.storage.blob.BlobClient?alt=com.azure.storage.blob.BlobClient&text=BlobClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.BlobClient.getPageBlobClient()"
  fullName: "com.azure.storage.blob.BlobClient.getPageBlobClient()"
  name: "getPageBlobClient()"
  nameWithType: "BlobClient.getPageBlobClient()"
  summary: "Creates a new <xref uid=\"com.azure.storage.blob.specialized.PageBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PageBlobClient\"></xref> associated with this blob."
  syntax: "public PageBlobClient getPageBlobClient()"
  desc: "Creates a new <xref uid=\"com.azure.storage.blob.specialized.PageBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PageBlobClient\"></xref> associated with this blob."
  returns:
    description: "A <xref uid=\"com.azure.storage.blob.specialized.PageBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PageBlobClient\"></xref> associated with this blob."
    type: "<xref href=\"com.azure.storage.blob.specialized.PageBlobClient?alt=com.azure.storage.blob.specialized.PageBlobClient&text=PageBlobClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.BlobClient.getSnapshotClient(java.lang.String)"
  fullName: "com.azure.storage.blob.BlobClient.getSnapshotClient(String snapshot)"
  name: "getSnapshotClient(String snapshot)"
  nameWithType: "BlobClient.getSnapshotClient(String snapshot)"
  summary: "Creates a new <xref uid=\"com.azure.storage.blob.BlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClient\"></xref> linked to the `snapshot` of this blob resource."
  overridden: "com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient(java.lang.String)"
  parameters:
  - description: "the identifier for a specific snapshot of this blob"
    name: "snapshot"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public BlobClient getSnapshotClient(String snapshot)"
  desc: "Creates a new <xref uid=\"com.azure.storage.blob.BlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClient\"></xref> linked to the `snapshot` of this blob resource."
  returns:
    description: "A <xref uid=\"com.azure.storage.blob.BlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClient\"></xref> used to interact with the specific snapshot."
    type: "<xref href=\"com.azure.storage.blob.BlobClient?alt=com.azure.storage.blob.BlobClient&text=BlobClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.BlobClient.getVersionClient(java.lang.String)"
  fullName: "com.azure.storage.blob.BlobClient.getVersionClient(String versionId)"
  name: "getVersionClient(String versionId)"
  nameWithType: "BlobClient.getVersionClient(String versionId)"
  summary: "Creates a new <xref uid=\"com.azure.storage.blob.BlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClient\"></xref> linked to the `version` of this blob resource."
  overridden: "com.azure.storage.blob.specialized.BlobClientBase.getVersionClient(java.lang.String)"
  parameters:
  - description: "the identifier for a specific version of this blob,\n pass <code>null</code> to interact with the latest blob version."
    name: "versionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public BlobClient getVersionClient(String versionId)"
  desc: "Creates a new <xref uid=\"com.azure.storage.blob.BlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClient\"></xref> linked to the `version` of this blob resource."
  returns:
    description: "A <xref uid=\"com.azure.storage.blob.BlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClient\"></xref> used to interact with the specific version."
    type: "<xref href=\"com.azure.storage.blob.BlobClient?alt=com.azure.storage.blob.BlobClient&text=BlobClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.BlobClient.upload(com.azure.core.util.BinaryData)"
  fullName: "com.azure.storage.blob.BlobClient.upload(BinaryData data)"
  name: "upload(BinaryData data)"
  nameWithType: "BlobClient.upload(BinaryData data)"
  summary: "Creates a new blob."
  parameters:
  - description: "The data to write to the blob."
    name: "data"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void upload(BinaryData data)"
  desc: "Creates a new blob. By default this method will not overwrite an existing blob."
- uid: "com.azure.storage.blob.BlobClient.upload(com.azure.core.util.BinaryData,boolean)"
  fullName: "com.azure.storage.blob.BlobClient.upload(BinaryData data, boolean overwrite)"
  name: "upload(BinaryData data, boolean overwrite)"
  nameWithType: "BlobClient.upload(BinaryData data, boolean overwrite)"
  summary: "Creates a new blob, or updates the content of an existing blob."
  parameters:
  - description: "The data to write to the blob."
    name: "data"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether or not to overwrite, should data exist on the blob."
    name: "overwrite"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void upload(BinaryData data, boolean overwrite)"
  desc: "Creates a new blob, or updates the content of an existing blob."
- uid: "com.azure.storage.blob.BlobClient.upload(java.io.InputStream)"
  fullName: "com.azure.storage.blob.BlobClient.upload(InputStream data)"
  name: "upload(InputStream data)"
  nameWithType: "BlobClient.upload(InputStream data)"
  summary: "Creates a new blob."
  parameters:
  - description: "The data to write to the blob. The data must be markable. This is in order to support retries. If\n the data is not markable, consider opening a <xref uid=\"com.azure.storage.blob.specialized.BlobOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.storage.blob.specialized.BlobOutputStream\"></xref> and\n writing to the returned stream. Alternatively, consider wrapping your data source in a\n <a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/BufferedInputStream.html\">BufferedInputStream</a> to add mark support."
    name: "data"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html\">InputStream</a>"
  syntax: "public void upload(InputStream data)"
  desc: "Creates a new blob. By default this method will not overwrite an existing blob."
- uid: "com.azure.storage.blob.BlobClient.upload(java.io.InputStream,boolean)"
  fullName: "com.azure.storage.blob.BlobClient.upload(InputStream data, boolean overwrite)"
  name: "upload(InputStream data, boolean overwrite)"
  nameWithType: "BlobClient.upload(InputStream data, boolean overwrite)"
  summary: "Creates a new blob, or updates the content of an existing blob."
  parameters:
  - description: "The data to write to the blob. The data must be markable. This is in order to support retries. If\n the data is not markable, consider opening a <xref uid=\"com.azure.storage.blob.specialized.BlobOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.storage.blob.specialized.BlobOutputStream\"></xref> and\n writing to the returned stream. Alternatively, consider wrapping your data source in a\n <a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/BufferedInputStream.html\">BufferedInputStream</a> to add mark support."
    name: "data"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html\">InputStream</a>"
  - description: "Whether or not to overwrite, should data exist on the blob."
    name: "overwrite"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void upload(InputStream data, boolean overwrite)"
  desc: "Creates a new blob, or updates the content of an existing blob."
- uid: "com.azure.storage.blob.BlobClient.upload(java.io.InputStream,long)"
  fullName: "com.azure.storage.blob.BlobClient.upload(InputStream data, long length)"
  name: "upload(InputStream data, long length)"
  nameWithType: "BlobClient.upload(InputStream data, long length)"
  summary: "Creates a new blob."
  parameters:
  - description: "The data to write to the blob. The data must be markable. This is in order to support retries. If\n the data is not markable, consider opening a <xref uid=\"com.azure.storage.blob.specialized.BlobOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.storage.blob.specialized.BlobOutputStream\"></xref> and\n writing to the returned stream. Alternatively, consider wrapping your data source in a\n <a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/BufferedInputStream.html\">BufferedInputStream</a> to add mark support."
    name: "data"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html\">InputStream</a>"
  - description: "The exact length of the data. It is important that this value match precisely the length of the\n data provided in the <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void upload(InputStream data, long length)"
  desc: "Creates a new blob. By default this method will not overwrite an existing blob."
- uid: "com.azure.storage.blob.BlobClient.upload(java.io.InputStream,long,boolean)"
  fullName: "com.azure.storage.blob.BlobClient.upload(InputStream data, long length, boolean overwrite)"
  name: "upload(InputStream data, long length, boolean overwrite)"
  nameWithType: "BlobClient.upload(InputStream data, long length, boolean overwrite)"
  summary: "Creates a new blob, or updates the content of an existing blob."
  parameters:
  - description: "The data to write to the blob. The data must be markable. This is in order to support retries. If\n the data is not markable, consider opening a <xref uid=\"com.azure.storage.blob.specialized.BlobOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.storage.blob.specialized.BlobOutputStream\"></xref> and\n writing to the returned stream. Alternatively, consider wrapping your data source in a\n <a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/BufferedInputStream.html\">BufferedInputStream</a> to add mark support."
    name: "data"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html\">InputStream</a>"
  - description: "The exact length of the data. It is important that this value match precisely the length of the\n data provided in the <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether or not to overwrite, should data exist on the blob."
    name: "overwrite"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void upload(InputStream data, long length, boolean overwrite)"
  desc: "Creates a new blob, or updates the content of an existing blob."
- uid: "com.azure.storage.blob.BlobClient.uploadFromFile(java.lang.String)"
  fullName: "com.azure.storage.blob.BlobClient.uploadFromFile(String filePath)"
  name: "uploadFromFile(String filePath)"
  nameWithType: "BlobClient.uploadFromFile(String filePath)"
  summary: "Creates a new block blob."
  parameters:
  - description: "Path of the file to upload"
    name: "filePath"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void uploadFromFile(String filePath)"
  desc: "Creates a new block blob. By default this method will not overwrite an existing blob.\n\n**Code Samples**\n\n```java\ntry {\n     client.uploadFromFile(filePath);\n     System.out.println(\"Upload from file succeeded\");\n } catch (UncheckedIOException ex) {\n     System.err.printf(\"Failed to upload from file %s%n\", ex.getMessage());\n }\n```"
- uid: "com.azure.storage.blob.BlobClient.uploadFromFile(java.lang.String,boolean)"
  fullName: "com.azure.storage.blob.BlobClient.uploadFromFile(String filePath, boolean overwrite)"
  name: "uploadFromFile(String filePath, boolean overwrite)"
  nameWithType: "BlobClient.uploadFromFile(String filePath, boolean overwrite)"
  summary: "Creates a new block blob, or updates the content of an existing block blob."
  parameters:
  - description: "Path of the file to upload"
    name: "filePath"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Whether or not to overwrite, should the blob already exist"
    name: "overwrite"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void uploadFromFile(String filePath, boolean overwrite)"
  desc: "Creates a new block blob, or updates the content of an existing block blob.\n\n**Code Samples**\n\n```java\ntry {\n     boolean overwrite = false;\n     client.uploadFromFile(filePath, overwrite);\n     System.out.println(\"Upload from file succeeded\");\n } catch (UncheckedIOException ex) {\n     System.err.printf(\"Failed to upload from file %s%n\", ex.getMessage());\n }\n```"
- uid: "com.azure.storage.blob.BlobClient.uploadFromFile(java.lang.String,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)"
  fullName: "com.azure.storage.blob.BlobClient.uploadFromFile(String filePath, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Duration timeout)"
  name: "uploadFromFile(String filePath, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Duration timeout)"
  nameWithType: "BlobClient.uploadFromFile(String filePath, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Duration timeout)"
  summary: "Creates a new block blob, or updates the content of an existing block blob."
  parameters:
  - description: "Path of the file to upload"
    name: "filePath"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "<xref uid=\"com.azure.storage.blob.models.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref> to use to upload from file. Number of parallel\n        transfers parameter is ignored."
    name: "parallelTransferOptions"
    type: "<xref href=\"com.azure.storage.blob.models.ParallelTransferOptions?alt=com.azure.storage.blob.models.ParallelTransferOptions&text=ParallelTransferOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref>"
    name: "headers"
    type: "<xref href=\"com.azure.storage.blob.models.BlobHttpHeaders?alt=com.azure.storage.blob.models.BlobHttpHeaders&text=BlobHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  - description: "Metadata to associate with the blob. If there is leading or trailing whitespace in any\n metadata key or value, it must be removed or encoded."
    name: "metadata"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  - description: "<xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref> for the uploaded blob"
    name: "tier"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  syntax: "public void uploadFromFile(String filePath, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Duration timeout)"
  desc: "Creates a new block blob, or updates the content of an existing block blob.\n\nTo avoid overwriting, pass \"\\*\" to <xref uid=\"com.azure.storage.blob.models.BlobRequestConditions.setIfNoneMatch(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions#setIfNoneMatch(String)\"></xref>.\n\n**Code Samples**\n\n```java\nBlobHttpHeaders headers = new BlobHttpHeaders()\n     .setContentMd5(\"data\".getBytes(StandardCharsets.UTF_8))\n     .setContentLanguage(\"en-US\")\n     .setContentType(\"binary\");\n\n Map<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n BlobRequestConditions requestConditions = new BlobRequestConditions()\n     .setLeaseId(leaseId)\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(3));\n Long blockSize = 100L * 1024L * 1024L; // 100 MB;\n ParallelTransferOptions parallelTransferOptions = new ParallelTransferOptions().setBlockSizeLong(blockSize);\n\n try {\n     client.uploadFromFile(filePath, parallelTransferOptions, headers, metadata,\n         AccessTier.HOT, requestConditions, timeout);\n     System.out.println(\"Upload from file succeeded\");\n } catch (UncheckedIOException ex) {\n     System.err.printf(\"Failed to upload from file %s%n\", ex.getMessage());\n }\n```"
- uid: "com.azure.storage.blob.BlobClient.uploadFromFileWithResponse(com.azure.storage.blob.options.BlobUploadFromFileOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.BlobClient.uploadFromFileWithResponse(BlobUploadFromFileOptions options, Duration timeout, Context context)"
  name: "uploadFromFileWithResponse(BlobUploadFromFileOptions options, Duration timeout, Context context)"
  nameWithType: "BlobClient.uploadFromFileWithResponse(BlobUploadFromFileOptions options, Duration timeout, Context context)"
  summary: "Creates a new block blob, or updates the content of an existing block blob."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobUploadFromFileOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobUploadFromFileOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobUploadFromFileOptions?alt=com.azure.storage.blob.options.BlobUploadFromFileOptions&text=BlobUploadFromFileOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BlockBlobItem> uploadFromFileWithResponse(BlobUploadFromFileOptions options, Duration timeout, Context context)"
  desc: "Creates a new block blob, or updates the content of an existing block blob.\n\nTo avoid overwriting, pass \"\\*\" to <xref uid=\"com.azure.storage.blob.models.BlobRequestConditions.setIfNoneMatch(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions#setIfNoneMatch(String)\"></xref>.\n\n**Code Samples**\n\n```java\nBlobHttpHeaders headers = new BlobHttpHeaders()\n     .setContentMd5(\"data\".getBytes(StandardCharsets.UTF_8))\n     .setContentLanguage(\"en-US\")\n     .setContentType(\"binary\");\n\n Map<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n Map<String, String> tags = Collections.singletonMap(\"tag\", \"value\");\n BlobRequestConditions requestConditions = new BlobRequestConditions()\n     .setLeaseId(leaseId)\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(3));\n Long blockSize = 100 * 1024 * 1024L; // 100 MB;\n ParallelTransferOptions parallelTransferOptions = new ParallelTransferOptions().setBlockSizeLong(blockSize);\n\n try {\n     client.uploadFromFileWithResponse(new BlobUploadFromFileOptions(filePath)\n         .setParallelTransferOptions(parallelTransferOptions).setHeaders(headers).setMetadata(metadata)\n         .setTags(tags).setTier(AccessTier.HOT).setRequestConditions(requestConditions), timeout,\n         new Context(key2, value2));\n     System.out.println(\"Upload from file succeeded\");\n } catch (UncheckedIOException ex) {\n     System.err.printf(\"Failed to upload from file %s%n\", ex.getMessage());\n }\n```"
  returns:
    description: "Information about the uploaded block blob."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlockBlobItem?alt=com.azure.storage.blob.models.BlockBlobItem&text=BlockBlobItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.BlobClient.uploadWithResponse(com.azure.storage.blob.options.BlobParallelUploadOptions,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.BlobClient.uploadWithResponse(BlobParallelUploadOptions options, Context context)"
  name: "uploadWithResponse(BlobParallelUploadOptions options, Context context)"
  nameWithType: "BlobClient.uploadWithResponse(BlobParallelUploadOptions options, Context context)"
  summary: "Creates a new blob, or updates the content of an existing blob."
  deprecatedTag: "Use <xref uid=\"com.azure.storage.blob.BlobClient.uploadWithResponse(com.azure.storage.blob.options.BlobParallelUploadOptions,java.time.Duration,com.azure.core.util.Context)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClient#uploadWithResponse(BlobParallelUploadOptions, Duration, Context)\"></xref>"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobParallelUploadOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobParallelUploadOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobParallelUploadOptions?alt=com.azure.storage.blob.options.BlobParallelUploadOptions&text=BlobParallelUploadOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Deprecated.html\">@Deprecated</a></br>public Response<BlockBlobItem> uploadWithResponse(BlobParallelUploadOptions options, Context context)"
  desc: "Creates a new blob, or updates the content of an existing blob.\n\nTo avoid overwriting, pass \"\\*\" to <xref uid=\"com.azure.storage.blob.models.BlobRequestConditions.setIfNoneMatch(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions#setIfNoneMatch(String)\"></xref>."
  hasDeprecatedTag: true
  returns:
    description: "Information about the uploaded block blob."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlockBlobItem?alt=com.azure.storage.blob.models.BlockBlobItem&text=BlockBlobItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.BlobClient.uploadWithResponse(com.azure.storage.blob.options.BlobParallelUploadOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.BlobClient.uploadWithResponse(BlobParallelUploadOptions options, Duration timeout, Context context)"
  name: "uploadWithResponse(BlobParallelUploadOptions options, Duration timeout, Context context)"
  nameWithType: "BlobClient.uploadWithResponse(BlobParallelUploadOptions options, Duration timeout, Context context)"
  summary: "Creates a new blob, or updates the content of an existing blob."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobParallelUploadOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobParallelUploadOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobParallelUploadOptions?alt=com.azure.storage.blob.options.BlobParallelUploadOptions&text=BlobParallelUploadOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BlockBlobItem> uploadWithResponse(BlobParallelUploadOptions options, Duration timeout, Context context)"
  desc: "Creates a new blob, or updates the content of an existing blob.\n\nTo avoid overwriting, pass \"\\*\" to <xref uid=\"com.azure.storage.blob.models.BlobRequestConditions.setIfNoneMatch(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions#setIfNoneMatch(String)\"></xref>."
  returns:
    description: "Information about the uploaded block blob."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlockBlobItem?alt=com.azure.storage.blob.models.BlockBlobItem&text=BlockBlobItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.BlobClient.uploadWithResponse(java.io.InputStream,long,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.BlobClient.uploadWithResponse(InputStream data, long length, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  name: "uploadWithResponse(InputStream data, long length, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "BlobClient.uploadWithResponse(InputStream data, long length, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  summary: "Creates a new blob, or updates the content of an existing blob."
  deprecatedTag: "See <xref uid=\"com.azure.storage.blob.BlobClient.uploadWithResponse(com.azure.storage.blob.options.BlobParallelUploadOptions,java.time.Duration,com.azure.core.util.Context)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#uploadWithResponse(BlobParallelUploadOptions, Duration, Context)\"></xref> instead"
  parameters:
  - description: "The data to write to the blob. The data must be markable. This is in order to support retries. If\n the data is not markable, consider opening a <xref uid=\"com.azure.storage.blob.specialized.BlobOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.storage.blob.specialized.BlobOutputStream\"></xref> and\n writing to the returned stream. Alternatively, consider wrapping your data source in a\n <a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/BufferedInputStream.html\">BufferedInputStream</a> to add mark support."
    name: "data"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html\">InputStream</a>"
  - description: "The exact length of the data. It is important that this value match precisely the length of the\n data provided in the <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref> used to configure buffered uploading."
    name: "parallelTransferOptions"
    type: "<xref href=\"com.azure.storage.blob.models.ParallelTransferOptions?alt=com.azure.storage.blob.models.ParallelTransferOptions&text=ParallelTransferOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref>"
    name: "headers"
    type: "<xref href=\"com.azure.storage.blob.models.BlobHttpHeaders?alt=com.azure.storage.blob.models.BlobHttpHeaders&text=BlobHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  - description: "Metadata to associate with the blob. If there is leading or trailing whitespace in any\n metadata key or value, it must be removed or encoded."
    name: "metadata"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  - description: "<xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref> for the destination blob."
    name: "tier"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Deprecated.html\">@Deprecated</a></br>public void uploadWithResponse(InputStream data, long length, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  desc: "Creates a new blob, or updates the content of an existing blob.\n\nTo avoid overwriting, pass \"\\*\" to <xref uid=\"com.azure.storage.blob.models.BlobRequestConditions.setIfNoneMatch(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions#setIfNoneMatch(String)\"></xref>."
  hasDeprecatedTag: true
type: "class"
desc: "This class provides a client that contains generic blob operations for Azure Storage Blobs. Operations allowed by the client are uploading and downloading, copying a blob, retrieving and setting metadata, retrieving and setting HTTP headers, and deleting and un-deleting a blob.\n\nThis client is instantiated through <xref uid=\"com.azure.storage.blob.BlobClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBuilder\"></xref> or retrieved via <xref uid=\"com.azure.storage.blob.BlobContainerClient.getBlobClient(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getBlobClient\"></xref>.\n\nFor operations on a specific blob type (i.e append, block, or page) use <xref uid=\"com.azure.storage.blob.BlobClient.getAppendBlobClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getAppendBlobClient\"></xref>, <xref uid=\"com.azure.storage.blob.BlobClient.getBlockBlobClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getBlockBlobClient\"></xref>, or <xref uid=\"com.azure.storage.blob.BlobClient.getPageBlobClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getPageBlobClient\"></xref> to construct a client that allows blob specific operations.\n\nPlease refer to the [Azure Docs][] for more information.\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/understanding-block-blobs--append-blobs--and-page-blobs"
metadata: {}
package: "com.azure.storage.blob"
artifact: com.azure:azure-storage-blob:12.20.0-beta.1
