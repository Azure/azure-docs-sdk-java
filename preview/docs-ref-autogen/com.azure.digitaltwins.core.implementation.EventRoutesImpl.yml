### YamlMime:ManagedReference
items:
- uid: com.azure.digitaltwins.core.implementation.EventRoutesImpl
  id: EventRoutesImpl
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.implementation
  children:
  - com.azure.digitaltwins.core.implementation.EventRoutesImpl.addWithResponseAsync(java.lang.String,com.azure.digitaltwins.core.implementation.models.EventRoute,com.azure.core.util.Context)
  - com.azure.digitaltwins.core.implementation.EventRoutesImpl.deleteWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.digitaltwins.core.implementation.EventRoutesImpl.getByIdWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.digitaltwins.core.implementation.EventRoutesImpl.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.digitaltwins.core.implementation.EventRoutesImpl.listSinglePageAsync(com.azure.digitaltwins.core.implementation.models.EventRoutesListOptions,com.azure.core.util.Context)
  langs:
  - java
  name: EventRoutesImpl
  nameWithType: EventRoutesImpl
  fullName: com.azure.digitaltwins.core.implementation.EventRoutesImpl
  type: Class
  package: com.azure.digitaltwins.core.implementation
  summary: An instance of this class provides access to all the operations defined in EventRoutes.
  syntax:
    content: public final class EventRoutesImpl
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.digitaltwins.core.implementation.EventRoutesImpl.EventRoutesImpl(com.azure.digitaltwins.core.implementation.AzureDigitalTwinsAPIImpl)
  id: EventRoutesImpl(com.azure.digitaltwins.core.implementation.AzureDigitalTwinsAPIImpl)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.implementation.EventRoutesImpl
  langs:
  - java
  name: EventRoutesImpl(AzureDigitalTwinsAPIImpl client)
  nameWithType: EventRoutesImpl.EventRoutesImpl(AzureDigitalTwinsAPIImpl client)
  fullName: com.azure.digitaltwins.core.implementation.EventRoutesImpl.EventRoutesImpl(AzureDigitalTwinsAPIImpl client)
  overload: com.azure.digitaltwins.core.implementation.EventRoutesImpl.EventRoutesImpl*
  type: Constructor
  package: com.azure.digitaltwins.core.implementation
  summary: Initializes an instance of EventRoutesImpl.
  syntax:
    content: " EventRoutesImpl(AzureDigitalTwinsAPIImpl client)"
    parameters:
    - id: client
      type: com.azure.digitaltwins.core.implementation.AzureDigitalTwinsAPIImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.digitaltwins.core.implementation.EventRoutesImpl.addWithResponseAsync(java.lang.String,com.azure.digitaltwins.core.implementation.models.EventRoute,com.azure.core.util.Context)
  id: addWithResponseAsync(java.lang.String,com.azure.digitaltwins.core.implementation.models.EventRoute,com.azure.core.util.Context)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.implementation.EventRoutesImpl
  langs:
  - java
  name: addWithResponseAsync(String id, EventRoute eventRoute, Context context)
  nameWithType: EventRoutesImpl.addWithResponseAsync(String id, EventRoute eventRoute, Context context)
  fullName: com.azure.digitaltwins.core.implementation.EventRoutesImpl.addWithResponseAsync(String id, EventRoute eventRoute, Context context)
  overload: com.azure.digitaltwins.core.implementation.EventRoutesImpl.addWithResponseAsync*
  type: Method
  package: com.azure.digitaltwins.core.implementation
  summary: 'Adds or replaces an event route. Status codes: 200 (OK): Success. 400 (Bad Request): The request is invalid.'
  syntax:
    content: public Mono<Response<Void>> addWithResponseAsync(String id, EventRoute eventRoute, Context context)
    parameters:
    - id: id
      type: java.lang.String
      description: The id for an event route. The id is unique within event routes and case sensitive.
    - id: eventRoute
      type: com.azure.digitaltwins.core.implementation.models.EventRoute
      description: >-
        A route which directs notification and telemetry events to an endpoint. Endpoints are a
             destination outside of Azure Digital Twins such as an EventHub.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.digitaltwins.core.implementation.EventRoutesImpl.deleteWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.implementation.EventRoutesImpl
  langs:
  - java
  name: deleteWithResponseAsync(String id, Context context)
  nameWithType: EventRoutesImpl.deleteWithResponseAsync(String id, Context context)
  fullName: com.azure.digitaltwins.core.implementation.EventRoutesImpl.deleteWithResponseAsync(String id, Context context)
  overload: com.azure.digitaltwins.core.implementation.EventRoutesImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.digitaltwins.core.implementation
  summary: 'Deletes an event route. Status codes: 200 (OK): Success. 404 (Not Found): There is no event route with the provided id.'
  syntax:
    content: public Mono<Response<Void>> deleteWithResponseAsync(String id, Context context)
    parameters:
    - id: id
      type: java.lang.String
      description: The id for an event route. The id is unique within event routes and case sensitive.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.digitaltwins.core.implementation.EventRoutesImpl.getByIdWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: getByIdWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.implementation.EventRoutesImpl
  langs:
  - java
  name: getByIdWithResponseAsync(String id, Context context)
  nameWithType: EventRoutesImpl.getByIdWithResponseAsync(String id, Context context)
  fullName: com.azure.digitaltwins.core.implementation.EventRoutesImpl.getByIdWithResponseAsync(String id, Context context)
  overload: com.azure.digitaltwins.core.implementation.EventRoutesImpl.getByIdWithResponseAsync*
  type: Method
  package: com.azure.digitaltwins.core.implementation
  summary: 'Retrieves an event route. Status codes: 200 (OK): Success. 404 (Not Found): There is no event route with the provided id.'
  syntax:
    content: public Mono<Response<EventRoute>> getByIdWithResponseAsync(String id, Context context)
    parameters:
    - id: id
      type: java.lang.String
      description: The id for an event route. The id is unique within event routes and case sensitive.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.digitaltwins.core.implementation.models.EventRoute>>
      description: a route which directs notification and telemetry events to an endpoint.
- uid: com.azure.digitaltwins.core.implementation.EventRoutesImpl.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.implementation.EventRoutesImpl
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink, Context context)
  nameWithType: EventRoutesImpl.listNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.digitaltwins.core.implementation.EventRoutesImpl.listNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.digitaltwins.core.implementation.EventRoutesImpl.listNextSinglePageAsync*
  type: Method
  package: com.azure.digitaltwins.core.implementation
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<EventRoute>> listNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.digitaltwins.core.implementation.models.EventRoute>>
      description: a collection of EventRoute objects.
- uid: com.azure.digitaltwins.core.implementation.EventRoutesImpl.listSinglePageAsync(com.azure.digitaltwins.core.implementation.models.EventRoutesListOptions,com.azure.core.util.Context)
  id: listSinglePageAsync(com.azure.digitaltwins.core.implementation.models.EventRoutesListOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.implementation.EventRoutesImpl
  langs:
  - java
  name: listSinglePageAsync(EventRoutesListOptions eventRoutesListOptions, Context context)
  nameWithType: EventRoutesImpl.listSinglePageAsync(EventRoutesListOptions eventRoutesListOptions, Context context)
  fullName: com.azure.digitaltwins.core.implementation.EventRoutesImpl.listSinglePageAsync(EventRoutesListOptions eventRoutesListOptions, Context context)
  overload: com.azure.digitaltwins.core.implementation.EventRoutesImpl.listSinglePageAsync*
  type: Method
  package: com.azure.digitaltwins.core.implementation
  summary: 'Retrieves all event routes. Status codes: 200 (OK): Success. 400 (Bad Request): The request is invalid.'
  syntax:
    content: public Mono<PagedResponse<EventRoute>> listSinglePageAsync(EventRoutesListOptions eventRoutesListOptions, Context context)
    parameters:
    - id: eventRoutesListOptions
      type: com.azure.digitaltwins.core.implementation.models.EventRoutesListOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.digitaltwins.core.implementation.models.EventRoute>>
      description: a collection of EventRoute objects.
references:
- uid: com.azure.digitaltwins.core.implementation.AzureDigitalTwinsAPIImpl
  name: AzureDigitalTwinsAPIImpl
  nameWithType: AzureDigitalTwinsAPIImpl
  fullName: com.azure.digitaltwins.core.implementation.AzureDigitalTwinsAPIImpl
- uid: com.azure.digitaltwins.core.implementation.EventRoutesImpl.EventRoutesImpl*
  name: EventRoutesImpl
  nameWithType: EventRoutesImpl.EventRoutesImpl
  fullName: com.azure.digitaltwins.core.implementation.EventRoutesImpl.EventRoutesImpl
  package: com.azure.digitaltwins.core.implementation
- uid: com.azure.digitaltwins.core.implementation.models.EventRoutesListOptions
  name: EventRoutesListOptions
  nameWithType: EventRoutesListOptions
  fullName: com.azure.digitaltwins.core.implementation.models.EventRoutesListOptions
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.digitaltwins.core.implementation.models.EventRoute>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.digitaltwins.core.implementation.models.EventRoute
    name: EventRoute
    fullName: com.azure.digitaltwins.core.implementation.models.EventRoute
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.digitaltwins.core.implementation.EventRoutesImpl.listSinglePageAsync*
  name: listSinglePageAsync
  nameWithType: EventRoutesImpl.listSinglePageAsync
  fullName: com.azure.digitaltwins.core.implementation.EventRoutesImpl.listSinglePageAsync
  package: com.azure.digitaltwins.core.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.digitaltwins.core.implementation.models.EventRoute>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.digitaltwins.core.implementation.models.EventRoute
    name: EventRoute
    fullName: com.azure.digitaltwins.core.implementation.models.EventRoute
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.digitaltwins.core.implementation.EventRoutesImpl.getByIdWithResponseAsync*
  name: getByIdWithResponseAsync
  nameWithType: EventRoutesImpl.getByIdWithResponseAsync
  fullName: com.azure.digitaltwins.core.implementation.EventRoutesImpl.getByIdWithResponseAsync
  package: com.azure.digitaltwins.core.implementation
- uid: com.azure.digitaltwins.core.implementation.models.EventRoute
  name: EventRoute
  nameWithType: EventRoute
  fullName: com.azure.digitaltwins.core.implementation.models.EventRoute
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.digitaltwins.core.implementation.EventRoutesImpl.addWithResponseAsync*
  name: addWithResponseAsync
  nameWithType: EventRoutesImpl.addWithResponseAsync
  fullName: com.azure.digitaltwins.core.implementation.EventRoutesImpl.addWithResponseAsync
  package: com.azure.digitaltwins.core.implementation
- uid: com.azure.digitaltwins.core.implementation.EventRoutesImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: EventRoutesImpl.deleteWithResponseAsync
  fullName: com.azure.digitaltwins.core.implementation.EventRoutesImpl.deleteWithResponseAsync
  package: com.azure.digitaltwins.core.implementation
- uid: com.azure.digitaltwins.core.implementation.EventRoutesImpl.listNextSinglePageAsync*
  name: listNextSinglePageAsync
  nameWithType: EventRoutesImpl.listNextSinglePageAsync
  fullName: com.azure.digitaltwins.core.implementation.EventRoutesImpl.listNextSinglePageAsync
  package: com.azure.digitaltwins.core.implementation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
