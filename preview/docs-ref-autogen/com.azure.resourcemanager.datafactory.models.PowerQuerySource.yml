### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySource"
fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySource"
name: "PowerQuerySource"
nameWithType: "PowerQuerySource"
summary: "Power query source."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.Transformation?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowSource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.DataFlowSource.schemaLinkedService()"
- "com.azure.resourcemanager.datafactory.models.DataFlowSource.validate()"
- "com.azure.resourcemanager.datafactory.models.DataFlowSource.withDataset(com.azure.resourcemanager.datafactory.models.DatasetReference)"
- "com.azure.resourcemanager.datafactory.models.DataFlowSource.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.DataFlowSource.withFlowlet(com.azure.resourcemanager.datafactory.models.DataFlowReference)"
- "com.azure.resourcemanager.datafactory.models.DataFlowSource.withLinkedService(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
- "com.azure.resourcemanager.datafactory.models.DataFlowSource.withName(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.DataFlowSource.withSchemaLinkedService(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
- "com.azure.resourcemanager.datafactory.models.Transformation.dataset()"
- "com.azure.resourcemanager.datafactory.models.Transformation.description()"
- "com.azure.resourcemanager.datafactory.models.Transformation.flowlet()"
- "com.azure.resourcemanager.datafactory.models.Transformation.linkedService()"
- "com.azure.resourcemanager.datafactory.models.Transformation.name()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PowerQuerySource extends DataFlowSource"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.PowerQuerySource()"
  fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.PowerQuerySource()"
  name: "PowerQuerySource()"
  nameWithType: "PowerQuerySource.PowerQuerySource()"
  syntax: "public PowerQuerySource()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.script()"
  fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.script()"
  name: "script()"
  nameWithType: "PowerQuerySource.script()"
  summary: "Get the script property: source script."
  syntax: "public String script()"
  desc: "Get the script property: source script."
  returns:
    description: "the script value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.validate()"
  name: "validate()"
  nameWithType: "PowerQuerySource.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.DataFlowSource.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.withDataset(com.azure.resourcemanager.datafactory.models.DatasetReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.withDataset(DatasetReference dataset)"
  name: "withDataset(DatasetReference dataset)"
  nameWithType: "PowerQuerySource.withDataset(DatasetReference dataset)"
  summary: "Set the dataset property: Dataset reference."
  overridden: "com.azure.resourcemanager.datafactory.models.DataFlowSource.withDataset(com.azure.resourcemanager.datafactory.models.DatasetReference)"
  parameters:
  - name: "dataset"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DatasetReference?alt=com.azure.resourcemanager.datafactory.models.DatasetReference&text=DatasetReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PowerQuerySource withDataset(DatasetReference dataset)"
  desc: "Set the dataset property: Dataset reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PowerQuerySource?alt=com.azure.resourcemanager.datafactory.models.PowerQuerySource&text=PowerQuerySource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "PowerQuerySource.withDescription(String description)"
  summary: "Set the description property: Transformation description."
  overridden: "com.azure.resourcemanager.datafactory.models.DataFlowSource.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PowerQuerySource withDescription(String description)"
  desc: "Set the description property: Transformation description."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PowerQuerySource?alt=com.azure.resourcemanager.datafactory.models.PowerQuerySource&text=PowerQuerySource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.withFlowlet(com.azure.resourcemanager.datafactory.models.DataFlowReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.withFlowlet(DataFlowReference flowlet)"
  name: "withFlowlet(DataFlowReference flowlet)"
  nameWithType: "PowerQuerySource.withFlowlet(DataFlowReference flowlet)"
  summary: "Set the flowlet property: Flowlet Reference."
  overridden: "com.azure.resourcemanager.datafactory.models.DataFlowSource.withFlowlet(com.azure.resourcemanager.datafactory.models.DataFlowReference)"
  parameters:
  - name: "flowlet"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowReference?alt=com.azure.resourcemanager.datafactory.models.DataFlowReference&text=DataFlowReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PowerQuerySource withFlowlet(DataFlowReference flowlet)"
  desc: "Set the flowlet property: Flowlet Reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PowerQuerySource?alt=com.azure.resourcemanager.datafactory.models.PowerQuerySource&text=PowerQuerySource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.withLinkedService(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.withLinkedService(LinkedServiceReference linkedService)"
  name: "withLinkedService(LinkedServiceReference linkedService)"
  nameWithType: "PowerQuerySource.withLinkedService(LinkedServiceReference linkedService)"
  summary: "Set the linked<wbr>Service property: Linked service reference."
  overridden: "com.azure.resourcemanager.datafactory.models.DataFlowSource.withLinkedService(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
  parameters:
  - name: "linkedService"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedServiceReference?alt=com.azure.resourcemanager.datafactory.models.LinkedServiceReference&text=LinkedServiceReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PowerQuerySource withLinkedService(LinkedServiceReference linkedService)"
  desc: "Set the linkedService property: Linked service reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PowerQuerySource?alt=com.azure.resourcemanager.datafactory.models.PowerQuerySource&text=PowerQuerySource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.withName(String name)"
  name: "withName(String name)"
  nameWithType: "PowerQuerySource.withName(String name)"
  summary: "Set the name property: Transformation name."
  overridden: "com.azure.resourcemanager.datafactory.models.DataFlowSource.withName(java.lang.String)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PowerQuerySource withName(String name)"
  desc: "Set the name property: Transformation name."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PowerQuerySource?alt=com.azure.resourcemanager.datafactory.models.PowerQuerySource&text=PowerQuerySource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.withSchemaLinkedService(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.withSchemaLinkedService(LinkedServiceReference schemaLinkedService)"
  name: "withSchemaLinkedService(LinkedServiceReference schemaLinkedService)"
  nameWithType: "PowerQuerySource.withSchemaLinkedService(LinkedServiceReference schemaLinkedService)"
  summary: "Set the schema<wbr>Linked<wbr>Service property: Schema linked service reference."
  overridden: "com.azure.resourcemanager.datafactory.models.DataFlowSource.withSchemaLinkedService(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
  parameters:
  - name: "schemaLinkedService"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedServiceReference?alt=com.azure.resourcemanager.datafactory.models.LinkedServiceReference&text=LinkedServiceReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PowerQuerySource withSchemaLinkedService(LinkedServiceReference schemaLinkedService)"
  desc: "Set the schemaLinkedService property: Schema linked service reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PowerQuerySource?alt=com.azure.resourcemanager.datafactory.models.PowerQuerySource&text=PowerQuerySource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.withScript(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.PowerQuerySource.withScript(String script)"
  name: "withScript(String script)"
  nameWithType: "PowerQuerySource.withScript(String script)"
  summary: "Set the script property: source script."
  parameters:
  - description: "the script value to set."
    name: "script"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PowerQuerySource withScript(String script)"
  desc: "Set the script property: source script."
  returns:
    description: "the PowerQuerySource object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PowerQuerySource?alt=com.azure.resourcemanager.datafactory.models.PowerQuerySource&text=PowerQuerySource\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Power query source."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
