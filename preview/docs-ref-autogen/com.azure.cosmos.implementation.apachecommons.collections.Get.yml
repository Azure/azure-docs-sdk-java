### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get
  id: Get
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections
  children:
  - com.azure.cosmos.implementation.apachecommons.collections.Get.containsKey(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.Get.containsValue(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.Get.entrySet()
  - com.azure.cosmos.implementation.apachecommons.collections.Get.get(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.Get.isEmpty()
  - com.azure.cosmos.implementation.apachecommons.collections.Get.keySet()
  - com.azure.cosmos.implementation.apachecommons.collections.Get.remove(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.Get.size()
  - com.azure.cosmos.implementation.apachecommons.collections.Get.values()
  langs:
  - java
  name: Get<K,V>
  nameWithType: Get<K,V>
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>
  type: Interface
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public interface Get<K,V>
    typeParameters:
    - id: K
    - id: V
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.containsKey(java.lang.Object)
  id: containsKey(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.Get
  langs:
  - java
  name: containsKey(Object key)
  nameWithType: Get<K,V>.containsKey(Object key)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.containsKey(Object key)
  overload: com.azure.cosmos.implementation.apachecommons.collections.Get.containsKey*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public abstract boolean containsKey(Object key)
    parameters:
    - id: key
      type: java.lang.Object
      description: key whose presence in this map is to be tested
    return:
      type: boolean
      description: >-
        <code>true</code> if this map contains a mapping for the specified
                 key
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.containsValue(java.lang.Object)
  id: containsValue(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.Get
  langs:
  - java
  name: containsValue(Object value)
  nameWithType: Get<K,V>.containsValue(Object value)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.containsValue(Object value)
  overload: com.azure.cosmos.implementation.apachecommons.collections.Get.containsValue*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public abstract boolean containsValue(Object value)
    parameters:
    - id: value
      type: java.lang.Object
      description: value whose presence in this map is to be tested
    return:
      type: boolean
      description: >-
        <code>true</code> if this map maps one or more keys to the
                 specified value
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.entrySet()
  id: entrySet()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.Get
  langs:
  - java
  name: entrySet()
  nameWithType: Get<K,V>.entrySet()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.entrySet()
  overload: com.azure.cosmos.implementation.apachecommons.collections.Get.entrySet*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public abstract Set<Map.Entry<K,V>> entrySet()
    return:
      type: java.util.Set<java.util.Map.Entry<K,V>>
      description: a set view of the mappings contained in this map
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.get(java.lang.Object)
  id: get(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.Get
  langs:
  - java
  name: get(Object key)
  nameWithType: Get<K,V>.get(Object key)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.get(Object key)
  overload: com.azure.cosmos.implementation.apachecommons.collections.Get.get*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public abstract V get(Object key)
    parameters:
    - id: key
      type: java.lang.Object
      description: the key whose associated value is to be returned
    return:
      type: V
      description: >-
        the value to which the specified key is mapped, or
                 <code>null</code> if this map contains no mapping for the key
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.isEmpty()
  id: isEmpty()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.Get
  langs:
  - java
  name: isEmpty()
  nameWithType: Get<K,V>.isEmpty()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.isEmpty()
  overload: com.azure.cosmos.implementation.apachecommons.collections.Get.isEmpty*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public abstract boolean isEmpty()
    return:
      type: boolean
      description: <code>true</code> if this map contains no key-value mappings
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.keySet()
  id: keySet()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.Get
  langs:
  - java
  name: keySet()
  nameWithType: Get<K,V>.keySet()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.keySet()
  overload: com.azure.cosmos.implementation.apachecommons.collections.Get.keySet*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public abstract Set<K> keySet()
    return:
      type: java.util.Set<K>
      description: a set view of the keys contained in this map
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.remove(java.lang.Object)
  id: remove(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.Get
  langs:
  - java
  name: remove(Object key)
  nameWithType: Get<K,V>.remove(Object key)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.remove(Object key)
  overload: com.azure.cosmos.implementation.apachecommons.collections.Get.remove*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public abstract V remove(Object key)
    parameters:
    - id: key
      type: java.lang.Object
      description: key whose mapping is to be removed from the map
    return:
      type: V
      description: >-
        the previous value associated with <code>key</code>, or
                 <code>null</code> if there was no mapping for <code>key</code>.
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.size()
  id: size()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.Get
  langs:
  - java
  name: size()
  nameWithType: Get<K,V>.size()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.size()
  overload: com.azure.cosmos.implementation.apachecommons.collections.Get.size*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public abstract int size()
    return:
      type: int
      description: the number of key-value mappings in this map
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.values()
  id: values()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.Get
  langs:
  - java
  name: values()
  nameWithType: Get<K,V>.values()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.values()
  overload: com.azure.cosmos.implementation.apachecommons.collections.Get.values*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public abstract Collection<V> values()
    return:
      type: java.util.Collection<V>
      description: a collection view of the values contained in this map
references:
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.containsKey*
  name: containsKey
  nameWithType: Get<K,V>.containsKey
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.containsKey
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.containsValue*
  name: containsValue
  nameWithType: Get<K,V>.containsValue
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.containsValue
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: java.util.Set<java.util.Map.Entry<K,V>>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: java.util.Map.Entry
    name: Entry
    fullName: java.util.Map.Entry
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.entrySet*
  name: entrySet
  nameWithType: Get<K,V>.entrySet
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.entrySet
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: V
  spec.java:
  - uid: V
    name: V
    fullName: V
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.get*
  name: get
  nameWithType: Get<K,V>.get
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.get
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.remove*
  name: remove
  nameWithType: Get<K,V>.remove
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.remove
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.isEmpty*
  name: isEmpty
  nameWithType: Get<K,V>.isEmpty
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.isEmpty
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: java.util.Set<K>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.keySet*
  name: keySet
  nameWithType: Get<K,V>.keySet
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.keySet
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.size*
  name: size
  nameWithType: Get<K,V>.size
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.size
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: java.util.Collection<V>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.apachecommons.collections.Get.values*
  name: values
  nameWithType: Get<K,V>.values
  fullName: com.azure.cosmos.implementation.apachecommons.collections.Get<K,V>.values
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: K
  name: K
  nameWithType: K
  fullName: K
- uid: K,V
  name: K,V
  nameWithType: K,V
  fullName: K,V
- uid: java.util.Map.Entry
  name: Map.Entry
  nameWithType: Map.Entry
  fullName: java.util.Map.Entry
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
