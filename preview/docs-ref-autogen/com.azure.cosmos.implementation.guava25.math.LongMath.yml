### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.math.LongMath"
fullName: "com.azure.cosmos.implementation.guava25.math.LongMath"
name: "LongMath"
nameWithType: "LongMath"
summary: "A class for arithmetic on values of type `long`. Where possible, methods are defined and named analogously to their `BigInteger` counterparts.\n\nThe implementations of many methods in this class are based on material from Henry S. Warren, Jr.'s *Hacker's Delight*, (Addison Wesley, 2002).\n\nSimilar functionality for `int` and for <xref uid=\"java.math.BigInteger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BigInteger\"></xref> can be found in <xref uid=\"com.azure.cosmos.implementation.guava25.math.IntMath\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IntMath\"></xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BigIntegerMath\"></xref> respectively. For other common operations on `long` values, see <xref uid=\"com.azure.cosmos.implementation.guava25.primitives.Longs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.implementation.guava25.primitives.Longs\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LongMath"
methods:
- "com.azure.cosmos.implementation.guava25.math.LongMath.binomial(int,int)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.ceilingPowerOfTwo(long)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.checkedAdd(long,long)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.checkedMultiply(long,long)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.checkedPow(long,int)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.checkedSubtract(long,long)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.divide(long,long,java.math.RoundingMode)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.factorial(int)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.floorPowerOfTwo(long)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.gcd(long,long)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.isPowerOfTwo(long)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.isPrime(long)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.log10(long,java.math.RoundingMode)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.log2(long,java.math.RoundingMode)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.mean(long,long)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.mod(long,int)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.mod(long,long)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.pow(long,int)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.saturatedAdd(long,long)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.saturatedMultiply(long,long)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.saturatedPow(long,int)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.saturatedSubtract(long,long)"
- "com.azure.cosmos.implementation.guava25.math.LongMath.sqrt(long,java.math.RoundingMode)"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.math"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
