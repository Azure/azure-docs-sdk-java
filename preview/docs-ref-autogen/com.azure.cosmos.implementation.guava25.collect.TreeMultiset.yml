### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.TreeMultiset"
fullName: "com.azure.cosmos.implementation.guava25.collect.TreeMultiset<E>"
name: "TreeMultiset<E>"
nameWithType: "TreeMultiset<E>"
summary: "A multiset which maintains the ordering of its elements, according to either their natural order or an explicit <xref uid=\"java.util.Comparator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparator\"></xref>. In all cases, this implementation uses <xref uid=\"java.lang.Comparable.compareTo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparable#compareTo\"></xref> or <xref uid=\"java.util.Comparator.compare\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparator#compare\"></xref> instead of <xref uid=\"java.lang.Object.equals\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Object#equals\"></xref> to determine equivalence of instances.\n\n**Warning:** The comparison must be *consistent with equals* as explained by the <xref uid=\"java.lang.Comparable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparable\"></xref> class specification. Otherwise, the resulting multiset will violate the <xref uid=\"java.util.Collection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Collection\"></xref> contract, which is specified in terms of <xref uid=\"java.lang.Object.equals\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Object#equals\"></xref>.\n\nSee the Guava User Guide article on [ `Multiset`][_Multiset].\n\n\n[_Multiset]: https://github.com/google/guava/wiki/NewCollectionTypesExplained#multiset"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.util.AbstractCollection\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.AbstractMultiset\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.AbstractSortedMultiset\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.add(E)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.add(E,int)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.addAll(java.util.Collection<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.clear()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.contains(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.entrySet()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.equals(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.hashCode()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.isEmpty()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.remove(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.remove(java.lang.Object,int)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.removeAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.retainAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.setCount(E,int)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.setCount(E,int,int)"
- "com.azure.cosmos.implementation.guava25.collect.AbstractMultiset.toString()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractSortedMultiset.comparator()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractSortedMultiset.descendingMultiset()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractSortedMultiset.elementSet()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractSortedMultiset.firstEntry()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractSortedMultiset.lastEntry()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractSortedMultiset.pollFirstEntry()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractSortedMultiset.pollLastEntry()"
- "com.azure.cosmos.implementation.guava25.collect.AbstractSortedMultiset.subMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType,E,com.azure.cosmos.implementation.guava25.collect.BoundType)"
- "java.lang.Object.clone()"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "java.util.AbstractCollection.<T>toArray(T[])"
- "java.util.AbstractCollection.containsAll(java.util.Collection<?>)"
- "java.util.AbstractCollection.iterator()"
- "java.util.AbstractCollection.size()"
- "java.util.AbstractCollection.toArray()"
syntax: "public final class TreeMultiset<E> extends AbstractSortedMultiset<E> implements Serializable"
methods:
- "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.<E>create()"
- "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.<E>create(java.lang.Iterable<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.<E>create(java.util.Comparator<? super E>)"
- "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.add(E,int)"
- "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.clear()"
- "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.count(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.forEachEntry(java.util.function.ObjIntConsumer<? super E>)"
- "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.headMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType)"
- "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.iterator()"
- "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.remove(java.lang.Object,int)"
- "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.setCount(E,int)"
- "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.setCount(E,int,int)"
- "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.size()"
- "com.azure.cosmos.implementation.guava25.collect.TreeMultiset.tailMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType)"
type: "class"
typeParameters:
- name: "E"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
