### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  id: RouteFiltersClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent
  children:
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.RouteFiltersClient(com.azure.resourcemanager.network.NetworkManagementClient)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDelete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.delete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroup(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroup(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroup(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.list()
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.list(com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.listAsync()
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.listAsync(com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroup(java.lang.String)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupAsync(java.lang.String)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.listNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.listSinglePageAsync()
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.listSinglePageAsync(com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  - com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  langs:
  - java
  name: RouteFiltersClient
  nameWithType: RouteFiltersClient
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  type: Class
  package: com.azure.resourcemanager.network.fluent
  summary: An instance of this class provides access to all the operations defined in RouteFilters.
  syntax:
    content: public final class RouteFiltersClient implements InnerSupportsGet<RouteFilterInner>, InnerSupportsListing<RouteFilterInner>, InnerSupportsDelete<Void>
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.RouteFiltersClient(com.azure.resourcemanager.network.NetworkManagementClient)
  id: RouteFiltersClient(com.azure.resourcemanager.network.NetworkManagementClient)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: RouteFiltersClient(NetworkManagementClient client)
  nameWithType: RouteFiltersClient.RouteFiltersClient(NetworkManagementClient client)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.RouteFiltersClient(NetworkManagementClient client)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.RouteFiltersClient*
  type: Constructor
  package: com.azure.resourcemanager.network.fluent
  summary: Initializes an instance of RouteFiltersClient.
  syntax:
    content: public RouteFiltersClient(NetworkManagementClient client)
    parameters:
    - id: client
      type: com.azure.resourcemanager.network.NetworkManagementClient
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  nameWithType: RouteFiltersClient.beginCreateOrUpdate(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdate(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a route filter in a specified resource group.
  syntax:
    content: public PollerFlux<PollResult<RouteFilterInner>,RouteFilterInner> beginCreateOrUpdate(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: Route Filter Resource.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  nameWithType: RouteFiltersClient.beginCreateOrUpdate(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdate(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a route filter in a specified resource group.
  syntax:
    content: public PollerFlux<PollResult<RouteFilterInner>,RouteFilterInner> beginCreateOrUpdate(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: Route Filter Resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  id: beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPolling(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  nameWithType: RouteFiltersClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a route filter in a specified resource group.
  syntax:
    content: public RouteFilterInner beginCreateOrUpdateWithoutPolling(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: Route Filter Resource.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPolling(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  nameWithType: RouteFiltersClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a route filter in a specified resource group.
  syntax:
    content: public RouteFilterInner beginCreateOrUpdateWithoutPolling(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: Route Filter Resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  id: beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  nameWithType: RouteFiltersClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a route filter in a specified resource group.
  syntax:
    content: public Mono<RouteFilterInner> beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: Route Filter Resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  nameWithType: RouteFiltersClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a route filter in a specified resource group.
  syntax:
    content: public Mono<RouteFilterInner> beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: Route Filter Resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  id: beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  nameWithType: RouteFiltersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a route filter in a specified resource group.
  syntax:
    content: public Mono<Response<RouteFilterInner>> beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: Route Filter Resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  nameWithType: RouteFiltersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a route filter in a specified resource group.
  syntax:
    content: public Mono<Response<RouteFilterInner>> beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: Route Filter Resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDelete(java.lang.String,java.lang.String)
  id: beginDelete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String routeFilterName)
  nameWithType: RouteFiltersClient.beginDelete(String resourceGroupName, String routeFilterName)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDelete(String resourceGroupName, String routeFilterName)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified route filter.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDelete(String resourceGroupName, String routeFilterName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String routeFilterName, Context context)
  nameWithType: RouteFiltersClient.beginDelete(String resourceGroupName, String routeFilterName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDelete(String resourceGroupName, String routeFilterName, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified route filter.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDelete(String resourceGroupName, String routeFilterName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String)
  id: beginDeleteWithoutPolling(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginDeleteWithoutPolling(String resourceGroupName, String routeFilterName)
  nameWithType: RouteFiltersClient.beginDeleteWithoutPolling(String resourceGroupName, String routeFilterName)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPolling(String resourceGroupName, String routeFilterName)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified route filter.
  syntax:
    content: public void beginDeleteWithoutPolling(String resourceGroupName, String routeFilterName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginDeleteWithoutPolling(String resourceGroupName, String routeFilterName, Context context)
  nameWithType: RouteFiltersClient.beginDeleteWithoutPolling(String resourceGroupName, String routeFilterName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPolling(String resourceGroupName, String routeFilterName, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified route filter.
  syntax:
    content: public void beginDeleteWithoutPolling(String resourceGroupName, String routeFilterName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String)
  id: beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginDeleteWithoutPollingAsync(String resourceGroupName, String routeFilterName)
  nameWithType: RouteFiltersClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String routeFilterName)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String routeFilterName)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified route filter.
  syntax:
    content: public Mono<Void> beginDeleteWithoutPollingAsync(String resourceGroupName, String routeFilterName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginDeleteWithoutPollingAsync(String resourceGroupName, String routeFilterName, Context context)
  nameWithType: RouteFiltersClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String routeFilterName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String routeFilterName, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified route filter.
  syntax:
    content: public Mono<Void> beginDeleteWithoutPollingAsync(String resourceGroupName, String routeFilterName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  id: beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName)
  nameWithType: RouteFiltersClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified route filter.
  syntax:
    content: public Mono<Response<Void>> beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, Context context)
  nameWithType: RouteFiltersClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified route filter.
  syntax:
    content: public Mono<Response<Void>> beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  id: beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  nameWithType: RouteFiltersClient.beginUpdate(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdate(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a route filter in a specified resource group.
  syntax:
    content: public PollerFlux<PollResult<RouteFilterInner>,RouteFilterInner> beginUpdate(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.models.PatchRouteFilter
      description: Route Filter Resource.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  id: beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  nameWithType: RouteFiltersClient.beginUpdate(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdate(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a route filter in a specified resource group.
  syntax:
    content: public PollerFlux<PollResult<RouteFilterInner>,RouteFilterInner> beginUpdate(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.models.PatchRouteFilter
      description: Route Filter Resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  id: beginUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginUpdateWithoutPolling(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  nameWithType: RouteFiltersClient.beginUpdateWithoutPolling(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPolling(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a route filter in a specified resource group.
  syntax:
    content: public RouteFilterInner beginUpdateWithoutPolling(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.models.PatchRouteFilter
      description: Route Filter Resource.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  id: beginUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginUpdateWithoutPolling(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  nameWithType: RouteFiltersClient.beginUpdateWithoutPolling(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPolling(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a route filter in a specified resource group.
  syntax:
    content: public RouteFilterInner beginUpdateWithoutPolling(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.models.PatchRouteFilter
      description: Route Filter Resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  id: beginUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginUpdateWithoutPollingAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  nameWithType: RouteFiltersClient.beginUpdateWithoutPollingAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a route filter in a specified resource group.
  syntax:
    content: public Mono<RouteFilterInner> beginUpdateWithoutPollingAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.models.PatchRouteFilter
      description: Route Filter Resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  id: beginUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginUpdateWithoutPollingAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  nameWithType: RouteFiltersClient.beginUpdateWithoutPollingAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a route filter in a specified resource group.
  syntax:
    content: public Mono<RouteFilterInner> beginUpdateWithoutPollingAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.models.PatchRouteFilter
      description: Route Filter Resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  id: beginUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  nameWithType: RouteFiltersClient.beginUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a route filter in a specified resource group.
  syntax:
    content: public Mono<Response<RouteFilterInner>> beginUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.models.PatchRouteFilter
      description: Route Filter Resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  id: beginUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: beginUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  nameWithType: RouteFiltersClient.beginUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a route filter in a specified resource group.
  syntax:
    content: public Mono<Response<RouteFilterInner>> beginUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.models.PatchRouteFilter
      description: Route Filter Resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  nameWithType: RouteFiltersClient.createOrUpdate(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdate(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a route filter in a specified resource group.
  syntax:
    content: public RouteFilterInner createOrUpdate(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: Route Filter Resource.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  nameWithType: RouteFiltersClient.createOrUpdate(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdate(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a route filter in a specified resource group.
  syntax:
    content: public RouteFilterInner createOrUpdate(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: Route Filter Resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  nameWithType: RouteFiltersClient.createOrUpdateAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a route filter in a specified resource group.
  syntax:
    content: public Mono<RouteFilterInner> createOrUpdateAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: Route Filter Resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  nameWithType: RouteFiltersClient.createOrUpdateAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a route filter in a specified resource group.
  syntax:
    content: public Mono<RouteFilterInner> createOrUpdateAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: Route Filter Resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  nameWithType: RouteFiltersClient.createOrUpdateWithResponseAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateWithResponseAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a route filter in a specified resource group.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: Route Filter Resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  nameWithType: RouteFiltersClient.createOrUpdateWithResponseAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateWithResponseAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a route filter in a specified resource group.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String routeFilterName, RouteFilterInner routeFilterParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: Route Filter Resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: delete(String resourceGroupName, String routeFilterName)
  nameWithType: RouteFiltersClient.delete(String resourceGroupName, String routeFilterName)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.delete(String resourceGroupName, String routeFilterName)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.delete*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified route filter.
  syntax:
    content: public void delete(String resourceGroupName, String routeFilterName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: delete(String resourceGroupName, String routeFilterName, Context context)
  nameWithType: RouteFiltersClient.delete(String resourceGroupName, String routeFilterName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.delete(String resourceGroupName, String routeFilterName, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.delete*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified route filter.
  syntax:
    content: public void delete(String resourceGroupName, String routeFilterName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String routeFilterName)
  nameWithType: RouteFiltersClient.deleteAsync(String resourceGroupName, String routeFilterName)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteAsync(String resourceGroupName, String routeFilterName)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified route filter.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String routeFilterName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String routeFilterName, Context context)
  nameWithType: RouteFiltersClient.deleteAsync(String resourceGroupName, String routeFilterName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteAsync(String resourceGroupName, String routeFilterName, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified route filter.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String routeFilterName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String routeFilterName)
  nameWithType: RouteFiltersClient.deleteWithResponseAsync(String resourceGroupName, String routeFilterName)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteWithResponseAsync(String resourceGroupName, String routeFilterName)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified route filter.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String routeFilterName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String routeFilterName, Context context)
  nameWithType: RouteFiltersClient.deleteWithResponseAsync(String resourceGroupName, String routeFilterName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteWithResponseAsync(String resourceGroupName, String routeFilterName, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified route filter.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String routeFilterName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroup(java.lang.String,java.lang.String)
  id: getByResourceGroup(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String routeFilterName)
  nameWithType: RouteFiltersClient.getByResourceGroup(String resourceGroupName, String routeFilterName)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroup(String resourceGroupName, String routeFilterName)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified route filter.
  syntax:
    content: public RouteFilterInner getByResourceGroup(String resourceGroupName, String routeFilterName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: the specified route filter.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroup(java.lang.String,java.lang.String,java.lang.String)
  id: getByResourceGroup(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String routeFilterName, String expand)
  nameWithType: RouteFiltersClient.getByResourceGroup(String resourceGroupName, String routeFilterName, String expand)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroup(String resourceGroupName, String routeFilterName, String expand)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified route filter.
  syntax:
    content: public RouteFilterInner getByResourceGroup(String resourceGroupName, String routeFilterName, String expand)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: expand
      type: java.lang.String
      description: Expands referenced express route bgp peering resources.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: the specified route filter.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroup(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroup(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String routeFilterName, String expand, Context context)
  nameWithType: RouteFiltersClient.getByResourceGroup(String resourceGroupName, String routeFilterName, String expand, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroup(String resourceGroupName, String routeFilterName, String expand, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified route filter.
  syntax:
    content: public RouteFilterInner getByResourceGroup(String resourceGroupName, String routeFilterName, String expand, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: expand
      type: java.lang.String
      description: Expands referenced express route bgp peering resources.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: the specified route filter.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String routeFilterName)
  nameWithType: RouteFiltersClient.getByResourceGroupAsync(String resourceGroupName, String routeFilterName)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupAsync(String resourceGroupName, String routeFilterName)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified route filter.
  syntax:
    content: public Mono<RouteFilterInner> getByResourceGroupAsync(String resourceGroupName, String routeFilterName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: the specified route filter.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String routeFilterName, String expand)
  nameWithType: RouteFiltersClient.getByResourceGroupAsync(String resourceGroupName, String routeFilterName, String expand)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupAsync(String resourceGroupName, String routeFilterName, String expand)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified route filter.
  syntax:
    content: public Mono<RouteFilterInner> getByResourceGroupAsync(String resourceGroupName, String routeFilterName, String expand)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: expand
      type: java.lang.String
      description: Expands referenced express route bgp peering resources.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: the specified route filter.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String routeFilterName, String expand, Context context)
  nameWithType: RouteFiltersClient.getByResourceGroupAsync(String resourceGroupName, String routeFilterName, String expand, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupAsync(String resourceGroupName, String routeFilterName, String expand, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified route filter.
  syntax:
    content: public Mono<RouteFilterInner> getByResourceGroupAsync(String resourceGroupName, String routeFilterName, String expand, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: expand
      type: java.lang.String
      description: Expands referenced express route bgp peering resources.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: the specified route filter.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String routeFilterName, String expand)
  nameWithType: RouteFiltersClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String routeFilterName, String expand)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String routeFilterName, String expand)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified route filter.
  syntax:
    content: public Mono<Response<RouteFilterInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String routeFilterName, String expand)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: expand
      type: java.lang.String
      description: Expands referenced express route bgp peering resources.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>>
      description: the specified route filter.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String routeFilterName, String expand, Context context)
  nameWithType: RouteFiltersClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String routeFilterName, String expand, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String routeFilterName, String expand, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified route filter.
  syntax:
    content: public Mono<Response<RouteFilterInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String routeFilterName, String expand, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: expand
      type: java.lang.String
      description: Expands referenced express route bgp peering resources.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>>
      description: the specified route filter.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: list()
  nameWithType: RouteFiltersClient.list()
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.list()
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.list*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all route filters in a subscription.
  syntax:
    content: public PagedIterable<RouteFilterInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: all route filters in a subscription.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.list(com.azure.core.util.Context)
  id: list(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: list(Context context)
  nameWithType: RouteFiltersClient.list(Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.list(Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.list*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all route filters in a subscription.
  syntax:
    content: public PagedIterable<RouteFilterInner> list(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: all route filters in a subscription.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: listAsync()
  nameWithType: RouteFiltersClient.listAsync()
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listAsync()
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all route filters in a subscription.
  syntax:
    content: public PagedFlux<RouteFilterInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: all route filters in a subscription.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listAsync(com.azure.core.util.Context)
  id: listAsync(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: listAsync(Context context)
  nameWithType: RouteFiltersClient.listAsync(Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listAsync(Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all route filters in a subscription.
  syntax:
    content: public PagedFlux<RouteFilterInner> listAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: all route filters in a subscription.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroup(java.lang.String)
  id: listByResourceGroup(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: RouteFiltersClient.listByResourceGroup(String resourceGroupName)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroup(String resourceGroupName)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all route filters in a resource group.
  syntax:
    content: public PagedIterable<RouteFilterInner> listByResourceGroup(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: all route filters in a resource group.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, Context context)
  nameWithType: RouteFiltersClient.listByResourceGroup(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroup(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all route filters in a resource group.
  syntax:
    content: public PagedIterable<RouteFilterInner> listByResourceGroup(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: all route filters in a resource group.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupAsync(java.lang.String)
  id: listByResourceGroupAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: RouteFiltersClient.listByResourceGroupAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all route filters in a resource group.
  syntax:
    content: public PagedFlux<RouteFilterInner> listByResourceGroupAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: all route filters in a resource group.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupAsync(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroupAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName, Context context)
  nameWithType: RouteFiltersClient.listByResourceGroupAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all route filters in a resource group.
  syntax:
    content: public PagedFlux<RouteFilterInner> listByResourceGroupAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: all route filters in a resource group.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupNextSinglePageAsync(java.lang.String)
  id: listByResourceGroupNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: listByResourceGroupNextSinglePageAsync(String nextLink)
  nameWithType: RouteFiltersClient.listByResourceGroupNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<RouteFilterInner>> listByResourceGroupNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>>
      description: response for the ListRouteFilters API service call.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroupNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: listByResourceGroupNextSinglePageAsync(String nextLink, Context context)
  nameWithType: RouteFiltersClient.listByResourceGroupNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<RouteFilterInner>> listByResourceGroupNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>>
      description: response for the ListRouteFilters API service call.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupSinglePageAsync(java.lang.String)
  id: listByResourceGroupSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: listByResourceGroupSinglePageAsync(String resourceGroupName)
  nameWithType: RouteFiltersClient.listByResourceGroupSinglePageAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupSinglePageAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all route filters in a resource group.
  syntax:
    content: public Mono<PagedResponse<RouteFilterInner>> listByResourceGroupSinglePageAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>>
      description: all route filters in a resource group.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroupSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
  nameWithType: RouteFiltersClient.listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all route filters in a resource group.
  syntax:
    content: public Mono<PagedResponse<RouteFilterInner>> listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>>
      description: all route filters in a resource group.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listNextSinglePageAsync(java.lang.String)
  id: listNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink)
  nameWithType: RouteFiltersClient.listNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<RouteFilterInner>> listNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>>
      description: response for the ListRouteFilters API service call.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink, Context context)
  nameWithType: RouteFiltersClient.listNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<RouteFilterInner>> listNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>>
      description: response for the ListRouteFilters API service call.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listSinglePageAsync()
  id: listSinglePageAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: listSinglePageAsync()
  nameWithType: RouteFiltersClient.listSinglePageAsync()
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listSinglePageAsync()
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all route filters in a subscription.
  syntax:
    content: public Mono<PagedResponse<RouteFilterInner>> listSinglePageAsync()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>>
      description: all route filters in a subscription.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listSinglePageAsync(com.azure.core.util.Context)
  id: listSinglePageAsync(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: listSinglePageAsync(Context context)
  nameWithType: RouteFiltersClient.listSinglePageAsync(Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listSinglePageAsync(Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all route filters in a subscription.
  syntax:
    content: public Mono<PagedResponse<RouteFilterInner>> listSinglePageAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>>
      description: all route filters in a subscription.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: update(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  nameWithType: RouteFiltersClient.update(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.update(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.update*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a route filter in a specified resource group.
  syntax:
    content: public RouteFilterInner update(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.models.PatchRouteFilter
      description: Route Filter Resource.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: update(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  nameWithType: RouteFiltersClient.update(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.update(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.update*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a route filter in a specified resource group.
  syntax:
    content: public RouteFilterInner update(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.models.PatchRouteFilter
      description: Route Filter Resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  id: updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: updateAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  nameWithType: RouteFiltersClient.updateAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a route filter in a specified resource group.
  syntax:
    content: public Mono<RouteFilterInner> updateAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.models.PatchRouteFilter
      description: Route Filter Resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  id: updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: updateAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  nameWithType: RouteFiltersClient.updateAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a route filter in a specified resource group.
  syntax:
    content: public Mono<RouteFilterInner> updateAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.models.PatchRouteFilter
      description: Route Filter Resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  nameWithType: RouteFiltersClient.updateWithResponseAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateWithResponseAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a route filter in a specified resource group.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateWithResponseAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.models.PatchRouteFilter
      description: Route Filter Resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: route Filter Resource.
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.PatchRouteFilter,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.RouteFiltersClient
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  nameWithType: RouteFiltersClient.updateWithResponseAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateWithResponseAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a route filter in a specified resource group.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateWithResponseAsync(String resourceGroupName, String routeFilterName, PatchRouteFilter routeFilterParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: routeFilterName
      type: java.lang.String
      description: The name of the route filter.
    - id: routeFilterParameters
      type: com.azure.resourcemanager.network.models.PatchRouteFilter
      description: Route Filter Resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: route Filter Resource.
references:
- uid: com.azure.resourcemanager.network.NetworkManagementClient
  name: NetworkManagementClient
  nameWithType: NetworkManagementClient
  fullName: com.azure.resourcemanager.network.NetworkManagementClient
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.RouteFiltersClient*
  name: RouteFiltersClient
  nameWithType: RouteFiltersClient.RouteFiltersClient
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.RouteFiltersClient
  package: com.azure.resourcemanager.network.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: RouteFiltersClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDelete*
  name: beginDelete
  nameWithType: RouteFiltersClient.beginDelete
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDelete
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteAsync*
  name: deleteAsync
  nameWithType: RouteFiltersClient.deleteAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.deleteAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.delete*
  name: delete
  nameWithType: RouteFiltersClient.delete
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.delete
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
    name: RouteFilterInner
    fullName: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupWithResponseAsync*
  name: getByResourceGroupWithResponseAsync
  nameWithType: RouteFiltersClient.getByResourceGroupWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
    name: RouteFilterInner
    fullName: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupAsync*
  name: getByResourceGroupAsync
  nameWithType: RouteFiltersClient.getByResourceGroupAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroupAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
  name: RouteFilterInner
  nameWithType: RouteFilterInner
  fullName: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroup*
  name: getByResourceGroup
  nameWithType: RouteFiltersClient.getByResourceGroup
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.getByResourceGroup
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: RouteFiltersClient.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
    name: RouteFilterInner
    fullName: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
    name: RouteFilterInner
    fullName: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdate*
  name: beginCreateOrUpdate
  nameWithType: RouteFiltersClient.beginCreateOrUpdate
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdate
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: RouteFiltersClient.createOrUpdateAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdateAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdate*
  name: createOrUpdate
  nameWithType: RouteFiltersClient.createOrUpdate
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.createOrUpdate
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.models.PatchRouteFilter
  name: PatchRouteFilter
  nameWithType: PatchRouteFilter
  fullName: com.azure.resourcemanager.network.models.PatchRouteFilter
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: RouteFiltersClient.updateWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdate*
  name: beginUpdate
  nameWithType: RouteFiltersClient.beginUpdate
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdate
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateAsync*
  name: updateAsync
  nameWithType: RouteFiltersClient.updateAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.updateAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.update*
  name: update
  nameWithType: RouteFiltersClient.update
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.update
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
    name: RouteFilterInner
    fullName: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupSinglePageAsync*
  name: listByResourceGroupSinglePageAsync
  nameWithType: RouteFiltersClient.listByResourceGroupSinglePageAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupSinglePageAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
    name: RouteFilterInner
    fullName: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupAsync*
  name: listByResourceGroupAsync
  nameWithType: RouteFiltersClient.listByResourceGroupAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
    name: RouteFilterInner
    fullName: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroup*
  name: listByResourceGroup
  nameWithType: RouteFiltersClient.listByResourceGroup
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroup
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listSinglePageAsync*
  name: listSinglePageAsync
  nameWithType: RouteFiltersClient.listSinglePageAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listSinglePageAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listAsync*
  name: listAsync
  nameWithType: RouteFiltersClient.listAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.list*
  name: list
  nameWithType: RouteFiltersClient.list
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.list
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingWithResponseAsync*
  name: beginDeleteWithoutPollingWithResponseAsync
  nameWithType: RouteFiltersClient.beginDeleteWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingAsync*
  name: beginDeleteWithoutPollingAsync
  nameWithType: RouteFiltersClient.beginDeleteWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPolling*
  name: beginDeleteWithoutPolling
  nameWithType: RouteFiltersClient.beginDeleteWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginDeleteWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync
  nameWithType: RouteFiltersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingAsync*
  name: beginCreateOrUpdateWithoutPollingAsync
  nameWithType: RouteFiltersClient.beginCreateOrUpdateWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPolling*
  name: beginCreateOrUpdateWithoutPolling
  nameWithType: RouteFiltersClient.beginCreateOrUpdateWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginCreateOrUpdateWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingWithResponseAsync*
  name: beginUpdateWithoutPollingWithResponseAsync
  nameWithType: RouteFiltersClient.beginUpdateWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingAsync*
  name: beginUpdateWithoutPollingAsync
  nameWithType: RouteFiltersClient.beginUpdateWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPolling*
  name: beginUpdateWithoutPolling
  nameWithType: RouteFiltersClient.beginUpdateWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.beginUpdateWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupNextSinglePageAsync*
  name: listByResourceGroupNextSinglePageAsync
  nameWithType: RouteFiltersClient.listByResourceGroupNextSinglePageAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listByResourceGroupNextSinglePageAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listNextSinglePageAsync*
  name: listNextSinglePageAsync
  nameWithType: RouteFiltersClient.listNextSinglePageAsync
  fullName: com.azure.resourcemanager.network.fluent.RouteFiltersClient.listNextSinglePageAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
  name: InnerSupportsGet<RouteFilterInner>
  nameWithType: InnerSupportsGet<RouteFilterInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
  name: InnerSupportsListing<RouteFilterInner>
  nameWithType: InnerSupportsListing<RouteFilterInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  name: InnerSupportsDelete<Void>
  nameWithType: InnerSupportsDelete<Void>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
  name: RouteFilterInner>,RouteFilterInner
  nameWithType: RouteFilterInner>,RouteFilterInner
  fullName: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner>,com.azure.resourcemanager.network.fluent.inner.RouteFilterInner
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
  name: InnerSupportsGet
  nameWithType: InnerSupportsGet
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
  name: InnerSupportsListing
  nameWithType: InnerSupportsListing
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
  name: InnerSupportsDelete
  nameWithType: InnerSupportsDelete
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
