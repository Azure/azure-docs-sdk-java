### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
  id: BeanSerializerModifier
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser
  children:
  - com.fasterxml.jackson.databind.ser.BeanSerializerModifier.BeanSerializerModifier()
  - com.fasterxml.jackson.databind.ser.BeanSerializerModifier.changeProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)
  - com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.BeanSerializerModifier.orderProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)
  - com.fasterxml.jackson.databind.ser.BeanSerializerModifier.updateBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
  langs:
  - java
  name: BeanSerializerModifier
  nameWithType: BeanSerializerModifier
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
  type: Class
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Abstract class that defines API for objects that can be registered (for <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializerFactory" data-throw-if-not-resolved="false">BeanSerializerFactory</xref> to participate in constructing <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializer" data-throw-if-not-resolved="false">BeanSerializer</xref> instances. This is typically done by modules that want alter some aspects of serialization process; and is preferable to sub-classing of <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializerFactory" data-throw-if-not-resolved="false">BeanSerializerFactory</xref>.


    Sequence in which callback methods are called is as follows:


    1.  After factory has collected tentative set of properties (instances of `BeanPropertyWriter`) is sent for modification via <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializerModifier.changeProperties*" data-throw-if-not-resolved="false">#changeProperties</xref>. Changes can include removal, addition and replacement of suggested properties.

    2.  Resulting set of properties are ordered (sorted) by factory, as per configuration, and then <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializerModifier.orderProperties*" data-throw-if-not-resolved="false">#orderProperties</xref> is called to allow modifiers to alter ordering.

    3.  After all bean properties and related information is accumulated, <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializerModifier.updateBuilder*" data-throw-if-not-resolved="false">#updateBuilder</xref> is called with builder, to allow builder state to be modified (including possibly replacing builder itself if necessary)

    4.  Once all bean information has been determined, factory creates default <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializer" data-throw-if-not-resolved="false">BeanSerializer</xref> instance and passes it to modifiers using <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifySerializer*" data-throw-if-not-resolved="false">#modifySerializer</xref>, for possible modification or replacement (by any <xref uid="com.fasterxml.jackson.databind.JsonSerializer" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.JsonSerializer</xref> instance)


    Default method implementations are "no-op"s, meaning that methods are implemented but have no effect.
  syntax:
    content: public abstract class BeanSerializerModifier
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.BeanSerializerModifier()
  id: BeanSerializerModifier()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
  langs:
  - java
  name: BeanSerializerModifier()
  nameWithType: BeanSerializerModifier.BeanSerializerModifier()
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.BeanSerializerModifier()
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.BeanSerializerModifier*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public BeanSerializerModifier()
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.changeProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)
  id: changeProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
  langs:
  - java
  name: changeProperties(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyWriter> beanProperties)
  nameWithType: BeanSerializerModifier.changeProperties(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyWriter> beanProperties)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.changeProperties(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyWriter> beanProperties)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.changeProperties*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called by <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializerFactory" data-throw-if-not-resolved="false">BeanSerializerFactory</xref> with tentative set of discovered properties. Implementations can add, remove or replace any of passed properties. Properties `List` passed as argument is modifiable, and returned List must likewise be modifiable as it may be passed to multiple registered modifiers.
  syntax:
    content: public List<BeanPropertyWriter> changeProperties(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyWriter> beanProperties)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: beanProperties
      type: java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>
    return:
      type: java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  id: modifyArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
  langs:
  - java
  name: modifyArraySerializer(SerializationConfig config, ArrayType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  nameWithType: BeanSerializerModifier.modifyArraySerializer(SerializationConfig config, ArrayType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyArraySerializer(SerializationConfig config, ArrayType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyArraySerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called by <xref uid="com.fasterxml.jackson.databind.deser.DeserializerFactory" data-throw-if-not-resolved="false">DeserializerFactory</xref> after it has constructed the standard serializer for given <xref uid="com.fasterxml.jackson.databind.type.ArrayType" data-throw-if-not-resolved="false">ArrayType</xref> to make it possible to either replace or augment this serializer with additional functionality.
  syntax:
    content: public JsonSerializer<?> modifyArraySerializer(SerializationConfig config, ArrayType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
      description: Configuration in use
    - id: valueType
      type: com.fasterxml.jackson.databind.type.ArrayType
      description: Type of the value serializer is used for.
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
      description: Details of the type in question, to allow checking class annotations
    - id: serializer
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
      description: Default serializer that would be used.
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
      description: >-
        Serializer to use; either <code>serializer</code> that was passed
           in, or an instance method constructed.
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  id: modifyCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
  langs:
  - java
  name: modifyCollectionLikeSerializer(SerializationConfig config, CollectionLikeType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  nameWithType: BeanSerializerModifier.modifyCollectionLikeSerializer(SerializationConfig config, CollectionLikeType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyCollectionLikeSerializer(SerializationConfig config, CollectionLikeType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyCollectionLikeSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public JsonSerializer<?> modifyCollectionLikeSerializer(SerializationConfig config, CollectionLikeType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: valueType
      type: com.fasterxml.jackson.databind.type.CollectionLikeType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: serializer
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  id: modifyCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
  langs:
  - java
  name: modifyCollectionSerializer(SerializationConfig config, CollectionType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  nameWithType: BeanSerializerModifier.modifyCollectionSerializer(SerializationConfig config, CollectionType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyCollectionSerializer(SerializationConfig config, CollectionType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyCollectionSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public JsonSerializer<?> modifyCollectionSerializer(SerializationConfig config, CollectionType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: valueType
      type: com.fasterxml.jackson.databind.type.CollectionType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: serializer
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  id: modifyEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
  langs:
  - java
  name: modifyEnumSerializer(SerializationConfig config, JavaType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  nameWithType: BeanSerializerModifier.modifyEnumSerializer(SerializationConfig config, JavaType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyEnumSerializer(SerializationConfig config, JavaType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyEnumSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public JsonSerializer<?> modifyEnumSerializer(SerializationConfig config, JavaType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: valueType
      type: com.fasterxml.jackson.databind.JavaType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: serializer
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  id: modifyKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
  langs:
  - java
  name: modifyKeySerializer(SerializationConfig config, JavaType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  nameWithType: BeanSerializerModifier.modifyKeySerializer(SerializationConfig config, JavaType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyKeySerializer(SerializationConfig config, JavaType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyKeySerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called by <xref uid="com.fasterxml.jackson.databind.deser.DeserializerFactory" data-throw-if-not-resolved="false">DeserializerFactory</xref> after it has constructed the default key serializer to use for serializing <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> keys of given type. This makes it possible to either replace or augment default serializer with additional functionality.
  syntax:
    content: public JsonSerializer<?> modifyKeySerializer(SerializationConfig config, JavaType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
      description: Configuration in use
    - id: valueType
      type: com.fasterxml.jackson.databind.JavaType
      description: Type of keys the serializer is used for.
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
      description: Details of the type in question, to allow checking class annotations
    - id: serializer
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
      description: Default serializer that would be used.
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
      description: >-
        Serializer to use; either <code>serializer</code> that was passed
           in, or an instance method constructed.
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  id: modifyMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
  langs:
  - java
  name: modifyMapLikeSerializer(SerializationConfig config, MapLikeType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  nameWithType: BeanSerializerModifier.modifyMapLikeSerializer(SerializationConfig config, MapLikeType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyMapLikeSerializer(SerializationConfig config, MapLikeType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyMapLikeSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public JsonSerializer<?> modifyMapLikeSerializer(SerializationConfig config, MapLikeType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: valueType
      type: com.fasterxml.jackson.databind.type.MapLikeType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: serializer
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  id: modifyMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
  langs:
  - java
  name: modifyMapSerializer(SerializationConfig config, MapType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  nameWithType: BeanSerializerModifier.modifyMapSerializer(SerializationConfig config, MapType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyMapSerializer(SerializationConfig config, MapType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyMapSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public JsonSerializer<?> modifyMapSerializer(SerializationConfig config, MapType valueType, BeanDescription beanDesc, JsonSerializer<?> serializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: valueType
      type: com.fasterxml.jackson.databind.type.MapType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: serializer
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  id: modifySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
  langs:
  - java
  name: modifySerializer(SerializationConfig config, BeanDescription beanDesc, JsonSerializer<?> serializer)
  nameWithType: BeanSerializerModifier.modifySerializer(SerializationConfig config, BeanDescription beanDesc, JsonSerializer<?> serializer)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifySerializer(SerializationConfig config, BeanDescription beanDesc, JsonSerializer<?> serializer)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifySerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Method called by <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializerFactory" data-throw-if-not-resolved="false">BeanSerializerFactory</xref> after constructing default bean serializer instance with properties collected and ordered earlier. Implementations can modify or replace given serializer and return serializer to use. Note that although initial serializer being passed is of type <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializer" data-throw-if-not-resolved="false">BeanSerializer</xref>, modifiers may return serializers of other types; and this is why implementations must check for type before casting.


    NOTE: since 2.2, gets called for serializer of those non-POJO types that do not go through any of more specific `modifyXxxSerializer` methods; mostly for JDK types like <xref uid="java.util.Iterator" data-throw-if-not-resolved="false">java.util.Iterator</xref> and such.
  syntax:
    content: public JsonSerializer<?> modifySerializer(SerializationConfig config, BeanDescription beanDesc, JsonSerializer<?> serializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: serializer
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.orderProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)
  id: orderProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
  langs:
  - java
  name: orderProperties(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyWriter> beanProperties)
  nameWithType: BeanSerializerModifier.orderProperties(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyWriter> beanProperties)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.orderProperties(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyWriter> beanProperties)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.orderProperties*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called by <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializerFactory" data-throw-if-not-resolved="false">BeanSerializerFactory</xref> with set of properties to serialize, in default ordering (based on defaults as well as possible type annotations). Implementations can change ordering any way they like. Properties `List` passed as argument is modifiable, and returned List must likewise be modifiable as it may be passed to multiple registered modifiers.
  syntax:
    content: public List<BeanPropertyWriter> orderProperties(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyWriter> beanProperties)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: beanProperties
      type: java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>
    return:
      type: java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.updateBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
  id: updateBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
  langs:
  - java
  name: updateBuilder(SerializationConfig config, BeanDescription beanDesc, BeanSerializerBuilder builder)
  nameWithType: BeanSerializerModifier.updateBuilder(SerializationConfig config, BeanDescription beanDesc, BeanSerializerBuilder builder)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.updateBuilder(SerializationConfig config, BeanDescription beanDesc, BeanSerializerBuilder builder)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.updateBuilder*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called by <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializerFactory" data-throw-if-not-resolved="false">BeanSerializerFactory</xref> after collecting all information regarding POJO to serialize and updating builder with it, but before constructing serializer. Implementations may choose to modify state of builder (to affect serializer being built), or even completely replace it (if they want to build different kind of serializer). Typically, however, passed-in builder is returned, possibly with some modifications.
  syntax:
    content: public BeanSerializerBuilder updateBuilder(SerializationConfig config, BeanDescription beanDesc, BeanSerializerBuilder builder)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: builder
      type: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder
    return:
      type: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder
references:
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.BeanSerializerModifier*
  name: BeanSerializerModifier
  nameWithType: BeanSerializerModifier.BeanSerializerModifier
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.BeanSerializerModifier
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.SerializationConfig
  name: SerializationConfig
  nameWithType: SerializationConfig
  fullName: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.BeanDescription
  name: BeanDescription
  nameWithType: BeanDescription
  fullName: com.fasterxml.jackson.databind.BeanDescription
- uid: java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
    name: BeanPropertyWriter
    fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.changeProperties*
  name: changeProperties
  nameWithType: BeanSerializerModifier.changeProperties
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.changeProperties
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.orderProperties*
  name: orderProperties
  nameWithType: BeanSerializerModifier.orderProperties
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.orderProperties
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder
  name: BeanSerializerBuilder
  nameWithType: BeanSerializerBuilder
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.updateBuilder*
  name: updateBuilder
  nameWithType: BeanSerializerModifier.updateBuilder
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.updateBuilder
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.JsonSerializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifySerializer*
  name: modifySerializer
  nameWithType: BeanSerializerModifier.modifySerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifySerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.type.ArrayType
  name: ArrayType
  nameWithType: ArrayType
  fullName: com.fasterxml.jackson.databind.type.ArrayType
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyArraySerializer*
  name: modifyArraySerializer
  nameWithType: BeanSerializerModifier.modifyArraySerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyArraySerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.type.CollectionType
  name: CollectionType
  nameWithType: CollectionType
  fullName: com.fasterxml.jackson.databind.type.CollectionType
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyCollectionSerializer*
  name: modifyCollectionSerializer
  nameWithType: BeanSerializerModifier.modifyCollectionSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyCollectionSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.type.CollectionLikeType
  name: CollectionLikeType
  nameWithType: CollectionLikeType
  fullName: com.fasterxml.jackson.databind.type.CollectionLikeType
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyCollectionLikeSerializer*
  name: modifyCollectionLikeSerializer
  nameWithType: BeanSerializerModifier.modifyCollectionLikeSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyCollectionLikeSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.type.MapType
  name: MapType
  nameWithType: MapType
  fullName: com.fasterxml.jackson.databind.type.MapType
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyMapSerializer*
  name: modifyMapSerializer
  nameWithType: BeanSerializerModifier.modifyMapSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyMapSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.type.MapLikeType
  name: MapLikeType
  nameWithType: MapLikeType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyMapLikeSerializer*
  name: modifyMapLikeSerializer
  nameWithType: BeanSerializerModifier.modifyMapLikeSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyMapLikeSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyEnumSerializer*
  name: modifyEnumSerializer
  nameWithType: BeanSerializerModifier.modifyEnumSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyEnumSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyKeySerializer*
  name: modifyKeySerializer
  nameWithType: BeanSerializerModifier.modifyKeySerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier.modifyKeySerializer
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  name: BeanPropertyWriter
  nameWithType: BeanPropertyWriter
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
