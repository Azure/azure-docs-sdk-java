### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Iterators.get*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Iterators.<T>get"
name: "<T>get"
nameWithType: "Iterators.<T>get"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Iterators.<T>get(java.util.Iterator<? extends T>,int,T)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Iterators.<T>get(Iterator<? extends T> iterator, int position, T defaultValue)"
  name: "<T>get(Iterator<? extends T> iterator, int position, T defaultValue)"
  nameWithType: "Iterators.<T>get(Iterator<? extends T> iterator, int position, T defaultValue)"
  summary: "Advances `iterator` `position + 1` times, returning the element at the `position`th position or `defaultValue` otherwise."
  parameters:
  - name: "iterator"
    type: "<xref href=\"java.util.Iterator?alt=java.util.Iterator&text=Iterator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends T?alt=? extends T&text=? extends T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "position of the element to return"
    name: "position"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "the default value to return if the iterator is empty or if <code>position</code>\n     is greater than the number of elements remaining in <code>iterator</code>"
    name: "defaultValue"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static T <T>get(Iterator<? extends T> iterator, int position, T defaultValue)"
  returns:
    description: "the element at the specified position in <code>iterator</code> or <code>defaultValue</code> if\n     <code>iterator</code> produces fewer than <code>position + 1</code> elements."
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.collect.Iterators.<T>get(java.util.Iterator<T>,int)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Iterators.<T>get(Iterator<T> iterator, int position)"
  name: "<T>get(Iterator<T> iterator, int position)"
  nameWithType: "Iterators.<T>get(Iterator<T> iterator, int position)"
  summary: "Advances `iterator` `position + 1` times, returning the element at the `position`th position."
  parameters:
  - name: "iterator"
    type: "<xref href=\"java.util.Iterator?alt=java.util.Iterator&text=Iterator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "position of the element to return"
    name: "position"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static T <T>get(Iterator<T> iterator, int position)"
  returns:
    description: "the element at the specified position in <code>iterator</code>"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
