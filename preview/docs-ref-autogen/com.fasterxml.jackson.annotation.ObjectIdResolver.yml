### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.annotation.ObjectIdResolver
  id: ObjectIdResolver
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation
  children:
  - com.fasterxml.jackson.annotation.ObjectIdResolver.bindItem(com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey,java.lang.Object)
  - com.fasterxml.jackson.annotation.ObjectIdResolver.canUseFor(com.fasterxml.jackson.annotation.ObjectIdResolver)
  - com.fasterxml.jackson.annotation.ObjectIdResolver.newForDeserialization(java.lang.Object)
  - com.fasterxml.jackson.annotation.ObjectIdResolver.resolveId(com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey)
  langs:
  - java
  name: ObjectIdResolver
  nameWithType: ObjectIdResolver
  fullName: com.fasterxml.jackson.annotation.ObjectIdResolver
  type: Interface
  package: com.fasterxml.jackson.annotation
  summary: Definition of API used for resolving actual Java object from Object Identifiers (as annotated using <xref uid="com.fasterxml.jackson.annotation.JsonIdentityInfo" data-throw-if-not-resolved="false">JsonIdentityInfo</xref>).
  syntax:
    content: public interface ObjectIdResolver
- uid: com.fasterxml.jackson.annotation.ObjectIdResolver.bindItem(com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey,java.lang.Object)
  id: bindItem(com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.ObjectIdResolver
  langs:
  - java
  name: bindItem(ObjectIdGenerator.IdKey id, Object pojo)
  nameWithType: ObjectIdResolver.bindItem(ObjectIdGenerator.IdKey id, Object pojo)
  fullName: com.fasterxml.jackson.annotation.ObjectIdResolver.bindItem(ObjectIdGenerator.IdKey id, Object pojo)
  overload: com.fasterxml.jackson.annotation.ObjectIdResolver.bindItem*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Method called when a POJO is deserialized and has an Object Identifier. Method exists so that implementation can keep track of existing object in JSON stream that could be useful for further resolution.
  syntax:
    content: public abstract void bindItem(ObjectIdGenerator.IdKey id, Object pojo)
    parameters:
    - id: id
      type: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey
      description: The Object Identifer
    - id: pojo
      type: java.lang.Object
      description: The POJO associated to that Identifier
- uid: com.fasterxml.jackson.annotation.ObjectIdResolver.canUseFor(com.fasterxml.jackson.annotation.ObjectIdResolver)
  id: canUseFor(com.fasterxml.jackson.annotation.ObjectIdResolver)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.ObjectIdResolver
  langs:
  - java
  name: canUseFor(ObjectIdResolver resolverType)
  nameWithType: ObjectIdResolver.canUseFor(ObjectIdResolver resolverType)
  fullName: com.fasterxml.jackson.annotation.ObjectIdResolver.canUseFor(ObjectIdResolver resolverType)
  overload: com.fasterxml.jackson.annotation.ObjectIdResolver.canUseFor*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Method called to check whether this resolver instance can be used for Object Ids of specific resolver type; determination is based by passing a configured "blueprint" (prototype) instance; from which the actual instances are created (using <xref uid="com.fasterxml.jackson.annotation.ObjectIdResolver.newForDeserialization*" data-throw-if-not-resolved="false">#newForDeserialization</xref>).
  syntax:
    content: public abstract boolean canUseFor(ObjectIdResolver resolverType)
    parameters:
    - id: resolverType
      type: com.fasterxml.jackson.annotation.ObjectIdResolver
    return:
      type: boolean
      description: True if this instance can be used as-is; false if not
- uid: com.fasterxml.jackson.annotation.ObjectIdResolver.newForDeserialization(java.lang.Object)
  id: newForDeserialization(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.ObjectIdResolver
  langs:
  - java
  name: newForDeserialization(Object context)
  nameWithType: ObjectIdResolver.newForDeserialization(Object context)
  fullName: com.fasterxml.jackson.annotation.ObjectIdResolver.newForDeserialization(Object context)
  overload: com.fasterxml.jackson.annotation.ObjectIdResolver.newForDeserialization*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: >-
    Factory method called to create a new instance to use for deserialization: needed since resolvers may have state (a pool of objects).


    Note that actual type of 'context' is `com.fasterxml.jackson.databind.DeserializationContext`, but can not be declared here as type itself (as well as call to this object) comes from databind package.
  syntax:
    content: public abstract ObjectIdResolver newForDeserialization(Object context)
    parameters:
    - id: context
      type: java.lang.Object
      description: >-
        Deserialization context object used (of type
                    <code>com.fasterxml.jackson.databind.DeserializationContext</code>
                    ; may be needed by more complex resolvers to access contextual
                    information such as configuration.
    return:
      type: com.fasterxml.jackson.annotation.ObjectIdResolver
- uid: com.fasterxml.jackson.annotation.ObjectIdResolver.resolveId(com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey)
  id: resolveId(com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.ObjectIdResolver
  langs:
  - java
  name: resolveId(ObjectIdGenerator.IdKey id)
  nameWithType: ObjectIdResolver.resolveId(ObjectIdGenerator.IdKey id)
  fullName: com.fasterxml.jackson.annotation.ObjectIdResolver.resolveId(ObjectIdGenerator.IdKey id)
  overload: com.fasterxml.jackson.annotation.ObjectIdResolver.resolveId*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Method called when deserialization encounters the given Object Identifier and requires the POJO associated with it.
  syntax:
    content: public abstract Object resolveId(ObjectIdGenerator.IdKey id)
    parameters:
    - id: id
      type: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey
      description: The Object Identifier
    return:
      type: java.lang.Object
      description: The POJO, or null if unable to resolve.
references:
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey
  name: ObjectIdGenerator.IdKey
  nameWithType: ObjectIdGenerator.IdKey
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.annotation.ObjectIdResolver.bindItem*
  name: bindItem
  nameWithType: ObjectIdResolver.bindItem
  fullName: com.fasterxml.jackson.annotation.ObjectIdResolver.bindItem
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.ObjectIdResolver.resolveId*
  name: resolveId
  nameWithType: ObjectIdResolver.resolveId
  fullName: com.fasterxml.jackson.annotation.ObjectIdResolver.resolveId
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.ObjectIdResolver.newForDeserialization*
  name: newForDeserialization
  nameWithType: ObjectIdResolver.newForDeserialization
  fullName: com.fasterxml.jackson.annotation.ObjectIdResolver.newForDeserialization
  package: com.fasterxml.jackson.annotation
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.annotation.ObjectIdResolver.canUseFor*
  name: canUseFor
  nameWithType: ObjectIdResolver.canUseFor
  fullName: com.fasterxml.jackson.annotation.ObjectIdResolver.canUseFor
  package: com.fasterxml.jackson.annotation
