### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.MapMaker.weakValues*"
fullName: "com.azure.cosmos.implementation.guava25.collect.MapMaker.weakValues"
name: "weakValues"
nameWithType: "MapMaker.weakValues"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.MapMaker.weakValues()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.MapMaker.weakValues()"
  name: "weakValues()"
  nameWithType: "MapMaker.weakValues()"
  summary: "Specifies that each value (not key) stored in the map should be wrapped in a <xref uid=\"java.lang.ref.WeakReference\" data-throw-if-not-resolved=\"false\" data-raw-source=\"WeakReference\"></xref> (by default, strong references are used).\n\nWeak values will be garbage collected once they are weakly reachable. This makes them a poor candidate for caching.\n\n**Warning:** when this method is used, the resulting map will use identity (`==`) comparison to determine equality of values. This technically violates the specifications of the methods <xref uid=\"java.util.Map.containsValue\" data-throw-if-not-resolved=\"false\" data-raw-source=\"containsValue\"></xref>, <xref uid=\"java.util.concurrent.ConcurrentMap.remove*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"remove(Object, Object)\"></xref> and <xref uid=\"ConcurrentMap#replace(Object, Object, Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"replace(K, V,\n V)\"></xref>, and may not be what you expect."
  syntax: "public MapMaker weakValues()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.MapMaker?alt=com.azure.cosmos.implementation.guava25.collect.MapMaker&text=MapMaker\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
