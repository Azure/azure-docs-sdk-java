### YamlMime:ManagedReference
items:
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  id: AzureCommunicationChatServiceImpl
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation
  children:
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembers(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembers(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersAsync(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersAsync(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersWithResponseAsync(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersWithResponseAsync(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThread(com.azure.communication.chat.implementation.models.CreateChatThreadOptions)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThread(com.azure.communication.chat.implementation.models.CreateChatThreadOptions,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadAsync(com.azure.communication.chat.implementation.models.CreateChatThreadOptions)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadAsync(com.azure.communication.chat.implementation.models.CreateChatThreadOptions,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadWithResponseAsync(com.azure.communication.chat.implementation.models.CreateChatThreadOptions)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadWithResponseAsync(com.azure.communication.chat.implementation.models.CreateChatThreadOptions,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessage(java.lang.String,java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessage(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageAsync(java.lang.String,java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThread(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThread(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadAsync(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadWithResponseAsync(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getApiVersion()
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessage(java.lang.String,java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessage(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageAsync(java.lang.String,java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThread(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThread(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadAsync(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadWithResponseAsync(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getEndpoint()
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getHttpPipeline()
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getSerializerAdapter()
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessages(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessages(java.lang.String,java.lang.Integer,java.time.OffsetDateTime)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessages(java.lang.String,java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesAsync(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesAsync(java.lang.String,java.lang.Integer,java.time.OffsetDateTime)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesAsync(java.lang.String,java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesNextSinglePageAsync(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesSinglePageAsync(java.lang.String,java.lang.Integer,java.time.OffsetDateTime)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesSinglePageAsync(java.lang.String,java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceipts(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceipts(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsAsync(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsNextSinglePageAsync(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsSinglePageAsync(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembers(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembers(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersAsync(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersNextSinglePageAsync(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersSinglePageAsync(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreads()
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreads(java.lang.Integer,java.time.OffsetDateTime)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreads(java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsAsync()
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsAsync(java.lang.Integer,java.time.OffsetDateTime)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsAsync(java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsNextSinglePageAsync(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsSinglePageAsync(java.lang.Integer,java.time.OffsetDateTime)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsSinglePageAsync(java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMember(java.lang.String,java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMember(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberAsync(java.lang.String,java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessage(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessage(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageAsync(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageAsync(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageWithResponseAsync(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageWithResponseAsync(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceipt(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceipt(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptAsync(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptAsync(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptWithResponseAsync(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptWithResponseAsync(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotification(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotification(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationAsync(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationWithResponseAsync(java.lang.String)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessage(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessage(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageAsync(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageAsync(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageWithResponseAsync(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageWithResponseAsync(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThread(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThread(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadAsync(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadAsync(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions,com.azure.core.util.Context)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadWithResponseAsync(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions)
  - com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadWithResponseAsync(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions,com.azure.core.util.Context)
  langs:
  - java
  name: AzureCommunicationChatServiceImpl
  nameWithType: AzureCommunicationChatServiceImpl
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  type: Class
  package: com.azure.communication.chat.implementation
  summary: Initializes a new instance of the AzureCommunicationChatService type.
  syntax:
    content: public final class AzureCommunicationChatServiceImpl
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.AzureCommunicationChatServiceImpl(com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.SerializerAdapter,java.lang.String)
  id: AzureCommunicationChatServiceImpl(com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.SerializerAdapter,java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: AzureCommunicationChatServiceImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint)
  nameWithType: AzureCommunicationChatServiceImpl.AzureCommunicationChatServiceImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.AzureCommunicationChatServiceImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.AzureCommunicationChatServiceImpl*
  type: Constructor
  package: com.azure.communication.chat.implementation
  summary: Initializes an instance of AzureCommunicationChatService client.
  syntax:
    content: " AzureCommunicationChatServiceImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint)"
    parameters:
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
      description: The HTTP pipeline to send requests through.
    - id: serializerAdapter
      type: com.azure.core.util.serializer.SerializerAdapter
      description: The serializer to serialize an object into a string.
    - id: endpoint
      type: java.lang.String
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.AzureCommunicationChatServiceImpl(com.azure.core.http.HttpPipeline,java.lang.String)
  id: AzureCommunicationChatServiceImpl(com.azure.core.http.HttpPipeline,java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: AzureCommunicationChatServiceImpl(HttpPipeline httpPipeline, String endpoint)
  nameWithType: AzureCommunicationChatServiceImpl.AzureCommunicationChatServiceImpl(HttpPipeline httpPipeline, String endpoint)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.AzureCommunicationChatServiceImpl(HttpPipeline httpPipeline, String endpoint)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.AzureCommunicationChatServiceImpl*
  type: Constructor
  package: com.azure.communication.chat.implementation
  summary: Initializes an instance of AzureCommunicationChatService client.
  syntax:
    content: " AzureCommunicationChatServiceImpl(HttpPipeline httpPipeline, String endpoint)"
    parameters:
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
      description: The HTTP pipeline to send requests through.
    - id: endpoint
      type: java.lang.String
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.AzureCommunicationChatServiceImpl(java.lang.String)
  id: AzureCommunicationChatServiceImpl(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: AzureCommunicationChatServiceImpl(String endpoint)
  nameWithType: AzureCommunicationChatServiceImpl.AzureCommunicationChatServiceImpl(String endpoint)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.AzureCommunicationChatServiceImpl(String endpoint)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.AzureCommunicationChatServiceImpl*
  type: Constructor
  package: com.azure.communication.chat.implementation
  summary: Initializes an instance of AzureCommunicationChatService client.
  syntax:
    content: " AzureCommunicationChatServiceImpl(String endpoint)"
    parameters:
    - id: endpoint
      type: java.lang.String
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembers(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions)
  id: addChatThreadMembers(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: addChatThreadMembers(String chatThreadId, AddChatThreadMembersOptions body)
  nameWithType: AzureCommunicationChatServiceImpl.addChatThreadMembers(String chatThreadId, AddChatThreadMembersOptions body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembers(String chatThreadId, AddChatThreadMembersOptions body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembers*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Adds thread members to a thread. If members already exist, no change occurs.
  syntax:
    content: public void addChatThreadMembers(String chatThreadId, AddChatThreadMembersOptions body)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Id of the thread to add members to.
    - id: body
      type: com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions
      description: Thread members to be added to the thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembers(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions,com.azure.core.util.Context)
  id: addChatThreadMembers(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: addChatThreadMembers(String chatThreadId, AddChatThreadMembersOptions body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.addChatThreadMembers(String chatThreadId, AddChatThreadMembersOptions body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembers(String chatThreadId, AddChatThreadMembersOptions body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembers*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Adds thread members to a thread. If members already exist, no change occurs.
  syntax:
    content: public void addChatThreadMembers(String chatThreadId, AddChatThreadMembersOptions body, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Id of the thread to add members to.
    - id: body
      type: com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions
      description: Thread members to be added to the thread.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersAsync(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions)
  id: addChatThreadMembersAsync(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: addChatThreadMembersAsync(String chatThreadId, AddChatThreadMembersOptions body)
  nameWithType: AzureCommunicationChatServiceImpl.addChatThreadMembersAsync(String chatThreadId, AddChatThreadMembersOptions body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersAsync(String chatThreadId, AddChatThreadMembersOptions body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Adds thread members to a thread. If members already exist, no change occurs.
  syntax:
    content: public Mono<Void> addChatThreadMembersAsync(String chatThreadId, AddChatThreadMembersOptions body)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Id of the thread to add members to.
    - id: body
      type: com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions
      description: Thread members to be added to the thread.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersAsync(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions,com.azure.core.util.Context)
  id: addChatThreadMembersAsync(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: addChatThreadMembersAsync(String chatThreadId, AddChatThreadMembersOptions body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.addChatThreadMembersAsync(String chatThreadId, AddChatThreadMembersOptions body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersAsync(String chatThreadId, AddChatThreadMembersOptions body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Adds thread members to a thread. If members already exist, no change occurs.
  syntax:
    content: public Mono<Void> addChatThreadMembersAsync(String chatThreadId, AddChatThreadMembersOptions body, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Id of the thread to add members to.
    - id: body
      type: com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions
      description: Thread members to be added to the thread.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersWithResponseAsync(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions)
  id: addChatThreadMembersWithResponseAsync(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: addChatThreadMembersWithResponseAsync(String chatThreadId, AddChatThreadMembersOptions body)
  nameWithType: AzureCommunicationChatServiceImpl.addChatThreadMembersWithResponseAsync(String chatThreadId, AddChatThreadMembersOptions body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersWithResponseAsync(String chatThreadId, AddChatThreadMembersOptions body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Adds thread members to a thread. If members already exist, no change occurs.
  syntax:
    content: public Mono<Response<Void>> addChatThreadMembersWithResponseAsync(String chatThreadId, AddChatThreadMembersOptions body)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Id of the thread to add members to.
    - id: body
      type: com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions
      description: Thread members to be added to the thread.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersWithResponseAsync(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions,com.azure.core.util.Context)
  id: addChatThreadMembersWithResponseAsync(java.lang.String,com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: addChatThreadMembersWithResponseAsync(String chatThreadId, AddChatThreadMembersOptions body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.addChatThreadMembersWithResponseAsync(String chatThreadId, AddChatThreadMembersOptions body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersWithResponseAsync(String chatThreadId, AddChatThreadMembersOptions body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Adds thread members to a thread. If members already exist, no change occurs.
  syntax:
    content: public Mono<Response<Void>> addChatThreadMembersWithResponseAsync(String chatThreadId, AddChatThreadMembersOptions body, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Id of the thread to add members to.
    - id: body
      type: com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions
      description: Thread members to be added to the thread.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThread(com.azure.communication.chat.implementation.models.CreateChatThreadOptions)
  id: createChatThread(com.azure.communication.chat.implementation.models.CreateChatThreadOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: createChatThread(CreateChatThreadOptions body)
  nameWithType: AzureCommunicationChatServiceImpl.createChatThread(CreateChatThreadOptions body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThread(CreateChatThreadOptions body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThread*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Creates a chat thread.
  syntax:
    content: public MultiStatusResponse createChatThread(CreateChatThreadOptions body)
    parameters:
    - id: body
      type: com.azure.communication.chat.implementation.models.CreateChatThreadOptions
      description: Request payload for creating a chat thread.
    return:
      type: com.azure.communication.chat.implementation.models.MultiStatusResponse
      description: the response.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThread(com.azure.communication.chat.implementation.models.CreateChatThreadOptions,com.azure.core.util.Context)
  id: createChatThread(com.azure.communication.chat.implementation.models.CreateChatThreadOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: createChatThread(CreateChatThreadOptions body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.createChatThread(CreateChatThreadOptions body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThread(CreateChatThreadOptions body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThread*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Creates a chat thread.
  syntax:
    content: public MultiStatusResponse createChatThread(CreateChatThreadOptions body, Context context)
    parameters:
    - id: body
      type: com.azure.communication.chat.implementation.models.CreateChatThreadOptions
      description: Request payload for creating a chat thread.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.communication.chat.implementation.models.MultiStatusResponse
      description: the response.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadAsync(com.azure.communication.chat.implementation.models.CreateChatThreadOptions)
  id: createChatThreadAsync(com.azure.communication.chat.implementation.models.CreateChatThreadOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: createChatThreadAsync(CreateChatThreadOptions body)
  nameWithType: AzureCommunicationChatServiceImpl.createChatThreadAsync(CreateChatThreadOptions body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadAsync(CreateChatThreadOptions body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Creates a chat thread.
  syntax:
    content: public Mono<MultiStatusResponse> createChatThreadAsync(CreateChatThreadOptions body)
    parameters:
    - id: body
      type: com.azure.communication.chat.implementation.models.CreateChatThreadOptions
      description: Request payload for creating a chat thread.
    return:
      type: reactor.core.publisher.Mono<com.azure.communication.chat.implementation.models.MultiStatusResponse>
      description: the response.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadAsync(com.azure.communication.chat.implementation.models.CreateChatThreadOptions,com.azure.core.util.Context)
  id: createChatThreadAsync(com.azure.communication.chat.implementation.models.CreateChatThreadOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: createChatThreadAsync(CreateChatThreadOptions body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.createChatThreadAsync(CreateChatThreadOptions body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadAsync(CreateChatThreadOptions body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Creates a chat thread.
  syntax:
    content: public Mono<MultiStatusResponse> createChatThreadAsync(CreateChatThreadOptions body, Context context)
    parameters:
    - id: body
      type: com.azure.communication.chat.implementation.models.CreateChatThreadOptions
      description: Request payload for creating a chat thread.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.communication.chat.implementation.models.MultiStatusResponse>
      description: the response.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadWithResponseAsync(com.azure.communication.chat.implementation.models.CreateChatThreadOptions)
  id: createChatThreadWithResponseAsync(com.azure.communication.chat.implementation.models.CreateChatThreadOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: createChatThreadWithResponseAsync(CreateChatThreadOptions body)
  nameWithType: AzureCommunicationChatServiceImpl.createChatThreadWithResponseAsync(CreateChatThreadOptions body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadWithResponseAsync(CreateChatThreadOptions body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Creates a chat thread.
  syntax:
    content: public Mono<Response<MultiStatusResponse>> createChatThreadWithResponseAsync(CreateChatThreadOptions body)
    parameters:
    - id: body
      type: com.azure.communication.chat.implementation.models.CreateChatThreadOptions
      description: Request payload for creating a chat thread.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.communication.chat.implementation.models.MultiStatusResponse>>
      description: the response.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadWithResponseAsync(com.azure.communication.chat.implementation.models.CreateChatThreadOptions,com.azure.core.util.Context)
  id: createChatThreadWithResponseAsync(com.azure.communication.chat.implementation.models.CreateChatThreadOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: createChatThreadWithResponseAsync(CreateChatThreadOptions body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.createChatThreadWithResponseAsync(CreateChatThreadOptions body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadWithResponseAsync(CreateChatThreadOptions body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Creates a chat thread.
  syntax:
    content: public Mono<Response<MultiStatusResponse>> createChatThreadWithResponseAsync(CreateChatThreadOptions body, Context context)
    parameters:
    - id: body
      type: com.azure.communication.chat.implementation.models.CreateChatThreadOptions
      description: Request payload for creating a chat thread.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.communication.chat.implementation.models.MultiStatusResponse>>
      description: the response.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessage(java.lang.String,java.lang.String)
  id: deleteChatMessage(java.lang.String,java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: deleteChatMessage(String chatThreadId, String chatMessageId)
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatMessage(String chatThreadId, String chatMessageId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessage(String chatThreadId, String chatMessageId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessage*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Deletes a message.
  syntax:
    content: public void deleteChatMessage(String chatThreadId, String chatMessageId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessage(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteChatMessage(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: deleteChatMessage(String chatThreadId, String chatMessageId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatMessage(String chatThreadId, String chatMessageId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessage(String chatThreadId, String chatMessageId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessage*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Deletes a message.
  syntax:
    content: public void deleteChatMessage(String chatThreadId, String chatMessageId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageAsync(java.lang.String,java.lang.String)
  id: deleteChatMessageAsync(java.lang.String,java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: deleteChatMessageAsync(String chatThreadId, String chatMessageId)
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatMessageAsync(String chatThreadId, String chatMessageId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageAsync(String chatThreadId, String chatMessageId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Deletes a message.
  syntax:
    content: public Mono<Void> deleteChatMessageAsync(String chatThreadId, String chatMessageId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteChatMessageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: deleteChatMessageAsync(String chatThreadId, String chatMessageId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatMessageAsync(String chatThreadId, String chatMessageId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageAsync(String chatThreadId, String chatMessageId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Deletes a message.
  syntax:
    content: public Mono<Void> deleteChatMessageAsync(String chatThreadId, String chatMessageId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteChatMessageWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: deleteChatMessageWithResponseAsync(String chatThreadId, String chatMessageId)
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatMessageWithResponseAsync(String chatThreadId, String chatMessageId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageWithResponseAsync(String chatThreadId, String chatMessageId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Deletes a message.
  syntax:
    content: public Mono<Response<Void>> deleteChatMessageWithResponseAsync(String chatThreadId, String chatMessageId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteChatMessageWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: deleteChatMessageWithResponseAsync(String chatThreadId, String chatMessageId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatMessageWithResponseAsync(String chatThreadId, String chatMessageId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageWithResponseAsync(String chatThreadId, String chatMessageId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Deletes a message.
  syntax:
    content: public Mono<Response<Void>> deleteChatMessageWithResponseAsync(String chatThreadId, String chatMessageId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThread(java.lang.String)
  id: deleteChatThread(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: deleteChatThread(String chatThreadId)
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatThread(String chatThreadId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThread(String chatThreadId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThread*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Deletes a thread.
  syntax:
    content: public void deleteChatThread(String chatThreadId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to delete.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThread(java.lang.String,com.azure.core.util.Context)
  id: deleteChatThread(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: deleteChatThread(String chatThreadId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatThread(String chatThreadId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThread(String chatThreadId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThread*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Deletes a thread.
  syntax:
    content: public void deleteChatThread(String chatThreadId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadAsync(java.lang.String)
  id: deleteChatThreadAsync(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: deleteChatThreadAsync(String chatThreadId)
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatThreadAsync(String chatThreadId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadAsync(String chatThreadId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Deletes a thread.
  syntax:
    content: public Mono<Void> deleteChatThreadAsync(String chatThreadId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to delete.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadAsync(java.lang.String,com.azure.core.util.Context)
  id: deleteChatThreadAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: deleteChatThreadAsync(String chatThreadId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatThreadAsync(String chatThreadId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadAsync(String chatThreadId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Deletes a thread.
  syntax:
    content: public Mono<Void> deleteChatThreadAsync(String chatThreadId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadWithResponseAsync(java.lang.String)
  id: deleteChatThreadWithResponseAsync(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: deleteChatThreadWithResponseAsync(String chatThreadId)
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatThreadWithResponseAsync(String chatThreadId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadWithResponseAsync(String chatThreadId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Deletes a thread.
  syntax:
    content: public Mono<Response<Void>> deleteChatThreadWithResponseAsync(String chatThreadId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to delete.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: deleteChatThreadWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: deleteChatThreadWithResponseAsync(String chatThreadId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatThreadWithResponseAsync(String chatThreadId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadWithResponseAsync(String chatThreadId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Deletes a thread.
  syntax:
    content: public Mono<Response<Void>> deleteChatThreadWithResponseAsync(String chatThreadId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getApiVersion()
  id: getApiVersion()
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: getApiVersion()
  nameWithType: AzureCommunicationChatServiceImpl.getApiVersion()
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getApiVersion()
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getApiVersion*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets Api Version.
  syntax:
    content: public String getApiVersion()
    return:
      type: java.lang.String
      description: the apiVersion value.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessage(java.lang.String,java.lang.String)
  id: getChatMessage(java.lang.String,java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: getChatMessage(String chatThreadId, String chatMessageId)
  nameWithType: AzureCommunicationChatServiceImpl.getChatMessage(String chatThreadId, String chatMessageId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessage(String chatThreadId, String chatMessageId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessage*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a message by id.
  syntax:
    content: public ChatMessage getChatMessage(String chatThreadId, String chatMessageId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    return:
      type: com.azure.communication.chat.implementation.models.ChatMessage
      description: a message by id.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessage(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getChatMessage(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: getChatMessage(String chatThreadId, String chatMessageId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.getChatMessage(String chatThreadId, String chatMessageId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessage(String chatThreadId, String chatMessageId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessage*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a message by id.
  syntax:
    content: public ChatMessage getChatMessage(String chatThreadId, String chatMessageId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.communication.chat.implementation.models.ChatMessage
      description: a message by id.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageAsync(java.lang.String,java.lang.String)
  id: getChatMessageAsync(java.lang.String,java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: getChatMessageAsync(String chatThreadId, String chatMessageId)
  nameWithType: AzureCommunicationChatServiceImpl.getChatMessageAsync(String chatThreadId, String chatMessageId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageAsync(String chatThreadId, String chatMessageId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a message by id.
  syntax:
    content: public Mono<ChatMessage> getChatMessageAsync(String chatThreadId, String chatMessageId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    return:
      type: reactor.core.publisher.Mono<com.azure.communication.chat.implementation.models.ChatMessage>
      description: a message by id.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getChatMessageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: getChatMessageAsync(String chatThreadId, String chatMessageId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.getChatMessageAsync(String chatThreadId, String chatMessageId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageAsync(String chatThreadId, String chatMessageId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a message by id.
  syntax:
    content: public Mono<ChatMessage> getChatMessageAsync(String chatThreadId, String chatMessageId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.communication.chat.implementation.models.ChatMessage>
      description: a message by id.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageWithResponseAsync(java.lang.String,java.lang.String)
  id: getChatMessageWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: getChatMessageWithResponseAsync(String chatThreadId, String chatMessageId)
  nameWithType: AzureCommunicationChatServiceImpl.getChatMessageWithResponseAsync(String chatThreadId, String chatMessageId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageWithResponseAsync(String chatThreadId, String chatMessageId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a message by id.
  syntax:
    content: public Mono<Response<ChatMessage>> getChatMessageWithResponseAsync(String chatThreadId, String chatMessageId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.communication.chat.implementation.models.ChatMessage>>
      description: a message by id.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getChatMessageWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: getChatMessageWithResponseAsync(String chatThreadId, String chatMessageId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.getChatMessageWithResponseAsync(String chatThreadId, String chatMessageId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageWithResponseAsync(String chatThreadId, String chatMessageId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a message by id.
  syntax:
    content: public Mono<Response<ChatMessage>> getChatMessageWithResponseAsync(String chatThreadId, String chatMessageId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.communication.chat.implementation.models.ChatMessage>>
      description: a message by id.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThread(java.lang.String)
  id: getChatThread(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: getChatThread(String chatThreadId)
  nameWithType: AzureCommunicationChatServiceImpl.getChatThread(String chatThreadId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThread(String chatThreadId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThread*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a chat thread.
  syntax:
    content: public ChatThread getChatThread(String chatThreadId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get.
    return:
      type: com.azure.communication.chat.implementation.models.ChatThread
      description: a chat thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThread(java.lang.String,com.azure.core.util.Context)
  id: getChatThread(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: getChatThread(String chatThreadId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.getChatThread(String chatThreadId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThread(String chatThreadId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThread*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a chat thread.
  syntax:
    content: public ChatThread getChatThread(String chatThreadId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.communication.chat.implementation.models.ChatThread
      description: a chat thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadAsync(java.lang.String)
  id: getChatThreadAsync(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: getChatThreadAsync(String chatThreadId)
  nameWithType: AzureCommunicationChatServiceImpl.getChatThreadAsync(String chatThreadId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadAsync(String chatThreadId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a chat thread.
  syntax:
    content: public Mono<ChatThread> getChatThreadAsync(String chatThreadId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get.
    return:
      type: reactor.core.publisher.Mono<com.azure.communication.chat.implementation.models.ChatThread>
      description: a chat thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadAsync(java.lang.String,com.azure.core.util.Context)
  id: getChatThreadAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: getChatThreadAsync(String chatThreadId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.getChatThreadAsync(String chatThreadId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadAsync(String chatThreadId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a chat thread.
  syntax:
    content: public Mono<ChatThread> getChatThreadAsync(String chatThreadId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.communication.chat.implementation.models.ChatThread>
      description: a chat thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadWithResponseAsync(java.lang.String)
  id: getChatThreadWithResponseAsync(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: getChatThreadWithResponseAsync(String chatThreadId)
  nameWithType: AzureCommunicationChatServiceImpl.getChatThreadWithResponseAsync(String chatThreadId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadWithResponseAsync(String chatThreadId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a chat thread.
  syntax:
    content: public Mono<Response<ChatThread>> getChatThreadWithResponseAsync(String chatThreadId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.communication.chat.implementation.models.ChatThread>>
      description: a chat thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: getChatThreadWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: getChatThreadWithResponseAsync(String chatThreadId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.getChatThreadWithResponseAsync(String chatThreadId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadWithResponseAsync(String chatThreadId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a chat thread.
  syntax:
    content: public Mono<Response<ChatThread>> getChatThreadWithResponseAsync(String chatThreadId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.communication.chat.implementation.models.ChatThread>>
      description: a chat thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getEndpoint()
  id: getEndpoint()
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: getEndpoint()
  nameWithType: AzureCommunicationChatServiceImpl.getEndpoint()
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getEndpoint()
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getEndpoint*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets The endpoint of the Azure Communication resource.
  syntax:
    content: public String getEndpoint()
    return:
      type: java.lang.String
      description: the endpoint value.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getHttpPipeline()
  id: getHttpPipeline()
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: getHttpPipeline()
  nameWithType: AzureCommunicationChatServiceImpl.getHttpPipeline()
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getHttpPipeline()
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getHttpPipeline*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets The HTTP pipeline to send requests through.
  syntax:
    content: public HttpPipeline getHttpPipeline()
    return:
      type: com.azure.core.http.HttpPipeline
      description: the httpPipeline value.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getSerializerAdapter()
  id: getSerializerAdapter()
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: getSerializerAdapter()
  nameWithType: AzureCommunicationChatServiceImpl.getSerializerAdapter()
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getSerializerAdapter()
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getSerializerAdapter*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets The serializer to serialize an object into a string.
  syntax:
    content: public SerializerAdapter getSerializerAdapter()
    return:
      type: com.azure.core.util.serializer.SerializerAdapter
      description: the serializerAdapter value.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessages(java.lang.String)
  id: listChatMessages(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatMessages(String chatThreadId)
  nameWithType: AzureCommunicationChatServiceImpl.listChatMessages(String chatThreadId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessages(String chatThreadId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessages*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a list of messages from a thread.
  syntax:
    content: public PagedIterable<ChatMessage> listChatMessages(String chatThreadId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id of the message.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.communication.chat.implementation.models.ChatMessage>
      description: a list of messages from a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessages(java.lang.String,java.lang.Integer,java.time.OffsetDateTime)
  id: listChatMessages(java.lang.String,java.lang.Integer,java.time.OffsetDateTime)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatMessages(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime)
  nameWithType: AzureCommunicationChatServiceImpl.listChatMessages(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessages(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessages*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a list of messages from a thread.
  syntax:
    content: public PagedIterable<ChatMessage> listChatMessages(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id of the message.
    - id: maxPageSize
      type: java.lang.Integer
      description: The maximum number of messages to be returned per page.
    - id: startTime
      type: java.time.OffsetDateTime
      description: >-
        The earliest point in time to get messages up to. The timestamp should be in ISO8601 format:
             `yyyy-MM-ddTHH:mm:ssZ`.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.communication.chat.implementation.models.ChatMessage>
      description: a list of messages from a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessages(java.lang.String,java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  id: listChatMessages(java.lang.String,java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatMessages(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.listChatMessages(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessages(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessages*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a list of messages from a thread.
  syntax:
    content: public PagedIterable<ChatMessage> listChatMessages(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id of the message.
    - id: maxPageSize
      type: java.lang.Integer
      description: The maximum number of messages to be returned per page.
    - id: startTime
      type: java.time.OffsetDateTime
      description: >-
        The earliest point in time to get messages up to. The timestamp should be in ISO8601 format:
             `yyyy-MM-ddTHH:mm:ssZ`.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.communication.chat.implementation.models.ChatMessage>
      description: a list of messages from a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesAsync(java.lang.String)
  id: listChatMessagesAsync(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatMessagesAsync(String chatThreadId)
  nameWithType: AzureCommunicationChatServiceImpl.listChatMessagesAsync(String chatThreadId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesAsync(String chatThreadId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a list of messages from a thread.
  syntax:
    content: public PagedFlux<ChatMessage> listChatMessagesAsync(String chatThreadId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id of the message.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.implementation.models.ChatMessage>
      description: a list of messages from a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesAsync(java.lang.String,java.lang.Integer,java.time.OffsetDateTime)
  id: listChatMessagesAsync(java.lang.String,java.lang.Integer,java.time.OffsetDateTime)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatMessagesAsync(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime)
  nameWithType: AzureCommunicationChatServiceImpl.listChatMessagesAsync(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesAsync(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a list of messages from a thread.
  syntax:
    content: public PagedFlux<ChatMessage> listChatMessagesAsync(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id of the message.
    - id: maxPageSize
      type: java.lang.Integer
      description: The maximum number of messages to be returned per page.
    - id: startTime
      type: java.time.OffsetDateTime
      description: >-
        The earliest point in time to get messages up to. The timestamp should be in ISO8601 format:
             `yyyy-MM-ddTHH:mm:ssZ`.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.implementation.models.ChatMessage>
      description: a list of messages from a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesAsync(java.lang.String,java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  id: listChatMessagesAsync(java.lang.String,java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatMessagesAsync(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.listChatMessagesAsync(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesAsync(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a list of messages from a thread.
  syntax:
    content: public PagedFlux<ChatMessage> listChatMessagesAsync(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id of the message.
    - id: maxPageSize
      type: java.lang.Integer
      description: The maximum number of messages to be returned per page.
    - id: startTime
      type: java.time.OffsetDateTime
      description: >-
        The earliest point in time to get messages up to. The timestamp should be in ISO8601 format:
             `yyyy-MM-ddTHH:mm:ssZ`.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.implementation.models.ChatMessage>
      description: a list of messages from a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesNextSinglePageAsync(java.lang.String)
  id: listChatMessagesNextSinglePageAsync(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatMessagesNextSinglePageAsync(String nextLink)
  nameWithType: AzureCommunicationChatServiceImpl.listChatMessagesNextSinglePageAsync(String nextLink)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesNextSinglePageAsync(String nextLink)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesNextSinglePageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ChatMessage>> listChatMessagesNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.implementation.models.ChatMessage>>
      description: collection of chat messages for a particular chat thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listChatMessagesNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatMessagesNextSinglePageAsync(String nextLink, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.listChatMessagesNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesNextSinglePageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ChatMessage>> listChatMessagesNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.implementation.models.ChatMessage>>
      description: collection of chat messages for a particular chat thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesSinglePageAsync(java.lang.String,java.lang.Integer,java.time.OffsetDateTime)
  id: listChatMessagesSinglePageAsync(java.lang.String,java.lang.Integer,java.time.OffsetDateTime)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatMessagesSinglePageAsync(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime)
  nameWithType: AzureCommunicationChatServiceImpl.listChatMessagesSinglePageAsync(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesSinglePageAsync(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesSinglePageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a list of messages from a thread.
  syntax:
    content: public Mono<PagedResponse<ChatMessage>> listChatMessagesSinglePageAsync(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id of the message.
    - id: maxPageSize
      type: java.lang.Integer
      description: The maximum number of messages to be returned per page.
    - id: startTime
      type: java.time.OffsetDateTime
      description: >-
        The earliest point in time to get messages up to. The timestamp should be in ISO8601 format:
             `yyyy-MM-ddTHH:mm:ssZ`.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.implementation.models.ChatMessage>>
      description: a list of messages from a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesSinglePageAsync(java.lang.String,java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  id: listChatMessagesSinglePageAsync(java.lang.String,java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatMessagesSinglePageAsync(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.listChatMessagesSinglePageAsync(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesSinglePageAsync(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesSinglePageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets a list of messages from a thread.
  syntax:
    content: public Mono<PagedResponse<ChatMessage>> listChatMessagesSinglePageAsync(String chatThreadId, Integer maxPageSize, OffsetDateTime startTime, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id of the message.
    - id: maxPageSize
      type: java.lang.Integer
      description: The maximum number of messages to be returned per page.
    - id: startTime
      type: java.time.OffsetDateTime
      description: >-
        The earliest point in time to get messages up to. The timestamp should be in ISO8601 format:
             `yyyy-MM-ddTHH:mm:ssZ`.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.implementation.models.ChatMessage>>
      description: a list of messages from a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceipts(java.lang.String)
  id: listChatReadReceipts(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatReadReceipts(String chatThreadId)
  nameWithType: AzureCommunicationChatServiceImpl.listChatReadReceipts(String chatThreadId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceipts(String chatThreadId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceipts*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets read receipts for a thread.
  syntax:
    content: public PagedIterable<ReadReceipt> listChatReadReceipts(String chatThreadId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get the read receipts for.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.communication.chat.implementation.models.ReadReceipt>
      description: read receipts for a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceipts(java.lang.String,com.azure.core.util.Context)
  id: listChatReadReceipts(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatReadReceipts(String chatThreadId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.listChatReadReceipts(String chatThreadId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceipts(String chatThreadId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceipts*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets read receipts for a thread.
  syntax:
    content: public PagedIterable<ReadReceipt> listChatReadReceipts(String chatThreadId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get the read receipts for.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.communication.chat.implementation.models.ReadReceipt>
      description: read receipts for a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsAsync(java.lang.String)
  id: listChatReadReceiptsAsync(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatReadReceiptsAsync(String chatThreadId)
  nameWithType: AzureCommunicationChatServiceImpl.listChatReadReceiptsAsync(String chatThreadId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsAsync(String chatThreadId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets read receipts for a thread.
  syntax:
    content: public PagedFlux<ReadReceipt> listChatReadReceiptsAsync(String chatThreadId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get the read receipts for.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.implementation.models.ReadReceipt>
      description: read receipts for a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsAsync(java.lang.String,com.azure.core.util.Context)
  id: listChatReadReceiptsAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatReadReceiptsAsync(String chatThreadId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.listChatReadReceiptsAsync(String chatThreadId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsAsync(String chatThreadId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets read receipts for a thread.
  syntax:
    content: public PagedFlux<ReadReceipt> listChatReadReceiptsAsync(String chatThreadId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get the read receipts for.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.implementation.models.ReadReceipt>
      description: read receipts for a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsNextSinglePageAsync(java.lang.String)
  id: listChatReadReceiptsNextSinglePageAsync(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatReadReceiptsNextSinglePageAsync(String nextLink)
  nameWithType: AzureCommunicationChatServiceImpl.listChatReadReceiptsNextSinglePageAsync(String nextLink)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsNextSinglePageAsync(String nextLink)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsNextSinglePageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ReadReceipt>> listChatReadReceiptsNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.implementation.models.ReadReceipt>>
      description: the response.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listChatReadReceiptsNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatReadReceiptsNextSinglePageAsync(String nextLink, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.listChatReadReceiptsNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsNextSinglePageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ReadReceipt>> listChatReadReceiptsNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.implementation.models.ReadReceipt>>
      description: the response.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsSinglePageAsync(java.lang.String)
  id: listChatReadReceiptsSinglePageAsync(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatReadReceiptsSinglePageAsync(String chatThreadId)
  nameWithType: AzureCommunicationChatServiceImpl.listChatReadReceiptsSinglePageAsync(String chatThreadId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsSinglePageAsync(String chatThreadId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsSinglePageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets read receipts for a thread.
  syntax:
    content: public Mono<PagedResponse<ReadReceipt>> listChatReadReceiptsSinglePageAsync(String chatThreadId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get the read receipts for.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.implementation.models.ReadReceipt>>
      description: read receipts for a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listChatReadReceiptsSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatReadReceiptsSinglePageAsync(String chatThreadId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.listChatReadReceiptsSinglePageAsync(String chatThreadId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsSinglePageAsync(String chatThreadId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsSinglePageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets read receipts for a thread.
  syntax:
    content: public Mono<PagedResponse<ReadReceipt>> listChatReadReceiptsSinglePageAsync(String chatThreadId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get the read receipts for.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.implementation.models.ReadReceipt>>
      description: read receipts for a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembers(java.lang.String)
  id: listChatThreadMembers(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreadMembers(String chatThreadId)
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadMembers(String chatThreadId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembers(String chatThreadId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembers*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets the members of a thread.
  syntax:
    content: public PagedIterable<ChatThreadMember> listChatThreadMembers(String chatThreadId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get members for.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.communication.chat.implementation.models.ChatThreadMember>
      description: the members of a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembers(java.lang.String,com.azure.core.util.Context)
  id: listChatThreadMembers(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreadMembers(String chatThreadId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadMembers(String chatThreadId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembers(String chatThreadId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembers*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets the members of a thread.
  syntax:
    content: public PagedIterable<ChatThreadMember> listChatThreadMembers(String chatThreadId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get members for.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.communication.chat.implementation.models.ChatThreadMember>
      description: the members of a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersAsync(java.lang.String)
  id: listChatThreadMembersAsync(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreadMembersAsync(String chatThreadId)
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadMembersAsync(String chatThreadId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersAsync(String chatThreadId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets the members of a thread.
  syntax:
    content: public PagedFlux<ChatThreadMember> listChatThreadMembersAsync(String chatThreadId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get members for.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.implementation.models.ChatThreadMember>
      description: the members of a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersAsync(java.lang.String,com.azure.core.util.Context)
  id: listChatThreadMembersAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreadMembersAsync(String chatThreadId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadMembersAsync(String chatThreadId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersAsync(String chatThreadId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets the members of a thread.
  syntax:
    content: public PagedFlux<ChatThreadMember> listChatThreadMembersAsync(String chatThreadId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get members for.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.implementation.models.ChatThreadMember>
      description: the members of a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersNextSinglePageAsync(java.lang.String)
  id: listChatThreadMembersNextSinglePageAsync(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreadMembersNextSinglePageAsync(String nextLink)
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadMembersNextSinglePageAsync(String nextLink)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersNextSinglePageAsync(String nextLink)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersNextSinglePageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ChatThreadMember>> listChatThreadMembersNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.implementation.models.ChatThreadMember>>
      description: collection of thread members belong to a particular thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listChatThreadMembersNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreadMembersNextSinglePageAsync(String nextLink, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadMembersNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersNextSinglePageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ChatThreadMember>> listChatThreadMembersNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.implementation.models.ChatThreadMember>>
      description: collection of thread members belong to a particular thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersSinglePageAsync(java.lang.String)
  id: listChatThreadMembersSinglePageAsync(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreadMembersSinglePageAsync(String chatThreadId)
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadMembersSinglePageAsync(String chatThreadId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersSinglePageAsync(String chatThreadId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersSinglePageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets the members of a thread.
  syntax:
    content: public Mono<PagedResponse<ChatThreadMember>> listChatThreadMembersSinglePageAsync(String chatThreadId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get members for.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.implementation.models.ChatThreadMember>>
      description: the members of a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listChatThreadMembersSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreadMembersSinglePageAsync(String chatThreadId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadMembersSinglePageAsync(String chatThreadId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersSinglePageAsync(String chatThreadId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersSinglePageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets the members of a thread.
  syntax:
    content: public Mono<PagedResponse<ChatThreadMember>> listChatThreadMembersSinglePageAsync(String chatThreadId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to get members for.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.implementation.models.ChatThreadMember>>
      description: the members of a thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreads()
  id: listChatThreads()
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreads()
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreads()
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreads()
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreads*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets the list of chat threads of a user.
  syntax:
    content: public PagedIterable<ChatThreadInfo> listChatThreads()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.communication.chat.models.ChatThreadInfo>
      description: the list of chat threads of a user.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreads(java.lang.Integer,java.time.OffsetDateTime)
  id: listChatThreads(java.lang.Integer,java.time.OffsetDateTime)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreads(Integer maxPageSize, OffsetDateTime startTime)
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreads(Integer maxPageSize, OffsetDateTime startTime)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreads(Integer maxPageSize, OffsetDateTime startTime)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreads*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets the list of chat threads of a user.
  syntax:
    content: public PagedIterable<ChatThreadInfo> listChatThreads(Integer maxPageSize, OffsetDateTime startTime)
    parameters:
    - id: maxPageSize
      type: java.lang.Integer
      description: The maximum number of chat threads returned per page.
    - id: startTime
      type: java.time.OffsetDateTime
      description: >-
        The earliest point in time to get chat threads up to. The timestamp should be in ISO8601 format:
             `yyyy-MM-ddTHH:mm:ssZ`.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.communication.chat.models.ChatThreadInfo>
      description: the list of chat threads of a user.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreads(java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  id: listChatThreads(java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreads(Integer maxPageSize, OffsetDateTime startTime, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreads(Integer maxPageSize, OffsetDateTime startTime, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreads(Integer maxPageSize, OffsetDateTime startTime, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreads*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets the list of chat threads of a user.
  syntax:
    content: public PagedIterable<ChatThreadInfo> listChatThreads(Integer maxPageSize, OffsetDateTime startTime, Context context)
    parameters:
    - id: maxPageSize
      type: java.lang.Integer
      description: The maximum number of chat threads returned per page.
    - id: startTime
      type: java.time.OffsetDateTime
      description: >-
        The earliest point in time to get chat threads up to. The timestamp should be in ISO8601 format:
             `yyyy-MM-ddTHH:mm:ssZ`.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.communication.chat.models.ChatThreadInfo>
      description: the list of chat threads of a user.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsAsync()
  id: listChatThreadsAsync()
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreadsAsync()
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadsAsync()
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsAsync()
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets the list of chat threads of a user.
  syntax:
    content: public PagedFlux<ChatThreadInfo> listChatThreadsAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.models.ChatThreadInfo>
      description: the list of chat threads of a user.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsAsync(java.lang.Integer,java.time.OffsetDateTime)
  id: listChatThreadsAsync(java.lang.Integer,java.time.OffsetDateTime)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreadsAsync(Integer maxPageSize, OffsetDateTime startTime)
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadsAsync(Integer maxPageSize, OffsetDateTime startTime)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsAsync(Integer maxPageSize, OffsetDateTime startTime)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets the list of chat threads of a user.
  syntax:
    content: public PagedFlux<ChatThreadInfo> listChatThreadsAsync(Integer maxPageSize, OffsetDateTime startTime)
    parameters:
    - id: maxPageSize
      type: java.lang.Integer
      description: The maximum number of chat threads returned per page.
    - id: startTime
      type: java.time.OffsetDateTime
      description: >-
        The earliest point in time to get chat threads up to. The timestamp should be in ISO8601 format:
             `yyyy-MM-ddTHH:mm:ssZ`.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.models.ChatThreadInfo>
      description: the list of chat threads of a user.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsAsync(java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  id: listChatThreadsAsync(java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreadsAsync(Integer maxPageSize, OffsetDateTime startTime, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadsAsync(Integer maxPageSize, OffsetDateTime startTime, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsAsync(Integer maxPageSize, OffsetDateTime startTime, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets the list of chat threads of a user.
  syntax:
    content: public PagedFlux<ChatThreadInfo> listChatThreadsAsync(Integer maxPageSize, OffsetDateTime startTime, Context context)
    parameters:
    - id: maxPageSize
      type: java.lang.Integer
      description: The maximum number of chat threads returned per page.
    - id: startTime
      type: java.time.OffsetDateTime
      description: >-
        The earliest point in time to get chat threads up to. The timestamp should be in ISO8601 format:
             `yyyy-MM-ddTHH:mm:ssZ`.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.models.ChatThreadInfo>
      description: the list of chat threads of a user.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsNextSinglePageAsync(java.lang.String)
  id: listChatThreadsNextSinglePageAsync(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreadsNextSinglePageAsync(String nextLink)
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadsNextSinglePageAsync(String nextLink)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsNextSinglePageAsync(String nextLink)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsNextSinglePageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ChatThreadInfo>> listChatThreadsNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.models.ChatThreadInfo>>
      description: collection of chat threads.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listChatThreadsNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreadsNextSinglePageAsync(String nextLink, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadsNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsNextSinglePageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ChatThreadInfo>> listChatThreadsNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.models.ChatThreadInfo>>
      description: collection of chat threads.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsSinglePageAsync(java.lang.Integer,java.time.OffsetDateTime)
  id: listChatThreadsSinglePageAsync(java.lang.Integer,java.time.OffsetDateTime)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreadsSinglePageAsync(Integer maxPageSize, OffsetDateTime startTime)
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadsSinglePageAsync(Integer maxPageSize, OffsetDateTime startTime)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsSinglePageAsync(Integer maxPageSize, OffsetDateTime startTime)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsSinglePageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets the list of chat threads of a user.
  syntax:
    content: public Mono<PagedResponse<ChatThreadInfo>> listChatThreadsSinglePageAsync(Integer maxPageSize, OffsetDateTime startTime)
    parameters:
    - id: maxPageSize
      type: java.lang.Integer
      description: The maximum number of chat threads returned per page.
    - id: startTime
      type: java.time.OffsetDateTime
      description: >-
        The earliest point in time to get chat threads up to. The timestamp should be in ISO8601 format:
             `yyyy-MM-ddTHH:mm:ssZ`.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.models.ChatThreadInfo>>
      description: the list of chat threads of a user.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsSinglePageAsync(java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  id: listChatThreadsSinglePageAsync(java.lang.Integer,java.time.OffsetDateTime,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: listChatThreadsSinglePageAsync(Integer maxPageSize, OffsetDateTime startTime, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadsSinglePageAsync(Integer maxPageSize, OffsetDateTime startTime, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsSinglePageAsync(Integer maxPageSize, OffsetDateTime startTime, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsSinglePageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Gets the list of chat threads of a user.
  syntax:
    content: public Mono<PagedResponse<ChatThreadInfo>> listChatThreadsSinglePageAsync(Integer maxPageSize, OffsetDateTime startTime, Context context)
    parameters:
    - id: maxPageSize
      type: java.lang.Integer
      description: The maximum number of chat threads returned per page.
    - id: startTime
      type: java.time.OffsetDateTime
      description: >-
        The earliest point in time to get chat threads up to. The timestamp should be in ISO8601 format:
             `yyyy-MM-ddTHH:mm:ssZ`.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.models.ChatThreadInfo>>
      description: the list of chat threads of a user.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMember(java.lang.String,java.lang.String)
  id: removeChatThreadMember(java.lang.String,java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: removeChatThreadMember(String chatThreadId, String chatMemberId)
  nameWithType: AzureCommunicationChatServiceImpl.removeChatThreadMember(String chatThreadId, String chatMemberId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMember(String chatThreadId, String chatMemberId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMember*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Remove a member from a thread.
  syntax:
    content: public void removeChatThreadMember(String chatThreadId, String chatMemberId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to remove the member from.
    - id: chatMemberId
      type: java.lang.String
      description: Id of the thread member to remove from the thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMember(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: removeChatThreadMember(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: removeChatThreadMember(String chatThreadId, String chatMemberId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.removeChatThreadMember(String chatThreadId, String chatMemberId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMember(String chatThreadId, String chatMemberId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMember*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Remove a member from a thread.
  syntax:
    content: public void removeChatThreadMember(String chatThreadId, String chatMemberId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to remove the member from.
    - id: chatMemberId
      type: java.lang.String
      description: Id of the thread member to remove from the thread.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberAsync(java.lang.String,java.lang.String)
  id: removeChatThreadMemberAsync(java.lang.String,java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: removeChatThreadMemberAsync(String chatThreadId, String chatMemberId)
  nameWithType: AzureCommunicationChatServiceImpl.removeChatThreadMemberAsync(String chatThreadId, String chatMemberId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberAsync(String chatThreadId, String chatMemberId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Remove a member from a thread.
  syntax:
    content: public Mono<Void> removeChatThreadMemberAsync(String chatThreadId, String chatMemberId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to remove the member from.
    - id: chatMemberId
      type: java.lang.String
      description: Id of the thread member to remove from the thread.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: removeChatThreadMemberAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: removeChatThreadMemberAsync(String chatThreadId, String chatMemberId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.removeChatThreadMemberAsync(String chatThreadId, String chatMemberId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberAsync(String chatThreadId, String chatMemberId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Remove a member from a thread.
  syntax:
    content: public Mono<Void> removeChatThreadMemberAsync(String chatThreadId, String chatMemberId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to remove the member from.
    - id: chatMemberId
      type: java.lang.String
      description: Id of the thread member to remove from the thread.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberWithResponseAsync(java.lang.String,java.lang.String)
  id: removeChatThreadMemberWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: removeChatThreadMemberWithResponseAsync(String chatThreadId, String chatMemberId)
  nameWithType: AzureCommunicationChatServiceImpl.removeChatThreadMemberWithResponseAsync(String chatThreadId, String chatMemberId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberWithResponseAsync(String chatThreadId, String chatMemberId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Remove a member from a thread.
  syntax:
    content: public Mono<Response<Void>> removeChatThreadMemberWithResponseAsync(String chatThreadId, String chatMemberId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to remove the member from.
    - id: chatMemberId
      type: java.lang.String
      description: Id of the thread member to remove from the thread.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: removeChatThreadMemberWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: removeChatThreadMemberWithResponseAsync(String chatThreadId, String chatMemberId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.removeChatThreadMemberWithResponseAsync(String chatThreadId, String chatMemberId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberWithResponseAsync(String chatThreadId, String chatMemberId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Remove a member from a thread.
  syntax:
    content: public Mono<Response<Void>> removeChatThreadMemberWithResponseAsync(String chatThreadId, String chatMemberId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to remove the member from.
    - id: chatMemberId
      type: java.lang.String
      description: Id of the thread member to remove from the thread.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessage(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions)
  id: sendChatMessage(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendChatMessage(String chatThreadId, SendChatMessageOptions body)
  nameWithType: AzureCommunicationChatServiceImpl.sendChatMessage(String chatThreadId, SendChatMessageOptions body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessage(String chatThreadId, SendChatMessageOptions body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessage*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Sends a message to a thread.
  syntax:
    content: public SendChatMessageResult sendChatMessage(String chatThreadId, SendChatMessageOptions body)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to send the message to.
    - id: body
      type: com.azure.communication.chat.models.SendChatMessageOptions
      description: Details of the message to send.
    return:
      type: com.azure.communication.chat.models.SendChatMessageResult
      description: result of the send message operation.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessage(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions,com.azure.core.util.Context)
  id: sendChatMessage(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendChatMessage(String chatThreadId, SendChatMessageOptions body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.sendChatMessage(String chatThreadId, SendChatMessageOptions body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessage(String chatThreadId, SendChatMessageOptions body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessage*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Sends a message to a thread.
  syntax:
    content: public SendChatMessageResult sendChatMessage(String chatThreadId, SendChatMessageOptions body, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to send the message to.
    - id: body
      type: com.azure.communication.chat.models.SendChatMessageOptions
      description: Details of the message to send.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.communication.chat.models.SendChatMessageResult
      description: result of the send message operation.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageAsync(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions)
  id: sendChatMessageAsync(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendChatMessageAsync(String chatThreadId, SendChatMessageOptions body)
  nameWithType: AzureCommunicationChatServiceImpl.sendChatMessageAsync(String chatThreadId, SendChatMessageOptions body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageAsync(String chatThreadId, SendChatMessageOptions body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Sends a message to a thread.
  syntax:
    content: public Mono<SendChatMessageResult> sendChatMessageAsync(String chatThreadId, SendChatMessageOptions body)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to send the message to.
    - id: body
      type: com.azure.communication.chat.models.SendChatMessageOptions
      description: Details of the message to send.
    return:
      type: reactor.core.publisher.Mono<com.azure.communication.chat.models.SendChatMessageResult>
      description: result of the send message operation.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageAsync(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions,com.azure.core.util.Context)
  id: sendChatMessageAsync(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendChatMessageAsync(String chatThreadId, SendChatMessageOptions body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.sendChatMessageAsync(String chatThreadId, SendChatMessageOptions body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageAsync(String chatThreadId, SendChatMessageOptions body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Sends a message to a thread.
  syntax:
    content: public Mono<SendChatMessageResult> sendChatMessageAsync(String chatThreadId, SendChatMessageOptions body, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to send the message to.
    - id: body
      type: com.azure.communication.chat.models.SendChatMessageOptions
      description: Details of the message to send.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.communication.chat.models.SendChatMessageResult>
      description: result of the send message operation.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageWithResponseAsync(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions)
  id: sendChatMessageWithResponseAsync(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendChatMessageWithResponseAsync(String chatThreadId, SendChatMessageOptions body)
  nameWithType: AzureCommunicationChatServiceImpl.sendChatMessageWithResponseAsync(String chatThreadId, SendChatMessageOptions body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageWithResponseAsync(String chatThreadId, SendChatMessageOptions body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Sends a message to a thread.
  syntax:
    content: public Mono<Response<SendChatMessageResult>> sendChatMessageWithResponseAsync(String chatThreadId, SendChatMessageOptions body)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to send the message to.
    - id: body
      type: com.azure.communication.chat.models.SendChatMessageOptions
      description: Details of the message to send.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.communication.chat.models.SendChatMessageResult>>
      description: result of the send message operation.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageWithResponseAsync(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions,com.azure.core.util.Context)
  id: sendChatMessageWithResponseAsync(java.lang.String,com.azure.communication.chat.models.SendChatMessageOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendChatMessageWithResponseAsync(String chatThreadId, SendChatMessageOptions body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.sendChatMessageWithResponseAsync(String chatThreadId, SendChatMessageOptions body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageWithResponseAsync(String chatThreadId, SendChatMessageOptions body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Sends a message to a thread.
  syntax:
    content: public Mono<Response<SendChatMessageResult>> sendChatMessageWithResponseAsync(String chatThreadId, SendChatMessageOptions body, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to send the message to.
    - id: body
      type: com.azure.communication.chat.models.SendChatMessageOptions
      description: Details of the message to send.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.communication.chat.models.SendChatMessageResult>>
      description: result of the send message operation.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceipt(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest)
  id: sendChatReadReceipt(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendChatReadReceipt(String chatThreadId, SendReadReceiptRequest body)
  nameWithType: AzureCommunicationChatServiceImpl.sendChatReadReceipt(String chatThreadId, SendReadReceiptRequest body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceipt(String chatThreadId, SendReadReceiptRequest body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceipt*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Sends a read receipt event to a thread, on behalf of a user.
  syntax:
    content: public void sendChatReadReceipt(String chatThreadId, SendReadReceiptRequest body)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to send the read receipt event to.
    - id: body
      type: com.azure.communication.chat.implementation.models.SendReadReceiptRequest
      description: Request payload for sending a read receipt.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceipt(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest,com.azure.core.util.Context)
  id: sendChatReadReceipt(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendChatReadReceipt(String chatThreadId, SendReadReceiptRequest body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.sendChatReadReceipt(String chatThreadId, SendReadReceiptRequest body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceipt(String chatThreadId, SendReadReceiptRequest body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceipt*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Sends a read receipt event to a thread, on behalf of a user.
  syntax:
    content: public void sendChatReadReceipt(String chatThreadId, SendReadReceiptRequest body, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to send the read receipt event to.
    - id: body
      type: com.azure.communication.chat.implementation.models.SendReadReceiptRequest
      description: Request payload for sending a read receipt.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptAsync(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest)
  id: sendChatReadReceiptAsync(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendChatReadReceiptAsync(String chatThreadId, SendReadReceiptRequest body)
  nameWithType: AzureCommunicationChatServiceImpl.sendChatReadReceiptAsync(String chatThreadId, SendReadReceiptRequest body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptAsync(String chatThreadId, SendReadReceiptRequest body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Sends a read receipt event to a thread, on behalf of a user.
  syntax:
    content: public Mono<Void> sendChatReadReceiptAsync(String chatThreadId, SendReadReceiptRequest body)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to send the read receipt event to.
    - id: body
      type: com.azure.communication.chat.implementation.models.SendReadReceiptRequest
      description: Request payload for sending a read receipt.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptAsync(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest,com.azure.core.util.Context)
  id: sendChatReadReceiptAsync(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendChatReadReceiptAsync(String chatThreadId, SendReadReceiptRequest body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.sendChatReadReceiptAsync(String chatThreadId, SendReadReceiptRequest body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptAsync(String chatThreadId, SendReadReceiptRequest body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Sends a read receipt event to a thread, on behalf of a user.
  syntax:
    content: public Mono<Void> sendChatReadReceiptAsync(String chatThreadId, SendReadReceiptRequest body, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to send the read receipt event to.
    - id: body
      type: com.azure.communication.chat.implementation.models.SendReadReceiptRequest
      description: Request payload for sending a read receipt.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptWithResponseAsync(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest)
  id: sendChatReadReceiptWithResponseAsync(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendChatReadReceiptWithResponseAsync(String chatThreadId, SendReadReceiptRequest body)
  nameWithType: AzureCommunicationChatServiceImpl.sendChatReadReceiptWithResponseAsync(String chatThreadId, SendReadReceiptRequest body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptWithResponseAsync(String chatThreadId, SendReadReceiptRequest body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Sends a read receipt event to a thread, on behalf of a user.
  syntax:
    content: public Mono<Response<Void>> sendChatReadReceiptWithResponseAsync(String chatThreadId, SendReadReceiptRequest body)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to send the read receipt event to.
    - id: body
      type: com.azure.communication.chat.implementation.models.SendReadReceiptRequest
      description: Request payload for sending a read receipt.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptWithResponseAsync(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest,com.azure.core.util.Context)
  id: sendChatReadReceiptWithResponseAsync(java.lang.String,com.azure.communication.chat.implementation.models.SendReadReceiptRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendChatReadReceiptWithResponseAsync(String chatThreadId, SendReadReceiptRequest body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.sendChatReadReceiptWithResponseAsync(String chatThreadId, SendReadReceiptRequest body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptWithResponseAsync(String chatThreadId, SendReadReceiptRequest body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Sends a read receipt event to a thread, on behalf of a user.
  syntax:
    content: public Mono<Response<Void>> sendChatReadReceiptWithResponseAsync(String chatThreadId, SendReadReceiptRequest body, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Thread id to send the read receipt event to.
    - id: body
      type: com.azure.communication.chat.implementation.models.SendReadReceiptRequest
      description: Request payload for sending a read receipt.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotification(java.lang.String)
  id: sendTypingNotification(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendTypingNotification(String chatThreadId)
  nameWithType: AzureCommunicationChatServiceImpl.sendTypingNotification(String chatThreadId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotification(String chatThreadId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotification*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Posts a typing event to a thread, on behalf of a user.
  syntax:
    content: public void sendTypingNotification(String chatThreadId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Id of the thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotification(java.lang.String,com.azure.core.util.Context)
  id: sendTypingNotification(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendTypingNotification(String chatThreadId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.sendTypingNotification(String chatThreadId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotification(String chatThreadId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotification*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Posts a typing event to a thread, on behalf of a user.
  syntax:
    content: public void sendTypingNotification(String chatThreadId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Id of the thread.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationAsync(java.lang.String)
  id: sendTypingNotificationAsync(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendTypingNotificationAsync(String chatThreadId)
  nameWithType: AzureCommunicationChatServiceImpl.sendTypingNotificationAsync(String chatThreadId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationAsync(String chatThreadId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Posts a typing event to a thread, on behalf of a user.
  syntax:
    content: public Mono<Void> sendTypingNotificationAsync(String chatThreadId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Id of the thread.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationAsync(java.lang.String,com.azure.core.util.Context)
  id: sendTypingNotificationAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendTypingNotificationAsync(String chatThreadId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.sendTypingNotificationAsync(String chatThreadId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationAsync(String chatThreadId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Posts a typing event to a thread, on behalf of a user.
  syntax:
    content: public Mono<Void> sendTypingNotificationAsync(String chatThreadId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Id of the thread.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationWithResponseAsync(java.lang.String)
  id: sendTypingNotificationWithResponseAsync(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendTypingNotificationWithResponseAsync(String chatThreadId)
  nameWithType: AzureCommunicationChatServiceImpl.sendTypingNotificationWithResponseAsync(String chatThreadId)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationWithResponseAsync(String chatThreadId)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Posts a typing event to a thread, on behalf of a user.
  syntax:
    content: public Mono<Response<Void>> sendTypingNotificationWithResponseAsync(String chatThreadId)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Id of the thread.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: sendTypingNotificationWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: sendTypingNotificationWithResponseAsync(String chatThreadId, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.sendTypingNotificationWithResponseAsync(String chatThreadId, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationWithResponseAsync(String chatThreadId, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Posts a typing event to a thread, on behalf of a user.
  syntax:
    content: public Mono<Response<Void>> sendTypingNotificationWithResponseAsync(String chatThreadId, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: Id of the thread.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessage(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions)
  id: updateChatMessage(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: updateChatMessage(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body)
  nameWithType: AzureCommunicationChatServiceImpl.updateChatMessage(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessage(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessage*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Updates a message.
  syntax:
    content: public void updateChatMessage(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    - id: body
      type: com.azure.communication.chat.models.UpdateChatMessageOptions
      description: Details of the request to update the message.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessage(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions,com.azure.core.util.Context)
  id: updateChatMessage(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: updateChatMessage(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.updateChatMessage(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessage(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessage*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Updates a message.
  syntax:
    content: public void updateChatMessage(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    - id: body
      type: com.azure.communication.chat.models.UpdateChatMessageOptions
      description: Details of the request to update the message.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageAsync(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions)
  id: updateChatMessageAsync(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: updateChatMessageAsync(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body)
  nameWithType: AzureCommunicationChatServiceImpl.updateChatMessageAsync(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageAsync(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Updates a message.
  syntax:
    content: public Mono<Void> updateChatMessageAsync(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    - id: body
      type: com.azure.communication.chat.models.UpdateChatMessageOptions
      description: Details of the request to update the message.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageAsync(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions,com.azure.core.util.Context)
  id: updateChatMessageAsync(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: updateChatMessageAsync(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.updateChatMessageAsync(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageAsync(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Updates a message.
  syntax:
    content: public Mono<Void> updateChatMessageAsync(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    - id: body
      type: com.azure.communication.chat.models.UpdateChatMessageOptions
      description: Details of the request to update the message.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageWithResponseAsync(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions)
  id: updateChatMessageWithResponseAsync(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: updateChatMessageWithResponseAsync(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body)
  nameWithType: AzureCommunicationChatServiceImpl.updateChatMessageWithResponseAsync(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageWithResponseAsync(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Updates a message.
  syntax:
    content: public Mono<Response<Void>> updateChatMessageWithResponseAsync(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    - id: body
      type: com.azure.communication.chat.models.UpdateChatMessageOptions
      description: Details of the request to update the message.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageWithResponseAsync(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions,com.azure.core.util.Context)
  id: updateChatMessageWithResponseAsync(java.lang.String,java.lang.String,com.azure.communication.chat.models.UpdateChatMessageOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: updateChatMessageWithResponseAsync(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.updateChatMessageWithResponseAsync(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageWithResponseAsync(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Updates a message.
  syntax:
    content: public Mono<Response<Void>> updateChatMessageWithResponseAsync(String chatThreadId, String chatMessageId, UpdateChatMessageOptions body, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The thread id to which the message was sent.
    - id: chatMessageId
      type: java.lang.String
      description: The message id.
    - id: body
      type: com.azure.communication.chat.models.UpdateChatMessageOptions
      description: Details of the request to update the message.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThread(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions)
  id: updateChatThread(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: updateChatThread(String chatThreadId, UpdateChatThreadOptions body)
  nameWithType: AzureCommunicationChatServiceImpl.updateChatThread(String chatThreadId, UpdateChatThreadOptions body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThread(String chatThreadId, UpdateChatThreadOptions body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThread*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Updates a thread's properties.
  syntax:
    content: public void updateChatThread(String chatThreadId, UpdateChatThreadOptions body)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The id of the thread to update.
    - id: body
      type: com.azure.communication.chat.models.UpdateChatThreadOptions
      description: Request payload for updating a chat thread.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThread(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions,com.azure.core.util.Context)
  id: updateChatThread(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: updateChatThread(String chatThreadId, UpdateChatThreadOptions body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.updateChatThread(String chatThreadId, UpdateChatThreadOptions body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThread(String chatThreadId, UpdateChatThreadOptions body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThread*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Updates a thread's properties.
  syntax:
    content: public void updateChatThread(String chatThreadId, UpdateChatThreadOptions body, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The id of the thread to update.
    - id: body
      type: com.azure.communication.chat.models.UpdateChatThreadOptions
      description: Request payload for updating a chat thread.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadAsync(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions)
  id: updateChatThreadAsync(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: updateChatThreadAsync(String chatThreadId, UpdateChatThreadOptions body)
  nameWithType: AzureCommunicationChatServiceImpl.updateChatThreadAsync(String chatThreadId, UpdateChatThreadOptions body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadAsync(String chatThreadId, UpdateChatThreadOptions body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Updates a thread's properties.
  syntax:
    content: public Mono<Void> updateChatThreadAsync(String chatThreadId, UpdateChatThreadOptions body)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The id of the thread to update.
    - id: body
      type: com.azure.communication.chat.models.UpdateChatThreadOptions
      description: Request payload for updating a chat thread.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadAsync(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions,com.azure.core.util.Context)
  id: updateChatThreadAsync(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: updateChatThreadAsync(String chatThreadId, UpdateChatThreadOptions body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.updateChatThreadAsync(String chatThreadId, UpdateChatThreadOptions body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadAsync(String chatThreadId, UpdateChatThreadOptions body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Updates a thread's properties.
  syntax:
    content: public Mono<Void> updateChatThreadAsync(String chatThreadId, UpdateChatThreadOptions body, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The id of the thread to update.
    - id: body
      type: com.azure.communication.chat.models.UpdateChatThreadOptions
      description: Request payload for updating a chat thread.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadWithResponseAsync(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions)
  id: updateChatThreadWithResponseAsync(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: updateChatThreadWithResponseAsync(String chatThreadId, UpdateChatThreadOptions body)
  nameWithType: AzureCommunicationChatServiceImpl.updateChatThreadWithResponseAsync(String chatThreadId, UpdateChatThreadOptions body)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadWithResponseAsync(String chatThreadId, UpdateChatThreadOptions body)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Updates a thread's properties.
  syntax:
    content: public Mono<Response<Void>> updateChatThreadWithResponseAsync(String chatThreadId, UpdateChatThreadOptions body)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The id of the thread to update.
    - id: body
      type: com.azure.communication.chat.models.UpdateChatThreadOptions
      description: Request payload for updating a chat thread.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadWithResponseAsync(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions,com.azure.core.util.Context)
  id: updateChatThreadWithResponseAsync(java.lang.String,com.azure.communication.chat.models.UpdateChatThreadOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.1
  parent: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl
  langs:
  - java
  name: updateChatThreadWithResponseAsync(String chatThreadId, UpdateChatThreadOptions body, Context context)
  nameWithType: AzureCommunicationChatServiceImpl.updateChatThreadWithResponseAsync(String chatThreadId, UpdateChatThreadOptions body, Context context)
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadWithResponseAsync(String chatThreadId, UpdateChatThreadOptions body, Context context)
  overload: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadWithResponseAsync*
  type: Method
  package: com.azure.communication.chat.implementation
  summary: Updates a thread's properties.
  syntax:
    content: public Mono<Response<Void>> updateChatThreadWithResponseAsync(String chatThreadId, UpdateChatThreadOptions body, Context context)
    parameters:
    - id: chatThreadId
      type: java.lang.String
      description: The id of the thread to update.
    - id: body
      type: com.azure.communication.chat.models.UpdateChatThreadOptions
      description: Request payload for updating a chat thread.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.AzureCommunicationChatServiceImpl*
  name: AzureCommunicationChatServiceImpl
  nameWithType: AzureCommunicationChatServiceImpl.AzureCommunicationChatServiceImpl
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.AzureCommunicationChatServiceImpl
  package: com.azure.communication.chat.implementation
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: com.azure.core.util.serializer.SerializerAdapter
  spec.java:
  - uid: com.azure.core.util.serializer.SerializerAdapter
    name: SerializerAdapter
    fullName: com.azure.core.util.serializer.SerializerAdapter
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getEndpoint*
  name: getEndpoint
  nameWithType: AzureCommunicationChatServiceImpl.getEndpoint
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getEndpoint
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getApiVersion*
  name: getApiVersion
  nameWithType: AzureCommunicationChatServiceImpl.getApiVersion
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getApiVersion
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getHttpPipeline*
  name: getHttpPipeline
  nameWithType: AzureCommunicationChatServiceImpl.getHttpPipeline
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getHttpPipeline
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getSerializerAdapter*
  name: getSerializerAdapter
  nameWithType: AzureCommunicationChatServiceImpl.getSerializerAdapter
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getSerializerAdapter
  package: com.azure.communication.chat.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.implementation.models.ReadReceipt>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.implementation.models.ReadReceipt
    name: ReadReceipt
    fullName: com.azure.communication.chat.implementation.models.ReadReceipt
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsSinglePageAsync*
  name: listChatReadReceiptsSinglePageAsync
  nameWithType: AzureCommunicationChatServiceImpl.listChatReadReceiptsSinglePageAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsSinglePageAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.implementation.models.ReadReceipt>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.implementation.models.ReadReceipt
    name: ReadReceipt
    fullName: com.azure.communication.chat.implementation.models.ReadReceipt
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsAsync*
  name: listChatReadReceiptsAsync
  nameWithType: AzureCommunicationChatServiceImpl.listChatReadReceiptsAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.communication.chat.implementation.models.ReadReceipt>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.implementation.models.ReadReceipt
    name: ReadReceipt
    fullName: com.azure.communication.chat.implementation.models.ReadReceipt
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceipts*
  name: listChatReadReceipts
  nameWithType: AzureCommunicationChatServiceImpl.listChatReadReceipts
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceipts
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.models.SendReadReceiptRequest
  name: SendReadReceiptRequest
  nameWithType: SendReadReceiptRequest
  fullName: com.azure.communication.chat.implementation.models.SendReadReceiptRequest
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptWithResponseAsync*
  name: sendChatReadReceiptWithResponseAsync
  nameWithType: AzureCommunicationChatServiceImpl.sendChatReadReceiptWithResponseAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptWithResponseAsync
  package: com.azure.communication.chat.implementation
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptAsync*
  name: sendChatReadReceiptAsync
  nameWithType: AzureCommunicationChatServiceImpl.sendChatReadReceiptAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceiptAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceipt*
  name: sendChatReadReceipt
  nameWithType: AzureCommunicationChatServiceImpl.sendChatReadReceipt
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatReadReceipt
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.models.SendChatMessageOptions
  name: SendChatMessageOptions
  nameWithType: SendChatMessageOptions
  fullName: com.azure.communication.chat.models.SendChatMessageOptions
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.communication.chat.models.SendChatMessageResult>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.models.SendChatMessageResult
    name: SendChatMessageResult
    fullName: com.azure.communication.chat.models.SendChatMessageResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageWithResponseAsync*
  name: sendChatMessageWithResponseAsync
  nameWithType: AzureCommunicationChatServiceImpl.sendChatMessageWithResponseAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageWithResponseAsync
  package: com.azure.communication.chat.implementation
- uid: reactor.core.publisher.Mono<com.azure.communication.chat.models.SendChatMessageResult>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.models.SendChatMessageResult
    name: SendChatMessageResult
    fullName: com.azure.communication.chat.models.SendChatMessageResult
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageAsync*
  name: sendChatMessageAsync
  nameWithType: AzureCommunicationChatServiceImpl.sendChatMessageAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessageAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.models.SendChatMessageResult
  name: SendChatMessageResult
  nameWithType: SendChatMessageResult
  fullName: com.azure.communication.chat.models.SendChatMessageResult
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessage*
  name: sendChatMessage
  nameWithType: AzureCommunicationChatServiceImpl.sendChatMessage
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendChatMessage
  package: com.azure.communication.chat.implementation
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: java.time.OffsetDateTime
  spec.java:
  - uid: java.time.OffsetDateTime
    name: OffsetDateTime
    fullName: java.time.OffsetDateTime
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.implementation.models.ChatMessage>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.implementation.models.ChatMessage
    name: ChatMessage
    fullName: com.azure.communication.chat.implementation.models.ChatMessage
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesSinglePageAsync*
  name: listChatMessagesSinglePageAsync
  nameWithType: AzureCommunicationChatServiceImpl.listChatMessagesSinglePageAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesSinglePageAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.implementation.models.ChatMessage>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.implementation.models.ChatMessage
    name: ChatMessage
    fullName: com.azure.communication.chat.implementation.models.ChatMessage
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesAsync*
  name: listChatMessagesAsync
  nameWithType: AzureCommunicationChatServiceImpl.listChatMessagesAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.communication.chat.implementation.models.ChatMessage>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.implementation.models.ChatMessage
    name: ChatMessage
    fullName: com.azure.communication.chat.implementation.models.ChatMessage
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessages*
  name: listChatMessages
  nameWithType: AzureCommunicationChatServiceImpl.listChatMessages
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessages
  package: com.azure.communication.chat.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.communication.chat.implementation.models.ChatMessage>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.implementation.models.ChatMessage
    name: ChatMessage
    fullName: com.azure.communication.chat.implementation.models.ChatMessage
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageWithResponseAsync*
  name: getChatMessageWithResponseAsync
  nameWithType: AzureCommunicationChatServiceImpl.getChatMessageWithResponseAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageWithResponseAsync
  package: com.azure.communication.chat.implementation
- uid: reactor.core.publisher.Mono<com.azure.communication.chat.implementation.models.ChatMessage>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.implementation.models.ChatMessage
    name: ChatMessage
    fullName: com.azure.communication.chat.implementation.models.ChatMessage
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageAsync*
  name: getChatMessageAsync
  nameWithType: AzureCommunicationChatServiceImpl.getChatMessageAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessageAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.models.ChatMessage
  name: ChatMessage
  nameWithType: ChatMessage
  fullName: com.azure.communication.chat.implementation.models.ChatMessage
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessage*
  name: getChatMessage
  nameWithType: AzureCommunicationChatServiceImpl.getChatMessage
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatMessage
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.models.UpdateChatMessageOptions
  name: UpdateChatMessageOptions
  nameWithType: UpdateChatMessageOptions
  fullName: com.azure.communication.chat.models.UpdateChatMessageOptions
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageWithResponseAsync*
  name: updateChatMessageWithResponseAsync
  nameWithType: AzureCommunicationChatServiceImpl.updateChatMessageWithResponseAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageWithResponseAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageAsync*
  name: updateChatMessageAsync
  nameWithType: AzureCommunicationChatServiceImpl.updateChatMessageAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessageAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessage*
  name: updateChatMessage
  nameWithType: AzureCommunicationChatServiceImpl.updateChatMessage
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatMessage
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageWithResponseAsync*
  name: deleteChatMessageWithResponseAsync
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatMessageWithResponseAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageWithResponseAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageAsync*
  name: deleteChatMessageAsync
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatMessageAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessageAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessage*
  name: deleteChatMessage
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatMessage
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatMessage
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationWithResponseAsync*
  name: sendTypingNotificationWithResponseAsync
  nameWithType: AzureCommunicationChatServiceImpl.sendTypingNotificationWithResponseAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationWithResponseAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationAsync*
  name: sendTypingNotificationAsync
  nameWithType: AzureCommunicationChatServiceImpl.sendTypingNotificationAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotificationAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotification*
  name: sendTypingNotification
  nameWithType: AzureCommunicationChatServiceImpl.sendTypingNotification
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.sendTypingNotification
  package: com.azure.communication.chat.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.implementation.models.ChatThreadMember>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.implementation.models.ChatThreadMember
    name: ChatThreadMember
    fullName: com.azure.communication.chat.implementation.models.ChatThreadMember
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersSinglePageAsync*
  name: listChatThreadMembersSinglePageAsync
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadMembersSinglePageAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersSinglePageAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.implementation.models.ChatThreadMember>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.implementation.models.ChatThreadMember
    name: ChatThreadMember
    fullName: com.azure.communication.chat.implementation.models.ChatThreadMember
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersAsync*
  name: listChatThreadMembersAsync
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadMembersAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.communication.chat.implementation.models.ChatThreadMember>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.implementation.models.ChatThreadMember
    name: ChatThreadMember
    fullName: com.azure.communication.chat.implementation.models.ChatThreadMember
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembers*
  name: listChatThreadMembers
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadMembers
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembers
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions
  name: AddChatThreadMembersOptions
  nameWithType: AddChatThreadMembersOptions
  fullName: com.azure.communication.chat.implementation.models.AddChatThreadMembersOptions
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersWithResponseAsync*
  name: addChatThreadMembersWithResponseAsync
  nameWithType: AzureCommunicationChatServiceImpl.addChatThreadMembersWithResponseAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersWithResponseAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersAsync*
  name: addChatThreadMembersAsync
  nameWithType: AzureCommunicationChatServiceImpl.addChatThreadMembersAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembersAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembers*
  name: addChatThreadMembers
  nameWithType: AzureCommunicationChatServiceImpl.addChatThreadMembers
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.addChatThreadMembers
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberWithResponseAsync*
  name: removeChatThreadMemberWithResponseAsync
  nameWithType: AzureCommunicationChatServiceImpl.removeChatThreadMemberWithResponseAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberWithResponseAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberAsync*
  name: removeChatThreadMemberAsync
  nameWithType: AzureCommunicationChatServiceImpl.removeChatThreadMemberAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMemberAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMember*
  name: removeChatThreadMember
  nameWithType: AzureCommunicationChatServiceImpl.removeChatThreadMember
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.removeChatThreadMember
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.models.CreateChatThreadOptions
  name: CreateChatThreadOptions
  nameWithType: CreateChatThreadOptions
  fullName: com.azure.communication.chat.implementation.models.CreateChatThreadOptions
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.communication.chat.implementation.models.MultiStatusResponse>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.implementation.models.MultiStatusResponse
    name: MultiStatusResponse
    fullName: com.azure.communication.chat.implementation.models.MultiStatusResponse
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadWithResponseAsync*
  name: createChatThreadWithResponseAsync
  nameWithType: AzureCommunicationChatServiceImpl.createChatThreadWithResponseAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadWithResponseAsync
  package: com.azure.communication.chat.implementation
- uid: reactor.core.publisher.Mono<com.azure.communication.chat.implementation.models.MultiStatusResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.implementation.models.MultiStatusResponse
    name: MultiStatusResponse
    fullName: com.azure.communication.chat.implementation.models.MultiStatusResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadAsync*
  name: createChatThreadAsync
  nameWithType: AzureCommunicationChatServiceImpl.createChatThreadAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThreadAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.models.MultiStatusResponse
  name: MultiStatusResponse
  nameWithType: MultiStatusResponse
  fullName: com.azure.communication.chat.implementation.models.MultiStatusResponse
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThread*
  name: createChatThread
  nameWithType: AzureCommunicationChatServiceImpl.createChatThread
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.createChatThread
  package: com.azure.communication.chat.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.communication.chat.models.ChatThreadInfo>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.models.ChatThreadInfo
    name: ChatThreadInfo
    fullName: com.azure.communication.chat.models.ChatThreadInfo
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsSinglePageAsync*
  name: listChatThreadsSinglePageAsync
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadsSinglePageAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsSinglePageAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.communication.chat.models.ChatThreadInfo>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.models.ChatThreadInfo
    name: ChatThreadInfo
    fullName: com.azure.communication.chat.models.ChatThreadInfo
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsAsync*
  name: listChatThreadsAsync
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadsAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.communication.chat.models.ChatThreadInfo>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.models.ChatThreadInfo
    name: ChatThreadInfo
    fullName: com.azure.communication.chat.models.ChatThreadInfo
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreads*
  name: listChatThreads
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreads
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreads
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.models.UpdateChatThreadOptions
  name: UpdateChatThreadOptions
  nameWithType: UpdateChatThreadOptions
  fullName: com.azure.communication.chat.models.UpdateChatThreadOptions
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadWithResponseAsync*
  name: updateChatThreadWithResponseAsync
  nameWithType: AzureCommunicationChatServiceImpl.updateChatThreadWithResponseAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadWithResponseAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadAsync*
  name: updateChatThreadAsync
  nameWithType: AzureCommunicationChatServiceImpl.updateChatThreadAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThreadAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThread*
  name: updateChatThread
  nameWithType: AzureCommunicationChatServiceImpl.updateChatThread
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.updateChatThread
  package: com.azure.communication.chat.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.communication.chat.implementation.models.ChatThread>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.implementation.models.ChatThread
    name: ChatThread
    fullName: com.azure.communication.chat.implementation.models.ChatThread
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadWithResponseAsync*
  name: getChatThreadWithResponseAsync
  nameWithType: AzureCommunicationChatServiceImpl.getChatThreadWithResponseAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadWithResponseAsync
  package: com.azure.communication.chat.implementation
- uid: reactor.core.publisher.Mono<com.azure.communication.chat.implementation.models.ChatThread>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.communication.chat.implementation.models.ChatThread
    name: ChatThread
    fullName: com.azure.communication.chat.implementation.models.ChatThread
  - name: '>'
    fullName: '>'
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadAsync*
  name: getChatThreadAsync
  nameWithType: AzureCommunicationChatServiceImpl.getChatThreadAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThreadAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.models.ChatThread
  name: ChatThread
  nameWithType: ChatThread
  fullName: com.azure.communication.chat.implementation.models.ChatThread
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThread*
  name: getChatThread
  nameWithType: AzureCommunicationChatServiceImpl.getChatThread
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.getChatThread
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadWithResponseAsync*
  name: deleteChatThreadWithResponseAsync
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatThreadWithResponseAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadWithResponseAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadAsync*
  name: deleteChatThreadAsync
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatThreadAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThreadAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThread*
  name: deleteChatThread
  nameWithType: AzureCommunicationChatServiceImpl.deleteChatThread
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.deleteChatThread
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsNextSinglePageAsync*
  name: listChatReadReceiptsNextSinglePageAsync
  nameWithType: AzureCommunicationChatServiceImpl.listChatReadReceiptsNextSinglePageAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatReadReceiptsNextSinglePageAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesNextSinglePageAsync*
  name: listChatMessagesNextSinglePageAsync
  nameWithType: AzureCommunicationChatServiceImpl.listChatMessagesNextSinglePageAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatMessagesNextSinglePageAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersNextSinglePageAsync*
  name: listChatThreadMembersNextSinglePageAsync
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadMembersNextSinglePageAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadMembersNextSinglePageAsync
  package: com.azure.communication.chat.implementation
- uid: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsNextSinglePageAsync*
  name: listChatThreadsNextSinglePageAsync
  nameWithType: AzureCommunicationChatServiceImpl.listChatThreadsNextSinglePageAsync
  fullName: com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl.listChatThreadsNextSinglePageAsync
  package: com.azure.communication.chat.implementation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.communication.chat.implementation.models.ReadReceipt
  name: ReadReceipt
  nameWithType: ReadReceipt
  fullName: com.azure.communication.chat.implementation.models.ReadReceipt
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.communication.chat.implementation.models.ChatThreadMember
  name: ChatThreadMember
  nameWithType: ChatThreadMember
  fullName: com.azure.communication.chat.implementation.models.ChatThreadMember
- uid: com.azure.communication.chat.models.ChatThreadInfo
  name: ChatThreadInfo
  nameWithType: ChatThreadInfo
  fullName: com.azure.communication.chat.models.ChatThreadInfo
