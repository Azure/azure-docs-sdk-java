### YamlMime:JavaType
uid: "com.azure.compute.batch.models.BatchJobSpecification"
fullName: "com.azure.compute.batch.models.BatchJobSpecification"
name: "BatchJobSpecification"
nameWithType: "BatchJobSpecification"
summary: "Specifies details of the Jobs to be created on a schedule."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **BatchJobSpecification**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.BatchJobSpecification?alt=com.azure.compute.batch.models.BatchJobSpecification&text=BatchJobSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.compute.batch.models.BatchJobSpecification.BatchJobSpecification(com.azure.compute.batch.models.BatchPoolInfo)"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.BatchJobSpecification(BatchPoolInfo poolInfo)"
  name: "BatchJobSpecification(BatchPoolInfo poolInfo)"
  nameWithType: "BatchJobSpecification.BatchJobSpecification(BatchPoolInfo poolInfo)"
  summary: "Creates an instance of Batch<wbr>Job<wbr>Specification class."
  parameters:
  - description: "the poolInfo value to set."
    name: "poolInfo"
    type: "<xref href=\"com.azure.compute.batch.models.BatchPoolInfo?alt=com.azure.compute.batch.models.BatchPoolInfo&text=BatchPoolInfo\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobSpecification(BatchPoolInfo poolInfo)"
  desc: "Creates an instance of BatchJobSpecification class."
methods:
- uid: "com.azure.compute.batch.models.BatchJobSpecification.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "BatchJobSpecification.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Batch<wbr>Job<wbr>Specification from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static BatchJobSpecification fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of BatchJobSpecification from the JsonReader."
  returns:
    description: "An instance of BatchJobSpecification if the JsonReader was pointing to an instance of it, or null if it\n was pointing to JSON null."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobSpecification?alt=com.azure.compute.batch.models.BatchJobSpecification&text=BatchJobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.getCommonEnvironmentSettings()"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.getCommonEnvironmentSettings()"
  name: "getCommonEnvironmentSettings()"
  nameWithType: "BatchJobSpecification.getCommonEnvironmentSettings()"
  summary: "Get the common<wbr>Environment<wbr>Settings property: A list of common environment variable settings."
  syntax: "public List<EnvironmentSetting> getCommonEnvironmentSettings()"
  desc: "Get the commonEnvironmentSettings property: A list of common environment variable settings. These environment variables are set for all Tasks in Jobs created under this schedule (including the Job Manager, Job Preparation and Job Release Tasks). Individual Tasks can override an environment setting specified here by specifying the same setting name with a different value."
  returns:
    description: "the commonEnvironmentSettings value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.EnvironmentSetting?alt=com.azure.compute.batch.models.EnvironmentSetting&text=EnvironmentSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.getConstraints()"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.getConstraints()"
  name: "getConstraints()"
  nameWithType: "BatchJobSpecification.getConstraints()"
  summary: "Get the constraints property: The execution constraints for Jobs created under this schedule."
  syntax: "public BatchJobConstraints getConstraints()"
  desc: "Get the constraints property: The execution constraints for Jobs created under this schedule."
  returns:
    description: "the constraints value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobConstraints?alt=com.azure.compute.batch.models.BatchJobConstraints&text=BatchJobConstraints\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.getDisplayName()"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.getDisplayName()"
  name: "getDisplayName()"
  nameWithType: "BatchJobSpecification.getDisplayName()"
  summary: "Get the display<wbr>Name property: The display name for Jobs created under this schedule."
  syntax: "public String getDisplayName()"
  desc: "Get the displayName property: The display name for Jobs created under this schedule. The name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the displayName value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.getJobManagerTask()"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.getJobManagerTask()"
  name: "getJobManagerTask()"
  nameWithType: "BatchJobSpecification.getJobManagerTask()"
  summary: "Get the job<wbr>Manager<wbr>Task property: The details of a Job Manager Task to be launched when a Job is started under this schedule."
  syntax: "public BatchJobManagerTask getJobManagerTask()"
  desc: "Get the jobManagerTask property: The details of a Job Manager Task to be launched when a Job is started under this schedule. If the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job using the Task API. If the Job does specify a Job Manager Task, the Batch service creates the Job Manager Task when the Job is created, and will try to schedule the Job Manager Task before scheduling other Tasks in the Job."
  returns:
    description: "the jobManagerTask value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.getJobPreparationTask()"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.getJobPreparationTask()"
  name: "getJobPreparationTask()"
  nameWithType: "BatchJobSpecification.getJobPreparationTask()"
  summary: "Get the job<wbr>Preparation<wbr>Task property: The Job Preparation Task for Jobs created under this schedule."
  syntax: "public BatchJobPreparationTask getJobPreparationTask()"
  desc: "Get the jobPreparationTask property: The Job Preparation Task for Jobs created under this schedule. If a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node."
  returns:
    description: "the jobPreparationTask value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobPreparationTask?alt=com.azure.compute.batch.models.BatchJobPreparationTask&text=BatchJobPreparationTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.getJobReleaseTask()"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.getJobReleaseTask()"
  name: "getJobReleaseTask()"
  nameWithType: "BatchJobSpecification.getJobReleaseTask()"
  summary: "Get the job<wbr>Release<wbr>Task property: The Job Release Task for Jobs created under this schedule."
  syntax: "public BatchJobReleaseTask getJobReleaseTask()"
  desc: "Get the jobReleaseTask property: The Job Release Task for Jobs created under this schedule. The primary purpose of the Job Release Task is to undo changes to Nodes made by the Job Preparation Task. Example activities include deleting local files, or shutting down services that were started as part of Job preparation. A Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job. The Batch service runs the Job Release Task on the Compute Nodes that have run the Job Preparation Task."
  returns:
    description: "the jobReleaseTask value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobReleaseTask?alt=com.azure.compute.batch.models.BatchJobReleaseTask&text=BatchJobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.getMaxParallelTasks()"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.getMaxParallelTasks()"
  name: "getMaxParallelTasks()"
  nameWithType: "BatchJobSpecification.getMaxParallelTasks()"
  summary: "Get the max<wbr>Parallel<wbr>Tasks property: The maximum number of tasks that can be executed in parallel for the job."
  syntax: "public Integer getMaxParallelTasks()"
  desc: "Get the maxParallelTasks property: The maximum number of tasks that can be executed in parallel for the job. The value of maxParallelTasks must be -1 or greater than 0 if specified. If not specified, the default value is -1, which means there's no limit to the number of tasks that can be run at once. You can update a job's maxParallelTasks after it has been created using the update job API."
  returns:
    description: "the maxParallelTasks value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.getMetadata()"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.getMetadata()"
  name: "getMetadata()"
  nameWithType: "BatchJobSpecification.getMetadata()"
  summary: "Get the metadata property: A list of name-value pairs associated with each Job created under this schedule as metadata."
  syntax: "public List<MetadataItem> getMetadata()"
  desc: "Get the metadata property: A list of name-value pairs associated with each Job created under this schedule as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code."
  returns:
    description: "the metadata value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.MetadataItem?alt=com.azure.compute.batch.models.MetadataItem&text=MetadataItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.getNetworkConfiguration()"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.getNetworkConfiguration()"
  name: "getNetworkConfiguration()"
  nameWithType: "BatchJobSpecification.getNetworkConfiguration()"
  summary: "Get the network<wbr>Configuration property: The network configuration for the Job."
  syntax: "public BatchJobNetworkConfiguration getNetworkConfiguration()"
  desc: "Get the networkConfiguration property: The network configuration for the Job."
  returns:
    description: "the networkConfiguration value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobNetworkConfiguration?alt=com.azure.compute.batch.models.BatchJobNetworkConfiguration&text=BatchJobNetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.getOnAllTasksComplete()"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.getOnAllTasksComplete()"
  name: "getOnAllTasksComplete()"
  nameWithType: "BatchJobSpecification.getOnAllTasksComplete()"
  summary: "Get the on<wbr>All<wbr>Tasks<wbr>Complete property: The action the Batch service should take when all Tasks in a Job created under this schedule are in the completed state."
  syntax: "public OnAllBatchTasksComplete getOnAllTasksComplete()"
  desc: "Get the onAllTasksComplete property: The action the Batch service should take when all Tasks in a Job created under this schedule are in the completed state. Note that if a Job contains no Tasks, then all Tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic Job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the Job properties to set onAllTasksComplete to terminatejob once you have finished adding Tasks. The default is noaction."
  returns:
    description: "the onAllTasksComplete value."
    type: "<xref href=\"com.azure.compute.batch.models.OnAllBatchTasksComplete?alt=com.azure.compute.batch.models.OnAllBatchTasksComplete&text=OnAllBatchTasksComplete\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.getOnTaskFailure()"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.getOnTaskFailure()"
  name: "getOnTaskFailure()"
  nameWithType: "BatchJobSpecification.getOnTaskFailure()"
  summary: "Get the on<wbr>Task<wbr>Failure property: The action the Batch service should take when any Task fails in a Job created under this schedule."
  syntax: "public OnBatchTaskFailure getOnTaskFailure()"
  desc: "Get the onTaskFailure property: The action the Batch service should take when any Task fails in a Job created under this schedule. A Task is considered to have failed if it have failed if has a failureInfo. A failureInfo is set if the Task completes with a non-zero exit code after exhausting its retry count, or if there was an error starting the Task, for example due to a resource file download error. The default is noaction."
  returns:
    description: "the onTaskFailure value."
    type: "<xref href=\"com.azure.compute.batch.models.OnBatchTaskFailure?alt=com.azure.compute.batch.models.OnBatchTaskFailure&text=OnBatchTaskFailure\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.getPoolInfo()"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.getPoolInfo()"
  name: "getPoolInfo()"
  nameWithType: "BatchJobSpecification.getPoolInfo()"
  summary: "Get the pool<wbr>Info property: The Pool on which the Batch service runs the Tasks of Jobs created under this schedule."
  syntax: "public BatchPoolInfo getPoolInfo()"
  desc: "Get the poolInfo property: The Pool on which the Batch service runs the Tasks of Jobs created under this schedule."
  returns:
    description: "the poolInfo value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchPoolInfo?alt=com.azure.compute.batch.models.BatchPoolInfo&text=BatchPoolInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.getPriority()"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.getPriority()"
  name: "getPriority()"
  nameWithType: "BatchJobSpecification.getPriority()"
  summary: "Get the priority property: The priority of Jobs created under this schedule."
  syntax: "public Integer getPriority()"
  desc: "Get the priority property: The priority of Jobs created under this schedule. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0. This priority is used as the default for all Jobs under the Job Schedule. You can update a Job's priority after it has been created using by using the update Job API."
  returns:
    description: "the priority value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.isAllowTaskPreemption()"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.isAllowTaskPreemption()"
  name: "isAllowTaskPreemption()"
  nameWithType: "BatchJobSpecification.isAllowTaskPreemption()"
  summary: "Get the allow<wbr>Task<wbr>Preemption property: Whether Tasks in this job can be preempted by other high priority jobs."
  syntax: "public Boolean isAllowTaskPreemption()"
  desc: "Get the allowTaskPreemption property: Whether Tasks in this job can be preempted by other high priority jobs. If the value is set to True, other high priority jobs submitted to the system will take precedence and will be able requeue tasks from this job. You can update a job's allowTaskPreemption after it has been created using the update job API."
  returns:
    description: "the allowTaskPreemption value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.isUsesTaskDependencies()"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.isUsesTaskDependencies()"
  name: "isUsesTaskDependencies()"
  nameWithType: "BatchJobSpecification.isUsesTaskDependencies()"
  summary: "Get the uses<wbr>Task<wbr>Dependencies property: Whether Tasks in the Job can define dependencies on each other."
  syntax: "public Boolean isUsesTaskDependencies()"
  desc: "Get the usesTaskDependencies property: Whether Tasks in the Job can define dependencies on each other. The default is false."
  returns:
    description: "the usesTaskDependencies value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.setAllowTaskPreemption(java.lang.Boolean)"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.setAllowTaskPreemption(Boolean allowTaskPreemption)"
  name: "setAllowTaskPreemption(Boolean allowTaskPreemption)"
  nameWithType: "BatchJobSpecification.setAllowTaskPreemption(Boolean allowTaskPreemption)"
  summary: "Set the allow<wbr>Task<wbr>Preemption property: Whether Tasks in this job can be preempted by other high priority jobs."
  parameters:
  - description: "the allowTaskPreemption value to set."
    name: "allowTaskPreemption"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public BatchJobSpecification setAllowTaskPreemption(Boolean allowTaskPreemption)"
  desc: "Set the allowTaskPreemption property: Whether Tasks in this job can be preempted by other high priority jobs. If the value is set to True, other high priority jobs submitted to the system will take precedence and will be able requeue tasks from this job. You can update a job's allowTaskPreemption after it has been created using the update job API."
  returns:
    description: "the BatchJobSpecification object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobSpecification?alt=com.azure.compute.batch.models.BatchJobSpecification&text=BatchJobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.setCommonEnvironmentSettings(java.util.List<com.azure.compute.batch.models.EnvironmentSetting>)"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.setCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)"
  name: "setCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)"
  nameWithType: "BatchJobSpecification.setCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)"
  summary: "Set the common<wbr>Environment<wbr>Settings property: A list of common environment variable settings."
  parameters:
  - description: "the commonEnvironmentSettings value to set."
    name: "commonEnvironmentSettings"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.EnvironmentSetting?alt=com.azure.compute.batch.models.EnvironmentSetting&text=EnvironmentSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BatchJobSpecification setCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)"
  desc: "Set the commonEnvironmentSettings property: A list of common environment variable settings. These environment variables are set for all Tasks in Jobs created under this schedule (including the Job Manager, Job Preparation and Job Release Tasks). Individual Tasks can override an environment setting specified here by specifying the same setting name with a different value."
  returns:
    description: "the BatchJobSpecification object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobSpecification?alt=com.azure.compute.batch.models.BatchJobSpecification&text=BatchJobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.setConstraints(com.azure.compute.batch.models.BatchJobConstraints)"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.setConstraints(BatchJobConstraints constraints)"
  name: "setConstraints(BatchJobConstraints constraints)"
  nameWithType: "BatchJobSpecification.setConstraints(BatchJobConstraints constraints)"
  summary: "Set the constraints property: The execution constraints for Jobs created under this schedule."
  parameters:
  - description: "the constraints value to set."
    name: "constraints"
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobConstraints?alt=com.azure.compute.batch.models.BatchJobConstraints&text=BatchJobConstraints\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobSpecification setConstraints(BatchJobConstraints constraints)"
  desc: "Set the constraints property: The execution constraints for Jobs created under this schedule."
  returns:
    description: "the BatchJobSpecification object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobSpecification?alt=com.azure.compute.batch.models.BatchJobSpecification&text=BatchJobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.setDisplayName(java.lang.String)"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.setDisplayName(String displayName)"
  name: "setDisplayName(String displayName)"
  nameWithType: "BatchJobSpecification.setDisplayName(String displayName)"
  summary: "Set the display<wbr>Name property: The display name for Jobs created under this schedule."
  parameters:
  - description: "the displayName value to set."
    name: "displayName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public BatchJobSpecification setDisplayName(String displayName)"
  desc: "Set the displayName property: The display name for Jobs created under this schedule. The name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the BatchJobSpecification object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobSpecification?alt=com.azure.compute.batch.models.BatchJobSpecification&text=BatchJobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.setJobManagerTask(com.azure.compute.batch.models.BatchJobManagerTask)"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.setJobManagerTask(BatchJobManagerTask jobManagerTask)"
  name: "setJobManagerTask(BatchJobManagerTask jobManagerTask)"
  nameWithType: "BatchJobSpecification.setJobManagerTask(BatchJobManagerTask jobManagerTask)"
  summary: "Set the job<wbr>Manager<wbr>Task property: The details of a Job Manager Task to be launched when a Job is started under this schedule."
  parameters:
  - description: "the jobManagerTask value to set."
    name: "jobManagerTask"
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobSpecification setJobManagerTask(BatchJobManagerTask jobManagerTask)"
  desc: "Set the jobManagerTask property: The details of a Job Manager Task to be launched when a Job is started under this schedule. If the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job using the Task API. If the Job does specify a Job Manager Task, the Batch service creates the Job Manager Task when the Job is created, and will try to schedule the Job Manager Task before scheduling other Tasks in the Job."
  returns:
    description: "the BatchJobSpecification object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobSpecification?alt=com.azure.compute.batch.models.BatchJobSpecification&text=BatchJobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.setJobPreparationTask(com.azure.compute.batch.models.BatchJobPreparationTask)"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.setJobPreparationTask(BatchJobPreparationTask jobPreparationTask)"
  name: "setJobPreparationTask(BatchJobPreparationTask jobPreparationTask)"
  nameWithType: "BatchJobSpecification.setJobPreparationTask(BatchJobPreparationTask jobPreparationTask)"
  summary: "Set the job<wbr>Preparation<wbr>Task property: The Job Preparation Task for Jobs created under this schedule."
  parameters:
  - description: "the jobPreparationTask value to set."
    name: "jobPreparationTask"
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobPreparationTask?alt=com.azure.compute.batch.models.BatchJobPreparationTask&text=BatchJobPreparationTask\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobSpecification setJobPreparationTask(BatchJobPreparationTask jobPreparationTask)"
  desc: "Set the jobPreparationTask property: The Job Preparation Task for Jobs created under this schedule. If a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node."
  returns:
    description: "the BatchJobSpecification object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobSpecification?alt=com.azure.compute.batch.models.BatchJobSpecification&text=BatchJobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.setJobReleaseTask(com.azure.compute.batch.models.BatchJobReleaseTask)"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.setJobReleaseTask(BatchJobReleaseTask jobReleaseTask)"
  name: "setJobReleaseTask(BatchJobReleaseTask jobReleaseTask)"
  nameWithType: "BatchJobSpecification.setJobReleaseTask(BatchJobReleaseTask jobReleaseTask)"
  summary: "Set the job<wbr>Release<wbr>Task property: The Job Release Task for Jobs created under this schedule."
  parameters:
  - description: "the jobReleaseTask value to set."
    name: "jobReleaseTask"
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobReleaseTask?alt=com.azure.compute.batch.models.BatchJobReleaseTask&text=BatchJobReleaseTask\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobSpecification setJobReleaseTask(BatchJobReleaseTask jobReleaseTask)"
  desc: "Set the jobReleaseTask property: The Job Release Task for Jobs created under this schedule. The primary purpose of the Job Release Task is to undo changes to Nodes made by the Job Preparation Task. Example activities include deleting local files, or shutting down services that were started as part of Job preparation. A Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job. The Batch service runs the Job Release Task on the Compute Nodes that have run the Job Preparation Task."
  returns:
    description: "the BatchJobSpecification object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobSpecification?alt=com.azure.compute.batch.models.BatchJobSpecification&text=BatchJobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.setMaxParallelTasks(java.lang.Integer)"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.setMaxParallelTasks(Integer maxParallelTasks)"
  name: "setMaxParallelTasks(Integer maxParallelTasks)"
  nameWithType: "BatchJobSpecification.setMaxParallelTasks(Integer maxParallelTasks)"
  summary: "Set the max<wbr>Parallel<wbr>Tasks property: The maximum number of tasks that can be executed in parallel for the job."
  parameters:
  - description: "the maxParallelTasks value to set."
    name: "maxParallelTasks"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public BatchJobSpecification setMaxParallelTasks(Integer maxParallelTasks)"
  desc: "Set the maxParallelTasks property: The maximum number of tasks that can be executed in parallel for the job. The value of maxParallelTasks must be -1 or greater than 0 if specified. If not specified, the default value is -1, which means there's no limit to the number of tasks that can be run at once. You can update a job's maxParallelTasks after it has been created using the update job API."
  returns:
    description: "the BatchJobSpecification object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobSpecification?alt=com.azure.compute.batch.models.BatchJobSpecification&text=BatchJobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.setMetadata(java.util.List<com.azure.compute.batch.models.MetadataItem>)"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.setMetadata(List<MetadataItem> metadata)"
  name: "setMetadata(List<MetadataItem> metadata)"
  nameWithType: "BatchJobSpecification.setMetadata(List<MetadataItem> metadata)"
  summary: "Set the metadata property: A list of name-value pairs associated with each Job created under this schedule as metadata."
  parameters:
  - description: "the metadata value to set."
    name: "metadata"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.MetadataItem?alt=com.azure.compute.batch.models.MetadataItem&text=MetadataItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BatchJobSpecification setMetadata(List<MetadataItem> metadata)"
  desc: "Set the metadata property: A list of name-value pairs associated with each Job created under this schedule as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code."
  returns:
    description: "the BatchJobSpecification object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobSpecification?alt=com.azure.compute.batch.models.BatchJobSpecification&text=BatchJobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.setNetworkConfiguration(com.azure.compute.batch.models.BatchJobNetworkConfiguration)"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.setNetworkConfiguration(BatchJobNetworkConfiguration networkConfiguration)"
  name: "setNetworkConfiguration(BatchJobNetworkConfiguration networkConfiguration)"
  nameWithType: "BatchJobSpecification.setNetworkConfiguration(BatchJobNetworkConfiguration networkConfiguration)"
  summary: "Set the network<wbr>Configuration property: The network configuration for the Job."
  parameters:
  - description: "the networkConfiguration value to set."
    name: "networkConfiguration"
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobNetworkConfiguration?alt=com.azure.compute.batch.models.BatchJobNetworkConfiguration&text=BatchJobNetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobSpecification setNetworkConfiguration(BatchJobNetworkConfiguration networkConfiguration)"
  desc: "Set the networkConfiguration property: The network configuration for the Job."
  returns:
    description: "the BatchJobSpecification object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobSpecification?alt=com.azure.compute.batch.models.BatchJobSpecification&text=BatchJobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.setOnAllTasksComplete(com.azure.compute.batch.models.OnAllBatchTasksComplete)"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.setOnAllTasksComplete(OnAllBatchTasksComplete onAllTasksComplete)"
  name: "setOnAllTasksComplete(OnAllBatchTasksComplete onAllTasksComplete)"
  nameWithType: "BatchJobSpecification.setOnAllTasksComplete(OnAllBatchTasksComplete onAllTasksComplete)"
  summary: "Set the on<wbr>All<wbr>Tasks<wbr>Complete property: The action the Batch service should take when all Tasks in a Job created under this schedule are in the completed state."
  parameters:
  - description: "the onAllTasksComplete value to set."
    name: "onAllTasksComplete"
    type: "<xref href=\"com.azure.compute.batch.models.OnAllBatchTasksComplete?alt=com.azure.compute.batch.models.OnAllBatchTasksComplete&text=OnAllBatchTasksComplete\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobSpecification setOnAllTasksComplete(OnAllBatchTasksComplete onAllTasksComplete)"
  desc: "Set the onAllTasksComplete property: The action the Batch service should take when all Tasks in a Job created under this schedule are in the completed state. Note that if a Job contains no Tasks, then all Tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic Job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the Job properties to set onAllTasksComplete to terminatejob once you have finished adding Tasks. The default is noaction."
  returns:
    description: "the BatchJobSpecification object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobSpecification?alt=com.azure.compute.batch.models.BatchJobSpecification&text=BatchJobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.setOnTaskFailure(com.azure.compute.batch.models.OnBatchTaskFailure)"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.setOnTaskFailure(OnBatchTaskFailure onTaskFailure)"
  name: "setOnTaskFailure(OnBatchTaskFailure onTaskFailure)"
  nameWithType: "BatchJobSpecification.setOnTaskFailure(OnBatchTaskFailure onTaskFailure)"
  summary: "Set the on<wbr>Task<wbr>Failure property: The action the Batch service should take when any Task fails in a Job created under this schedule."
  parameters:
  - description: "the onTaskFailure value to set."
    name: "onTaskFailure"
    type: "<xref href=\"com.azure.compute.batch.models.OnBatchTaskFailure?alt=com.azure.compute.batch.models.OnBatchTaskFailure&text=OnBatchTaskFailure\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobSpecification setOnTaskFailure(OnBatchTaskFailure onTaskFailure)"
  desc: "Set the onTaskFailure property: The action the Batch service should take when any Task fails in a Job created under this schedule. A Task is considered to have failed if it have failed if has a failureInfo. A failureInfo is set if the Task completes with a non-zero exit code after exhausting its retry count, or if there was an error starting the Task, for example due to a resource file download error. The default is noaction."
  returns:
    description: "the BatchJobSpecification object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobSpecification?alt=com.azure.compute.batch.models.BatchJobSpecification&text=BatchJobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.setPriority(java.lang.Integer)"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.setPriority(Integer priority)"
  name: "setPriority(Integer priority)"
  nameWithType: "BatchJobSpecification.setPriority(Integer priority)"
  summary: "Set the priority property: The priority of Jobs created under this schedule."
  parameters:
  - description: "the priority value to set."
    name: "priority"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public BatchJobSpecification setPriority(Integer priority)"
  desc: "Set the priority property: The priority of Jobs created under this schedule. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0. This priority is used as the default for all Jobs under the Job Schedule. You can update a Job's priority after it has been created using by using the update Job API."
  returns:
    description: "the BatchJobSpecification object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobSpecification?alt=com.azure.compute.batch.models.BatchJobSpecification&text=BatchJobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.setUsesTaskDependencies(java.lang.Boolean)"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.setUsesTaskDependencies(Boolean usesTaskDependencies)"
  name: "setUsesTaskDependencies(Boolean usesTaskDependencies)"
  nameWithType: "BatchJobSpecification.setUsesTaskDependencies(Boolean usesTaskDependencies)"
  summary: "Set the uses<wbr>Task<wbr>Dependencies property: Whether Tasks in the Job can define dependencies on each other."
  parameters:
  - description: "the usesTaskDependencies value to set."
    name: "usesTaskDependencies"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public BatchJobSpecification setUsesTaskDependencies(Boolean usesTaskDependencies)"
  desc: "Set the usesTaskDependencies property: Whether Tasks in the Job can define dependencies on each other. The default is false."
  returns:
    description: "the BatchJobSpecification object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobSpecification?alt=com.azure.compute.batch.models.BatchJobSpecification&text=BatchJobSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobSpecification.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.compute.batch.models.BatchJobSpecification.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "BatchJobSpecification.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Specifies details of the Jobs to be created on a schedule."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.BatchJobSpecification?alt=com.azure.compute.batch.models.BatchJobSpecification&text=BatchJobSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.compute.batch.models"
artifact: com.azure:azure-compute-batch:1.0.0-beta.3
