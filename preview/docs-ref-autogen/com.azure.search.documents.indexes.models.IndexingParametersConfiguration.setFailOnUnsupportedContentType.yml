### YamlMime:JavaMember
uid: "com.azure.search.documents.indexes.models.IndexingParametersConfiguration.setFailOnUnsupportedContentType*"
fullName: "com.azure.search.documents.indexes.models.IndexingParametersConfiguration.setFailOnUnsupportedContentType"
name: "setFailOnUnsupportedContentType"
nameWithType: "IndexingParametersConfiguration.setFailOnUnsupportedContentType"
members:
- uid: "com.azure.search.documents.indexes.models.IndexingParametersConfiguration.setFailOnUnsupportedContentType(java.lang.Boolean)"
  fullName: "com.azure.search.documents.indexes.models.IndexingParametersConfiguration.setFailOnUnsupportedContentType(Boolean failOnUnsupportedContentType)"
  name: "setFailOnUnsupportedContentType(Boolean failOnUnsupportedContentType)"
  nameWithType: "IndexingParametersConfiguration.setFailOnUnsupportedContentType(Boolean failOnUnsupportedContentType)"
  summary: "Set the failOnUnsupportedContentType property: For Azure blobs, set to false if you want to continue indexing when an unsupported content type is encountered, and you don't know all the content types (file extensions) in advance."
  parameters:
  - description: "the failOnUnsupportedContentType value to set."
    name: "failOnUnsupportedContentType"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IndexingParametersConfiguration setFailOnUnsupportedContentType(Boolean failOnUnsupportedContentType)"
  returns:
    description: "the IndexingParametersConfiguration object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.IndexingParametersConfiguration?alt=com.azure.search.documents.indexes.models.IndexingParametersConfiguration&text=IndexingParametersConfiguration\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.2.0-beta.3
