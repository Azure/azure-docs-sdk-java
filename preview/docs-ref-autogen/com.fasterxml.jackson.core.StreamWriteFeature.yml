### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.StreamWriteFeature
  id: StreamWriteFeature
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core
  children:
  - com.fasterxml.jackson.core.StreamWriteFeature.AUTO_CLOSE_CONTENT
  - com.fasterxml.jackson.core.StreamWriteFeature.AUTO_CLOSE_TARGET
  - com.fasterxml.jackson.core.StreamWriteFeature.FLUSH_PASSED_TO_STREAM
  - com.fasterxml.jackson.core.StreamWriteFeature.IGNORE_UNKNOWN
  - com.fasterxml.jackson.core.StreamWriteFeature.STRICT_DUPLICATE_DETECTION
  - com.fasterxml.jackson.core.StreamWriteFeature.WRITE_BIGDECIMAL_AS_PLAIN
  - com.fasterxml.jackson.core.StreamWriteFeature.collectDefaults()
  - com.fasterxml.jackson.core.StreamWriteFeature.enabledByDefault()
  - com.fasterxml.jackson.core.StreamWriteFeature.enabledIn(int)
  - com.fasterxml.jackson.core.StreamWriteFeature.getMask()
  - com.fasterxml.jackson.core.StreamWriteFeature.mappedFeature()
  - com.fasterxml.jackson.core.StreamWriteFeature.valueOf(java.lang.String)
  - com.fasterxml.jackson.core.StreamWriteFeature.values()
  langs:
  - java
  name: StreamWriteFeature
  nameWithType: StreamWriteFeature
  fullName: com.fasterxml.jackson.core.StreamWriteFeature
  type: Enum
  package: com.fasterxml.jackson.core
  summary: Token writer (generator) features not-specific to any particular format backend. Eventual replacement for non-JSON-specific <xref uid="com.fasterxml.jackson.core.JsonGenerator.Feature" data-throw-if-not-resolved="false">com.fasterxml.jackson.core.JsonGenerator.Feature</xref>s.
  syntax:
    content: public enum StreamWriteFeature extends Enum<StreamWriteFeature>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.StreamWriteFeature.AUTO_CLOSE_CONTENT
  id: AUTO_CLOSE_CONTENT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.StreamWriteFeature
  langs:
  - java
  name: AUTO_CLOSE_CONTENT
  nameWithType: StreamWriteFeature.AUTO_CLOSE_CONTENT
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.AUTO_CLOSE_CONTENT
  type: Field
  package: com.fasterxml.jackson.core
  summary: >-
    Feature that determines what happens when the generator is closed while there are still unmatched <xref uid="com.fasterxml.jackson.core.JsonToken.START_ARRAY" data-throw-if-not-resolved="false">JsonToken#START_ARRAY</xref> or <xref uid="com.fasterxml.jackson.core.JsonToken.START_OBJECT" data-throw-if-not-resolved="false">JsonToken#START_OBJECT</xref> entries in output content. If enabled, such Array(s) and/or Object(s) are automatically closed (that is, matching END\_ token write call is made for all open scopes); if disabled, no additional write calls are made.


    Feature is enabled by default.
  syntax:
    content: public static final StreamWriteFeature AUTO_CLOSE_CONTENT
    return:
      type: com.fasterxml.jackson.core.StreamWriteFeature
- uid: com.fasterxml.jackson.core.StreamWriteFeature.AUTO_CLOSE_TARGET
  id: AUTO_CLOSE_TARGET
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.StreamWriteFeature
  langs:
  - java
  name: AUTO_CLOSE_TARGET
  nameWithType: StreamWriteFeature.AUTO_CLOSE_TARGET
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.AUTO_CLOSE_TARGET
  type: Field
  package: com.fasterxml.jackson.core
  summary: >-
    Feature that determines whether generator will automatically close underlying output target that is NOT owned by the generator. If disabled, calling application has to separately close the underlying <xref uid="java.io.OutputStream" data-throw-if-not-resolved="false">OutputStream</xref> and <xref uid="" data-throw-if-not-resolved="false">Writer</xref> instances used to create the generator. If enabled, generator will handle closing, as long as generator itself gets closed: this happens when end-of-input is encountered, or generator is closed by a call to <xref uid="com.fasterxml.jackson.core.JsonGenerator.close*" data-throw-if-not-resolved="false">JsonGenerator#close</xref>.


    Feature is enabled by default.
  syntax:
    content: public static final StreamWriteFeature AUTO_CLOSE_TARGET
    return:
      type: com.fasterxml.jackson.core.StreamWriteFeature
- uid: com.fasterxml.jackson.core.StreamWriteFeature.FLUSH_PASSED_TO_STREAM
  id: FLUSH_PASSED_TO_STREAM
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.StreamWriteFeature
  langs:
  - java
  name: FLUSH_PASSED_TO_STREAM
  nameWithType: StreamWriteFeature.FLUSH_PASSED_TO_STREAM
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.FLUSH_PASSED_TO_STREAM
  type: Field
  package: com.fasterxml.jackson.core
  summary: >-
    Feature that specifies that calls to <xref uid="com.fasterxml.jackson.core.JsonGenerator.flush*" data-throw-if-not-resolved="false">JsonGenerator#flush</xref> will cause matching `flush()` to underlying <xref uid="java.io.OutputStream" data-throw-if-not-resolved="false">OutputStream</xref> or <xref uid="" data-throw-if-not-resolved="false">Writer</xref>; if disabled this will not be done. Main reason to disable this feature is to prevent flushing at generator level, if it is not possible to prevent method being called by other code (like `ObjectMapper` or third party libraries).


    Feature is enabled by default.
  syntax:
    content: public static final StreamWriteFeature FLUSH_PASSED_TO_STREAM
    return:
      type: com.fasterxml.jackson.core.StreamWriteFeature
- uid: com.fasterxml.jackson.core.StreamWriteFeature.IGNORE_UNKNOWN
  id: IGNORE_UNKNOWN
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.StreamWriteFeature
  langs:
  - java
  name: IGNORE_UNKNOWN
  nameWithType: StreamWriteFeature.IGNORE_UNKNOWN
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.IGNORE_UNKNOWN
  type: Field
  package: com.fasterxml.jackson.core
  summary: >-
    Feature that determines what to do if the underlying data format requires knowledge of all properties to output, and if no definition is found for a property that caller tries to write. If enabled, such properties will be quietly ignored; if disabled, a <xref uid="com.fasterxml.jackson.core.JsonProcessingException" data-throw-if-not-resolved="false">JsonProcessingException</xref> will be thrown to indicate the problem. Typically most textual data formats do NOT require schema information (although some do, such as CSV), whereas many binary data formats do require definitions (such as Avro, protobuf), although not all (Smile, CBOR, BSON and MessagePack do not).


    Note that support for this feature is implemented by individual data format module, if (and only if) it makes sense for the format in question. For JSON, for example, this feature has no effect as properties need not be pre-defined.


    Feature is disabled by default, meaning that if the underlying data format requires knowledge of all properties to output, attempts to write an unknown property will result in a <xref uid="com.fasterxml.jackson.core.JsonProcessingException" data-throw-if-not-resolved="false">JsonProcessingException</xref>
  syntax:
    content: public static final StreamWriteFeature IGNORE_UNKNOWN
    return:
      type: com.fasterxml.jackson.core.StreamWriteFeature
- uid: com.fasterxml.jackson.core.StreamWriteFeature.STRICT_DUPLICATE_DETECTION
  id: STRICT_DUPLICATE_DETECTION
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.StreamWriteFeature
  langs:
  - java
  name: STRICT_DUPLICATE_DETECTION
  nameWithType: StreamWriteFeature.STRICT_DUPLICATE_DETECTION
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.STRICT_DUPLICATE_DETECTION
  type: Field
  package: com.fasterxml.jackson.core
  summary: >-
    Feature that determines whether <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> will explicitly check that no duplicate JSON Object field names are written. If enabled, generator will check all names within context and report duplicates by throwing a <xref uid="com.fasterxml.jackson.core.JsonGenerationException" data-throw-if-not-resolved="false">JsonGenerationException</xref>; if disabled, no such checking will be done. Assumption in latter case is that caller takes care of not trying to write duplicate names.


    Note that enabling this feature will incur performance overhead due to having to store and check additional information.


    Feature is disabled by default.
  syntax:
    content: public static final StreamWriteFeature STRICT_DUPLICATE_DETECTION
    return:
      type: com.fasterxml.jackson.core.StreamWriteFeature
- uid: com.fasterxml.jackson.core.StreamWriteFeature.StreamWriteFeature(com.fasterxml.jackson.core.JsonGenerator.Feature)
  id: StreamWriteFeature(com.fasterxml.jackson.core.JsonGenerator.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.StreamWriteFeature
  langs:
  - java
  name: StreamWriteFeature(JsonGenerator.Feature mappedTo)
  nameWithType: StreamWriteFeature.StreamWriteFeature(JsonGenerator.Feature mappedTo)
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.StreamWriteFeature(JsonGenerator.Feature mappedTo)
  overload: com.fasterxml.jackson.core.StreamWriteFeature.StreamWriteFeature*
  type: Constructor
  package: com.fasterxml.jackson.core
  syntax:
    content: private StreamWriteFeature(JsonGenerator.Feature mappedTo)
    parameters:
    - id: mappedTo
      type: com.fasterxml.jackson.core.JsonGenerator.Feature
- uid: com.fasterxml.jackson.core.StreamWriteFeature.WRITE_BIGDECIMAL_AS_PLAIN
  id: WRITE_BIGDECIMAL_AS_PLAIN
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.StreamWriteFeature
  langs:
  - java
  name: WRITE_BIGDECIMAL_AS_PLAIN
  nameWithType: StreamWriteFeature.WRITE_BIGDECIMAL_AS_PLAIN
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.WRITE_BIGDECIMAL_AS_PLAIN
  type: Field
  package: com.fasterxml.jackson.core
  summary: >-
    Feature that determines whether <xref uid="java.math.BigDecimal" data-throw-if-not-resolved="false">java.math.BigDecimal</xref> entries are serialized using <xref uid="" data-throw-if-not-resolved="false">java.math.BigDecimal#toPlainString()</xref> to prevent values to be written using scientific notation.


    NOTE: only affects generators that serialize <xref uid="java.math.BigDecimal" data-throw-if-not-resolved="false">java.math.BigDecimal</xref>s using textual representation (textual formats but potentially some binary formats).


    Feature is disabled by default, so default output mode is used; this generally depends on how <xref uid="" data-throw-if-not-resolved="false">BigDecimal</xref> has been created.
  syntax:
    content: public static final StreamWriteFeature WRITE_BIGDECIMAL_AS_PLAIN
    return:
      type: com.fasterxml.jackson.core.StreamWriteFeature
- uid: com.fasterxml.jackson.core.StreamWriteFeature.collectDefaults()
  id: collectDefaults()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.StreamWriteFeature
  langs:
  - java
  name: collectDefaults()
  nameWithType: StreamWriteFeature.collectDefaults()
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.collectDefaults()
  overload: com.fasterxml.jackson.core.StreamWriteFeature.collectDefaults*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method that calculates bit set (flags) of all features that are enabled by default.
  syntax:
    content: public static int collectDefaults()
    return:
      type: int
- uid: com.fasterxml.jackson.core.StreamWriteFeature.enabledByDefault()
  id: enabledByDefault()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.StreamWriteFeature
  langs:
  - java
  name: enabledByDefault()
  nameWithType: StreamWriteFeature.enabledByDefault()
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.enabledByDefault()
  overload: com.fasterxml.jackson.core.StreamWriteFeature.enabledByDefault*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public boolean enabledByDefault()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.StreamWriteFeature.enabledIn(int)
  id: enabledIn(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.StreamWriteFeature
  langs:
  - java
  name: enabledIn(int flags)
  nameWithType: StreamWriteFeature.enabledIn(int flags)
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.enabledIn(int flags)
  overload: com.fasterxml.jackson.core.StreamWriteFeature.enabledIn*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public boolean enabledIn(int flags)
    parameters:
    - id: flags
      type: int
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.StreamWriteFeature.getMask()
  id: getMask()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.StreamWriteFeature
  langs:
  - java
  name: getMask()
  nameWithType: StreamWriteFeature.getMask()
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.getMask()
  overload: com.fasterxml.jackson.core.StreamWriteFeature.getMask*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public int getMask()
    return:
      type: int
- uid: com.fasterxml.jackson.core.StreamWriteFeature.mappedFeature()
  id: mappedFeature()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.StreamWriteFeature
  langs:
  - java
  name: mappedFeature()
  nameWithType: StreamWriteFeature.mappedFeature()
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.mappedFeature()
  overload: com.fasterxml.jackson.core.StreamWriteFeature.mappedFeature*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public JsonGenerator.Feature mappedFeature()
    return:
      type: com.fasterxml.jackson.core.JsonGenerator.Feature
- uid: com.fasterxml.jackson.core.StreamWriteFeature.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.StreamWriteFeature
  langs:
  - java
  name: valueOf(String name)
  nameWithType: StreamWriteFeature.valueOf(String name)
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.valueOf(String name)
  overload: com.fasterxml.jackson.core.StreamWriteFeature.valueOf*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public static StreamWriteFeature valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.core.StreamWriteFeature
- uid: com.fasterxml.jackson.core.StreamWriteFeature.values()
  id: values()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.StreamWriteFeature
  langs:
  - java
  name: values()
  nameWithType: StreamWriteFeature.values()
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.values()
  overload: com.fasterxml.jackson.core.StreamWriteFeature.values*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public static StreamWriteFeature[] values()
    return:
      type: com.fasterxml.jackson.core.StreamWriteFeature[]
references:
- uid: com.fasterxml.jackson.core.JsonGenerator.Feature
  name: JsonGenerator.Feature
  nameWithType: JsonGenerator.Feature
  fullName: com.fasterxml.jackson.core.JsonGenerator.Feature
- uid: com.fasterxml.jackson.core.StreamWriteFeature.StreamWriteFeature*
  name: StreamWriteFeature
  nameWithType: StreamWriteFeature.StreamWriteFeature
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.StreamWriteFeature
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.StreamWriteFeature[]
  spec.java:
  - uid: com.fasterxml.jackson.core.StreamWriteFeature
    name: StreamWriteFeature
    fullName: com.fasterxml.jackson.core.StreamWriteFeature
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.StreamWriteFeature.values*
  name: values
  nameWithType: StreamWriteFeature.values
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.values
  package: com.fasterxml.jackson.core
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.StreamWriteFeature.valueOf*
  name: valueOf
  nameWithType: StreamWriteFeature.valueOf
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.valueOf
  package: com.fasterxml.jackson.core
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.StreamWriteFeature.collectDefaults*
  name: collectDefaults
  nameWithType: StreamWriteFeature.collectDefaults
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.collectDefaults
  package: com.fasterxml.jackson.core
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.StreamWriteFeature.enabledByDefault*
  name: enabledByDefault
  nameWithType: StreamWriteFeature.enabledByDefault
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.enabledByDefault
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.StreamWriteFeature.enabledIn*
  name: enabledIn
  nameWithType: StreamWriteFeature.enabledIn
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.enabledIn
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.StreamWriteFeature.getMask*
  name: getMask
  nameWithType: StreamWriteFeature.getMask
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.getMask
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.StreamWriteFeature.mappedFeature*
  name: mappedFeature
  nameWithType: StreamWriteFeature.mappedFeature
  fullName: com.fasterxml.jackson.core.StreamWriteFeature.mappedFeature
  package: com.fasterxml.jackson.core
- uid: java.lang.Enum<com.fasterxml.jackson.core.StreamWriteFeature>
  name: Enum<StreamWriteFeature>
  nameWithType: Enum<StreamWriteFeature>
  fullName: java.lang.Enum<com.fasterxml.jackson.core.StreamWriteFeature>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
