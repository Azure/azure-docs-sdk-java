### YamlMime:JavaEnum
uid: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility"
fullName: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility"
name: "JsonAutoDetect.Visibility"
nameWithType: "JsonAutoDetect.Visibility"
summary: "Enumeration for possible visibility thresholds (minimum visibility) that can be used to limit which methods (and fields) are auto-detected."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum JsonAutoDetect.Visibility extends Enum<JsonAutoDetect.Visibility>"
fields:
- uid: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.ANY"
  fullName: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.ANY"
  name: "ANY"
  nameWithType: "JsonAutoDetect.Visibility.ANY"
  summary: "Value that means that all kinds of access modifiers are acceptable, from private to public."
- uid: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.DEFAULT"
  fullName: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.DEFAULT"
  name: "DEFAULT"
  nameWithType: "JsonAutoDetect.Visibility.DEFAULT"
  summary: "Value that indicates that default visibility level (whatever it is, depends on context) is to be used. This usually means that inherited value (from parent visibility settings) is to be used."
- uid: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.NONE"
  fullName: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.NONE"
  name: "NONE"
  nameWithType: "JsonAutoDetect.Visibility.NONE"
  summary: "Value that indicates that no access modifiers are auto-detectable: this can be used to explicitly disable auto-detection for specified types."
- uid: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.NON_PRIVATE"
  fullName: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.NON_PRIVATE"
  name: "NON_PRIVATE"
  nameWithType: "JsonAutoDetect.Visibility.NON_PRIVATE"
  summary: "Value that means that any other access modifier other than 'private' is considered auto-detectable."
- uid: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.PROTECTED_AND_PUBLIC"
  fullName: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.PROTECTED_AND_PUBLIC"
  name: "PROTECTED_AND_PUBLIC"
  nameWithType: "JsonAutoDetect.Visibility.PROTECTED_AND_PUBLIC"
  summary: "Value that means access modifiers 'protected' and 'public' are auto-detectable (and 'private' and \"package access\" == no modifiers are not)"
- uid: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.PUBLIC_ONLY"
  fullName: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.PUBLIC_ONLY"
  name: "PUBLIC_ONLY"
  nameWithType: "JsonAutoDetect.Visibility.PUBLIC_ONLY"
  summary: "Value to indicate that only 'public' access modifier is considered auto-detectable."
methods:
- uid: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.isVisible(java.lang.reflect.Member)"
  fullName: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.isVisible(Member m)"
  name: "isVisible(Member m)"
  nameWithType: "JsonAutoDetect.Visibility.isVisible(Member m)"
  parameters:
  - name: "m"
    type: "<xref href=\"java.lang.reflect.Member?alt=java.lang.reflect.Member&text=Member\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean isVisible(Member m)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.valueOf(java.lang.String)"
  fullName: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "JsonAutoDetect.Visibility.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static JsonAutoDetect.Visibility valueOf(String name)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility?alt=com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility&text=Visibility\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.values()"
  fullName: "com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.values()"
  name: "values()"
  nameWithType: "JsonAutoDetect.Visibility.values()"
  syntax: "public static JsonAutoDetect.Visibility[] values()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility?alt=com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility&text=Visibility\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
