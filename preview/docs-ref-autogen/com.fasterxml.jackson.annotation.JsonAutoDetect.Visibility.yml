### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
  id: Visibility
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation
  children:
  - com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.ANY
  - com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.DEFAULT
  - com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.NONE
  - com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.NON_PRIVATE
  - com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.PROTECTED_AND_PUBLIC
  - com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.PUBLIC_ONLY
  - com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.isVisible(java.lang.reflect.Member)
  - com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.valueOf(java.lang.String)
  - com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.values()
  langs:
  - java
  name: JsonAutoDetect.Visibility
  nameWithType: JsonAutoDetect.Visibility
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
  type: Enum
  package: com.fasterxml.jackson.annotation
  summary: Enumeration for possible visibility thresholds (minimum visibility) that can be used to limit which methods (and fields) are auto-detected.
  syntax:
    content: public enum JsonAutoDetect.Visibility extends Enum<JsonAutoDetect.Visibility>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.ANY
  id: ANY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
  langs:
  - java
  name: ANY
  nameWithType: JsonAutoDetect.Visibility.ANY
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.ANY
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Value that means that all kinds of access modifiers are acceptable, from private to public.
  syntax:
    content: public static final JsonAutoDetect.Visibility ANY
    return:
      type: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.DEFAULT
  id: DEFAULT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
  langs:
  - java
  name: DEFAULT
  nameWithType: JsonAutoDetect.Visibility.DEFAULT
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.DEFAULT
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Value that indicates that default visibility level (whatever it is, depends on context) is to be used. This usually means that inherited value (from parent visibility settings) is to be used.
  syntax:
    content: public static final JsonAutoDetect.Visibility DEFAULT
    return:
      type: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.NONE
  id: NONE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
  langs:
  - java
  name: NONE
  nameWithType: JsonAutoDetect.Visibility.NONE
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.NONE
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: 'Value that indicates that no access modifiers are auto-detectable: this can be used to explicitly disable auto-detection for specified types.'
  syntax:
    content: public static final JsonAutoDetect.Visibility NONE
    return:
      type: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.NON_PRIVATE
  id: NON_PRIVATE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
  langs:
  - java
  name: NON_PRIVATE
  nameWithType: JsonAutoDetect.Visibility.NON_PRIVATE
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.NON_PRIVATE
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Value that means that any other access modifier other than 'private' is considered auto-detectable.
  syntax:
    content: public static final JsonAutoDetect.Visibility NON_PRIVATE
    return:
      type: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.PROTECTED_AND_PUBLIC
  id: PROTECTED_AND_PUBLIC
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
  langs:
  - java
  name: PROTECTED_AND_PUBLIC
  nameWithType: JsonAutoDetect.Visibility.PROTECTED_AND_PUBLIC
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.PROTECTED_AND_PUBLIC
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Value that means access modifiers 'protected' and 'public' are auto-detectable (and 'private' and "package access" == no modifiers are not)
  syntax:
    content: public static final JsonAutoDetect.Visibility PROTECTED_AND_PUBLIC
    return:
      type: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.PUBLIC_ONLY
  id: PUBLIC_ONLY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
  langs:
  - java
  name: PUBLIC_ONLY
  nameWithType: JsonAutoDetect.Visibility.PUBLIC_ONLY
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.PUBLIC_ONLY
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Value to indicate that only 'public' access modifier is considered auto-detectable.
  syntax:
    content: public static final JsonAutoDetect.Visibility PUBLIC_ONLY
    return:
      type: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.Visibility()
  id: Visibility()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
  langs:
  - java
  name: Visibility()
  nameWithType: JsonAutoDetect.Visibility.Visibility()
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.Visibility()
  overload: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.Visibility*
  type: Constructor
  package: com.fasterxml.jackson.annotation
  syntax:
    content: private Visibility()
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.isVisible(java.lang.reflect.Member)
  id: isVisible(java.lang.reflect.Member)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
  langs:
  - java
  name: isVisible(Member m)
  nameWithType: JsonAutoDetect.Visibility.isVisible(Member m)
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.isVisible(Member m)
  overload: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.isVisible*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public boolean isVisible(Member m)
    parameters:
    - id: m
      type: java.lang.reflect.Member
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
  langs:
  - java
  name: valueOf(String name)
  nameWithType: JsonAutoDetect.Visibility.valueOf(String name)
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.valueOf(String name)
  overload: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.valueOf*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static JsonAutoDetect.Visibility valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.values()
  id: values()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
  langs:
  - java
  name: values()
  nameWithType: JsonAutoDetect.Visibility.values()
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.values()
  overload: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.values*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static JsonAutoDetect.Visibility[] values()
    return:
      type: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility[]
references:
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.Visibility*
  name: Visibility
  nameWithType: JsonAutoDetect.Visibility.Visibility
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.Visibility
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility[]
  spec.java:
  - uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
    name: Visibility
    fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.values*
  name: values
  nameWithType: JsonAutoDetect.Visibility.values
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.values
  package: com.fasterxml.jackson.annotation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.valueOf*
  name: valueOf
  nameWithType: JsonAutoDetect.Visibility.valueOf
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.valueOf
  package: com.fasterxml.jackson.annotation
- uid: java.lang.reflect.Member
  spec.java:
  - uid: java.lang.reflect.Member
    name: Member
    fullName: java.lang.reflect.Member
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.isVisible*
  name: isVisible
  nameWithType: JsonAutoDetect.Visibility.isVisible
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.isVisible
  package: com.fasterxml.jackson.annotation
- uid: java.lang.Enum<com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility>
  name: Enum<JsonAutoDetect.Visibility>
  nameWithType: Enum<JsonAutoDetect.Visibility>
  fullName: java.lang.Enum<com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
