### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.queue.QueueURLParts
  id: QueueURLParts
  parent: com.microsoft.azure.storage.queue
  children:
  - com.microsoft.azure.storage.queue.QueueURLParts.host()
  - com.microsoft.azure.storage.queue.QueueURLParts.ipEndPointStyleInfo()
  - com.microsoft.azure.storage.queue.QueueURLParts.messageId()
  - com.microsoft.azure.storage.queue.QueueURLParts.messages()
  - com.microsoft.azure.storage.queue.QueueURLParts.queueName()
  - com.microsoft.azure.storage.queue.QueueURLParts.QueueURLParts()
  - com.microsoft.azure.storage.queue.QueueURLParts.sasQueryParameters()
  - com.microsoft.azure.storage.queue.QueueURLParts.scheme()
  - com.microsoft.azure.storage.queue.QueueURLParts.toURL()
  - com.microsoft.azure.storage.queue.QueueURLParts.unparsedParameters()
  - com.microsoft.azure.storage.queue.QueueURLParts.withHost(String)
  - com.microsoft.azure.storage.queue.QueueURLParts.withIPEndPointStyleInfo(IPStyleEndPointInfo)
  - com.microsoft.azure.storage.queue.QueueURLParts.withMessageId(String)
  - com.microsoft.azure.storage.queue.QueueURLParts.withMessages(boolean)
  - com.microsoft.azure.storage.queue.QueueURLParts.withQueueName(String)
  - com.microsoft.azure.storage.queue.QueueURLParts.withSasQueryParameters(SASQueryParameters)
  - com.microsoft.azure.storage.queue.QueueURLParts.withScheme(String)
  - com.microsoft.azure.storage.queue.QueueURLParts.withUnparsedParameters(Map<String, String[]>)
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: QueueURLParts
  nameWithType: QueueURLParts
  fullName: com.microsoft.azure.storage.queue.QueueURLParts
  type: Class
  source:
    remote: &o0
      path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
      branch: New-Storage-SDK-V10-Preview
      repo: https://github.com/azure/azure-storage-java
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 30
  package: com.microsoft.azure.storage.queue
  summary: "<p>A QueueURLParts object represents the components that make up an Azure Storage Queue/QueueMessage URL. You may parse an existing URL into its parts with the <xref uid=\"com.microsoft.azure.storage.queue.URLParser\" data-throw-if-not-resolved=\"false\">URLParser</xref> class. You may construct a URL from parts by calling toURL(). It is also possible to use the empty constructor to build a queueURL from scratch. NOTE: Changing any SAS-related field requires computing a new SAS signature. </p>"
  syntax: &o1
    content: public class QueueURLParts
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.storage.queue.QueueURLParts.host()
  id: host()
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: host()
  nameWithType: QueueURLParts.host()
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.host()
  overload: com.microsoft.azure.storage.queue.QueueURLParts.host*
  type: Method
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 66
  package: com.microsoft.azure.storage.queue
  summary: "<p>The host. Ex: \"account.queue.core.windows.net\". </p>"
  syntax:
    content: public String host()
    return:
      type: "26831127"
- uid: com.microsoft.azure.storage.queue.QueueURLParts.ipEndPointStyleInfo()
  id: ipEndPointStyleInfo()
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: ipEndPointStyleInfo()
  nameWithType: QueueURLParts.ipEndPointStyleInfo()
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.ipEndPointStyleInfo()
  overload: com.microsoft.azure.storage.queue.QueueURLParts.ipEndPointStyleInfo*
  type: Method
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 143
  package: com.microsoft.azure.storage.queue
  summary: "<p>A <xref uid=\"com.microsoft.azure.storage.queue.IPStyleEndPointInfo\" data-throw-if-not-resolved=\"false\">IPStyleEndPointInfo</xref></p>"
  syntax:
    content: public IPStyleEndPointInfo ipEndPointStyleInfo()
    return:
      type: com.microsoft.azure.storage.queue.IPStyleEndPointInfo
- uid: com.microsoft.azure.storage.queue.QueueURLParts.messageId()
  id: messageId()
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: messageId()
  nameWithType: QueueURLParts.messageId()
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.messageId()
  overload: com.microsoft.azure.storage.queue.QueueURLParts.messageId*
  type: Method
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 111
  package: com.microsoft.azure.storage.queue
  summary: "<p>MessageId represents the messageID of the message represented by the URL. </p>"
  syntax:
    content: public String messageId()
    return:
      type: "26831127"
- uid: com.microsoft.azure.storage.queue.QueueURLParts.messages()
  id: messages()
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: messages()
  nameWithType: QueueURLParts.messages()
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.messages()
  overload: com.microsoft.azure.storage.queue.QueueURLParts.messages*
  type: Method
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 96
  package: com.microsoft.azure.storage.queue
  summary: "<p>Messages is true if \"/messages\" was/should be in URL </p>"
  syntax:
    content: public boolean messages()
    return:
      type: 4fc6e284
- uid: com.microsoft.azure.storage.queue.QueueURLParts.queueName()
  id: queueName()
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: queueName()
  nameWithType: QueueURLParts.queueName()
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.queueName()
  overload: com.microsoft.azure.storage.queue.QueueURLParts.queueName*
  type: Method
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 81
  package: com.microsoft.azure.storage.queue
  summary: "<p>The queueName name or<code>null \r\n    </code> if a <xref uid=\"com.microsoft.azure.storage.queue.ServiceURL\" data-throw-if-not-resolved=\"false\">ServiceURL</xref> was parsed. </p>"
  syntax:
    content: public String queueName()
    return:
      type: "26831127"
- uid: com.microsoft.azure.storage.queue.QueueURLParts.QueueURLParts()
  id: QueueURLParts()
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: QueueURLParts()
  nameWithType: QueueURLParts.QueueURLParts()
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.QueueURLParts()
  overload: com.microsoft.azure.storage.queue.QueueURLParts.QueueURLParts*
  type: Constructor
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 177
  package: com.microsoft.azure.storage.queue
  summary: "<p>Initializes a QueueURLParts object with all fields set to null, except unparsedParameters, which is an empty map. This may be useful for constructing a URL to a queue storage resource from scratch when the constituent parts are already known. </p>"
  syntax:
    content: public QueueURLParts()
- uid: com.microsoft.azure.storage.queue.QueueURLParts.sasQueryParameters()
  id: sasQueryParameters()
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: sasQueryParameters()
  nameWithType: QueueURLParts.sasQueryParameters()
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.sasQueryParameters()
  overload: com.microsoft.azure.storage.queue.QueueURLParts.sasQueryParameters*
  type: Method
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 127
  package: com.microsoft.azure.storage.queue
  summary: "<p>A <xref uid=\"com.microsoft.azure.storage.queue.SASQueryParameters\" data-throw-if-not-resolved=\"false\">SASQueryParameters</xref> representing the SAS query parameters or<code>null \r\n    </code> if there were no such parameters. </p>"
  syntax:
    content: public SASQueryParameters sasQueryParameters()
    return:
      type: com.microsoft.azure.storage.queue.SASQueryParameters
- uid: com.microsoft.azure.storage.queue.QueueURLParts.scheme()
  id: scheme()
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: scheme()
  nameWithType: QueueURLParts.scheme()
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.scheme()
  overload: com.microsoft.azure.storage.queue.QueueURLParts.scheme*
  type: Method
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 51
  package: com.microsoft.azure.storage.queue
  summary: "<p>The scheme. Ex: \"https://\". </p>"
  syntax:
    content: public String scheme()
    return:
      type: "26831127"
- uid: com.microsoft.azure.storage.queue.QueueURLParts.toURL()
  id: toURL()
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: toURL()
  nameWithType: QueueURLParts.toURL()
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.toURL()
  overload: com.microsoft.azure.storage.queue.QueueURLParts.toURL*
  type: Method
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 190
  package: com.microsoft.azure.storage.queue
  summary: "<p>Converts the queue URL parts to a <xref uid=\"\" data-throw-if-not-resolved=\"false\">URL</xref>.</p>\r\n<p></p>"
  syntax:
    content: public URL toURL()
    return:
      type: a891b3e6
      description: >-
        <p>A<code>java.net.URL 

            </code> to the queue resource composed of all the elements in the object.</p>
  exceptions:
  - type: 7f45ead7
    description: <p>The fields present on the QueueURLParts object were insufficient to construct a valid URL or were ill-formatted. </p>
- uid: com.microsoft.azure.storage.queue.QueueURLParts.unparsedParameters()
  id: unparsedParameters()
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: unparsedParameters()
  nameWithType: QueueURLParts.unparsedParameters()
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.unparsedParameters()
  overload: com.microsoft.azure.storage.queue.QueueURLParts.unparsedParameters*
  type: Method
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 159
  package: com.microsoft.azure.storage.queue
  summary: "<p>The query parameter key value pairs aside from SAS parameters or<code>null \r\n    </code> if there were no such parameters. </p>"
  syntax:
    content: public Map<String, String[]> unparsedParameters()
    return:
      type: f8601be9
- uid: com.microsoft.azure.storage.queue.QueueURLParts.withHost(String)
  id: withHost(String)
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: withHost(String host)
  nameWithType: QueueURLParts.withHost(String host)
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.withHost(String host)
  overload: com.microsoft.azure.storage.queue.QueueURLParts.withHost*
  type: Method
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 73
  package: com.microsoft.azure.storage.queue
  summary: "<p>The host. Ex: \"account.queue.core.windows.net\". </p>"
  syntax:
    content: public QueueURLParts withHost(String host)
    parameters:
    - id: host
      type: "26831127"
    return:
      type: com.microsoft.azure.storage.queue.QueueURLParts
- uid: com.microsoft.azure.storage.queue.QueueURLParts.withIPEndPointStyleInfo(IPStyleEndPointInfo)
  id: withIPEndPointStyleInfo(IPStyleEndPointInfo)
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: withIPEndPointStyleInfo(IPStyleEndPointInfo ipStyleEndPointInfo)
  nameWithType: QueueURLParts.withIPEndPointStyleInfo(IPStyleEndPointInfo ipStyleEndPointInfo)
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.withIPEndPointStyleInfo(IPStyleEndPointInfo ipStyleEndPointInfo)
  overload: com.microsoft.azure.storage.queue.QueueURLParts.withIPEndPointStyleInfo*
  type: Method
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 150
  package: com.microsoft.azure.storage.queue
  summary: "<p>A <xref uid=\"com.microsoft.azure.storage.queue.IPStyleEndPointInfo\" data-throw-if-not-resolved=\"false\">IPStyleEndPointInfo</xref></p>"
  syntax:
    content: public QueueURLParts withIPEndPointStyleInfo(IPStyleEndPointInfo ipStyleEndPointInfo)
    parameters:
    - id: ipStyleEndPointInfo
      type: com.microsoft.azure.storage.queue.IPStyleEndPointInfo
    return:
      type: com.microsoft.azure.storage.queue.QueueURLParts
- uid: com.microsoft.azure.storage.queue.QueueURLParts.withMessageId(String)
  id: withMessageId(String)
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: withMessageId(String messageId)
  nameWithType: QueueURLParts.withMessageId(String messageId)
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.withMessageId(String messageId)
  overload: com.microsoft.azure.storage.queue.QueueURLParts.withMessageId*
  type: Method
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 118
  package: com.microsoft.azure.storage.queue
  summary: "<p>MessageId represents the messageID of the message represented by the URL. </p>"
  syntax:
    content: public QueueURLParts withMessageId(String messageId)
    parameters:
    - id: messageId
      type: "26831127"
    return:
      type: com.microsoft.azure.storage.queue.QueueURLParts
- uid: com.microsoft.azure.storage.queue.QueueURLParts.withMessages(boolean)
  id: withMessages(boolean)
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: withMessages(boolean messages)
  nameWithType: QueueURLParts.withMessages(boolean messages)
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.withMessages(boolean messages)
  overload: com.microsoft.azure.storage.queue.QueueURLParts.withMessages*
  type: Method
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 103
  package: com.microsoft.azure.storage.queue
  summary: "<p>Messages is true if \"/messages\" was/should be in URL </p>"
  syntax:
    content: public QueueURLParts withMessages(boolean messages)
    parameters:
    - id: messages
      type: 4fc6e284
    return:
      type: com.microsoft.azure.storage.queue.QueueURLParts
- uid: com.microsoft.azure.storage.queue.QueueURLParts.withQueueName(String)
  id: withQueueName(String)
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: withQueueName(String queueName)
  nameWithType: QueueURLParts.withQueueName(String queueName)
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.withQueueName(String queueName)
  overload: com.microsoft.azure.storage.queue.QueueURLParts.withQueueName*
  type: Method
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 88
  package: com.microsoft.azure.storage.queue
  summary: "<p>The queueName name or<code>null \r\n    </code> if a <xref uid=\"com.microsoft.azure.storage.queue.ServiceURL\" data-throw-if-not-resolved=\"false\">ServiceURL</xref> was parsed. </p>"
  syntax:
    content: public QueueURLParts withQueueName(String queueName)
    parameters:
    - id: queueName
      type: "26831127"
    return:
      type: com.microsoft.azure.storage.queue.QueueURLParts
- uid: com.microsoft.azure.storage.queue.QueueURLParts.withSasQueryParameters(SASQueryParameters)
  id: withSasQueryParameters(SASQueryParameters)
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: withSasQueryParameters(SASQueryParameters sasQueryParameters)
  nameWithType: QueueURLParts.withSasQueryParameters(SASQueryParameters sasQueryParameters)
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.withSasQueryParameters(SASQueryParameters sasQueryParameters)
  overload: com.microsoft.azure.storage.queue.QueueURLParts.withSasQueryParameters*
  type: Method
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 135
  package: com.microsoft.azure.storage.queue
  summary: "<p>A <xref uid=\"com.microsoft.azure.storage.queue.SASQueryParameters\" data-throw-if-not-resolved=\"false\">SASQueryParameters</xref> representing the SAS query parameters or<code>null \r\n    </code> if there were no such parameters. </p>"
  syntax:
    content: public QueueURLParts withSasQueryParameters(SASQueryParameters sasQueryParameters)
    parameters:
    - id: sasQueryParameters
      type: com.microsoft.azure.storage.queue.SASQueryParameters
    return:
      type: com.microsoft.azure.storage.queue.QueueURLParts
- uid: com.microsoft.azure.storage.queue.QueueURLParts.withScheme(String)
  id: withScheme(String)
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: withScheme(String scheme)
  nameWithType: QueueURLParts.withScheme(String scheme)
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.withScheme(String scheme)
  overload: com.microsoft.azure.storage.queue.QueueURLParts.withScheme*
  type: Method
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 58
  package: com.microsoft.azure.storage.queue
  summary: "<p>The scheme. Ex: \"https://\". </p>"
  syntax:
    content: public QueueURLParts withScheme(String scheme)
    parameters:
    - id: scheme
      type: "26831127"
    return:
      type: com.microsoft.azure.storage.queue.QueueURLParts
- uid: com.microsoft.azure.storage.queue.QueueURLParts.withUnparsedParameters(Map<String, String[]>)
  id: withUnparsedParameters(Map<String, String[]>)
  parent: com.microsoft.azure.storage.queue.QueueURLParts
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  langs:
  - java
  name: withUnparsedParameters(Map<String, String[]> unparsedParameters)
  nameWithType: QueueURLParts.withUnparsedParameters(Map<String, String[]> unparsedParameters)
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.withUnparsedParameters(Map<String, String[]> unparsedParameters)
  overload: com.microsoft.azure.storage.queue.QueueURLParts.withUnparsedParameters*
  type: Method
  source:
    remote: *o0
    path: queue/src/main/java/com/microsoft/azure/storage/queue/QueueURLParts.java
    startLine: 167
  package: com.microsoft.azure.storage.queue
  summary: "<p>The query parameter key value pairs aside from SAS parameters or<code>null \r\n    </code> if there were no such parameters. </p>"
  syntax:
    content: public QueueURLParts withUnparsedParameters(Map<String, String[]> unparsedParameters)
    parameters:
    - id: unparsedParameters
      type: f8601be9
    return:
      type: com.microsoft.azure.storage.queue.QueueURLParts
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.storage.queue.QueueURLParts.scheme*
  name: scheme
  nameWithType: QueueURLParts.scheme
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.scheme
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.QueueURLParts.withScheme*
  name: withScheme
  nameWithType: QueueURLParts.withScheme
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.withScheme
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.QueueURLParts.host*
  name: host
  nameWithType: QueueURLParts.host
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.host
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.QueueURLParts.withHost*
  name: withHost
  nameWithType: QueueURLParts.withHost
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.withHost
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.QueueURLParts.queueName*
  name: queueName
  nameWithType: QueueURLParts.queueName
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.queueName
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.QueueURLParts.withQueueName*
  name: withQueueName
  nameWithType: QueueURLParts.withQueueName
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.withQueueName
  package: com.microsoft.azure.storage.queue
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.storage.queue.QueueURLParts.messages*
  name: messages
  nameWithType: QueueURLParts.messages
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.messages
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.QueueURLParts.withMessages*
  name: withMessages
  nameWithType: QueueURLParts.withMessages
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.withMessages
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.QueueURLParts.messageId*
  name: messageId
  nameWithType: QueueURLParts.messageId
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.messageId
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.QueueURLParts.withMessageId*
  name: withMessageId
  nameWithType: QueueURLParts.withMessageId
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.withMessageId
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.QueueURLParts.sasQueryParameters*
  name: sasQueryParameters
  nameWithType: QueueURLParts.sasQueryParameters
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.sasQueryParameters
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.QueueURLParts.withSasQueryParameters*
  name: withSasQueryParameters
  nameWithType: QueueURLParts.withSasQueryParameters
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.withSasQueryParameters
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.QueueURLParts.ipEndPointStyleInfo*
  name: ipEndPointStyleInfo
  nameWithType: QueueURLParts.ipEndPointStyleInfo
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.ipEndPointStyleInfo
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.QueueURLParts.withIPEndPointStyleInfo*
  name: withIPEndPointStyleInfo
  nameWithType: QueueURLParts.withIPEndPointStyleInfo
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.withIPEndPointStyleInfo
  package: com.microsoft.azure.storage.queue
- uid: f8601be9
  spec.java:
  - name: Map<String, String[]>
    fullName: Map<String, String[]>
- uid: com.microsoft.azure.storage.queue.QueueURLParts.unparsedParameters*
  name: unparsedParameters
  nameWithType: QueueURLParts.unparsedParameters
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.unparsedParameters
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.QueueURLParts.withUnparsedParameters*
  name: withUnparsedParameters
  nameWithType: QueueURLParts.withUnparsedParameters
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.withUnparsedParameters
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.QueueURLParts.QueueURLParts*
  name: QueueURLParts
  nameWithType: QueueURLParts.QueueURLParts
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.QueueURLParts
  package: com.microsoft.azure.storage.queue
- uid: 7f45ead7
  spec.java:
  - name: MalformedURLException
    fullName: MalformedURLException
- uid: a891b3e6
  spec.java:
  - name: URL
    fullName: URL
- uid: com.microsoft.azure.storage.queue.QueueURLParts.toURL*
  name: toURL
  nameWithType: QueueURLParts.toURL
  fullName: com.microsoft.azure.storage.queue.QueueURLParts.toURL
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue.SASQueryParameters
  parent: com.microsoft.azure.storage.queue
  href: com.microsoft.azure.storage.queue.SASQueryParameters.yml
  name: SASQueryParameters
  nameWithType: SASQueryParameters
  fullName: com.microsoft.azure.storage.queue.SASQueryParameters
  type: Class
  summary: "<p>Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly by the user; it is only generated by the <xref uid=\"com.microsoft.azure.storage.queue.AccountSASSignatureValues\" data-throw-if-not-resolved=\"false\">AccountSASSignatureValues</xref> and <xref uid=\"com.microsoft.azure.storage.queue.ServiceSASSignatureValues\" data-throw-if-not-resolved=\"false\">ServiceSASSignatureValues</xref> types. Once generated, it can be set on a <xref uid=\"com.microsoft.azure.storage.queue.QueueURLParts\" data-throw-if-not-resolved=\"false\">QueueURLParts</xref> object to be constructed as part of a URL or it can be encoded into a<code>String \r\n    </code> and appended to a URL directly (though caution should be taken here in case there are existing query parameters, which might affect the appropriate means of appending these query parameters). NOTE: Instances of this class are immutable to ensure thread safety. </p>"
  syntax:
    content: public class SASQueryParameters
- uid: com.microsoft.azure.storage.queue.IPStyleEndPointInfo
  parent: com.microsoft.azure.storage.queue
  href: com.microsoft.azure.storage.queue.IPStyleEndPointInfo.yml
  name: IPStyleEndPointInfo
  nameWithType: IPStyleEndPointInfo
  fullName: com.microsoft.azure.storage.queue.IPStyleEndPointInfo
  type: Class
  summary: "<p>IPEndpointStyleInfo is used for IP endpoint style URL. It's commonly used when working with Azure storage emulator or testing environments. For Example: \"https://10.132.141.33/accountname/queuename\" </p>"
  syntax:
    content: public class IPStyleEndPointInfo
- uid: com.microsoft.azure.storage.queue.QueueURLParts
  parent: com.microsoft.azure.storage.queue
  href: com.microsoft.azure.storage.queue.QueueURLParts.yml
  name: QueueURLParts
  nameWithType: QueueURLParts
  fullName: com.microsoft.azure.storage.queue.QueueURLParts
  type: Class
  summary: "<p>A QueueURLParts object represents the components that make up an Azure Storage Queue/QueueMessage URL. You may parse an existing URL into its parts with the <xref uid=\"com.microsoft.azure.storage.queue.URLParser\" data-throw-if-not-resolved=\"false\">URLParser</xref> class. You may construct a URL from parts by calling toURL(). It is also possible to use the empty constructor to build a queueURL from scratch. NOTE: Changing any SAS-related field requires computing a new SAS signature. </p>"
  syntax: *o1
- uid: com.microsoft.azure.storage.queue.ServiceURL
  parent: com.microsoft.azure.storage.queue
  href: com.microsoft.azure.storage.queue.ServiceURL.yml
  name: ServiceURL
  nameWithType: ServiceURL
  fullName: com.microsoft.azure.storage.queue.ServiceURL
  type: Class
  summary: "<p>Represents a URL to a queue service. This class does not hold any state about a particular storage account but is instead a convenient way of sending off appropriate requests to the resource on the service. It may also be used to construct URLs to queues . Please see <a href=\"https://docs.microsoft.com/en-us/azure/storage/queues/storage-queues-introduction\">here</a> for more information on queues. </p>"
  syntax:
    content: public class ServiceURL
- uid: com.microsoft.azure.storage.queue.URLParser
  parent: com.microsoft.azure.storage.queue
  href: com.microsoft.azure.storage.queue.URLParser.yml
  name: URLParser
  nameWithType: URLParser
  fullName: com.microsoft.azure.storage.queue.URLParser
  type: Class
  summary: "<p>A class used to conveniently parse URLs into <xref uid=\"com.microsoft.azure.storage.queue.QueueURLParts\" data-throw-if-not-resolved=\"false\">QueueURLParts</xref> to modify the components of the URL. </p>"
  syntax:
    content: public class URLParser
