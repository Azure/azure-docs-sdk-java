### YamlMime:JavaType
uid: "com.azure.ai.inference.ChatCompletionsClient"
fullName: "com.azure.ai.inference.ChatCompletionsClient"
name: "ChatCompletionsClient"
nameWithType: "ChatCompletionsClient"
summary: "Initializes a new instance of the synchronous Chat<wbr>Completions<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ChatCompletionsClient**"
methods:
- uid: "com.azure.ai.inference.ChatCompletionsClient.complete(com.azure.ai.inference.models.ChatCompletionsOptions)"
  fullName: "com.azure.ai.inference.ChatCompletionsClient.complete(ChatCompletionsOptions options)"
  name: "complete(ChatCompletionsOptions options)"
  nameWithType: "ChatCompletionsClient.complete(ChatCompletionsOptions options)"
  summary: "Gets chat completions for the provided chat messages."
  parameters:
  - description: "Options for complete API."
    name: "options"
    type: "<xref href=\"com.azure.ai.inference.models.ChatCompletionsOptions?alt=com.azure.ai.inference.models.ChatCompletionsOptions&text=ChatCompletionsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChatCompletions complete(ChatCompletionsOptions options)"
  desc: "Gets chat completions for the provided chat messages. Completions support a wide variety of tasks and generate text that continues from or \"completes\" provided prompt data. The method makes a REST API call to the \\`/chat/completions\\` route on the given endpoint."
  returns:
    description: "chat completions for the provided chat messages.\n Completions support a wide variety of tasks and generate text that continues from or \"completes\"\n provided prompt data."
    type: "<xref href=\"com.azure.ai.inference.models.ChatCompletions?alt=com.azure.ai.inference.models.ChatCompletions&text=ChatCompletions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.inference.ChatCompletionsClient.complete(java.lang.String)"
  fullName: "com.azure.ai.inference.ChatCompletionsClient.complete(String prompt)"
  name: "complete(String prompt)"
  nameWithType: "ChatCompletionsClient.complete(String prompt)"
  summary: "Gets completions for the provided input prompt."
  parameters:
  - description: "The prompt to generate completion text from."
    name: "prompt"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ChatCompletions complete(String prompt)"
  desc: "Gets completions for the provided input prompt. Completions support a wide variety of tasks and generate text that continues from or \"completes\" provided prompt data."
  returns:
    description: "chat completions for the provided input prompts. Chat completions support a wide variety of tasks and\n generate text\n that continues from or \"completes\" provided prompt data."
    type: "<xref href=\"com.azure.ai.inference.models.ChatCompletions?alt=com.azure.ai.inference.models.ChatCompletions&text=ChatCompletions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.inference.ChatCompletionsClient.completeStream(com.azure.ai.inference.models.ChatCompletionsOptions)"
  fullName: "com.azure.ai.inference.ChatCompletionsClient.completeStream(ChatCompletionsOptions options)"
  name: "completeStream(ChatCompletionsOptions options)"
  nameWithType: "ChatCompletionsClient.completeStream(ChatCompletionsOptions options)"
  summary: "Gets chat completions for the provided chat messages in streaming mode."
  parameters:
  - description: "The configuration information for a chat completions request. Completions support a\n wide variety of tasks and generate text that continues from or \"completes\" provided prompt data."
    name: "options"
    type: "<xref href=\"com.azure.ai.inference.models.ChatCompletionsOptions?alt=com.azure.ai.inference.models.ChatCompletionsOptions&text=ChatCompletionsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IterableStream<StreamingChatCompletionsUpdate> completeStream(ChatCompletionsOptions options)"
  desc: "Gets chat completions for the provided chat messages in streaming mode. Chat completions support a wide variety of tasks and generate text that continues from or \"completes\" provided prompt data."
  returns:
    description: "chat completions stream for the provided chat messages. Completions support a wide variety of tasks and\n generate text that continues from or \"completes\" provided prompt data."
    type: "<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.inference.models.StreamingChatCompletionsUpdate?alt=com.azure.ai.inference.models.StreamingChatCompletionsUpdate&text=StreamingChatCompletionsUpdate\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.inference.ChatCompletionsClient.completeWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.inference.ChatCompletionsClient.completeWithResponse(BinaryData completeRequest, RequestOptions requestOptions)"
  name: "completeWithResponse(BinaryData completeRequest, RequestOptions requestOptions)"
  nameWithType: "ChatCompletionsClient.completeWithResponse(BinaryData completeRequest, RequestOptions requestOptions)"
  summary: "Gets chat completions for the provided chat messages."
  parameters:
  - description: "The completeRequest parameter."
    name: "completeRequest"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> completeWithResponse(BinaryData completeRequest, RequestOptions requestOptions)"
  desc: "Gets chat completions for the provided chat messages. Completions support a wide variety of tasks and generate text that continues from or \"completes\" provided prompt data. The method makes a REST API call to the \\`/chat/completions\\` route on the given endpoint.\n\n**Header Parameters**\n\n    | ---------------- | ------ | -------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name             | Type   | Required | Description                                                                                                                                                                                                            |\n    | extra-parameters | String | No       | Controls what happens if extra parameters, undefined by the REST API, are passed in the JSON request payload. This sets the HTTP request header \\`extra-parameters\\`. Allowed values: \"error\", \"drop\", \"pass-through\". |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addHeader\"></xref>\n\n**Request Body Schema**\n\n```java\n{\n     messages (Required): [\n          (Required){\n             role: String(system/user/assistant/tool) (Required)\n         }\n     ]\n     frequency_penalty: Double (Optional)\n     stream: Boolean (Optional)\n     presence_penalty: Double (Optional)\n     temperature: Double (Optional)\n     top_p: Double (Optional)\n     max_tokens: Integer (Optional)\n     response_format (Optional): {\n         type: String (Required)\n     }\n     stop (Optional): [\n         String (Optional)\n     ]\n     tools (Optional): [\n          (Optional){\n             type: String (Required)\n             function (Required): {\n                 name: String (Required)\n                 description: String (Optional)\n                 parameters: Object (Optional)\n             }\n         }\n     ]\n     tool_choice: BinaryData (Optional)\n     seed: Long (Optional)\n     model: String (Optional)\n      (Optional): {\n         String: Object (Required)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     created: long (Required)\n     model: String (Required)\n     usage (Required): {\n         completion_tokens: int (Required)\n         prompt_tokens: int (Required)\n         total_tokens: int (Required)\n     }\n     choices (Required): [\n          (Required){\n             index: int (Required)\n             finish_reason: String(stop/length/content_filter/tool_calls) (Required)\n             message (Required): {\n                 role: String(system/user/assistant/tool) (Required)\n                 content: String (Required)\n                 tool_calls (Optional): [\n                      (Optional){\n                         id: String (Required)\n                         type: String (Required)\n                         function (Required): {\n                             name: String (Required)\n                             arguments: String (Required)\n                         }\n                     }\n                 ]\n             }\n         }\n     ]\n }\n```"
  returns:
    description: "chat completions for the provided chat messages.\n Completions support a wide variety of tasks and generate text that continues from or \"completes\"\n provided prompt data along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the synchronous ChatCompletionsClient type."
metadata: {}
package: "com.azure.ai.inference"
artifact: com.azure:azure-ai-inference:1.0.0-beta.1
