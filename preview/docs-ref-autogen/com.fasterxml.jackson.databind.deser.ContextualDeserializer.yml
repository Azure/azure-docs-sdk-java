### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.deser.ContextualDeserializer
  id: ContextualDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser
  children:
  - com.fasterxml.jackson.databind.deser.ContextualDeserializer.createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  langs:
  - java
  name: ContextualDeserializer
  nameWithType: ContextualDeserializer
  fullName: com.fasterxml.jackson.databind.deser.ContextualDeserializer
  type: Interface
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Add-on interface that <xref uid="com.fasterxml.jackson.databind.JsonDeserializer" data-throw-if-not-resolved="false">JsonDeserializer</xref>s can implement to get a callback that can be used to create contextual (context-dependent) instances of deserializer to use for handling properties of supported type. This can be useful for deserializers that can be configured by annotations, or should otherwise have differing behavior depending on what kind of property is being deserialized.


    Note that in cases where deserializer needs both contextualization and resolution -- that is, implements both this interface and <xref uid="com.fasterxml.jackson.databind.deser.ResolvableDeserializer" data-throw-if-not-resolved="false">ResolvableDeserializer</xref> \-- resolution via <xref uid="com.fasterxml.jackson.databind.deser.ResolvableDeserializer" data-throw-if-not-resolved="false">ResolvableDeserializer</xref> occurs first, and contextual resolution (via this interface) later on.
  syntax:
    content: public interface ContextualDeserializer
- uid: com.fasterxml.jackson.databind.deser.ContextualDeserializer.createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  id: createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.ContextualDeserializer
  langs:
  - java
  name: createContextual(DeserializationContext ctxt, BeanProperty property)
  nameWithType: ContextualDeserializer.createContextual(DeserializationContext ctxt, BeanProperty property)
  fullName: com.fasterxml.jackson.databind.deser.ContextualDeserializer.createContextual(DeserializationContext ctxt, BeanProperty property)
  overload: com.fasterxml.jackson.databind.deser.ContextualDeserializer.createContextual*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to see if a different (or differently configured) deserializer is needed to deserialize values of specified property. Note that instance that this method is called on is typically shared one and as a result method should **NOT** modify this instance but rather construct and return a new instance. This instance should only be returned as-is, in case it is already suitable for use.
  syntax:
    content: public abstract JsonDeserializer<?> createContextual(DeserializationContext ctxt, BeanProperty property)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
      description: "Deserialization context to access configuration, additional \n    deserializers that may be needed by this deserializer"
    - id: property
      type: com.fasterxml.jackson.databind.BeanProperty
      description: >-
        Method, field or constructor parameter that represents the property
           (and is used to assign deserialized value).
           Should be available; but there may be cases where caller cannot provide it and
           null is passed instead (in which case impls usually pass 'this' deserializer as is)
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: >-
        Deserializer to use for deserializing values of specified property;
           may be this instance or a new instance.
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
references:
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: com.fasterxml.jackson.databind.BeanProperty
  name: BeanProperty
  nameWithType: BeanProperty
  fullName: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.JsonDeserializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.ContextualDeserializer.createContextual*
  name: createContextual
  nameWithType: ContextualDeserializer.createContextual
  fullName: com.fasterxml.jackson.databind.deser.ContextualDeserializer.createContextual
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
