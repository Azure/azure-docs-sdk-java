### YamlMime:JavaType
uid: "com.azure.media.videoanalyzer.edge.models.SinkNodeBase"
fullName: "com.azure.media.videoanalyzer.edge.models.SinkNodeBase"
name: "SinkNodeBase"
nameWithType: "SinkNodeBase"
summary: "Base class for topology sink nodes."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class SinkNodeBase"
constructors:
- uid: "com.azure.media.videoanalyzer.edge.models.SinkNodeBase.SinkNodeBase(java.lang.String,java.util.List<com.azure.media.videoanalyzer.edge.models.NodeInput>)"
  fullName: "com.azure.media.videoanalyzer.edge.models.SinkNodeBase.SinkNodeBase(String name, List<NodeInput> inputs)"
  name: "SinkNodeBase(String name, List<NodeInput> inputs)"
  nameWithType: "SinkNodeBase.SinkNodeBase(String name, List<NodeInput> inputs)"
  summary: "Creates an instance of Sink<wbr>Node<wbr>Base class."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the inputs value to set."
    name: "inputs"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.media.videoanalyzer.edge.models.NodeInput?alt=com.azure.media.videoanalyzer.edge.models.NodeInput&text=NodeInput\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SinkNodeBase(String name, List<NodeInput> inputs)"
  desc: "Creates an instance of SinkNodeBase class."
methods:
- uid: "com.azure.media.videoanalyzer.edge.models.SinkNodeBase.getInputs()"
  fullName: "com.azure.media.videoanalyzer.edge.models.SinkNodeBase.getInputs()"
  name: "getInputs()"
  nameWithType: "SinkNodeBase.getInputs()"
  summary: "Get the inputs property: An array of upstream node references within the topology to be used as inputs for this node."
  syntax: "public List<NodeInput> getInputs()"
  desc: "Get the inputs property: An array of upstream node references within the topology to be used as inputs for this node."
  returns:
    description: "the inputs value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.media.videoanalyzer.edge.models.NodeInput?alt=com.azure.media.videoanalyzer.edge.models.NodeInput&text=NodeInput\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.media.videoanalyzer.edge.models.SinkNodeBase.getName()"
  fullName: "com.azure.media.videoanalyzer.edge.models.SinkNodeBase.getName()"
  name: "getName()"
  nameWithType: "SinkNodeBase.getName()"
  summary: "Get the name property: Node name."
  syntax: "public String getName()"
  desc: "Get the name property: Node name. Must be unique within the topology."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Base class for topology sink nodes."
metadata: {}
package: "com.azure.media.videoanalyzer.edge.models"
artifact: com.azure:azure-media-videoanalyzer-edge:1.0.0-beta.6
