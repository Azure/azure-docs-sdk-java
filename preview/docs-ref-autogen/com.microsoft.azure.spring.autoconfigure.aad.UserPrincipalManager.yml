### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager
  id: UserPrincipalManager
  artifact: com.microsoft.azure:azure-spring-boot:2.3.6-beta.1
  parent: com.microsoft.azure.spring.autoconfigure.aad
  children:
  - com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager(com.microsoft.azure.spring.autoconfigure.aad.ServiceEndpointsProperties,com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties,com.nimbusds.jose.util.ResourceRetriever,boolean)
  - com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager(com.microsoft.azure.spring.autoconfigure.aad.ServiceEndpointsProperties,com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties,com.nimbusds.jose.util.ResourceRetriever,boolean,com.nimbusds.jose.jwk.source.JWKSetCache)
  - com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager(com.nimbusds.jose.jwk.source.JWKSource<com.nimbusds.jose.proc.SecurityContext>)
  - com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.buildUserPrincipal(java.lang.String)
  - com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.isTokenIssuedByAAD(java.lang.String)
  langs:
  - java
  name: UserPrincipalManager
  nameWithType: UserPrincipalManager
  fullName: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager
  type: Class
  package: com.microsoft.azure.spring.autoconfigure.aad
  summary: A user principal manager to load user info from JWT.
  syntax:
    content: public class UserPrincipalManager
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager(com.microsoft.azure.spring.autoconfigure.aad.ServiceEndpointsProperties,com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties,com.nimbusds.jose.util.ResourceRetriever,boolean)
  id: UserPrincipalManager(com.microsoft.azure.spring.autoconfigure.aad.ServiceEndpointsProperties,com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties,com.nimbusds.jose.util.ResourceRetriever,boolean)
  artifact: com.microsoft.azure:azure-spring-boot:2.3.6-beta.1
  parent: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager
  langs:
  - java
  name: UserPrincipalManager(ServiceEndpointsProperties serviceEndpointsProps, AADAuthenticationProperties aadAuthProps, ResourceRetriever resourceRetriever, boolean explicitAudienceCheck)
  nameWithType: UserPrincipalManager.UserPrincipalManager(ServiceEndpointsProperties serviceEndpointsProps, AADAuthenticationProperties aadAuthProps, ResourceRetriever resourceRetriever, boolean explicitAudienceCheck)
  fullName: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager(ServiceEndpointsProperties serviceEndpointsProps, AADAuthenticationProperties aadAuthProps, ResourceRetriever resourceRetriever, boolean explicitAudienceCheck)
  overload: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager*
  type: Constructor
  package: com.microsoft.azure.spring.autoconfigure.aad
  summary: Create a new <xref uid="com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager" data-throw-if-not-resolved="false">UserPrincipalManager</xref> based of the <xref uid="com.microsoft.azure.spring.autoconfigure.aad.ServiceEndpoints.getAadKeyDiscoveryUri()" data-throw-if-not-resolved="false">ServiceEndpoints#getAadKeyDiscoveryUri()</xref> and <xref uid="com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties.getEnvironment()" data-throw-if-not-resolved="false">AADAuthenticationProperties#getEnvironment()</xref>.
  syntax:
    content: public UserPrincipalManager(ServiceEndpointsProperties serviceEndpointsProps, AADAuthenticationProperties aadAuthProps, ResourceRetriever resourceRetriever, boolean explicitAudienceCheck)
    parameters:
    - id: serviceEndpointsProps
      type: com.microsoft.azure.spring.autoconfigure.aad.ServiceEndpointsProperties
      description: '- used to retrieve the JWKS URL'
    - id: aadAuthProps
      type: com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties
      description: '- used to retrieve the environment.'
    - id: resourceRetriever
      type: com.nimbusds.jose.util.ResourceRetriever
      description: '- configures the <xref uid="" data-throw-if-not-resolved="false">RemoteJWKSet</xref> call.'
    - id: explicitAudienceCheck
      type: boolean
      description: '- explicit audience check'
- uid: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager(com.microsoft.azure.spring.autoconfigure.aad.ServiceEndpointsProperties,com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties,com.nimbusds.jose.util.ResourceRetriever,boolean,com.nimbusds.jose.jwk.source.JWKSetCache)
  id: UserPrincipalManager(com.microsoft.azure.spring.autoconfigure.aad.ServiceEndpointsProperties,com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties,com.nimbusds.jose.util.ResourceRetriever,boolean,com.nimbusds.jose.jwk.source.JWKSetCache)
  artifact: com.microsoft.azure:azure-spring-boot:2.3.6-beta.1
  parent: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager
  langs:
  - java
  name: UserPrincipalManager(ServiceEndpointsProperties serviceEndpointsProps, AADAuthenticationProperties aadAuthProps, ResourceRetriever resourceRetriever, boolean explicitAudienceCheck, JWKSetCache jwkSetCache)
  nameWithType: UserPrincipalManager.UserPrincipalManager(ServiceEndpointsProperties serviceEndpointsProps, AADAuthenticationProperties aadAuthProps, ResourceRetriever resourceRetriever, boolean explicitAudienceCheck, JWKSetCache jwkSetCache)
  fullName: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager(ServiceEndpointsProperties serviceEndpointsProps, AADAuthenticationProperties aadAuthProps, ResourceRetriever resourceRetriever, boolean explicitAudienceCheck, JWKSetCache jwkSetCache)
  overload: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager*
  type: Constructor
  package: com.microsoft.azure.spring.autoconfigure.aad
  summary: Create a new <xref uid="com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager" data-throw-if-not-resolved="false">UserPrincipalManager</xref> based of the <xref uid="com.microsoft.azure.spring.autoconfigure.aad.ServiceEndpoints.getAadKeyDiscoveryUri()" data-throw-if-not-resolved="false">ServiceEndpoints#getAadKeyDiscoveryUri()</xref> and <xref uid="com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties.getEnvironment()" data-throw-if-not-resolved="false">AADAuthenticationProperties#getEnvironment()</xref>.
  syntax:
    content: public UserPrincipalManager(ServiceEndpointsProperties serviceEndpointsProps, AADAuthenticationProperties aadAuthProps, ResourceRetriever resourceRetriever, boolean explicitAudienceCheck, JWKSetCache jwkSetCache)
    parameters:
    - id: serviceEndpointsProps
      type: com.microsoft.azure.spring.autoconfigure.aad.ServiceEndpointsProperties
      description: '- used to retrieve the JWKS URL'
    - id: aadAuthProps
      type: com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties
      description: '- used to retrieve the environment.'
    - id: resourceRetriever
      type: com.nimbusds.jose.util.ResourceRetriever
      description: '- configures the <xref uid="" data-throw-if-not-resolved="false">RemoteJWKSet</xref> call.'
    - id: explicitAudienceCheck
      type: boolean
      description: '- explicit audience check'
    - id: jwkSetCache
      type: com.nimbusds.jose.jwk.source.JWKSetCache
      description: >-
        - used to cache the JWK set for a finite time, default set to 5 minutes
                                      which matches constructor above if no jwkSetCache is passed in
- uid: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager(com.nimbusds.jose.jwk.source.JWKSource<com.nimbusds.jose.proc.SecurityContext>)
  id: UserPrincipalManager(com.nimbusds.jose.jwk.source.JWKSource<com.nimbusds.jose.proc.SecurityContext>)
  artifact: com.microsoft.azure:azure-spring-boot:2.3.6-beta.1
  parent: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager
  langs:
  - java
  name: UserPrincipalManager(JWKSource<SecurityContext> keySource)
  nameWithType: UserPrincipalManager.UserPrincipalManager(JWKSource<SecurityContext> keySource)
  fullName: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager(JWKSource<SecurityContext> keySource)
  overload: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager*
  type: Constructor
  package: com.microsoft.azure.spring.autoconfigure.aad
  summary: >-
    ï¿½ Creates a new <xref uid="com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager" data-throw-if-not-resolved="false">UserPrincipalManager</xref> with a predefined <xref uid="com.nimbusds.jose.jwk.source.JWKSource" data-throw-if-not-resolved="false">JWKSource</xref>.


    This is helpful in cases the JWK is not a remote JWKSet or for unit testing.
  syntax:
    content: public UserPrincipalManager(JWKSource<SecurityContext> keySource)
    parameters:
    - id: keySource
      type: com.nimbusds.jose.jwk.source.JWKSource<com.nimbusds.jose.proc.SecurityContext>
      description: '- <xref uid="com.nimbusds.jose.jwk.source.JWKSource" data-throw-if-not-resolved="false">JWKSource</xref> containing at least one key'
- uid: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.buildUserPrincipal(java.lang.String)
  id: buildUserPrincipal(java.lang.String)
  artifact: com.microsoft.azure:azure-spring-boot:2.3.6-beta.1
  parent: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager
  langs:
  - java
  name: buildUserPrincipal(String idToken)
  nameWithType: UserPrincipalManager.buildUserPrincipal(String idToken)
  fullName: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.buildUserPrincipal(String idToken)
  overload: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.buildUserPrincipal*
  type: Method
  package: com.microsoft.azure.spring.autoconfigure.aad
  syntax:
    content: public UserPrincipal buildUserPrincipal(String idToken)
    parameters:
    - id: idToken
      type: java.lang.String
    return:
      type: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipal
  exceptions:
  - type: java.text.ParseException
  - type: com.nimbusds.jose.JOSEException
  - type: com.nimbusds.jose.proc.BadJOSEException
- uid: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.isTokenIssuedByAAD(java.lang.String)
  id: isTokenIssuedByAAD(java.lang.String)
  artifact: com.microsoft.azure:azure-spring-boot:2.3.6-beta.1
  parent: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager
  langs:
  - java
  name: isTokenIssuedByAAD(String token)
  nameWithType: UserPrincipalManager.isTokenIssuedByAAD(String token)
  fullName: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.isTokenIssuedByAAD(String token)
  overload: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.isTokenIssuedByAAD*
  type: Method
  package: com.microsoft.azure.spring.autoconfigure.aad
  syntax:
    content: public boolean isTokenIssuedByAAD(String token)
    parameters:
    - id: token
      type: java.lang.String
    return:
      type: boolean
references:
- uid: com.nimbusds.jose.jwk.source.JWKSource<com.nimbusds.jose.proc.SecurityContext>
  spec.java:
  - uid: com.nimbusds.jose.jwk.source.JWKSource
    name: JWKSource
    fullName: com.nimbusds.jose.jwk.source.JWKSource
  - name: <
    fullName: <
  - uid: com.nimbusds.jose.proc.SecurityContext
    name: SecurityContext
    fullName: com.nimbusds.jose.proc.SecurityContext
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager*
  name: UserPrincipalManager
  nameWithType: UserPrincipalManager.UserPrincipalManager
  fullName: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.UserPrincipalManager
  package: com.microsoft.azure.spring.autoconfigure.aad
- uid: com.microsoft.azure.spring.autoconfigure.aad.ServiceEndpointsProperties
  name: ServiceEndpointsProperties
  nameWithType: ServiceEndpointsProperties
  fullName: com.microsoft.azure.spring.autoconfigure.aad.ServiceEndpointsProperties
- uid: com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties
  name: AADAuthenticationProperties
  nameWithType: AADAuthenticationProperties
  fullName: com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties
- uid: com.nimbusds.jose.util.ResourceRetriever
  spec.java:
  - uid: com.nimbusds.jose.util.ResourceRetriever
    name: ResourceRetriever
    fullName: com.nimbusds.jose.util.ResourceRetriever
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.nimbusds.jose.jwk.source.JWKSetCache
  spec.java:
  - uid: com.nimbusds.jose.jwk.source.JWKSetCache
    name: JWKSetCache
    fullName: com.nimbusds.jose.jwk.source.JWKSetCache
- uid: java.text.ParseException
  spec.java:
  - uid: java.text.ParseException
    name: ParseException
    fullName: java.text.ParseException
- uid: com.nimbusds.jose.JOSEException
  spec.java:
  - uid: com.nimbusds.jose.JOSEException
    name: JOSEException
    fullName: com.nimbusds.jose.JOSEException
- uid: com.nimbusds.jose.proc.BadJOSEException
  spec.java:
  - uid: com.nimbusds.jose.proc.BadJOSEException
    name: BadJOSEException
    fullName: com.nimbusds.jose.proc.BadJOSEException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipal
  name: UserPrincipal
  nameWithType: UserPrincipal
  fullName: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipal
- uid: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.buildUserPrincipal*
  name: buildUserPrincipal
  nameWithType: UserPrincipalManager.buildUserPrincipal
  fullName: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.buildUserPrincipal
  package: com.microsoft.azure.spring.autoconfigure.aad
- uid: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.isTokenIssuedByAAD*
  name: isTokenIssuedByAAD
  nameWithType: UserPrincipalManager.isTokenIssuedByAAD
  fullName: com.microsoft.azure.spring.autoconfigure.aad.UserPrincipalManager.isTokenIssuedByAAD
  package: com.microsoft.azure.spring.autoconfigure.aad
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.nimbusds.jose.proc.SecurityContext
  name: SecurityContext
  nameWithType: SecurityContext
  fullName: com.nimbusds.jose.proc.SecurityContext
- uid: com.nimbusds.jose.jwk.source.JWKSource
  name: JWKSource
  nameWithType: JWKSource
  fullName: com.nimbusds.jose.jwk.source.JWKSource
