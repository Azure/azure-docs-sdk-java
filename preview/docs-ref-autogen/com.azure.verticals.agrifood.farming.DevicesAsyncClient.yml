### YamlMime:JavaType
uid: "com.azure.verticals.agrifood.farming.DevicesAsyncClient"
fullName: "com.azure.verticals.agrifood.farming.DevicesAsyncClient"
name: "DevicesAsyncClient"
nameWithType: "DevicesAsyncClient"
summary: "Initializes a new instance of the asynchronous Farm<wbr>Beats<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **DevicesAsyncClient**"
methods:
- uid: "com.azure.verticals.agrifood.farming.DevicesAsyncClient.createOrUpdateWithResponse(java.lang.String,java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.verticals.agrifood.farming.DevicesAsyncClient.createOrUpdateWithResponse(String sensorPartnerId, String deviceId, BinaryData deviceDetails, RequestOptions requestOptions)"
  name: "createOrUpdateWithResponse(String sensorPartnerId, String deviceId, BinaryData deviceDetails, RequestOptions requestOptions)"
  nameWithType: "DevicesAsyncClient.createOrUpdateWithResponse(String sensorPartnerId, String deviceId, BinaryData deviceDetails, RequestOptions requestOptions)"
  summary: "Create a device entity."
  parameters:
  - description: "Id of the sensor partner."
    name: "sensorPartnerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Id of the device resource."
    name: "deviceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Device object details."
    name: "deviceDetails"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> createOrUpdateWithResponse(String sensorPartnerId, String deviceId, BinaryData deviceDetails, RequestOptions requestOptions)"
  desc: "Create a device entity.\n\n**Request Body Schema**\n\n```java\n{\n     deviceDataModelId: String (Optional)\n     integrationId: String (Optional)\n     type: String (Optional)\n     hardwareId: String (Optional)\n     reportingIntervalInSeconds: Integer (Optional)\n     parentDeviceId: String (Optional)\n     location (Optional): {\n         latitude: double (Required)\n         longitude: double (Required)\n     }\n     sensorPartnerId: String (Optional)\n     id: String (Optional)\n     status: String (Optional)\n     createdDateTime: OffsetDateTime (Optional)\n     modifiedDateTime: OffsetDateTime (Optional)\n     eTag: String (Optional)\n     name: String (Optional)\n     description: String (Optional)\n     createdBy: String (Optional)\n     modifiedBy: String (Optional)\n     properties (Optional): {\n         String: Object (Optional)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     deviceDataModelId: String (Optional)\n     integrationId: String (Optional)\n     type: String (Optional)\n     hardwareId: String (Optional)\n     reportingIntervalInSeconds: Integer (Optional)\n     parentDeviceId: String (Optional)\n     location (Optional): {\n         latitude: double (Required)\n         longitude: double (Required)\n     }\n     sensorPartnerId: String (Optional)\n     id: String (Optional)\n     status: String (Optional)\n     createdDateTime: OffsetDateTime (Optional)\n     modifiedDateTime: OffsetDateTime (Optional)\n     eTag: String (Optional)\n     name: String (Optional)\n     description: String (Optional)\n     createdBy: String (Optional)\n     modifiedBy: String (Optional)\n     properties (Optional): {\n         String: Object (Optional)\n     }\n }\n```"
  returns:
    description: "device API model along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.verticals.agrifood.farming.DevicesAsyncClient.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.verticals.agrifood.farming.DevicesAsyncClient.deleteWithResponse(String sensorPartnerId, String deviceId, RequestOptions requestOptions)"
  name: "deleteWithResponse(String sensorPartnerId, String deviceId, RequestOptions requestOptions)"
  nameWithType: "DevicesAsyncClient.deleteWithResponse(String sensorPartnerId, String deviceId, RequestOptions requestOptions)"
  summary: "Deletes a device entity."
  parameters:
  - description: "Id of the sensor partner."
    name: "sensorPartnerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Id of the device resource."
    name: "deviceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> deleteWithResponse(String sensorPartnerId, String deviceId, RequestOptions requestOptions)"
  desc: "Deletes a device entity."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.verticals.agrifood.farming.DevicesAsyncClient.getWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.verticals.agrifood.farming.DevicesAsyncClient.getWithResponse(String sensorPartnerId, String deviceId, RequestOptions requestOptions)"
  name: "getWithResponse(String sensorPartnerId, String deviceId, RequestOptions requestOptions)"
  nameWithType: "DevicesAsyncClient.getWithResponse(String sensorPartnerId, String deviceId, RequestOptions requestOptions)"
  summary: "Gets a device entity."
  parameters:
  - description: "Id of the sensor partner."
    name: "sensorPartnerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Id of the device resource."
    name: "deviceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getWithResponse(String sensorPartnerId, String deviceId, RequestOptions requestOptions)"
  desc: "Gets a device entity.\n\n**Response Body Schema**\n\n```java\n{\n     deviceDataModelId: String (Optional)\n     integrationId: String (Optional)\n     type: String (Optional)\n     hardwareId: String (Optional)\n     reportingIntervalInSeconds: Integer (Optional)\n     parentDeviceId: String (Optional)\n     location (Optional): {\n         latitude: double (Required)\n         longitude: double (Required)\n     }\n     sensorPartnerId: String (Optional)\n     id: String (Optional)\n     status: String (Optional)\n     createdDateTime: OffsetDateTime (Optional)\n     modifiedDateTime: OffsetDateTime (Optional)\n     eTag: String (Optional)\n     name: String (Optional)\n     description: String (Optional)\n     createdBy: String (Optional)\n     modifiedBy: String (Optional)\n     properties (Optional): {\n         String: Object (Optional)\n     }\n }\n```"
  returns:
    description: "a device entity along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.verticals.agrifood.farming.DevicesAsyncClient.list(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.verticals.agrifood.farming.DevicesAsyncClient.list(String sensorPartnerId, RequestOptions requestOptions)"
  name: "list(String sensorPartnerId, RequestOptions requestOptions)"
  nameWithType: "DevicesAsyncClient.list(String sensorPartnerId, RequestOptions requestOptions)"
  summary: "Returns a paginated list of device resources."
  parameters:
  - description: "Id of the associated sensor partner."
    name: "sensorPartnerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> list(String sensorPartnerId, RequestOptions requestOptions)"
  desc: "Returns a paginated list of device resources.\n\n**Query Parameters**\n\n    | ----------------------- | -------------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name                    | Type           | Required | Description                                                                                                                                                                                                                                                                           |\n    | parentDeviceIds         | List<String>   | No       | Id's of the parent devices. Call <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref> to add string to array.                                                                  |\n    | deviceDataModelIds      | List<String>   | No       | Id's of the device data models. Call <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref> to add string to array.                                                              |\n    | ids                     | List<String>   | No       | Ids of the resource. Call <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref> to add string to array.                                                                         |\n    | names                   | List<String>   | No       | Names of the resource. Call <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref> to add string to array.                                                                       |\n    | propertyFilters         | List<String>   | No       | Filters on key-value pairs within the Properties object. eg. \"\\{testKey\\} eq \\{testValue\\}\". Call <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref> to add string to array. |\n    | statuses                | List<String>   | No       | Statuses of the resource. Call <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref> to add string to array.                                                                    |\n    | minCreatedDateTime      | OffsetDateTime | No       | Minimum creation date of resource (inclusive).                                                                                                                                                                                                                                        |\n    | maxCreatedDateTime      | OffsetDateTime | No       | Maximum creation date of resource (inclusive).                                                                                                                                                                                                                                        |\n    | minLastModifiedDateTime | OffsetDateTime | No       | Minimum last modified date of resource (inclusive).                                                                                                                                                                                                                                   |\n    | maxLastModifiedDateTime | OffsetDateTime | No       | Maximum last modified date of resource (inclusive).                                                                                                                                                                                                                                   |\n    | maxPageSize             | Integer        | No       | Maximum number of items needed (inclusive). Minimum = 10, Maximum = 1000, Default value = 50.                                                                                                                                                                                         |\n    | skipToken               | String         | No       | Skip token for getting next set of results.                                                                                                                                                                                                                                           |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     deviceDataModelId: String (Optional)\n     integrationId: String (Optional)\n     type: String (Optional)\n     hardwareId: String (Optional)\n     reportingIntervalInSeconds: Integer (Optional)\n     parentDeviceId: String (Optional)\n     location (Optional): {\n         latitude: double (Required)\n         longitude: double (Required)\n     }\n     sensorPartnerId: String (Optional)\n     id: String (Optional)\n     status: String (Optional)\n     createdDateTime: OffsetDateTime (Optional)\n     modifiedDateTime: OffsetDateTime (Optional)\n     eTag: String (Optional)\n     name: String (Optional)\n     description: String (Optional)\n     createdBy: String (Optional)\n     modifiedBy: String (Optional)\n     properties (Optional): {\n         String: Object (Optional)\n     }\n }\n```"
  returns:
    description: "paged response contains list of requested objects and a URL link to get the next set of results as\n     paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous FarmBeatsClient type."
metadata: {}
package: "com.azure.verticals.agrifood.farming"
artifact: com.azure:azure-verticals-agrifood-farming:1.0.0-beta.3
