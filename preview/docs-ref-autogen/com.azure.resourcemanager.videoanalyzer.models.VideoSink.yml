### YamlMime:JavaType
uid: "com.azure.resourcemanager.videoanalyzer.models.VideoSink"
fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoSink"
name: "VideoSink"
nameWithType: "VideoSink"
summary: "Video sink in a live topology allows for video and audio to be captured, optionally archived, and published via a video resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.NodeBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.SinkNodeBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.videoanalyzer.models.NodeBase.name()"
- "com.azure.resourcemanager.videoanalyzer.models.SinkNodeBase.inputs()"
- "com.azure.resourcemanager.videoanalyzer.models.SinkNodeBase.validate()"
- "com.azure.resourcemanager.videoanalyzer.models.SinkNodeBase.withInputs(java.util.List<com.azure.resourcemanager.videoanalyzer.models.NodeInput>)"
- "com.azure.resourcemanager.videoanalyzer.models.SinkNodeBase.withName(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class VideoSink extends SinkNodeBase"
constructors:
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.VideoSink()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.VideoSink()"
  name: "VideoSink()"
  nameWithType: "VideoSink.VideoSink()"
  syntax: "public VideoSink()"
methods:
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.validate()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.validate()"
  name: "validate()"
  nameWithType: "VideoSink.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.videoanalyzer.models.SinkNodeBase.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.videoCreationProperties()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.videoCreationProperties()"
  name: "videoCreationProperties()"
  nameWithType: "VideoSink.videoCreationProperties()"
  summary: "Get the video<wbr>Creation<wbr>Properties property: Optional video properties to be used in case a new video resource needs to be created on the service."
  syntax: "public VideoCreationProperties videoCreationProperties()"
  desc: "Get the videoCreationProperties property: Optional video properties to be used in case a new video resource needs to be created on the service."
  returns:
    description: "the videoCreationProperties value."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoCreationProperties?alt=com.azure.resourcemanager.videoanalyzer.models.VideoCreationProperties&text=VideoCreationProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.videoName()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.videoName()"
  name: "videoName()"
  nameWithType: "VideoSink.videoName()"
  summary: "Get the video<wbr>Name property: Name of a new or existing video resource used to capture and publish content."
  syntax: "public String videoName()"
  desc: "Get the videoName property: Name of a new or existing video resource used to capture and publish content. Note: if downstream of RTSP source, and if disableArchive is set to true, then no content is archived."
  returns:
    description: "the videoName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.videoPublishingOptions()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.videoPublishingOptions()"
  name: "videoPublishingOptions()"
  nameWithType: "VideoSink.videoPublishingOptions()"
  summary: "Get the video<wbr>Publishing<wbr>Options property: Options to change how the video sink publishes content via the video resource."
  syntax: "public VideoPublishingOptions videoPublishingOptions()"
  desc: "Get the videoPublishingOptions property: Options to change how the video sink publishes content via the video resource. This property is only allowed for topologies where \"kind\" is set to \"live\"."
  returns:
    description: "the videoPublishingOptions value."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoPublishingOptions?alt=com.azure.resourcemanager.videoanalyzer.models.VideoPublishingOptions&text=VideoPublishingOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.withInputs(java.util.List<com.azure.resourcemanager.videoanalyzer.models.NodeInput>)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.withInputs(List<NodeInput> inputs)"
  name: "withInputs(List<NodeInput> inputs)"
  nameWithType: "VideoSink.withInputs(List<NodeInput> inputs)"
  summary: "Set the inputs property: An array of upstream node references within the topology to be used as inputs for this node."
  overridden: "com.azure.resourcemanager.videoanalyzer.models.SinkNodeBase.withInputs(java.util.List<com.azure.resourcemanager.videoanalyzer.models.NodeInput>)"
  parameters:
  - name: "inputs"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.NodeInput?alt=com.azure.resourcemanager.videoanalyzer.models.NodeInput&text=NodeInput\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public VideoSink withInputs(List<NodeInput> inputs)"
  desc: "Set the inputs property: An array of upstream node references within the topology to be used as inputs for this node."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoSink?alt=com.azure.resourcemanager.videoanalyzer.models.VideoSink&text=VideoSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.withName(String name)"
  name: "withName(String name)"
  nameWithType: "VideoSink.withName(String name)"
  summary: "Set the name property: Node name."
  overridden: "com.azure.resourcemanager.videoanalyzer.models.SinkNodeBase.withName(java.lang.String)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoSink withName(String name)"
  desc: "Set the name property: Node name. Must be unique within the topology."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoSink?alt=com.azure.resourcemanager.videoanalyzer.models.VideoSink&text=VideoSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.withVideoCreationProperties(com.azure.resourcemanager.videoanalyzer.models.VideoCreationProperties)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.withVideoCreationProperties(VideoCreationProperties videoCreationProperties)"
  name: "withVideoCreationProperties(VideoCreationProperties videoCreationProperties)"
  nameWithType: "VideoSink.withVideoCreationProperties(VideoCreationProperties videoCreationProperties)"
  summary: "Set the video<wbr>Creation<wbr>Properties property: Optional video properties to be used in case a new video resource needs to be created on the service."
  parameters:
  - description: "the videoCreationProperties value to set."
    name: "videoCreationProperties"
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoCreationProperties?alt=com.azure.resourcemanager.videoanalyzer.models.VideoCreationProperties&text=VideoCreationProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoSink withVideoCreationProperties(VideoCreationProperties videoCreationProperties)"
  desc: "Set the videoCreationProperties property: Optional video properties to be used in case a new video resource needs to be created on the service."
  returns:
    description: "the VideoSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoSink?alt=com.azure.resourcemanager.videoanalyzer.models.VideoSink&text=VideoSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.withVideoName(java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.withVideoName(String videoName)"
  name: "withVideoName(String videoName)"
  nameWithType: "VideoSink.withVideoName(String videoName)"
  summary: "Set the video<wbr>Name property: Name of a new or existing video resource used to capture and publish content."
  parameters:
  - description: "the videoName value to set."
    name: "videoName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoSink withVideoName(String videoName)"
  desc: "Set the videoName property: Name of a new or existing video resource used to capture and publish content. Note: if downstream of RTSP source, and if disableArchive is set to true, then no content is archived."
  returns:
    description: "the VideoSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoSink?alt=com.azure.resourcemanager.videoanalyzer.models.VideoSink&text=VideoSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.withVideoPublishingOptions(com.azure.resourcemanager.videoanalyzer.models.VideoPublishingOptions)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoSink.withVideoPublishingOptions(VideoPublishingOptions videoPublishingOptions)"
  name: "withVideoPublishingOptions(VideoPublishingOptions videoPublishingOptions)"
  nameWithType: "VideoSink.withVideoPublishingOptions(VideoPublishingOptions videoPublishingOptions)"
  summary: "Set the video<wbr>Publishing<wbr>Options property: Options to change how the video sink publishes content via the video resource."
  parameters:
  - description: "the videoPublishingOptions value to set."
    name: "videoPublishingOptions"
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoPublishingOptions?alt=com.azure.resourcemanager.videoanalyzer.models.VideoPublishingOptions&text=VideoPublishingOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoSink withVideoPublishingOptions(VideoPublishingOptions videoPublishingOptions)"
  desc: "Set the videoPublishingOptions property: Options to change how the video sink publishes content via the video resource. This property is only allowed for topologies where \"kind\" is set to \"live\"."
  returns:
    description: "the VideoSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoSink?alt=com.azure.resourcemanager.videoanalyzer.models.VideoSink&text=VideoSink\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Video sink in a live topology allows for video and audio to be captured, optionally archived, and published via a video resource. If archiving is enabled, this results in a video of type 'archive'. If used in a batch topology, this allows for video and audio to be stored as a file, and published via a video resource of type 'file'."
metadata: {}
package: "com.azure.resourcemanager.videoanalyzer.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-videoanalyzer:1.0.0-beta.5
