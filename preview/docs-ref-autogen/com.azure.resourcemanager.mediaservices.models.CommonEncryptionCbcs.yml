### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs"
fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs"
name: "CommonEncryptionCbcs"
nameWithType: "CommonEncryptionCbcs"
summary: "Class for Common<wbr>Encryption<wbr>Cbcs encryption scheme."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **CommonEncryptionCbcs**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.CommonEncryptionCbcs()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.CommonEncryptionCbcs()"
  name: "CommonEncryptionCbcs()"
  nameWithType: "CommonEncryptionCbcs.CommonEncryptionCbcs()"
  summary: "Creates an instance of Common<wbr>Encryption<wbr>Cbcs class."
  syntax: "public CommonEncryptionCbcs()"
  desc: "Creates an instance of CommonEncryptionCbcs class."
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.clearKeyEncryptionConfiguration()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.clearKeyEncryptionConfiguration()"
  name: "clearKeyEncryptionConfiguration()"
  nameWithType: "CommonEncryptionCbcs.clearKeyEncryptionConfiguration()"
  summary: "Get the clear<wbr>Key<wbr>Encryption<wbr>Configuration property: Optional configuration supporting Clear<wbr>Key in Common<wbr>Encryption<wbr>Cbcs encryption scheme."
  syntax: "public ClearKeyEncryptionConfiguration clearKeyEncryptionConfiguration()"
  desc: "Get the clearKeyEncryptionConfiguration property: Optional configuration supporting ClearKey in CommonEncryptionCbcs encryption scheme."
  returns:
    description: "the clearKeyEncryptionConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ClearKeyEncryptionConfiguration?alt=com.azure.resourcemanager.mediaservices.models.ClearKeyEncryptionConfiguration&text=ClearKeyEncryptionConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.clearTracks()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.clearTracks()"
  name: "clearTracks()"
  nameWithType: "CommonEncryptionCbcs.clearTracks()"
  summary: "Get the clear<wbr>Tracks property: Representing which tracks should not be encrypted."
  syntax: "public List<TrackSelection> clearTracks()"
  desc: "Get the clearTracks property: Representing which tracks should not be encrypted."
  returns:
    description: "the clearTracks value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.TrackSelection?alt=com.azure.resourcemanager.mediaservices.models.TrackSelection&text=TrackSelection\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.contentKeys()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.contentKeys()"
  name: "contentKeys()"
  nameWithType: "CommonEncryptionCbcs.contentKeys()"
  summary: "Get the content<wbr>Keys property: Representing default content key for each encryption scheme and separate content keys for specific tracks."
  syntax: "public StreamingPolicyContentKeys contentKeys()"
  desc: "Get the contentKeys property: Representing default content key for each encryption scheme and separate content keys for specific tracks."
  returns:
    description: "the contentKeys value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys?alt=com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys&text=StreamingPolicyContentKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.drm()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.drm()"
  name: "drm()"
  nameWithType: "CommonEncryptionCbcs.drm()"
  summary: "Get the drm property: Configuration of DRMs for current encryption scheme."
  syntax: "public CbcsDrmConfiguration drm()"
  desc: "Get the drm property: Configuration of DRMs for current encryption scheme."
  returns:
    description: "the drm value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CbcsDrmConfiguration?alt=com.azure.resourcemanager.mediaservices.models.CbcsDrmConfiguration&text=CbcsDrmConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.enabledProtocols()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.enabledProtocols()"
  name: "enabledProtocols()"
  nameWithType: "CommonEncryptionCbcs.enabledProtocols()"
  summary: "Get the enabled<wbr>Protocols property: Representing supported protocols."
  syntax: "public EnabledProtocols enabledProtocols()"
  desc: "Get the enabledProtocols property: Representing supported protocols."
  returns:
    description: "the enabledProtocols value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.EnabledProtocols?alt=com.azure.resourcemanager.mediaservices.models.EnabledProtocols&text=EnabledProtocols\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "CommonEncryptionCbcs.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Common<wbr>Encryption<wbr>Cbcs from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CommonEncryptionCbcs fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the CommonEncryptionCbcs."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of CommonEncryptionCbcs from the JsonReader."
  returns:
    description: "An instance of CommonEncryptionCbcs if the JsonReader was pointing to an instance of it, or null if it\n was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "CommonEncryptionCbcs.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.validate()"
  name: "validate()"
  nameWithType: "CommonEncryptionCbcs.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withClearKeyEncryptionConfiguration(com.azure.resourcemanager.mediaservices.models.ClearKeyEncryptionConfiguration)"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withClearKeyEncryptionConfiguration(ClearKeyEncryptionConfiguration clearKeyEncryptionConfiguration)"
  name: "withClearKeyEncryptionConfiguration(ClearKeyEncryptionConfiguration clearKeyEncryptionConfiguration)"
  nameWithType: "CommonEncryptionCbcs.withClearKeyEncryptionConfiguration(ClearKeyEncryptionConfiguration clearKeyEncryptionConfiguration)"
  summary: "Set the clear<wbr>Key<wbr>Encryption<wbr>Configuration property: Optional configuration supporting Clear<wbr>Key in Common<wbr>Encryption<wbr>Cbcs encryption scheme."
  parameters:
  - description: "the clearKeyEncryptionConfiguration value to set."
    name: "clearKeyEncryptionConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ClearKeyEncryptionConfiguration?alt=com.azure.resourcemanager.mediaservices.models.ClearKeyEncryptionConfiguration&text=ClearKeyEncryptionConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommonEncryptionCbcs withClearKeyEncryptionConfiguration(ClearKeyEncryptionConfiguration clearKeyEncryptionConfiguration)"
  desc: "Set the clearKeyEncryptionConfiguration property: Optional configuration supporting ClearKey in CommonEncryptionCbcs encryption scheme."
  returns:
    description: "the CommonEncryptionCbcs object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withClearTracks(java.util.List<com.azure.resourcemanager.mediaservices.models.TrackSelection>)"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withClearTracks(List<TrackSelection> clearTracks)"
  name: "withClearTracks(List<TrackSelection> clearTracks)"
  nameWithType: "CommonEncryptionCbcs.withClearTracks(List<TrackSelection> clearTracks)"
  summary: "Set the clear<wbr>Tracks property: Representing which tracks should not be encrypted."
  parameters:
  - description: "the clearTracks value to set."
    name: "clearTracks"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.TrackSelection?alt=com.azure.resourcemanager.mediaservices.models.TrackSelection&text=TrackSelection\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CommonEncryptionCbcs withClearTracks(List<TrackSelection> clearTracks)"
  desc: "Set the clearTracks property: Representing which tracks should not be encrypted."
  returns:
    description: "the CommonEncryptionCbcs object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withContentKeys(com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys)"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withContentKeys(StreamingPolicyContentKeys contentKeys)"
  name: "withContentKeys(StreamingPolicyContentKeys contentKeys)"
  nameWithType: "CommonEncryptionCbcs.withContentKeys(StreamingPolicyContentKeys contentKeys)"
  summary: "Set the content<wbr>Keys property: Representing default content key for each encryption scheme and separate content keys for specific tracks."
  parameters:
  - description: "the contentKeys value to set."
    name: "contentKeys"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys?alt=com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys&text=StreamingPolicyContentKeys\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommonEncryptionCbcs withContentKeys(StreamingPolicyContentKeys contentKeys)"
  desc: "Set the contentKeys property: Representing default content key for each encryption scheme and separate content keys for specific tracks."
  returns:
    description: "the CommonEncryptionCbcs object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withDrm(com.azure.resourcemanager.mediaservices.models.CbcsDrmConfiguration)"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withDrm(CbcsDrmConfiguration drm)"
  name: "withDrm(CbcsDrmConfiguration drm)"
  nameWithType: "CommonEncryptionCbcs.withDrm(CbcsDrmConfiguration drm)"
  summary: "Set the drm property: Configuration of DRMs for current encryption scheme."
  parameters:
  - description: "the drm value to set."
    name: "drm"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CbcsDrmConfiguration?alt=com.azure.resourcemanager.mediaservices.models.CbcsDrmConfiguration&text=CbcsDrmConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommonEncryptionCbcs withDrm(CbcsDrmConfiguration drm)"
  desc: "Set the drm property: Configuration of DRMs for current encryption scheme."
  returns:
    description: "the CommonEncryptionCbcs object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withEnabledProtocols(com.azure.resourcemanager.mediaservices.models.EnabledProtocols)"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withEnabledProtocols(EnabledProtocols enabledProtocols)"
  name: "withEnabledProtocols(EnabledProtocols enabledProtocols)"
  nameWithType: "CommonEncryptionCbcs.withEnabledProtocols(EnabledProtocols enabledProtocols)"
  summary: "Set the enabled<wbr>Protocols property: Representing supported protocols."
  parameters:
  - description: "the enabledProtocols value to set."
    name: "enabledProtocols"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.EnabledProtocols?alt=com.azure.resourcemanager.mediaservices.models.EnabledProtocols&text=EnabledProtocols\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommonEncryptionCbcs withEnabledProtocols(EnabledProtocols enabledProtocols)"
  desc: "Set the enabledProtocols property: Representing supported protocols."
  returns:
    description: "the CommonEncryptionCbcs object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Class for CommonEncryptionCbcs encryption scheme."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.4.0-beta.2
