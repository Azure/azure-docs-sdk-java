### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.type.TypeFactory"
fullName: "com.fasterxml.jackson.databind.type.TypeFactory"
name: "TypeFactory"
nameWithType: "TypeFactory"
summary: "Class used for creating concrete <xref uid=\"com.fasterxml.jackson.databind.JavaType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JavaType\"></xref> instances, given various inputs.\n\nInstances of this class are accessible using <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.databind.ObjectMapper\"></xref> as well as many objects it constructs (like <xref uid=\"com.fasterxml.jackson.databind.DeserializationConfig\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.databind.DeserializationConfig\"></xref> and <xref uid=\"com.fasterxml.jackson.databind.SerializationConfig\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.databind.SerializationConfig\"></xref>)), but usually those objects also expose convenience methods (`constructType`). So, you can do for example:\n\n```java\nJavaType stringType = mapper.constructType(String.class);\n```\n\nHowever, more advanced methods are only exposed by factory so that you may need to use:\n\n```java\nJavaType stringCollection = mapper.getTypeFactory().constructCollectionType(List.class, String.class);\n```"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class TypeFactory implements Serializable"
constructors:
- "com.fasterxml.jackson.databind.type.TypeFactory.TypeFactory(com.fasterxml.jackson.databind.util.LRUMap<java.lang.Object,com.fasterxml.jackson.databind.JavaType>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.TypeFactory(com.fasterxml.jackson.databind.util.LRUMap<java.lang.Object,com.fasterxml.jackson.databind.JavaType>,com.fasterxml.jackson.databind.type.TypeParser,com.fasterxml.jackson.databind.type.TypeModifier[],java.lang.ClassLoader)"
fields:
- "com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_BOOL"
- "com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_CLASS"
- "com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_COMPARABLE"
- "com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_ENUM"
- "com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_INT"
- "com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_JSON_NODE"
- "com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_LONG"
- "com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_OBJECT"
- "com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_STRING"
- "com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS"
- "com.fasterxml.jackson.databind.type.TypeFactory._classLoader"
- "com.fasterxml.jackson.databind.type.TypeFactory._modifiers"
- "com.fasterxml.jackson.databind.type.TypeFactory._parser"
- "com.fasterxml.jackson.databind.type.TypeFactory._typeCache"
- "com.fasterxml.jackson.databind.type.TypeFactory.instance"
methods:
- "com.fasterxml.jackson.databind.type.TypeFactory._applyModifiers(java.lang.reflect.Type,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.type.TypeFactory._constructSimple(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])"
- "com.fasterxml.jackson.databind.type.TypeFactory._findPrimitive(java.lang.String)"
- "com.fasterxml.jackson.databind.type.TypeFactory._findWellKnownSimple(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.type.TypeFactory._fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)"
- "com.fasterxml.jackson.databind.type.TypeFactory._fromArrayType(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.GenericArrayType,com.fasterxml.jackson.databind.type.TypeBindings)"
- "com.fasterxml.jackson.databind.type.TypeFactory._fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings)"
- "com.fasterxml.jackson.databind.type.TypeFactory._fromParamType(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.ParameterizedType,com.fasterxml.jackson.databind.type.TypeBindings)"
- "com.fasterxml.jackson.databind.type.TypeFactory._fromVariable(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.TypeVariable<?>,com.fasterxml.jackson.databind.type.TypeBindings)"
- "com.fasterxml.jackson.databind.type.TypeFactory._fromWellKnownClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])"
- "com.fasterxml.jackson.databind.type.TypeFactory._fromWellKnownInterface(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])"
- "com.fasterxml.jackson.databind.type.TypeFactory._fromWildcard(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.WildcardType,com.fasterxml.jackson.databind.type.TypeBindings)"
- "com.fasterxml.jackson.databind.type.TypeFactory._newSimpleType(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])"
- "com.fasterxml.jackson.databind.type.TypeFactory._resolveSuperClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings)"
- "com.fasterxml.jackson.databind.type.TypeFactory._resolveSuperInterfaces(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings)"
- "com.fasterxml.jackson.databind.type.TypeFactory._unknownType()"
- "com.fasterxml.jackson.databind.type.TypeFactory.classForName(java.lang.String)"
- "com.fasterxml.jackson.databind.type.TypeFactory.classForName(java.lang.String,boolean,java.lang.ClassLoader)"
- "com.fasterxml.jackson.databind.type.TypeFactory.clearCache()"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructArrayType(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructArrayType(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructCollectionLikeType(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructCollectionLikeType(java.lang.Class<?>,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructCollectionType(java.lang.Class<? extends java.util.Collection>,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructCollectionType(java.lang.Class<? extends java.util.Collection>,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructFromCanonical(java.lang.String)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructGeneralizedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructMapLikeType(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructMapLikeType(java.lang.Class<?>,java.lang.Class<?>,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructMapType(java.lang.Class<? extends java.util.Map>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructMapType(java.lang.Class<? extends java.util.Map>,java.lang.Class<?>,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructParametricType(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType...)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructParametricType(java.lang.Class<?>,java.lang.Class<?>...)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructParametrizedType(java.lang.Class<?>,java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType...)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructParametrizedType(java.lang.Class<?>,java.lang.Class<?>,java.lang.Class<?>...)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructRawCollectionLikeType(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructRawCollectionType(java.lang.Class<? extends java.util.Collection>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructRawMapLikeType(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructRawMapType(java.lang.Class<? extends java.util.Map>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructReferenceType(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructSimpleType(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType[])"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructSimpleType(java.lang.Class<?>,java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType[])"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>,boolean)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructType(com.fasterxml.jackson.core.type.TypeReference<?>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructType(java.lang.reflect.Type)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)"
- "com.fasterxml.jackson.databind.type.TypeFactory.constructType(java.lang.reflect.Type,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.defaultInstance()"
- "com.fasterxml.jackson.databind.type.TypeFactory.findClass(java.lang.String)"
- "com.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(java.lang.Class<?>,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(java.lang.Class<?>,java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings)"
- "com.fasterxml.jackson.databind.type.TypeFactory.getClassLoader()"
- "com.fasterxml.jackson.databind.type.TypeFactory.moreSpecificType(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.type.TypeFactory.rawClass(java.lang.reflect.Type)"
- "com.fasterxml.jackson.databind.type.TypeFactory.uncheckedSimpleType(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.unknownType()"
- "com.fasterxml.jackson.databind.type.TypeFactory.withCache(com.fasterxml.jackson.databind.util.LRUMap<java.lang.Object,com.fasterxml.jackson.databind.JavaType>)"
- "com.fasterxml.jackson.databind.type.TypeFactory.withClassLoader(java.lang.ClassLoader)"
- "com.fasterxml.jackson.databind.type.TypeFactory.withModifier(com.fasterxml.jackson.databind.type.TypeModifier)"
type: "class"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.type"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
