### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.type.TypeParser
  id: TypeParser
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type
  children:
  - com.fasterxml.jackson.databind.type.TypeParser.TypeParser(com.fasterxml.jackson.databind.type.TypeFactory)
  - com.fasterxml.jackson.databind.type.TypeParser._factory
  - com.fasterxml.jackson.databind.type.TypeParser._problem(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer,java.lang.String)
  - com.fasterxml.jackson.databind.type.TypeParser.findClass(java.lang.String,com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer)
  - com.fasterxml.jackson.databind.type.TypeParser.parse(java.lang.String)
  - com.fasterxml.jackson.databind.type.TypeParser.parseType(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer)
  - com.fasterxml.jackson.databind.type.TypeParser.parseTypes(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer)
  - com.fasterxml.jackson.databind.type.TypeParser.withFactory(com.fasterxml.jackson.databind.type.TypeFactory)
  langs:
  - java
  name: TypeParser
  nameWithType: TypeParser
  fullName: com.fasterxml.jackson.databind.type.TypeParser
  type: Class
  package: com.fasterxml.jackson.databind.type
  summary: Simple recursive-descent parser for parsing canonical <xref uid="com.fasterxml.jackson.databind.JavaType" data-throw-if-not-resolved="false">JavaType</xref> representations and constructing type instances.
  syntax:
    content: public class TypeParser implements Serializable
  inheritance:
  - java.lang.Object
  implements:
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.type.TypeParser.TypeParser(com.fasterxml.jackson.databind.type.TypeFactory)
  id: TypeParser(com.fasterxml.jackson.databind.type.TypeFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeParser
  langs:
  - java
  name: TypeParser(TypeFactory f)
  nameWithType: TypeParser.TypeParser(TypeFactory f)
  fullName: com.fasterxml.jackson.databind.type.TypeParser.TypeParser(TypeFactory f)
  overload: com.fasterxml.jackson.databind.type.TypeParser.TypeParser*
  type: Constructor
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public TypeParser(TypeFactory f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.databind.type.TypeFactory
- uid: com.fasterxml.jackson.databind.type.TypeParser._factory
  id: _factory
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeParser
  langs:
  - java
  name: _factory
  nameWithType: TypeParser._factory
  fullName: com.fasterxml.jackson.databind.type.TypeParser._factory
  type: Field
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected final TypeFactory _factory
    return:
      type: com.fasterxml.jackson.databind.type.TypeFactory
- uid: com.fasterxml.jackson.databind.type.TypeParser._problem(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer,java.lang.String)
  id: _problem(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeParser
  langs:
  - java
  name: _problem(TypeParser.MyTokenizer tokens, String msg)
  nameWithType: TypeParser._problem(TypeParser.MyTokenizer tokens, String msg)
  fullName: com.fasterxml.jackson.databind.type.TypeParser._problem(TypeParser.MyTokenizer tokens, String msg)
  overload: com.fasterxml.jackson.databind.type.TypeParser._problem*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected IllegalArgumentException _problem(TypeParser.MyTokenizer tokens, String msg)
    parameters:
    - id: tokens
      type: com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer
    - id: msg
      type: java.lang.String
    return:
      type: java.lang.IllegalArgumentException
- uid: com.fasterxml.jackson.databind.type.TypeParser.findClass(java.lang.String,com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer)
  id: findClass(java.lang.String,com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeParser
  langs:
  - java
  name: findClass(String className, TypeParser.MyTokenizer tokens)
  nameWithType: TypeParser.findClass(String className, TypeParser.MyTokenizer tokens)
  fullName: com.fasterxml.jackson.databind.type.TypeParser.findClass(String className, TypeParser.MyTokenizer tokens)
  overload: com.fasterxml.jackson.databind.type.TypeParser.findClass*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected Class<?> findClass(String className, TypeParser.MyTokenizer tokens)
    parameters:
    - id: className
      type: java.lang.String
    - id: tokens
      type: com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.type.TypeParser.parse(java.lang.String)
  id: parse(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeParser
  langs:
  - java
  name: parse(String canonical)
  nameWithType: TypeParser.parse(String canonical)
  fullName: com.fasterxml.jackson.databind.type.TypeParser.parse(String canonical)
  overload: com.fasterxml.jackson.databind.type.TypeParser.parse*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public JavaType parse(String canonical)
    parameters:
    - id: canonical
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JavaType
  exceptions:
  - type: java.lang.IllegalArgumentException
- uid: com.fasterxml.jackson.databind.type.TypeParser.parseType(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer)
  id: parseType(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeParser
  langs:
  - java
  name: parseType(TypeParser.MyTokenizer tokens)
  nameWithType: TypeParser.parseType(TypeParser.MyTokenizer tokens)
  fullName: com.fasterxml.jackson.databind.type.TypeParser.parseType(TypeParser.MyTokenizer tokens)
  overload: com.fasterxml.jackson.databind.type.TypeParser.parseType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected JavaType parseType(TypeParser.MyTokenizer tokens)
    parameters:
    - id: tokens
      type: com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer
    return:
      type: com.fasterxml.jackson.databind.JavaType
  exceptions:
  - type: java.lang.IllegalArgumentException
- uid: com.fasterxml.jackson.databind.type.TypeParser.parseTypes(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer)
  id: parseTypes(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeParser
  langs:
  - java
  name: parseTypes(TypeParser.MyTokenizer tokens)
  nameWithType: TypeParser.parseTypes(TypeParser.MyTokenizer tokens)
  fullName: com.fasterxml.jackson.databind.type.TypeParser.parseTypes(TypeParser.MyTokenizer tokens)
  overload: com.fasterxml.jackson.databind.type.TypeParser.parseTypes*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected List<JavaType> parseTypes(TypeParser.MyTokenizer tokens)
    parameters:
    - id: tokens
      type: com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer
    return:
      type: java.util.List<com.fasterxml.jackson.databind.JavaType>
  exceptions:
  - type: java.lang.IllegalArgumentException
- uid: com.fasterxml.jackson.databind.type.TypeParser.withFactory(com.fasterxml.jackson.databind.type.TypeFactory)
  id: withFactory(com.fasterxml.jackson.databind.type.TypeFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.TypeParser
  langs:
  - java
  name: withFactory(TypeFactory f)
  nameWithType: TypeParser.withFactory(TypeFactory f)
  fullName: com.fasterxml.jackson.databind.type.TypeParser.withFactory(TypeFactory f)
  overload: com.fasterxml.jackson.databind.type.TypeParser.withFactory*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public TypeParser withFactory(TypeFactory f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.databind.type.TypeFactory
    return:
      type: com.fasterxml.jackson.databind.type.TypeParser
references:
- uid: com.fasterxml.jackson.databind.type.TypeFactory
  name: TypeFactory
  nameWithType: TypeFactory
  fullName: com.fasterxml.jackson.databind.type.TypeFactory
- uid: com.fasterxml.jackson.databind.type.TypeParser.TypeParser*
  name: TypeParser
  nameWithType: TypeParser.TypeParser
  fullName: com.fasterxml.jackson.databind.type.TypeParser.TypeParser
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeParser.withFactory*
  name: withFactory
  nameWithType: TypeParser.withFactory
  fullName: com.fasterxml.jackson.databind.type.TypeParser.withFactory
  package: com.fasterxml.jackson.databind.type
- uid: java.lang.IllegalArgumentException
  spec.java:
  - uid: java.lang.IllegalArgumentException
    name: IllegalArgumentException
    fullName: java.lang.IllegalArgumentException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.TypeParser.parse*
  name: parse
  nameWithType: TypeParser.parse
  fullName: com.fasterxml.jackson.databind.type.TypeParser.parse
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer
  spec.java:
  - uid: com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer
    name: MyTokenizer
    fullName: com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer
- uid: com.fasterxml.jackson.databind.type.TypeParser.parseType*
  name: parseType
  nameWithType: TypeParser.parseType
  fullName: com.fasterxml.jackson.databind.type.TypeParser.parseType
  package: com.fasterxml.jackson.databind.type
- uid: java.util.List<com.fasterxml.jackson.databind.JavaType>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.JavaType
    name: JavaType
    fullName: com.fasterxml.jackson.databind.JavaType
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.type.TypeParser.parseTypes*
  name: parseTypes
  nameWithType: TypeParser.parseTypes
  fullName: com.fasterxml.jackson.databind.type.TypeParser.parseTypes
  package: com.fasterxml.jackson.databind.type
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.type.TypeParser.findClass*
  name: findClass
  nameWithType: TypeParser.findClass
  fullName: com.fasterxml.jackson.databind.type.TypeParser.findClass
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeParser._problem*
  name: _problem
  nameWithType: TypeParser._problem
  fullName: com.fasterxml.jackson.databind.type.TypeParser._problem
  package: com.fasterxml.jackson.databind.type
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
