### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  id: PagedList
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils
  children:
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.<T>toArray(T[])
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.PagedList()
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.PagedList(com.azure.core.http.rest.PagedIterable<E>)
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.add(E)
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.add(int,E)
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.addAll(int,java.util.Collection<? extends E>)
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.addAll(java.util.Collection<? extends E>)
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.clear()
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.contains(java.lang.Object)
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.containsAll(java.util.Collection<?>)
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.get(int)
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.hasNextPage()
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.indexOf(java.lang.Object)
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.isEmpty()
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.iterator()
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.lastIndexOf(java.lang.Object)
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.listIterator()
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.listIterator(int)
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.loadAll()
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.loadNextPage()
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.remove(int)
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.remove(java.lang.Object)
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.removeAll(java.util.Collection<?>)
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.retainAll(java.util.Collection<?>)
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.set(int,E)
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.size()
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.subList(int,int)
  - com.azure.resourcemanager.resources.fluentcore.utils.PagedList.toArray()
  langs:
  - java
  name: PagedList<E>
  nameWithType: PagedList<E>
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>
  type: Class
  package: com.azure.resourcemanager.resources.fluentcore.utils
  summary: Defines a list response from a paging operation. The pages are lazy initialized when an instance of this class is iterated.
  syntax:
    content: public final class PagedList<E> implements List<E>
    typeParameters:
    - id: E
  inheritance:
  - java.lang.Object
  implements:
  - java.util.List<E>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.<T>toArray(T[])
  id: <T>toArray(T[])
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: <T>toArray(T[] a)
  nameWithType: PagedList<E>.<T>toArray(T[] a)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.<T>toArray(T[] a)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.toArray*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public T[] <T>toArray(T[] a)
    parameters:
    - id: a
      type: T[]
    return:
      type: T[]
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.PagedList()
  id: PagedList()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: PagedList()
  nameWithType: PagedList<E>.PagedList()
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.PagedList()
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.PagedList*
  type: Constructor
  package: com.azure.resourcemanager.resources.fluentcore.utils
  summary: Creates an instance of PagedList.
  syntax:
    content: public PagedList()
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.PagedList(com.azure.core.http.rest.PagedIterable<E>)
  id: PagedList(com.azure.core.http.rest.PagedIterable<E>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: PagedList(PagedIterable<E> pagedIterable)
  nameWithType: PagedList<E>.PagedList(PagedIterable<E> pagedIterable)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.PagedList(PagedIterable<E> pagedIterable)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.PagedList*
  type: Constructor
  package: com.azure.resourcemanager.resources.fluentcore.utils
  summary: Creates an instance of PagedList from a <xref uid="com.azure.core.http.rest.PagedIterable" data-throw-if-not-resolved="false">PagedIterable</xref>.
  syntax:
    content: public PagedList(PagedIterable<E> pagedIterable)
    parameters:
    - id: pagedIterable
      type: com.azure.core.http.rest.PagedIterable<E>
      description: the <xref uid="com.azure.core.http.rest.PagedIterable" data-throw-if-not-resolved="false">PagedIterable</xref> object.
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.add(E)
  id: add(E)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: add(E e)
  nameWithType: PagedList<E>.add(E e)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.add(E e)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.add*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public boolean add(E e)
    parameters:
    - id: e
      type: E
    return:
      type: boolean
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.add(int,E)
  id: add(int,E)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: add(int index, E element)
  nameWithType: PagedList<E>.add(int index, E element)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.add(int index, E element)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.add*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public void add(int index, E element)
    parameters:
    - id: index
      type: int
    - id: element
      type: E
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.addAll(int,java.util.Collection<? extends E>)
  id: addAll(int,java.util.Collection<? extends E>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: addAll(int index, Collection<? extends E> c)
  nameWithType: PagedList<E>.addAll(int index, Collection<? extends E> c)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.addAll(int index, Collection<? extends E> c)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.addAll*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public boolean addAll(int index, Collection<? extends E> c)
    parameters:
    - id: index
      type: int
    - id: c
      type: java.util.Collection<? extends E>
    return:
      type: boolean
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.addAll(java.util.Collection<? extends E>)
  id: addAll(java.util.Collection<? extends E>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: addAll(Collection<? extends E> c)
  nameWithType: PagedList<E>.addAll(Collection<? extends E> c)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.addAll(Collection<? extends E> c)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.addAll*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public boolean addAll(Collection<? extends E> c)
    parameters:
    - id: c
      type: java.util.Collection<? extends E>
    return:
      type: boolean
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.clear()
  id: clear()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: clear()
  nameWithType: PagedList<E>.clear()
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.clear()
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.clear*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public void clear()
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.contains(java.lang.Object)
  id: contains(java.lang.Object)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: contains(Object o)
  nameWithType: PagedList<E>.contains(Object o)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.contains(Object o)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.contains*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public boolean contains(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.containsAll(java.util.Collection<?>)
  id: containsAll(java.util.Collection<?>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: containsAll(Collection<?> c)
  nameWithType: PagedList<E>.containsAll(Collection<?> c)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.containsAll(Collection<?> c)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.containsAll*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public boolean containsAll(Collection<?> c)
    parameters:
    - id: c
      type: java.util.Collection<?>
    return:
      type: boolean
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.get(int)
  id: get(int)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: get(int index)
  nameWithType: PagedList<E>.get(int index)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.get(int index)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.get*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public E get(int index)
    parameters:
    - id: index
      type: int
    return:
      type: E
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.hasNextPage()
  id: hasNextPage()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: hasNextPage()
  nameWithType: PagedList<E>.hasNextPage()
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.hasNextPage()
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.hasNextPage*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  summary: If there are more pages available.
  syntax:
    content: protected boolean hasNextPage()
    return:
      type: boolean
      description: true if there are more pages to load. False otherwise.
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.indexOf(java.lang.Object)
  id: indexOf(java.lang.Object)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: indexOf(Object o)
  nameWithType: PagedList<E>.indexOf(Object o)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.indexOf(Object o)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.indexOf*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public int indexOf(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: int
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.isEmpty()
  id: isEmpty()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: isEmpty()
  nameWithType: PagedList<E>.isEmpty()
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.isEmpty()
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.isEmpty*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public boolean isEmpty()
    return:
      type: boolean
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.iterator()
  id: iterator()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: iterator()
  nameWithType: PagedList<E>.iterator()
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.iterator()
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.iterator*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public Iterator<E> iterator()
    return:
      type: java.util.Iterator<E>
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.lastIndexOf(java.lang.Object)
  id: lastIndexOf(java.lang.Object)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: lastIndexOf(Object o)
  nameWithType: PagedList<E>.lastIndexOf(Object o)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.lastIndexOf(Object o)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.lastIndexOf*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public int lastIndexOf(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: int
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.listIterator()
  id: listIterator()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: listIterator()
  nameWithType: PagedList<E>.listIterator()
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.listIterator()
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.listIterator*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public ListIterator<E> listIterator()
    return:
      type: java.util.ListIterator<E>
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.listIterator(int)
  id: listIterator(int)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: listIterator(int index)
  nameWithType: PagedList<E>.listIterator(int index)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.listIterator(int index)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.listIterator*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public ListIterator<E> listIterator(int index)
    parameters:
    - id: index
      type: int
    return:
      type: java.util.ListIterator<E>
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.loadAll()
  id: loadAll()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: loadAll()
  nameWithType: PagedList<E>.loadAll()
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.loadAll()
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.loadAll*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  summary: Keep loading the next page from the next page link until all items are loaded.
  syntax:
    content: public void loadAll()
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.loadNextPage()
  id: loadNextPage()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: loadNextPage()
  nameWithType: PagedList<E>.loadNextPage()
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.loadNextPage()
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.loadNextPage*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  summary: Loads a page from next page link. The exceptions are wrapped into Java Runtime exceptions.
  syntax:
    content: protected void loadNextPage()
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.remove(int)
  id: remove(int)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: remove(int index)
  nameWithType: PagedList<E>.remove(int index)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.remove(int index)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.remove*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public E remove(int index)
    parameters:
    - id: index
      type: int
    return:
      type: E
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.remove(java.lang.Object)
  id: remove(java.lang.Object)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: remove(Object o)
  nameWithType: PagedList<E>.remove(Object o)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.remove(Object o)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.remove*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public boolean remove(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.removeAll(java.util.Collection<?>)
  id: removeAll(java.util.Collection<?>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: removeAll(Collection<?> c)
  nameWithType: PagedList<E>.removeAll(Collection<?> c)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.removeAll(Collection<?> c)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.removeAll*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public boolean removeAll(Collection<?> c)
    parameters:
    - id: c
      type: java.util.Collection<?>
    return:
      type: boolean
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.retainAll(java.util.Collection<?>)
  id: retainAll(java.util.Collection<?>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: retainAll(Collection<?> c)
  nameWithType: PagedList<E>.retainAll(Collection<?> c)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.retainAll(Collection<?> c)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.retainAll*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public boolean retainAll(Collection<?> c)
    parameters:
    - id: c
      type: java.util.Collection<?>
    return:
      type: boolean
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.set(int,E)
  id: set(int,E)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: set(int index, E element)
  nameWithType: PagedList<E>.set(int index, E element)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.set(int index, E element)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.set*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public E set(int index, E element)
    parameters:
    - id: index
      type: int
    - id: element
      type: E
    return:
      type: E
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.size()
  id: size()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: size()
  nameWithType: PagedList<E>.size()
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.size()
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.size*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public int size()
    return:
      type: int
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.subList(int,int)
  id: subList(int,int)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: subList(int fromIndex, int toIndex)
  nameWithType: PagedList<E>.subList(int fromIndex, int toIndex)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.subList(int fromIndex, int toIndex)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.subList*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public List<E> subList(int fromIndex, int toIndex)
    parameters:
    - id: fromIndex
      type: int
    - id: toIndex
      type: int
    return:
      type: java.util.List<E>
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.toArray()
  id: toArray()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.PagedList
  langs:
  - java
  name: toArray()
  nameWithType: PagedList<E>.toArray()
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.toArray()
  overload: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.toArray*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public Object[] toArray()
    return:
      type: java.lang.Object[]
references:
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.PagedList*
  name: PagedList
  nameWithType: PagedList<E>.PagedList
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.PagedList
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: com.azure.core.http.rest.PagedIterable<E>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.hasNextPage*
  name: hasNextPage
  nameWithType: PagedList<E>.hasNextPage
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.hasNextPage
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.loadNextPage*
  name: loadNextPage
  nameWithType: PagedList<E>.loadNextPage
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.loadNextPage
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.loadAll*
  name: loadAll
  nameWithType: PagedList<E>.loadAll
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.loadAll
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.size*
  name: size
  nameWithType: PagedList<E>.size
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.size
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.isEmpty*
  name: isEmpty
  nameWithType: PagedList<E>.isEmpty
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.isEmpty
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.contains*
  name: contains
  nameWithType: PagedList<E>.contains
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.contains
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: java.util.Iterator<E>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.iterator*
  name: iterator
  nameWithType: PagedList<E>.iterator
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.iterator
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: java.lang.Object[]
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '[]'
    fullName: '[]'
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.toArray*
  name: toArray
  nameWithType: PagedList<E>.toArray
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.toArray
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: T[]
  spec.java:
  - uid: T
    name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
- uid: E
  spec.java:
  - uid: E
    name: E
    fullName: E
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.add*
  name: add
  nameWithType: PagedList<E>.add
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.add
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.remove*
  name: remove
  nameWithType: PagedList<E>.remove
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.remove
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: java.util.Collection<?>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.containsAll*
  name: containsAll
  nameWithType: PagedList<E>.containsAll
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.containsAll
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: java.util.Collection<? extends E>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: '? extends E'
    name: '? extends E'
    fullName: '? extends E'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.addAll*
  name: addAll
  nameWithType: PagedList<E>.addAll
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.addAll
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.removeAll*
  name: removeAll
  nameWithType: PagedList<E>.removeAll
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.removeAll
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.retainAll*
  name: retainAll
  nameWithType: PagedList<E>.retainAll
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.retainAll
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.clear*
  name: clear
  nameWithType: PagedList<E>.clear
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.clear
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.get*
  name: get
  nameWithType: PagedList<E>.get
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.get
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.set*
  name: set
  nameWithType: PagedList<E>.set
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.set
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.indexOf*
  name: indexOf
  nameWithType: PagedList<E>.indexOf
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.indexOf
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.lastIndexOf*
  name: lastIndexOf
  nameWithType: PagedList<E>.lastIndexOf
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.lastIndexOf
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: java.util.ListIterator<E>
  spec.java:
  - uid: java.util.ListIterator
    name: ListIterator
    fullName: java.util.ListIterator
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.listIterator*
  name: listIterator
  nameWithType: PagedList<E>.listIterator
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.listIterator
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: java.util.List<E>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluentcore.utils.PagedList.subList*
  name: subList
  nameWithType: PagedList<E>.subList
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.PagedList<E>.subList
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: '? extends E'
  name: '? extends E'
  nameWithType: '? extends E'
  fullName: '? extends E'
- uid: java.util.ListIterator
  name: ListIterator
  nameWithType: ListIterator
  fullName: java.util.ListIterator
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
