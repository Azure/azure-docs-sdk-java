### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Iterators.elementsEqual*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Iterators.elementsEqual"
name: "elementsEqual"
nameWithType: "Iterators.elementsEqual"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Iterators.elementsEqual(java.util.Iterator<?>,java.util.Iterator<?>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Iterators.elementsEqual(Iterator<?> iterator1, Iterator<?> iterator2)"
  name: "elementsEqual(Iterator<?> iterator1, Iterator<?> iterator2)"
  nameWithType: "Iterators.elementsEqual(Iterator<?> iterator1, Iterator<?> iterator2)"
  summary: "Determines whether two iterators contain equal elements in the same order. More specifically, this method returns `true` if `iterator1` and `iterator2` contain the same number of elements and every element of `iterator1` is equal to the corresponding element of `iterator2`.\n\nNote that this will modify the supplied iterators, since they will have been advanced some number of elements forward."
  parameters:
  - name: "iterator1"
    type: "<xref href=\"java.util.Iterator?alt=java.util.Iterator&text=Iterator\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "iterator2"
    type: "<xref href=\"java.util.Iterator?alt=java.util.Iterator&text=Iterator\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public static boolean elementsEqual(Iterator<?> iterator1, Iterator<?> iterator2)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
