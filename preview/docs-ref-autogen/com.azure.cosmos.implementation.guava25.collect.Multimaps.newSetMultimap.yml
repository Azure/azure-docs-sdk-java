### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Multimaps.newSetMultimap*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>newSetMultimap"
name: "<K,V>newSetMultimap"
nameWithType: "Multimaps.<K,V>newSetMultimap"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>newSetMultimap(java.util.Map<K,java.util.Collection<V>>,com.azure.cosmos.implementation.guava25.base.Supplier<? extends java.util.Set<V>>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>newSetMultimap(Map<K,Collection<V>> map, Supplier<? extends Set<V>> factory)"
  name: "<K,V>newSetMultimap(Map<K,Collection<V>> map, Supplier<? extends Set<V>> factory)"
  nameWithType: "Multimaps.<K,V>newSetMultimap(Map<K,Collection<V>> map, Supplier<? extends Set<V>> factory)"
  summary: "Creates a new `SetMultimap` that uses the provided map and factory. It can generate a multimap based on arbitrary <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref> and <xref uid=\"java.util.Set\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Set\"></xref> classes.\n\nThe `factory`\\-generated and `map` classes determine the multimap iteration order. They also specify the behavior of the `equals`, `hashCode`, and `toString` methods for the multimap and its returned views. However, the multimap's `get` method returns instances of a different class than `factory.get()` does.\n\nThe multimap is serializable if `map`, `factory`, the sets generated by `factory`, and the multimap contents are all serializable.\n\nThe multimap is not threadsafe when any concurrent operations update the multimap, even if `map` and the instances generated by `factory` are. Concurrent read operations will work correctly. To allow concurrent update operations, wrap the multimap with a call to <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multimaps.synchronizedSetMultimap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#synchronizedSetMultimap\"></xref>.\n\nCall this method only when the simpler methods <xref uid=\"com.azure.cosmos.implementation.guava25.collect.HashMultimap.&lt;K,V&gt;create()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HashMultimap#create()\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.LinkedHashMultimap.&lt;K,V&gt;create()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LinkedHashMultimap#create()\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.TreeMultimap.&lt;K,V&gt;create()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TreeMultimap#create()\"></xref>, and <xref uid=\"com.azure.cosmos.implementation.guava25.collect.TreeMultimap.&lt;K,V&gt;create(java.util.Comparator&lt;? super K&gt;,java.util.Comparator&lt;? super V&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TreeMultimap#create(Comparator, Comparator)\"></xref> won't suffice.\n\nNote: the multimap assumes complete ownership over of `map` and the sets returned by `factory`. Those objects should not be manually updated and they should not use soft, weak, or phantom references."
  parameters:
  - description: "place to store the mapping from each key to its corresponding values"
    name: "map"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "supplier of new, empty sets that will each hold all values for a given key"
    name: "factory"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Supplier?alt=com.azure.cosmos.implementation.guava25.base.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends java.util.Set?alt=? extends java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public static SetMultimap<K,V> <K,V>newSetMultimap(Map<K,Collection<V>> map, Supplier<? extends Set<V>> factory)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.SetMultimap?alt=com.azure.cosmos.implementation.guava25.collect.SetMultimap&text=SetMultimap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
