### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getEmbeddedObject*"
fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getEmbeddedObject"
name: "getEmbeddedObject"
nameWithType: "TokenBuffer.Parser.getEmbeddedObject"
members:
- uid: "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getEmbeddedObject()"
  fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.Parser.getEmbeddedObject()"
  name: "getEmbeddedObject()"
  nameWithType: "TokenBuffer.Parser.getEmbeddedObject()"
  summary: "Accessor that can be called if (and only if) the current token is <xref uid=\"com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonToken#VALUE_EMBEDDED_OBJECT\"></xref>. For other token types, null is returned.\n\nNote: only some specialized parser implementations support embedding of objects (usually ones that are facades on top of non-streaming sources, such as object trees). One exception is access to binary content (whether via base64 encoding or not) which typically is accessible using this method, as well as <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getBinaryValue()\"></xref>."
  overridden: "com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()"
  syntax: "public Object getEmbeddedObject()"
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.util"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
