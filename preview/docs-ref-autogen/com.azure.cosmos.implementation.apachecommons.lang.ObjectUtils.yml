### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils
  id: ObjectUtils
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang
  children:
  - com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils.<T>defaultIfNull(T,T)
  - com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils.notEqual(java.lang.Object,java.lang.Object)
  langs:
  - java
  name: ObjectUtils
  nameWithType: ObjectUtils
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils
  type: Class
  package: com.azure.cosmos.implementation.apachecommons.lang
  syntax:
    content: public class ObjectUtils
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils.<T>defaultIfNull(T,T)
  id: <T>defaultIfNull(T,T)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils
  langs:
  - java
  name: <T>defaultIfNull(T object, T defaultValue)
  nameWithType: ObjectUtils.<T>defaultIfNull(T object, T defaultValue)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils.<T>defaultIfNull(T object, T defaultValue)
  overload: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils.defaultIfNull*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang
  summary: >-
    Returns a default value if the object passed is `null`.


    ```java

    ObjectUtils.defaultIfNull(null, null)      = null
     ObjectUtils.defaultIfNull(null, "")        = ""
     ObjectUtils.defaultIfNull(null, "zz")      = "zz"
     ObjectUtils.defaultIfNull("abc", *)        = "abc"
     ObjectUtils.defaultIfNull(Boolean.TRUE, *) = Boolean.TRUE
    ```
  syntax:
    content: public static T <T>defaultIfNull(T object, T defaultValue)
    parameters:
    - id: object
      type: T
      description: the <code>Object</code> to test, may be <code>null</code>
    - id: defaultValue
      type: T
      description: the default value to return, may be <code>null</code>
    return:
      type: T
      description: <code>object</code> if it is not <code>null</code>, defaultValue otherwise
- uid: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils.ObjectUtils()
  id: ObjectUtils()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils
  langs:
  - java
  name: ObjectUtils()
  nameWithType: ObjectUtils.ObjectUtils()
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils.ObjectUtils()
  overload: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils.ObjectUtils*
  type: Constructor
  package: com.azure.cosmos.implementation.apachecommons.lang
  summary: >-
    `ObjectUtils` instances should NOT be constructed in standard programming. Instead, the static methods on the class should be used, such as `ObjectUtils.defaultIfNull("a","b");`.


    This constructor is public to permit tools that require a JavaBean instance to operate.
  syntax:
    content: private ObjectUtils()
- uid: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils.notEqual(java.lang.Object,java.lang.Object)
  id: notEqual(java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils
  langs:
  - java
  name: notEqual(Object object1, Object object2)
  nameWithType: ObjectUtils.notEqual(Object object1, Object object2)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils.notEqual(Object object1, Object object2)
  overload: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils.notEqual*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang
  summary: >-
    Compares two objects for inequality, where either one or both objects may be `null`.


    ```java

    ObjectUtils.notEqual(null, null)                  = false
     ObjectUtils.notEqual(null, "")                    = true
     ObjectUtils.notEqual("", null)                    = true
     ObjectUtils.notEqual("", "")                      = false
     ObjectUtils.notEqual(Boolean.TRUE, null)          = true
     ObjectUtils.notEqual(Boolean.TRUE, "true")        = true
     ObjectUtils.notEqual(Boolean.TRUE, Boolean.TRUE)  = false
     ObjectUtils.notEqual(Boolean.TRUE, Boolean.FALSE) = true
    ```
  syntax:
    content: public static boolean notEqual(Object object1, Object object2)
    parameters:
    - id: object1
      type: java.lang.Object
      description: the first object, may be <code>null</code>
    - id: object2
      type: java.lang.Object
      description: the second object, may be <code>null</code>
    return:
      type: boolean
      description: <code>false</code> if the values of both objects are the same
references:
- uid: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils.ObjectUtils*
  name: ObjectUtils
  nameWithType: ObjectUtils.ObjectUtils
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils.ObjectUtils
  package: com.azure.cosmos.implementation.apachecommons.lang
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils.defaultIfNull*
  name: <T>defaultIfNull
  nameWithType: ObjectUtils.<T>defaultIfNull
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils.<T>defaultIfNull
  package: com.azure.cosmos.implementation.apachecommons.lang
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils.notEqual*
  name: notEqual
  nameWithType: ObjectUtils.notEqual
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ObjectUtils.notEqual
  package: com.azure.cosmos.implementation.apachecommons.lang
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
