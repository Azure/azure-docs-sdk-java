### YamlMime:JavaType
uid: "com.azure.ai.anomalydetector.models.AnomalyValue"
fullName: "com.azure.ai.anomalydetector.models.AnomalyValue"
name: "AnomalyValue"
nameWithType: "AnomalyValue"
summary: "The Anomaly<wbr>Value model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AnomalyValue"
constructors:
- uid: "com.azure.ai.anomalydetector.models.AnomalyValue.AnomalyValue()"
  fullName: "com.azure.ai.anomalydetector.models.AnomalyValue.AnomalyValue()"
  name: "AnomalyValue()"
  nameWithType: "AnomalyValue.AnomalyValue()"
  syntax: "public AnomalyValue()"
methods:
- uid: "com.azure.ai.anomalydetector.models.AnomalyValue.getInterpretation()"
  fullName: "com.azure.ai.anomalydetector.models.AnomalyValue.getInterpretation()"
  name: "getInterpretation()"
  nameWithType: "AnomalyValue.getInterpretation()"
  summary: "Get the interpretation property: The interpretation property."
  syntax: "public List<AnomalyInterpretation> getInterpretation()"
  desc: "Get the interpretation property: The interpretation property."
  returns:
    description: "the interpretation value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.anomalydetector.models.AnomalyInterpretation?alt=com.azure.ai.anomalydetector.models.AnomalyInterpretation&text=AnomalyInterpretation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.anomalydetector.models.AnomalyValue.getScore()"
  fullName: "com.azure.ai.anomalydetector.models.AnomalyValue.getScore()"
  name: "getScore()"
  nameWithType: "AnomalyValue.getScore()"
  summary: "Get the score property: Raw score from the model."
  syntax: "public float getScore()"
  desc: "Get the score property: Raw score from the model."
  returns:
    description: "the score value."
    type: "<xref href=\"float?alt=float&text=float\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.AnomalyValue.getSeverity()"
  fullName: "com.azure.ai.anomalydetector.models.AnomalyValue.getSeverity()"
  name: "getSeverity()"
  nameWithType: "AnomalyValue.getSeverity()"
  summary: "Get the severity property: Indicates the significance of the anomaly."
  syntax: "public float getSeverity()"
  desc: "Get the severity property: Indicates the significance of the anomaly. The higher the severity, the more significant the anomaly."
  returns:
    description: "the severity value."
    type: "<xref href=\"float?alt=float&text=float\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.AnomalyValue.isAnomaly()"
  fullName: "com.azure.ai.anomalydetector.models.AnomalyValue.isAnomaly()"
  name: "isAnomaly()"
  nameWithType: "AnomalyValue.isAnomaly()"
  summary: "Get the is<wbr>Anomaly property: True if an anomaly is detected at the current timestamp."
  syntax: "public boolean isAnomaly()"
  desc: "Get the isAnomaly property: True if an anomaly is detected at the current timestamp."
  returns:
    description: "the isAnomaly value."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.AnomalyValue.setInterpretation(java.util.List<com.azure.ai.anomalydetector.models.AnomalyInterpretation>)"
  fullName: "com.azure.ai.anomalydetector.models.AnomalyValue.setInterpretation(List<AnomalyInterpretation> interpretation)"
  name: "setInterpretation(List<AnomalyInterpretation> interpretation)"
  nameWithType: "AnomalyValue.setInterpretation(List<AnomalyInterpretation> interpretation)"
  summary: "Set the interpretation property: The interpretation property."
  parameters:
  - description: "the interpretation value to set."
    name: "interpretation"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.anomalydetector.models.AnomalyInterpretation?alt=com.azure.ai.anomalydetector.models.AnomalyInterpretation&text=AnomalyInterpretation\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AnomalyValue setInterpretation(List<AnomalyInterpretation> interpretation)"
  desc: "Set the interpretation property: The interpretation property."
  returns:
    description: "the AnomalyValue object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.AnomalyValue?alt=com.azure.ai.anomalydetector.models.AnomalyValue&text=AnomalyValue\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.AnomalyValue.setIsAnomaly(boolean)"
  fullName: "com.azure.ai.anomalydetector.models.AnomalyValue.setIsAnomaly(boolean isAnomaly)"
  name: "setIsAnomaly(boolean isAnomaly)"
  nameWithType: "AnomalyValue.setIsAnomaly(boolean isAnomaly)"
  summary: "Set the is<wbr>Anomaly property: True if an anomaly is detected at the current timestamp."
  parameters:
  - description: "the isAnomaly value to set."
    name: "isAnomaly"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AnomalyValue setIsAnomaly(boolean isAnomaly)"
  desc: "Set the isAnomaly property: True if an anomaly is detected at the current timestamp."
  returns:
    description: "the AnomalyValue object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.AnomalyValue?alt=com.azure.ai.anomalydetector.models.AnomalyValue&text=AnomalyValue\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.AnomalyValue.setScore(float)"
  fullName: "com.azure.ai.anomalydetector.models.AnomalyValue.setScore(float score)"
  name: "setScore(float score)"
  nameWithType: "AnomalyValue.setScore(float score)"
  summary: "Set the score property: Raw score from the model."
  parameters:
  - description: "the score value to set."
    name: "score"
    type: "<xref href=\"float?alt=float&text=float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AnomalyValue setScore(float score)"
  desc: "Set the score property: Raw score from the model."
  returns:
    description: "the AnomalyValue object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.AnomalyValue?alt=com.azure.ai.anomalydetector.models.AnomalyValue&text=AnomalyValue\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.AnomalyValue.setSeverity(float)"
  fullName: "com.azure.ai.anomalydetector.models.AnomalyValue.setSeverity(float severity)"
  name: "setSeverity(float severity)"
  nameWithType: "AnomalyValue.setSeverity(float severity)"
  summary: "Set the severity property: Indicates the significance of the anomaly."
  parameters:
  - description: "the severity value to set."
    name: "severity"
    type: "<xref href=\"float?alt=float&text=float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AnomalyValue setSeverity(float severity)"
  desc: "Set the severity property: Indicates the significance of the anomaly. The higher the severity, the more significant the anomaly."
  returns:
    description: "the AnomalyValue object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.AnomalyValue?alt=com.azure.ai.anomalydetector.models.AnomalyValue&text=AnomalyValue\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The AnomalyValue model."
metadata: {}
package: "com.azure.ai.anomalydetector.models"
artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.4
