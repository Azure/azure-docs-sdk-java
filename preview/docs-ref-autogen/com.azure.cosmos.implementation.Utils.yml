### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.Utils
  id: Utils
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation
  children:
  - com.azure.cosmos.implementation.Utils.<K,V>immutableMapOf()
  - com.azure.cosmos.implementation.Utils.<K,V>immutableMapOf(K,V)
  - com.azure.cosmos.implementation.Utils.<K,V>tryGetValue(java.util.Map<K,V>,K,com.azure.cosmos.implementation.Utils.ValueHolder<V>)
  - com.azure.cosmos.implementation.Utils.<K,V>tryRemove(java.util.Map<K,V>,K,com.azure.cosmos.implementation.Utils.ValueHolder<V>)
  - com.azure.cosmos.implementation.Utils.<O,I>as(I,java.lang.Class<O>)
  - com.azure.cosmos.implementation.Utils.<T>getCollectionSize(java.util.Collection<T>)
  - com.azure.cosmos.implementation.Utils.<T>parse(byte[],java.lang.Class<T>)
  - com.azure.cosmos.implementation.Utils.<T>parse(byte[],java.lang.Class<T>,com.azure.cosmos.implementation.ItemDeserializer)
  - com.azure.cosmos.implementation.Utils.<T>parse(java.lang.String,java.lang.Class<T>)
  - com.azure.cosmos.implementation.Utils.<V>firstOrDefault(java.util.List<V>)
  - com.azure.cosmos.implementation.Utils.<V>immutableListOf()
  - com.azure.cosmos.implementation.Utils.<V>immutableListOf(V)
  - com.azure.cosmos.implementation.Utils.Base64Decoder
  - com.azure.cosmos.implementation.Utils.Base64Encoder
  - com.azure.cosmos.implementation.Utils.Utils()
  - com.azure.cosmos.implementation.Utils.ValueHolder
  - com.azure.cosmos.implementation.Utils.checkNotNullOrThrow(java.lang.Object,java.lang.String,java.lang.String)
  - com.azure.cosmos.implementation.Utils.checkRequestOrReturnException(boolean,java.lang.String,java.lang.String)
  - com.azure.cosmos.implementation.Utils.checkRequestOrReturnException(boolean,java.lang.String,java.lang.String,java.lang.Object...)
  - com.azure.cosmos.implementation.Utils.checkStateOrReturnException(boolean,java.lang.String,java.lang.String)
  - com.azure.cosmos.implementation.Utils.checkStateOrReturnException(boolean,java.lang.String,java.lang.String,java.lang.Object...)
  - com.azure.cosmos.implementation.Utils.checkStateOrThrow(boolean,java.lang.String,java.lang.String)
  - com.azure.cosmos.implementation.Utils.checkStateOrThrow(boolean,java.lang.String,java.lang.String,java.lang.Object...)
  - com.azure.cosmos.implementation.Utils.createQuery(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.cosmos.implementation.Utils.decodeAsUTF8String(java.lang.String)
  - com.azure.cosmos.implementation.Utils.encodeBase64String(byte[])
  - com.azure.cosmos.implementation.Utils.getCollectionName(java.lang.String)
  - com.azure.cosmos.implementation.Utils.getSimpleObjectMapper()
  - com.azure.cosmos.implementation.Utils.getUTF8Bytes(java.lang.String)
  - com.azure.cosmos.implementation.Utils.getUTF8BytesOrNull(java.lang.String)
  - com.azure.cosmos.implementation.Utils.getUserAgent()
  - com.azure.cosmos.implementation.Utils.getUserAgent(java.lang.String,java.lang.String)
  - com.azure.cosmos.implementation.Utils.getUtf16Bytes(java.lang.String)
  - com.azure.cosmos.implementation.Utils.getValueOrDefault(java.lang.Integer,int)
  - com.azure.cosmos.implementation.Utils.isCollectionChild(com.azure.cosmos.implementation.ResourceType)
  - com.azure.cosmos.implementation.Utils.isCollectionPartitioned(com.azure.cosmos.implementation.DocumentCollection)
  - com.azure.cosmos.implementation.Utils.isDatabaseLink(java.lang.String)
  - com.azure.cosmos.implementation.Utils.isEmpty(byte[])
  - com.azure.cosmos.implementation.Utils.isFeedRequest(com.azure.cosmos.implementation.OperationType)
  - com.azure.cosmos.implementation.Utils.isNameBased(java.lang.String)
  - com.azure.cosmos.implementation.Utils.isValidConsistency(com.azure.cosmos.ConsistencyLevel,com.azure.cosmos.ConsistencyLevel)
  - com.azure.cosmos.implementation.Utils.isWriteOperation(com.azure.cosmos.implementation.OperationType)
  - com.azure.cosmos.implementation.Utils.joinPath(java.lang.String,java.lang.String)
  - com.azure.cosmos.implementation.Utils.nowAsRFC1123()
  - com.azure.cosmos.implementation.Utils.paramEncode(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.cosmos.implementation.Utils.randomUUID()
  - com.azure.cosmos.implementation.Utils.serializeJsonToByteBuffer(com.fasterxml.jackson.databind.ObjectMapper,java.lang.Object)
  - com.azure.cosmos.implementation.Utils.serializeObjectToByteArray(java.lang.Object)
  - com.azure.cosmos.implementation.Utils.setContinuationTokenAndMaxItemCount(com.azure.cosmos.implementation.CosmosPagedFluxOptions,com.azure.cosmos.models.CosmosQueryRequestOptions)
  - com.azure.cosmos.implementation.Utils.setQuery(java.lang.String,java.lang.String)
  - com.azure.cosmos.implementation.Utils.toByteArray(io.netty.buffer.ByteBuf)
  - com.azure.cosmos.implementation.Utils.toByteBuffer(byte[])
  - com.azure.cosmos.implementation.Utils.toJson(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.node.ObjectNode)
  - com.azure.cosmos.implementation.Utils.trimBeginningAndEndingSlashes(java.lang.String)
  - com.azure.cosmos.implementation.Utils.utf8StringFromOrNull(byte[])
  - com.azure.cosmos.implementation.Utils.zonedDateTimeAsUTCRFC1123(java.time.OffsetDateTime)
  langs:
  - java
  name: Utils
  nameWithType: Utils
  fullName: com.azure.cosmos.implementation.Utils
  type: Class
  package: com.azure.cosmos.implementation
  summary: While this class is public, but it is not part of our published public APIs. This is meant to be internally used only by our sdk.
  syntax:
    content: public class Utils
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.Utils.<K,V>immutableMapOf()
  id: <K,V>immutableMapOf()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: <K,V>immutableMapOf()
  nameWithType: Utils.<K,V>immutableMapOf()
  fullName: com.azure.cosmos.implementation.Utils.<K,V>immutableMapOf()
  overload: com.azure.cosmos.implementation.Utils.immutableMapOf*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static Map<K,V> <K,V>immutableMapOf()
    return:
      type: java.util.Map<K,V>
- uid: com.azure.cosmos.implementation.Utils.<K,V>immutableMapOf(K,V)
  id: <K,V>immutableMapOf(K,V)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: <K,V>immutableMapOf(K k1, V v1)
  nameWithType: Utils.<K,V>immutableMapOf(K k1, V v1)
  fullName: com.azure.cosmos.implementation.Utils.<K,V>immutableMapOf(K k1, V v1)
  overload: com.azure.cosmos.implementation.Utils.immutableMapOf*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static Map<K,V> <K,V>immutableMapOf(K k1, V v1)
    parameters:
    - id: k1
      type: K
    - id: v1
      type: V
    return:
      type: java.util.Map<K,V>
- uid: com.azure.cosmos.implementation.Utils.<K,V>tryGetValue(java.util.Map<K,V>,K,com.azure.cosmos.implementation.Utils.ValueHolder<V>)
  id: <K,V>tryGetValue(java.util.Map<K,V>,K,com.azure.cosmos.implementation.Utils.ValueHolder<V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: <K,V>tryGetValue(Map<K,V> dictionary, K key, Utils.ValueHolder<V> holder)
  nameWithType: Utils.<K,V>tryGetValue(Map<K,V> dictionary, K key, Utils.ValueHolder<V> holder)
  fullName: com.azure.cosmos.implementation.Utils.<K,V>tryGetValue(Map<K,V> dictionary, K key, Utils.ValueHolder<V> holder)
  overload: com.azure.cosmos.implementation.Utils.tryGetValue*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static boolean <K,V>tryGetValue(Map<K,V> dictionary, K key, Utils.ValueHolder<V> holder)
    parameters:
    - id: dictionary
      type: java.util.Map<K,V>
    - id: key
      type: K
    - id: holder
      type: com.azure.cosmos.implementation.Utils.ValueHolder<V>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.Utils.<K,V>tryRemove(java.util.Map<K,V>,K,com.azure.cosmos.implementation.Utils.ValueHolder<V>)
  id: <K,V>tryRemove(java.util.Map<K,V>,K,com.azure.cosmos.implementation.Utils.ValueHolder<V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: <K,V>tryRemove(Map<K,V> dictionary, K key, Utils.ValueHolder<V> holder)
  nameWithType: Utils.<K,V>tryRemove(Map<K,V> dictionary, K key, Utils.ValueHolder<V> holder)
  fullName: com.azure.cosmos.implementation.Utils.<K,V>tryRemove(Map<K,V> dictionary, K key, Utils.ValueHolder<V> holder)
  overload: com.azure.cosmos.implementation.Utils.tryRemove*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static boolean <K,V>tryRemove(Map<K,V> dictionary, K key, Utils.ValueHolder<V> holder)
    parameters:
    - id: dictionary
      type: java.util.Map<K,V>
    - id: key
      type: K
    - id: holder
      type: com.azure.cosmos.implementation.Utils.ValueHolder<V>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.Utils.<O,I>as(I,java.lang.Class<O>)
  id: <O,I>as(I,java.lang.Class<O>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: <O,I>as(I i, Class<O> klass)
  nameWithType: Utils.<O,I>as(I i, Class<O> klass)
  fullName: com.azure.cosmos.implementation.Utils.<O,I>as(I i, Class<O> klass)
  overload: com.azure.cosmos.implementation.Utils.as*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static O <O,I>as(I i, Class<O> klass)
    parameters:
    - id: i
      type: I
    - id: klass
      type: java.lang.Class<O>
    return:
      type: O
- uid: com.azure.cosmos.implementation.Utils.<T>getCollectionSize(java.util.Collection<T>)
  id: <T>getCollectionSize(java.util.Collection<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: <T>getCollectionSize(Collection<T> collection)
  nameWithType: Utils.<T>getCollectionSize(Collection<T> collection)
  fullName: com.azure.cosmos.implementation.Utils.<T>getCollectionSize(Collection<T> collection)
  overload: com.azure.cosmos.implementation.Utils.getCollectionSize*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static int <T>getCollectionSize(Collection<T> collection)
    parameters:
    - id: collection
      type: java.util.Collection<T>
    return:
      type: int
- uid: com.azure.cosmos.implementation.Utils.<T>parse(byte[],java.lang.Class<T>)
  id: <T>parse(byte[],java.lang.Class<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: <T>parse(byte[] item, Class<T> itemClassType)
  nameWithType: Utils.<T>parse(byte[] item, Class<T> itemClassType)
  fullName: com.azure.cosmos.implementation.Utils.<T>parse(byte[] item, Class<T> itemClassType)
  overload: com.azure.cosmos.implementation.Utils.parse*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static T <T>parse(byte[] item, Class<T> itemClassType)
    parameters:
    - id: item
      type: byte[]
    - id: itemClassType
      type: java.lang.Class<T>
    return:
      type: T
- uid: com.azure.cosmos.implementation.Utils.<T>parse(byte[],java.lang.Class<T>,com.azure.cosmos.implementation.ItemDeserializer)
  id: <T>parse(byte[],java.lang.Class<T>,com.azure.cosmos.implementation.ItemDeserializer)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: <T>parse(byte[] item, Class<T> itemClassType, ItemDeserializer itemDeserializer)
  nameWithType: Utils.<T>parse(byte[] item, Class<T> itemClassType, ItemDeserializer itemDeserializer)
  fullName: com.azure.cosmos.implementation.Utils.<T>parse(byte[] item, Class<T> itemClassType, ItemDeserializer itemDeserializer)
  overload: com.azure.cosmos.implementation.Utils.parse*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static T <T>parse(byte[] item, Class<T> itemClassType, ItemDeserializer itemDeserializer)
    parameters:
    - id: item
      type: byte[]
    - id: itemClassType
      type: java.lang.Class<T>
    - id: itemDeserializer
      type: com.azure.cosmos.implementation.ItemDeserializer
    return:
      type: T
- uid: com.azure.cosmos.implementation.Utils.<T>parse(java.lang.String,java.lang.Class<T>)
  id: <T>parse(java.lang.String,java.lang.Class<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: <T>parse(String itemResponseBodyAsString, Class<T> itemClassType)
  nameWithType: Utils.<T>parse(String itemResponseBodyAsString, Class<T> itemClassType)
  fullName: com.azure.cosmos.implementation.Utils.<T>parse(String itemResponseBodyAsString, Class<T> itemClassType)
  overload: com.azure.cosmos.implementation.Utils.parse*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static T <T>parse(String itemResponseBodyAsString, Class<T> itemClassType)
    parameters:
    - id: itemResponseBodyAsString
      type: java.lang.String
    - id: itemClassType
      type: java.lang.Class<T>
    return:
      type: T
- uid: com.azure.cosmos.implementation.Utils.<V>firstOrDefault(java.util.List<V>)
  id: <V>firstOrDefault(java.util.List<V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: <V>firstOrDefault(List<V> list)
  nameWithType: Utils.<V>firstOrDefault(List<V> list)
  fullName: com.azure.cosmos.implementation.Utils.<V>firstOrDefault(List<V> list)
  overload: com.azure.cosmos.implementation.Utils.firstOrDefault*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static V <V>firstOrDefault(List<V> list)
    parameters:
    - id: list
      type: java.util.List<V>
    return:
      type: V
- uid: com.azure.cosmos.implementation.Utils.<V>immutableListOf()
  id: <V>immutableListOf()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: <V>immutableListOf()
  nameWithType: Utils.<V>immutableListOf()
  fullName: com.azure.cosmos.implementation.Utils.<V>immutableListOf()
  overload: com.azure.cosmos.implementation.Utils.immutableListOf*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static List<V> <V>immutableListOf()
    return:
      type: java.util.List<V>
- uid: com.azure.cosmos.implementation.Utils.<V>immutableListOf(V)
  id: <V>immutableListOf(V)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: <V>immutableListOf(V v1)
  nameWithType: Utils.<V>immutableListOf(V v1)
  fullName: com.azure.cosmos.implementation.Utils.<V>immutableListOf(V v1)
  overload: com.azure.cosmos.implementation.Utils.immutableListOf*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static List<V> <V>immutableListOf(V v1)
    parameters:
    - id: v1
      type: V
    return:
      type: java.util.List<V>
- uid: com.azure.cosmos.implementation.Utils.Base64Decoder
  id: Base64Decoder
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: Base64Decoder
  nameWithType: Utils.Base64Decoder
  fullName: com.azure.cosmos.implementation.Utils.Base64Decoder
  type: Field
  package: com.azure.cosmos.implementation
  syntax:
    content: public static final Base64.Decoder Base64Decoder
    return:
      type: java.util.Base64.Decoder
- uid: com.azure.cosmos.implementation.Utils.Base64Encoder
  id: Base64Encoder
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: Base64Encoder
  nameWithType: Utils.Base64Encoder
  fullName: com.azure.cosmos.implementation.Utils.Base64Encoder
  type: Field
  package: com.azure.cosmos.implementation
  syntax:
    content: public static final Base64.Encoder Base64Encoder
    return:
      type: java.util.Base64.Encoder
- uid: com.azure.cosmos.implementation.Utils.Utils()
  id: Utils()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: Utils()
  nameWithType: Utils.Utils()
  fullName: com.azure.cosmos.implementation.Utils.Utils()
  overload: com.azure.cosmos.implementation.Utils.Utils*
  type: Constructor
  package: com.azure.cosmos.implementation
  syntax:
    content: public Utils()
- uid: com.azure.cosmos.implementation.Utils.checkNotNullOrThrow(java.lang.Object,java.lang.String,java.lang.String)
  id: checkNotNullOrThrow(java.lang.Object,java.lang.String,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: checkNotNullOrThrow(Object val, String argumentName, String message)
  nameWithType: Utils.checkNotNullOrThrow(Object val, String argumentName, String message)
  fullName: com.azure.cosmos.implementation.Utils.checkNotNullOrThrow(Object val, String argumentName, String message)
  overload: com.azure.cosmos.implementation.Utils.checkNotNullOrThrow*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static void checkNotNullOrThrow(Object val, String argumentName, String message)
    parameters:
    - id: val
      type: java.lang.Object
    - id: argumentName
      type: java.lang.String
    - id: message
      type: java.lang.String
  exceptions:
  - type: java.lang.NullPointerException
- uid: com.azure.cosmos.implementation.Utils.checkRequestOrReturnException(boolean,java.lang.String,java.lang.String)
  id: checkRequestOrReturnException(boolean,java.lang.String,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: checkRequestOrReturnException(boolean value, String argumentName, String message)
  nameWithType: Utils.checkRequestOrReturnException(boolean value, String argumentName, String message)
  fullName: com.azure.cosmos.implementation.Utils.checkRequestOrReturnException(boolean value, String argumentName, String message)
  overload: com.azure.cosmos.implementation.Utils.checkRequestOrReturnException*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static BadRequestException checkRequestOrReturnException(boolean value, String argumentName, String message)
    parameters:
    - id: value
      type: boolean
    - id: argumentName
      type: java.lang.String
    - id: message
      type: java.lang.String
    return:
      type: com.azure.cosmos.implementation.BadRequestException
- uid: com.azure.cosmos.implementation.Utils.checkRequestOrReturnException(boolean,java.lang.String,java.lang.String,java.lang.Object...)
  id: checkRequestOrReturnException(boolean,java.lang.String,java.lang.String,java.lang.Object...)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: checkRequestOrReturnException(boolean value, String argumentName, String messageTemplate, Object[] messageTemplateParams)
  nameWithType: Utils.checkRequestOrReturnException(boolean value, String argumentName, String messageTemplate, Object[] messageTemplateParams)
  fullName: com.azure.cosmos.implementation.Utils.checkRequestOrReturnException(boolean value, String argumentName, String messageTemplate, Object[] messageTemplateParams)
  overload: com.azure.cosmos.implementation.Utils.checkRequestOrReturnException*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static BadRequestException checkRequestOrReturnException(boolean value, String argumentName, String messageTemplate, Object[] messageTemplateParams)
    parameters:
    - id: value
      type: boolean
    - id: argumentName
      type: java.lang.String
    - id: messageTemplate
      type: java.lang.String
    - id: messageTemplateParams
      type: java.lang.Object[]
    return:
      type: com.azure.cosmos.implementation.BadRequestException
- uid: com.azure.cosmos.implementation.Utils.checkStateOrReturnException(boolean,java.lang.String,java.lang.String)
  id: checkStateOrReturnException(boolean,java.lang.String,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: checkStateOrReturnException(boolean value, String argumentName, String message)
  nameWithType: Utils.checkStateOrReturnException(boolean value, String argumentName, String message)
  fullName: com.azure.cosmos.implementation.Utils.checkStateOrReturnException(boolean value, String argumentName, String message)
  overload: com.azure.cosmos.implementation.Utils.checkStateOrReturnException*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static IllegalArgumentException checkStateOrReturnException(boolean value, String argumentName, String message)
    parameters:
    - id: value
      type: boolean
    - id: argumentName
      type: java.lang.String
    - id: message
      type: java.lang.String
    return:
      type: java.lang.IllegalArgumentException
- uid: com.azure.cosmos.implementation.Utils.checkStateOrReturnException(boolean,java.lang.String,java.lang.String,java.lang.Object...)
  id: checkStateOrReturnException(boolean,java.lang.String,java.lang.String,java.lang.Object...)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: checkStateOrReturnException(boolean value, String argumentName, String messageTemplate, Object[] messageTemplateParams)
  nameWithType: Utils.checkStateOrReturnException(boolean value, String argumentName, String messageTemplate, Object[] messageTemplateParams)
  fullName: com.azure.cosmos.implementation.Utils.checkStateOrReturnException(boolean value, String argumentName, String messageTemplate, Object[] messageTemplateParams)
  overload: com.azure.cosmos.implementation.Utils.checkStateOrReturnException*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static IllegalArgumentException checkStateOrReturnException(boolean value, String argumentName, String messageTemplate, Object[] messageTemplateParams)
    parameters:
    - id: value
      type: boolean
    - id: argumentName
      type: java.lang.String
    - id: messageTemplate
      type: java.lang.String
    - id: messageTemplateParams
      type: java.lang.Object[]
    return:
      type: java.lang.IllegalArgumentException
- uid: com.azure.cosmos.implementation.Utils.checkStateOrThrow(boolean,java.lang.String,java.lang.String)
  id: checkStateOrThrow(boolean,java.lang.String,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: checkStateOrThrow(boolean value, String argumentName, String message)
  nameWithType: Utils.checkStateOrThrow(boolean value, String argumentName, String message)
  fullName: com.azure.cosmos.implementation.Utils.checkStateOrThrow(boolean value, String argumentName, String message)
  overload: com.azure.cosmos.implementation.Utils.checkStateOrThrow*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static void checkStateOrThrow(boolean value, String argumentName, String message)
    parameters:
    - id: value
      type: boolean
    - id: argumentName
      type: java.lang.String
    - id: message
      type: java.lang.String
  exceptions:
  - type: java.lang.IllegalArgumentException
- uid: com.azure.cosmos.implementation.Utils.checkStateOrThrow(boolean,java.lang.String,java.lang.String,java.lang.Object...)
  id: checkStateOrThrow(boolean,java.lang.String,java.lang.String,java.lang.Object...)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: checkStateOrThrow(boolean value, String argumentName, String messageTemplate, Object[] messageTemplateParams)
  nameWithType: Utils.checkStateOrThrow(boolean value, String argumentName, String messageTemplate, Object[] messageTemplateParams)
  fullName: com.azure.cosmos.implementation.Utils.checkStateOrThrow(boolean value, String argumentName, String messageTemplate, Object[] messageTemplateParams)
  overload: com.azure.cosmos.implementation.Utils.checkStateOrThrow*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static void checkStateOrThrow(boolean value, String argumentName, String messageTemplate, Object[] messageTemplateParams)
    parameters:
    - id: value
      type: boolean
    - id: argumentName
      type: java.lang.String
    - id: messageTemplate
      type: java.lang.String
    - id: messageTemplateParams
      type: java.lang.Object[]
  exceptions:
  - type: java.lang.IllegalArgumentException
- uid: com.azure.cosmos.implementation.Utils.createQuery(java.util.Map<java.lang.String,java.lang.String>)
  id: createQuery(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: createQuery(Map<String,String> queryParameters)
  nameWithType: Utils.createQuery(Map<String,String> queryParameters)
  fullName: com.azure.cosmos.implementation.Utils.createQuery(Map<String,String> queryParameters)
  overload: com.azure.cosmos.implementation.Utils.createQuery*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static String createQuery(Map<String,String> queryParameters)
    parameters:
    - id: queryParameters
      type: java.util.Map<java.lang.String,java.lang.String>
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.Utils.decodeAsUTF8String(java.lang.String)
  id: decodeAsUTF8String(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: decodeAsUTF8String(String inputString)
  nameWithType: Utils.decodeAsUTF8String(String inputString)
  fullName: com.azure.cosmos.implementation.Utils.decodeAsUTF8String(String inputString)
  overload: com.azure.cosmos.implementation.Utils.decodeAsUTF8String*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static String decodeAsUTF8String(String inputString)
    parameters:
    - id: inputString
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.Utils.encodeBase64String(byte[])
  id: encodeBase64String(byte[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: encodeBase64String(byte[] binaryData)
  nameWithType: Utils.encodeBase64String(byte[] binaryData)
  fullName: com.azure.cosmos.implementation.Utils.encodeBase64String(byte[] binaryData)
  overload: com.azure.cosmos.implementation.Utils.encodeBase64String*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static String encodeBase64String(byte[] binaryData)
    parameters:
    - id: binaryData
      type: byte[]
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.Utils.getCollectionName(java.lang.String)
  id: getCollectionName(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: getCollectionName(String resourceFullName)
  nameWithType: Utils.getCollectionName(String resourceFullName)
  fullName: com.azure.cosmos.implementation.Utils.getCollectionName(String resourceFullName)
  overload: com.azure.cosmos.implementation.Utils.getCollectionName*
  type: Method
  package: com.azure.cosmos.implementation
  summary: Given the full path to a resource, extract the collection path.
  syntax:
    content: public static String getCollectionName(String resourceFullName)
    parameters:
    - id: resourceFullName
      type: java.lang.String
      description: the full path to the resource.
    return:
      type: java.lang.String
      description: the path of the collection in which the resource is.
- uid: com.azure.cosmos.implementation.Utils.getSimpleObjectMapper()
  id: getSimpleObjectMapper()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: getSimpleObjectMapper()
  nameWithType: Utils.getSimpleObjectMapper()
  fullName: com.azure.cosmos.implementation.Utils.getSimpleObjectMapper()
  overload: com.azure.cosmos.implementation.Utils.getSimpleObjectMapper*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static ObjectMapper getSimpleObjectMapper()
    return:
      type: com.fasterxml.jackson.databind.ObjectMapper
- uid: com.azure.cosmos.implementation.Utils.getUTF8Bytes(java.lang.String)
  id: getUTF8Bytes(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: getUTF8Bytes(String str)
  nameWithType: Utils.getUTF8Bytes(String str)
  fullName: com.azure.cosmos.implementation.Utils.getUTF8Bytes(String str)
  overload: com.azure.cosmos.implementation.Utils.getUTF8Bytes*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static byte[] getUTF8Bytes(String str)
    parameters:
    - id: str
      type: java.lang.String
    return:
      type: byte[]
- uid: com.azure.cosmos.implementation.Utils.getUTF8BytesOrNull(java.lang.String)
  id: getUTF8BytesOrNull(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: getUTF8BytesOrNull(String str)
  nameWithType: Utils.getUTF8BytesOrNull(String str)
  fullName: com.azure.cosmos.implementation.Utils.getUTF8BytesOrNull(String str)
  overload: com.azure.cosmos.implementation.Utils.getUTF8BytesOrNull*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static byte[] getUTF8BytesOrNull(String str)
    parameters:
    - id: str
      type: java.lang.String
    return:
      type: byte[]
- uid: com.azure.cosmos.implementation.Utils.getUserAgent()
  id: getUserAgent()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: getUserAgent()
  nameWithType: Utils.getUserAgent()
  fullName: com.azure.cosmos.implementation.Utils.getUserAgent()
  overload: com.azure.cosmos.implementation.Utils.getUserAgent*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static String getUserAgent()
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.Utils.getUserAgent(java.lang.String,java.lang.String)
  id: getUserAgent(java.lang.String,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: getUserAgent(String sdkName, String sdkVersion)
  nameWithType: Utils.getUserAgent(String sdkName, String sdkVersion)
  fullName: com.azure.cosmos.implementation.Utils.getUserAgent(String sdkName, String sdkVersion)
  overload: com.azure.cosmos.implementation.Utils.getUserAgent*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static String getUserAgent(String sdkName, String sdkVersion)
    parameters:
    - id: sdkName
      type: java.lang.String
    - id: sdkVersion
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.Utils.getUtf16Bytes(java.lang.String)
  id: getUtf16Bytes(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: getUtf16Bytes(String str)
  nameWithType: Utils.getUtf16Bytes(String str)
  fullName: com.azure.cosmos.implementation.Utils.getUtf16Bytes(String str)
  overload: com.azure.cosmos.implementation.Utils.getUtf16Bytes*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static byte[] getUtf16Bytes(String str)
    parameters:
    - id: str
      type: java.lang.String
    return:
      type: byte[]
- uid: com.azure.cosmos.implementation.Utils.getValueOrDefault(java.lang.Integer,int)
  id: getValueOrDefault(java.lang.Integer,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: getValueOrDefault(Integer val, int defaultValue)
  nameWithType: Utils.getValueOrDefault(Integer val, int defaultValue)
  fullName: com.azure.cosmos.implementation.Utils.getValueOrDefault(Integer val, int defaultValue)
  overload: com.azure.cosmos.implementation.Utils.getValueOrDefault*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static int getValueOrDefault(Integer val, int defaultValue)
    parameters:
    - id: val
      type: java.lang.Integer
    - id: defaultValue
      type: int
    return:
      type: int
- uid: com.azure.cosmos.implementation.Utils.isCollectionChild(com.azure.cosmos.implementation.ResourceType)
  id: isCollectionChild(com.azure.cosmos.implementation.ResourceType)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: isCollectionChild(ResourceType type)
  nameWithType: Utils.isCollectionChild(ResourceType type)
  fullName: com.azure.cosmos.implementation.Utils.isCollectionChild(ResourceType type)
  overload: com.azure.cosmos.implementation.Utils.isCollectionChild*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static boolean isCollectionChild(ResourceType type)
    parameters:
    - id: type
      type: com.azure.cosmos.implementation.ResourceType
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.Utils.isCollectionPartitioned(com.azure.cosmos.implementation.DocumentCollection)
  id: isCollectionPartitioned(com.azure.cosmos.implementation.DocumentCollection)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: isCollectionPartitioned(DocumentCollection collection)
  nameWithType: Utils.isCollectionPartitioned(DocumentCollection collection)
  fullName: com.azure.cosmos.implementation.Utils.isCollectionPartitioned(DocumentCollection collection)
  overload: com.azure.cosmos.implementation.Utils.isCollectionPartitioned*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static Boolean isCollectionPartitioned(DocumentCollection collection)
    parameters:
    - id: collection
      type: com.azure.cosmos.implementation.DocumentCollection
    return:
      type: java.lang.Boolean
- uid: com.azure.cosmos.implementation.Utils.isDatabaseLink(java.lang.String)
  id: isDatabaseLink(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: isDatabaseLink(String link)
  nameWithType: Utils.isDatabaseLink(String link)
  fullName: com.azure.cosmos.implementation.Utils.isDatabaseLink(String link)
  overload: com.azure.cosmos.implementation.Utils.isDatabaseLink*
  type: Method
  package: com.azure.cosmos.implementation
  summary: Checks whether the specified link is a Database Self Link or a Database ID based link
  syntax:
    content: public static boolean isDatabaseLink(String link)
    parameters:
    - id: link
      type: java.lang.String
      description: the link to analyze.
    return:
      type: boolean
      description: true or false
- uid: com.azure.cosmos.implementation.Utils.isEmpty(byte[])
  id: isEmpty(byte[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: isEmpty(byte[] bytes)
  nameWithType: Utils.isEmpty(byte[] bytes)
  fullName: com.azure.cosmos.implementation.Utils.isEmpty(byte[] bytes)
  overload: com.azure.cosmos.implementation.Utils.isEmpty*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static boolean isEmpty(byte[] bytes)
    parameters:
    - id: bytes
      type: byte[]
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.Utils.isFeedRequest(com.azure.cosmos.implementation.OperationType)
  id: isFeedRequest(com.azure.cosmos.implementation.OperationType)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: isFeedRequest(OperationType requestOperationType)
  nameWithType: Utils.isFeedRequest(OperationType requestOperationType)
  fullName: com.azure.cosmos.implementation.Utils.isFeedRequest(OperationType requestOperationType)
  overload: com.azure.cosmos.implementation.Utils.isFeedRequest*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static boolean isFeedRequest(OperationType requestOperationType)
    parameters:
    - id: requestOperationType
      type: com.azure.cosmos.implementation.OperationType
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.Utils.isNameBased(java.lang.String)
  id: isNameBased(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: isNameBased(String link)
  nameWithType: Utils.isNameBased(String link)
  fullName: com.azure.cosmos.implementation.Utils.isNameBased(String link)
  overload: com.azure.cosmos.implementation.Utils.isNameBased*
  type: Method
  package: com.azure.cosmos.implementation
  summary: Checks whether the specified link is Name based or not
  syntax:
    content: public static boolean isNameBased(String link)
    parameters:
    - id: link
      type: java.lang.String
      description: the link to analyze.
    return:
      type: boolean
      description: true or false
- uid: com.azure.cosmos.implementation.Utils.isValidConsistency(com.azure.cosmos.ConsistencyLevel,com.azure.cosmos.ConsistencyLevel)
  id: isValidConsistency(com.azure.cosmos.ConsistencyLevel,com.azure.cosmos.ConsistencyLevel)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: isValidConsistency(ConsistencyLevel backendConsistency, ConsistencyLevel desiredConsistency)
  nameWithType: Utils.isValidConsistency(ConsistencyLevel backendConsistency, ConsistencyLevel desiredConsistency)
  fullName: com.azure.cosmos.implementation.Utils.isValidConsistency(ConsistencyLevel backendConsistency, ConsistencyLevel desiredConsistency)
  overload: com.azure.cosmos.implementation.Utils.isValidConsistency*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static boolean isValidConsistency(ConsistencyLevel backendConsistency, ConsistencyLevel desiredConsistency)
    parameters:
    - id: backendConsistency
      type: com.azure.cosmos.ConsistencyLevel
    - id: desiredConsistency
      type: com.azure.cosmos.ConsistencyLevel
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.Utils.isWriteOperation(com.azure.cosmos.implementation.OperationType)
  id: isWriteOperation(com.azure.cosmos.implementation.OperationType)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: isWriteOperation(OperationType operationType)
  nameWithType: Utils.isWriteOperation(OperationType operationType)
  fullName: com.azure.cosmos.implementation.Utils.isWriteOperation(OperationType operationType)
  overload: com.azure.cosmos.implementation.Utils.isWriteOperation*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static boolean isWriteOperation(OperationType operationType)
    parameters:
    - id: operationType
      type: com.azure.cosmos.implementation.OperationType
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.Utils.joinPath(java.lang.String,java.lang.String)
  id: joinPath(java.lang.String,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: joinPath(String path1, String path2)
  nameWithType: Utils.joinPath(String path1, String path2)
  fullName: com.azure.cosmos.implementation.Utils.joinPath(String path1, String path2)
  overload: com.azure.cosmos.implementation.Utils.joinPath*
  type: Method
  package: com.azure.cosmos.implementation
  summary: Joins the specified paths by appropriately padding them with '/'
  syntax:
    content: public static String joinPath(String path1, String path2)
    parameters:
    - id: path1
      type: java.lang.String
      description: the first path segment to join.
    - id: path2
      type: java.lang.String
      description: the second path segment to join.
    return:
      type: java.lang.String
      description: the concatenated path with '/'
- uid: com.azure.cosmos.implementation.Utils.nowAsRFC1123()
  id: nowAsRFC1123()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: nowAsRFC1123()
  nameWithType: Utils.nowAsRFC1123()
  fullName: com.azure.cosmos.implementation.Utils.nowAsRFC1123()
  overload: com.azure.cosmos.implementation.Utils.nowAsRFC1123*
  type: Method
  package: com.azure.cosmos.implementation
  summary: Returns Current Time in RFC 1123 format, e.g, Fri, 01 Dec 2017 19:22:30 GMT.
  syntax:
    content: public static String nowAsRFC1123()
    return:
      type: java.lang.String
      description: an instance of STRING
- uid: com.azure.cosmos.implementation.Utils.paramEncode(java.util.Map<java.lang.String,java.lang.String>)
  id: paramEncode(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: paramEncode(Map<String,String> queryParams)
  nameWithType: Utils.paramEncode(Map<String,String> queryParams)
  fullName: com.azure.cosmos.implementation.Utils.paramEncode(Map<String,String> queryParams)
  overload: com.azure.cosmos.implementation.Utils.paramEncode*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static Map<String,String> paramEncode(Map<String,String> queryParams)
    parameters:
    - id: queryParams
      type: java.util.Map<java.lang.String,java.lang.String>
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
- uid: com.azure.cosmos.implementation.Utils.randomUUID()
  id: randomUUID()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: randomUUID()
  nameWithType: Utils.randomUUID()
  fullName: com.azure.cosmos.implementation.Utils.randomUUID()
  overload: com.azure.cosmos.implementation.Utils.randomUUID*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static UUID randomUUID()
    return:
      type: java.util.UUID
- uid: com.azure.cosmos.implementation.Utils.serializeJsonToByteBuffer(com.fasterxml.jackson.databind.ObjectMapper,java.lang.Object)
  id: serializeJsonToByteBuffer(com.fasterxml.jackson.databind.ObjectMapper,java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: serializeJsonToByteBuffer(ObjectMapper objectMapper, Object object)
  nameWithType: Utils.serializeJsonToByteBuffer(ObjectMapper objectMapper, Object object)
  fullName: com.azure.cosmos.implementation.Utils.serializeJsonToByteBuffer(ObjectMapper objectMapper, Object object)
  overload: com.azure.cosmos.implementation.Utils.serializeJsonToByteBuffer*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static ByteBuffer serializeJsonToByteBuffer(ObjectMapper objectMapper, Object object)
    parameters:
    - id: objectMapper
      type: com.fasterxml.jackson.databind.ObjectMapper
    - id: object
      type: java.lang.Object
    return:
      type: java.nio.ByteBuffer
- uid: com.azure.cosmos.implementation.Utils.serializeObjectToByteArray(java.lang.Object)
  id: serializeObjectToByteArray(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: serializeObjectToByteArray(Object obj)
  nameWithType: Utils.serializeObjectToByteArray(Object obj)
  fullName: com.azure.cosmos.implementation.Utils.serializeObjectToByteArray(Object obj)
  overload: com.azure.cosmos.implementation.Utils.serializeObjectToByteArray*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static byte[] serializeObjectToByteArray(Object obj)
    parameters:
    - id: obj
      type: java.lang.Object
    return:
      type: byte[]
  exceptions:
  - type: java.io.IOException
- uid: com.azure.cosmos.implementation.Utils.setContinuationTokenAndMaxItemCount(com.azure.cosmos.implementation.CosmosPagedFluxOptions,com.azure.cosmos.models.CosmosQueryRequestOptions)
  id: setContinuationTokenAndMaxItemCount(com.azure.cosmos.implementation.CosmosPagedFluxOptions,com.azure.cosmos.models.CosmosQueryRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: setContinuationTokenAndMaxItemCount(CosmosPagedFluxOptions pagedFluxOptions, CosmosQueryRequestOptions cosmosQueryRequestOptions)
  nameWithType: Utils.setContinuationTokenAndMaxItemCount(CosmosPagedFluxOptions pagedFluxOptions, CosmosQueryRequestOptions cosmosQueryRequestOptions)
  fullName: com.azure.cosmos.implementation.Utils.setContinuationTokenAndMaxItemCount(CosmosPagedFluxOptions pagedFluxOptions, CosmosQueryRequestOptions cosmosQueryRequestOptions)
  overload: com.azure.cosmos.implementation.Utils.setContinuationTokenAndMaxItemCount*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static void setContinuationTokenAndMaxItemCount(CosmosPagedFluxOptions pagedFluxOptions, CosmosQueryRequestOptions cosmosQueryRequestOptions)
    parameters:
    - id: pagedFluxOptions
      type: com.azure.cosmos.implementation.CosmosPagedFluxOptions
    - id: cosmosQueryRequestOptions
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
- uid: com.azure.cosmos.implementation.Utils.setQuery(java.lang.String,java.lang.String)
  id: setQuery(java.lang.String,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: setQuery(String urlString, String query)
  nameWithType: Utils.setQuery(String urlString, String query)
  fullName: com.azure.cosmos.implementation.Utils.setQuery(String urlString, String query)
  overload: com.azure.cosmos.implementation.Utils.setQuery*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static URI setQuery(String urlString, String query)
    parameters:
    - id: urlString
      type: java.lang.String
    - id: query
      type: java.lang.String
    return:
      type: java.net.URI
- uid: com.azure.cosmos.implementation.Utils.toByteArray(io.netty.buffer.ByteBuf)
  id: toByteArray(io.netty.buffer.ByteBuf)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: toByteArray(ByteBuf buf)
  nameWithType: Utils.toByteArray(ByteBuf buf)
  fullName: com.azure.cosmos.implementation.Utils.toByteArray(ByteBuf buf)
  overload: com.azure.cosmos.implementation.Utils.toByteArray*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static byte[] toByteArray(ByteBuf buf)
    parameters:
    - id: buf
      type: io.netty.buffer.ByteBuf
    return:
      type: byte[]
- uid: com.azure.cosmos.implementation.Utils.toByteBuffer(byte[])
  id: toByteBuffer(byte[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: toByteBuffer(byte[] bytes)
  nameWithType: Utils.toByteBuffer(byte[] bytes)
  fullName: com.azure.cosmos.implementation.Utils.toByteBuffer(byte[] bytes)
  overload: com.azure.cosmos.implementation.Utils.toByteBuffer*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static ByteBuffer toByteBuffer(byte[] bytes)
    parameters:
    - id: bytes
      type: byte[]
    return:
      type: java.nio.ByteBuffer
- uid: com.azure.cosmos.implementation.Utils.toJson(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.node.ObjectNode)
  id: toJson(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.node.ObjectNode)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: toJson(ObjectMapper mapper, ObjectNode object)
  nameWithType: Utils.toJson(ObjectMapper mapper, ObjectNode object)
  fullName: com.azure.cosmos.implementation.Utils.toJson(ObjectMapper mapper, ObjectNode object)
  overload: com.azure.cosmos.implementation.Utils.toJson*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static String toJson(ObjectMapper mapper, ObjectNode object)
    parameters:
    - id: mapper
      type: com.fasterxml.jackson.databind.ObjectMapper
    - id: object
      type: com.fasterxml.jackson.databind.node.ObjectNode
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.Utils.trimBeginningAndEndingSlashes(java.lang.String)
  id: trimBeginningAndEndingSlashes(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: trimBeginningAndEndingSlashes(String path)
  nameWithType: Utils.trimBeginningAndEndingSlashes(String path)
  fullName: com.azure.cosmos.implementation.Utils.trimBeginningAndEndingSlashes(String path)
  overload: com.azure.cosmos.implementation.Utils.trimBeginningAndEndingSlashes*
  type: Method
  package: com.azure.cosmos.implementation
  summary: Trims the beginning and ending '/' from the given path
  syntax:
    content: public static String trimBeginningAndEndingSlashes(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: the path to trim for beginning and ending slashes
    return:
      type: java.lang.String
      description: the path without beginning and ending '/'
- uid: com.azure.cosmos.implementation.Utils.utf8StringFromOrNull(byte[])
  id: utf8StringFromOrNull(byte[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: utf8StringFromOrNull(byte[] bytes)
  nameWithType: Utils.utf8StringFromOrNull(byte[] bytes)
  fullName: com.azure.cosmos.implementation.Utils.utf8StringFromOrNull(byte[] bytes)
  overload: com.azure.cosmos.implementation.Utils.utf8StringFromOrNull*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static String utf8StringFromOrNull(byte[] bytes)
    parameters:
    - id: bytes
      type: byte[]
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.Utils.zonedDateTimeAsUTCRFC1123(java.time.OffsetDateTime)
  id: zonedDateTimeAsUTCRFC1123(java.time.OffsetDateTime)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Utils
  langs:
  - java
  name: zonedDateTimeAsUTCRFC1123(OffsetDateTime offsetDateTime)
  nameWithType: Utils.zonedDateTimeAsUTCRFC1123(OffsetDateTime offsetDateTime)
  fullName: com.azure.cosmos.implementation.Utils.zonedDateTimeAsUTCRFC1123(OffsetDateTime offsetDateTime)
  overload: com.azure.cosmos.implementation.Utils.zonedDateTimeAsUTCRFC1123*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static String zonedDateTimeAsUTCRFC1123(OffsetDateTime offsetDateTime)
    parameters:
    - id: offsetDateTime
      type: java.time.OffsetDateTime
    return:
      type: java.lang.String
references:
- uid: com.azure.cosmos.implementation.Utils.Utils*
  name: Utils
  nameWithType: Utils.Utils
  fullName: com.azure.cosmos.implementation.Utils.Utils
  package: com.azure.cosmos.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.azure.cosmos.implementation.Utils.getUTF8BytesOrNull*
  name: getUTF8BytesOrNull
  nameWithType: Utils.getUTF8BytesOrNull
  fullName: com.azure.cosmos.implementation.Utils.getUTF8BytesOrNull
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Utils.getUTF8Bytes*
  name: getUTF8Bytes
  nameWithType: Utils.getUTF8Bytes
  fullName: com.azure.cosmos.implementation.Utils.getUTF8Bytes
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Utils.getUtf16Bytes*
  name: getUtf16Bytes
  nameWithType: Utils.getUtf16Bytes
  fullName: com.azure.cosmos.implementation.Utils.getUtf16Bytes
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Utils.encodeBase64String*
  name: encodeBase64String
  nameWithType: Utils.encodeBase64String
  fullName: com.azure.cosmos.implementation.Utils.encodeBase64String
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Utils.decodeAsUTF8String*
  name: decodeAsUTF8String
  nameWithType: Utils.decodeAsUTF8String
  fullName: com.azure.cosmos.implementation.Utils.decodeAsUTF8String
  package: com.azure.cosmos.implementation
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.Utils.isNameBased*
  name: isNameBased
  nameWithType: Utils.isNameBased
  fullName: com.azure.cosmos.implementation.Utils.isNameBased
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Utils.isDatabaseLink*
  name: isDatabaseLink
  nameWithType: Utils.isDatabaseLink
  fullName: com.azure.cosmos.implementation.Utils.isDatabaseLink
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Utils.joinPath*
  name: joinPath
  nameWithType: Utils.joinPath
  fullName: com.azure.cosmos.implementation.Utils.joinPath
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Utils.trimBeginningAndEndingSlashes*
  name: trimBeginningAndEndingSlashes
  nameWithType: Utils.trimBeginningAndEndingSlashes
  fullName: com.azure.cosmos.implementation.Utils.trimBeginningAndEndingSlashes
  package: com.azure.cosmos.implementation
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.Utils.paramEncode*
  name: paramEncode
  nameWithType: Utils.paramEncode
  fullName: com.azure.cosmos.implementation.Utils.paramEncode
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Utils.createQuery*
  name: createQuery
  nameWithType: Utils.createQuery
  fullName: com.azure.cosmos.implementation.Utils.createQuery
  package: com.azure.cosmos.implementation
- uid: java.net.URI
  spec.java:
  - uid: java.net.URI
    name: URI
    fullName: java.net.URI
- uid: com.azure.cosmos.implementation.Utils.setQuery*
  name: setQuery
  nameWithType: Utils.setQuery
  fullName: com.azure.cosmos.implementation.Utils.setQuery
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Utils.getCollectionName*
  name: getCollectionName
  nameWithType: Utils.getCollectionName
  fullName: com.azure.cosmos.implementation.Utils.getCollectionName
  package: com.azure.cosmos.implementation
- uid: java.util.Collection<T>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.Utils.getCollectionSize*
  name: <T>getCollectionSize
  nameWithType: Utils.<T>getCollectionSize
  fullName: com.azure.cosmos.implementation.Utils.<T>getCollectionSize
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.DocumentCollection
  name: DocumentCollection
  nameWithType: DocumentCollection
  fullName: com.azure.cosmos.implementation.DocumentCollection
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.cosmos.implementation.Utils.isCollectionPartitioned*
  name: isCollectionPartitioned
  nameWithType: Utils.isCollectionPartitioned
  fullName: com.azure.cosmos.implementation.Utils.isCollectionPartitioned
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.ResourceType
  name: ResourceType
  nameWithType: ResourceType
  fullName: com.azure.cosmos.implementation.ResourceType
- uid: com.azure.cosmos.implementation.Utils.isCollectionChild*
  name: isCollectionChild
  nameWithType: Utils.isCollectionChild
  fullName: com.azure.cosmos.implementation.Utils.isCollectionChild
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.OperationType
  name: OperationType
  nameWithType: OperationType
  fullName: com.azure.cosmos.implementation.OperationType
- uid: com.azure.cosmos.implementation.Utils.isWriteOperation*
  name: isWriteOperation
  nameWithType: Utils.isWriteOperation
  fullName: com.azure.cosmos.implementation.Utils.isWriteOperation
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Utils.isFeedRequest*
  name: isFeedRequest
  nameWithType: Utils.isFeedRequest
  fullName: com.azure.cosmos.implementation.Utils.isFeedRequest
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.ConsistencyLevel
  name: ConsistencyLevel
  nameWithType: ConsistencyLevel
  fullName: com.azure.cosmos.ConsistencyLevel
- uid: com.azure.cosmos.implementation.Utils.isValidConsistency*
  name: isValidConsistency
  nameWithType: Utils.isValidConsistency
  fullName: com.azure.cosmos.implementation.Utils.isValidConsistency
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Utils.getUserAgent*
  name: getUserAgent
  nameWithType: Utils.getUserAgent
  fullName: com.azure.cosmos.implementation.Utils.getUserAgent
  package: com.azure.cosmos.implementation
- uid: com.fasterxml.jackson.databind.ObjectMapper
  spec.java:
  - uid: com.fasterxml.jackson.databind.ObjectMapper
    name: ObjectMapper
    fullName: com.fasterxml.jackson.databind.ObjectMapper
- uid: com.azure.cosmos.implementation.Utils.getSimpleObjectMapper*
  name: getSimpleObjectMapper
  nameWithType: Utils.getSimpleObjectMapper
  fullName: com.azure.cosmos.implementation.Utils.getSimpleObjectMapper
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Utils.nowAsRFC1123*
  name: nowAsRFC1123
  nameWithType: Utils.nowAsRFC1123
  fullName: com.azure.cosmos.implementation.Utils.nowAsRFC1123
  package: com.azure.cosmos.implementation
- uid: java.util.UUID
  spec.java:
  - uid: java.util.UUID
    name: UUID
    fullName: java.util.UUID
- uid: com.azure.cosmos.implementation.Utils.randomUUID*
  name: randomUUID
  nameWithType: Utils.randomUUID
  fullName: com.azure.cosmos.implementation.Utils.randomUUID
  package: com.azure.cosmos.implementation
- uid: java.time.OffsetDateTime
  spec.java:
  - uid: java.time.OffsetDateTime
    name: OffsetDateTime
    fullName: java.time.OffsetDateTime
- uid: com.azure.cosmos.implementation.Utils.zonedDateTimeAsUTCRFC1123*
  name: zonedDateTimeAsUTCRFC1123
  nameWithType: Utils.zonedDateTimeAsUTCRFC1123
  fullName: com.azure.cosmos.implementation.Utils.zonedDateTimeAsUTCRFC1123
  package: com.azure.cosmos.implementation
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.cosmos.implementation.Utils.getValueOrDefault*
  name: getValueOrDefault
  nameWithType: Utils.getValueOrDefault
  fullName: com.azure.cosmos.implementation.Utils.getValueOrDefault
  package: com.azure.cosmos.implementation
- uid: java.lang.IllegalArgumentException
  spec.java:
  - uid: java.lang.IllegalArgumentException
    name: IllegalArgumentException
    fullName: java.lang.IllegalArgumentException
- uid: com.azure.cosmos.implementation.Utils.checkStateOrThrow*
  name: checkStateOrThrow
  nameWithType: Utils.checkStateOrThrow
  fullName: com.azure.cosmos.implementation.Utils.checkStateOrThrow
  package: com.azure.cosmos.implementation
- uid: java.lang.NullPointerException
  spec.java:
  - uid: java.lang.NullPointerException
    name: NullPointerException
    fullName: java.lang.NullPointerException
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.cosmos.implementation.Utils.checkNotNullOrThrow*
  name: checkNotNullOrThrow
  nameWithType: Utils.checkNotNullOrThrow
  fullName: com.azure.cosmos.implementation.Utils.checkNotNullOrThrow
  package: com.azure.cosmos.implementation
- uid: java.lang.Object[]
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '[]'
    fullName: '[]'
- uid: com.azure.cosmos.implementation.Utils.checkStateOrReturnException*
  name: checkStateOrReturnException
  nameWithType: Utils.checkStateOrReturnException
  fullName: com.azure.cosmos.implementation.Utils.checkStateOrReturnException
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.BadRequestException
  name: BadRequestException
  nameWithType: BadRequestException
  fullName: com.azure.cosmos.implementation.BadRequestException
- uid: com.azure.cosmos.implementation.Utils.checkRequestOrReturnException*
  name: checkRequestOrReturnException
  nameWithType: Utils.checkRequestOrReturnException
  fullName: com.azure.cosmos.implementation.Utils.checkRequestOrReturnException
  package: com.azure.cosmos.implementation
- uid: I
  spec.java:
  - uid: I
    name: I
    fullName: I
- uid: java.lang.Class<O>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: O
    name: O
    fullName: O
  - name: '>'
    fullName: '>'
- uid: O
  spec.java:
  - uid: O
    name: O
    fullName: O
- uid: com.azure.cosmos.implementation.Utils.as*
  name: <O,I>as
  nameWithType: Utils.<O,I>as
  fullName: com.azure.cosmos.implementation.Utils.<O,I>as
  package: com.azure.cosmos.implementation
- uid: java.util.List<V>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.Utils.immutableListOf*
  name: <V>immutableListOf
  nameWithType: Utils.<V>immutableListOf
  fullName: com.azure.cosmos.implementation.Utils.<V>immutableListOf
  package: com.azure.cosmos.implementation
- uid: V
  spec.java:
  - uid: V
    name: V
    fullName: V
- uid: java.util.Map<K,V>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.Utils.immutableMapOf*
  name: <K,V>immutableMapOf
  nameWithType: Utils.<K,V>immutableMapOf
  fullName: com.azure.cosmos.implementation.Utils.<K,V>immutableMapOf
  package: com.azure.cosmos.implementation
- uid: K
  spec.java:
  - uid: K
    name: K
    fullName: K
- uid: com.azure.cosmos.implementation.Utils.firstOrDefault*
  name: <V>firstOrDefault
  nameWithType: Utils.<V>firstOrDefault
  fullName: com.azure.cosmos.implementation.Utils.<V>firstOrDefault
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Utils.ValueHolder<V>
  spec.java:
  - uid: com.azure.cosmos.implementation.Utils.ValueHolder
    name: ValueHolder
    fullName: com.azure.cosmos.implementation.Utils.ValueHolder
  - name: <
    fullName: <
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.Utils.tryGetValue*
  name: <K,V>tryGetValue
  nameWithType: Utils.<K,V>tryGetValue
  fullName: com.azure.cosmos.implementation.Utils.<K,V>tryGetValue
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Utils.tryRemove*
  name: <K,V>tryRemove
  nameWithType: Utils.<K,V>tryRemove
  fullName: com.azure.cosmos.implementation.Utils.<K,V>tryRemove
  package: com.azure.cosmos.implementation
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.azure.cosmos.implementation.Utils.parse*
  name: <T>parse
  nameWithType: Utils.<T>parse
  fullName: com.azure.cosmos.implementation.Utils.<T>parse
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.ItemDeserializer
  name: ItemDeserializer
  nameWithType: ItemDeserializer
  fullName: com.azure.cosmos.implementation.ItemDeserializer
- uid: java.nio.ByteBuffer
  spec.java:
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
- uid: com.azure.cosmos.implementation.Utils.serializeJsonToByteBuffer*
  name: serializeJsonToByteBuffer
  nameWithType: Utils.serializeJsonToByteBuffer
  fullName: com.azure.cosmos.implementation.Utils.serializeJsonToByteBuffer
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Utils.isEmpty*
  name: isEmpty
  nameWithType: Utils.isEmpty
  fullName: com.azure.cosmos.implementation.Utils.isEmpty
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Utils.utf8StringFromOrNull*
  name: utf8StringFromOrNull
  nameWithType: Utils.utf8StringFromOrNull
  fullName: com.azure.cosmos.implementation.Utils.utf8StringFromOrNull
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.CosmosPagedFluxOptions
  name: CosmosPagedFluxOptions
  nameWithType: CosmosPagedFluxOptions
  fullName: com.azure.cosmos.implementation.CosmosPagedFluxOptions
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions
  name: CosmosQueryRequestOptions
  nameWithType: CosmosQueryRequestOptions
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions
- uid: com.azure.cosmos.implementation.Utils.setContinuationTokenAndMaxItemCount*
  name: setContinuationTokenAndMaxItemCount
  nameWithType: Utils.setContinuationTokenAndMaxItemCount
  fullName: com.azure.cosmos.implementation.Utils.setContinuationTokenAndMaxItemCount
  package: com.azure.cosmos.implementation
- uid: io.netty.buffer.ByteBuf
  spec.java:
  - uid: io.netty.buffer.ByteBuf
    name: ByteBuf
    fullName: io.netty.buffer.ByteBuf
- uid: com.azure.cosmos.implementation.Utils.toByteArray*
  name: toByteArray
  nameWithType: Utils.toByteArray
  fullName: com.azure.cosmos.implementation.Utils.toByteArray
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Utils.toByteBuffer*
  name: toByteBuffer
  nameWithType: Utils.toByteBuffer
  fullName: com.azure.cosmos.implementation.Utils.toByteBuffer
  package: com.azure.cosmos.implementation
- uid: com.fasterxml.jackson.databind.node.ObjectNode
  spec.java:
  - uid: com.fasterxml.jackson.databind.node.ObjectNode
    name: ObjectNode
    fullName: com.fasterxml.jackson.databind.node.ObjectNode
- uid: com.azure.cosmos.implementation.Utils.toJson*
  name: toJson
  nameWithType: Utils.toJson
  fullName: com.azure.cosmos.implementation.Utils.toJson
  package: com.azure.cosmos.implementation
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.azure.cosmos.implementation.Utils.serializeObjectToByteArray*
  name: serializeObjectToByteArray
  nameWithType: Utils.serializeObjectToByteArray
  fullName: com.azure.cosmos.implementation.Utils.serializeObjectToByteArray
  package: com.azure.cosmos.implementation
- uid: java.util.Base64.Encoder
  spec.java:
  - uid: java.util.Base64.Encoder
    name: Encoder
    fullName: java.util.Base64.Encoder
- uid: java.util.Base64.Decoder
  spec.java:
  - uid: java.util.Base64.Decoder
    name: Decoder
    fullName: java.util.Base64.Decoder
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.cosmos.implementation.Utils.ValueHolder
  name: Utils.ValueHolder<V>
  nameWithType: Utils.ValueHolder<V>
  fullName: com.azure.cosmos.implementation.Utils.ValueHolder<V>
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: K,V
  name: K,V
  nameWithType: K,V
  fullName: K,V
