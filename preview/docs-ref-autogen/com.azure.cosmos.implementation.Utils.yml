### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.Utils"
fullName: "com.azure.cosmos.implementation.Utils"
name: "Utils"
nameWithType: "Utils"
summary: "While this class is public, but it is not part of our published public APIs. This is meant to be internally used only by our sdk."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Utils"
constructors:
- "com.azure.cosmos.implementation.Utils.Utils()"
fields:
- "com.azure.cosmos.implementation.Utils.Base64Decoder"
- "com.azure.cosmos.implementation.Utils.Base64Encoder"
methods:
- "com.azure.cosmos.implementation.Utils.<K,V>immutableMapOf()"
- "com.azure.cosmos.implementation.Utils.<K,V>immutableMapOf(K,V)"
- "com.azure.cosmos.implementation.Utils.<K,V>tryGetValue(java.util.Map<K,V>,K,com.azure.cosmos.implementation.Utils.ValueHolder<V>)"
- "com.azure.cosmos.implementation.Utils.<K,V>tryRemove(java.util.Map<K,V>,K,com.azure.cosmos.implementation.Utils.ValueHolder<V>)"
- "com.azure.cosmos.implementation.Utils.<O,I>as(I,java.lang.Class<O>)"
- "com.azure.cosmos.implementation.Utils.<T>getCollectionSize(java.util.Collection<T>)"
- "com.azure.cosmos.implementation.Utils.<T>parse(byte[],java.lang.Class<T>)"
- "com.azure.cosmos.implementation.Utils.<T>parse(byte[],java.lang.Class<T>,com.azure.cosmos.implementation.ItemDeserializer)"
- "com.azure.cosmos.implementation.Utils.<T>parse(java.lang.String,java.lang.Class<T>)"
- "com.azure.cosmos.implementation.Utils.<V>firstOrDefault(java.util.List<V>)"
- "com.azure.cosmos.implementation.Utils.<V>immutableListOf()"
- "com.azure.cosmos.implementation.Utils.<V>immutableListOf(V)"
- "com.azure.cosmos.implementation.Utils.checkNotNullOrThrow(java.lang.Object,java.lang.String,java.lang.String)"
- "com.azure.cosmos.implementation.Utils.checkRequestOrReturnException(boolean,java.lang.String,java.lang.String)"
- "com.azure.cosmos.implementation.Utils.checkRequestOrReturnException(boolean,java.lang.String,java.lang.String,java.lang.Object...)"
- "com.azure.cosmos.implementation.Utils.checkStateOrReturnException(boolean,java.lang.String,java.lang.String)"
- "com.azure.cosmos.implementation.Utils.checkStateOrReturnException(boolean,java.lang.String,java.lang.String,java.lang.Object...)"
- "com.azure.cosmos.implementation.Utils.checkStateOrThrow(boolean,java.lang.String,java.lang.String)"
- "com.azure.cosmos.implementation.Utils.checkStateOrThrow(boolean,java.lang.String,java.lang.String,java.lang.Object...)"
- "com.azure.cosmos.implementation.Utils.createQuery(java.util.Map<java.lang.String,java.lang.String>)"
- "com.azure.cosmos.implementation.Utils.decodeAsUTF8String(java.lang.String)"
- "com.azure.cosmos.implementation.Utils.encodeBase64String(byte[])"
- "com.azure.cosmos.implementation.Utils.getCollectionName(java.lang.String)"
- "com.azure.cosmos.implementation.Utils.getSimpleObjectMapper()"
- "com.azure.cosmos.implementation.Utils.getUTF8Bytes(java.lang.String)"
- "com.azure.cosmos.implementation.Utils.getUTF8BytesOrNull(java.lang.String)"
- "com.azure.cosmos.implementation.Utils.getUserAgent()"
- "com.azure.cosmos.implementation.Utils.getUserAgent(java.lang.String,java.lang.String)"
- "com.azure.cosmos.implementation.Utils.getUtf16Bytes(java.lang.String)"
- "com.azure.cosmos.implementation.Utils.getValueOrDefault(java.lang.Integer,int)"
- "com.azure.cosmos.implementation.Utils.isCollectionChild(com.azure.cosmos.implementation.ResourceType)"
- "com.azure.cosmos.implementation.Utils.isCollectionPartitioned(com.azure.cosmos.implementation.DocumentCollection)"
- "com.azure.cosmos.implementation.Utils.isDatabaseLink(java.lang.String)"
- "com.azure.cosmos.implementation.Utils.isEmpty(byte[])"
- "com.azure.cosmos.implementation.Utils.isFeedRequest(com.azure.cosmos.implementation.OperationType)"
- "com.azure.cosmos.implementation.Utils.isNameBased(java.lang.String)"
- "com.azure.cosmos.implementation.Utils.isValidConsistency(com.azure.cosmos.ConsistencyLevel,com.azure.cosmos.ConsistencyLevel)"
- "com.azure.cosmos.implementation.Utils.isWriteOperation(com.azure.cosmos.implementation.OperationType)"
- "com.azure.cosmos.implementation.Utils.joinPath(java.lang.String,java.lang.String)"
- "com.azure.cosmos.implementation.Utils.nowAsRFC1123()"
- "com.azure.cosmos.implementation.Utils.paramEncode(java.util.Map<java.lang.String,java.lang.String>)"
- "com.azure.cosmos.implementation.Utils.randomUUID()"
- "com.azure.cosmos.implementation.Utils.serializeJsonToByteBuffer(com.fasterxml.jackson.databind.ObjectMapper,java.lang.Object)"
- "com.azure.cosmos.implementation.Utils.serializeObjectToByteArray(java.lang.Object)"
- "com.azure.cosmos.implementation.Utils.setContinuationTokenAndMaxItemCount(com.azure.cosmos.implementation.CosmosPagedFluxOptions,com.azure.cosmos.models.CosmosQueryRequestOptions)"
- "com.azure.cosmos.implementation.Utils.setQuery(java.lang.String,java.lang.String)"
- "com.azure.cosmos.implementation.Utils.toByteArray(io.netty.buffer.ByteBuf)"
- "com.azure.cosmos.implementation.Utils.toByteBuffer(byte[])"
- "com.azure.cosmos.implementation.Utils.toJson(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.node.ObjectNode)"
- "com.azure.cosmos.implementation.Utils.trimBeginningAndEndingSlashes(java.lang.String)"
- "com.azure.cosmos.implementation.Utils.utf8StringFromOrNull(byte[])"
- "com.azure.cosmos.implementation.Utils.zonedDateTimeAsUTCRFC1123(java.time.OffsetDateTime)"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
