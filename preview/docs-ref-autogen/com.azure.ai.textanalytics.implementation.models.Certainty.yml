### YamlMime:JavaEnum
uid: "com.azure.ai.textanalytics.implementation.models.Certainty"
fullName: "com.azure.ai.textanalytics.implementation.models.Certainty"
name: "Certainty"
nameWithType: "Certainty"
summary: "Defines values for Certainty."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum Certainty extends Enum<Certainty>"
fields:
- uid: "com.azure.ai.textanalytics.implementation.models.Certainty.NEGATIVE"
  fullName: "com.azure.ai.textanalytics.implementation.models.Certainty.NEGATIVE"
  name: "NEGATIVE"
  nameWithType: "Certainty.NEGATIVE"
  summary: "Enum value Negative."
- uid: "com.azure.ai.textanalytics.implementation.models.Certainty.NEGATIVE_POSSIBLE"
  fullName: "com.azure.ai.textanalytics.implementation.models.Certainty.NEGATIVE_POSSIBLE"
  name: "NEGATIVE_POSSIBLE"
  nameWithType: "Certainty.NEGATIVE_POSSIBLE"
  summary: "Enum value Negative Possible."
- uid: "com.azure.ai.textanalytics.implementation.models.Certainty.NEUTRAL_POSSIBLE"
  fullName: "com.azure.ai.textanalytics.implementation.models.Certainty.NEUTRAL_POSSIBLE"
  name: "NEUTRAL_POSSIBLE"
  nameWithType: "Certainty.NEUTRAL_POSSIBLE"
  summary: "Enum value Neutral Possible."
- uid: "com.azure.ai.textanalytics.implementation.models.Certainty.POSITIVE"
  fullName: "com.azure.ai.textanalytics.implementation.models.Certainty.POSITIVE"
  name: "POSITIVE"
  nameWithType: "Certainty.POSITIVE"
  summary: "Enum value Positive."
- uid: "com.azure.ai.textanalytics.implementation.models.Certainty.POSITIVE_POSSIBLE"
  fullName: "com.azure.ai.textanalytics.implementation.models.Certainty.POSITIVE_POSSIBLE"
  name: "POSITIVE_POSSIBLE"
  nameWithType: "Certainty.POSITIVE_POSSIBLE"
  summary: "Enum value Positive Possible."
methods:
- uid: "com.azure.ai.textanalytics.implementation.models.Certainty.fromString(java.lang.String)"
  fullName: "com.azure.ai.textanalytics.implementation.models.Certainty.fromString(String value)"
  name: "fromString(String value)"
  nameWithType: "Certainty.fromString(String value)"
  summary: "Parses a serialized value to a Certainty instance."
  parameters:
  - description: "the serialized value to parse."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Certainty fromString(String value)"
  returns:
    description: "the parsed Certainty object, or null if unable to parse."
    type: "<xref href=\"com.azure.ai.textanalytics.implementation.models.Certainty?alt=com.azure.ai.textanalytics.implementation.models.Certainty&text=Certainty\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.textanalytics.implementation.models.Certainty.toString()"
  fullName: "com.azure.ai.textanalytics.implementation.models.Certainty.toString()"
  name: "toString()"
  nameWithType: "Certainty.toString()"
  overridden: "java.lang.Enum.toString()"
  syntax: "public String toString()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.textanalytics.implementation.models.Certainty.valueOf(java.lang.String)"
  fullName: "com.azure.ai.textanalytics.implementation.models.Certainty.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "Certainty.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Certainty valueOf(String name)"
  returns:
    type: "<xref href=\"com.azure.ai.textanalytics.implementation.models.Certainty?alt=com.azure.ai.textanalytics.implementation.models.Certainty&text=Certainty\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.textanalytics.implementation.models.Certainty.values()"
  fullName: "com.azure.ai.textanalytics.implementation.models.Certainty.values()"
  name: "values()"
  nameWithType: "Certainty.values()"
  syntax: "public static Certainty[] values()"
  returns:
    type: "<xref href=\"com.azure.ai.textanalytics.implementation.models.Certainty?alt=com.azure.ai.textanalytics.implementation.models.Certainty&text=Certainty\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.azure.ai.textanalytics.implementation.models"
artifact: com.azure:azure-ai-textanalytics:5.1.0-beta.6
