### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base"
fullName: "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base"
name: "JsonFormatVisitorWrapper.Base"
nameWithType: "JsonFormatVisitorWrapper.Base"
summary: "Empty \"no-op\" implementation of <xref uid=\"com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonFormatVisitorWrapper\"></xref>, suitable for sub-classing. Does implement <xref uid=\"com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base.setProvider(com.fasterxml.jackson.databind.SerializerProvider)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#setProvider(SerializerProvider)\"></xref> and <xref uid=\"com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base.getProvider()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getProvider()\"></xref> as expected; other methods simply return null and do nothing."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public static class JsonFormatVisitorWrapper.Base implements jsonFormatVisitors.JsonFormatVisitorWrapper"
constructors:
- "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base.Base()"
- "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base.Base(com.fasterxml.jackson.databind.SerializerProvider)"
fields:
- "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base._provider"
methods:
- "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base.expectAnyFormat(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base.expectArrayFormat(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base.expectBooleanFormat(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base.expectIntegerFormat(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base.expectMapFormat(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base.expectNullFormat(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base.expectNumberFormat(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base.expectObjectFormat(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base.expectStringFormat(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base.getProvider()"
- "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper.Base.setProvider(com.fasterxml.jackson.databind.SerializerProvider)"
type: "class"
implements:
- "<xref href=\"com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper?alt=com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper&text=JsonFormatVisitorWrapper\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.jsonFormatVisitors"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
