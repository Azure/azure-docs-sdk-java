### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.SemanticSearch"
fullName: "com.azure.search.documents.indexes.models.SemanticSearch"
name: "SemanticSearch"
nameWithType: "SemanticSearch"
summary: "Defines parameters for a search index that influence semantic capabilities."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **SemanticSearch**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.SemanticSearch?alt=com.azure.search.documents.indexes.models.SemanticSearch&text=SemanticSearch\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.search.documents.indexes.models.SemanticSearch.SemanticSearch()"
  fullName: "com.azure.search.documents.indexes.models.SemanticSearch.SemanticSearch()"
  name: "SemanticSearch()"
  nameWithType: "SemanticSearch.SemanticSearch()"
  summary: "Creates an instance of Semantic<wbr>Search class."
  syntax: "public SemanticSearch()"
  desc: "Creates an instance of SemanticSearch class."
methods:
- uid: "com.azure.search.documents.indexes.models.SemanticSearch.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.search.documents.indexes.models.SemanticSearch.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "SemanticSearch.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Semantic<wbr>Search from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SemanticSearch fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the SemanticSearch."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of SemanticSearch from the JsonReader."
  returns:
    description: "An instance of SemanticSearch if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SemanticSearch?alt=com.azure.search.documents.indexes.models.SemanticSearch&text=SemanticSearch\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SemanticSearch.getConfigurations()"
  fullName: "com.azure.search.documents.indexes.models.SemanticSearch.getConfigurations()"
  name: "getConfigurations()"
  nameWithType: "SemanticSearch.getConfigurations()"
  summary: "Get the configurations property: The semantic configurations for the index."
  syntax: "public List<SemanticConfiguration> getConfigurations()"
  desc: "Get the configurations property: The semantic configurations for the index."
  returns:
    description: "the configurations value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.search.documents.indexes.models.SemanticConfiguration?alt=com.azure.search.documents.indexes.models.SemanticConfiguration&text=SemanticConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.models.SemanticSearch.getDefaultConfigurationName()"
  fullName: "com.azure.search.documents.indexes.models.SemanticSearch.getDefaultConfigurationName()"
  name: "getDefaultConfigurationName()"
  nameWithType: "SemanticSearch.getDefaultConfigurationName()"
  summary: "Get the default<wbr>Configuration<wbr>Name property: Allows you to set the name of a default semantic configuration in your index, making it optional to pass it on as a query parameter every time."
  syntax: "public String getDefaultConfigurationName()"
  desc: "Get the defaultConfigurationName property: Allows you to set the name of a default semantic configuration in your index, making it optional to pass it on as a query parameter every time."
  returns:
    description: "the defaultConfigurationName value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.search.documents.indexes.models.SemanticSearch.setConfigurations(java.util.List<com.azure.search.documents.indexes.models.SemanticConfiguration>)"
  fullName: "com.azure.search.documents.indexes.models.SemanticSearch.setConfigurations(List<SemanticConfiguration> configurations)"
  name: "setConfigurations(List<SemanticConfiguration> configurations)"
  nameWithType: "SemanticSearch.setConfigurations(List<SemanticConfiguration> configurations)"
  summary: "Set the configurations property: The semantic configurations for the index."
  parameters:
  - description: "the configurations value to set."
    name: "configurations"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.search.documents.indexes.models.SemanticConfiguration?alt=com.azure.search.documents.indexes.models.SemanticConfiguration&text=SemanticConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SemanticSearch setConfigurations(List<SemanticConfiguration> configurations)"
  desc: "Set the configurations property: The semantic configurations for the index."
  returns:
    description: "the SemanticSearch object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SemanticSearch?alt=com.azure.search.documents.indexes.models.SemanticSearch&text=SemanticSearch\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SemanticSearch.setDefaultConfigurationName(java.lang.String)"
  fullName: "com.azure.search.documents.indexes.models.SemanticSearch.setDefaultConfigurationName(String defaultConfigurationName)"
  name: "setDefaultConfigurationName(String defaultConfigurationName)"
  nameWithType: "SemanticSearch.setDefaultConfigurationName(String defaultConfigurationName)"
  summary: "Set the default<wbr>Configuration<wbr>Name property: Allows you to set the name of a default semantic configuration in your index, making it optional to pass it on as a query parameter every time."
  parameters:
  - description: "the defaultConfigurationName value to set."
    name: "defaultConfigurationName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SemanticSearch setDefaultConfigurationName(String defaultConfigurationName)"
  desc: "Set the defaultConfigurationName property: Allows you to set the name of a default semantic configuration in your index, making it optional to pass it on as a query parameter every time."
  returns:
    description: "the SemanticSearch object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SemanticSearch?alt=com.azure.search.documents.indexes.models.SemanticSearch&text=SemanticSearch\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SemanticSearch.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.search.documents.indexes.models.SemanticSearch.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "SemanticSearch.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Defines parameters for a search index that influence semantic capabilities."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.SemanticSearch?alt=com.azure.search.documents.indexes.models.SemanticSearch&text=SemanticSearch\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.8.0-beta.1
