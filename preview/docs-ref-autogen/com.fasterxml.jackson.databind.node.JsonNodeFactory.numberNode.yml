### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode*"
fullName: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode"
name: "numberNode"
nameWithType: "JsonNodeFactory.numberNode"
members:
- uid: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(byte)"
  fullName: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(byte v)"
  name: "numberNode(byte v)"
  nameWithType: "JsonNodeFactory.numberNode(byte v)"
  summary: "Factory method for getting an instance of JSON numeric value that expresses given 8-bit value"
  parameters:
  - name: "v"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NumericNode numberNode(byte v)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.node.NumericNode?alt=com.fasterxml.jackson.databind.node.NumericNode&text=NumericNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(double)"
  fullName: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(double v)"
  name: "numberNode(double v)"
  nameWithType: "JsonNodeFactory.numberNode(double v)"
  summary: "Factory method for getting an instance of JSON numeric value that expresses given 64-bit floating point value"
  parameters:
  - name: "v"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NumericNode numberNode(double v)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.node.NumericNode?alt=com.fasterxml.jackson.databind.node.NumericNode&text=NumericNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(float)"
  fullName: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(float v)"
  name: "numberNode(float v)"
  nameWithType: "JsonNodeFactory.numberNode(float v)"
  summary: "Factory method for getting an instance of JSON numeric value that expresses given 32-bit floating point value"
  parameters:
  - name: "v"
    type: "<xref href=\"float?alt=float&text=float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NumericNode numberNode(float v)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.node.NumericNode?alt=com.fasterxml.jackson.databind.node.NumericNode&text=NumericNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(int)"
  fullName: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(int v)"
  name: "numberNode(int v)"
  nameWithType: "JsonNodeFactory.numberNode(int v)"
  summary: "Factory method for getting an instance of JSON numeric value that expresses given 32-bit integer value"
  parameters:
  - name: "v"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NumericNode numberNode(int v)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.node.NumericNode?alt=com.fasterxml.jackson.databind.node.NumericNode&text=NumericNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(java.lang.Byte)"
  fullName: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(Byte value)"
  name: "numberNode(Byte value)"
  nameWithType: "JsonNodeFactory.numberNode(Byte value)"
  summary: "Alternate factory method that will handle wrapper value, which may be null. Due to possibility of null, returning type is not guaranteed to be <xref uid=\"com.fasterxml.jackson.databind.node.NumericNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NumericNode\"></xref>, but just <xref uid=\"com.fasterxml.jackson.databind.node.ValueNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ValueNode\"></xref>."
  parameters:
  - name: "value"
    type: "<xref href=\"java.lang.Byte?alt=java.lang.Byte&text=Byte\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValueNode numberNode(Byte value)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.node.ValueNode?alt=com.fasterxml.jackson.databind.node.ValueNode&text=ValueNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(java.lang.Double)"
  fullName: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(Double value)"
  name: "numberNode(Double value)"
  nameWithType: "JsonNodeFactory.numberNode(Double value)"
  summary: "Alternate factory method that will handle wrapper value, which may be null. Due to possibility of null, returning type is not guaranteed to be <xref uid=\"com.fasterxml.jackson.databind.node.NumericNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NumericNode\"></xref>, but just <xref uid=\"com.fasterxml.jackson.databind.node.ValueNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ValueNode\"></xref>."
  parameters:
  - name: "value"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValueNode numberNode(Double value)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.node.ValueNode?alt=com.fasterxml.jackson.databind.node.ValueNode&text=ValueNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(java.lang.Float)"
  fullName: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(Float value)"
  name: "numberNode(Float value)"
  nameWithType: "JsonNodeFactory.numberNode(Float value)"
  summary: "Alternate factory method that will handle wrapper value, which may be null. Due to possibility of null, returning type is not guaranteed to be <xref uid=\"com.fasterxml.jackson.databind.node.NumericNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NumericNode\"></xref>, but just <xref uid=\"com.fasterxml.jackson.databind.node.ValueNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ValueNode\"></xref>."
  parameters:
  - name: "value"
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValueNode numberNode(Float value)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.node.ValueNode?alt=com.fasterxml.jackson.databind.node.ValueNode&text=ValueNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(java.lang.Integer)"
  fullName: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(Integer value)"
  name: "numberNode(Integer value)"
  nameWithType: "JsonNodeFactory.numberNode(Integer value)"
  summary: "Alternate factory method that will handle wrapper value, which may be null. Due to possibility of null, returning type is not guaranteed to be <xref uid=\"com.fasterxml.jackson.databind.node.NumericNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NumericNode\"></xref>, but just <xref uid=\"com.fasterxml.jackson.databind.node.ValueNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ValueNode\"></xref>."
  parameters:
  - name: "value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValueNode numberNode(Integer value)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.node.ValueNode?alt=com.fasterxml.jackson.databind.node.ValueNode&text=ValueNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(java.lang.Long)"
  fullName: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(Long v)"
  name: "numberNode(Long v)"
  nameWithType: "JsonNodeFactory.numberNode(Long v)"
  summary: "Alternate factory method that will handle wrapper value, which may be null. Due to possibility of null, returning type is not guaranteed to be <xref uid=\"com.fasterxml.jackson.databind.node.NumericNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NumericNode\"></xref>, but just <xref uid=\"com.fasterxml.jackson.databind.node.ValueNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ValueNode\"></xref>."
  parameters:
  - name: "v"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValueNode numberNode(Long v)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.node.ValueNode?alt=com.fasterxml.jackson.databind.node.ValueNode&text=ValueNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(java.lang.Short)"
  fullName: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(Short value)"
  name: "numberNode(Short value)"
  nameWithType: "JsonNodeFactory.numberNode(Short value)"
  summary: "Alternate factory method that will handle wrapper value, which may be null. Due to possibility of null, returning type is not guaranteed to be <xref uid=\"com.fasterxml.jackson.databind.node.NumericNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NumericNode\"></xref>, but just <xref uid=\"com.fasterxml.jackson.databind.node.ValueNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ValueNode\"></xref>."
  parameters:
  - name: "value"
    type: "<xref href=\"java.lang.Short?alt=java.lang.Short&text=Short\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValueNode numberNode(Short value)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.node.ValueNode?alt=com.fasterxml.jackson.databind.node.ValueNode&text=ValueNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(java.math.BigDecimal)"
  fullName: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(BigDecimal v)"
  name: "numberNode(BigDecimal v)"
  nameWithType: "JsonNodeFactory.numberNode(BigDecimal v)"
  summary: "Factory method for getting an instance of JSON numeric value that expresses given unlimited precision floating point value\n\nIn the event that the factory has been built to normalize decimal values, the BigDecimal argument will be stripped off its trailing zeroes, using <xref uid=\"java.math.BigDecimal.stripTrailingZeros*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BigDecimal#stripTrailingZeros()\"></xref>."
  parameters:
  - name: "v"
    type: "<xref href=\"java.math.BigDecimal?alt=java.math.BigDecimal&text=BigDecimal\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValueNode numberNode(BigDecimal v)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.node.ValueNode?alt=com.fasterxml.jackson.databind.node.ValueNode&text=ValueNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(java.math.BigInteger)"
  fullName: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(BigInteger v)"
  name: "numberNode(BigInteger v)"
  nameWithType: "JsonNodeFactory.numberNode(BigInteger v)"
  summary: "Factory method for getting an instance of JSON numeric value that expresses given unlimited range integer value"
  parameters:
  - name: "v"
    type: "<xref href=\"java.math.BigInteger?alt=java.math.BigInteger&text=BigInteger\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValueNode numberNode(BigInteger v)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.node.ValueNode?alt=com.fasterxml.jackson.databind.node.ValueNode&text=ValueNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(long)"
  fullName: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(long v)"
  name: "numberNode(long v)"
  nameWithType: "JsonNodeFactory.numberNode(long v)"
  summary: "Factory method for getting an instance of JSON numeric value that expresses given 64-bit integer value"
  parameters:
  - name: "v"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NumericNode numberNode(long v)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.node.NumericNode?alt=com.fasterxml.jackson.databind.node.NumericNode&text=NumericNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(short)"
  fullName: "com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(short v)"
  name: "numberNode(short v)"
  nameWithType: "JsonNodeFactory.numberNode(short v)"
  summary: "Factory method for getting an instance of JSON numeric value that expresses given 16-bit integer value"
  parameters:
  - name: "v"
    type: "<xref href=\"short?alt=short&text=short\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NumericNode numberNode(short v)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.node.NumericNode?alt=com.fasterxml.jackson.databind.node.NumericNode&text=NumericNode\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.node"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
