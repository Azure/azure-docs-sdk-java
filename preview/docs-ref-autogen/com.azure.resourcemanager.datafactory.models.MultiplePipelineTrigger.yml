### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger"
fullName: "com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger"
name: "MultiplePipelineTrigger"
nameWithType: "MultiplePipelineTrigger"
summary: "Base class for all triggers that support one to many model for trigger to pipeline."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.Trigger?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.Trigger.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.Trigger.annotations()"
- "com.azure.resourcemanager.datafactory.models.Trigger.description()"
- "com.azure.resourcemanager.datafactory.models.Trigger.runtimeState()"
- "com.azure.resourcemanager.datafactory.models.Trigger.validate()"
- "com.azure.resourcemanager.datafactory.models.Trigger.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.Trigger.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.Trigger.withDescription(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class MultiplePipelineTrigger extends Trigger"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger.MultiplePipelineTrigger()"
  fullName: "com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger.MultiplePipelineTrigger()"
  name: "MultiplePipelineTrigger()"
  nameWithType: "MultiplePipelineTrigger.MultiplePipelineTrigger()"
  syntax: "public MultiplePipelineTrigger()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger.pipelines()"
  fullName: "com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger.pipelines()"
  name: "pipelines()"
  nameWithType: "MultiplePipelineTrigger.pipelines()"
  summary: "Get the pipelines property: Pipelines that need to be started."
  syntax: "public List<TriggerPipelineReference> pipelines()"
  desc: "Get the pipelines property: Pipelines that need to be started."
  returns:
    description: "the pipelines value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.TriggerPipelineReference?alt=com.azure.resourcemanager.datafactory.models.TriggerPipelineReference&text=TriggerPipelineReference\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger.validate()"
  name: "validate()"
  nameWithType: "MultiplePipelineTrigger.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.Trigger.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "MultiplePipelineTrigger.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the trigger."
  overridden: "com.azure.resourcemanager.datafactory.models.Trigger.withAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public MultiplePipelineTrigger withAnnotations(List<Object> annotations)"
  desc: "Set the annotations property: List of tags that can be used for describing the trigger."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger?alt=com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger&text=MultiplePipelineTrigger\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "MultiplePipelineTrigger.withDescription(String description)"
  summary: "Set the description property: Trigger description."
  overridden: "com.azure.resourcemanager.datafactory.models.Trigger.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MultiplePipelineTrigger withDescription(String description)"
  desc: "Set the description property: Trigger description."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger?alt=com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger&text=MultiplePipelineTrigger\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger.withPipelines(java.util.List<com.azure.resourcemanager.datafactory.models.TriggerPipelineReference>)"
  fullName: "com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger.withPipelines(List<TriggerPipelineReference> pipelines)"
  name: "withPipelines(List<TriggerPipelineReference> pipelines)"
  nameWithType: "MultiplePipelineTrigger.withPipelines(List<TriggerPipelineReference> pipelines)"
  summary: "Set the pipelines property: Pipelines that need to be started."
  parameters:
  - description: "the pipelines value to set."
    name: "pipelines"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.TriggerPipelineReference?alt=com.azure.resourcemanager.datafactory.models.TriggerPipelineReference&text=TriggerPipelineReference\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public MultiplePipelineTrigger withPipelines(List<TriggerPipelineReference> pipelines)"
  desc: "Set the pipelines property: Pipelines that need to be started."
  returns:
    description: "the MultiplePipelineTrigger object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger?alt=com.azure.resourcemanager.datafactory.models.MultiplePipelineTrigger&text=MultiplePipelineTrigger\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Base class for all triggers that support one to many model for trigger to pipeline."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
