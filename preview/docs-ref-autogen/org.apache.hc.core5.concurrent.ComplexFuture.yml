### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.concurrent.ComplexFuture
  id: ComplexFuture
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.concurrent
  children:
  - org.apache.hc.core5.concurrent.ComplexFuture.ComplexFuture(org.apache.hc.core5.concurrent.FutureCallback<T>)
  - org.apache.hc.core5.concurrent.ComplexFuture.cancel(boolean)
  - org.apache.hc.core5.concurrent.ComplexFuture.completed(T)
  - org.apache.hc.core5.concurrent.ComplexFuture.failed(java.lang.Exception)
  - org.apache.hc.core5.concurrent.ComplexFuture.setDependency(java.util.concurrent.Future<?>)
  - org.apache.hc.core5.concurrent.ComplexFuture.setDependency(org.apache.hc.core5.concurrent.Cancellable)
  langs:
  - java
  name: ComplexFuture<T>
  nameWithType: ComplexFuture<T>
  fullName: org.apache.hc.core5.concurrent.ComplexFuture<T>
  type: Class
  package: org.apache.hc.core5.concurrent
  summary: <xref uid="java.util.concurrent.Future" data-throw-if-not-resolved="false">Future</xref> whose result depends on another <xref uid="org.apache.hc.core5.concurrent.Cancellable" data-throw-if-not-resolved="false">Cancellable</xref> process or operation or another <xref uid="java.util.concurrent.Future" data-throw-if-not-resolved="false">Future</xref>. Dependent process will get cancelled if the future itself is cancelled.
  syntax:
    content: public final class ComplexFuture<T> extends BasicFuture<T> implements CancellableDependency
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  - org.apache.hc.core5.concurrent.BasicFuture
  implements:
  - org.apache.hc.core5.concurrent.CancellableDependency
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.apache.hc.core5.concurrent.BasicFuture.cancel()
  - org.apache.hc.core5.concurrent.BasicFuture.cancel(boolean)
  - org.apache.hc.core5.concurrent.BasicFuture.completed(T)
  - org.apache.hc.core5.concurrent.BasicFuture.failed(java.lang.Exception)
  - org.apache.hc.core5.concurrent.BasicFuture.get()
  - org.apache.hc.core5.concurrent.BasicFuture.get(long,java.util.concurrent.TimeUnit)
  - org.apache.hc.core5.concurrent.BasicFuture.isCancelled()
  - org.apache.hc.core5.concurrent.BasicFuture.isDone()
- uid: org.apache.hc.core5.concurrent.ComplexFuture.ComplexFuture(org.apache.hc.core5.concurrent.FutureCallback<T>)
  id: ComplexFuture(org.apache.hc.core5.concurrent.FutureCallback<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.concurrent.ComplexFuture
  langs:
  - java
  name: ComplexFuture(FutureCallback<T> callback)
  nameWithType: ComplexFuture<T>.ComplexFuture(FutureCallback<T> callback)
  fullName: org.apache.hc.core5.concurrent.ComplexFuture<T>.ComplexFuture(FutureCallback<T> callback)
  overload: org.apache.hc.core5.concurrent.ComplexFuture.ComplexFuture*
  type: Constructor
  package: org.apache.hc.core5.concurrent
  syntax:
    content: public ComplexFuture(FutureCallback<T> callback)
    parameters:
    - id: callback
      type: org.apache.hc.core5.concurrent.FutureCallback<T>
- uid: org.apache.hc.core5.concurrent.ComplexFuture.cancel(boolean)
  id: cancel(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.concurrent.ComplexFuture
  langs:
  - java
  name: cancel(boolean mayInterruptIfRunning)
  nameWithType: ComplexFuture<T>.cancel(boolean mayInterruptIfRunning)
  fullName: org.apache.hc.core5.concurrent.ComplexFuture<T>.cancel(boolean mayInterruptIfRunning)
  overload: org.apache.hc.core5.concurrent.ComplexFuture.cancel*
  type: Method
  package: org.apache.hc.core5.concurrent
  syntax:
    content: public boolean cancel(boolean mayInterruptIfRunning)
    parameters:
    - id: mayInterruptIfRunning
      type: boolean
    return:
      type: boolean
- uid: org.apache.hc.core5.concurrent.ComplexFuture.completed(T)
  id: completed(T)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.concurrent.ComplexFuture
  langs:
  - java
  name: completed(T result)
  nameWithType: ComplexFuture<T>.completed(T result)
  fullName: org.apache.hc.core5.concurrent.ComplexFuture<T>.completed(T result)
  overload: org.apache.hc.core5.concurrent.ComplexFuture.completed*
  type: Method
  package: org.apache.hc.core5.concurrent
  syntax:
    content: public boolean completed(T result)
    parameters:
    - id: result
      type: T
    return:
      type: boolean
- uid: org.apache.hc.core5.concurrent.ComplexFuture.failed(java.lang.Exception)
  id: failed(java.lang.Exception)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.concurrent.ComplexFuture
  langs:
  - java
  name: failed(Exception exception)
  nameWithType: ComplexFuture<T>.failed(Exception exception)
  fullName: org.apache.hc.core5.concurrent.ComplexFuture<T>.failed(Exception exception)
  overload: org.apache.hc.core5.concurrent.ComplexFuture.failed*
  type: Method
  package: org.apache.hc.core5.concurrent
  syntax:
    content: public boolean failed(Exception exception)
    parameters:
    - id: exception
      type: java.lang.Exception
    return:
      type: boolean
- uid: org.apache.hc.core5.concurrent.ComplexFuture.setDependency(java.util.concurrent.Future<?>)
  id: setDependency(java.util.concurrent.Future<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.concurrent.ComplexFuture
  langs:
  - java
  name: setDependency(Future<?> dependency)
  nameWithType: ComplexFuture<T>.setDependency(Future<?> dependency)
  fullName: org.apache.hc.core5.concurrent.ComplexFuture<T>.setDependency(Future<?> dependency)
  overload: org.apache.hc.core5.concurrent.ComplexFuture.setDependency*
  type: Method
  package: org.apache.hc.core5.concurrent
  syntax:
    content: public void setDependency(Future<?> dependency)
    parameters:
    - id: dependency
      type: java.util.concurrent.Future<?>
- uid: org.apache.hc.core5.concurrent.ComplexFuture.setDependency(org.apache.hc.core5.concurrent.Cancellable)
  id: setDependency(org.apache.hc.core5.concurrent.Cancellable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.concurrent.ComplexFuture
  langs:
  - java
  name: setDependency(Cancellable dependency)
  nameWithType: ComplexFuture<T>.setDependency(Cancellable dependency)
  fullName: org.apache.hc.core5.concurrent.ComplexFuture<T>.setDependency(Cancellable dependency)
  overload: org.apache.hc.core5.concurrent.ComplexFuture.setDependency*
  type: Method
  package: org.apache.hc.core5.concurrent
  summary: Sets <xref uid="org.apache.hc.core5.concurrent.Cancellable" data-throw-if-not-resolved="false">Cancellable</xref> dependency on another ongoing process or operation represented by <xref uid="org.apache.hc.core5.concurrent.Cancellable" data-throw-if-not-resolved="false">Cancellable</xref>.
  syntax:
    content: public void setDependency(Cancellable dependency)
    parameters:
    - id: dependency
      type: org.apache.hc.core5.concurrent.Cancellable
references:
- uid: org.apache.hc.core5.concurrent.FutureCallback<T>
  spec.java:
  - uid: org.apache.hc.core5.concurrent.FutureCallback
    name: FutureCallback
    fullName: org.apache.hc.core5.concurrent.FutureCallback
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.concurrent.ComplexFuture.ComplexFuture*
  name: ComplexFuture
  nameWithType: ComplexFuture<T>.ComplexFuture
  fullName: org.apache.hc.core5.concurrent.ComplexFuture<T>.ComplexFuture
  package: org.apache.hc.core5.concurrent
- uid: org.apache.hc.core5.concurrent.Cancellable
  name: Cancellable
  nameWithType: Cancellable
  fullName: org.apache.hc.core5.concurrent.Cancellable
- uid: org.apache.hc.core5.concurrent.ComplexFuture.setDependency*
  name: setDependency
  nameWithType: ComplexFuture<T>.setDependency
  fullName: org.apache.hc.core5.concurrent.ComplexFuture<T>.setDependency
  package: org.apache.hc.core5.concurrent
- uid: java.util.concurrent.Future<?>
  spec.java:
  - uid: java.util.concurrent.Future
    name: Future
    fullName: java.util.concurrent.Future
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.core5.concurrent.ComplexFuture.completed*
  name: completed
  nameWithType: ComplexFuture<T>.completed
  fullName: org.apache.hc.core5.concurrent.ComplexFuture<T>.completed
  package: org.apache.hc.core5.concurrent
- uid: java.lang.Exception
  spec.java:
  - uid: java.lang.Exception
    name: Exception
    fullName: java.lang.Exception
- uid: org.apache.hc.core5.concurrent.ComplexFuture.failed*
  name: failed
  nameWithType: ComplexFuture<T>.failed
  fullName: org.apache.hc.core5.concurrent.ComplexFuture<T>.failed
  package: org.apache.hc.core5.concurrent
- uid: org.apache.hc.core5.concurrent.ComplexFuture.cancel*
  name: cancel
  nameWithType: ComplexFuture<T>.cancel
  fullName: org.apache.hc.core5.concurrent.ComplexFuture<T>.cancel
  package: org.apache.hc.core5.concurrent
- uid: org.apache.hc.core5.concurrent.BasicFuture<T>
  name: BasicFuture<T>
  nameWithType: BasicFuture<T>
  fullName: org.apache.hc.core5.concurrent.BasicFuture<T>
- uid: org.apache.hc.core5.concurrent.CancellableDependency
  name: CancellableDependency
  nameWithType: CancellableDependency
  fullName: org.apache.hc.core5.concurrent.CancellableDependency
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: org.apache.hc.core5.concurrent.BasicFuture.get(long,java.util.concurrent.TimeUnit)
  name: BasicFuture.get(long,TimeUnit)
  nameWithType: BasicFuture.get(long,TimeUnit)
  fullName: org.apache.hc.core5.concurrent.BasicFuture.get(long,java.util.concurrent.TimeUnit)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.apache.hc.core5.concurrent.BasicFuture.isDone()
  name: BasicFuture.isDone()
  nameWithType: BasicFuture.isDone()
  fullName: org.apache.hc.core5.concurrent.BasicFuture.isDone()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.apache.hc.core5.concurrent.BasicFuture.get()
  name: BasicFuture.get()
  nameWithType: BasicFuture.get()
  fullName: org.apache.hc.core5.concurrent.BasicFuture.get()
- uid: org.apache.hc.core5.concurrent.BasicFuture.completed(T)
  name: BasicFuture.completed(T)
  nameWithType: BasicFuture.completed(T)
  fullName: org.apache.hc.core5.concurrent.BasicFuture.completed(T)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: org.apache.hc.core5.concurrent.BasicFuture.cancel()
  name: BasicFuture.cancel()
  nameWithType: BasicFuture.cancel()
  fullName: org.apache.hc.core5.concurrent.BasicFuture.cancel()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: org.apache.hc.core5.concurrent.BasicFuture.isCancelled()
  name: BasicFuture.isCancelled()
  nameWithType: BasicFuture.isCancelled()
  fullName: org.apache.hc.core5.concurrent.BasicFuture.isCancelled()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.concurrent.BasicFuture.failed(java.lang.Exception)
  name: BasicFuture.failed(Exception)
  nameWithType: BasicFuture.failed(Exception)
  fullName: org.apache.hc.core5.concurrent.BasicFuture.failed(java.lang.Exception)
- uid: org.apache.hc.core5.concurrent.BasicFuture.cancel(boolean)
  name: BasicFuture.cancel(boolean)
  nameWithType: BasicFuture.cancel(boolean)
  fullName: org.apache.hc.core5.concurrent.BasicFuture.cancel(boolean)
- uid: org.apache.hc.core5.concurrent.FutureCallback
  name: FutureCallback
  nameWithType: FutureCallback
  fullName: org.apache.hc.core5.concurrent.FutureCallback
- uid: java.util.concurrent.Future
  name: Future
  nameWithType: Future
  fullName: java.util.concurrent.Future
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: org.apache.hc.core5.concurrent.BasicFuture
  name: BasicFuture
  nameWithType: BasicFuture
  fullName: org.apache.hc.core5.concurrent.BasicFuture
