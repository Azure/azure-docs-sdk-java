### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.annotation.OptBoolean
  id: OptBoolean
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation
  children:
  - com.fasterxml.jackson.annotation.OptBoolean.DEFAULT
  - com.fasterxml.jackson.annotation.OptBoolean.FALSE
  - com.fasterxml.jackson.annotation.OptBoolean.TRUE
  - com.fasterxml.jackson.annotation.OptBoolean.asBoolean()
  - com.fasterxml.jackson.annotation.OptBoolean.asPrimitive()
  - com.fasterxml.jackson.annotation.OptBoolean.equals(java.lang.Boolean,java.lang.Boolean)
  - com.fasterxml.jackson.annotation.OptBoolean.fromBoolean(java.lang.Boolean)
  - com.fasterxml.jackson.annotation.OptBoolean.valueOf(java.lang.String)
  - com.fasterxml.jackson.annotation.OptBoolean.values()
  langs:
  - java
  name: OptBoolean
  nameWithType: OptBoolean
  fullName: com.fasterxml.jackson.annotation.OptBoolean
  type: Enum
  package: com.fasterxml.jackson.annotation
  summary: >-
    Optional Boolean value ("nullean"). Needed just because Java annotations can not take 'null' as a value (even as default), so there is no way to distinguish between explicit \`true\` and \`false\`, and lack of choice (related: annotations are limited to primitives, so <xref uid="java.lang.Boolean" data-throw-if-not-resolved="false">java.lang.Boolean</xref> not allowed as solution).


    Note: although use of \`true\` and \`false\` would be more convenient, they can not be chosen since they are Java keyword and compiler won't allow the choice. And since enum naming convention suggests all-upper-case, that is what is done here.
  syntax:
    content: public enum OptBoolean extends Enum<OptBoolean>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.annotation.OptBoolean.DEFAULT
  id: DEFAULT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.OptBoolean
  langs:
  - java
  name: DEFAULT
  nameWithType: OptBoolean.DEFAULT
  fullName: com.fasterxml.jackson.annotation.OptBoolean.DEFAULT
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Value that indicates that the annotation property does NOT have an explicit definition of enabled/disabled (or true/false); instead, a higher-level configuration value is used; or lacking higher-level global setting, default.
  syntax:
    content: public static final OptBoolean DEFAULT
    return:
      type: com.fasterxml.jackson.annotation.OptBoolean
- uid: com.fasterxml.jackson.annotation.OptBoolean.FALSE
  id: "FALSE"
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.OptBoolean
  langs:
  - java
  name: "FALSE"
  nameWithType: OptBoolean.FALSE
  fullName: com.fasterxml.jackson.annotation.OptBoolean.FALSE
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Value that indicates that the annotation property is explicitly defined to be disabled, or false.
  syntax:
    content: public static final OptBoolean FALSE
    return:
      type: com.fasterxml.jackson.annotation.OptBoolean
- uid: com.fasterxml.jackson.annotation.OptBoolean.OptBoolean()
  id: OptBoolean()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.OptBoolean
  langs:
  - java
  name: OptBoolean()
  nameWithType: OptBoolean.OptBoolean()
  fullName: com.fasterxml.jackson.annotation.OptBoolean.OptBoolean()
  overload: com.fasterxml.jackson.annotation.OptBoolean.OptBoolean*
  type: Constructor
  package: com.fasterxml.jackson.annotation
  syntax:
    content: private OptBoolean()
- uid: com.fasterxml.jackson.annotation.OptBoolean.TRUE
  id: "TRUE"
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.OptBoolean
  langs:
  - java
  name: "TRUE"
  nameWithType: OptBoolean.TRUE
  fullName: com.fasterxml.jackson.annotation.OptBoolean.TRUE
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Value that indicates that the annotation property is explicitly defined to be enabled, or true.
  syntax:
    content: public static final OptBoolean TRUE
    return:
      type: com.fasterxml.jackson.annotation.OptBoolean
- uid: com.fasterxml.jackson.annotation.OptBoolean.asBoolean()
  id: asBoolean()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.OptBoolean
  langs:
  - java
  name: asBoolean()
  nameWithType: OptBoolean.asBoolean()
  fullName: com.fasterxml.jackson.annotation.OptBoolean.asBoolean()
  overload: com.fasterxml.jackson.annotation.OptBoolean.asBoolean*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public Boolean asBoolean()
    return:
      type: java.lang.Boolean
- uid: com.fasterxml.jackson.annotation.OptBoolean.asPrimitive()
  id: asPrimitive()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.OptBoolean
  langs:
  - java
  name: asPrimitive()
  nameWithType: OptBoolean.asPrimitive()
  fullName: com.fasterxml.jackson.annotation.OptBoolean.asPrimitive()
  overload: com.fasterxml.jackson.annotation.OptBoolean.asPrimitive*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public boolean asPrimitive()
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.OptBoolean.equals(java.lang.Boolean,java.lang.Boolean)
  id: equals(java.lang.Boolean,java.lang.Boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.OptBoolean
  langs:
  - java
  name: equals(Boolean b1, Boolean b2)
  nameWithType: OptBoolean.equals(Boolean b1, Boolean b2)
  fullName: com.fasterxml.jackson.annotation.OptBoolean.equals(Boolean b1, Boolean b2)
  overload: com.fasterxml.jackson.annotation.OptBoolean.equals*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static boolean equals(Boolean b1, Boolean b2)
    parameters:
    - id: b1
      type: java.lang.Boolean
    - id: b2
      type: java.lang.Boolean
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.OptBoolean.fromBoolean(java.lang.Boolean)
  id: fromBoolean(java.lang.Boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.OptBoolean
  langs:
  - java
  name: fromBoolean(Boolean b)
  nameWithType: OptBoolean.fromBoolean(Boolean b)
  fullName: com.fasterxml.jackson.annotation.OptBoolean.fromBoolean(Boolean b)
  overload: com.fasterxml.jackson.annotation.OptBoolean.fromBoolean*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static OptBoolean fromBoolean(Boolean b)
    parameters:
    - id: b
      type: java.lang.Boolean
    return:
      type: com.fasterxml.jackson.annotation.OptBoolean
- uid: com.fasterxml.jackson.annotation.OptBoolean.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.OptBoolean
  langs:
  - java
  name: valueOf(String name)
  nameWithType: OptBoolean.valueOf(String name)
  fullName: com.fasterxml.jackson.annotation.OptBoolean.valueOf(String name)
  overload: com.fasterxml.jackson.annotation.OptBoolean.valueOf*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static OptBoolean valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.annotation.OptBoolean
- uid: com.fasterxml.jackson.annotation.OptBoolean.values()
  id: values()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.OptBoolean
  langs:
  - java
  name: values()
  nameWithType: OptBoolean.values()
  fullName: com.fasterxml.jackson.annotation.OptBoolean.values()
  overload: com.fasterxml.jackson.annotation.OptBoolean.values*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static OptBoolean[] values()
    return:
      type: com.fasterxml.jackson.annotation.OptBoolean[]
references:
- uid: com.fasterxml.jackson.annotation.OptBoolean.OptBoolean*
  name: OptBoolean
  nameWithType: OptBoolean.OptBoolean
  fullName: com.fasterxml.jackson.annotation.OptBoolean.OptBoolean
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.OptBoolean[]
  spec.java:
  - uid: com.fasterxml.jackson.annotation.OptBoolean
    name: OptBoolean
    fullName: com.fasterxml.jackson.annotation.OptBoolean
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.annotation.OptBoolean.values*
  name: values
  nameWithType: OptBoolean.values
  fullName: com.fasterxml.jackson.annotation.OptBoolean.values
  package: com.fasterxml.jackson.annotation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.annotation.OptBoolean.valueOf*
  name: valueOf
  nameWithType: OptBoolean.valueOf
  fullName: com.fasterxml.jackson.annotation.OptBoolean.valueOf
  package: com.fasterxml.jackson.annotation
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.fasterxml.jackson.annotation.OptBoolean.asBoolean*
  name: asBoolean
  nameWithType: OptBoolean.asBoolean
  fullName: com.fasterxml.jackson.annotation.OptBoolean.asBoolean
  package: com.fasterxml.jackson.annotation
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.annotation.OptBoolean.asPrimitive*
  name: asPrimitive
  nameWithType: OptBoolean.asPrimitive
  fullName: com.fasterxml.jackson.annotation.OptBoolean.asPrimitive
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.OptBoolean.fromBoolean*
  name: fromBoolean
  nameWithType: OptBoolean.fromBoolean
  fullName: com.fasterxml.jackson.annotation.OptBoolean.fromBoolean
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.OptBoolean.equals*
  name: equals
  nameWithType: OptBoolean.equals
  fullName: com.fasterxml.jackson.annotation.OptBoolean.equals
  package: com.fasterxml.jackson.annotation
- uid: java.lang.Enum<com.fasterxml.jackson.annotation.OptBoolean>
  name: Enum<OptBoolean>
  nameWithType: Enum<OptBoolean>
  fullName: java.lang.Enum<com.fasterxml.jackson.annotation.OptBoolean>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
