### YamlMime:JavaEnum
uid: "com.fasterxml.jackson.annotation.OptBoolean"
fullName: "com.fasterxml.jackson.annotation.OptBoolean"
name: "OptBoolean"
nameWithType: "OptBoolean"
summary: "Optional Boolean value (\"nullean\"). Needed just because Java annotations can not take 'null' as a value (even as default), so there is no way to distinguish between explicit \\`true\\` and \\`false\\`, and lack of choice (related: annotations are limited to primitives, so <xref uid=\"java.lang.Boolean\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.lang.Boolean\"></xref> not allowed as solution).\n\nNote: although use of \\`true\\` and \\`false\\` would be more convenient, they can not be chosen since they are Java keyword and compiler won't allow the choice. And since enum naming convention suggests all-upper-case, that is what is done here."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum OptBoolean extends Enum<OptBoolean>"
fields:
- uid: "com.fasterxml.jackson.annotation.OptBoolean.DEFAULT"
  fullName: "com.fasterxml.jackson.annotation.OptBoolean.DEFAULT"
  name: "DEFAULT"
  nameWithType: "OptBoolean.DEFAULT"
  summary: "Value that indicates that the annotation property does NOT have an explicit definition of enabled/disabled (or true/false); instead, a higher-level configuration value is used; or lacking higher-level global setting, default."
- uid: "com.fasterxml.jackson.annotation.OptBoolean.FALSE"
  fullName: "com.fasterxml.jackson.annotation.OptBoolean.FALSE"
  name: "FALSE"
  nameWithType: "OptBoolean.FALSE"
  summary: "Value that indicates that the annotation property is explicitly defined to be disabled, or false."
- uid: "com.fasterxml.jackson.annotation.OptBoolean.TRUE"
  fullName: "com.fasterxml.jackson.annotation.OptBoolean.TRUE"
  name: "TRUE"
  nameWithType: "OptBoolean.TRUE"
  summary: "Value that indicates that the annotation property is explicitly defined to be enabled, or true."
methods:
- uid: "com.fasterxml.jackson.annotation.OptBoolean.asBoolean()"
  fullName: "com.fasterxml.jackson.annotation.OptBoolean.asBoolean()"
  name: "asBoolean()"
  nameWithType: "OptBoolean.asBoolean()"
  syntax: "public Boolean asBoolean()"
  returns:
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.OptBoolean.asPrimitive()"
  fullName: "com.fasterxml.jackson.annotation.OptBoolean.asPrimitive()"
  name: "asPrimitive()"
  nameWithType: "OptBoolean.asPrimitive()"
  syntax: "public boolean asPrimitive()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.OptBoolean.equals(java.lang.Boolean,java.lang.Boolean)"
  fullName: "com.fasterxml.jackson.annotation.OptBoolean.equals(Boolean b1, Boolean b2)"
  name: "equals(Boolean b1, Boolean b2)"
  nameWithType: "OptBoolean.equals(Boolean b1, Boolean b2)"
  parameters:
  - name: "b1"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - name: "b2"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static boolean equals(Boolean b1, Boolean b2)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.OptBoolean.fromBoolean(java.lang.Boolean)"
  fullName: "com.fasterxml.jackson.annotation.OptBoolean.fromBoolean(Boolean b)"
  name: "fromBoolean(Boolean b)"
  nameWithType: "OptBoolean.fromBoolean(Boolean b)"
  parameters:
  - name: "b"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static OptBoolean fromBoolean(Boolean b)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.OptBoolean?alt=com.fasterxml.jackson.annotation.OptBoolean&text=OptBoolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.OptBoolean.valueOf(java.lang.String)"
  fullName: "com.fasterxml.jackson.annotation.OptBoolean.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "OptBoolean.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static OptBoolean valueOf(String name)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.OptBoolean?alt=com.fasterxml.jackson.annotation.OptBoolean&text=OptBoolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.OptBoolean.values()"
  fullName: "com.fasterxml.jackson.annotation.OptBoolean.values()"
  name: "values()"
  nameWithType: "OptBoolean.values()"
  syntax: "public static OptBoolean[] values()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.OptBoolean?alt=com.fasterxml.jackson.annotation.OptBoolean&text=OptBoolean\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
