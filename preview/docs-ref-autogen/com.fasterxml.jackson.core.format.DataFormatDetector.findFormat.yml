### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.format.DataFormatDetector.findFormat*"
fullName: "com.fasterxml.jackson.core.format.DataFormatDetector.findFormat"
name: "findFormat"
nameWithType: "DataFormatDetector.findFormat"
members:
- uid: "com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(byte[])"
  fullName: "com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(byte[] fullInputData)"
  name: "findFormat(byte[] fullInputData)"
  nameWithType: "DataFormatDetector.findFormat(byte[] fullInputData)"
  summary: "Method to call to find format that given content (full document) has, as per configuration of this detector instance."
  parameters:
  - name: "fullInputData"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public DataFormatMatcher findFormat(byte[] fullInputData)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Matcher object which contains result; never null, even in cases\n    where no match (with specified minimal match strength) is found."
    type: "<xref href=\"com.fasterxml.jackson.core.format.DataFormatMatcher?alt=com.fasterxml.jackson.core.format.DataFormatMatcher&text=DataFormatMatcher\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(byte[],int,int)"
  fullName: "com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(byte[] fullInputData, int offset, int len)"
  name: "findFormat(byte[] fullInputData, int offset, int len)"
  nameWithType: "DataFormatDetector.findFormat(byte[] fullInputData, int offset, int len)"
  summary: "Method to call to find format that given content (full document) has, as per configuration of this detector instance."
  parameters:
  - name: "fullInputData"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "offset"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "len"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataFormatMatcher findFormat(byte[] fullInputData, int offset, int len)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Matcher object which contains result; never null, even in cases\n    where no match (with specified minimal match strength) is found."
    type: "<xref href=\"com.fasterxml.jackson.core.format.DataFormatMatcher?alt=com.fasterxml.jackson.core.format.DataFormatMatcher&text=DataFormatMatcher\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(java.io.InputStream)"
  fullName: "com.fasterxml.jackson.core.format.DataFormatDetector.findFormat(InputStream in)"
  name: "findFormat(InputStream in)"
  nameWithType: "DataFormatDetector.findFormat(InputStream in)"
  summary: "Method to call to find format that content (accessible via given <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>) given has, as per configuration of this detector instance."
  parameters:
  - name: "in"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataFormatMatcher findFormat(InputStream in)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Matcher object which contains result; never null, even in cases\n    where no match (with specified minimal match strength) is found."
    type: "<xref href=\"com.fasterxml.jackson.core.format.DataFormatMatcher?alt=com.fasterxml.jackson.core.format.DataFormatMatcher&text=DataFormatMatcher\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.format"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
