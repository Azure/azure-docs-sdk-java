### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty
  id: MapProperty
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std
  children:
  - com.fasterxml.jackson.databind.ser.std.MapProperty.<A>getAnnotation(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.ser.std.MapProperty.<A>getContextAnnotation(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.ser.std.MapProperty.MapProperty(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.ser.std.MapProperty._key
  - com.fasterxml.jackson.databind.ser.std.MapProperty._keySerializer
  - com.fasterxml.jackson.databind.ser.std.MapProperty._property
  - com.fasterxml.jackson.databind.ser.std.MapProperty._typeSerializer
  - com.fasterxml.jackson.databind.ser.std.MapProperty._value
  - com.fasterxml.jackson.databind.ser.std.MapProperty._valueSerializer
  - com.fasterxml.jackson.databind.ser.std.MapProperty.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.MapProperty.depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.MapProperty.getFullName()
  - com.fasterxml.jackson.databind.ser.std.MapProperty.getMember()
  - com.fasterxml.jackson.databind.ser.std.MapProperty.getName()
  - com.fasterxml.jackson.databind.ser.std.MapProperty.getType()
  - com.fasterxml.jackson.databind.ser.std.MapProperty.getValue()
  - com.fasterxml.jackson.databind.ser.std.MapProperty.getWrapperName()
  - com.fasterxml.jackson.databind.ser.std.MapProperty.reset(java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.std.MapProperty.reset(java.lang.Object,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.MapProperty.setValue(java.lang.Object)
  langs:
  - java
  name: MapProperty
  nameWithType: MapProperty
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty
  type: Class
  package: com.fasterxml.jackson.databind.ser.std
  summary: Helper class needed to support flexible filtering of Map properties with generic JSON Filter functionality. Since <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>s are not handled as a collection of properties by Jackson (unlike POJOs), bit more wrapping is required.
  syntax:
    content: public class MapProperty extends PropertyWriter
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase
  - com.fasterxml.jackson.databind.ser.PropertyWriter
  inheritedMembers:
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector)
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.getMetadata()
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isRequired()
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isVirtual()
  - com.fasterxml.jackson.databind.ser.PropertyWriter.<A>findAnnotation(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getAnnotation(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getContextAnnotation(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.getFullName()
  - com.fasterxml.jackson.databind.ser.PropertyWriter.getName()
  - com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.<A>getAnnotation(java.lang.Class<A>)
  id: <A>getAnnotation(java.lang.Class<A>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: <A>getAnnotation(Class<A> acls)
  nameWithType: MapProperty.<A>getAnnotation(Class<A> acls)
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.<A>getAnnotation(Class<A> acls)
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.getAnnotation*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  summary: Method for accessing annotations directly declared for property that this writer is associated with.
  syntax:
    content: public A <A>getAnnotation(Class<A> acls)
    parameters:
    - id: acls
      type: java.lang.Class<A>
    return:
      type: A
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.<A>getContextAnnotation(java.lang.Class<A>)
  id: <A>getContextAnnotation(java.lang.Class<A>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: <A>getContextAnnotation(Class<A> acls)
  nameWithType: MapProperty.<A>getContextAnnotation(Class<A> acls)
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.<A>getContextAnnotation(Class<A> acls)
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.getContextAnnotation*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  summary: Method for accessing annotations declared in context of the property that this writer is associated with; usually this means annotations on enclosing class for property.
  syntax:
    content: public A <A>getContextAnnotation(Class<A> acls)
    parameters:
    - id: acls
      type: java.lang.Class<A>
    return:
      type: A
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.MapProperty(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)
  id: MapProperty(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: MapProperty(TypeSerializer typeSer, BeanProperty prop)
  nameWithType: MapProperty.MapProperty(TypeSerializer typeSer, BeanProperty prop)
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.MapProperty(TypeSerializer typeSer, BeanProperty prop)
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.MapProperty*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: public MapProperty(TypeSerializer typeSer, BeanProperty prop)
    parameters:
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    - id: prop
      type: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty._key
  id: _key
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: _key
  nameWithType: MapProperty._key
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty._key
  type: Field
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: protected Object _key
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty._keySerializer
  id: _keySerializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: _keySerializer
  nameWithType: MapProperty._keySerializer
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty._keySerializer
  type: Field
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: protected JsonSerializer<Object> _keySerializer
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty._property
  id: _property
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: _property
  nameWithType: MapProperty._property
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty._property
  type: Field
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: protected final BeanProperty _property
    return:
      type: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty._typeSerializer
  id: _typeSerializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: _typeSerializer
  nameWithType: MapProperty._typeSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty._typeSerializer
  type: Field
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: protected final TypeSerializer _typeSerializer
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty._value
  id: _value
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: _value
  nameWithType: MapProperty._value
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty._value
  type: Field
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: protected Object _value
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty._valueSerializer
  id: _valueSerializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: _valueSerializer
  nameWithType: MapProperty._valueSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty._valueSerializer
  type: Field
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: protected JsonSerializer<Object> _valueSerializer
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  id: depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor objectVisitor, SerializerProvider provider)
  nameWithType: MapProperty.depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor objectVisitor, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor objectVisitor, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.depositSchemaProperty*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  summary: Traversal method used for things like JSON Schema generation, or POJO introspection.
  syntax:
    content: public void depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor objectVisitor, SerializerProvider provider)
    parameters:
    - id: objectVisitor
      type: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
  id: depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: depositSchemaProperty(ObjectNode propertiesNode, SerializerProvider provider)
  nameWithType: MapProperty.depositSchemaProperty(ObjectNode propertiesNode, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.depositSchemaProperty(ObjectNode propertiesNode, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.depositSchemaProperty*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  summary: Legacy method called for JSON Schema generation; should not be called by new code
  syntax:
    content: public void depositSchemaProperty(ObjectNode propertiesNode, SerializerProvider provider)
    parameters:
    - id: propertiesNode
      type: com.fasterxml.jackson.databind.node.ObjectNode
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.getFullName()
  id: getFullName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: getFullName()
  nameWithType: MapProperty.getFullName()
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.getFullName()
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.getFullName*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: public PropertyName getFullName()
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.getMember()
  id: getMember()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: getMember()
  nameWithType: MapProperty.getMember()
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.getMember()
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.getMember*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: public AnnotatedMember getMember()
    return:
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.getName()
  id: getName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: getName()
  nameWithType: MapProperty.getName()
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.getName()
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.getName*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: public String getName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.getType()
  id: getType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: getType()
  nameWithType: MapProperty.getType()
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.getType()
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.getType*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: public JavaType getType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.getValue()
  id: getValue()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: getValue()
  nameWithType: MapProperty.getValue()
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.getValue()
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.getValue*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: public Object getValue()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.getWrapperName()
  id: getWrapperName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: getWrapperName()
  nameWithType: MapProperty.getWrapperName()
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.getWrapperName()
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.getWrapperName*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: public PropertyName getWrapperName()
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.reset(java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  id: reset(java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: reset(Object key, JsonSerializer<Object> keySer, JsonSerializer<Object> valueSer)
  nameWithType: MapProperty.reset(Object key, JsonSerializer<Object> keySer, JsonSerializer<Object> valueSer)
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.reset(Object key, JsonSerializer<Object> keySer, JsonSerializer<Object> valueSer)
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.reset*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: public void reset(Object key, JsonSerializer<Object> keySer, JsonSerializer<Object> valueSer)
    parameters:
    - id: key
      type: java.lang.Object
    - id: keySer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    - id: valueSer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.reset(java.lang.Object,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  id: reset(java.lang.Object,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: reset(Object key, Object value, JsonSerializer<Object> keySer, JsonSerializer<Object> valueSer)
  nameWithType: MapProperty.reset(Object key, Object value, JsonSerializer<Object> keySer, JsonSerializer<Object> valueSer)
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.reset(Object key, Object value, JsonSerializer<Object> keySer, JsonSerializer<Object> valueSer)
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.reset*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  summary: Initialization method that needs to be called before passing property to filter.
  syntax:
    content: public void reset(Object key, Object value, JsonSerializer<Object> keySer, JsonSerializer<Object> valueSer)
    parameters:
    - id: key
      type: java.lang.Object
    - id: value
      type: java.lang.Object
    - id: keySer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    - id: valueSer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: serializeAsElement(Object map, JsonGenerator gen, SerializerProvider provider)
  nameWithType: MapProperty.serializeAsElement(Object map, JsonGenerator gen, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsElement(Object map, JsonGenerator gen, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsElement*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  summary: >-
    Serialization method called when output is to be done as an array, that is, not using property names. This is needed when serializing container (<xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref>, array) types, or POJOs using `tabular` ("as array") output format.


    Note that this mode of operation is independent of underlying data format; so it is typically NOT called for fully tabular formats such as CSV, where logical output is still as form of POJOs.
  syntax:
    content: public void serializeAsElement(Object map, JsonGenerator gen, SerializerProvider provider)
    parameters:
    - id: map
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.lang.Exception
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: serializeAsField(Object map, JsonGenerator gen, SerializerProvider provider)
  nameWithType: MapProperty.serializeAsField(Object map, JsonGenerator gen, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsField(Object map, JsonGenerator gen, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsField*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  summary: The main serialization method called by filter when property is to be written normally.
  syntax:
    content: public void serializeAsField(Object map, JsonGenerator gen, SerializerProvider provider)
    parameters:
    - id: map
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: serializeAsOmittedField(Object map, JsonGenerator gen, SerializerProvider provider)
  nameWithType: MapProperty.serializeAsOmittedField(Object map, JsonGenerator gen, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsOmittedField(Object map, JsonGenerator gen, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsOmittedField*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  summary: Serialization method that filter needs to call in cases where property is to be filtered, but the underlying data format requires a placeholder of some kind. This is usually the case for tabular (positional) data formats such as CSV.
  syntax:
    content: public void serializeAsOmittedField(Object map, JsonGenerator gen, SerializerProvider provider)
    parameters:
    - id: map
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.lang.Exception
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: serializeAsPlaceholder(Object value, JsonGenerator gen, SerializerProvider provider)
  nameWithType: MapProperty.serializeAsPlaceholder(Object value, JsonGenerator gen, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsPlaceholder(Object value, JsonGenerator gen, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsPlaceholder*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  summary: Serialization method called when doing tabular (positional) output from databind, but then value is to be omitted. This requires output of a placeholder value of some sort; often similar to <xref uid="com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsOmittedField*" data-throw-if-not-resolved="false">#serializeAsOmittedField</xref>.
  syntax:
    content: public void serializeAsPlaceholder(Object value, JsonGenerator gen, SerializerProvider provider)
    parameters:
    - id: value
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.lang.Exception
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.setValue(java.lang.Object)
  id: setValue(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.MapProperty
  langs:
  - java
  name: setValue(Object v)
  nameWithType: MapProperty.setValue(Object v)
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.setValue(Object v)
  overload: com.fasterxml.jackson.databind.ser.std.MapProperty.setValue*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: public void setValue(Object v)
    parameters:
    - id: v
      type: java.lang.Object
references:
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.BeanProperty
  name: BeanProperty
  nameWithType: BeanProperty
  fullName: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.MapProperty*
  name: MapProperty
  nameWithType: MapProperty.MapProperty
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.MapProperty
  package: com.fasterxml.jackson.databind.ser.std
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.reset*
  name: reset
  nameWithType: MapProperty.reset
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.reset
  package: com.fasterxml.jackson.databind.ser.std
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.getName*
  name: getName
  nameWithType: MapProperty.getName
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.getName
  package: com.fasterxml.jackson.databind.ser.std
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.getValue*
  name: getValue
  nameWithType: MapProperty.getValue
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.getValue
  package: com.fasterxml.jackson.databind.ser.std
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.setValue*
  name: setValue
  nameWithType: MapProperty.setValue
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.setValue
  package: com.fasterxml.jackson.databind.ser.std
- uid: com.fasterxml.jackson.databind.PropertyName
  name: PropertyName
  nameWithType: PropertyName
  fullName: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.getFullName*
  name: getFullName
  nameWithType: MapProperty.getFullName
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.getFullName
  package: com.fasterxml.jackson.databind.ser.std
- uid: java.lang.Class<A>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: A
    name: A
    fullName: A
  - name: '>'
    fullName: '>'
- uid: A
  spec.java:
  - uid: A
    name: A
    fullName: A
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.getAnnotation*
  name: <A>getAnnotation
  nameWithType: MapProperty.<A>getAnnotation
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.<A>getAnnotation
  package: com.fasterxml.jackson.databind.ser.std
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.getContextAnnotation*
  name: <A>getContextAnnotation
  nameWithType: MapProperty.<A>getContextAnnotation
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.<A>getContextAnnotation
  package: com.fasterxml.jackson.databind.ser.std
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsField*
  name: serializeAsField
  nameWithType: MapProperty.serializeAsField
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsField
  package: com.fasterxml.jackson.databind.ser.std
- uid: java.lang.Exception
  spec.java:
  - uid: java.lang.Exception
    name: Exception
    fullName: java.lang.Exception
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsOmittedField*
  name: serializeAsOmittedField
  nameWithType: MapProperty.serializeAsOmittedField
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsOmittedField
  package: com.fasterxml.jackson.databind.ser.std
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsElement*
  name: serializeAsElement
  nameWithType: MapProperty.serializeAsElement
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsElement
  package: com.fasterxml.jackson.databind.ser.std
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsPlaceholder*
  name: serializeAsPlaceholder
  nameWithType: MapProperty.serializeAsPlaceholder
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsPlaceholder
  package: com.fasterxml.jackson.databind.ser.std
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor
  name: jsonFormatVisitors.JsonObjectFormatVisitor
  nameWithType: jsonFormatVisitors.JsonObjectFormatVisitor
  fullName: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.depositSchemaProperty*
  name: depositSchemaProperty
  nameWithType: MapProperty.depositSchemaProperty
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.depositSchemaProperty
  package: com.fasterxml.jackson.databind.ser.std
- uid: com.fasterxml.jackson.databind.node.ObjectNode
  name: ObjectNode
  nameWithType: ObjectNode
  fullName: com.fasterxml.jackson.databind.node.ObjectNode
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.getType*
  name: getType
  nameWithType: MapProperty.getType
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.getType
  package: com.fasterxml.jackson.databind.ser.std
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.getWrapperName*
  name: getWrapperName
  nameWithType: MapProperty.getWrapperName
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.getWrapperName
  package: com.fasterxml.jackson.databind.ser.std
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedMember
  name: AnnotatedMember
  nameWithType: AnnotatedMember
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedMember
- uid: com.fasterxml.jackson.databind.ser.std.MapProperty.getMember*
  name: getMember
  nameWithType: MapProperty.getMember
  fullName: com.fasterxml.jackson.databind.ser.std.MapProperty.getMember
  package: com.fasterxml.jackson.databind.ser.std
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter
  name: PropertyWriter
  nameWithType: PropertyWriter
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: PropertyWriter.serializeAsElement(Object,JsonGenerator,SerializerProvider)
  nameWithType: PropertyWriter.serializeAsElement(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: PropertyWriter.serializeAsPlaceholder(Object,JsonGenerator,SerializerProvider)
  nameWithType: PropertyWriter.serializeAsPlaceholder(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>findAnnotation(java.lang.Class<A>)
  name: PropertyWriter.<A>findAnnotation(Class<A>)
  nameWithType: PropertyWriter.<A>findAnnotation(Class<A>)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>findAnnotation(java.lang.Class<A>)
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: PropertyWriter.serializeAsField(Object,JsonGenerator,SerializerProvider)
  nameWithType: PropertyWriter.serializeAsField(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isVirtual()
  name: ConcreteBeanPropertyBase.isVirtual()
  nameWithType: ConcreteBeanPropertyBase.isVirtual()
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isVirtual()
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getContextAnnotation(java.lang.Class<A>)
  name: PropertyWriter.<A>getContextAnnotation(Class<A>)
  nameWithType: PropertyWriter.<A>getContextAnnotation(Class<A>)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getContextAnnotation(java.lang.Class<A>)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  name: ConcreteBeanPropertyBase.findPropertyInclusion(MapperConfig<?>,Class<?>)
  nameWithType: ConcreteBeanPropertyBase.findPropertyInclusion(MapperConfig<?>,Class<?>)
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: PropertyWriter.serializeAsOmittedField(Object,JsonGenerator,SerializerProvider)
  nameWithType: PropertyWriter.serializeAsOmittedField(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.getName()
  name: PropertyWriter.getName()
  nameWithType: PropertyWriter.getName()
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.getName()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.getMetadata()
  name: ConcreteBeanPropertyBase.getMetadata()
  nameWithType: ConcreteBeanPropertyBase.getMetadata()
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.getMetadata()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isRequired()
  name: ConcreteBeanPropertyBase.isRequired()
  nameWithType: ConcreteBeanPropertyBase.isRequired()
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isRequired()
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  name: PropertyWriter.depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor,SerializerProvider)
  nameWithType: PropertyWriter.depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  name: ConcreteBeanPropertyBase.findPropertyFormat(MapperConfig<?>,Class<?>)
  nameWithType: ConcreteBeanPropertyBase.findPropertyFormat(MapperConfig<?>,Class<?>)
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  name: ConcreteBeanPropertyBase.findAliases(MapperConfig<?>)
  nameWithType: ConcreteBeanPropertyBase.findAliases(MapperConfig<?>)
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector)
  name: ConcreteBeanPropertyBase.findFormatOverrides(AnnotationIntrospector)
  nameWithType: ConcreteBeanPropertyBase.findFormatOverrides(AnnotationIntrospector)
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector)
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getAnnotation(java.lang.Class<A>)
  name: PropertyWriter.<A>getAnnotation(Class<A>)
  nameWithType: PropertyWriter.<A>getAnnotation(Class<A>)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>getAnnotation(java.lang.Class<A>)
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.getFullName()
  name: PropertyWriter.getFullName()
  nameWithType: PropertyWriter.getFullName()
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.getFullName()
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
  name: PropertyWriter.depositSchemaProperty(ObjectNode,SerializerProvider)
  nameWithType: PropertyWriter.depositSchemaProperty(ObjectNode,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.
  name: PropertyWriter.
  nameWithType: PropertyWriter.
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.
- uid: A>findAnnotation(java.lang.Class
  name: A>findAnnotation(Class
  nameWithType: A>findAnnotation(Class
  fullName: A>findAnnotation(java.lang.Class
- uid: A>)
  name: A>)
  nameWithType: A>)
  fullName: A>)
- uid: A>getContextAnnotation(java.lang.Class
  name: A>getContextAnnotation(Class
  nameWithType: A>getContextAnnotation(Class
  fullName: A>getContextAnnotation(java.lang.Class
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: ConcreteBeanPropertyBase.findPropertyInclusion(MapperConfig
  nameWithType: ConcreteBeanPropertyBase.findPropertyInclusion(MapperConfig
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: ?>,java.lang.Class
  name: ?>,Class
  nameWithType: ?>,Class
  fullName: ?>,java.lang.Class
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: ConcreteBeanPropertyBase.findPropertyFormat(MapperConfig
  nameWithType: ConcreteBeanPropertyBase.findPropertyFormat(MapperConfig
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: ConcreteBeanPropertyBase.findAliases(MapperConfig
  nameWithType: ConcreteBeanPropertyBase.findAliases(MapperConfig
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: A>getAnnotation(java.lang.Class
  name: A>getAnnotation(Class
  nameWithType: A>getAnnotation(Class
  fullName: A>getAnnotation(java.lang.Class
