### YamlMime:JavaType
uid: "com.azure.ai.projects.RedTeamsAsyncClient"
fullName: "com.azure.ai.projects.RedTeamsAsyncClient"
name: "RedTeamsAsyncClient"
nameWithType: "RedTeamsAsyncClient"
summary: "Initializes a new instance of the asynchronous AIProject<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **RedTeamsAsyncClient**"
methods:
- uid: "com.azure.ai.projects.RedTeamsAsyncClient.createRedTeam(com.azure.ai.projects.models.RedTeam)"
  fullName: "com.azure.ai.projects.RedTeamsAsyncClient.createRedTeam(RedTeam redTeam)"
  name: "createRedTeam(RedTeam redTeam)"
  nameWithType: "RedTeamsAsyncClient.createRedTeam(RedTeam redTeam)"
  summary: "Creates a redteam run."
  parameters:
  - description: "Redteam to be run."
    name: "redTeam"
    type: "<xref href=\"com.azure.ai.projects.models.RedTeam?alt=com.azure.ai.projects.models.RedTeam&text=RedTeam\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<RedTeam> createRedTeam(RedTeam redTeam)"
  desc: "Creates a redteam run."
  returns:
    description: "red team details on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.projects.models.RedTeam?alt=com.azure.ai.projects.models.RedTeam&text=RedTeam\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.projects.RedTeamsAsyncClient.createRedTeamWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.projects.RedTeamsAsyncClient.createRedTeamWithResponse(BinaryData redTeam, RequestOptions requestOptions)"
  name: "createRedTeamWithResponse(BinaryData redTeam, RequestOptions requestOptions)"
  nameWithType: "RedTeamsAsyncClient.createRedTeamWithResponse(BinaryData redTeam, RequestOptions requestOptions)"
  summary: "Creates a redteam run."
  parameters:
  - description: "Redteam to be run."
    name: "redTeam"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> createRedTeamWithResponse(BinaryData redTeam, RequestOptions requestOptions)"
  desc: "Creates a redteam run.\n\n**Request Body Schema**\n\n```java\n{\n     id: String (Required)\n     displayName: String (Optional)\n     numTurns: Integer (Optional)\n     attackStrategies (Optional): [\n         String(easy/moderate/difficult/ascii_art/ascii_smuggler/atbash/base64/binary/caesar/character_space/jailbreak/ansii_attack/character_swap/suffix_append/string_join/unicode_confusable/unicode_substitution/diacritic/flip/leetspeak/rot13/morse/url/baseline) (Optional)\n     ]\n     simulationOnly: Boolean (Optional)\n     riskCategories (Optional): [\n         String(HateUnfairness/Violence/Sexual/SelfHarm) (Optional)\n     ]\n     applicationScenario: String (Optional)\n     tags (Optional): {\n         String: String (Required)\n     }\n     properties (Optional): {\n         String: String (Required)\n     }\n     status: String (Optional)\n     target (Required): {\n         type: String (Required)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     displayName: String (Optional)\n     numTurns: Integer (Optional)\n     attackStrategies (Optional): [\n         String(easy/moderate/difficult/ascii_art/ascii_smuggler/atbash/base64/binary/caesar/character_space/jailbreak/ansii_attack/character_swap/suffix_append/string_join/unicode_confusable/unicode_substitution/diacritic/flip/leetspeak/rot13/morse/url/baseline) (Optional)\n     ]\n     simulationOnly: Boolean (Optional)\n     riskCategories (Optional): [\n         String(HateUnfairness/Violence/Sexual/SelfHarm) (Optional)\n     ]\n     applicationScenario: String (Optional)\n     tags (Optional): {\n         String: String (Required)\n     }\n     properties (Optional): {\n         String: String (Required)\n     }\n     status: String (Optional)\n     target (Required): {\n         type: String (Required)\n     }\n }\n```"
  returns:
    description: "red team details along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.projects.RedTeamsAsyncClient.getRedTeam(java.lang.String)"
  fullName: "com.azure.ai.projects.RedTeamsAsyncClient.getRedTeam(String name)"
  name: "getRedTeam(String name)"
  nameWithType: "RedTeamsAsyncClient.getRedTeam(String name)"
  summary: "Get a redteam by name."
  parameters:
  - description: "Identifier of the red team run."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<RedTeam> getRedTeam(String name)"
  desc: "Get a redteam by name."
  returns:
    description: "a redteam by name on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.projects.models.RedTeam?alt=com.azure.ai.projects.models.RedTeam&text=RedTeam\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.projects.RedTeamsAsyncClient.getRedTeamWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.projects.RedTeamsAsyncClient.getRedTeamWithResponse(String name, RequestOptions requestOptions)"
  name: "getRedTeamWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "RedTeamsAsyncClient.getRedTeamWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get a redteam by name."
  parameters:
  - description: "Identifier of the red team run."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getRedTeamWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get a redteam by name.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     displayName: String (Optional)\n     numTurns: Integer (Optional)\n     attackStrategies (Optional): [\n         String(easy/moderate/difficult/ascii_art/ascii_smuggler/atbash/base64/binary/caesar/character_space/jailbreak/ansii_attack/character_swap/suffix_append/string_join/unicode_confusable/unicode_substitution/diacritic/flip/leetspeak/rot13/morse/url/baseline) (Optional)\n     ]\n     simulationOnly: Boolean (Optional)\n     riskCategories (Optional): [\n         String(HateUnfairness/Violence/Sexual/SelfHarm) (Optional)\n     ]\n     applicationScenario: String (Optional)\n     tags (Optional): {\n         String: String (Required)\n     }\n     properties (Optional): {\n         String: String (Required)\n     }\n     status: String (Optional)\n     target (Required): {\n         type: String (Required)\n     }\n }\n```"
  returns:
    description: "a redteam by name along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.projects.RedTeamsAsyncClient.listRedTeams()"
  fullName: "com.azure.ai.projects.RedTeamsAsyncClient.listRedTeams()"
  name: "listRedTeams()"
  nameWithType: "RedTeamsAsyncClient.listRedTeams()"
  summary: "List a redteam by name."
  syntax: "public PagedFlux<RedTeam> listRedTeams()"
  desc: "List a redteam by name."
  returns:
    description: "paged collection of RedTeam items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.projects.models.RedTeam?alt=com.azure.ai.projects.models.RedTeam&text=RedTeam\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.projects.RedTeamsAsyncClient.listRedTeams(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.projects.RedTeamsAsyncClient.listRedTeams(RequestOptions requestOptions)"
  name: "listRedTeams(RequestOptions requestOptions)"
  nameWithType: "RedTeamsAsyncClient.listRedTeams(RequestOptions requestOptions)"
  summary: "List a redteam by name."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listRedTeams(RequestOptions requestOptions)"
  desc: "List a redteam by name.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     displayName: String (Optional)\n     numTurns: Integer (Optional)\n     attackStrategies (Optional): [\n         String(easy/moderate/difficult/ascii_art/ascii_smuggler/atbash/base64/binary/caesar/character_space/jailbreak/ansii_attack/character_swap/suffix_append/string_join/unicode_confusable/unicode_substitution/diacritic/flip/leetspeak/rot13/morse/url/baseline) (Optional)\n     ]\n     simulationOnly: Boolean (Optional)\n     riskCategories (Optional): [\n         String(HateUnfairness/Violence/Sexual/SelfHarm) (Optional)\n     ]\n     applicationScenario: String (Optional)\n     tags (Optional): {\n         String: String (Required)\n     }\n     properties (Optional): {\n         String: String (Required)\n     }\n     status: String (Optional)\n     target (Required): {\n         type: String (Required)\n     }\n }\n```"
  returns:
    description: "paged collection of RedTeam items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous AIProjectClient type."
metadata: {}
package: "com.azure.ai.projects"
artifact: com.azure:azure-ai-projects:1.0.0-beta.1
