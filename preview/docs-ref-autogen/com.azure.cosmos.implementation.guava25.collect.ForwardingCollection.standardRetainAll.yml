### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardRetainAll"
name: "standardRetainAll"
nameWithType: "ForwardingCollection<E>.standardRetainAll"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>.standardRetainAll(Collection<?> collection)"
  name: "standardRetainAll(Collection<?> collection)"
  nameWithType: "ForwardingCollection<E>.standardRetainAll(Collection<?> collection)"
  summary: "A sensible definition of <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#retainAll\"></xref> in terms of <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#iterator\"></xref>, using the iterator's `remove` method. If you override <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#iterator\"></xref>, you may wish to override <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#retainAll\"></xref> to forward to this implementation."
  parameters:
  - name: "collection"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "protected boolean standardRetainAll(Collection<?> collection)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
