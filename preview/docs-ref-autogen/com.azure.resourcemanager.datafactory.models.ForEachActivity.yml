### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.ForEachActivity"
fullName: "com.azure.resourcemanager.datafactory.models.ForEachActivity"
name: "ForEachActivity"
nameWithType: "ForEachActivity"
summary: "This activity is used for iterating over a collection and execute given activities."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.Activity?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.ControlActivity?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.Activity.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.Activity.dependsOn()"
- "com.azure.resourcemanager.datafactory.models.Activity.description()"
- "com.azure.resourcemanager.datafactory.models.Activity.name()"
- "com.azure.resourcemanager.datafactory.models.Activity.userProperties()"
- "com.azure.resourcemanager.datafactory.models.Activity.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.ControlActivity.validate()"
- "com.azure.resourcemanager.datafactory.models.ControlActivity.withDependsOn(java.util.List<com.azure.resourcemanager.datafactory.models.ActivityDependency>)"
- "com.azure.resourcemanager.datafactory.models.ControlActivity.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.ControlActivity.withName(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.ControlActivity.withUserProperties(java.util.List<com.azure.resourcemanager.datafactory.models.UserProperty>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ForEachActivity extends ControlActivity"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.ForEachActivity.ForEachActivity()"
  fullName: "com.azure.resourcemanager.datafactory.models.ForEachActivity.ForEachActivity()"
  name: "ForEachActivity()"
  nameWithType: "ForEachActivity.ForEachActivity()"
  syntax: "public ForEachActivity()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.ForEachActivity.activities()"
  fullName: "com.azure.resourcemanager.datafactory.models.ForEachActivity.activities()"
  name: "activities()"
  nameWithType: "ForEachActivity.activities()"
  summary: "Get the activities property: List of activities to execute ."
  syntax: "public List<Activity> activities()"
  desc: "Get the activities property: List of activities to execute ."
  returns:
    description: "the activities value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Activity?alt=com.azure.resourcemanager.datafactory.models.Activity&text=Activity\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.ForEachActivity.batchCount()"
  fullName: "com.azure.resourcemanager.datafactory.models.ForEachActivity.batchCount()"
  name: "batchCount()"
  nameWithType: "ForEachActivity.batchCount()"
  summary: "Get the batch<wbr>Count property: Batch count to be used for controlling the number of parallel execution (when is<wbr>Sequential is set to false)."
  syntax: "public Integer batchCount()"
  desc: "Get the batchCount property: Batch count to be used for controlling the number of parallel execution (when isSequential is set to false)."
  returns:
    description: "the batchCount value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ForEachActivity.isSequential()"
  fullName: "com.azure.resourcemanager.datafactory.models.ForEachActivity.isSequential()"
  name: "isSequential()"
  nameWithType: "ForEachActivity.isSequential()"
  summary: "Get the is<wbr>Sequential property: Should the loop be executed in sequence or in parallel (max 50)."
  syntax: "public Boolean isSequential()"
  desc: "Get the isSequential property: Should the loop be executed in sequence or in parallel (max 50)."
  returns:
    description: "the isSequential value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ForEachActivity.items()"
  fullName: "com.azure.resourcemanager.datafactory.models.ForEachActivity.items()"
  name: "items()"
  nameWithType: "ForEachActivity.items()"
  summary: "Get the items property: Collection to iterate."
  syntax: "public Expression items()"
  desc: "Get the items property: Collection to iterate."
  returns:
    description: "the items value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Expression?alt=com.azure.resourcemanager.datafactory.models.Expression&text=Expression\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ForEachActivity.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.ForEachActivity.validate()"
  name: "validate()"
  nameWithType: "ForEachActivity.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.ControlActivity.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.ForEachActivity.withActivities(java.util.List<com.azure.resourcemanager.datafactory.models.Activity>)"
  fullName: "com.azure.resourcemanager.datafactory.models.ForEachActivity.withActivities(List<Activity> activities)"
  name: "withActivities(List<Activity> activities)"
  nameWithType: "ForEachActivity.withActivities(List<Activity> activities)"
  summary: "Set the activities property: List of activities to execute ."
  parameters:
  - description: "the activities value to set."
    name: "activities"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Activity?alt=com.azure.resourcemanager.datafactory.models.Activity&text=Activity\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ForEachActivity withActivities(List<Activity> activities)"
  desc: "Set the activities property: List of activities to execute ."
  returns:
    description: "the ForEachActivity object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ForEachActivity?alt=com.azure.resourcemanager.datafactory.models.ForEachActivity&text=ForEachActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ForEachActivity.withBatchCount(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.datafactory.models.ForEachActivity.withBatchCount(Integer batchCount)"
  name: "withBatchCount(Integer batchCount)"
  nameWithType: "ForEachActivity.withBatchCount(Integer batchCount)"
  summary: "Set the batch<wbr>Count property: Batch count to be used for controlling the number of parallel execution (when is<wbr>Sequential is set to false)."
  parameters:
  - description: "the batchCount value to set."
    name: "batchCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ForEachActivity withBatchCount(Integer batchCount)"
  desc: "Set the batchCount property: Batch count to be used for controlling the number of parallel execution (when isSequential is set to false)."
  returns:
    description: "the ForEachActivity object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ForEachActivity?alt=com.azure.resourcemanager.datafactory.models.ForEachActivity&text=ForEachActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ForEachActivity.withDependsOn(java.util.List<com.azure.resourcemanager.datafactory.models.ActivityDependency>)"
  fullName: "com.azure.resourcemanager.datafactory.models.ForEachActivity.withDependsOn(List<ActivityDependency> dependsOn)"
  name: "withDependsOn(List<ActivityDependency> dependsOn)"
  nameWithType: "ForEachActivity.withDependsOn(List<ActivityDependency> dependsOn)"
  summary: "Set the depends<wbr>On property: Activity depends on condition."
  overridden: "com.azure.resourcemanager.datafactory.models.ControlActivity.withDependsOn(java.util.List<com.azure.resourcemanager.datafactory.models.ActivityDependency>)"
  parameters:
  - name: "dependsOn"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.ActivityDependency?alt=com.azure.resourcemanager.datafactory.models.ActivityDependency&text=ActivityDependency\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ForEachActivity withDependsOn(List<ActivityDependency> dependsOn)"
  desc: "Set the dependsOn property: Activity depends on condition."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ForEachActivity?alt=com.azure.resourcemanager.datafactory.models.ForEachActivity&text=ForEachActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ForEachActivity.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.ForEachActivity.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "ForEachActivity.withDescription(String description)"
  summary: "Set the description property: Activity description."
  overridden: "com.azure.resourcemanager.datafactory.models.ControlActivity.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ForEachActivity withDescription(String description)"
  desc: "Set the description property: Activity description."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ForEachActivity?alt=com.azure.resourcemanager.datafactory.models.ForEachActivity&text=ForEachActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ForEachActivity.withIsSequential(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.datafactory.models.ForEachActivity.withIsSequential(Boolean isSequential)"
  name: "withIsSequential(Boolean isSequential)"
  nameWithType: "ForEachActivity.withIsSequential(Boolean isSequential)"
  summary: "Set the is<wbr>Sequential property: Should the loop be executed in sequence or in parallel (max 50)."
  parameters:
  - description: "the isSequential value to set."
    name: "isSequential"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ForEachActivity withIsSequential(Boolean isSequential)"
  desc: "Set the isSequential property: Should the loop be executed in sequence or in parallel (max 50)."
  returns:
    description: "the ForEachActivity object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ForEachActivity?alt=com.azure.resourcemanager.datafactory.models.ForEachActivity&text=ForEachActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ForEachActivity.withItems(com.azure.resourcemanager.datafactory.models.Expression)"
  fullName: "com.azure.resourcemanager.datafactory.models.ForEachActivity.withItems(Expression items)"
  name: "withItems(Expression items)"
  nameWithType: "ForEachActivity.withItems(Expression items)"
  summary: "Set the items property: Collection to iterate."
  parameters:
  - description: "the items value to set."
    name: "items"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Expression?alt=com.azure.resourcemanager.datafactory.models.Expression&text=Expression\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ForEachActivity withItems(Expression items)"
  desc: "Set the items property: Collection to iterate."
  returns:
    description: "the ForEachActivity object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ForEachActivity?alt=com.azure.resourcemanager.datafactory.models.ForEachActivity&text=ForEachActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ForEachActivity.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.ForEachActivity.withName(String name)"
  name: "withName(String name)"
  nameWithType: "ForEachActivity.withName(String name)"
  summary: "Set the name property: Activity name."
  overridden: "com.azure.resourcemanager.datafactory.models.ControlActivity.withName(java.lang.String)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ForEachActivity withName(String name)"
  desc: "Set the name property: Activity name."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ForEachActivity?alt=com.azure.resourcemanager.datafactory.models.ForEachActivity&text=ForEachActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ForEachActivity.withUserProperties(java.util.List<com.azure.resourcemanager.datafactory.models.UserProperty>)"
  fullName: "com.azure.resourcemanager.datafactory.models.ForEachActivity.withUserProperties(List<UserProperty> userProperties)"
  name: "withUserProperties(List<UserProperty> userProperties)"
  nameWithType: "ForEachActivity.withUserProperties(List<UserProperty> userProperties)"
  summary: "Set the user<wbr>Properties property: Activity user properties."
  overridden: "com.azure.resourcemanager.datafactory.models.ControlActivity.withUserProperties(java.util.List<com.azure.resourcemanager.datafactory.models.UserProperty>)"
  parameters:
  - name: "userProperties"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.UserProperty?alt=com.azure.resourcemanager.datafactory.models.UserProperty&text=UserProperty\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ForEachActivity withUserProperties(List<UserProperty> userProperties)"
  desc: "Set the userProperties property: Activity user properties."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ForEachActivity?alt=com.azure.resourcemanager.datafactory.models.ForEachActivity&text=ForEachActivity\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "This activity is used for iterating over a collection and execute given activities."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
