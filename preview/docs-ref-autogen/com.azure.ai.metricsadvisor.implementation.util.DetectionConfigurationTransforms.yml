### YamlMime:JavaType
uid: "com.azure.ai.metricsadvisor.implementation.util.DetectionConfigurationTransforms"
fullName: "com.azure.ai.metricsadvisor.implementation.util.DetectionConfigurationTransforms"
name: "DetectionConfigurationTransforms"
nameWithType: "DetectionConfigurationTransforms"
summary: "Expose transformation methods to transform <xref uid=\"com.azure.ai.metricsadvisor.models.AnomalyDetectionConfiguration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.ai.metricsadvisor.models.AnomalyDetectionConfiguration\"></xref> model to REST API wire model and vice-versa."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DetectionConfigurationTransforms"
constructors:
- "com.azure.ai.metricsadvisor.implementation.util.DetectionConfigurationTransforms.DetectionConfigurationTransforms()"
methods:
- "com.azure.ai.metricsadvisor.implementation.util.DetectionConfigurationTransforms.fromInner(com.azure.ai.metricsadvisor.implementation.models.AnomalyDetectionConfiguration)"
- "com.azure.ai.metricsadvisor.implementation.util.DetectionConfigurationTransforms.toInnerForCreate(com.azure.core.util.logging.ClientLogger,java.lang.String,com.azure.ai.metricsadvisor.models.AnomalyDetectionConfiguration)"
- "com.azure.ai.metricsadvisor.implementation.util.DetectionConfigurationTransforms.toInnerForUpdate(com.azure.core.util.logging.ClientLogger,com.azure.ai.metricsadvisor.models.AnomalyDetectionConfiguration)"
type: "class"
metadata: {}
package: "com.azure.ai.metricsadvisor.implementation.util"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
