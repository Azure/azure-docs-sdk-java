### YamlMime:JavaType
uid: "com.azure.resourcemanager.servicefabric.models.ServiceTypeHealthPolicy"
fullName: "com.azure.resourcemanager.servicefabric.models.ServiceTypeHealthPolicy"
name: "ServiceTypeHealthPolicy"
nameWithType: "ServiceTypeHealthPolicy"
summary: "Represents the health policy used to evaluate the health of services belonging to a service type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ServiceTypeHealthPolicy"
constructors:
- uid: "com.azure.resourcemanager.servicefabric.models.ServiceTypeHealthPolicy.ServiceTypeHealthPolicy()"
  fullName: "com.azure.resourcemanager.servicefabric.models.ServiceTypeHealthPolicy.ServiceTypeHealthPolicy()"
  name: "ServiceTypeHealthPolicy()"
  nameWithType: "ServiceTypeHealthPolicy.ServiceTypeHealthPolicy()"
  syntax: "public ServiceTypeHealthPolicy()"
methods:
- uid: "com.azure.resourcemanager.servicefabric.models.ServiceTypeHealthPolicy.maxPercentUnhealthyServices()"
  fullName: "com.azure.resourcemanager.servicefabric.models.ServiceTypeHealthPolicy.maxPercentUnhealthyServices()"
  name: "maxPercentUnhealthyServices()"
  nameWithType: "ServiceTypeHealthPolicy.maxPercentUnhealthyServices()"
  summary: "Get the max<wbr>Percent<wbr>Unhealthy<wbr>Services property: The maximum percentage of services allowed to be unhealthy before your application is considered in error."
  syntax: "public Integer maxPercentUnhealthyServices()"
  desc: "Get the maxPercentUnhealthyServices property: The maximum percentage of services allowed to be unhealthy before your application is considered in error."
  returns:
    description: "the maxPercentUnhealthyServices value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.ServiceTypeHealthPolicy.validate()"
  fullName: "com.azure.resourcemanager.servicefabric.models.ServiceTypeHealthPolicy.validate()"
  name: "validate()"
  nameWithType: "ServiceTypeHealthPolicy.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.servicefabric.models.ServiceTypeHealthPolicy.withMaxPercentUnhealthyServices(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.servicefabric.models.ServiceTypeHealthPolicy.withMaxPercentUnhealthyServices(Integer maxPercentUnhealthyServices)"
  name: "withMaxPercentUnhealthyServices(Integer maxPercentUnhealthyServices)"
  nameWithType: "ServiceTypeHealthPolicy.withMaxPercentUnhealthyServices(Integer maxPercentUnhealthyServices)"
  summary: "Set the max<wbr>Percent<wbr>Unhealthy<wbr>Services property: The maximum percentage of services allowed to be unhealthy before your application is considered in error."
  parameters:
  - description: "the maxPercentUnhealthyServices value to set."
    name: "maxPercentUnhealthyServices"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceTypeHealthPolicy withMaxPercentUnhealthyServices(Integer maxPercentUnhealthyServices)"
  desc: "Set the maxPercentUnhealthyServices property: The maximum percentage of services allowed to be unhealthy before your application is considered in error."
  returns:
    description: "the ServiceTypeHealthPolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.ServiceTypeHealthPolicy?alt=com.azure.resourcemanager.servicefabric.models.ServiceTypeHealthPolicy&text=ServiceTypeHealthPolicy\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents the health policy used to evaluate the health of services belonging to a service type."
metadata: {}
package: "com.azure.resourcemanager.servicefabric.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicefabric:1.0.0-beta.2
