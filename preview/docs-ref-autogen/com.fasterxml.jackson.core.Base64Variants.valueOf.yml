### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.Base64Variants.valueOf*"
fullName: "com.fasterxml.jackson.core.Base64Variants.valueOf"
name: "valueOf"
nameWithType: "Base64Variants.valueOf"
members:
- uid: "com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)"
  fullName: "com.fasterxml.jackson.core.Base64Variants.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "Base64Variants.valueOf(String name)"
  summary: "Lookup method for finding one of standard variants by name. If name does not match any of standard variant names, a <xref uid=\"java.lang.IllegalArgumentException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IllegalArgumentException\"></xref> is thrown."
  parameters:
  - description: "Name of base64 variant to return"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Base64Variant valueOf(String name)"
  exceptions:
  - description: "if no standard variant with given name exists"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Standard base64 variant that matches given <code>name</code>"
    type: "<xref href=\"com.fasterxml.jackson.core.Base64Variant?alt=com.fasterxml.jackson.core.Base64Variant&text=Base64Variant\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.5
