### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager"
fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager"
name: "HttpsTransportManager"
nameWithType: "HttpsTransportManager"
summary: "Implementation of the transport manager for https."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class HttpsTransportManager implements IotHubTransportManager"
constructors:
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.HttpsTransportManager(com.microsoft.azure.sdk.iot.device.DeviceClientConfig)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.HttpsTransportManager(DeviceClientConfig config)"
  name: "HttpsTransportManager(DeviceClientConfig config)"
  nameWithType: "HttpsTransportManager.HttpsTransportManager(DeviceClientConfig config)"
  summary: "Constructor"
  parameters:
  - description: "is the set of device configurations."
    name: "config"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.DeviceClientConfig?alt=com.microsoft.azure.sdk.iot.device.DeviceClientConfig&text=DeviceClientConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpsTransportManager(DeviceClientConfig config)"
  exceptions:
  - description: "is the config is null."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Constructor"
methods:
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.close()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.close()"
  name: "close()"
  nameWithType: "HttpsTransportManager.close()"
  summary: "Close the connection destroying the Https<wbr>Iot<wbr>Hub<wbr>Connection instance."
  syntax: "public void close()"
  desc: "Close the connection destroying the HttpsIotHubConnection instance."
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.getFileUploadSasUri(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.getFileUploadSasUri(IotHubTransportMessage message)"
  name: "getFileUploadSasUri(IotHubTransportMessage message)"
  nameWithType: "HttpsTransportManager.getFileUploadSasUri(IotHubTransportMessage message)"
  parameters:
  - name: "message"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage&text=IotHubTransportMessage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResponseMessage getFileUploadSasUri(IotHubTransportMessage message)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.ResponseMessage?alt=com.microsoft.azure.sdk.iot.device.ResponseMessage&text=ResponseMessage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.invokeMethod(com.microsoft.azure.sdk.iot.device.edge.MethodRequest,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.invokeMethod(MethodRequest methodRequest, String deviceId, String moduleId)"
  name: "invokeMethod(MethodRequest methodRequest, String deviceId, String moduleId)"
  nameWithType: "HttpsTransportManager.invokeMethod(MethodRequest methodRequest, String deviceId, String moduleId)"
  summary: "Invoke a direct method to the provided uri"
  parameters:
  - description: "the method request to make"
    name: "methodRequest"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.edge.MethodRequest?alt=com.microsoft.azure.sdk.iot.device.edge.MethodRequest&text=MethodRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "the device id of the device the moduleId belongs to"
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the module id of the module to invoke the method on"
    name: "moduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MethodResult invokeMethod(MethodRequest methodRequest, String deviceId, String moduleId)"
  exceptions:
  - description: "if the IotHub cannot be reached"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the IotHub cannot be reached"
    type: "<xref href=\"java.net.URISyntaxException?alt=java.net.URISyntaxException&text=URISyntaxException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the IotHub cannot be reached"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.TransportException?alt=com.microsoft.azure.sdk.iot.device.exceptions.TransportException&text=TransportException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Invoke a direct method to the provided uri"
  returns:
    description: "the result of that request"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.edge.MethodResult?alt=com.microsoft.azure.sdk.iot.device.edge.MethodResult&text=MethodResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.open()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.open()"
  name: "open()"
  nameWithType: "HttpsTransportManager.open()"
  summary: "Opens the connection by creating a new instance of the Https<wbr>Iot<wbr>Hub<wbr>Connection."
  syntax: "public void open()"
  desc: "Opens the connection by creating a new instance of the HttpsIotHubConnection."
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.open(java.lang.String[])"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.open(String[] topics)"
  name: "open(String[] topics)"
  nameWithType: "HttpsTransportManager.open(String[] topics)"
  summary: "Opens the connection by creating a new instance of the Https<wbr>Iot<wbr>Hub<wbr>Connection."
  parameters:
  - description: "is a list of topics to signed in."
    name: "topics"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public void open(String[] topics)"
  desc: "Opens the connection by creating a new instance of the HttpsIotHubConnection. The provided topics have no effect for HTTPS protocol, and it is ignored."
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.receive()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.receive()"
  name: "receive()"
  nameWithType: "HttpsTransportManager.receive()"
  summary: "Pull the Iot<wbr>Hub looking for new message."
  syntax: "public Message receive()"
  exceptions:
  - description: "if the IotHub communication failed."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Pull the IotHub looking for new message."
  returns:
    description: "New message from the IotHub. It can be <code>null</code> is there is no new message to read."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.Message?alt=com.microsoft.azure.sdk.iot.device.Message&text=Message\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.send(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage,java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.send(IotHubTransportMessage message, Map<String,String> additionalHeaders)"
  name: "send(IotHubTransportMessage message, Map<String,String> additionalHeaders)"
  nameWithType: "HttpsTransportManager.send(IotHubTransportMessage message, Map<String,String> additionalHeaders)"
  summary: "This is a blocking send message."
  parameters:
  - description: "is the message to send."
    name: "message"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage&text=IotHubTransportMessage\" data-throw-if-not-resolved=\"False\" />"
  - name: "additionalHeaders"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ResponseMessage send(IotHubTransportMessage message, Map<String,String> additionalHeaders)"
  exceptions:
  - description: "if the IotHub communication failed."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the IotHub communication failed."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "This is a blocking send message. It send the provide message, wait for the IotHub answer, and return is in the ResponseMessage, which contains the status and the payload."
  returns:
    description: "the IotHub response with the status and payload."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.ResponseMessage?alt=com.microsoft.azure.sdk.iot.device.ResponseMessage&text=ResponseMessage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.sendFileUploadNotification(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager.sendFileUploadNotification(IotHubTransportMessage message)"
  name: "sendFileUploadNotification(IotHubTransportMessage message)"
  nameWithType: "HttpsTransportManager.sendFileUploadNotification(IotHubTransportMessage message)"
  parameters:
  - name: "message"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage&text=IotHubTransportMessage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResponseMessage sendFileUploadNotification(IotHubTransportMessage message)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.ResponseMessage?alt=com.microsoft.azure.sdk.iot.device.ResponseMessage&text=ResponseMessage\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Implementation of the transport manager for https."
implements:
- "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager&text=IotHubTransportManager\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.transport.https"
artifact: com.microsoft.azure.sdk.iot:iot-device-client-preview:1.2.0
