### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.caches.RxCollectionCache
  id: RxCollectionCache
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.caches
  children:
  - com.azure.cosmos.implementation.caches.RxCollectionCache.RxCollectionCache()
  - com.azure.cosmos.implementation.caches.RxCollectionCache.getByNameAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
  - com.azure.cosmos.implementation.caches.RxCollectionCache.getByRidAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
  - com.azure.cosmos.implementation.caches.RxCollectionCache.refresh(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
  - com.azure.cosmos.implementation.caches.RxCollectionCache.resolveCollectionAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  langs:
  - java
  name: RxCollectionCache
  nameWithType: RxCollectionCache
  fullName: com.azure.cosmos.implementation.caches.RxCollectionCache
  type: Class
  package: com.azure.cosmos.implementation.caches
  summary: While this class is public, but it is not part of our published public APIs. This is meant to be internally used only by our sdk.
  syntax:
    content: public abstract class RxCollectionCache
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.caches.RxCollectionCache.RxCollectionCache()
  id: RxCollectionCache()
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.caches.RxCollectionCache
  langs:
  - java
  name: RxCollectionCache()
  nameWithType: RxCollectionCache.RxCollectionCache()
  fullName: com.azure.cosmos.implementation.caches.RxCollectionCache.RxCollectionCache()
  overload: com.azure.cosmos.implementation.caches.RxCollectionCache.RxCollectionCache*
  type: Constructor
  package: com.azure.cosmos.implementation.caches
  syntax:
    content: protected RxCollectionCache()
- uid: com.azure.cosmos.implementation.caches.RxCollectionCache.getByNameAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
  id: getByNameAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.caches.RxCollectionCache
  langs:
  - java
  name: getByNameAsync(String resourceAddress, Map<String,Object> properties)
  nameWithType: RxCollectionCache.getByNameAsync(String resourceAddress, Map<String,Object> properties)
  fullName: com.azure.cosmos.implementation.caches.RxCollectionCache.getByNameAsync(String resourceAddress, Map<String,Object> properties)
  overload: com.azure.cosmos.implementation.caches.RxCollectionCache.getByNameAsync*
  type: Method
  package: com.azure.cosmos.implementation.caches
  syntax:
    content: protected abstract Mono<DocumentCollection> getByNameAsync(String resourceAddress, Map<String,Object> properties)
    parameters:
    - id: resourceAddress
      type: java.lang.String
    - id: properties
      type: java.util.Map<java.lang.String,java.lang.Object>
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.DocumentCollection>
- uid: com.azure.cosmos.implementation.caches.RxCollectionCache.getByRidAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
  id: getByRidAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.caches.RxCollectionCache
  langs:
  - java
  name: getByRidAsync(String collectionRid, Map<String,Object> properties)
  nameWithType: RxCollectionCache.getByRidAsync(String collectionRid, Map<String,Object> properties)
  fullName: com.azure.cosmos.implementation.caches.RxCollectionCache.getByRidAsync(String collectionRid, Map<String,Object> properties)
  overload: com.azure.cosmos.implementation.caches.RxCollectionCache.getByRidAsync*
  type: Method
  package: com.azure.cosmos.implementation.caches
  syntax:
    content: protected abstract Mono<DocumentCollection> getByRidAsync(String collectionRid, Map<String,Object> properties)
    parameters:
    - id: collectionRid
      type: java.lang.String
    - id: properties
      type: java.util.Map<java.lang.String,java.lang.Object>
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.DocumentCollection>
- uid: com.azure.cosmos.implementation.caches.RxCollectionCache.refresh(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
  id: refresh(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.caches.RxCollectionCache
  langs:
  - java
  name: refresh(String resourceAddress, Map<String,Object> properties)
  nameWithType: RxCollectionCache.refresh(String resourceAddress, Map<String,Object> properties)
  fullName: com.azure.cosmos.implementation.caches.RxCollectionCache.refresh(String resourceAddress, Map<String,Object> properties)
  overload: com.azure.cosmos.implementation.caches.RxCollectionCache.refresh*
  type: Method
  package: com.azure.cosmos.implementation.caches
  summary: This method is only used in retry policy as it doesn't have request handy.
  syntax:
    content: public void refresh(String resourceAddress, Map<String,Object> properties)
    parameters:
    - id: resourceAddress
      type: java.lang.String
    - id: properties
      type: java.util.Map<java.lang.String,java.lang.Object>
- uid: com.azure.cosmos.implementation.caches.RxCollectionCache.resolveCollectionAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  id: resolveCollectionAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.caches.RxCollectionCache
  langs:
  - java
  name: resolveCollectionAsync(RxDocumentServiceRequest request)
  nameWithType: RxCollectionCache.resolveCollectionAsync(RxDocumentServiceRequest request)
  fullName: com.azure.cosmos.implementation.caches.RxCollectionCache.resolveCollectionAsync(RxDocumentServiceRequest request)
  overload: com.azure.cosmos.implementation.caches.RxCollectionCache.resolveCollectionAsync*
  type: Method
  package: com.azure.cosmos.implementation.caches
  summary: Resolves a request to a collection in a sticky manner. Unless request.ForceNameCacheRefresh is equal to true, it will return the same collection.
  syntax:
    content: public Mono<Utils.ValueHolder<DocumentCollection>> resolveCollectionAsync(RxDocumentServiceRequest request)
    parameters:
    - id: request
      type: com.azure.cosmos.implementation.RxDocumentServiceRequest
      description: Request to resolve.
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.Utils.ValueHolder<com.azure.cosmos.implementation.DocumentCollection>>
      description: an instance of Single&lt;DocumentCollection&gt;
references:
- uid: com.azure.cosmos.implementation.caches.RxCollectionCache.RxCollectionCache*
  name: RxCollectionCache
  nameWithType: RxCollectionCache.RxCollectionCache
  fullName: com.azure.cosmos.implementation.caches.RxCollectionCache.RxCollectionCache
  package: com.azure.cosmos.implementation.caches
- uid: com.azure.cosmos.implementation.RxDocumentServiceRequest
  name: RxDocumentServiceRequest
  nameWithType: RxDocumentServiceRequest
  fullName: com.azure.cosmos.implementation.RxDocumentServiceRequest
- uid: reactor.core.publisher.Mono<com.azure.cosmos.implementation.Utils.ValueHolder<com.azure.cosmos.implementation.DocumentCollection>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.Utils.ValueHolder
    name: ValueHolder
    fullName: com.azure.cosmos.implementation.Utils.ValueHolder
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.DocumentCollection
    name: DocumentCollection
    fullName: com.azure.cosmos.implementation.DocumentCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.caches.RxCollectionCache.resolveCollectionAsync*
  name: resolveCollectionAsync
  nameWithType: RxCollectionCache.resolveCollectionAsync
  fullName: com.azure.cosmos.implementation.caches.RxCollectionCache.resolveCollectionAsync
  package: com.azure.cosmos.implementation.caches
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.util.Map<java.lang.String,java.lang.Object>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.caches.RxCollectionCache.refresh*
  name: refresh
  nameWithType: RxCollectionCache.refresh
  fullName: com.azure.cosmos.implementation.caches.RxCollectionCache.refresh
  package: com.azure.cosmos.implementation.caches
- uid: reactor.core.publisher.Mono<com.azure.cosmos.implementation.DocumentCollection>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.DocumentCollection
    name: DocumentCollection
    fullName: com.azure.cosmos.implementation.DocumentCollection
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.caches.RxCollectionCache.getByRidAsync*
  name: getByRidAsync
  nameWithType: RxCollectionCache.getByRidAsync
  fullName: com.azure.cosmos.implementation.caches.RxCollectionCache.getByRidAsync
  package: com.azure.cosmos.implementation.caches
- uid: com.azure.cosmos.implementation.caches.RxCollectionCache.getByNameAsync*
  name: getByNameAsync
  nameWithType: RxCollectionCache.getByNameAsync
  fullName: com.azure.cosmos.implementation.caches.RxCollectionCache.getByNameAsync
  package: com.azure.cosmos.implementation.caches
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.cosmos.implementation.Utils.ValueHolder
  name: Utils.ValueHolder
  nameWithType: Utils.ValueHolder
  fullName: com.azure.cosmos.implementation.Utils.ValueHolder
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.cosmos.implementation.DocumentCollection
  name: DocumentCollection
  nameWithType: DocumentCollection
  fullName: com.azure.cosmos.implementation.DocumentCollection
- uid: java.lang.String,java.lang.Object
  name: String,Object
  nameWithType: String,Object
  fullName: java.lang.String,java.lang.Object
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
