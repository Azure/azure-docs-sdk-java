### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.getHookWithResponse*"
fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.getHookWithResponse"
name: "getHookWithResponse"
nameWithType: "MetricsAdvisorAdministrationClient.getHookWithResponse"
members:
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.getHookWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.getHookWithResponse(String hookId, Context context)"
  name: "getHookWithResponse(String hookId, Context context)"
  nameWithType: "MetricsAdvisorAdministrationClient.getHookWithResponse(String hookId, Context context)"
  summary: "Get a hook by its id.\n\n**Code sample**\n\n```java\nfinal String hookId = \"f00853f1-6627-447f-bacf-8dccf2e86fed\";\n Response<NotificationHook> response = metricsAdvisorAdminClient.getHookWithResponse(hookId, Context.NONE);\n System.out.printf(\"Response statusCode: %d%n\", response.getStatusCode());\n NotificationHook notificationHook = response.getValue();\n if (notificationHook instanceof EmailNotificationHook) {\n     EmailNotificationHook emailHook = (EmailNotificationHook) notificationHook;\n     System.out.printf(\"NotificationHook Id: %s%n\", emailHook.getId());\n     System.out.printf(\"NotificationHook Name: %s%n\", emailHook.getName());\n     System.out.printf(\"NotificationHook Description: %s%n\", emailHook.getDescription());\n     System.out.printf(\"NotificationHook External Link: %s%n\", emailHook.getExternalLink());\n     System.out.printf(\"NotificationHook Emails: %s%n\", String.join(\",\", emailHook.getEmailsToAlert()));\n } else if (notificationHook instanceof WebNotificationHook) {\n     WebNotificationHook webHook = (WebNotificationHook) notificationHook;\n     System.out.printf(\"NotificationHook Id: %s%n\", webHook.getId());\n     System.out.printf(\"NotificationHook Name: %s%n\", webHook.getName());\n     System.out.printf(\"NotificationHook Description: %s%n\", webHook.getDescription());\n     System.out.printf(\"NotificationHook External Link: %s%n\", webHook.getExternalLink());\n     System.out.printf(\"NotificationHook Endpoint: %s%n\", webHook.getEndpoint());\n     System.out.printf(\"NotificationHook Headers: %s%n\", webHook.getHttpHeaders());\n }\n```"
  parameters:
  - description: "The hook unique id."
    name: "hookId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<NotificationHook> getHookWithResponse(String hookId, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> containing the <xref uid=\"com.azure.ai.metricsadvisor.models.NotificationHook\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NotificationHook\"></xref> for the provided id."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.NotificationHook?alt=com.azure.ai.metricsadvisor.models.NotificationHook&text=NotificationHook\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
