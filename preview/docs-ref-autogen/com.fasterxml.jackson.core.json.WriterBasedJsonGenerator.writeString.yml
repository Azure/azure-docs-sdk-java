### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString*"
fullName: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString"
name: "writeString"
nameWithType: "WriterBasedJsonGenerator.writeString"
members:
- uid: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(char[],int,int)"
  fullName: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(char[] text, int offset, int len)"
  name: "writeString(char[] text, int offset, int len)"
  nameWithType: "WriterBasedJsonGenerator.writeString(char[] text, int offset, int len)"
  summary: "Method for outputting a String value. Depending on context this means either array element, (object) field value or a stand alone String; but in all cases, String will be surrounded in double quotes, and contents will be properly escaped as required by JSON specification."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeString(char[],int,int)"
  parameters:
  - name: "text"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "offset"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "len"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeString(char[] text, int offset, int len)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)"
  fullName: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(SerializableString sstr)"
  name: "writeString(SerializableString sstr)"
  nameWithType: "WriterBasedJsonGenerator.writeString(SerializableString sstr)"
  summary: "Method similar to <xref uid=\"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeString(String)\"></xref>, but that takes <xref uid=\"com.fasterxml.jackson.core.SerializableString\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SerializableString\"></xref> which can make this potentially more efficient to call as generator may be able to reuse quoted and/or encoded representation.\n\nDefault implementation just calls <xref uid=\"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeString(String)\"></xref>; sub-classes should override it with more efficient implementation if possible."
  overridden: "com.fasterxml.jackson.core.base.GeneratorBase.writeString(com.fasterxml.jackson.core.SerializableString)"
  parameters:
  - name: "sstr"
    type: "<xref href=\"com.fasterxml.jackson.core.SerializableString?alt=com.fasterxml.jackson.core.SerializableString&text=SerializableString\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeString(SerializableString sstr)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(java.io.Reader,int)"
  fullName: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(Reader reader, int len)"
  name: "writeString(Reader reader, int len)"
  nameWithType: "WriterBasedJsonGenerator.writeString(Reader reader, int len)"
  summary: "Method for outputting a String value. Depending on context this means either array element, (object) field value or a stand alone String; but in all cases, String will be surrounded in double quotes, and contents will be properly escaped as required by JSON specification. If the reader is null, then write a null. If len is < 0, then write all contents of the reader. Otherwise, write only len characters."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeString(java.io.Reader,int)"
  parameters:
  - name: "reader"
    type: "<xref href=\"java.io.Reader?alt=java.io.Reader&text=Reader\" data-throw-if-not-resolved=\"False\" />"
  - name: "len"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeString(Reader reader, int len)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(java.lang.String)"
  fullName: "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(String text)"
  name: "writeString(String text)"
  nameWithType: "WriterBasedJsonGenerator.writeString(String text)"
  summary: "Method for outputting a String value. Depending on context this means either array element, (object) field value or a stand alone String; but in all cases, String will be surrounded in double quotes, and contents will be properly escaped as required by JSON specification."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeString(java.lang.String)"
  parameters:
  - name: "text"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeString(String text)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.json"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
