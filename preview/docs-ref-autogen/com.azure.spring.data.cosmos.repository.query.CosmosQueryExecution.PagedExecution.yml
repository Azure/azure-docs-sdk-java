### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.query.CosmosQueryExecution.PagedExecution"
fullName: "com.azure.spring.data.cosmos.repository.query.CosmosQueryExecution.PagedExecution"
name: "CosmosQueryExecution.PagedExecution"
nameWithType: "CosmosQueryExecution.PagedExecution"
summary: "paginationQuery operation implementation to execute a paginationQuery query"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public static final class CosmosQueryExecution.PagedExecution implements CosmosQueryExecution"
constructors:
- "com.azure.spring.data.cosmos.repository.query.CosmosQueryExecution.PagedExecution.PagedExecution(com.azure.spring.data.cosmos.core.CosmosOperations,org.springframework.data.domain.Pageable)"
methods:
- "com.azure.spring.data.cosmos.repository.query.CosmosQueryExecution.PagedExecution.execute(com.azure.spring.data.cosmos.core.query.CosmosQuery,java.lang.Class<?>,java.lang.String)"
type: "class"
implements:
- "<xref href=\"com.azure.spring.data.cosmos.repository.query.CosmosQueryExecution?alt=com.azure.spring.data.cosmos.repository.query.CosmosQueryExecution&text=CosmosQueryExecution\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.query"
artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
