### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties"
name: "EloquaLinkedServiceTypeProperties"
nameWithType: "EloquaLinkedServiceTypeProperties"
summary: "Eloqua server linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class EloquaLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.EloquaLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.EloquaLinkedServiceTypeProperties()"
  name: "EloquaLinkedServiceTypeProperties()"
  nameWithType: "EloquaLinkedServiceTypeProperties.EloquaLinkedServiceTypeProperties()"
  syntax: "public EloquaLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "EloquaLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  syntax: "public Object encryptedCredential()"
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.endpoint()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.endpoint()"
  name: "endpoint()"
  nameWithType: "EloquaLinkedServiceTypeProperties.endpoint()"
  summary: "Get the endpoint property: The endpoint of the Eloqua server. (i.e. eloqua.example.com)."
  syntax: "public Object endpoint()"
  returns:
    description: "the endpoint value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.password()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.password()"
  name: "password()"
  nameWithType: "EloquaLinkedServiceTypeProperties.password()"
  summary: "Get the password property: The password corresponding to the user name."
  syntax: "public SecretBase password()"
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.useEncryptedEndpoints()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.useEncryptedEndpoints()"
  name: "useEncryptedEndpoints()"
  nameWithType: "EloquaLinkedServiceTypeProperties.useEncryptedEndpoints()"
  summary: "Get the useEncryptedEndpoints property: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
  syntax: "public Object useEncryptedEndpoints()"
  returns:
    description: "the useEncryptedEndpoints value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.useHostVerification()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.useHostVerification()"
  name: "useHostVerification()"
  nameWithType: "EloquaLinkedServiceTypeProperties.useHostVerification()"
  summary: "Get the useHostVerification property: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
  syntax: "public Object useHostVerification()"
  returns:
    description: "the useHostVerification value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.usePeerVerification()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.usePeerVerification()"
  name: "usePeerVerification()"
  nameWithType: "EloquaLinkedServiceTypeProperties.usePeerVerification()"
  summary: "Get the usePeerVerification property: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
  syntax: "public Object usePeerVerification()"
  returns:
    description: "the usePeerVerification value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.username()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.username()"
  name: "username()"
  nameWithType: "EloquaLinkedServiceTypeProperties.username()"
  summary: "Get the username property: The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)."
  syntax: "public Object username()"
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "EloquaLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "EloquaLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EloquaLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  returns:
    description: "the EloquaLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties&text=EloquaLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.withEndpoint(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.withEndpoint(Object endpoint)"
  name: "withEndpoint(Object endpoint)"
  nameWithType: "EloquaLinkedServiceTypeProperties.withEndpoint(Object endpoint)"
  summary: "Set the endpoint property: The endpoint of the Eloqua server. (i.e. eloqua.example.com)."
  parameters:
  - description: "the endpoint value to set."
    name: "endpoint"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EloquaLinkedServiceTypeProperties withEndpoint(Object endpoint)"
  returns:
    description: "the EloquaLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties&text=EloquaLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "EloquaLinkedServiceTypeProperties.withPassword(SecretBase password)"
  summary: "Set the password property: The password corresponding to the user name."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EloquaLinkedServiceTypeProperties withPassword(SecretBase password)"
  returns:
    description: "the EloquaLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties&text=EloquaLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.withUseEncryptedEndpoints(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  name: "withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  nameWithType: "EloquaLinkedServiceTypeProperties.withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  summary: "Set the useEncryptedEndpoints property: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
  parameters:
  - description: "the useEncryptedEndpoints value to set."
    name: "useEncryptedEndpoints"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EloquaLinkedServiceTypeProperties withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  returns:
    description: "the EloquaLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties&text=EloquaLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.withUseHostVerification(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.withUseHostVerification(Object useHostVerification)"
  name: "withUseHostVerification(Object useHostVerification)"
  nameWithType: "EloquaLinkedServiceTypeProperties.withUseHostVerification(Object useHostVerification)"
  summary: "Set the useHostVerification property: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
  parameters:
  - description: "the useHostVerification value to set."
    name: "useHostVerification"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EloquaLinkedServiceTypeProperties withUseHostVerification(Object useHostVerification)"
  returns:
    description: "the EloquaLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties&text=EloquaLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.withUsePeerVerification(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.withUsePeerVerification(Object usePeerVerification)"
  name: "withUsePeerVerification(Object usePeerVerification)"
  nameWithType: "EloquaLinkedServiceTypeProperties.withUsePeerVerification(Object usePeerVerification)"
  summary: "Set the usePeerVerification property: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
  parameters:
  - description: "the usePeerVerification value to set."
    name: "usePeerVerification"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EloquaLinkedServiceTypeProperties withUsePeerVerification(Object usePeerVerification)"
  returns:
    description: "the EloquaLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties&text=EloquaLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "EloquaLinkedServiceTypeProperties.withUsername(Object username)"
  summary: "Set the username property: The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EloquaLinkedServiceTypeProperties withUsername(Object username)"
  returns:
    description: "the EloquaLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.EloquaLinkedServiceTypeProperties&text=EloquaLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
