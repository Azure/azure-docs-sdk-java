### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.JsonGenerator.writeFieldId*"
fullName: "com.fasterxml.jackson.core.JsonGenerator.writeFieldId"
name: "writeFieldId"
nameWithType: "JsonGenerator.writeFieldId"
members:
- uid: "com.fasterxml.jackson.core.JsonGenerator.writeFieldId(long)"
  fullName: "com.fasterxml.jackson.core.JsonGenerator.writeFieldId(long id)"
  name: "writeFieldId(long id)"
  nameWithType: "JsonGenerator.writeFieldId(long id)"
  summary: "Alternative to <xref uid=\"com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeFieldName(String)\"></xref> that may be used in cases where property key is of numeric type; either where underlying format supports such notion (some binary formats do, unlike JSON), or for convenient conversion into String presentation. Default implementation will simply convert id into `String` and call <xref uid=\"com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeFieldName(String)\"></xref>."
  parameters:
  - name: "id"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeFieldId(long id)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
