### YamlMime:JavaMember
uid: "com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionDocker.withBaseDockerfile*"
fullName: "com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionDocker.withBaseDockerfile"
name: "withBaseDockerfile"
nameWithType: "ModelEnvironmentDefinitionDocker.withBaseDockerfile"
members:
- uid: "com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionDocker.withBaseDockerfile(java.lang.String)"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionDocker.withBaseDockerfile(String baseDockerfile)"
  name: "withBaseDockerfile(String baseDockerfile)"
  nameWithType: "ModelEnvironmentDefinitionDocker.withBaseDockerfile(String baseDockerfile)"
  summary: "Set the baseDockerfile property: Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage."
  overridden: "com.azure.resourcemanager.machinelearningservices.models.ModelDockerSection.withBaseDockerfile(java.lang.String)"
  parameters:
  - name: "baseDockerfile"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ModelEnvironmentDefinitionDocker withBaseDockerfile(String baseDockerfile)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionDocker?alt=com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionDocker&text=ModelEnvironmentDefinitionDocker\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.machinelearningservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-machinelearningservices:1.0.0-beta.1
