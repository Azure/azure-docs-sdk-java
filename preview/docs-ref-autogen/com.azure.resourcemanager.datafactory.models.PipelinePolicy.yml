### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.PipelinePolicy"
fullName: "com.azure.resourcemanager.datafactory.models.PipelinePolicy"
name: "PipelinePolicy"
nameWithType: "PipelinePolicy"
summary: "Pipeline Policy."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PipelinePolicy"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.PipelinePolicy.PipelinePolicy()"
  fullName: "com.azure.resourcemanager.datafactory.models.PipelinePolicy.PipelinePolicy()"
  name: "PipelinePolicy()"
  nameWithType: "PipelinePolicy.PipelinePolicy()"
  syntax: "public PipelinePolicy()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.PipelinePolicy.elapsedTimeMetric()"
  fullName: "com.azure.resourcemanager.datafactory.models.PipelinePolicy.elapsedTimeMetric()"
  name: "elapsedTimeMetric()"
  nameWithType: "PipelinePolicy.elapsedTimeMetric()"
  summary: "Get the elapsed<wbr>Time<wbr>Metric property: Pipeline Elapsed<wbr>Time Metric Policy."
  syntax: "public PipelineElapsedTimeMetricPolicy elapsedTimeMetric()"
  desc: "Get the elapsedTimeMetric property: Pipeline ElapsedTime Metric Policy."
  returns:
    description: "the elapsedTimeMetric value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PipelineElapsedTimeMetricPolicy?alt=com.azure.resourcemanager.datafactory.models.PipelineElapsedTimeMetricPolicy&text=PipelineElapsedTimeMetricPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.PipelinePolicy.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.PipelinePolicy.validate()"
  name: "validate()"
  nameWithType: "PipelinePolicy.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.PipelinePolicy.withElapsedTimeMetric(com.azure.resourcemanager.datafactory.models.PipelineElapsedTimeMetricPolicy)"
  fullName: "com.azure.resourcemanager.datafactory.models.PipelinePolicy.withElapsedTimeMetric(PipelineElapsedTimeMetricPolicy elapsedTimeMetric)"
  name: "withElapsedTimeMetric(PipelineElapsedTimeMetricPolicy elapsedTimeMetric)"
  nameWithType: "PipelinePolicy.withElapsedTimeMetric(PipelineElapsedTimeMetricPolicy elapsedTimeMetric)"
  summary: "Set the elapsed<wbr>Time<wbr>Metric property: Pipeline Elapsed<wbr>Time Metric Policy."
  parameters:
  - description: "the elapsedTimeMetric value to set."
    name: "elapsedTimeMetric"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PipelineElapsedTimeMetricPolicy?alt=com.azure.resourcemanager.datafactory.models.PipelineElapsedTimeMetricPolicy&text=PipelineElapsedTimeMetricPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PipelinePolicy withElapsedTimeMetric(PipelineElapsedTimeMetricPolicy elapsedTimeMetric)"
  desc: "Set the elapsedTimeMetric property: Pipeline ElapsedTime Metric Policy."
  returns:
    description: "the PipelinePolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PipelinePolicy?alt=com.azure.resourcemanager.datafactory.models.PipelinePolicy&text=PipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Pipeline Policy."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
