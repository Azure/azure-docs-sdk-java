### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler
  id: ExternalTypeHandler
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl
  children:
  - com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.Builder
  - com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExternalTypeHandler(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExtTypedProperty[],java.util.Map<java.lang.String,java.lang.Object>,java.lang.String[],com.fasterxml.jackson.databind.util.TokenBuffer[])
  - com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExternalTypeHandler(com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler)
  - com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,java.lang.String)
  - com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,int,java.lang.String)
  - com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.builder(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator)
  - com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
  - com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.handlePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object)
  - com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.handleTypePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object)
  - com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.start()
  langs:
  - java
  name: ExternalTypeHandler
  nameWithType: ExternalTypeHandler
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler
  type: Class
  package: com.fasterxml.jackson.databind.deser.impl
  summary: Helper class that is used to flatten JSON structure when using "external type id" (see <xref uid="com.fasterxml.jackson.annotation.JsonTypeInfo.As.EXTERNAL_PROPERTY" data-throw-if-not-resolved="false">com.fasterxml.jackson.annotation.JsonTypeInfo.As#EXTERNAL_PROPERTY</xref>). This is needed to store temporary state and buffer tokens, as the structure is rearranged a bit so that actual type deserializer can resolve type and finalize deserialization.
  syntax:
    content: public class ExternalTypeHandler
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExternalTypeHandler(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExtTypedProperty[],java.util.Map<java.lang.String,java.lang.Object>,java.lang.String[],com.fasterxml.jackson.databind.util.TokenBuffer[])
  id: ExternalTypeHandler(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExtTypedProperty[],java.util.Map<java.lang.String,java.lang.Object>,java.lang.String[],com.fasterxml.jackson.databind.util.TokenBuffer[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler
  langs:
  - java
  name: ExternalTypeHandler(JavaType beanType, ExternalTypeHandler.ExtTypedProperty[] properties, Map<String,Object> nameToPropertyIndex, String[] typeIds, TokenBuffer[] tokens)
  nameWithType: ExternalTypeHandler.ExternalTypeHandler(JavaType beanType, ExternalTypeHandler.ExtTypedProperty[] properties, Map<String,Object> nameToPropertyIndex, String[] typeIds, TokenBuffer[] tokens)
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExternalTypeHandler(JavaType beanType, ExternalTypeHandler.ExtTypedProperty[] properties, Map<String,Object> nameToPropertyIndex, String[] typeIds, TokenBuffer[] tokens)
  overload: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExternalTypeHandler*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: protected ExternalTypeHandler(JavaType beanType, ExternalTypeHandler.ExtTypedProperty[] properties, Map<String,Object> nameToPropertyIndex, String[] typeIds, TokenBuffer[] tokens)
    parameters:
    - id: beanType
      type: com.fasterxml.jackson.databind.JavaType
    - id: properties
      type: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExtTypedProperty[]
    - id: nameToPropertyIndex
      type: java.util.Map<java.lang.String,java.lang.Object>
    - id: typeIds
      type: java.lang.String[]
    - id: tokens
      type: com.fasterxml.jackson.databind.util.TokenBuffer[]
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExternalTypeHandler(com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler)
  id: ExternalTypeHandler(com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler
  langs:
  - java
  name: ExternalTypeHandler(ExternalTypeHandler h)
  nameWithType: ExternalTypeHandler.ExternalTypeHandler(ExternalTypeHandler h)
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExternalTypeHandler(ExternalTypeHandler h)
  overload: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExternalTypeHandler*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: protected ExternalTypeHandler(ExternalTypeHandler h)
    parameters:
    - id: h
      type: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,java.lang.String)
  id: _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler
  langs:
  - java
  name: _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId)
  nameWithType: ExternalTypeHandler._deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId)
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId)
  overload: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserialize*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: protected final Object _deserialize(JsonParser p, DeserializationContext ctxt, int index, String typeId)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: index
      type: int
    - id: typeId
      type: java.lang.String
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,int,java.lang.String)
  id: _deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,int,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler
  langs:
  - java
  name: _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId)
  nameWithType: ExternalTypeHandler._deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId)
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId)
  overload: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserializeAndSet*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: protected final void _deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, int index, String typeId)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: bean
      type: java.lang.Object
    - id: index
      type: int
    - id: typeId
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.builder(com.fasterxml.jackson.databind.JavaType)
  id: builder(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler
  langs:
  - java
  name: builder(JavaType beanType)
  nameWithType: ExternalTypeHandler.builder(JavaType beanType)
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.builder(JavaType beanType)
  overload: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.builder*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: public static ExternalTypeHandler.Builder builder(JavaType beanType)
    parameters:
    - id: beanType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.Builder
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator)
  id: complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler
  langs:
  - java
  name: complete(JsonParser p, DeserializationContext ctxt, PropertyValueBuffer buffer, PropertyBasedCreator creator)
  nameWithType: ExternalTypeHandler.complete(JsonParser p, DeserializationContext ctxt, PropertyValueBuffer buffer, PropertyBasedCreator creator)
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.complete(JsonParser p, DeserializationContext ctxt, PropertyValueBuffer buffer, PropertyBasedCreator creator)
  overload: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.complete*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  summary: Variant called when creation of the POJO involves buffering of creator properties as well as property-based creator.
  syntax:
    content: public Object complete(JsonParser p, DeserializationContext ctxt, PropertyValueBuffer buffer, PropertyBasedCreator creator)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: buffer
      type: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer
    - id: creator
      type: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
  id: complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler
  langs:
  - java
  name: complete(JsonParser p, DeserializationContext ctxt, Object bean)
  nameWithType: ExternalTypeHandler.complete(JsonParser p, DeserializationContext ctxt, Object bean)
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.complete(JsonParser p, DeserializationContext ctxt, Object bean)
  overload: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.complete*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  summary: Method called after JSON Object closes, and has to ensure that all external type ids have been handled.
  syntax:
    content: public Object complete(JsonParser p, DeserializationContext ctxt, Object bean)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: bean
      type: java.lang.Object
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.handlePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object)
  id: handlePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler
  langs:
  - java
  name: handlePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean)
  nameWithType: ExternalTypeHandler.handlePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean)
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.handlePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean)
  overload: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.handlePropertyValue*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  summary: Method called to ask handler to handle value of given property, at point where parser points to the first token of the value. Handling can mean either resolving type id it contains (if it matches type property name), or by buffering the value for further use.
  syntax:
    content: public boolean handlePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: propName
      type: java.lang.String
    - id: bean
      type: java.lang.Object
    return:
      type: boolean
      description: True, if the given property was properly handled
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.handleTypePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object)
  id: handleTypePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler
  langs:
  - java
  name: handleTypePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean)
  nameWithType: ExternalTypeHandler.handleTypePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean)
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.handleTypePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean)
  overload: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.handleTypePropertyValue*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  summary: 'Method called to see if given property/value pair is an external type id; and if so handle it. This is **only** to be called in case containing POJO has similarly named property as the external type id AND value is of scalar type: otherwise <xref uid="com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.handlePropertyValue*" data-throw-if-not-resolved="false">#handlePropertyValue</xref> should be called instead.'
  syntax:
    content: public boolean handleTypePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: propName
      type: java.lang.String
    - id: bean
      type: java.lang.Object
    return:
      type: boolean
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.start()
  id: start()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler
  langs:
  - java
  name: start()
  nameWithType: ExternalTypeHandler.start()
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.start()
  overload: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.start*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  summary: Method called to start collection process by creating non-blueprint instances.
  syntax:
    content: public ExternalTypeHandler start()
    return:
      type: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler
references:
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExtTypedProperty[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExtTypedProperty
    name: ExtTypedProperty
    fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExtTypedProperty
  - name: '[]'
    fullName: '[]'
- uid: java.util.Map<java.lang.String,java.lang.Object>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: java.lang.String[]
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.util.TokenBuffer[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.util.TokenBuffer
    name: TokenBuffer
    fullName: com.fasterxml.jackson.databind.util.TokenBuffer
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExternalTypeHandler*
  name: ExternalTypeHandler
  nameWithType: ExternalTypeHandler.ExternalTypeHandler
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExternalTypeHandler
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.Builder
  name: ExternalTypeHandler.Builder
  nameWithType: ExternalTypeHandler.Builder
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.Builder
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.builder*
  name: builder
  nameWithType: ExternalTypeHandler.builder
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.builder
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.start*
  name: start
  nameWithType: ExternalTypeHandler.start
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.start
  package: com.fasterxml.jackson.databind.deser.impl
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.handleTypePropertyValue*
  name: handleTypePropertyValue
  nameWithType: ExternalTypeHandler.handleTypePropertyValue
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.handleTypePropertyValue
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.handlePropertyValue*
  name: handlePropertyValue
  nameWithType: ExternalTypeHandler.handlePropertyValue
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.handlePropertyValue
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.complete*
  name: complete
  nameWithType: ExternalTypeHandler.complete
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.complete
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer
  name: PropertyValueBuffer
  nameWithType: PropertyValueBuffer
  fullName: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer
- uid: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator
  name: PropertyBasedCreator
  nameWithType: PropertyBasedCreator
  fullName: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserialize*
  name: _deserialize
  nameWithType: ExternalTypeHandler._deserialize
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserialize
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserializeAndSet*
  name: _deserializeAndSet
  nameWithType: ExternalTypeHandler._deserializeAndSet
  fullName: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserializeAndSet
  package: com.fasterxml.jackson.databind.deser.impl
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.String,java.lang.Object
  name: String,Object
  nameWithType: String,Object
  fullName: java.lang.String,java.lang.Object
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
