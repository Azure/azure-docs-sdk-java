### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.PropertyName
  id: PropertyName
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind
  children:
  - com.fasterxml.jackson.databind.PropertyName.NO_NAME
  - com.fasterxml.jackson.databind.PropertyName.PropertyName(java.lang.String)
  - com.fasterxml.jackson.databind.PropertyName.PropertyName(java.lang.String,java.lang.String)
  - com.fasterxml.jackson.databind.PropertyName.USE_DEFAULT
  - com.fasterxml.jackson.databind.PropertyName._encodedSimple
  - com.fasterxml.jackson.databind.PropertyName._namespace
  - com.fasterxml.jackson.databind.PropertyName._simpleName
  - com.fasterxml.jackson.databind.PropertyName.construct(java.lang.String)
  - com.fasterxml.jackson.databind.PropertyName.construct(java.lang.String,java.lang.String)
  - com.fasterxml.jackson.databind.PropertyName.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.PropertyName.getNamespace()
  - com.fasterxml.jackson.databind.PropertyName.getSimpleName()
  - com.fasterxml.jackson.databind.PropertyName.hasNamespace()
  - com.fasterxml.jackson.databind.PropertyName.hasSimpleName()
  - com.fasterxml.jackson.databind.PropertyName.hasSimpleName(java.lang.String)
  - com.fasterxml.jackson.databind.PropertyName.hashCode()
  - com.fasterxml.jackson.databind.PropertyName.internSimpleName()
  - com.fasterxml.jackson.databind.PropertyName.isEmpty()
  - com.fasterxml.jackson.databind.PropertyName.readResolve()
  - com.fasterxml.jackson.databind.PropertyName.simpleAsEncoded(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  - com.fasterxml.jackson.databind.PropertyName.toString()
  - com.fasterxml.jackson.databind.PropertyName.withNamespace(java.lang.String)
  - com.fasterxml.jackson.databind.PropertyName.withSimpleName(java.lang.String)
  langs:
  - java
  name: PropertyName
  nameWithType: PropertyName
  fullName: com.fasterxml.jackson.databind.PropertyName
  type: Class
  package: com.fasterxml.jackson.databind
  summary: Simple value class used for containing names of properties as defined by annotations (and possibly other configuration sources).
  syntax:
    content: public class PropertyName implements Serializable
  inheritance:
  - java.lang.Object
  implements:
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.PropertyName.NO_NAME
  id: NO_NAME
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: NO_NAME
  nameWithType: PropertyName.NO_NAME
  fullName: com.fasterxml.jackson.databind.PropertyName.NO_NAME
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Special placeholder value that indicates that there is no name associated. Exact semantics to use (if any) depend on actual annotation in use, but commonly this value disables behavior for which name would be needed.
  syntax:
    content: public static final PropertyName NO_NAME
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.PropertyName.PropertyName(java.lang.String)
  id: PropertyName(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: PropertyName(String simpleName)
  nameWithType: PropertyName.PropertyName(String simpleName)
  fullName: com.fasterxml.jackson.databind.PropertyName.PropertyName(String simpleName)
  overload: com.fasterxml.jackson.databind.PropertyName.PropertyName*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: public PropertyName(String simpleName)
    parameters:
    - id: simpleName
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.PropertyName.PropertyName(java.lang.String,java.lang.String)
  id: PropertyName(java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: PropertyName(String simpleName, String namespace)
  nameWithType: PropertyName.PropertyName(String simpleName, String namespace)
  fullName: com.fasterxml.jackson.databind.PropertyName.PropertyName(String simpleName, String namespace)
  overload: com.fasterxml.jackson.databind.PropertyName.PropertyName*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: public PropertyName(String simpleName, String namespace)
    parameters:
    - id: simpleName
      type: java.lang.String
    - id: namespace
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.PropertyName.USE_DEFAULT
  id: USE_DEFAULT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: USE_DEFAULT
  nameWithType: PropertyName.USE_DEFAULT
  fullName: com.fasterxml.jackson.databind.PropertyName.USE_DEFAULT
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Special placeholder value that indicates that name to use should be based on the standard heuristics. This can be different from returning null, as null means "no information available, whereas this value indicates explicit defaulting.
  syntax:
    content: public static final PropertyName USE_DEFAULT
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.PropertyName._encodedSimple
  id: _encodedSimple
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: _encodedSimple
  nameWithType: PropertyName._encodedSimple
  fullName: com.fasterxml.jackson.databind.PropertyName._encodedSimple
  type: Field
  package: com.fasterxml.jackson.databind
  summary: >-
    Lazily-constructed efficient representation of the simple name.


    NOTE: not defined as volatile to avoid performance problem with concurrent access in multi-core environments; due to statelessness of <xref uid="com.fasterxml.jackson.core.io.SerializedString" data-throw-if-not-resolved="false">SerializedString</xref> at most leads to multiple instantiations.
  syntax:
    content: protected SerializableString _encodedSimple
    return:
      type: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.databind.PropertyName._namespace
  id: _namespace
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: _namespace
  nameWithType: PropertyName._namespace
  fullName: com.fasterxml.jackson.databind.PropertyName._namespace
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Additional namespace, for formats that have such concept (JSON does not, XML does, for example).
  syntax:
    content: protected final String _namespace
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.PropertyName._simpleName
  id: _simpleName
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: _simpleName
  nameWithType: PropertyName._simpleName
  fullName: com.fasterxml.jackson.databind.PropertyName._simpleName
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Basic name of the property.
  syntax:
    content: protected final String _simpleName
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.PropertyName.construct(java.lang.String)
  id: construct(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: construct(String simpleName)
  nameWithType: PropertyName.construct(String simpleName)
  fullName: com.fasterxml.jackson.databind.PropertyName.construct(String simpleName)
  overload: com.fasterxml.jackson.databind.PropertyName.construct*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public static PropertyName construct(String simpleName)
    parameters:
    - id: simpleName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.PropertyName.construct(java.lang.String,java.lang.String)
  id: construct(java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: construct(String simpleName, String ns)
  nameWithType: PropertyName.construct(String simpleName, String ns)
  fullName: com.fasterxml.jackson.databind.PropertyName.construct(String simpleName, String ns)
  overload: com.fasterxml.jackson.databind.PropertyName.construct*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public static PropertyName construct(String simpleName, String ns)
    parameters:
    - id: simpleName
      type: java.lang.String
    - id: ns
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.PropertyName.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: equals(Object o)
  nameWithType: PropertyName.equals(Object o)
  fullName: com.fasterxml.jackson.databind.PropertyName.equals(Object o)
  overload: com.fasterxml.jackson.databind.PropertyName.equals*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.PropertyName.getNamespace()
  id: getNamespace()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: getNamespace()
  nameWithType: PropertyName.getNamespace()
  fullName: com.fasterxml.jackson.databind.PropertyName.getNamespace()
  overload: com.fasterxml.jackson.databind.PropertyName.getNamespace*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public String getNamespace()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.PropertyName.getSimpleName()
  id: getSimpleName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: getSimpleName()
  nameWithType: PropertyName.getSimpleName()
  fullName: com.fasterxml.jackson.databind.PropertyName.getSimpleName()
  overload: com.fasterxml.jackson.databind.PropertyName.getSimpleName*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public String getSimpleName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.PropertyName.hasNamespace()
  id: hasNamespace()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: hasNamespace()
  nameWithType: PropertyName.hasNamespace()
  fullName: com.fasterxml.jackson.databind.PropertyName.hasNamespace()
  overload: com.fasterxml.jackson.databind.PropertyName.hasNamespace*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean hasNamespace()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.PropertyName.hasSimpleName()
  id: hasSimpleName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: hasSimpleName()
  nameWithType: PropertyName.hasSimpleName()
  fullName: com.fasterxml.jackson.databind.PropertyName.hasSimpleName()
  overload: com.fasterxml.jackson.databind.PropertyName.hasSimpleName*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean hasSimpleName()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.PropertyName.hasSimpleName(java.lang.String)
  id: hasSimpleName(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: hasSimpleName(String str)
  nameWithType: PropertyName.hasSimpleName(String str)
  fullName: com.fasterxml.jackson.databind.PropertyName.hasSimpleName(String str)
  overload: com.fasterxml.jackson.databind.PropertyName.hasSimpleName*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean hasSimpleName(String str)
    parameters:
    - id: str
      type: java.lang.String
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.PropertyName.hashCode()
  id: hashCode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: hashCode()
  nameWithType: PropertyName.hashCode()
  fullName: com.fasterxml.jackson.databind.PropertyName.hashCode()
  overload: com.fasterxml.jackson.databind.PropertyName.hashCode*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.PropertyName.internSimpleName()
  id: internSimpleName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: internSimpleName()
  nameWithType: PropertyName.internSimpleName()
  fullName: com.fasterxml.jackson.databind.PropertyName.internSimpleName()
  overload: com.fasterxml.jackson.databind.PropertyName.internSimpleName*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public PropertyName internSimpleName()
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.PropertyName.isEmpty()
  id: isEmpty()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: isEmpty()
  nameWithType: PropertyName.isEmpty()
  fullName: com.fasterxml.jackson.databind.PropertyName.isEmpty()
  overload: com.fasterxml.jackson.databind.PropertyName.isEmpty*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method that is basically equivalent of:


    ```java

    !hasSimpleName() << !hasNamespace();

    ```
  syntax:
    content: public boolean isEmpty()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.PropertyName.readResolve()
  id: readResolve()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: readResolve()
  nameWithType: PropertyName.readResolve()
  fullName: com.fasterxml.jackson.databind.PropertyName.readResolve()
  overload: com.fasterxml.jackson.databind.PropertyName.readResolve*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected Object readResolve()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.PropertyName.simpleAsEncoded(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  id: simpleAsEncoded(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: simpleAsEncoded(MapperConfig<?> config)
  nameWithType: PropertyName.simpleAsEncoded(MapperConfig<?> config)
  fullName: com.fasterxml.jackson.databind.PropertyName.simpleAsEncoded(MapperConfig<?> config)
  overload: com.fasterxml.jackson.databind.PropertyName.simpleAsEncoded*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Accessor that may be used to get lazily-constructed efficient representation of the simple name.
  syntax:
    content: public SerializableString simpleAsEncoded(MapperConfig<?> config)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    return:
      type: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.databind.PropertyName.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: toString()
  nameWithType: PropertyName.toString()
  fullName: com.fasterxml.jackson.databind.PropertyName.toString()
  overload: com.fasterxml.jackson.databind.PropertyName.toString*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.PropertyName.withNamespace(java.lang.String)
  id: withNamespace(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: withNamespace(String ns)
  nameWithType: PropertyName.withNamespace(String ns)
  fullName: com.fasterxml.jackson.databind.PropertyName.withNamespace(String ns)
  overload: com.fasterxml.jackson.databind.PropertyName.withNamespace*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Fluent factory method for constructing an instance with different namespace.
  syntax:
    content: public PropertyName withNamespace(String ns)
    parameters:
    - id: ns
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.PropertyName.withSimpleName(java.lang.String)
  id: withSimpleName(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyName
  langs:
  - java
  name: withSimpleName(String simpleName)
  nameWithType: PropertyName.withSimpleName(String simpleName)
  fullName: com.fasterxml.jackson.databind.PropertyName.withSimpleName(String simpleName)
  overload: com.fasterxml.jackson.databind.PropertyName.withSimpleName*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Fluent factory method for constructing an instance with different simple name.
  syntax:
    content: public PropertyName withSimpleName(String simpleName)
    parameters:
    - id: simpleName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.PropertyName
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.PropertyName.PropertyName*
  name: PropertyName
  nameWithType: PropertyName.PropertyName
  fullName: com.fasterxml.jackson.databind.PropertyName.PropertyName
  package: com.fasterxml.jackson.databind
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.PropertyName.readResolve*
  name: readResolve
  nameWithType: PropertyName.readResolve
  fullName: com.fasterxml.jackson.databind.PropertyName.readResolve
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.PropertyName.construct*
  name: construct
  nameWithType: PropertyName.construct
  fullName: com.fasterxml.jackson.databind.PropertyName.construct
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.PropertyName.internSimpleName*
  name: internSimpleName
  nameWithType: PropertyName.internSimpleName
  fullName: com.fasterxml.jackson.databind.PropertyName.internSimpleName
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.PropertyName.withSimpleName*
  name: withSimpleName
  nameWithType: PropertyName.withSimpleName
  fullName: com.fasterxml.jackson.databind.PropertyName.withSimpleName
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.PropertyName.withNamespace*
  name: withNamespace
  nameWithType: PropertyName.withNamespace
  fullName: com.fasterxml.jackson.databind.PropertyName.withNamespace
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.PropertyName.getSimpleName*
  name: getSimpleName
  nameWithType: PropertyName.getSimpleName
  fullName: com.fasterxml.jackson.databind.PropertyName.getSimpleName
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.cfg.MapperConfig
    name: MapperConfig
    fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.SerializableString
  name: SerializableString
  nameWithType: SerializableString
  fullName: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.databind.PropertyName.simpleAsEncoded*
  name: simpleAsEncoded
  nameWithType: PropertyName.simpleAsEncoded
  fullName: com.fasterxml.jackson.databind.PropertyName.simpleAsEncoded
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.PropertyName.getNamespace*
  name: getNamespace
  nameWithType: PropertyName.getNamespace
  fullName: com.fasterxml.jackson.databind.PropertyName.getNamespace
  package: com.fasterxml.jackson.databind
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.PropertyName.hasSimpleName*
  name: hasSimpleName
  nameWithType: PropertyName.hasSimpleName
  fullName: com.fasterxml.jackson.databind.PropertyName.hasSimpleName
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.PropertyName.hasNamespace*
  name: hasNamespace
  nameWithType: PropertyName.hasNamespace
  fullName: com.fasterxml.jackson.databind.PropertyName.hasNamespace
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.PropertyName.isEmpty*
  name: isEmpty
  nameWithType: PropertyName.isEmpty
  fullName: com.fasterxml.jackson.databind.PropertyName.isEmpty
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.PropertyName.equals*
  name: equals
  nameWithType: PropertyName.equals
  fullName: com.fasterxml.jackson.databind.PropertyName.equals
  package: com.fasterxml.jackson.databind
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.PropertyName.hashCode*
  name: hashCode
  nameWithType: PropertyName.hashCode
  fullName: com.fasterxml.jackson.databind.PropertyName.hashCode
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.PropertyName.toString*
  name: toString
  nameWithType: PropertyName.toString
  fullName: com.fasterxml.jackson.databind.PropertyName.toString
  package: com.fasterxml.jackson.databind
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig
  name: MapperConfig
  nameWithType: MapperConfig
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
