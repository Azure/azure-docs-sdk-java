### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.util.BeanUtil.checkUnsupportedType*"
fullName: "com.fasterxml.jackson.databind.util.BeanUtil.checkUnsupportedType"
name: "checkUnsupportedType"
nameWithType: "BeanUtil.checkUnsupportedType"
members:
- uid: "com.fasterxml.jackson.databind.util.BeanUtil.checkUnsupportedType(com.fasterxml.jackson.databind.JavaType)"
  fullName: "com.fasterxml.jackson.databind.util.BeanUtil.checkUnsupportedType(JavaType type)"
  name: "checkUnsupportedType(JavaType type)"
  nameWithType: "BeanUtil.checkUnsupportedType(JavaType type)"
  summary: "Helper method called by <xref uid=\"com.fasterxml.jackson.databind.deser.BeanDeserializerFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.databind.deser.BeanDeserializerFactory\"></xref> and <xref uid=\"com.fasterxml.jackson.databind.ser.BeanSerializerFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.databind.ser.BeanSerializerFactory\"></xref> to check if given unrecognized type (to be (de)serialized as general POJO) is one of \"well-known\" types for which there would be a datatype module; and if so, return appropriate failure message to give to caller."
  parameters:
  - name: "type"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String checkUnsupportedType(JavaType type)"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.util"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.5
