### YamlMime:JavaMember
uid: "com.microsoft.azure.management.containerinstance.v2019_12_01.ContainerGroup.DefinitionStages.WithOsType.withOsType*"
fullName: "com.microsoft.azure.management.containerinstance.v2019_12_01.ContainerGroup.DefinitionStages.WithOsType.withOsType"
name: "withOsType"
nameWithType: "ContainerGroup.DefinitionStages.WithOsType.withOsType"
members:
- uid: "com.microsoft.azure.management.containerinstance.v2019_12_01.ContainerGroup.DefinitionStages.WithOsType.withOsType(com.microsoft.azure.management.containerinstance.v2019_12_01.OperatingSystemTypes)"
  fullName: "com.microsoft.azure.management.containerinstance.v2019_12_01.ContainerGroup.DefinitionStages.WithOsType.withOsType(OperatingSystemTypes osType)"
  name: "withOsType(OperatingSystemTypes osType)"
  nameWithType: "ContainerGroup.DefinitionStages.WithOsType.withOsType(OperatingSystemTypes osType)"
  summary: "Specifies osType."
  parameters:
  - description: "The operating system type required by the containers in the container group. Possible values include: 'Windows', 'Linux'"
    name: "osType"
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.v2019_12_01.OperatingSystemTypes?alt=com.microsoft.azure.management.containerinstance.v2019_12_01.OperatingSystemTypes&text=OperatingSystemTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ContainerGroup.DefinitionStages.WithCreate withOsType(OperatingSystemTypes osType)"
  returns:
    description: "the next definition stage"
    type: "<xref href=\"com.microsoft.azure.management.containerinstance.v2019_12_01.ContainerGroup.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.containerinstance.v2019_12_01.ContainerGroup.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.management.containerinstance.v2019_12_01"
artifact: com.microsoft.azure.containerinstance.v2019_12_01:azure-mgmt-containerinstance:1.0.0-beta
