### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray*"
fullName: "com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray"
name: "writeValuesAsArray"
nameWithType: "ObjectWriter.writeValuesAsArray"
members:
- uid: "com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(com.fasterxml.jackson.core.JsonGenerator)"
  fullName: "com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(JsonGenerator gen)"
  name: "writeValuesAsArray(JsonGenerator gen)"
  nameWithType: "ObjectWriter.writeValuesAsArray(JsonGenerator gen)"
  summary: "Method for creating a <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter\"></xref> to write an array of root-level values, using configuration of this <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter\"></xref>. Resulting writer needs to be <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter.close()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter#close()\"></xref>d after all values have been written to ensure that all content gets flushed by the generator. However, since a <xref uid=\"com.fasterxml.jackson.core.JsonGenerator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonGenerator\"></xref> is explicitly passed, it will NOT be closed when <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter.close()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter#close()\"></xref> is called.\n\nNote that the type to use with <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter.forType(java.lang.Class&lt;?&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter#forType(Class)\"></xref> needs to be type of individual values (elements) to write and NOT matching array or <xref uid=\"java.util.Collection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Collection\"></xref> type."
  parameters:
  - description: "Underlying generator to use for writing the token stream"
    name: "gen"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SequenceWriter writeValuesAsArray(JsonGenerator gen)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.SequenceWriter?alt=com.fasterxml.jackson.databind.SequenceWriter&text=SequenceWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(java.io.DataOutput)"
  fullName: "com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(DataOutput out)"
  name: "writeValuesAsArray(DataOutput out)"
  nameWithType: "ObjectWriter.writeValuesAsArray(DataOutput out)"
  parameters:
  - name: "out"
    type: "<xref href=\"java.io.DataOutput?alt=java.io.DataOutput&text=DataOutput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SequenceWriter writeValuesAsArray(DataOutput out)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.SequenceWriter?alt=com.fasterxml.jackson.databind.SequenceWriter&text=SequenceWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(java.io.File)"
  fullName: "com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(File out)"
  name: "writeValuesAsArray(File out)"
  nameWithType: "ObjectWriter.writeValuesAsArray(File out)"
  summary: "Method for creating a <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter\"></xref> to write an array of root-level values, using configuration of this <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter\"></xref>. Resulting writer needs to be <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter.close()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter#close()\"></xref>d after all values have been written to ensure closing of underlying generator and output stream.\n\nNote that the type to use with <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter.forType(java.lang.Class&lt;?&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter#forType(Class)\"></xref> needs to be type of individual values (elements) to write and NOT matching array or <xref uid=\"java.util.Collection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Collection\"></xref> type."
  parameters:
  - description: "File to write token stream to"
    name: "out"
    type: "<xref href=\"java.io.File?alt=java.io.File&text=File\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SequenceWriter writeValuesAsArray(File out)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.SequenceWriter?alt=com.fasterxml.jackson.databind.SequenceWriter&text=SequenceWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(java.io.OutputStream)"
  fullName: "com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(OutputStream out)"
  name: "writeValuesAsArray(OutputStream out)"
  nameWithType: "ObjectWriter.writeValuesAsArray(OutputStream out)"
  summary: "Method for creating a <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter\"></xref> to write an array of root-level values, using configuration of this <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter\"></xref>. Resulting writer needs to be <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter.close()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter#close()\"></xref>d after all values have been written to ensure closing of underlying generator and output stream.\n\nNote that the type to use with <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter.forType(java.lang.Class&lt;?&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter#forType(Class)\"></xref> needs to be type of individual values (elements) to write and NOT matching array or <xref uid=\"java.util.Collection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Collection\"></xref> type."
  parameters:
  - description: "Physical output stream to use for writing the token stream"
    name: "out"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SequenceWriter writeValuesAsArray(OutputStream out)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.SequenceWriter?alt=com.fasterxml.jackson.databind.SequenceWriter&text=SequenceWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(java.io.Writer)"
  fullName: "com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(Writer out)"
  name: "writeValuesAsArray(Writer out)"
  nameWithType: "ObjectWriter.writeValuesAsArray(Writer out)"
  summary: "Method for creating a <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter\"></xref> to write an array of root-level values, using configuration of this <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter\"></xref>. Resulting writer needs to be <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter.close()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter#close()\"></xref>d after all values have been written to ensure closing of underlying generator and output stream.\n\nNote that the type to use with <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter.forType(java.lang.Class&lt;?&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter#forType(Class)\"></xref> needs to be type of individual values (elements) to write and NOT matching array or <xref uid=\"java.util.Collection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Collection\"></xref> type."
  parameters:
  - description: "Writer to use for writing the token stream"
    name: "out"
    type: "<xref href=\"java.io.Writer?alt=java.io.Writer&text=Writer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SequenceWriter writeValuesAsArray(Writer out)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.SequenceWriter?alt=com.fasterxml.jackson.databind.SequenceWriter&text=SequenceWriter\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
