### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.getDigitalTwin*"
fullName: "com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.<T>getDigitalTwin"
name: "<T>getDigitalTwin"
nameWithType: "DigitalTwinClient.<T>getDigitalTwin"
members:
- uid: "com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.<T>getDigitalTwin(java.lang.String,java.lang.Class<T>)"
  fullName: "com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClient.<T>getDigitalTwin(String digitalTwinId, Class<T> clazz)"
  name: "<T>getDigitalTwin(String digitalTwinId, Class<T> clazz)"
  nameWithType: "DigitalTwinClient.<T>getDigitalTwin(String digitalTwinId, Class<T> clazz)"
  summary: "Gets a digital twin."
  parameters:
  - description: "The Id of the digital twin."
    name: "digitalTwinId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The class to deserialize the application/json into."
    name: "clazz"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public T <T>getDigitalTwin(String digitalTwinId, Class<T> clazz)"
  returns:
    description: "The application/json of the digital twin."
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.digitaltwin"
artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.2.0
