### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  id: LeaseStoreManagerImpl
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation
  children:
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.LeaseStoreManagerImpl()
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.acquire(com.azure.cosmos.implementation.changefeed.Lease)
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.acquireInitializationLock(java.time.Duration)
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.build()
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.builder()
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.checkpoint(com.azure.cosmos.implementation.changefeed.Lease,java.lang.String)
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.createLeaseIfNotExist(java.lang.String,java.lang.String)
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.delete(com.azure.cosmos.implementation.changefeed.Lease)
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.getAllLeases()
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.getOwnedLeases()
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.hostName(java.lang.String)
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.isInitialized()
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leaseCollectionLink(com.azure.cosmos.CosmosAsyncContainer)
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leaseContextClient(com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient)
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leasePrefix(java.lang.String)
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.markInitialized()
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.release(com.azure.cosmos.implementation.changefeed.Lease)
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.releaseInitializationLock()
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.renew(com.azure.cosmos.implementation.changefeed.Lease)
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.requestOptionsFactory(com.azure.cosmos.implementation.changefeed.RequestOptionsFactory)
  - com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.updateProperties(com.azure.cosmos.implementation.changefeed.Lease)
  langs:
  - java
  name: LeaseStoreManagerImpl
  nameWithType: LeaseStoreManagerImpl
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  type: Class
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Provides flexible way to buildAsyncClient lease manager constructor parameters. For the actual creation of lease manager instance, delegates to lease manager factory.
  syntax:
    content: public class LeaseStoreManagerImpl implements LeaseStoreManager, LeaseStoreManager.LeaseStoreManagerBuilderDefinition
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.cosmos.implementation.changefeed.LeaseStoreManager
  - com.azure.cosmos.implementation.changefeed.LeaseStoreManager.LeaseStoreManagerBuilderDefinition
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.LeaseStoreManagerImpl()
  id: LeaseStoreManagerImpl()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: LeaseStoreManagerImpl()
  nameWithType: LeaseStoreManagerImpl.LeaseStoreManagerImpl()
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.LeaseStoreManagerImpl()
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.LeaseStoreManagerImpl*
  type: Constructor
  package: com.azure.cosmos.implementation.changefeed.implementation
  syntax:
    content: public LeaseStoreManagerImpl()
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.acquire(com.azure.cosmos.implementation.changefeed.Lease)
  id: acquire(com.azure.cosmos.implementation.changefeed.Lease)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: acquire(Lease lease)
  nameWithType: LeaseStoreManagerImpl.acquire(Lease lease)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.acquire(Lease lease)
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.acquire*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Acquire ownership of the lease.
  syntax:
    content: public Mono<Lease> acquire(Lease lease)
    parameters:
    - id: lease
      type: com.azure.cosmos.implementation.changefeed.Lease
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.changefeed.Lease>
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.acquireInitializationLock(java.time.Duration)
  id: acquireInitializationLock(java.time.Duration)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: acquireInitializationLock(Duration lockExpirationTime)
  nameWithType: LeaseStoreManagerImpl.acquireInitializationLock(Duration lockExpirationTime)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.acquireInitializationLock(Duration lockExpirationTime)
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.acquireInitializationLock*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Places a lock on the lease store for initialization. Only one process may own the store for the lock time.
  syntax:
    content: public Mono<Boolean> acquireInitializationLock(Duration lockExpirationTime)
    parameters:
    - id: lockExpirationTime
      type: java.time.Duration
    return:
      type: reactor.core.publisher.Mono<java.lang.Boolean>
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.build()
  id: build()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: build()
  nameWithType: LeaseStoreManagerImpl.build()
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.build()
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.build*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  syntax:
    content: public Mono<LeaseStoreManager> build()
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.changefeed.LeaseStoreManager>
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.builder()
  id: builder()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: builder()
  nameWithType: LeaseStoreManagerImpl.builder()
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.builder()
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.builder*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  syntax:
    content: public static LeaseStoreManager.LeaseStoreManagerBuilderDefinition builder()
    return:
      type: com.azure.cosmos.implementation.changefeed.LeaseStoreManager.LeaseStoreManagerBuilderDefinition
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.checkpoint(com.azure.cosmos.implementation.changefeed.Lease,java.lang.String)
  id: checkpoint(com.azure.cosmos.implementation.changefeed.Lease,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: checkpoint(Lease lease, String continuationToken)
  nameWithType: LeaseStoreManagerImpl.checkpoint(Lease lease, String continuationToken)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.checkpoint(Lease lease, String continuationToken)
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.checkpoint*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Checkpoint the lease.
  syntax:
    content: public Mono<Lease> checkpoint(Lease lease, String continuationToken)
    parameters:
    - id: lease
      type: com.azure.cosmos.implementation.changefeed.Lease
    - id: continuationToken
      type: java.lang.String
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.changefeed.Lease>
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.createLeaseIfNotExist(java.lang.String,java.lang.String)
  id: createLeaseIfNotExist(java.lang.String,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: createLeaseIfNotExist(String leaseToken, String continuationToken)
  nameWithType: LeaseStoreManagerImpl.createLeaseIfNotExist(String leaseToken, String continuationToken)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.createLeaseIfNotExist(String leaseToken, String continuationToken)
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.createLeaseIfNotExist*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Checks whether the lease exists and creates it if it does not exist.
  syntax:
    content: public Mono<Lease> createLeaseIfNotExist(String leaseToken, String continuationToken)
    parameters:
    - id: leaseToken
      type: java.lang.String
    - id: continuationToken
      type: java.lang.String
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.changefeed.Lease>
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.delete(com.azure.cosmos.implementation.changefeed.Lease)
  id: delete(com.azure.cosmos.implementation.changefeed.Lease)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: delete(Lease lease)
  nameWithType: LeaseStoreManagerImpl.delete(Lease lease)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.delete(Lease lease)
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.delete*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: DELETE the lease.
  syntax:
    content: public Mono<Void> delete(Lease lease)
    parameters:
    - id: lease
      type: com.azure.cosmos.implementation.changefeed.Lease
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.getAllLeases()
  id: getAllLeases()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: getAllLeases()
  nameWithType: LeaseStoreManagerImpl.getAllLeases()
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.getAllLeases()
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.getAllLeases*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  syntax:
    content: public Flux<Lease> getAllLeases()
    return:
      type: reactor.core.publisher.Flux<com.azure.cosmos.implementation.changefeed.Lease>
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.getOwnedLeases()
  id: getOwnedLeases()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: getOwnedLeases()
  nameWithType: LeaseStoreManagerImpl.getOwnedLeases()
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.getOwnedLeases()
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.getOwnedLeases*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  syntax:
    content: public Flux<Lease> getOwnedLeases()
    return:
      type: reactor.core.publisher.Flux<com.azure.cosmos.implementation.changefeed.Lease>
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.hostName(java.lang.String)
  id: hostName(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: hostName(String hostName)
  nameWithType: LeaseStoreManagerImpl.hostName(String hostName)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.hostName(String hostName)
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.hostName*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  syntax:
    content: public LeaseStoreManager.LeaseStoreManagerBuilderDefinition hostName(String hostName)
    parameters:
    - id: hostName
      type: java.lang.String
    return:
      type: com.azure.cosmos.implementation.changefeed.LeaseStoreManager.LeaseStoreManagerBuilderDefinition
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.isInitialized()
  id: isInitialized()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: isInitialized()
  nameWithType: LeaseStoreManagerImpl.isInitialized()
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.isInitialized()
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.isInitialized*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  syntax:
    content: public Mono<Boolean> isInitialized()
    return:
      type: reactor.core.publisher.Mono<java.lang.Boolean>
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leaseCollectionLink(com.azure.cosmos.CosmosAsyncContainer)
  id: leaseCollectionLink(com.azure.cosmos.CosmosAsyncContainer)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: leaseCollectionLink(CosmosAsyncContainer leaseCollectionLink)
  nameWithType: LeaseStoreManagerImpl.leaseCollectionLink(CosmosAsyncContainer leaseCollectionLink)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leaseCollectionLink(CosmosAsyncContainer leaseCollectionLink)
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leaseCollectionLink*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  syntax:
    content: public LeaseStoreManager.LeaseStoreManagerBuilderDefinition leaseCollectionLink(CosmosAsyncContainer leaseCollectionLink)
    parameters:
    - id: leaseCollectionLink
      type: com.azure.cosmos.CosmosAsyncContainer
    return:
      type: com.azure.cosmos.implementation.changefeed.LeaseStoreManager.LeaseStoreManagerBuilderDefinition
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leaseContextClient(com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient)
  id: leaseContextClient(com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: leaseContextClient(ChangeFeedContextClient leaseContextClient)
  nameWithType: LeaseStoreManagerImpl.leaseContextClient(ChangeFeedContextClient leaseContextClient)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leaseContextClient(ChangeFeedContextClient leaseContextClient)
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leaseContextClient*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  syntax:
    content: public LeaseStoreManager.LeaseStoreManagerBuilderDefinition leaseContextClient(ChangeFeedContextClient leaseContextClient)
    parameters:
    - id: leaseContextClient
      type: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
    return:
      type: com.azure.cosmos.implementation.changefeed.LeaseStoreManager.LeaseStoreManagerBuilderDefinition
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leasePrefix(java.lang.String)
  id: leasePrefix(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: leasePrefix(String leasePrefix)
  nameWithType: LeaseStoreManagerImpl.leasePrefix(String leasePrefix)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leasePrefix(String leasePrefix)
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leasePrefix*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  syntax:
    content: public LeaseStoreManager.LeaseStoreManagerBuilderDefinition leasePrefix(String leasePrefix)
    parameters:
    - id: leasePrefix
      type: java.lang.String
    return:
      type: com.azure.cosmos.implementation.changefeed.LeaseStoreManager.LeaseStoreManagerBuilderDefinition
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.markInitialized()
  id: markInitialized()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: markInitialized()
  nameWithType: LeaseStoreManagerImpl.markInitialized()
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.markInitialized()
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.markInitialized*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Mark the store as initialized.
  syntax:
    content: public Mono<Boolean> markInitialized()
    return:
      type: reactor.core.publisher.Mono<java.lang.Boolean>
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.release(com.azure.cosmos.implementation.changefeed.Lease)
  id: release(com.azure.cosmos.implementation.changefeed.Lease)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: release(Lease lease)
  nameWithType: LeaseStoreManagerImpl.release(Lease lease)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.release(Lease lease)
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.release*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Release ownership of the lease.
  syntax:
    content: public Mono<Void> release(Lease lease)
    parameters:
    - id: lease
      type: com.azure.cosmos.implementation.changefeed.Lease
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.releaseInitializationLock()
  id: releaseInitializationLock()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: releaseInitializationLock()
  nameWithType: LeaseStoreManagerImpl.releaseInitializationLock()
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.releaseInitializationLock()
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.releaseInitializationLock*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Releases the lock one the lease store for initialization.
  syntax:
    content: public Mono<Boolean> releaseInitializationLock()
    return:
      type: reactor.core.publisher.Mono<java.lang.Boolean>
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.renew(com.azure.cosmos.implementation.changefeed.Lease)
  id: renew(com.azure.cosmos.implementation.changefeed.Lease)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: renew(Lease lease)
  nameWithType: LeaseStoreManagerImpl.renew(Lease lease)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.renew(Lease lease)
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.renew*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Renew the lease. Leases are periodically renewed to prevent expiration.
  syntax:
    content: public Mono<Lease> renew(Lease lease)
    parameters:
    - id: lease
      type: com.azure.cosmos.implementation.changefeed.Lease
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.changefeed.Lease>
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.requestOptionsFactory(com.azure.cosmos.implementation.changefeed.RequestOptionsFactory)
  id: requestOptionsFactory(com.azure.cosmos.implementation.changefeed.RequestOptionsFactory)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: requestOptionsFactory(RequestOptionsFactory requestOptionsFactory)
  nameWithType: LeaseStoreManagerImpl.requestOptionsFactory(RequestOptionsFactory requestOptionsFactory)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.requestOptionsFactory(RequestOptionsFactory requestOptionsFactory)
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.requestOptionsFactory*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  syntax:
    content: public LeaseStoreManager.LeaseStoreManagerBuilderDefinition requestOptionsFactory(RequestOptionsFactory requestOptionsFactory)
    parameters:
    - id: requestOptionsFactory
      type: com.azure.cosmos.implementation.changefeed.RequestOptionsFactory
    return:
      type: com.azure.cosmos.implementation.changefeed.LeaseStoreManager.LeaseStoreManagerBuilderDefinition
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.updateProperties(com.azure.cosmos.implementation.changefeed.Lease)
  id: updateProperties(com.azure.cosmos.implementation.changefeed.Lease)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl
  langs:
  - java
  name: updateProperties(Lease lease)
  nameWithType: LeaseStoreManagerImpl.updateProperties(Lease lease)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.updateProperties(Lease lease)
  overload: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.updateProperties*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: REPLACE item from the specified lease.
  syntax:
    content: public Mono<Lease> updateProperties(Lease lease)
    parameters:
    - id: lease
      type: com.azure.cosmos.implementation.changefeed.Lease
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.changefeed.Lease>
references:
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.LeaseStoreManagerImpl*
  name: LeaseStoreManagerImpl
  nameWithType: LeaseStoreManagerImpl.LeaseStoreManagerImpl
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.LeaseStoreManagerImpl
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.LeaseStoreManager.LeaseStoreManagerBuilderDefinition
  name: LeaseStoreManager.LeaseStoreManagerBuilderDefinition
  nameWithType: LeaseStoreManager.LeaseStoreManagerBuilderDefinition
  fullName: com.azure.cosmos.implementation.changefeed.LeaseStoreManager.LeaseStoreManagerBuilderDefinition
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.builder*
  name: builder
  nameWithType: LeaseStoreManagerImpl.builder
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.builder
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  name: ChangeFeedContextClient
  nameWithType: ChangeFeedContextClient
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leaseContextClient*
  name: leaseContextClient
  nameWithType: LeaseStoreManagerImpl.leaseContextClient
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leaseContextClient
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leasePrefix*
  name: leasePrefix
  nameWithType: LeaseStoreManagerImpl.leasePrefix
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leasePrefix
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.CosmosAsyncContainer
  name: CosmosAsyncContainer
  nameWithType: CosmosAsyncContainer
  fullName: com.azure.cosmos.CosmosAsyncContainer
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leaseCollectionLink*
  name: leaseCollectionLink
  nameWithType: LeaseStoreManagerImpl.leaseCollectionLink
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.leaseCollectionLink
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.RequestOptionsFactory
  name: RequestOptionsFactory
  nameWithType: RequestOptionsFactory
  fullName: com.azure.cosmos.implementation.changefeed.RequestOptionsFactory
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.requestOptionsFactory*
  name: requestOptionsFactory
  nameWithType: LeaseStoreManagerImpl.requestOptionsFactory
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.requestOptionsFactory
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.hostName*
  name: hostName
  nameWithType: LeaseStoreManagerImpl.hostName
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.hostName
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: reactor.core.publisher.Mono<com.azure.cosmos.implementation.changefeed.LeaseStoreManager>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.changefeed.LeaseStoreManager
    name: LeaseStoreManager
    fullName: com.azure.cosmos.implementation.changefeed.LeaseStoreManager
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.build*
  name: build
  nameWithType: LeaseStoreManagerImpl.build
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.build
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: reactor.core.publisher.Flux<com.azure.cosmos.implementation.changefeed.Lease>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.changefeed.Lease
    name: Lease
    fullName: com.azure.cosmos.implementation.changefeed.Lease
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.getAllLeases*
  name: getAllLeases
  nameWithType: LeaseStoreManagerImpl.getAllLeases
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.getAllLeases
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.getOwnedLeases*
  name: getOwnedLeases
  nameWithType: LeaseStoreManagerImpl.getOwnedLeases
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.getOwnedLeases
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: reactor.core.publisher.Mono<com.azure.cosmos.implementation.changefeed.Lease>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.changefeed.Lease
    name: Lease
    fullName: com.azure.cosmos.implementation.changefeed.Lease
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.createLeaseIfNotExist*
  name: createLeaseIfNotExist
  nameWithType: LeaseStoreManagerImpl.createLeaseIfNotExist
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.createLeaseIfNotExist
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.Lease
  name: Lease
  nameWithType: Lease
  fullName: com.azure.cosmos.implementation.changefeed.Lease
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.delete*
  name: delete
  nameWithType: LeaseStoreManagerImpl.delete
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.delete
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.acquire*
  name: acquire
  nameWithType: LeaseStoreManagerImpl.acquire
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.acquire
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.release*
  name: release
  nameWithType: LeaseStoreManagerImpl.release
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.release
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.renew*
  name: renew
  nameWithType: LeaseStoreManagerImpl.renew
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.renew
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.updateProperties*
  name: updateProperties
  nameWithType: LeaseStoreManagerImpl.updateProperties
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.updateProperties
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.checkpoint*
  name: checkpoint
  nameWithType: LeaseStoreManagerImpl.checkpoint
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.checkpoint
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: reactor.core.publisher.Mono<java.lang.Boolean>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.isInitialized*
  name: isInitialized
  nameWithType: LeaseStoreManagerImpl.isInitialized
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.isInitialized
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.markInitialized*
  name: markInitialized
  nameWithType: LeaseStoreManagerImpl.markInitialized
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.markInitialized
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.acquireInitializationLock*
  name: acquireInitializationLock
  nameWithType: LeaseStoreManagerImpl.acquireInitializationLock
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.acquireInitializationLock
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.releaseInitializationLock*
  name: releaseInitializationLock
  nameWithType: LeaseStoreManagerImpl.releaseInitializationLock
  fullName: com.azure.cosmos.implementation.changefeed.implementation.LeaseStoreManagerImpl.releaseInitializationLock
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.LeaseStoreManager
  name: LeaseStoreManager
  nameWithType: LeaseStoreManager
  fullName: com.azure.cosmos.implementation.changefeed.LeaseStoreManager
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.lang.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: java.lang.Boolean
