### YamlMime:JavaMember
uid: "org.slf4j.Logger.trace*"
fullName: "org.slf4j.Logger.trace"
name: "trace"
nameWithType: "Logger.trace"
members:
- uid: "org.slf4j.Logger.trace(java.lang.String)"
  fullName: "org.slf4j.Logger.trace(String msg)"
  name: "trace(String msg)"
  nameWithType: "Logger.trace(String msg)"
  summary: "Log a message at the TRACE level."
  parameters:
  - description: "the message string to be logged"
    name: "msg"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void trace(String msg)"
- uid: "org.slf4j.Logger.trace(java.lang.String,java.lang.Object)"
  fullName: "org.slf4j.Logger.trace(String format, Object arg)"
  name: "trace(String format, Object arg)"
  nameWithType: "Logger.trace(String format, Object arg)"
  summary: "Log a message at the TRACE level according to the specified format and argument.\n\nThis form avoids superfluous object creation when the logger is disabled for the TRACE level."
  parameters:
  - description: "the format string"
    name: "format"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the argument"
    name: "arg"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void trace(String format, Object arg)"
- uid: "org.slf4j.Logger.trace(java.lang.String,java.lang.Object,java.lang.Object)"
  fullName: "org.slf4j.Logger.trace(String format, Object arg1, Object arg2)"
  name: "trace(String format, Object arg1, Object arg2)"
  nameWithType: "Logger.trace(String format, Object arg1, Object arg2)"
  summary: "Log a message at the TRACE level according to the specified format and arguments.\n\nThis form avoids superfluous object creation when the logger is disabled for the TRACE level."
  parameters:
  - description: "the format string"
    name: "format"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the first argument"
    name: "arg1"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - description: "the second argument"
    name: "arg2"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void trace(String format, Object arg1, Object arg2)"
- uid: "org.slf4j.Logger.trace(java.lang.String,java.lang.Object...)"
  fullName: "org.slf4j.Logger.trace(String format, Object[] arguments)"
  name: "trace(String format, Object[] arguments)"
  nameWithType: "Logger.trace(String format, Object[] arguments)"
  summary: "Log a message at the TRACE level according to the specified format and arguments.\n\nThis form avoids superfluous string concatenation when the logger is disabled for the TRACE level. However, this variant incurs the hidden (and relatively small) cost of creating an `Object[]` before invoking the method, even if this logger is disabled for TRACE. The variants taking <xref uid=\"org.slf4j.Logger.trace(java.lang.String,java.lang.Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"one\"></xref> and <xref uid=\"org.slf4j.Logger.trace(java.lang.String,java.lang.Object,java.lang.Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"two\"></xref> arguments exist solely in order to avoid this hidden cost."
  parameters:
  - description: "the format string"
    name: "format"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "a list of 3 or more arguments"
    name: "arguments"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public abstract void trace(String format, Object[] arguments)"
- uid: "org.slf4j.Logger.trace(java.lang.String,java.lang.Throwable)"
  fullName: "org.slf4j.Logger.trace(String msg, Throwable t)"
  name: "trace(String msg, Throwable t)"
  nameWithType: "Logger.trace(String msg, Throwable t)"
  summary: "Log an exception (throwable) at the TRACE level with an accompanying message."
  parameters:
  - description: "the message accompanying the exception"
    name: "msg"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the exception (throwable) to log"
    name: "t"
    type: "<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void trace(String msg, Throwable t)"
- uid: "org.slf4j.Logger.trace(org.slf4j.Marker,java.lang.String)"
  fullName: "org.slf4j.Logger.trace(Marker marker, String msg)"
  name: "trace(Marker marker, String msg)"
  nameWithType: "Logger.trace(Marker marker, String msg)"
  summary: "Log a message with the specific Marker at the TRACE level."
  parameters:
  - description: "the marker data specific to this log statement"
    name: "marker"
    type: "<xref href=\"org.slf4j.Marker?alt=org.slf4j.Marker&text=Marker\" data-throw-if-not-resolved=\"False\" />"
  - description: "the message string to be logged"
    name: "msg"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void trace(Marker marker, String msg)"
- uid: "org.slf4j.Logger.trace(org.slf4j.Marker,java.lang.String,java.lang.Object)"
  fullName: "org.slf4j.Logger.trace(Marker marker, String format, Object arg)"
  name: "trace(Marker marker, String format, Object arg)"
  nameWithType: "Logger.trace(Marker marker, String format, Object arg)"
  summary: "This method is similar to <xref uid=\"org.slf4j.Logger.trace(java.lang.String,java.lang.Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#trace(String, Object)\"></xref> method except that the marker data is also taken into consideration."
  parameters:
  - description: "the marker data specific to this log statement"
    name: "marker"
    type: "<xref href=\"org.slf4j.Marker?alt=org.slf4j.Marker&text=Marker\" data-throw-if-not-resolved=\"False\" />"
  - description: "the format string"
    name: "format"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the argument"
    name: "arg"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void trace(Marker marker, String format, Object arg)"
- uid: "org.slf4j.Logger.trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)"
  fullName: "org.slf4j.Logger.trace(Marker marker, String format, Object arg1, Object arg2)"
  name: "trace(Marker marker, String format, Object arg1, Object arg2)"
  nameWithType: "Logger.trace(Marker marker, String format, Object arg1, Object arg2)"
  summary: "This method is similar to <xref uid=\"org.slf4j.Logger.trace(java.lang.String,java.lang.Object,java.lang.Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#trace(String, Object, Object)\"></xref> method except that the marker data is also taken into consideration."
  parameters:
  - description: "the marker data specific to this log statement"
    name: "marker"
    type: "<xref href=\"org.slf4j.Marker?alt=org.slf4j.Marker&text=Marker\" data-throw-if-not-resolved=\"False\" />"
  - description: "the format string"
    name: "format"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the first argument"
    name: "arg1"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - description: "the second argument"
    name: "arg2"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void trace(Marker marker, String format, Object arg1, Object arg2)"
- uid: "org.slf4j.Logger.trace(org.slf4j.Marker,java.lang.String,java.lang.Object...)"
  fullName: "org.slf4j.Logger.trace(Marker marker, String format, Object[] argArray)"
  name: "trace(Marker marker, String format, Object[] argArray)"
  nameWithType: "Logger.trace(Marker marker, String format, Object[] argArray)"
  summary: "This method is similar to <xref uid=\"org.slf4j.Logger.trace*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#trace(String, Object...)\"></xref> method except that the marker data is also taken into consideration."
  parameters:
  - description: "the marker data specific to this log statement"
    name: "marker"
    type: "<xref href=\"org.slf4j.Marker?alt=org.slf4j.Marker&text=Marker\" data-throw-if-not-resolved=\"False\" />"
  - description: "the format string"
    name: "format"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "an array of arguments"
    name: "argArray"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public abstract void trace(Marker marker, String format, Object[] argArray)"
- uid: "org.slf4j.Logger.trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)"
  fullName: "org.slf4j.Logger.trace(Marker marker, String msg, Throwable t)"
  name: "trace(Marker marker, String msg, Throwable t)"
  nameWithType: "Logger.trace(Marker marker, String msg, Throwable t)"
  summary: "This method is similar to <xref uid=\"org.slf4j.Logger.trace(java.lang.String,java.lang.Throwable)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#trace(String, Throwable)\"></xref> method except that the marker data is also taken into consideration."
  parameters:
  - description: "the marker data specific to this log statement"
    name: "marker"
    type: "<xref href=\"org.slf4j.Marker?alt=org.slf4j.Marker&text=Marker\" data-throw-if-not-resolved=\"False\" />"
  - description: "the message accompanying the exception"
    name: "msg"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the exception (throwable) to log"
    name: "t"
    type: "<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void trace(Marker marker, String msg, Throwable t)"
type: "method"
metadata: {}
package: "org.slf4j"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
