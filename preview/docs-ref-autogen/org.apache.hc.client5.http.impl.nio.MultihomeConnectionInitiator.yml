### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator
  id: MultihomeConnectionInitiator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio
  children:
  - org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator.MultihomeConnectionInitiator(org.apache.hc.core5.reactor.ConnectionInitiator,org.apache.hc.client5.http.DnsResolver)
  - org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator.connect(org.apache.hc.core5.net.NamedEndpoint,java.net.SocketAddress,java.net.SocketAddress,org.apache.hc.core5.util.Timeout,java.lang.Object,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.reactor.IOSession>)
  - org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator.connect(org.apache.hc.core5.net.NamedEndpoint,java.net.SocketAddress,org.apache.hc.core5.util.Timeout,java.lang.Object,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.reactor.IOSession>)
  langs:
  - java
  name: MultihomeConnectionInitiator
  nameWithType: MultihomeConnectionInitiator
  fullName: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator
  type: Class
  package: org.apache.hc.client5.http.impl.nio
  summary: Multi-home DNS aware implementation of <xref uid="org.apache.hc.core5.reactor.ConnectionInitiator" data-throw-if-not-resolved="false">ConnectionInitiator</xref>.
  syntax:
    content: public final class MultihomeConnectionInitiator implements ConnectionInitiator
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.core5.reactor.ConnectionInitiator
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator.MultihomeConnectionInitiator(org.apache.hc.core5.reactor.ConnectionInitiator,org.apache.hc.client5.http.DnsResolver)
  id: MultihomeConnectionInitiator(org.apache.hc.core5.reactor.ConnectionInitiator,org.apache.hc.client5.http.DnsResolver)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator
  langs:
  - java
  name: MultihomeConnectionInitiator(ConnectionInitiator connectionInitiator, DnsResolver dnsResolver)
  nameWithType: MultihomeConnectionInitiator.MultihomeConnectionInitiator(ConnectionInitiator connectionInitiator, DnsResolver dnsResolver)
  fullName: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator.MultihomeConnectionInitiator(ConnectionInitiator connectionInitiator, DnsResolver dnsResolver)
  overload: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator.MultihomeConnectionInitiator*
  type: Constructor
  package: org.apache.hc.client5.http.impl.nio
  syntax:
    content: public MultihomeConnectionInitiator(ConnectionInitiator connectionInitiator, DnsResolver dnsResolver)
    parameters:
    - id: connectionInitiator
      type: org.apache.hc.core5.reactor.ConnectionInitiator
    - id: dnsResolver
      type: org.apache.hc.client5.http.DnsResolver
- uid: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator.connect(org.apache.hc.core5.net.NamedEndpoint,java.net.SocketAddress,java.net.SocketAddress,org.apache.hc.core5.util.Timeout,java.lang.Object,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.reactor.IOSession>)
  id: connect(org.apache.hc.core5.net.NamedEndpoint,java.net.SocketAddress,java.net.SocketAddress,org.apache.hc.core5.util.Timeout,java.lang.Object,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.reactor.IOSession>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator
  langs:
  - java
  name: connect(NamedEndpoint remoteEndpoint, SocketAddress remoteAddress, SocketAddress localAddress, Timeout connectTimeout, Object attachment, FutureCallback<IOSession> callback)
  nameWithType: MultihomeConnectionInitiator.connect(NamedEndpoint remoteEndpoint, SocketAddress remoteAddress, SocketAddress localAddress, Timeout connectTimeout, Object attachment, FutureCallback<IOSession> callback)
  fullName: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator.connect(NamedEndpoint remoteEndpoint, SocketAddress remoteAddress, SocketAddress localAddress, Timeout connectTimeout, Object attachment, FutureCallback<IOSession> callback)
  overload: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator.connect*
  type: Method
  package: org.apache.hc.client5.http.impl.nio
  summary: >-
    Requests a connection to a remote host.


    Opening a connection to a remote host usually tends to be a time consuming process and may take a while to complete. One can monitor and control the process of session initialization by means of the <xref uid="java.util.concurrent.Future" data-throw-if-not-resolved="false">Future</xref> interface.


    There are several parameters one can use to exert a greater control over the process of session initialization:


    A non-null local socket address parameter can be used to bind the socket to a specific local address.


    An attachment object can added to the new session's context upon initialization. This object can be used to pass an initial processing state to the protocol handler.


    It is often desirable to be able to react to the completion of a session request asynchronously without having to wait for it, blocking the current thread of execution. One can optionally provide an implementation <xref uid="org.apache.hc.core5.concurrent.FutureCallback" data-throw-if-not-resolved="false">FutureCallback</xref> instance to get notified of events related to session requests, such as request completion, cancellation, failure or timeout.
  syntax:
    content: public Future<IOSession> connect(NamedEndpoint remoteEndpoint, SocketAddress remoteAddress, SocketAddress localAddress, Timeout connectTimeout, Object attachment, FutureCallback<IOSession> callback)
    parameters:
    - id: remoteEndpoint
      type: org.apache.hc.core5.net.NamedEndpoint
    - id: remoteAddress
      type: java.net.SocketAddress
    - id: localAddress
      type: java.net.SocketAddress
    - id: connectTimeout
      type: org.apache.hc.core5.util.Timeout
    - id: attachment
      type: java.lang.Object
    - id: callback
      type: org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.reactor.IOSession>
    return:
      type: java.util.concurrent.Future<org.apache.hc.core5.reactor.IOSession>
- uid: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator.connect(org.apache.hc.core5.net.NamedEndpoint,java.net.SocketAddress,org.apache.hc.core5.util.Timeout,java.lang.Object,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.reactor.IOSession>)
  id: connect(org.apache.hc.core5.net.NamedEndpoint,java.net.SocketAddress,org.apache.hc.core5.util.Timeout,java.lang.Object,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.reactor.IOSession>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator
  langs:
  - java
  name: connect(NamedEndpoint remoteEndpoint, SocketAddress localAddress, Timeout connectTimeout, Object attachment, FutureCallback<IOSession> callback)
  nameWithType: MultihomeConnectionInitiator.connect(NamedEndpoint remoteEndpoint, SocketAddress localAddress, Timeout connectTimeout, Object attachment, FutureCallback<IOSession> callback)
  fullName: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator.connect(NamedEndpoint remoteEndpoint, SocketAddress localAddress, Timeout connectTimeout, Object attachment, FutureCallback<IOSession> callback)
  overload: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator.connect*
  type: Method
  package: org.apache.hc.client5.http.impl.nio
  syntax:
    content: public Future<IOSession> connect(NamedEndpoint remoteEndpoint, SocketAddress localAddress, Timeout connectTimeout, Object attachment, FutureCallback<IOSession> callback)
    parameters:
    - id: remoteEndpoint
      type: org.apache.hc.core5.net.NamedEndpoint
    - id: localAddress
      type: java.net.SocketAddress
    - id: connectTimeout
      type: org.apache.hc.core5.util.Timeout
    - id: attachment
      type: java.lang.Object
    - id: callback
      type: org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.reactor.IOSession>
    return:
      type: java.util.concurrent.Future<org.apache.hc.core5.reactor.IOSession>
references:
- uid: org.apache.hc.core5.reactor.ConnectionInitiator
  name: ConnectionInitiator
  nameWithType: ConnectionInitiator
  fullName: org.apache.hc.core5.reactor.ConnectionInitiator
- uid: org.apache.hc.client5.http.DnsResolver
  name: DnsResolver
  nameWithType: DnsResolver
  fullName: org.apache.hc.client5.http.DnsResolver
- uid: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator.MultihomeConnectionInitiator*
  name: MultihomeConnectionInitiator
  nameWithType: MultihomeConnectionInitiator.MultihomeConnectionInitiator
  fullName: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator.MultihomeConnectionInitiator
  package: org.apache.hc.client5.http.impl.nio
- uid: org.apache.hc.core5.net.NamedEndpoint
  name: NamedEndpoint
  nameWithType: NamedEndpoint
  fullName: org.apache.hc.core5.net.NamedEndpoint
- uid: java.net.SocketAddress
  spec.java:
  - uid: java.net.SocketAddress
    name: SocketAddress
    fullName: java.net.SocketAddress
- uid: org.apache.hc.core5.util.Timeout
  name: Timeout
  nameWithType: Timeout
  fullName: org.apache.hc.core5.util.Timeout
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.reactor.IOSession>
  spec.java:
  - uid: org.apache.hc.core5.concurrent.FutureCallback
    name: FutureCallback
    fullName: org.apache.hc.core5.concurrent.FutureCallback
  - name: <
    fullName: <
  - uid: org.apache.hc.core5.reactor.IOSession
    name: IOSession
    fullName: org.apache.hc.core5.reactor.IOSession
  - name: '>'
    fullName: '>'
- uid: java.util.concurrent.Future<org.apache.hc.core5.reactor.IOSession>
  spec.java:
  - uid: java.util.concurrent.Future
    name: Future
    fullName: java.util.concurrent.Future
  - name: <
    fullName: <
  - uid: org.apache.hc.core5.reactor.IOSession
    name: IOSession
    fullName: org.apache.hc.core5.reactor.IOSession
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator.connect*
  name: connect
  nameWithType: MultihomeConnectionInitiator.connect
  fullName: org.apache.hc.client5.http.impl.nio.MultihomeConnectionInitiator.connect
  package: org.apache.hc.client5.http.impl.nio
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.apache.hc.core5.reactor.IOSession
  name: IOSession
  nameWithType: IOSession
  fullName: org.apache.hc.core5.reactor.IOSession
- uid: org.apache.hc.core5.concurrent.FutureCallback
  name: FutureCallback
  nameWithType: FutureCallback
  fullName: org.apache.hc.core5.concurrent.FutureCallback
- uid: java.util.concurrent.Future
  name: Future
  nameWithType: Future
  fullName: java.util.concurrent.Future
