### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ObjectMapper.setMixIns*"
fullName: "com.fasterxml.jackson.databind.ObjectMapper.setMixIns"
name: "setMixIns"
nameWithType: "ObjectMapper.setMixIns"
members:
- uid: "com.fasterxml.jackson.databind.ObjectMapper.setMixIns(java.util.Map<java.lang.Class<?>,java.lang.Class<?>>)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.setMixIns(Map<Class<?>,Class<?>> sourceMixins)"
  name: "setMixIns(Map<Class<?>,Class<?>> sourceMixins)"
  nameWithType: "ObjectMapper.setMixIns(Map<Class<?>,Class<?>> sourceMixins)"
  summary: "Method to use for defining mix-in annotations to use for augmenting annotations that processable (serializable / deserializable) classes have. Mixing in is done when introspecting class annotations and properties. Map passed contains keys that are target classes (ones to augment with new annotation overrides), and values that are source classes (have annotations to use for augmentation). Annotations from source classes (and their supertypes) will **override** annotations that target classes (and their super-types) have.\n\nNote that this method will CLEAR any previously defined mix-ins for this mapper."
  parameters:
  - name: "sourceMixins"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;,<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;&gt;"
  syntax: "public ObjectMapper setMixIns(Map<Class<?>,Class<?>> sourceMixins)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.ObjectMapper?alt=com.fasterxml.jackson.databind.ObjectMapper&text=ObjectMapper\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
