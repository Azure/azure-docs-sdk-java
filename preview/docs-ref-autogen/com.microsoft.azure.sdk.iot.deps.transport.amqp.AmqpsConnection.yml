### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection"
fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection"
name: "AmqpsConnection"
nameWithType: "AmqpsConnection"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.apache.qpid.proton.engine.BaseHandler?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandler?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup&text=ErrorLoggingBaseHandlerWithCleanup\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalClose(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalClose&text=onConnectionLocalClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalOpen(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalOpen&text=onConnectionLocalOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionRemoteClose(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionRemoteClose&text=onConnectionRemoteClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionRemoteOpen(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionRemoteOpen&text=onConnectionRemoteOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalClose(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalClose&text=onLinkLocalClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalOpen(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalOpen&text=onLinkLocalOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkRemoteClose(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkRemoteClose&text=onLinkRemoteClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkRemoteOpen(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkRemoteOpen&text=onLinkRemoteOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalClose(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalClose&text=onSessionLocalClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalOpen(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalOpen&text=onSessionLocalOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionRemoteClose(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionRemoteClose&text=onSessionRemoteClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionRemoteOpen(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionRemoteOpen&text=onSessionRemoteOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onTransportError(org.apache.qpid.proton.engine.Event)?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onTransportError&text=onTransportError\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
- classRef: "<xref href=\"org.apache.qpid.proton.engine.BaseHandler?alt=org.apache.qpid.proton.engine.BaseHandler&text=BaseHandler\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.add(org.apache.qpid.proton.engine.Handler)?alt=org.apache.qpid.proton.engine.BaseHandler.add&text=add\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.children()?alt=org.apache.qpid.proton.engine.BaseHandler.children&text=children\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Extendable)?alt=org.apache.qpid.proton.engine.BaseHandler.getHandler&text=getHandler\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Record)?alt=org.apache.qpid.proton.engine.BaseHandler.getHandler&text=getHandler\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.handle(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.handle&text=handle\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionBound(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionBound&text=onConnectionBound\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionFinal&text=onConnectionFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionInit&text=onConnectionInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionUnbound(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionUnbound&text=onConnectionUnbound\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onDelivery(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onDelivery&text=onDelivery\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkFinal&text=onLinkFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkFlow(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkFlow&text=onLinkFlow\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkInit&text=onLinkInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkLocalDetach(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkLocalDetach&text=onLinkLocalDetach\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteDetach(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteDetach&text=onLinkRemoteDetach\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onReactorFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onReactorFinal&text=onReactorFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onReactorInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onReactorInit&text=onReactorInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onReactorQuiesced(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onReactorQuiesced&text=onReactorQuiesced\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableError(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableError&text=onSelectableError\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableExpired(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableExpired&text=onSelectableExpired\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableFinal&text=onSelectableFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableInit&text=onSelectableInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableReadable(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableReadable&text=onSelectableReadable\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableUpdated(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableUpdated&text=onSelectableUpdated\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableWritable(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableWritable&text=onSelectableWritable\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSessionFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSessionFinal&text=onSessionFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSessionInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSessionInit&text=onSessionInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTimerTask(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTimerTask&text=onTimerTask\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransport(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransport&text=onTransport\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransportClosed(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransportClosed&text=onTransportClosed\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransportHeadClosed(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransportHeadClosed&text=onTransportHeadClosed\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransportTailClosed(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransportTailClosed&text=onTransportTailClosed\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onUnhandled(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onUnhandled&text=onUnhandled\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Extendable,org.apache.qpid.proton.engine.Handler)?alt=org.apache.qpid.proton.engine.BaseHandler.setHandler&text=setHandler\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Record,org.apache.qpid.proton.engine.Handler)?alt=org.apache.qpid.proton.engine.BaseHandler.setHandler&text=setHandler\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **AmqpsConnection**</br> extends <xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup&text=ErrorLoggingBaseHandlerWithCleanup\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.AmqpsConnection(java.lang.String,com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpDeviceOperations,javax.net.ssl.SSLContext,com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler,boolean)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.AmqpsConnection(String hostName, AmqpDeviceOperations amqpDeviceOperations, SSLContext sslContext, SaslHandler saslHandler, boolean useWebSockets)"
  name: "AmqpsConnection(String hostName, AmqpDeviceOperations amqpDeviceOperations, SSLContext sslContext, SaslHandler saslHandler, boolean useWebSockets)"
  nameWithType: "AmqpsConnection.AmqpsConnection(String hostName, AmqpDeviceOperations amqpDeviceOperations, SSLContext sslContext, SaslHandler saslHandler, boolean useWebSockets)"
  summary: "Constructor for the Amqp library"
  parameters:
  - description: "Name of the AMQP Endpoint"
    name: "hostName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Object holding details of the links used in this connection"
    name: "amqpDeviceOperations"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpDeviceOperations?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpDeviceOperations&text=AmqpDeviceOperations\" data-throw-if-not-resolved=\"False\" />"
  - description: "SSL Context to be set over TLS."
    name: "sslContext"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLContext.html\">SSLContext</a>"
  - description: "The sasl frame handler. This may be null if no sasl frames will be exchanged (When using x509\n                    authentication for example)"
    name: "saslHandler"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler&text=SaslHandler\" data-throw-if-not-resolved=\"False\" />"
  - description: "WebSockets to be used or disabled."
    name: "useWebSockets"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmqpsConnection(String hostName, AmqpDeviceOperations amqpDeviceOperations, SSLContext sslContext, SaslHandler saslHandler, boolean useWebSockets)"
  exceptions:
  - description: "This exception is thrown if for any reason constructor cannot succeed."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Constructor for the Amqp library"
methods:
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.close()"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.close()"
  name: "close()"
  nameWithType: "AmqpsConnection.close()"
  summary: "Closes the connection"
  syntax: "public void close()"
  exceptions:
  - description: "If connection could not be closed."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Closes the connection"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.isConnected()"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.isConnected()"
  name: "isConnected()"
  nameWithType: "AmqpsConnection.isConnected()"
  summary: "Returns the status of the connection"
  syntax: "public boolean isConnected()"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Exception.html\">Exception</a>"
  desc: "Returns the status of the connection"
  returns:
    description: "status of the connection"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onConnectionBound(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onConnectionBound(Event event)"
  name: "onConnectionBound(Event event)"
  nameWithType: "AmqpsConnection.onConnectionBound(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionBound(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionBound(Event event)"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onConnectionInit(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onConnectionInit(Event event)"
  name: "onConnectionInit(Event event)"
  nameWithType: "AmqpsConnection.onConnectionInit(Event event)"
  summary: "Event handler for the connection init event"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)"
  parameters:
  - description: "The Proton Event object."
    name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionInit(Event event)"
  desc: "Event handler for the connection init event"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onConnectionUnbound(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onConnectionUnbound(Event event)"
  name: "onConnectionUnbound(Event event)"
  nameWithType: "AmqpsConnection.onConnectionUnbound(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionUnbound(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionUnbound(Event event)"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onDelivery(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onDelivery(Event event)"
  name: "onDelivery(Event event)"
  nameWithType: "AmqpsConnection.onDelivery(Event event)"
  summary: "Event handler for the delivery event."
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onDelivery(org.apache.qpid.proton.engine.Event)"
  parameters:
  - description: "The Proton Event object."
    name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onDelivery(Event event)"
  desc: "Event handler for the delivery event. This method handles both sending and receiving a message."
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onLinkFlow(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onLinkFlow(Event event)"
  name: "onLinkFlow(Event event)"
  nameWithType: "AmqpsConnection.onLinkFlow(Event event)"
  summary: "Event handler for the link flow event."
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onLinkFlow(org.apache.qpid.proton.engine.Event)"
  parameters:
  - description: "The Proton Event object."
    name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onLinkFlow(Event event)"
  desc: "Event handler for the link flow event. Handles sending a single message."
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onLinkInit(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onLinkInit(Event event)"
  name: "onLinkInit(Event event)"
  nameWithType: "AmqpsConnection.onLinkInit(Event event)"
  summary: "Event handler for the link init event."
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onLinkInit(org.apache.qpid.proton.engine.Event)"
  parameters:
  - description: "The Proton Event object."
    name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onLinkInit(Event event)"
  desc: "Event handler for the link init event. Sets the proper target address on the link."
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onLinkRemoteOpen(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onLinkRemoteOpen(Event event)"
  name: "onLinkRemoteOpen(Event event)"
  nameWithType: "AmqpsConnection.onLinkRemoteOpen(Event event)"
  summary: "Event handler for the link remote open event."
  overridden: "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkRemoteOpen(org.apache.qpid.proton.engine.Event)"
  parameters:
  - description: "The Proton Event object."
    name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onLinkRemoteOpen(Event event)"
  desc: "Event handler for the link remote open event. This signifies that the <xref uid=\"org.apache.qpid.proton.reactor.Reactor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"org.apache.qpid.proton.reactor.Reactor\"></xref> is ready, so we set the connection to OPEN."
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onReactorFinal(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onReactorFinal(Event event)"
  name: "onReactorFinal(Event event)"
  nameWithType: "AmqpsConnection.onReactorFinal(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onReactorFinal(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onReactorFinal(Event event)"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onReactorInit(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onReactorInit(Event event)"
  name: "onReactorInit(Event event)"
  nameWithType: "AmqpsConnection.onReactorInit(Event event)"
  summary: "Event handler for reactor init event."
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onReactorInit(org.apache.qpid.proton.engine.Event)"
  parameters:
  - description: "Proton Event object"
    name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onReactorInit(Event event)"
  desc: "Event handler for reactor init event."
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onTransportError(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onTransportError(Event event)"
  name: "onTransportError(Event event)"
  nameWithType: "AmqpsConnection.onTransportError(Event event)"
  summary: "Event handler for the transport error event."
  overridden: "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onTransportError(org.apache.qpid.proton.engine.Event)"
  parameters:
  - description: "The Proton Event object."
    name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onTransportError(Event event)"
  desc: "Event handler for the transport error event. This triggers reconnection attempts until successful."
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onTransportHeadClosed(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.onTransportHeadClosed(Event event)"
  name: "onTransportHeadClosed(Event event)"
  nameWithType: "AmqpsConnection.onTransportHeadClosed(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onTransportHeadClosed(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onTransportHeadClosed(Event event)"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.open()"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.open()"
  name: "open()"
  nameWithType: "AmqpsConnection.open()"
  summary: "Opens the connection."
  syntax: "public void open()"
  exceptions:
  - description: "If connection could not be opened."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Opens the connection."
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.openAmqpAsync()"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.openAmqpAsync()"
  name: "openAmqpAsync()"
  nameWithType: "AmqpsConnection.openAmqpAsync()"
  summary: "Spawns another thread that attempts to open the AMQP connection."
  syntax: "public void openAmqpAsync()"
  desc: "Spawns another thread that attempts to open the AMQP connection. Use <xref uid=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.isConnected()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#isConnected()\"></xref> to check when this operation has succeeded. Do not attempt to send messages before this connection has been opened"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.sendAmqpMessage(com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.sendAmqpMessage(AmqpMessage message)"
  name: "sendAmqpMessage(AmqpMessage message)"
  nameWithType: "AmqpsConnection.sendAmqpMessage(AmqpMessage message)"
  summary: "Send message to the Amqp Endpoint"
  parameters:
  - description: "Message to be sent"
    name: "message"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpMessage&text=AmqpMessage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean sendAmqpMessage(AmqpMessage message)"
  exceptions:
  - description: "If message could not be sent."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Exception.html\">Exception</a>"
  desc: "Send message to the Amqp Endpoint"
  returns:
    description: "true if message was sent successfully, false other wise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.setListener(com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpListener)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpsConnection.setListener(AmqpListener listener)"
  name: "setListener(AmqpListener listener)"
  nameWithType: "AmqpsConnection.setListener(AmqpListener listener)"
  summary: "Sets the listener for this connection."
  parameters:
  - description: "Listener to be used for this connection."
    name: "listener"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpListener?alt=com.microsoft.azure.sdk.iot.deps.transport.amqp.AmqpListener&text=AmqpListener\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setListener(AmqpListener listener)"
  desc: "Sets the listener for this connection."
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.deps.transport.amqp"
artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
