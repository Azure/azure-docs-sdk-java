### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.models.Peerings"
fullName: "com.azure.resourcemanager.peering.models.Peerings"
name: "Peerings"
nameWithType: "Peerings"
summary: "Resource collection API of Peerings."
syntax: "public interface Peerings"
methods:
- uid: "com.azure.resourcemanager.peering.models.Peerings.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.Peerings.define(String name)"
  name: "define(String name)"
  nameWithType: "Peerings.define(String name)"
  summary: "Begins definition for a new Peering resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Peering.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new Peering resource."
  returns:
    description: "the first stage of the new Peering definition."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.Peering.DefinitionStages.Blank?alt=com.azure.resourcemanager.peering.models.Peering.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.Peerings.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.Peerings.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Peerings.deleteById(String id)"
  summary: "Deletes an existing peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Deletes an existing peering with the specified name under the given subscription and resource group."
- uid: "com.azure.resourcemanager.peering.models.Peerings.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.Peerings.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "Peerings.deleteByIdWithResponse(String id, Context context)"
  summary: "Deletes an existing peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByIdWithResponse(String id, Context context)"
  desc: "Deletes an existing peering with the specified name under the given subscription and resource group."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.Peerings.deleteByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.Peerings.deleteByResourceGroup(String resourceGroupName, String peeringName)"
  name: "deleteByResourceGroup(String resourceGroupName, String peeringName)"
  nameWithType: "Peerings.deleteByResourceGroup(String resourceGroupName, String peeringName)"
  summary: "Deletes an existing peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByResourceGroup(String resourceGroupName, String peeringName)"
  desc: "Deletes an existing peering with the specified name under the given subscription and resource group."
- uid: "com.azure.resourcemanager.peering.models.Peerings.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.Peerings.deleteWithResponse(String resourceGroupName, String peeringName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String peeringName, Context context)"
  nameWithType: "Peerings.deleteWithResponse(String resourceGroupName, String peeringName, Context context)"
  summary: "Deletes an existing peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String peeringName, Context context)"
  desc: "Deletes an existing peering with the specified name under the given subscription and resource group."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.Peerings.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.Peerings.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Peerings.getById(String id)"
  summary: "Gets an existing peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Peering getById(String id)"
  desc: "Gets an existing peering with the specified name under the given subscription and resource group."
  returns:
    description: "an existing peering with the specified name under the given subscription and resource group."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.Peering?alt=com.azure.resourcemanager.peering.models.Peering&text=Peering\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.Peerings.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.Peerings.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Peerings.getByIdWithResponse(String id, Context context)"
  summary: "Gets an existing peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Peering> getByIdWithResponse(String id, Context context)"
  desc: "Gets an existing peering with the specified name under the given subscription and resource group."
  returns:
    description: "an existing peering with the specified name under the given subscription and resource group."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.Peering?alt=com.azure.resourcemanager.peering.models.Peering&text=Peering\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.Peerings.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.Peerings.getByResourceGroup(String resourceGroupName, String peeringName)"
  name: "getByResourceGroup(String resourceGroupName, String peeringName)"
  nameWithType: "Peerings.getByResourceGroup(String resourceGroupName, String peeringName)"
  summary: "Gets an existing peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Peering getByResourceGroup(String resourceGroupName, String peeringName)"
  desc: "Gets an existing peering with the specified name under the given subscription and resource group."
  returns:
    description: "an existing peering with the specified name under the given subscription and resource group."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.Peering?alt=com.azure.resourcemanager.peering.models.Peering&text=Peering\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.Peerings.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.Peerings.getByResourceGroupWithResponse(String resourceGroupName, String peeringName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String peeringName, Context context)"
  nameWithType: "Peerings.getByResourceGroupWithResponse(String resourceGroupName, String peeringName, Context context)"
  summary: "Gets an existing peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Peering> getByResourceGroupWithResponse(String resourceGroupName, String peeringName, Context context)"
  desc: "Gets an existing peering with the specified name under the given subscription and resource group."
  returns:
    description: "an existing peering with the specified name under the given subscription and resource group."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.Peering?alt=com.azure.resourcemanager.peering.models.Peering&text=Peering\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.Peerings.list()"
  fullName: "com.azure.resourcemanager.peering.models.Peerings.list()"
  name: "list()"
  nameWithType: "Peerings.list()"
  summary: "Lists all of the peerings under the given subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<Peering> list()"
  desc: "Lists all of the peerings under the given subscription."
  returns:
    description: "the paginated list of peerings."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.Peering?alt=com.azure.resourcemanager.peering.models.Peering&text=Peering\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.Peerings.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.Peerings.list(Context context)"
  name: "list(Context context)"
  nameWithType: "Peerings.list(Context context)"
  summary: "Lists all of the peerings under the given subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Peering> list(Context context)"
  desc: "Lists all of the peerings under the given subscription."
  returns:
    description: "the paginated list of peerings."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.Peering?alt=com.azure.resourcemanager.peering.models.Peering&text=Peering\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.Peerings.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.Peerings.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "Peerings.listByResourceGroup(String resourceGroupName)"
  summary: "Lists all of the peerings under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Peering> listByResourceGroup(String resourceGroupName)"
  desc: "Lists all of the peerings under the given subscription and resource group."
  returns:
    description: "the paginated list of peerings."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.Peering?alt=com.azure.resourcemanager.peering.models.Peering&text=Peering\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.Peerings.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.Peerings.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "Peerings.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "Lists all of the peerings under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Peering> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "Lists all of the peerings under the given subscription and resource group."
  returns:
    description: "the paginated list of peerings."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.Peering?alt=com.azure.resourcemanager.peering.models.Peering&text=Peering\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Peerings."
metadata: {}
package: "com.azure.resourcemanager.peering.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
