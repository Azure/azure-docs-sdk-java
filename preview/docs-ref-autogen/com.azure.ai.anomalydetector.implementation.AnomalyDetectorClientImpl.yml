### YamlMime:ManagedReference
items:
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  id: AnomalyDetectorClientImpl
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation
  children:
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.AnomalyDetectorClientImpl(com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.SerializerAdapter,java.lang.String)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.AnomalyDetectorClientImpl(com.azure.core.http.HttpPipeline,java.lang.String)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.AnomalyDetectorClientImpl(java.lang.String)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePoint(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointAsync(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointAsync(com.azure.ai.anomalydetector.models.ChangePointDetectRequest,com.azure.core.util.Context)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointWithResponse(com.azure.ai.anomalydetector.models.ChangePointDetectRequest,com.azure.core.util.Context)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointWithResponseAsync(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointWithResponseAsync(com.azure.ai.anomalydetector.models.ChangePointDetectRequest,com.azure.core.util.Context)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeries(com.azure.ai.anomalydetector.models.DetectRequest)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesAsync(com.azure.ai.anomalydetector.models.DetectRequest)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesAsync(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesWithResponse(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesWithResponseAsync(com.azure.ai.anomalydetector.models.DetectRequest)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesWithResponseAsync(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPoint(com.azure.ai.anomalydetector.models.DetectRequest)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointAsync(com.azure.ai.anomalydetector.models.DetectRequest)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointAsync(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointWithResponse(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointWithResponseAsync(com.azure.ai.anomalydetector.models.DetectRequest)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointWithResponseAsync(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getEndpoint()
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getHttpPipeline()
  - com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getSerializerAdapter()
  langs:
  - java
  name: AnomalyDetectorClientImpl
  nameWithType: AnomalyDetectorClientImpl
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  type: Class
  package: com.azure.ai.anomalydetector.implementation
  summary: Initializes a new instance of the AnomalyDetectorClient type.
  syntax:
    content: public final class AnomalyDetectorClientImpl
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.AnomalyDetectorClientImpl(com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.SerializerAdapter,java.lang.String)
  id: AnomalyDetectorClientImpl(com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.SerializerAdapter,java.lang.String)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: AnomalyDetectorClientImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint)
  nameWithType: AnomalyDetectorClientImpl.AnomalyDetectorClientImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.AnomalyDetectorClientImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.AnomalyDetectorClientImpl*
  type: Constructor
  package: com.azure.ai.anomalydetector.implementation
  summary: Initializes an instance of AnomalyDetectorClient client.
  syntax:
    content: public AnomalyDetectorClientImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint)
    parameters:
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
      description: The HTTP pipeline to send requests through.
    - id: serializerAdapter
      type: com.azure.core.util.serializer.SerializerAdapter
      description: The serializer to serialize an object into a string.
    - id: endpoint
      type: java.lang.String
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.AnomalyDetectorClientImpl(com.azure.core.http.HttpPipeline,java.lang.String)
  id: AnomalyDetectorClientImpl(com.azure.core.http.HttpPipeline,java.lang.String)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: AnomalyDetectorClientImpl(HttpPipeline httpPipeline, String endpoint)
  nameWithType: AnomalyDetectorClientImpl.AnomalyDetectorClientImpl(HttpPipeline httpPipeline, String endpoint)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.AnomalyDetectorClientImpl(HttpPipeline httpPipeline, String endpoint)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.AnomalyDetectorClientImpl*
  type: Constructor
  package: com.azure.ai.anomalydetector.implementation
  summary: Initializes an instance of AnomalyDetectorClient client.
  syntax:
    content: public AnomalyDetectorClientImpl(HttpPipeline httpPipeline, String endpoint)
    parameters:
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
      description: The HTTP pipeline to send requests through.
    - id: endpoint
      type: java.lang.String
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.AnomalyDetectorClientImpl(java.lang.String)
  id: AnomalyDetectorClientImpl(java.lang.String)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: AnomalyDetectorClientImpl(String endpoint)
  nameWithType: AnomalyDetectorClientImpl.AnomalyDetectorClientImpl(String endpoint)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.AnomalyDetectorClientImpl(String endpoint)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.AnomalyDetectorClientImpl*
  type: Constructor
  package: com.azure.ai.anomalydetector.implementation
  summary: Initializes an instance of AnomalyDetectorClient client.
  syntax:
    content: public AnomalyDetectorClientImpl(String endpoint)
    parameters:
    - id: endpoint
      type: java.lang.String
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePoint(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  id: detectChangePoint(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectChangePoint(ChangePointDetectRequest body)
  nameWithType: AnomalyDetectorClientImpl.detectChangePoint(ChangePointDetectRequest body)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePoint(ChangePointDetectRequest body)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePoint*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: Evaluate change point score of every series point.
  syntax:
    content: public ChangePointDetectResponse detectChangePoint(ChangePointDetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.ChangePointDetectRequest
      description: >-
        Time series points and granularity is needed. Advanced model parameters can also be set in the
             request if needed.
    return:
      type: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointAsync(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  id: detectChangePointAsync(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectChangePointAsync(ChangePointDetectRequest body)
  nameWithType: AnomalyDetectorClientImpl.detectChangePointAsync(ChangePointDetectRequest body)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointAsync(ChangePointDetectRequest body)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointAsync*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: Evaluate change point score of every series point.
  syntax:
    content: public Mono<ChangePointDetectResponse> detectChangePointAsync(ChangePointDetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.ChangePointDetectRequest
      description: >-
        Time series points and granularity is needed. Advanced model parameters can also be set in the
             request if needed.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.anomalydetector.models.ChangePointDetectResponse>
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointAsync(com.azure.ai.anomalydetector.models.ChangePointDetectRequest,com.azure.core.util.Context)
  id: detectChangePointAsync(com.azure.ai.anomalydetector.models.ChangePointDetectRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectChangePointAsync(ChangePointDetectRequest body, Context context)
  nameWithType: AnomalyDetectorClientImpl.detectChangePointAsync(ChangePointDetectRequest body, Context context)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointAsync(ChangePointDetectRequest body, Context context)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointAsync*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: Evaluate change point score of every series point.
  syntax:
    content: public Mono<ChangePointDetectResponse> detectChangePointAsync(ChangePointDetectRequest body, Context context)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.ChangePointDetectRequest
      description: >-
        Time series points and granularity is needed. Advanced model parameters can also be set in the
             request if needed.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.anomalydetector.models.ChangePointDetectResponse>
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointWithResponse(com.azure.ai.anomalydetector.models.ChangePointDetectRequest,com.azure.core.util.Context)
  id: detectChangePointWithResponse(com.azure.ai.anomalydetector.models.ChangePointDetectRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectChangePointWithResponse(ChangePointDetectRequest body, Context context)
  nameWithType: AnomalyDetectorClientImpl.detectChangePointWithResponse(ChangePointDetectRequest body, Context context)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointWithResponse(ChangePointDetectRequest body, Context context)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointWithResponse*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: Evaluate change point score of every series point.
  syntax:
    content: public Response<ChangePointDetectResponse> detectChangePointWithResponse(ChangePointDetectRequest body, Context context)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.ChangePointDetectRequest
      description: >-
        Time series points and granularity is needed. Advanced model parameters can also be set in the
             request if needed.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.ChangePointDetectResponse>
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointWithResponseAsync(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  id: detectChangePointWithResponseAsync(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectChangePointWithResponseAsync(ChangePointDetectRequest body)
  nameWithType: AnomalyDetectorClientImpl.detectChangePointWithResponseAsync(ChangePointDetectRequest body)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointWithResponseAsync(ChangePointDetectRequest body)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointWithResponseAsync*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: Evaluate change point score of every series point.
  syntax:
    content: public Mono<Response<ChangePointDetectResponse>> detectChangePointWithResponseAsync(ChangePointDetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.ChangePointDetectRequest
      description: >-
        Time series points and granularity is needed. Advanced model parameters can also be set in the
             request if needed.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.ChangePointDetectResponse>>
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointWithResponseAsync(com.azure.ai.anomalydetector.models.ChangePointDetectRequest,com.azure.core.util.Context)
  id: detectChangePointWithResponseAsync(com.azure.ai.anomalydetector.models.ChangePointDetectRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectChangePointWithResponseAsync(ChangePointDetectRequest body, Context context)
  nameWithType: AnomalyDetectorClientImpl.detectChangePointWithResponseAsync(ChangePointDetectRequest body, Context context)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointWithResponseAsync(ChangePointDetectRequest body, Context context)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointWithResponseAsync*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: Evaluate change point score of every series point.
  syntax:
    content: public Mono<Response<ChangePointDetectResponse>> detectChangePointWithResponseAsync(ChangePointDetectRequest body, Context context)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.ChangePointDetectRequest
      description: >-
        Time series points and granularity is needed. Advanced model parameters can also be set in the
             request if needed.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.ChangePointDetectResponse>>
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeries(com.azure.ai.anomalydetector.models.DetectRequest)
  id: detectEntireSeries(com.azure.ai.anomalydetector.models.DetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectEntireSeries(DetectRequest body)
  nameWithType: AnomalyDetectorClientImpl.detectEntireSeries(DetectRequest body)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeries(DetectRequest body)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeries*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: This operation generates a model using an entire series, each point is detected with the same model. With this method, points before and after a certain point are used to determine whether it is an anomaly. The entire detection can give user an overall status of the time series.
  syntax:
    content: public EntireDetectResponse detectEntireSeries(DetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    return:
      type: com.azure.ai.anomalydetector.models.EntireDetectResponse
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesAsync(com.azure.ai.anomalydetector.models.DetectRequest)
  id: detectEntireSeriesAsync(com.azure.ai.anomalydetector.models.DetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectEntireSeriesAsync(DetectRequest body)
  nameWithType: AnomalyDetectorClientImpl.detectEntireSeriesAsync(DetectRequest body)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesAsync(DetectRequest body)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesAsync*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: This operation generates a model using an entire series, each point is detected with the same model. With this method, points before and after a certain point are used to determine whether it is an anomaly. The entire detection can give user an overall status of the time series.
  syntax:
    content: public Mono<EntireDetectResponse> detectEntireSeriesAsync(DetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.anomalydetector.models.EntireDetectResponse>
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesAsync(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  id: detectEntireSeriesAsync(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectEntireSeriesAsync(DetectRequest body, Context context)
  nameWithType: AnomalyDetectorClientImpl.detectEntireSeriesAsync(DetectRequest body, Context context)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesAsync(DetectRequest body, Context context)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesAsync*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: This operation generates a model using an entire series, each point is detected with the same model. With this method, points before and after a certain point are used to determine whether it is an anomaly. The entire detection can give user an overall status of the time series.
  syntax:
    content: public Mono<EntireDetectResponse> detectEntireSeriesAsync(DetectRequest body, Context context)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.anomalydetector.models.EntireDetectResponse>
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesWithResponse(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  id: detectEntireSeriesWithResponse(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectEntireSeriesWithResponse(DetectRequest body, Context context)
  nameWithType: AnomalyDetectorClientImpl.detectEntireSeriesWithResponse(DetectRequest body, Context context)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesWithResponse(DetectRequest body, Context context)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesWithResponse*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: This operation generates a model using an entire series, each point is detected with the same model. With this method, points before and after a certain point are used to determine whether it is an anomaly. The entire detection can give user an overall status of the time series.
  syntax:
    content: public Response<EntireDetectResponse> detectEntireSeriesWithResponse(DetectRequest body, Context context)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.EntireDetectResponse>
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesWithResponseAsync(com.azure.ai.anomalydetector.models.DetectRequest)
  id: detectEntireSeriesWithResponseAsync(com.azure.ai.anomalydetector.models.DetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectEntireSeriesWithResponseAsync(DetectRequest body)
  nameWithType: AnomalyDetectorClientImpl.detectEntireSeriesWithResponseAsync(DetectRequest body)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesWithResponseAsync(DetectRequest body)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesWithResponseAsync*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: This operation generates a model using an entire series, each point is detected with the same model. With this method, points before and after a certain point are used to determine whether it is an anomaly. The entire detection can give user an overall status of the time series.
  syntax:
    content: public Mono<Response<EntireDetectResponse>> detectEntireSeriesWithResponseAsync(DetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.EntireDetectResponse>>
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesWithResponseAsync(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  id: detectEntireSeriesWithResponseAsync(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectEntireSeriesWithResponseAsync(DetectRequest body, Context context)
  nameWithType: AnomalyDetectorClientImpl.detectEntireSeriesWithResponseAsync(DetectRequest body, Context context)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesWithResponseAsync(DetectRequest body, Context context)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesWithResponseAsync*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: This operation generates a model using an entire series, each point is detected with the same model. With this method, points before and after a certain point are used to determine whether it is an anomaly. The entire detection can give user an overall status of the time series.
  syntax:
    content: public Mono<Response<EntireDetectResponse>> detectEntireSeriesWithResponseAsync(DetectRequest body, Context context)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.EntireDetectResponse>>
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPoint(com.azure.ai.anomalydetector.models.DetectRequest)
  id: detectLastPoint(com.azure.ai.anomalydetector.models.DetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectLastPoint(DetectRequest body)
  nameWithType: AnomalyDetectorClientImpl.detectLastPoint(DetectRequest body)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPoint(DetectRequest body)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPoint*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: This operation generates a model using points before the latest one. With this method, only historical points are used to determine whether the target point is an anomaly. The latest point detecting operation matches the scenario of real-time monitoring of business metrics.
  syntax:
    content: public LastDetectResponse detectLastPoint(DetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    return:
      type: com.azure.ai.anomalydetector.models.LastDetectResponse
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointAsync(com.azure.ai.anomalydetector.models.DetectRequest)
  id: detectLastPointAsync(com.azure.ai.anomalydetector.models.DetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectLastPointAsync(DetectRequest body)
  nameWithType: AnomalyDetectorClientImpl.detectLastPointAsync(DetectRequest body)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointAsync(DetectRequest body)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointAsync*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: This operation generates a model using points before the latest one. With this method, only historical points are used to determine whether the target point is an anomaly. The latest point detecting operation matches the scenario of real-time monitoring of business metrics.
  syntax:
    content: public Mono<LastDetectResponse> detectLastPointAsync(DetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.anomalydetector.models.LastDetectResponse>
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointAsync(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  id: detectLastPointAsync(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectLastPointAsync(DetectRequest body, Context context)
  nameWithType: AnomalyDetectorClientImpl.detectLastPointAsync(DetectRequest body, Context context)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointAsync(DetectRequest body, Context context)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointAsync*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: This operation generates a model using points before the latest one. With this method, only historical points are used to determine whether the target point is an anomaly. The latest point detecting operation matches the scenario of real-time monitoring of business metrics.
  syntax:
    content: public Mono<LastDetectResponse> detectLastPointAsync(DetectRequest body, Context context)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.anomalydetector.models.LastDetectResponse>
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointWithResponse(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  id: detectLastPointWithResponse(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectLastPointWithResponse(DetectRequest body, Context context)
  nameWithType: AnomalyDetectorClientImpl.detectLastPointWithResponse(DetectRequest body, Context context)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointWithResponse(DetectRequest body, Context context)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointWithResponse*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: This operation generates a model using points before the latest one. With this method, only historical points are used to determine whether the target point is an anomaly. The latest point detecting operation matches the scenario of real-time monitoring of business metrics.
  syntax:
    content: public Response<LastDetectResponse> detectLastPointWithResponse(DetectRequest body, Context context)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.LastDetectResponse>
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointWithResponseAsync(com.azure.ai.anomalydetector.models.DetectRequest)
  id: detectLastPointWithResponseAsync(com.azure.ai.anomalydetector.models.DetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectLastPointWithResponseAsync(DetectRequest body)
  nameWithType: AnomalyDetectorClientImpl.detectLastPointWithResponseAsync(DetectRequest body)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointWithResponseAsync(DetectRequest body)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointWithResponseAsync*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: This operation generates a model using points before the latest one. With this method, only historical points are used to determine whether the target point is an anomaly. The latest point detecting operation matches the scenario of real-time monitoring of business metrics.
  syntax:
    content: public Mono<Response<LastDetectResponse>> detectLastPointWithResponseAsync(DetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.LastDetectResponse>>
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointWithResponseAsync(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  id: detectLastPointWithResponseAsync(com.azure.ai.anomalydetector.models.DetectRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: detectLastPointWithResponseAsync(DetectRequest body, Context context)
  nameWithType: AnomalyDetectorClientImpl.detectLastPointWithResponseAsync(DetectRequest body, Context context)
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointWithResponseAsync(DetectRequest body, Context context)
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointWithResponseAsync*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: This operation generates a model using points before the latest one. With this method, only historical points are used to determine whether the target point is an anomaly. The latest point detecting operation matches the scenario of real-time monitoring of business metrics.
  syntax:
    content: public Mono<Response<LastDetectResponse>> detectLastPointWithResponseAsync(DetectRequest body, Context context)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.LastDetectResponse>>
      description: the response.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getEndpoint()
  id: getEndpoint()
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: getEndpoint()
  nameWithType: AnomalyDetectorClientImpl.getEndpoint()
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getEndpoint()
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getEndpoint*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: 'Gets Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus2.api.cognitive.microsoft.com).'
  syntax:
    content: public String getEndpoint()
    return:
      type: java.lang.String
      description: the endpoint value.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getHttpPipeline()
  id: getHttpPipeline()
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: getHttpPipeline()
  nameWithType: AnomalyDetectorClientImpl.getHttpPipeline()
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getHttpPipeline()
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getHttpPipeline*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: Gets The HTTP pipeline to send requests through.
  syntax:
    content: public HttpPipeline getHttpPipeline()
    return:
      type: com.azure.core.http.HttpPipeline
      description: the httpPipeline value.
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getSerializerAdapter()
  id: getSerializerAdapter()
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  langs:
  - java
  name: getSerializerAdapter()
  nameWithType: AnomalyDetectorClientImpl.getSerializerAdapter()
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getSerializerAdapter()
  overload: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getSerializerAdapter*
  type: Method
  package: com.azure.ai.anomalydetector.implementation
  summary: Gets The serializer to serialize an object into a string.
  syntax:
    content: public SerializerAdapter getSerializerAdapter()
    return:
      type: com.azure.core.util.serializer.SerializerAdapter
      description: the serializerAdapter value.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.AnomalyDetectorClientImpl*
  name: AnomalyDetectorClientImpl
  nameWithType: AnomalyDetectorClientImpl.AnomalyDetectorClientImpl
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.AnomalyDetectorClientImpl
  package: com.azure.ai.anomalydetector.implementation
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: com.azure.core.util.serializer.SerializerAdapter
  spec.java:
  - uid: com.azure.core.util.serializer.SerializerAdapter
    name: SerializerAdapter
    fullName: com.azure.core.util.serializer.SerializerAdapter
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getEndpoint*
  name: getEndpoint
  nameWithType: AnomalyDetectorClientImpl.getEndpoint
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getEndpoint
  package: com.azure.ai.anomalydetector.implementation
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getHttpPipeline*
  name: getHttpPipeline
  nameWithType: AnomalyDetectorClientImpl.getHttpPipeline
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getHttpPipeline
  package: com.azure.ai.anomalydetector.implementation
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getSerializerAdapter*
  name: getSerializerAdapter
  nameWithType: AnomalyDetectorClientImpl.getSerializerAdapter
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.getSerializerAdapter
  package: com.azure.ai.anomalydetector.implementation
- uid: com.azure.ai.anomalydetector.models.DetectRequest
  name: DetectRequest
  nameWithType: DetectRequest
  fullName: com.azure.ai.anomalydetector.models.DetectRequest
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.EntireDetectResponse>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.EntireDetectResponse
    name: EntireDetectResponse
    fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesWithResponseAsync*
  name: detectEntireSeriesWithResponseAsync
  nameWithType: AnomalyDetectorClientImpl.detectEntireSeriesWithResponseAsync
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesWithResponseAsync
  package: com.azure.ai.anomalydetector.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.ai.anomalydetector.models.EntireDetectResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.EntireDetectResponse
    name: EntireDetectResponse
    fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesAsync*
  name: detectEntireSeriesAsync
  nameWithType: AnomalyDetectorClientImpl.detectEntireSeriesAsync
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesAsync
  package: com.azure.ai.anomalydetector.implementation
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse
  name: EntireDetectResponse
  nameWithType: EntireDetectResponse
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeries*
  name: detectEntireSeries
  nameWithType: AnomalyDetectorClientImpl.detectEntireSeries
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeries
  package: com.azure.ai.anomalydetector.implementation
- uid: com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.EntireDetectResponse>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.EntireDetectResponse
    name: EntireDetectResponse
    fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesWithResponse*
  name: detectEntireSeriesWithResponse
  nameWithType: AnomalyDetectorClientImpl.detectEntireSeriesWithResponse
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectEntireSeriesWithResponse
  package: com.azure.ai.anomalydetector.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.LastDetectResponse>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.LastDetectResponse
    name: LastDetectResponse
    fullName: com.azure.ai.anomalydetector.models.LastDetectResponse
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointWithResponseAsync*
  name: detectLastPointWithResponseAsync
  nameWithType: AnomalyDetectorClientImpl.detectLastPointWithResponseAsync
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointWithResponseAsync
  package: com.azure.ai.anomalydetector.implementation
- uid: reactor.core.publisher.Mono<com.azure.ai.anomalydetector.models.LastDetectResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.LastDetectResponse
    name: LastDetectResponse
    fullName: com.azure.ai.anomalydetector.models.LastDetectResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointAsync*
  name: detectLastPointAsync
  nameWithType: AnomalyDetectorClientImpl.detectLastPointAsync
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointAsync
  package: com.azure.ai.anomalydetector.implementation
- uid: com.azure.ai.anomalydetector.models.LastDetectResponse
  name: LastDetectResponse
  nameWithType: LastDetectResponse
  fullName: com.azure.ai.anomalydetector.models.LastDetectResponse
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPoint*
  name: detectLastPoint
  nameWithType: AnomalyDetectorClientImpl.detectLastPoint
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPoint
  package: com.azure.ai.anomalydetector.implementation
- uid: com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.LastDetectResponse>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.LastDetectResponse
    name: LastDetectResponse
    fullName: com.azure.ai.anomalydetector.models.LastDetectResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointWithResponse*
  name: detectLastPointWithResponse
  nameWithType: AnomalyDetectorClientImpl.detectLastPointWithResponse
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectLastPointWithResponse
  package: com.azure.ai.anomalydetector.implementation
- uid: com.azure.ai.anomalydetector.models.ChangePointDetectRequest
  name: ChangePointDetectRequest
  nameWithType: ChangePointDetectRequest
  fullName: com.azure.ai.anomalydetector.models.ChangePointDetectRequest
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.ChangePointDetectResponse>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
    name: ChangePointDetectResponse
    fullName: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointWithResponseAsync*
  name: detectChangePointWithResponseAsync
  nameWithType: AnomalyDetectorClientImpl.detectChangePointWithResponseAsync
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointWithResponseAsync
  package: com.azure.ai.anomalydetector.implementation
- uid: reactor.core.publisher.Mono<com.azure.ai.anomalydetector.models.ChangePointDetectResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
    name: ChangePointDetectResponse
    fullName: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointAsync*
  name: detectChangePointAsync
  nameWithType: AnomalyDetectorClientImpl.detectChangePointAsync
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointAsync
  package: com.azure.ai.anomalydetector.implementation
- uid: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
  name: ChangePointDetectResponse
  nameWithType: ChangePointDetectResponse
  fullName: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePoint*
  name: detectChangePoint
  nameWithType: AnomalyDetectorClientImpl.detectChangePoint
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePoint
  package: com.azure.ai.anomalydetector.implementation
- uid: com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.ChangePointDetectResponse>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
    name: ChangePointDetectResponse
    fullName: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointWithResponse*
  name: detectChangePointWithResponse
  nameWithType: AnomalyDetectorClientImpl.detectChangePointWithResponse
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointWithResponse
  package: com.azure.ai.anomalydetector.implementation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
