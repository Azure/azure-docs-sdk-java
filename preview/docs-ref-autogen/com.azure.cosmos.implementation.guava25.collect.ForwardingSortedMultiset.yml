### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  id: ForwardingSortedMultiset
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.ForwardingSortedMultiset()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.StandardDescendingMultiset
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.StandardElementSet
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.comparator()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.descendingMultiset()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.elementSet()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.firstEntry()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.headMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.lastEntry()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.pollFirstEntry()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.pollLastEntry()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardFirstEntry()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardLastEntry()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardPollFirstEntry()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardPollLastEntry()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardSubMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType,E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.subMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType,E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.tailMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  langs:
  - java
  name: ForwardingSortedMultiset<E>
  nameWithType: ForwardingSortedMultiset<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A sorted multiset which forwards all its method calls to another sorted multiset. Subclasses should override one or more methods to modify the behavior of the backing multiset as desired per the [decorator pattern][].


    **Warning:** The methods of `ForwardingSortedMultiset` forward **indiscriminately** to the methods of the delegate. For example, overriding <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.add*" data-throw-if-not-resolved="false">#add(Object, int)</xref> alone **will not** change the behavior of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.add*" data-throw-if-not-resolved="false">#add(Object)</xref>, which can lead to unexpected behavior. In this case, you should override `add(Object)` as well, either providing your own implementation, or delegating to the provided `standardAdd` method.


    **`default` method warning:** This class does *not* forward calls to `default` methods. Instead, it inherits their default implementations. When those implementations invoke methods, they invoke methods on the `ForwardingSortedMultiset`.


    The `standard` methods and any collection views they return are not guaranteed to be thread-safe, even when all of the methods that they depend on are thread-safe.



    [decorator pattern]: http://en.wikipedia.org/wiki/Decorator_pattern
  syntax:
    content: public abstract class ForwardingSortedMultiset<E> extends ForwardingMultiset<E> implements SortedMultiset<E>
    typeParameters:
    - id: E
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  implements:
  - com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.add(E,int)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.count(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.elementSet()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.equals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.hashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.remove(java.lang.Object,int)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount(E,int)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount(E,int,int)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardAdd(E)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardAddAll(java.util.Collection<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardClear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardContains(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardCount(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardEquals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardHashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardIterator()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRemove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRemoveAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRetainAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSetCount(E,int)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSetCount(E,int,int)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSize()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardToString()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.ForwardingSortedMultiset()
  id: ForwardingSortedMultiset()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  langs:
  - java
  name: ForwardingSortedMultiset()
  nameWithType: ForwardingSortedMultiset<E>.ForwardingSortedMultiset()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.ForwardingSortedMultiset()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.ForwardingSortedMultiset*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Constructor for use by subclasses.
  syntax:
    content: protected ForwardingSortedMultiset()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.comparator()
  id: comparator()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  langs:
  - java
  name: comparator()
  nameWithType: ForwardingSortedMultiset<E>.comparator()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.comparator()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.comparator*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the comparator that orders this multiset, or <xref uid="com.azure.cosmos.implementation.guava25.collect.Ordering.&lt;C&gt;natural()" data-throw-if-not-resolved="false">Ordering#natural()</xref> if the natural ordering of the elements is used.
  syntax:
    content: public Comparator<? super E> comparator()
    return:
      type: java.util.Comparator<? super E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.delegate()
  id: delegate()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  langs:
  - java
  name: delegate()
  nameWithType: ForwardingSortedMultiset<E>.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.delegate()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.delegate*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the backing delegate instance that methods are forwarded to. Abstract subclasses generally override this method with an abstract method that has a more specific return type, such as <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate" data-throw-if-not-resolved="false">ForwardingSet#delegate</xref>. Concrete subclasses override this method to supply the instance being decorated.
  syntax:
    content: protected abstract SortedMultiset<E> delegate()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.descendingMultiset()
  id: descendingMultiset()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  langs:
  - java
  name: descendingMultiset()
  nameWithType: ForwardingSortedMultiset<E>.descendingMultiset()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.descendingMultiset()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.descendingMultiset*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a descending view of this multiset. Modifications made to either map will be reflected in the other.
  syntax:
    content: public SortedMultiset<E> descendingMultiset()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.elementSet()
  id: elementSet()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  langs:
  - java
  name: elementSet()
  nameWithType: ForwardingSortedMultiset<E>.elementSet()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.elementSet()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.elementSet*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns the set of distinct elements contained in this multiset. The element set is backed by the same data as the multiset, so any change to either is immediately reflected in the other. The order of the elements in the element set is unspecified.


    If the element set supports any removal operations, these necessarily cause **all** occurrences of the removed element(s) to be removed from the multiset. Implementations are not expected to support the add operations, although this is possible.


    A common use for the element set is to find the number of distinct elements in the multiset: `elementSet().size()`.
  syntax:
    content: public NavigableSet<E> elementSet()
    return:
      type: java.util.NavigableSet<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.firstEntry()
  id: firstEntry()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  langs:
  - java
  name: firstEntry()
  nameWithType: ForwardingSortedMultiset<E>.firstEntry()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.firstEntry()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.firstEntry*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the entry of the first element in this multiset, or `null` if this multiset is empty.
  syntax:
    content: public Multiset.Entry<E> firstEntry()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.headMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  id: headMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  langs:
  - java
  name: headMultiset(E upperBound, BoundType boundType)
  nameWithType: ForwardingSortedMultiset<E>.headMultiset(E upperBound, BoundType boundType)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.headMultiset(E upperBound, BoundType boundType)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.headMultiset*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns a view of this multiset restricted to the elements less than `upperBound`, optionally including `upperBound` itself. The returned multiset is a view of this multiset, so changes to one will be reflected in the other. The returned multiset supports all operations that this multiset supports.


    The returned multiset will throw an <xref uid="" data-throw-if-not-resolved="false">IllegalArgumentException</xref> on attempts to add elements outside its range.
  syntax:
    content: public SortedMultiset<E> headMultiset(E upperBound, BoundType boundType)
    parameters:
    - id: upperBound
      type: E
    - id: boundType
      type: com.azure.cosmos.implementation.guava25.collect.BoundType
    return:
      type: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.lastEntry()
  id: lastEntry()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  langs:
  - java
  name: lastEntry()
  nameWithType: ForwardingSortedMultiset<E>.lastEntry()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.lastEntry()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.lastEntry*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the entry of the last element in this multiset, or `null` if this multiset is empty.
  syntax:
    content: public Multiset.Entry<E> lastEntry()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.pollFirstEntry()
  id: pollFirstEntry()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  langs:
  - java
  name: pollFirstEntry()
  nameWithType: ForwardingSortedMultiset<E>.pollFirstEntry()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.pollFirstEntry()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.pollFirstEntry*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns and removes the entry associated with the lowest element in this multiset, or returns `null` if this multiset is empty.
  syntax:
    content: public Multiset.Entry<E> pollFirstEntry()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.pollLastEntry()
  id: pollLastEntry()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  langs:
  - java
  name: pollLastEntry()
  nameWithType: ForwardingSortedMultiset<E>.pollLastEntry()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.pollLastEntry()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.pollLastEntry*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns and removes the entry associated with the greatest element in this multiset, or returns `null` if this multiset is empty.
  syntax:
    content: public Multiset.Entry<E> pollLastEntry()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardFirstEntry()
  id: standardFirstEntry()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  langs:
  - java
  name: standardFirstEntry()
  nameWithType: ForwardingSortedMultiset<E>.standardFirstEntry()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.standardFirstEntry()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardFirstEntry*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.firstEntry()" data-throw-if-not-resolved="false">#firstEntry()</xref> in terms of `entrySet().iterator()`.


    If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.entrySet*" data-throw-if-not-resolved="false">#entrySet()</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.firstEntry()" data-throw-if-not-resolved="false">#firstEntry()</xref> to forward to this implementation.
  syntax:
    content: protected Multiset.Entry<E> standardFirstEntry()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardLastEntry()
  id: standardLastEntry()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  langs:
  - java
  name: standardLastEntry()
  nameWithType: ForwardingSortedMultiset<E>.standardLastEntry()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.standardLastEntry()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardLastEntry*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.lastEntry()" data-throw-if-not-resolved="false">#lastEntry()</xref> in terms of `descendingMultiset().entrySet().iterator()`.


    If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.descendingMultiset" data-throw-if-not-resolved="false">#descendingMultiset</xref> or <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.entrySet*" data-throw-if-not-resolved="false">#entrySet()</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.firstEntry()" data-throw-if-not-resolved="false">#firstEntry()</xref> to forward to this implementation.
  syntax:
    content: protected Multiset.Entry<E> standardLastEntry()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardPollFirstEntry()
  id: standardPollFirstEntry()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  langs:
  - java
  name: standardPollFirstEntry()
  nameWithType: ForwardingSortedMultiset<E>.standardPollFirstEntry()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.standardPollFirstEntry()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardPollFirstEntry*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.pollFirstEntry()" data-throw-if-not-resolved="false">#pollFirstEntry()</xref> in terms of `entrySet().iterator()`.


    If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.entrySet*" data-throw-if-not-resolved="false">#entrySet()</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.pollFirstEntry()" data-throw-if-not-resolved="false">#pollFirstEntry()</xref> to forward to this implementation.
  syntax:
    content: protected Multiset.Entry<E> standardPollFirstEntry()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardPollLastEntry()
  id: standardPollLastEntry()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  langs:
  - java
  name: standardPollLastEntry()
  nameWithType: ForwardingSortedMultiset<E>.standardPollLastEntry()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.standardPollLastEntry()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardPollLastEntry*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.pollLastEntry()" data-throw-if-not-resolved="false">#pollLastEntry()</xref> in terms of `descendingMultiset().entrySet().iterator()`.


    If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.descendingMultiset()" data-throw-if-not-resolved="false">#descendingMultiset()</xref> or <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.entrySet*" data-throw-if-not-resolved="false">#entrySet()</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.pollLastEntry()" data-throw-if-not-resolved="false">#pollLastEntry()</xref> to forward to this implementation.
  syntax:
    content: protected Multiset.Entry<E> standardPollLastEntry()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardSubMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType,E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  id: standardSubMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType,E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  langs:
  - java
  name: standardSubMultiset(E lowerBound, BoundType lowerBoundType, E upperBound, BoundType upperBoundType)
  nameWithType: ForwardingSortedMultiset<E>.standardSubMultiset(E lowerBound, BoundType lowerBoundType, E upperBound, BoundType upperBoundType)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.standardSubMultiset(E lowerBound, BoundType lowerBoundType, E upperBound, BoundType upperBoundType)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardSubMultiset*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.subMultiset*" data-throw-if-not-resolved="false">#subMultiset(Object, BoundType, Object, BoundType)</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.headMultiset*" data-throw-if-not-resolved="false">headMultiset</xref> and <xref uid="#tailMultiset(Object,
     BoundType)" data-throw-if-not-resolved="false">tailMultiset</xref>.

    If you override either of these methods, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.subMultiset*" data-throw-if-not-resolved="false">#subMultiset(Object, BoundType, Object, BoundType)</xref> to forward to this implementation.
  syntax:
    content: protected SortedMultiset<E> standardSubMultiset(E lowerBound, BoundType lowerBoundType, E upperBound, BoundType upperBoundType)
    parameters:
    - id: lowerBound
      type: E
    - id: lowerBoundType
      type: com.azure.cosmos.implementation.guava25.collect.BoundType
    - id: upperBound
      type: E
    - id: upperBoundType
      type: com.azure.cosmos.implementation.guava25.collect.BoundType
    return:
      type: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.subMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType,E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  id: subMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType,E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  langs:
  - java
  name: subMultiset(E lowerBound, BoundType lowerBoundType, E upperBound, BoundType upperBoundType)
  nameWithType: ForwardingSortedMultiset<E>.subMultiset(E lowerBound, BoundType lowerBoundType, E upperBound, BoundType upperBoundType)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.subMultiset(E lowerBound, BoundType lowerBoundType, E upperBound, BoundType upperBoundType)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.subMultiset*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns a view of this multiset restricted to the range between `lowerBound` and `upperBound`. The returned multiset is a view of this multiset, so changes to one will be reflected in the other. The returned multiset supports all operations that this multiset supports.


    The returned multiset will throw an <xref uid="" data-throw-if-not-resolved="false">IllegalArgumentException</xref> on attempts to add elements outside its range.


    This method is equivalent to `tailMultiset(lowerBound, lowerBoundType).headMultiset(upperBound, upperBoundType)`.
  syntax:
    content: public SortedMultiset<E> subMultiset(E lowerBound, BoundType lowerBoundType, E upperBound, BoundType upperBoundType)
    parameters:
    - id: lowerBound
      type: E
    - id: lowerBoundType
      type: com.azure.cosmos.implementation.guava25.collect.BoundType
    - id: upperBound
      type: E
    - id: upperBoundType
      type: com.azure.cosmos.implementation.guava25.collect.BoundType
    return:
      type: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.tailMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  id: tailMultiset(E,com.azure.cosmos.implementation.guava25.collect.BoundType)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset
  langs:
  - java
  name: tailMultiset(E lowerBound, BoundType boundType)
  nameWithType: ForwardingSortedMultiset<E>.tailMultiset(E lowerBound, BoundType boundType)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.tailMultiset(E lowerBound, BoundType boundType)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.tailMultiset*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns a view of this multiset restricted to the elements greater than `lowerBound`, optionally including `lowerBound` itself. The returned multiset is a view of this multiset, so changes to one will be reflected in the other. The returned multiset supports all operations that this multiset supports.


    The returned multiset will throw an <xref uid="" data-throw-if-not-resolved="false">IllegalArgumentException</xref> on attempts to add elements outside its range.
  syntax:
    content: public SortedMultiset<E> tailMultiset(E lowerBound, BoundType boundType)
    parameters:
    - id: lowerBound
      type: E
    - id: boundType
      type: com.azure.cosmos.implementation.guava25.collect.BoundType
    return:
      type: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>
references:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.ForwardingSortedMultiset*
  name: ForwardingSortedMultiset
  nameWithType: ForwardingSortedMultiset<E>.ForwardingSortedMultiset
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.ForwardingSortedMultiset
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset<E>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
    name: SortedMultiset
    fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.delegate*
  name: delegate
  nameWithType: ForwardingSortedMultiset<E>.delegate
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.delegate
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.NavigableSet<E>
  spec.java:
  - uid: java.util.NavigableSet
    name: NavigableSet
    fullName: java.util.NavigableSet
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.elementSet*
  name: elementSet
  nameWithType: ForwardingSortedMultiset<E>.elementSet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.elementSet
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Comparator<? super E>
  spec.java:
  - uid: java.util.Comparator
    name: Comparator
    fullName: java.util.Comparator
  - name: <
    fullName: <
  - uid: '? super E'
    name: '? super E'
    fullName: '? super E'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.comparator*
  name: comparator
  nameWithType: ForwardingSortedMultiset<E>.comparator
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.comparator
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.descendingMultiset*
  name: descendingMultiset
  nameWithType: ForwardingSortedMultiset<E>.descendingMultiset
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.descendingMultiset
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry
    name: Entry
    fullName: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.firstEntry*
  name: firstEntry
  nameWithType: ForwardingSortedMultiset<E>.firstEntry
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.firstEntry
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardFirstEntry*
  name: standardFirstEntry
  nameWithType: ForwardingSortedMultiset<E>.standardFirstEntry
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.standardFirstEntry
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.lastEntry*
  name: lastEntry
  nameWithType: ForwardingSortedMultiset<E>.lastEntry
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.lastEntry
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardLastEntry*
  name: standardLastEntry
  nameWithType: ForwardingSortedMultiset<E>.standardLastEntry
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.standardLastEntry
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.pollFirstEntry*
  name: pollFirstEntry
  nameWithType: ForwardingSortedMultiset<E>.pollFirstEntry
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.pollFirstEntry
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardPollFirstEntry*
  name: standardPollFirstEntry
  nameWithType: ForwardingSortedMultiset<E>.standardPollFirstEntry
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.standardPollFirstEntry
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.pollLastEntry*
  name: pollLastEntry
  nameWithType: ForwardingSortedMultiset<E>.pollLastEntry
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.pollLastEntry
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardPollLastEntry*
  name: standardPollLastEntry
  nameWithType: ForwardingSortedMultiset<E>.standardPollLastEntry
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.standardPollLastEntry
  package: com.azure.cosmos.implementation.guava25.collect
- uid: E
  spec.java:
  - uid: E
    name: E
    fullName: E
- uid: com.azure.cosmos.implementation.guava25.collect.BoundType
  name: BoundType
  nameWithType: BoundType
  fullName: com.azure.cosmos.implementation.guava25.collect.BoundType
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.headMultiset*
  name: headMultiset
  nameWithType: ForwardingSortedMultiset<E>.headMultiset
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.headMultiset
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.subMultiset*
  name: subMultiset
  nameWithType: ForwardingSortedMultiset<E>.subMultiset
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.subMultiset
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.standardSubMultiset*
  name: standardSubMultiset
  nameWithType: ForwardingSortedMultiset<E>.standardSubMultiset
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.standardSubMultiset
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.tailMultiset*
  name: tailMultiset
  nameWithType: ForwardingSortedMultiset<E>.tailMultiset
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.tailMultiset
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>
  name: ForwardingMultiset<E>
  nameWithType: ForwardingMultiset<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount(E,int)
  name: ForwardingMultiset.setCount(E,int)
  nameWithType: ForwardingMultiset.setCount(E,int)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount(E,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.equals(java.lang.Object)
  name: ForwardingMultiset.equals(Object)
  nameWithType: ForwardingMultiset.equals(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.equals(java.lang.Object)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)
  name: ForwardingCollection.standardContainsAll(Collection<?>)
  nameWithType: ForwardingCollection.standardContainsAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.elementSet()
  name: ForwardingMultiset.elementSet()
  nameWithType: ForwardingMultiset.elementSet()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.elementSet()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)
  name: ForwardingCollection.contains(Object)
  nameWithType: ForwardingCollection.contains(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardAdd(E)
  name: ForwardingMultiset.standardAdd(E)
  nameWithType: ForwardingMultiset.standardAdd(E)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardAdd(E)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardToString()
  name: ForwardingMultiset.standardToString()
  nameWithType: ForwardingMultiset.standardToString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardToString()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.delegate()
  name: ForwardingMultiset.delegate()
  nameWithType: ForwardingMultiset.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.delegate()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardContains(java.lang.Object)
  name: ForwardingMultiset.standardContains(Object)
  nameWithType: ForwardingMultiset.standardContains(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardContains(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardEquals(java.lang.Object)
  name: ForwardingMultiset.standardEquals(Object)
  nameWithType: ForwardingMultiset.standardEquals(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardEquals(java.lang.Object)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSetCount(E,int)
  name: ForwardingMultiset.standardSetCount(E,int)
  nameWithType: ForwardingMultiset.standardSetCount(E,int)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSetCount(E,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()
  name: ForwardingCollection.isEmpty()
  nameWithType: ForwardingCollection.isEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()
  name: ForwardingCollection.clear()
  nameWithType: ForwardingCollection.clear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])
  name: ForwardingCollection.<T>toArray(T[])
  nameWithType: ForwardingCollection.<T>toArray(T[])
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.count(java.lang.Object)
  name: ForwardingMultiset.count(Object)
  nameWithType: ForwardingMultiset.count(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.count(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()
  name: ForwardingCollection.size()
  nameWithType: ForwardingCollection.size()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRemoveAll(java.util.Collection<?>)
  name: ForwardingMultiset.standardRemoveAll(Collection<?>)
  nameWithType: ForwardingMultiset.standardRemoveAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRemoveAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()
  name: ForwardingCollection.standardIsEmpty()
  nameWithType: ForwardingCollection.standardIsEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()
  name: ForwardingCollection.iterator()
  nameWithType: ForwardingCollection.iterator()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  name: ForwardingObject.toString()
  nameWithType: ForwardingObject.toString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet()
  name: ForwardingMultiset.entrySet()
  nameWithType: ForwardingMultiset.entrySet()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)
  name: ForwardingCollection.addAll(Collection<? extends E>)
  nameWithType: ForwardingCollection.addAll(Collection<? extends E>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRetainAll(java.util.Collection<?>)
  name: ForwardingMultiset.standardRetainAll(Collection<?>)
  nameWithType: ForwardingMultiset.standardRetainAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRetainAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)
  name: ForwardingCollection.remove(Object)
  nameWithType: ForwardingCollection.remove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardCount(java.lang.Object)
  name: ForwardingMultiset.standardCount(Object)
  nameWithType: ForwardingMultiset.standardCount(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardCount(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)
  name: ForwardingCollection.add(E)
  nameWithType: ForwardingCollection.add(E)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)
  name: ForwardingCollection.retainAll(Collection<?>)
  nameWithType: ForwardingCollection.retainAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()
  name: ForwardingCollection.standardToArray()
  nameWithType: ForwardingCollection.standardToArray()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)
  name: ForwardingCollection.containsAll(Collection<?>)
  nameWithType: ForwardingCollection.containsAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.add(E,int)
  name: ForwardingMultiset.add(E,int)
  nameWithType: ForwardingMultiset.add(E,int)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.add(E,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardHashCode()
  name: ForwardingMultiset.standardHashCode()
  nameWithType: ForwardingMultiset.standardHashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardHashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRemove(java.lang.Object)
  name: ForwardingMultiset.standardRemove(Object)
  nameWithType: ForwardingMultiset.standardRemove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRemove(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSetCount(E,int,int)
  name: ForwardingMultiset.standardSetCount(E,int,int)
  nameWithType: ForwardingMultiset.standardSetCount(E,int,int)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSetCount(E,int,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.remove(java.lang.Object,int)
  name: ForwardingMultiset.remove(Object,int)
  nameWithType: ForwardingMultiset.remove(Object,int)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.remove(java.lang.Object,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.hashCode()
  name: ForwardingMultiset.hashCode()
  nameWithType: ForwardingMultiset.hashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.hashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()
  name: ForwardingCollection.toArray()
  nameWithType: ForwardingCollection.toArray()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardAddAll(java.util.Collection<? extends E>)
  name: ForwardingMultiset.standardAddAll(Collection<? extends E>)
  nameWithType: ForwardingMultiset.standardAddAll(Collection<? extends E>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardAddAll(java.util.Collection<? extends E>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)
  name: ForwardingCollection.removeAll(Collection<?>)
  nameWithType: ForwardingCollection.removeAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSize()
  name: ForwardingMultiset.standardSize()
  nameWithType: ForwardingMultiset.standardSize()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSize()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardClear()
  name: ForwardingMultiset.standardClear()
  nameWithType: ForwardingMultiset.standardClear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardClear()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount(E,int,int)
  name: ForwardingMultiset.setCount(E,int,int)
  nameWithType: ForwardingMultiset.setCount(E,int,int)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount(E,int,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardIterator()
  name: ForwardingMultiset.standardIterator()
  nameWithType: ForwardingMultiset.standardIterator()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardIterator()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])
  name: ForwardingCollection.<T>standardToArray(T[])
  nameWithType: ForwardingCollection.<T>standardToArray(T[])
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.StandardDescendingMultiset
  name: ForwardingSortedMultiset<E>.StandardDescendingMultiset
  nameWithType: ForwardingSortedMultiset<E>.StandardDescendingMultiset
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.StandardDescendingMultiset
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.StandardElementSet
  name: ForwardingSortedMultiset<E>.StandardElementSet
  nameWithType: ForwardingSortedMultiset<E>.StandardElementSet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.StandardElementSet
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
  name: SortedMultiset
  nameWithType: SortedMultiset
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMultiset
- uid: java.util.NavigableSet
  name: NavigableSet
  nameWithType: NavigableSet
  fullName: java.util.NavigableSet
- uid: '? super E'
  name: '? super E'
  nameWithType: '? super E'
  fullName: '? super E'
- uid: java.util.Comparator
  name: Comparator
  nameWithType: Comparator
  fullName: java.util.Comparator
- uid: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry
  name: Multiset.Entry
  nameWithType: Multiset.Entry
  fullName: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  name: ForwardingMultiset
  nameWithType: ForwardingMultiset
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection
  name: ForwardingCollection.standardContainsAll(Collection
  nameWithType: ForwardingCollection.standardContainsAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: T>toArray(T[])
  name: T>toArray(T[])
  nameWithType: T>toArray(T[])
  fullName: T>toArray(T[])
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.
  name: ForwardingCollection.
  nameWithType: ForwardingCollection.
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRemoveAll(java.util.Collection
  name: ForwardingMultiset.standardRemoveAll(Collection
  nameWithType: ForwardingMultiset.standardRemoveAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRemoveAll(java.util.Collection
- uid: '? extends E>)'
  name: '? extends E>)'
  nameWithType: '? extends E>)'
  fullName: '? extends E>)'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection
  name: ForwardingCollection.addAll(Collection
  nameWithType: ForwardingCollection.addAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRetainAll(java.util.Collection
  name: ForwardingMultiset.standardRetainAll(Collection
  nameWithType: ForwardingMultiset.standardRetainAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRetainAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection
  name: ForwardingCollection.retainAll(Collection
  nameWithType: ForwardingCollection.retainAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection
  name: ForwardingCollection.containsAll(Collection
  nameWithType: ForwardingCollection.containsAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardAddAll(java.util.Collection
  name: ForwardingMultiset.standardAddAll(Collection
  nameWithType: ForwardingMultiset.standardAddAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardAddAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection
  name: ForwardingCollection.removeAll(Collection
  nameWithType: ForwardingCollection.removeAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection
- uid: T>standardToArray(T[])
  name: T>standardToArray(T[])
  nameWithType: T>standardToArray(T[])
  fullName: T>standardToArray(T[])
