### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.DeserializationContext.instantiationException*"
fullName: "com.fasterxml.jackson.databind.DeserializationContext.instantiationException"
name: "instantiationException"
nameWithType: "DeserializationContext.instantiationException"
members:
- uid: "com.fasterxml.jackson.databind.DeserializationContext.instantiationException(java.lang.Class<?>,java.lang.String)"
  fullName: "com.fasterxml.jackson.databind.DeserializationContext.instantiationException(Class<?> instClass, String msg0)"
  name: "instantiationException(Class<?> instClass, String msg0)"
  nameWithType: "DeserializationContext.instantiationException(Class<?> instClass, String msg0)"
  summary: "Helper method for constructing instantiation exception for specified type, to indicate that instantiation failed due to missing instantiator (creator; constructor or factory method).\n\nNote that most of the time this method should NOT be called; instead, <xref uid=\"com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#handleMissingInstantiator\"></xref> should be called which will call this method if necessary."
  parameters:
  - name: "instClass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "msg0"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonMappingException instantiationException(Class<?> instClass, String msg0)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.DeserializationContext.instantiationException(java.lang.Class<?>,java.lang.Throwable)"
  fullName: "com.fasterxml.jackson.databind.DeserializationContext.instantiationException(Class<?> instClass, Throwable cause)"
  name: "instantiationException(Class<?> instClass, Throwable cause)"
  nameWithType: "DeserializationContext.instantiationException(Class<?> instClass, Throwable cause)"
  summary: "Helper method for constructing instantiation exception for specified type, to indicate problem with physically constructing instance of specified class (missing constructor, exception from constructor)\n\nNote that most of the time this method should NOT be called directly; instead, <xref uid=\"com.fasterxml.jackson.databind.DeserializationContext.handleInstantiationProblem*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#handleInstantiationProblem\"></xref> should be called which will call this method if necessary."
  parameters:
  - name: "instClass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "cause"
    type: "<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonMappingException instantiationException(Class<?> instClass, Throwable cause)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
