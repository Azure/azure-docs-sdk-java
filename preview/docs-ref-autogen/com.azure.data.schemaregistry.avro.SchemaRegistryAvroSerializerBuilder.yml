### YamlMime:ManagedReference
items:
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder
  id: SchemaRegistryAvroSerializerBuilder
  artifact: com.azure:azure-data-schemaregistry-avro:1.0.0-beta.4
  parent: com.azure.data.schemaregistry.avro
  children:
  - com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.SchemaRegistryAvroSerializerBuilder()
  - com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.autoRegisterSchema(boolean)
  - com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.avroSpecificReader(boolean)
  - com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.buildSerializer()
  - com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.schemaGroup(java.lang.String)
  - com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.schemaRegistryAsyncClient(com.azure.data.schemaregistry.SchemaRegistryAsyncClient)
  langs:
  - java
  name: SchemaRegistryAvroSerializerBuilder
  nameWithType: SchemaRegistryAvroSerializerBuilder
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder
  type: Class
  package: com.azure.data.schemaregistry.avro
  summary: Builder implementation for building <xref uid="com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer" data-throw-if-not-resolved="false">SchemaRegistryAvroSerializer</xref> and <xref uid="com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer" data-throw-if-not-resolved="false">SchemaRegistryAvroSerializer</xref>
  syntax:
    content: public final class SchemaRegistryAvroSerializerBuilder
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.SchemaRegistryAvroSerializerBuilder()
  id: SchemaRegistryAvroSerializerBuilder()
  artifact: com.azure:azure-data-schemaregistry-avro:1.0.0-beta.4
  parent: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder
  langs:
  - java
  name: SchemaRegistryAvroSerializerBuilder()
  nameWithType: SchemaRegistryAvroSerializerBuilder.SchemaRegistryAvroSerializerBuilder()
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.SchemaRegistryAvroSerializerBuilder()
  overload: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.SchemaRegistryAvroSerializerBuilder*
  type: Constructor
  package: com.azure.data.schemaregistry.avro
  summary: Instantiates instance of Builder class. Supplies client defaults.
  syntax:
    content: public SchemaRegistryAvroSerializerBuilder()
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.autoRegisterSchema(boolean)
  id: autoRegisterSchema(boolean)
  artifact: com.azure:azure-data-schemaregistry-avro:1.0.0-beta.4
  parent: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder
  langs:
  - java
  name: autoRegisterSchema(boolean autoRegisterSchemas)
  nameWithType: SchemaRegistryAvroSerializerBuilder.autoRegisterSchema(boolean autoRegisterSchemas)
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.autoRegisterSchema(boolean autoRegisterSchemas)
  overload: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.autoRegisterSchema*
  type: Method
  package: com.azure.data.schemaregistry.avro
  summary: If specified true, serializer will register schemas against Azure Schema Registry service under the specified group. See Azure Schema Registry documentation for a description of schema registration behavior. If specified false, serializer will simply query the service for an existing ID given schema content. Serialization will fail if the schema has not been pre-created. Auto-registration is \*\*NOT RECOMMENDED\*\* for production scenarios.
  syntax:
    content: public SchemaRegistryAvroSerializerBuilder autoRegisterSchema(boolean autoRegisterSchemas)
    parameters:
    - id: autoRegisterSchemas
      type: boolean
      description: flag for schema auto-registration
    return:
      type: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder
      description: updated <xref uid="com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder" data-throw-if-not-resolved="false">SchemaRegistryAvroSerializerBuilder</xref> instance
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.avroSpecificReader(boolean)
  id: avroSpecificReader(boolean)
  artifact: com.azure:azure-data-schemaregistry-avro:1.0.0-beta.4
  parent: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder
  langs:
  - java
  name: avroSpecificReader(boolean avroSpecificReader)
  nameWithType: SchemaRegistryAvroSerializerBuilder.avroSpecificReader(boolean avroSpecificReader)
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.avroSpecificReader(boolean avroSpecificReader)
  overload: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.avroSpecificReader*
  type: Method
  package: com.azure.data.schemaregistry.avro
  summary: Specifies if objects should be deserialized into Avro SpecificRecords via Avro SpecificDatumReader
  syntax:
    content: public SchemaRegistryAvroSerializerBuilder avroSpecificReader(boolean avroSpecificReader)
    parameters:
    - id: avroSpecificReader
      type: boolean
      description: specific reader flag
    return:
      type: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder
      description: updated <xref uid="com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder" data-throw-if-not-resolved="false">SchemaRegistryAvroSerializerBuilder</xref> instance
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.buildSerializer()
  id: buildSerializer()
  artifact: com.azure:azure-data-schemaregistry-avro:1.0.0-beta.4
  parent: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder
  langs:
  - java
  name: buildSerializer()
  nameWithType: SchemaRegistryAvroSerializerBuilder.buildSerializer()
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.buildSerializer()
  overload: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.buildSerializer*
  type: Method
  package: com.azure.data.schemaregistry.avro
  summary: Instantiates SchemaRegistry avro serializer.
  syntax:
    content: public SchemaRegistryAvroSerializer buildSerializer()
    return:
      type: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer
      description: <xref uid="com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer" data-throw-if-not-resolved="false">SchemaRegistryAvroSerializer</xref> instance
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.schemaGroup(java.lang.String)
  id: schemaGroup(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry-avro:1.0.0-beta.4
  parent: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder
  langs:
  - java
  name: schemaGroup(String schemaGroup)
  nameWithType: SchemaRegistryAvroSerializerBuilder.schemaGroup(String schemaGroup)
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.schemaGroup(String schemaGroup)
  overload: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.schemaGroup*
  type: Method
  package: com.azure.data.schemaregistry.avro
  summary: Specifies schema group for interacting with Azure Schema Registry service. If auto-registering schemas, schema will be stored under this group. If not auto-registering, serializer will request schema ID for matching data schema under specified group.
  syntax:
    content: public SchemaRegistryAvroSerializerBuilder schemaGroup(String schemaGroup)
    parameters:
    - id: schemaGroup
      type: java.lang.String
      description: Azure Schema Registry schema group
    return:
      type: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder
      description: updated <xref uid="com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder" data-throw-if-not-resolved="false">SchemaRegistryAvroSerializerBuilder</xref> instance
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.schemaRegistryAsyncClient(com.azure.data.schemaregistry.SchemaRegistryAsyncClient)
  id: schemaRegistryAsyncClient(com.azure.data.schemaregistry.SchemaRegistryAsyncClient)
  artifact: com.azure:azure-data-schemaregistry-avro:1.0.0-beta.4
  parent: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder
  langs:
  - java
  name: schemaRegistryAsyncClient(SchemaRegistryAsyncClient schemaRegistryAsyncClient)
  nameWithType: SchemaRegistryAvroSerializerBuilder.schemaRegistryAsyncClient(SchemaRegistryAsyncClient schemaRegistryAsyncClient)
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.schemaRegistryAsyncClient(SchemaRegistryAsyncClient schemaRegistryAsyncClient)
  overload: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.schemaRegistryAsyncClient*
  type: Method
  package: com.azure.data.schemaregistry.avro
  summary: The <xref uid="com.azure.data.schemaregistry.SchemaRegistryAsyncClient" data-throw-if-not-resolved="false">SchemaRegistryAsyncClient</xref> to use to interact with the Schema Registry service.
  syntax:
    content: public SchemaRegistryAvroSerializerBuilder schemaRegistryAsyncClient(SchemaRegistryAsyncClient schemaRegistryAsyncClient)
    parameters:
    - id: schemaRegistryAsyncClient
      type: com.azure.data.schemaregistry.SchemaRegistryAsyncClient
      description: The <xref uid="com.azure.data.schemaregistry.SchemaRegistryAsyncClient" data-throw-if-not-resolved="false">SchemaRegistryAsyncClient</xref>.
    return:
      type: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder
      description: updated <xref uid="com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder" data-throw-if-not-resolved="false">SchemaRegistryAvroSerializerBuilder</xref> instance.
references:
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.SchemaRegistryAvroSerializerBuilder*
  name: SchemaRegistryAvroSerializerBuilder
  nameWithType: SchemaRegistryAvroSerializerBuilder.SchemaRegistryAvroSerializerBuilder
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.SchemaRegistryAvroSerializerBuilder
  package: com.azure.data.schemaregistry.avro
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.schemaGroup*
  name: schemaGroup
  nameWithType: SchemaRegistryAvroSerializerBuilder.schemaGroup
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.schemaGroup
  package: com.azure.data.schemaregistry.avro
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.autoRegisterSchema*
  name: autoRegisterSchema
  nameWithType: SchemaRegistryAvroSerializerBuilder.autoRegisterSchema
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.autoRegisterSchema
  package: com.azure.data.schemaregistry.avro
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.avroSpecificReader*
  name: avroSpecificReader
  nameWithType: SchemaRegistryAvroSerializerBuilder.avroSpecificReader
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.avroSpecificReader
  package: com.azure.data.schemaregistry.avro
- uid: com.azure.data.schemaregistry.SchemaRegistryAsyncClient
  spec.java:
  - uid: com.azure.data.schemaregistry.SchemaRegistryAsyncClient
    name: SchemaRegistryAsyncClient
    fullName: com.azure.data.schemaregistry.SchemaRegistryAsyncClient
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.schemaRegistryAsyncClient*
  name: schemaRegistryAsyncClient
  nameWithType: SchemaRegistryAvroSerializerBuilder.schemaRegistryAsyncClient
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.schemaRegistryAsyncClient
  package: com.azure.data.schemaregistry.avro
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer
  name: SchemaRegistryAvroSerializer
  nameWithType: SchemaRegistryAvroSerializer
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.buildSerializer*
  name: buildSerializer
  nameWithType: SchemaRegistryAvroSerializerBuilder.buildSerializer
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.buildSerializer
  package: com.azure.data.schemaregistry.avro
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
