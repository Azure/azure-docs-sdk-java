### YamlMime:JavaType
uid: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder"
fullName: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder"
name: "SchemaRegistryAvroSerializerBuilder"
nameWithType: "SchemaRegistryAvroSerializerBuilder"
summary: "Builder implementation for building <xref uid=\"com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAvroSerializer\"></xref> and <xref uid=\"com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAvroSerializer\"></xref>"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SchemaRegistryAvroSerializerBuilder"
constructors:
- uid: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.SchemaRegistryAvroSerializerBuilder()"
  fullName: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.SchemaRegistryAvroSerializerBuilder()"
  name: "SchemaRegistryAvroSerializerBuilder()"
  nameWithType: "SchemaRegistryAvroSerializerBuilder.SchemaRegistryAvroSerializerBuilder()"
  summary: "Instantiates instance of Builder class."
  syntax: "public SchemaRegistryAvroSerializerBuilder()"
  desc: "Instantiates instance of Builder class. Supplies client defaults."
methods:
- uid: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.autoRegisterSchema(boolean)"
  fullName: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.autoRegisterSchema(boolean autoRegisterSchemas)"
  name: "autoRegisterSchema(boolean autoRegisterSchemas)"
  nameWithType: "SchemaRegistryAvroSerializerBuilder.autoRegisterSchema(boolean autoRegisterSchemas)"
  summary: "If specified true, serializer will register schemas against Azure Schema Registry service under the specified group."
  parameters:
  - description: "flag for schema auto-registration"
    name: "autoRegisterSchemas"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryAvroSerializerBuilder autoRegisterSchema(boolean autoRegisterSchemas)"
  desc: "If specified true, serializer will register schemas against Azure Schema Registry service under the specified group. See Azure Schema Registry documentation for a description of schema registration behavior. If specified false, serializer will simply query the service for an existing ID given schema content. Serialization will fail if the schema has not been pre-created. Auto-registration is \\*\\*NOT RECOMMENDED\\*\\* for production scenarios."
  returns:
    description: "updated <xref uid=\"com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAvroSerializerBuilder\"></xref> instance"
    type: "<xref href=\"com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder?alt=com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder&text=SchemaRegistryAvroSerializerBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.avroSpecificReader(boolean)"
  fullName: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.avroSpecificReader(boolean avroSpecificReader)"
  name: "avroSpecificReader(boolean avroSpecificReader)"
  nameWithType: "SchemaRegistryAvroSerializerBuilder.avroSpecificReader(boolean avroSpecificReader)"
  summary: "Specifies if objects should be deserialized into Avro Specific<wbr>Records via Avro Specific<wbr>Datum<wbr>Reader"
  parameters:
  - description: "specific reader flag"
    name: "avroSpecificReader"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryAvroSerializerBuilder avroSpecificReader(boolean avroSpecificReader)"
  desc: "Specifies if objects should be deserialized into Avro SpecificRecords via Avro SpecificDatumReader"
  returns:
    description: "updated <xref uid=\"com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAvroSerializerBuilder\"></xref> instance"
    type: "<xref href=\"com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder?alt=com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder&text=SchemaRegistryAvroSerializerBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.buildSerializer()"
  fullName: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.buildSerializer()"
  name: "buildSerializer()"
  nameWithType: "SchemaRegistryAvroSerializerBuilder.buildSerializer()"
  summary: "Instantiates Schema<wbr>Registry avro serializer."
  syntax: "public SchemaRegistryAvroSerializer buildSerializer()"
  desc: "Instantiates SchemaRegistry avro serializer."
  returns:
    description: "<xref uid=\"com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAvroSerializer\"></xref> instance"
    type: "<xref href=\"com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer?alt=com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer&text=SchemaRegistryAvroSerializer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.schemaGroup(java.lang.String)"
  fullName: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.schemaGroup(String schemaGroup)"
  name: "schemaGroup(String schemaGroup)"
  nameWithType: "SchemaRegistryAvroSerializerBuilder.schemaGroup(String schemaGroup)"
  summary: "Specifies schema group for interacting with Azure Schema Registry service."
  parameters:
  - description: "Azure Schema Registry schema group"
    name: "schemaGroup"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryAvroSerializerBuilder schemaGroup(String schemaGroup)"
  desc: "Specifies schema group for interacting with Azure Schema Registry service. If auto-registering schemas, schema will be stored under this group. If not auto-registering, serializer will request schema ID for matching data schema under specified group."
  returns:
    description: "updated <xref uid=\"com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAvroSerializerBuilder\"></xref> instance"
    type: "<xref href=\"com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder?alt=com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder&text=SchemaRegistryAvroSerializerBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.schemaRegistryAsyncClient(com.azure.data.schemaregistry.SchemaRegistryAsyncClient)"
  fullName: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder.schemaRegistryAsyncClient(SchemaRegistryAsyncClient schemaRegistryAsyncClient)"
  name: "schemaRegistryAsyncClient(SchemaRegistryAsyncClient schemaRegistryAsyncClient)"
  nameWithType: "SchemaRegistryAvroSerializerBuilder.schemaRegistryAsyncClient(SchemaRegistryAsyncClient schemaRegistryAsyncClient)"
  summary: "The <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref> to use to interact with the Schema Registry service."
  parameters:
  - description: "The <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref>."
    name: "schemaRegistryAsyncClient"
    type: "<xref href=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient?alt=com.azure.data.schemaregistry.SchemaRegistryAsyncClient&text=SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryAvroSerializerBuilder schemaRegistryAsyncClient(SchemaRegistryAsyncClient schemaRegistryAsyncClient)"
  desc: "The <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref> to use to interact with the Schema Registry service."
  returns:
    description: "updated <xref uid=\"com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAvroSerializerBuilder\"></xref> instance."
    type: "<xref href=\"com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder?alt=com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializerBuilder&text=SchemaRegistryAvroSerializerBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Builder implementation for building <xref uid=\"com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAvroSerializer\"></xref> and <xref uid=\"com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAvroSerializer\"></xref>"
metadata: {}
package: "com.azure.data.schemaregistry.avro"
artifact: com.azure:azure-data-schemaregistry-avro:1.0.0-beta.5
