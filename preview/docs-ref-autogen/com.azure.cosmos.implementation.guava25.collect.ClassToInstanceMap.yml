### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap
  id: ClassToInstanceMap
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap.<T>getInstance(java.lang.Class<T>)
  - com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap.<T>putInstance(java.lang.Class<T>,T)
  langs:
  - java
  name: ClassToInstanceMap<B>
  nameWithType: ClassToInstanceMap<B>
  fullName: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap<B>
  type: Interface
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A map, each entry of which maps a Java [raw type][] to an instance of that type. In addition to implementing `Map`, the additional type-safe operations <xref uid="com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap.putInstance" data-throw-if-not-resolved="false">#putInstance</xref> and <xref uid="com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap.getInstance" data-throw-if-not-resolved="false">#getInstance</xref> are available.


    Like any other `Map`, this map may contain entries for primitive types, and a primitive type and its corresponding wrapper type may map to different values.


    See the Guava User Guide article on [ `ClassToInstanceMap`][_ClassToInstanceMap].


    To map a generic type to an instance of that type, use <xref uid="" data-throw-if-not-resolved="false">com.azure.cosmos.reflect.TypeToInstanceMap</xref> instead.



    [raw type]: http://tinyurl.com/2cmwkz

    [_ClassToInstanceMap]: https://github.com/google/guava/wiki/NewCollectionTypesExplained#classtoinstancemap
  syntax:
    content: public interface ClassToInstanceMap<B> extends Map<Class<? extends B>,B>
    typeParameters:
    - id: B
  implements:
  - java.util.Map<java.lang.Class<? extends B>,B>
- uid: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap.<T>getInstance(java.lang.Class<T>)
  id: <T>getInstance(java.lang.Class<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap
  langs:
  - java
  name: <T>getInstance(Class<T> type)
  nameWithType: ClassToInstanceMap<B>.<T>getInstance(Class<T> type)
  fullName: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap<B>.<T>getInstance(Class<T> type)
  overload: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap.getInstance*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the value the specified class is mapped to, or `null` if no entry for this class is present. This will only return a value that was bound to this specific class, not a value that may have been bound to a subtype.
  syntax:
    content: public abstract T <T>getInstance(Class<T> type)
    parameters:
    - id: type
      type: java.lang.Class<T>
    return:
      type: T
- uid: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap.<T>putInstance(java.lang.Class<T>,T)
  id: <T>putInstance(java.lang.Class<T>,T)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap
  langs:
  - java
  name: <T>putInstance(Class<T> type, T value)
  nameWithType: ClassToInstanceMap<B>.<T>putInstance(Class<T> type, T value)
  fullName: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap<B>.<T>putInstance(Class<T> type, T value)
  overload: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap.putInstance*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Maps the specified class to the specified value. Does *not* associate this value with any of the class's supertypes.
  syntax:
    content: public abstract T <T>putInstance(Class<T> type, T value)
    parameters:
    - id: type
      type: java.lang.Class<T>
    - id: value
      type: T
    return:
      type: T
      description: >-
        the value previously associated with this class (possibly <code>null</code>), or <code>
             null</code> if there was no previous entry.
references:
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap.getInstance*
  name: <T>getInstance
  nameWithType: ClassToInstanceMap<B>.<T>getInstance
  fullName: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap<B>.<T>getInstance
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap.putInstance*
  name: <T>putInstance
  nameWithType: ClassToInstanceMap<B>.<T>putInstance
  fullName: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap<B>.<T>putInstance
  package: com.azure.cosmos.implementation.guava25.collect
- uid: B
  name: B
  nameWithType: B
  fullName: B
- uid: java.util.Map<java.lang.Class<? extends B>,B>
  name: Map<Class<? extends B>,B>
  nameWithType: Map<Class<? extends B>,B>
  fullName: java.util.Map<java.lang.Class<? extends B>,B>
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: '? extends B>,B'
  name: '? extends B>,B'
  nameWithType: '? extends B>,B'
  fullName: '? extends B>,B'
