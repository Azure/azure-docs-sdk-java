### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.resolve*"
fullName: "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.resolve"
name: "resolve"
nameWithType: "StdDelegatingSerializer.resolve"
members:
- uid: "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.resolve(com.fasterxml.jackson.databind.SerializerProvider)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.resolve(SerializerProvider provider)"
  name: "resolve(SerializerProvider provider)"
  nameWithType: "StdDelegatingSerializer.resolve(SerializerProvider provider)"
  summary: "Method called after <xref uid=\"com.fasterxml.jackson.databind.SerializerProvider\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SerializerProvider\"></xref> has registered the serializer, but before it has returned it to the caller. Called object can then resolve its dependencies to other types, including self-references (direct or indirect).\n\nNote that this method does NOT return serializer, since resolution is not allowed to change actual serializer to use."
  parameters:
  - name: "provider"
    type: "<xref href=\"com.fasterxml.jackson.databind.SerializerProvider?alt=com.fasterxml.jackson.databind.SerializerProvider&text=SerializerProvider\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void resolve(SerializerProvider provider)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser.std"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
