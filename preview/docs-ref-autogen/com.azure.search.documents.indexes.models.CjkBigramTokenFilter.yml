### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.indexes.models.CjkBigramTokenFilter
  id: CjkBigramTokenFilter
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models
  children:
  - com.azure.search.documents.indexes.models.CjkBigramTokenFilter.CjkBigramTokenFilter(java.lang.String)
  - com.azure.search.documents.indexes.models.CjkBigramTokenFilter.areOutputUnigrams()
  - com.azure.search.documents.indexes.models.CjkBigramTokenFilter.getIgnoreScripts()
  - com.azure.search.documents.indexes.models.CjkBigramTokenFilter.setIgnoreScripts(com.azure.search.documents.indexes.models.CjkBigramTokenFilterScripts...)
  - com.azure.search.documents.indexes.models.CjkBigramTokenFilter.setIgnoreScripts(java.util.List<com.azure.search.documents.indexes.models.CjkBigramTokenFilterScripts>)
  - com.azure.search.documents.indexes.models.CjkBigramTokenFilter.setOutputUnigrams(java.lang.Boolean)
  langs:
  - java
  name: CjkBigramTokenFilter
  nameWithType: CjkBigramTokenFilter
  fullName: com.azure.search.documents.indexes.models.CjkBigramTokenFilter
  type: Class
  package: com.azure.search.documents.indexes.models
  summary: Forms bigrams of CJK terms that are generated from the standard tokenizer. This token filter is implemented using Apache Lucene.
  syntax:
    content: public final class CjkBigramTokenFilter extends TokenFilter
  inheritance:
  - java.lang.Object
  - com.azure.search.documents.indexes.models.TokenFilter
  inheritedMembers:
  - com.azure.search.documents.indexes.models.TokenFilter.getName()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.CjkBigramTokenFilter(java.lang.String)
  id: CjkBigramTokenFilter(java.lang.String)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.CjkBigramTokenFilter
  langs:
  - java
  name: CjkBigramTokenFilter(String name)
  nameWithType: CjkBigramTokenFilter.CjkBigramTokenFilter(String name)
  fullName: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.CjkBigramTokenFilter(String name)
  overload: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.CjkBigramTokenFilter*
  type: Constructor
  package: com.azure.search.documents.indexes.models
  summary: Constructor of <xref uid="com.azure.search.documents.indexes.models.CjkBigramTokenFilter" data-throw-if-not-resolved="false">CjkBigramTokenFilter</xref>.
  syntax:
    content: public CjkBigramTokenFilter(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: >-
        The name of the token filter. It must only contain letters, digits,
         spaces, dashes or underscores, can only start and end with alphanumeric
         characters, and is limited to 128 characters.
- uid: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.areOutputUnigrams()
  id: areOutputUnigrams()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.CjkBigramTokenFilter
  langs:
  - java
  name: areOutputUnigrams()
  nameWithType: CjkBigramTokenFilter.areOutputUnigrams()
  fullName: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.areOutputUnigrams()
  overload: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.areOutputUnigrams*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the outputUnigrams property: A value indicating whether to output both unigrams and bigrams (if true), or just bigrams (if false). Default is false.'
  syntax:
    content: public Boolean areOutputUnigrams()
    return:
      type: java.lang.Boolean
      description: the outputUnigrams value.
- uid: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.getIgnoreScripts()
  id: getIgnoreScripts()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.CjkBigramTokenFilter
  langs:
  - java
  name: getIgnoreScripts()
  nameWithType: CjkBigramTokenFilter.getIgnoreScripts()
  fullName: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.getIgnoreScripts()
  overload: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.getIgnoreScripts*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the ignoreScripts property: The scripts to ignore.'
  syntax:
    content: public List<CjkBigramTokenFilterScripts> getIgnoreScripts()
    return:
      type: java.util.List<com.azure.search.documents.indexes.models.CjkBigramTokenFilterScripts>
      description: the ignoreScripts value.
- uid: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.setIgnoreScripts(com.azure.search.documents.indexes.models.CjkBigramTokenFilterScripts...)
  id: setIgnoreScripts(com.azure.search.documents.indexes.models.CjkBigramTokenFilterScripts...)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.CjkBigramTokenFilter
  langs:
  - java
  name: setIgnoreScripts(CjkBigramTokenFilterScripts[] ignoreScripts)
  nameWithType: CjkBigramTokenFilter.setIgnoreScripts(CjkBigramTokenFilterScripts[] ignoreScripts)
  fullName: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.setIgnoreScripts(CjkBigramTokenFilterScripts[] ignoreScripts)
  overload: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.setIgnoreScripts*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the ignoreScripts property: The scripts to ignore.'
  syntax:
    content: public CjkBigramTokenFilter setIgnoreScripts(CjkBigramTokenFilterScripts[] ignoreScripts)
    parameters:
    - id: ignoreScripts
      type: com.azure.search.documents.indexes.models.CjkBigramTokenFilterScripts[]
      description: the ignoreScripts value to set.
    return:
      type: com.azure.search.documents.indexes.models.CjkBigramTokenFilter
      description: the CjkBigramTokenFilter object itself.
- uid: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.setIgnoreScripts(java.util.List<com.azure.search.documents.indexes.models.CjkBigramTokenFilterScripts>)
  id: setIgnoreScripts(java.util.List<com.azure.search.documents.indexes.models.CjkBigramTokenFilterScripts>)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.CjkBigramTokenFilter
  langs:
  - java
  name: setIgnoreScripts(List<CjkBigramTokenFilterScripts> ignoreScripts)
  nameWithType: CjkBigramTokenFilter.setIgnoreScripts(List<CjkBigramTokenFilterScripts> ignoreScripts)
  fullName: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.setIgnoreScripts(List<CjkBigramTokenFilterScripts> ignoreScripts)
  overload: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.setIgnoreScripts*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the ignoreScripts property: The scripts to ignore.'
  syntax:
    content: public CjkBigramTokenFilter setIgnoreScripts(List<CjkBigramTokenFilterScripts> ignoreScripts)
    parameters:
    - id: ignoreScripts
      type: java.util.List<com.azure.search.documents.indexes.models.CjkBigramTokenFilterScripts>
      description: the ignoreScripts value to set.
    return:
      type: com.azure.search.documents.indexes.models.CjkBigramTokenFilter
      description: the CjkBigramTokenFilter object itself.
- uid: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.setOutputUnigrams(java.lang.Boolean)
  id: setOutputUnigrams(java.lang.Boolean)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.CjkBigramTokenFilter
  langs:
  - java
  name: setOutputUnigrams(Boolean outputUnigrams)
  nameWithType: CjkBigramTokenFilter.setOutputUnigrams(Boolean outputUnigrams)
  fullName: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.setOutputUnigrams(Boolean outputUnigrams)
  overload: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.setOutputUnigrams*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the outputUnigrams property: A value indicating whether to output both unigrams and bigrams (if true), or just bigrams (if false). Default is false.'
  syntax:
    content: public CjkBigramTokenFilter setOutputUnigrams(Boolean outputUnigrams)
    parameters:
    - id: outputUnigrams
      type: java.lang.Boolean
      description: the outputUnigrams value to set.
    return:
      type: com.azure.search.documents.indexes.models.CjkBigramTokenFilter
      description: the CjkBigramTokenFilter object itself.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.CjkBigramTokenFilter*
  name: CjkBigramTokenFilter
  nameWithType: CjkBigramTokenFilter.CjkBigramTokenFilter
  fullName: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.CjkBigramTokenFilter
  package: com.azure.search.documents.indexes.models
- uid: java.util.List<com.azure.search.documents.indexes.models.CjkBigramTokenFilterScripts>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.models.CjkBigramTokenFilterScripts
    name: CjkBigramTokenFilterScripts
    fullName: com.azure.search.documents.indexes.models.CjkBigramTokenFilterScripts
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.getIgnoreScripts*
  name: getIgnoreScripts
  nameWithType: CjkBigramTokenFilter.getIgnoreScripts
  fullName: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.getIgnoreScripts
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.CjkBigramTokenFilterScripts[]
  spec.java:
  - uid: com.azure.search.documents.indexes.models.CjkBigramTokenFilterScripts
    name: CjkBigramTokenFilterScripts
    fullName: com.azure.search.documents.indexes.models.CjkBigramTokenFilterScripts
  - name: '[]'
    fullName: '[]'
- uid: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.setIgnoreScripts*
  name: setIgnoreScripts
  nameWithType: CjkBigramTokenFilter.setIgnoreScripts
  fullName: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.setIgnoreScripts
  package: com.azure.search.documents.indexes.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.areOutputUnigrams*
  name: areOutputUnigrams
  nameWithType: CjkBigramTokenFilter.areOutputUnigrams
  fullName: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.areOutputUnigrams
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.setOutputUnigrams*
  name: setOutputUnigrams
  nameWithType: CjkBigramTokenFilter.setOutputUnigrams
  fullName: com.azure.search.documents.indexes.models.CjkBigramTokenFilter.setOutputUnigrams
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.TokenFilter
  name: TokenFilter
  nameWithType: TokenFilter
  fullName: com.azure.search.documents.indexes.models.TokenFilter
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.search.documents.indexes.models.TokenFilter.getName()
  name: TokenFilter.getName()
  nameWithType: TokenFilter.getName()
  fullName: com.azure.search.documents.indexes.models.TokenFilter.getName()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.search.documents.indexes.models.CjkBigramTokenFilterScripts
  name: CjkBigramTokenFilterScripts
  nameWithType: CjkBigramTokenFilterScripts
  fullName: com.azure.search.documents.indexes.models.CjkBigramTokenFilterScripts
