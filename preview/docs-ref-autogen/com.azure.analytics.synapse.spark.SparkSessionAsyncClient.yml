### YamlMime:JavaType
uid: "com.azure.analytics.synapse.spark.SparkSessionAsyncClient"
fullName: "com.azure.analytics.synapse.spark.SparkSessionAsyncClient"
name: "SparkSessionAsyncClient"
nameWithType: "SparkSessionAsyncClient"
summary: "Initializes a new instance of the asynchronous SparkClient type."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SparkSessionAsyncClient"
methods:
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.cancelSparkSession(int)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.cancelSparkSessionWithResponse(int)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.cancelSparkStatement(int,int)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.cancelSparkStatementWithResponse(int,int)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.createSparkSession(com.azure.analytics.synapse.spark.models.SparkSessionOptions)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.createSparkSession(com.azure.analytics.synapse.spark.models.SparkSessionOptions,java.lang.Boolean)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.createSparkSessionWithResponse(com.azure.analytics.synapse.spark.models.SparkSessionOptions,java.lang.Boolean)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.createSparkStatement(int,com.azure.analytics.synapse.spark.models.SparkStatementOptions)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.createSparkStatementWithResponse(int,com.azure.analytics.synapse.spark.models.SparkStatementOptions)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.getSparkSession(int)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.getSparkSession(int,java.lang.Boolean)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.getSparkSessionWithResponse(int,java.lang.Boolean)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.getSparkSessions()"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.getSparkSessions(java.lang.Integer,java.lang.Integer,java.lang.Boolean)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.getSparkSessionsWithResponse(java.lang.Integer,java.lang.Integer,java.lang.Boolean)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.getSparkStatement(int,int)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.getSparkStatementWithResponse(int,int)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.getSparkStatements(int)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.getSparkStatementsWithResponse(int)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.resetSparkSessionTimeout(int)"
- "com.azure.analytics.synapse.spark.SparkSessionAsyncClient.resetSparkSessionTimeoutWithResponse(int)"
type: "class"
metadata: {}
package: "com.azure.analytics.synapse.spark"
artifact: com.azure:azure-analytics-synapse-spark:1.0.0-beta.3
