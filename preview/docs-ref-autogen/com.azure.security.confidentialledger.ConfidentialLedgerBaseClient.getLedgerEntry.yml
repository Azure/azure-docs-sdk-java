### YamlMime:JavaMember
uid: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getLedgerEntry*"
fullName: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getLedgerEntry"
name: "getLedgerEntry"
nameWithType: "ConfidentialLedgerBaseClient.getLedgerEntry"
members:
- uid: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getLedgerEntry(java.lang.String)"
  fullName: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getLedgerEntry(String transactionId)"
  name: "getLedgerEntry(String transactionId)"
  nameWithType: "ConfidentialLedgerBaseClient.getLedgerEntry(String transactionId)"
  summary: "To return older ledger entries, the relevant sections of the ledger must be read from disk and validated. To prevent blocking within the enclave, the response will indicate whether the entry is ready and part of the response, or if the loading is still ongoing.\n\n**Optional Query Parameters**\n\n    | ----------- | ------ | ------------------ |\n    | Name        | Type   | Description        |\n    | subLedgerId | String | The sub-ledger id. |\n\n**Response Body Schema**\n\n```java\n{\n     state: String(Loading/Ready)\n     entry: {\n         contents: String\n         subLedgerId: String\n         transactionId: String\n     }\n }\n```"
  parameters:
  - description: "Identifies a write transaction."
    name: "transactionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicRequest getLedgerEntry(String transactionId)"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.security.confidentialledger"
artifact: com.azure:azure-security-confidentialledger:1.0.0-beta.2
