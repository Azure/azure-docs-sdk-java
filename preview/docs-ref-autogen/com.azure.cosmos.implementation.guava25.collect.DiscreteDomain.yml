### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.DiscreteDomain"
fullName: "com.azure.cosmos.implementation.guava25.collect.DiscreteDomain<C>"
name: "DiscreteDomain<C>"
nameWithType: "DiscreteDomain<C>"
summary: "A descriptor for a *discrete* `Comparable` domain such as all <xref uid=\"java.lang.Integer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Integer\"></xref> instances. A discrete domain is one that supports the three basic operations: <xref uid=\"com.azure.cosmos.implementation.guava25.collect.DiscreteDomain.next\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#next\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.DiscreteDomain.previous\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#previous\"></xref> and <xref uid=\"com.azure.cosmos.implementation.guava25.collect.DiscreteDomain.distance\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#distance\"></xref>, according to their specifications. The methods <xref uid=\"com.azure.cosmos.implementation.guava25.collect.DiscreteDomain.minValue\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#minValue\"></xref> and <xref uid=\"com.azure.cosmos.implementation.guava25.collect.DiscreteDomain.maxValue\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#maxValue\"></xref> should also be overridden for bounded types.\n\nA discrete domain always represents the *entire* set of values of its type; it cannot represent partial domains such as \"prime integers\" or \"strings of length 5.\"\n\nSee the Guava User Guide section on [ `DiscreteDomain`][_DiscreteDomain].\n\n\n[_DiscreteDomain]: https://github.com/google/guava/wiki/RangesExplained#discrete-domains"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class DiscreteDomain<C>"
constructors:
- "com.azure.cosmos.implementation.guava25.collect.DiscreteDomain.DiscreteDomain()"
methods:
- "com.azure.cosmos.implementation.guava25.collect.DiscreteDomain.bigIntegers()"
- "com.azure.cosmos.implementation.guava25.collect.DiscreteDomain.distance(C,C)"
- "com.azure.cosmos.implementation.guava25.collect.DiscreteDomain.integers()"
- "com.azure.cosmos.implementation.guava25.collect.DiscreteDomain.longs()"
- "com.azure.cosmos.implementation.guava25.collect.DiscreteDomain.maxValue()"
- "com.azure.cosmos.implementation.guava25.collect.DiscreteDomain.minValue()"
- "com.azure.cosmos.implementation.guava25.collect.DiscreteDomain.next(C)"
- "com.azure.cosmos.implementation.guava25.collect.DiscreteDomain.previous(C)"
type: "class"
typeParameters:
- name: "C"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
