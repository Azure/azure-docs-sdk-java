### YamlMime:JavaType
uid: "com.azure.media.videoanalyzer.edge.models.FileSink"
fullName: "com.azure.media.videoanalyzer.edge.models.FileSink"
name: "FileSink"
nameWithType: "FileSink"
summary: "File sink allows for video and audio content to be recorded on the file system on the edge device."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.media.videoanalyzer.edge.models.SinkNodeBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.media.videoanalyzer.edge.models.SinkNodeBase.getInputs()"
- "com.azure.media.videoanalyzer.edge.models.SinkNodeBase.getName()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class FileSink extends SinkNodeBase"
constructors:
- uid: "com.azure.media.videoanalyzer.edge.models.FileSink.FileSink(java.lang.String,java.util.List<com.azure.media.videoanalyzer.edge.models.NodeInput>,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.media.videoanalyzer.edge.models.FileSink.FileSink(String name, List<NodeInput> inputs, String baseDirectoryPath, String fileNamePattern, String maximumSizeMiB)"
  name: "FileSink(String name, List<NodeInput> inputs, String baseDirectoryPath, String fileNamePattern, String maximumSizeMiB)"
  nameWithType: "FileSink.FileSink(String name, List<NodeInput> inputs, String baseDirectoryPath, String fileNamePattern, String maximumSizeMiB)"
  summary: "Creates an instance of File<wbr>Sink class."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the inputs value to set."
    name: "inputs"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.media.videoanalyzer.edge.models.NodeInput?alt=com.azure.media.videoanalyzer.edge.models.NodeInput&text=NodeInput\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the baseDirectoryPath value to set."
    name: "baseDirectoryPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the fileNamePattern value to set."
    name: "fileNamePattern"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the maximumSizeMiB value to set."
    name: "maximumSizeMiB"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileSink(String name, List<NodeInput> inputs, String baseDirectoryPath, String fileNamePattern, String maximumSizeMiB)"
  desc: "Creates an instance of FileSink class."
methods:
- uid: "com.azure.media.videoanalyzer.edge.models.FileSink.getBaseDirectoryPath()"
  fullName: "com.azure.media.videoanalyzer.edge.models.FileSink.getBaseDirectoryPath()"
  name: "getBaseDirectoryPath()"
  nameWithType: "FileSink.getBaseDirectoryPath()"
  summary: "Get the base<wbr>Directory<wbr>Path property: Absolute directory path where media files will be stored."
  syntax: "public String getBaseDirectoryPath()"
  desc: "Get the baseDirectoryPath property: Absolute directory path where media files will be stored."
  returns:
    description: "the baseDirectoryPath value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.FileSink.getFileNamePattern()"
  fullName: "com.azure.media.videoanalyzer.edge.models.FileSink.getFileNamePattern()"
  name: "getFileNamePattern()"
  nameWithType: "FileSink.getFileNamePattern()"
  summary: "Get the file<wbr>Name<wbr>Pattern property: File name pattern for creating new files when performing event based recording."
  syntax: "public String getFileNamePattern()"
  desc: "Get the fileNamePattern property: File name pattern for creating new files when performing event based recording. The pattern must include at least one system variable."
  returns:
    description: "the fileNamePattern value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.FileSink.getMaximumSizeMiB()"
  fullName: "com.azure.media.videoanalyzer.edge.models.FileSink.getMaximumSizeMiB()"
  name: "getMaximumSizeMiB()"
  nameWithType: "FileSink.getMaximumSizeMiB()"
  summary: "Get the maximum<wbr>Size<wbr>MiB property: Maximum amount of disk space that can be used for storing files from this sink."
  syntax: "public String getMaximumSizeMiB()"
  desc: "Get the maximumSizeMiB property: Maximum amount of disk space that can be used for storing files from this sink. Once this limit is reached, the oldest files from this sink will be automatically deleted."
  returns:
    description: "the maximumSizeMiB value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "File sink allows for video and audio content to be recorded on the file system on the edge device."
metadata: {}
package: "com.azure.media.videoanalyzer.edge.models"
artifact: com.azure:azure-media-videoanalyzer-edge:1.0.0-beta.6
