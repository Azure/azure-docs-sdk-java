### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.AsyncDocumentClient.Builder.withTokenResolver*"
fullName: "com.azure.cosmos.implementation.AsyncDocumentClient.Builder.withTokenResolver"
name: "withTokenResolver"
nameWithType: "AsyncDocumentClient.Builder.withTokenResolver"
members:
- uid: "com.azure.cosmos.implementation.AsyncDocumentClient.Builder.withTokenResolver(com.azure.cosmos.implementation.CosmosAuthorizationTokenResolver)"
  fullName: "com.azure.cosmos.implementation.AsyncDocumentClient.Builder.withTokenResolver(CosmosAuthorizationTokenResolver cosmosAuthorizationTokenResolver)"
  name: "withTokenResolver(CosmosAuthorizationTokenResolver cosmosAuthorizationTokenResolver)"
  nameWithType: "AsyncDocumentClient.Builder.withTokenResolver(CosmosAuthorizationTokenResolver cosmosAuthorizationTokenResolver)"
  summary: "This method will accept functional interface TokenResolver which helps in generation authorization token per request. AsyncDocumentClient can be successfully initialized with this API without passing any MasterKey, ResourceToken or PermissionFeed."
  parameters:
  - description: "The tokenResolver"
    name: "cosmosAuthorizationTokenResolver"
    type: "<xref href=\"com.azure.cosmos.implementation.CosmosAuthorizationTokenResolver?alt=com.azure.cosmos.implementation.CosmosAuthorizationTokenResolver&text=CosmosAuthorizationTokenResolver\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AsyncDocumentClient.Builder withTokenResolver(CosmosAuthorizationTokenResolver cosmosAuthorizationTokenResolver)"
  returns:
    description: "current Builder."
    type: "<xref href=\"com.azure.cosmos.implementation.AsyncDocumentClient.Builder?alt=com.azure.cosmos.implementation.AsyncDocumentClient.Builder&text=Builder\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
