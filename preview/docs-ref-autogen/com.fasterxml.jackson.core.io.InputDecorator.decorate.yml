### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.io.InputDecorator.decorate*"
fullName: "com.fasterxml.jackson.core.io.InputDecorator.decorate"
name: "decorate"
nameWithType: "InputDecorator.decorate"
members:
- uid: "com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext,byte[],int,int)"
  fullName: "com.fasterxml.jackson.core.io.InputDecorator.decorate(IOContext ctxt, byte[] src, int offset, int length)"
  name: "decorate(IOContext ctxt, byte[] src, int offset, int length)"
  nameWithType: "InputDecorator.decorate(IOContext ctxt, byte[] src, int offset, int length)"
  summary: "Method called by <xref uid=\"com.fasterxml.jackson.core.JsonFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.core.JsonFactory\"></xref> instance when creating parser on given \"raw\" byte source. Method can either construct a <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref> for reading; or return null to indicate that no wrapping should occur."
  parameters:
  - description: "IO context in use (provides access to declared encoding)\n   NOTE: at this point context may not have all information initialized;\n   specifically auto-detected encoding is only available once parsing starts,\n   which may occur only after this method is called."
    name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.core.io.IOContext?alt=com.fasterxml.jackson.core.io.IOContext&text=IOContext\" data-throw-if-not-resolved=\"False\" />"
  - description: "Input buffer that contains contents to parse"
    name: "src"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "Offset of the first available byte in the input buffer"
    name: "offset"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Number of bytes available in the input buffer"
    name: "length"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract InputStream decorate(IOContext ctxt, byte[] src, int offset, int length)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Either <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref> to use as input source; or null to indicate\n   that contents are to be processed as-is by caller"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext,java.io.DataInput)"
  fullName: "com.fasterxml.jackson.core.io.InputDecorator.decorate(IOContext ctxt, DataInput input)"
  name: "decorate(IOContext ctxt, DataInput input)"
  nameWithType: "InputDecorator.decorate(IOContext ctxt, DataInput input)"
  summary: "Method called by <xref uid=\"com.fasterxml.jackson.core.JsonFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.core.JsonFactory\"></xref> instance when creating parser given an <xref uid=\"java.io.DataInput\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataInput\"></xref>, when this decorator has been registered.\n\nDefault implementation simply throws <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UnsupportedOperationException\"></xref>"
  parameters:
  - description: "IO context in use (provides access to declared encoding).\n   NOTE: at this point context may not have all information initialized;\n   specifically auto-detected encoding is only available once parsing starts,\n   which may occur only after this method is called."
    name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.core.io.IOContext?alt=com.fasterxml.jackson.core.io.IOContext&text=IOContext\" data-throw-if-not-resolved=\"False\" />"
  - description: "Original input source"
    name: "input"
    type: "<xref href=\"java.io.DataInput?alt=java.io.DataInput&text=DataInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataInput decorate(IOContext ctxt, DataInput input)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "InputStream to use; either 'input' as is, or decorator\n   version that typically delogates to 'input'"
    type: "<xref href=\"java.io.DataInput?alt=java.io.DataInput&text=DataInput\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream)"
  fullName: "com.fasterxml.jackson.core.io.InputDecorator.decorate(IOContext ctxt, InputStream in)"
  name: "decorate(IOContext ctxt, InputStream in)"
  nameWithType: "InputDecorator.decorate(IOContext ctxt, InputStream in)"
  summary: "Method called by <xref uid=\"com.fasterxml.jackson.core.JsonFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.core.JsonFactory\"></xref> instance when creating parser given an <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>, when this decorator has been registered."
  parameters:
  - description: "IO context in use (provides access to declared encoding).\n   NOTE: at this point context may not have all information initialized;\n   specifically auto-detected encoding is only available once parsing starts,\n   which may occur only after this method is called."
    name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.core.io.IOContext?alt=com.fasterxml.jackson.core.io.IOContext&text=IOContext\" data-throw-if-not-resolved=\"False\" />"
  - description: "Original input source"
    name: "in"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract InputStream decorate(IOContext ctxt, InputStream in)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "InputStream to use; either 'in' as is, or decorator\n   version that typically delogates to 'in'"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.io.InputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Reader)"
  fullName: "com.fasterxml.jackson.core.io.InputDecorator.decorate(IOContext ctxt, Reader r)"
  name: "decorate(IOContext ctxt, Reader r)"
  nameWithType: "InputDecorator.decorate(IOContext ctxt, Reader r)"
  summary: "Method called by <xref uid=\"com.fasterxml.jackson.core.JsonFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.core.JsonFactory\"></xref> instance when creating parser given an <xref uid=\"java.io.Reader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Reader\"></xref>, when this decorator has been registered."
  parameters:
  - description: "IO context in use (provides access to declared encoding)\n   NOTE: at this point context may not have all information initialized;\n   specifically auto-detected encoding is only available once parsing starts,\n   which may occur only after this method is called."
    name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.core.io.IOContext?alt=com.fasterxml.jackson.core.io.IOContext&text=IOContext\" data-throw-if-not-resolved=\"False\" />"
  - description: "Original reader"
    name: "r"
    type: "<xref href=\"java.io.Reader?alt=java.io.Reader&text=Reader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Reader decorate(IOContext ctxt, Reader r)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Reader to use; either passed in argument, or something that\n   calls it (for example, a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FilterReader\"></xref>)"
    type: "<xref href=\"java.io.Reader?alt=java.io.Reader&text=Reader\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.io"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
