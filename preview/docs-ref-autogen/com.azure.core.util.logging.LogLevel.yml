### YamlMime:JavaEnum
uid: "com.azure.core.util.logging.LogLevel"
fullName: "com.azure.core.util.logging.LogLevel"
name: "LogLevel"
nameWithType: "LogLevel"
summary: "Enum which represent logging levels used in Azure SDKs."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum LogLevel extends Enum<LogLevel>"
fields:
- uid: "com.azure.core.util.logging.LogLevel.ERROR"
  fullName: "com.azure.core.util.logging.LogLevel.ERROR"
  name: "ERROR"
  nameWithType: "LogLevel.ERROR"
  summary: "Indicates that log level is at error level."
- uid: "com.azure.core.util.logging.LogLevel.INFORMATIONAL"
  fullName: "com.azure.core.util.logging.LogLevel.INFORMATIONAL"
  name: "INFORMATIONAL"
  nameWithType: "LogLevel.INFORMATIONAL"
  summary: "Indicates that log level is at information level."
- uid: "com.azure.core.util.logging.LogLevel.NOT_SET"
  fullName: "com.azure.core.util.logging.LogLevel.NOT_SET"
  name: "NOT_SET"
  nameWithType: "LogLevel.NOT_SET"
  summary: "Indicates that no log level is set."
- uid: "com.azure.core.util.logging.LogLevel.VERBOSE"
  fullName: "com.azure.core.util.logging.LogLevel.VERBOSE"
  name: "VERBOSE"
  nameWithType: "LogLevel.VERBOSE"
  summary: "Indicates that log level is at verbose level."
- uid: "com.azure.core.util.logging.LogLevel.WARNING"
  fullName: "com.azure.core.util.logging.LogLevel.WARNING"
  name: "WARNING"
  nameWithType: "LogLevel.WARNING"
  summary: "Indicates that log level is at warning level."
methods:
- uid: "com.azure.core.util.logging.LogLevel.fromString(java.lang.String)"
  fullName: "com.azure.core.util.logging.LogLevel.fromString(String logLevelVal)"
  name: "fromString(String logLevelVal)"
  nameWithType: "LogLevel.fromString(String logLevelVal)"
  summary: "Converts the passed log level string to the corresponding <xref uid=\"com.azure.core.util.logging.LogLevel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogLevel\"></xref>."
  parameters:
  - description: "The log level value which needs to convert"
    name: "logLevelVal"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static LogLevel fromString(String logLevelVal)"
  returns:
    description: "The LogLevel Enum if pass in the valid string. \n The valid strings for <xref uid=\"com.azure.core.util.logging.LogLevel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogLevel\"></xref> are:\n <ul>\n <li>VERBOSE: \"verbose\", \"debug\"</li>\n <li>INFO: \"info\", \"information\", \"informational\"</li>\n <li>WARNING: \"warn\", \"warning\"</li>\n <li>ERROR: \"err\", \"error\"</li>\n </ul>\n Returns NOT_SET if null is passed in."
    type: "<xref href=\"com.azure.core.util.logging.LogLevel?alt=com.azure.core.util.logging.LogLevel&text=LogLevel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.logging.LogLevel.getLogLevel()"
  fullName: "com.azure.core.util.logging.LogLevel.getLogLevel()"
  name: "getLogLevel()"
  nameWithType: "LogLevel.getLogLevel()"
  summary: "Converts the log level into a numeric representation used for comparisons."
  syntax: "public int getLogLevel()"
  returns:
    description: "The numeric representation of the log level."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.logging.LogLevel.valueOf(java.lang.String)"
  fullName: "com.azure.core.util.logging.LogLevel.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "LogLevel.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static LogLevel valueOf(String name)"
  returns:
    type: "<xref href=\"com.azure.core.util.logging.LogLevel?alt=com.azure.core.util.logging.LogLevel&text=LogLevel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.logging.LogLevel.values()"
  fullName: "com.azure.core.util.logging.LogLevel.values()"
  name: "values()"
  nameWithType: "LogLevel.values()"
  syntax: "public static LogLevel[] values()"
  returns:
    type: "<xref href=\"com.azure.core.util.logging.LogLevel?alt=com.azure.core.util.logging.LogLevel&text=LogLevel\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.azure.core.util.logging"
artifact: com.azure:azure-core:1.3.0-beta.1
