### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadContentWithResponse*"
fullName: "com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadContentWithResponse"
name: "downloadContentWithResponse"
nameWithType: "BlobAsyncClientBase.downloadContentWithResponse"
members:
- uid: "com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadContentWithResponse(com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions)"
  fullName: "com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadContentWithResponse(DownloadRetryOptions options, BlobRequestConditions requestConditions)"
  name: "downloadContentWithResponse(DownloadRetryOptions options, BlobRequestConditions requestConditions)"
  nameWithType: "BlobAsyncClientBase.downloadContentWithResponse(DownloadRetryOptions options, BlobRequestConditions requestConditions)"
  summary: "Reads a range of bytes from a blob. Uploading data must be done from the <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlockBlobClient\"></xref>, <xref uid=\"com.azure.storage.blob.specialized.PageBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PageBlobClient\"></xref>, or <xref uid=\"com.azure.storage.blob.specialized.AppendBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AppendBlobClient\"></xref>.\n\n**Code Samples**\n\n```java\nDownloadRetryOptions options = new DownloadRetryOptions().setMaxRetryRequests(5);\n \n client.downloadContentWithResponse(options, null).subscribe(response -> {\n     BinaryData content = response.getValue();\n     System.out.println(content.toString());\n });\n```\n\nFor more information, see the [Azure Docs][]\n\nThis method supports downloads up to 2GB of data. Use <xref uid=\"com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadStreamWithResponse(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#downloadStreamWithResponse(BlobRange, DownloadRetryOptions, BlobRequestConditions, boolean)\"></xref> to download larger blobs.\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-blob"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.DownloadRetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DownloadRetryOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.models.DownloadRetryOptions?alt=com.azure.storage.blob.models.DownloadRetryOptions&text=DownloadRetryOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<BlobDownloadContentAsyncResponse> downloadContentWithResponse(DownloadRetryOptions options, BlobRequestConditions requestConditions)"
  returns:
    description: "A reactive response containing the blob data."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlobDownloadContentAsyncResponse?alt=com.azure.storage.blob.models.BlobDownloadContentAsyncResponse&text=BlobDownloadContentAsyncResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.11.0-beta.2
