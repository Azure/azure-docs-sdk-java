### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver
  id: ServiceBusReactorReceiver
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation
  children:
  - com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.ServiceBusReactorReceiver(java.lang.String,org.apache.qpid.proton.engine.Receiver,com.azure.core.amqp.implementation.handler.ReceiveLinkHandler,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.ReactorProvider,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)
  - com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.decodeDelivery(org.apache.qpid.proton.engine.Delivery)
  - com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.dispose()
  - com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.getSessionId()
  - com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.getSessionLockedUntil()
  - com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.receive()
  - com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.updateDisposition(java.lang.String,org.apache.qpid.proton.amqp.transport.DeliveryState)
  langs:
  - java
  name: ServiceBusReactorReceiver
  nameWithType: ServiceBusReactorReceiver
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver
  type: Class
  package: com.azure.messaging.servicebus.implementation
  summary: A proton-j receiver for Service Bus.
  syntax:
    content: public class ServiceBusReactorReceiver extends ReactorReceiver implements ServiceBusReceiveLink
  inheritance:
  - java.lang.Object
  - com.azure.core.amqp.implementation.ReactorReceiver
  implements:
  - com.azure.messaging.servicebus.implementation.ServiceBusReceiveLink
  inheritedMembers:
  - com.azure.core.amqp.implementation.ReactorReceiver.addCredits(int)
  - com.azure.core.amqp.implementation.ReactorReceiver.decodeDelivery(org.apache.qpid.proton.engine.Delivery)
  - com.azure.core.amqp.implementation.ReactorReceiver.dispose()
  - com.azure.core.amqp.implementation.ReactorReceiver.getCredits()
  - com.azure.core.amqp.implementation.ReactorReceiver.getEndpointStates()
  - com.azure.core.amqp.implementation.ReactorReceiver.getEntityPath()
  - com.azure.core.amqp.implementation.ReactorReceiver.getHostname()
  - com.azure.core.amqp.implementation.ReactorReceiver.getLinkName()
  - com.azure.core.amqp.implementation.ReactorReceiver.isDisposed()
  - com.azure.core.amqp.implementation.ReactorReceiver.receive()
  - com.azure.core.amqp.implementation.ReactorReceiver.setEmptyCreditListener(java.util.function.Supplier<java.lang.Integer>)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.ServiceBusReactorReceiver(java.lang.String,org.apache.qpid.proton.engine.Receiver,com.azure.core.amqp.implementation.handler.ReceiveLinkHandler,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.ReactorProvider,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)
  id: ServiceBusReactorReceiver(java.lang.String,org.apache.qpid.proton.engine.Receiver,com.azure.core.amqp.implementation.handler.ReceiveLinkHandler,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.ReactorProvider,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver
  langs:
  - java
  name: ServiceBusReactorReceiver(String entityPath, Receiver receiver, ReceiveLinkHandler handler, TokenManager tokenManager, ReactorProvider provider, Duration timeout, AmqpRetryPolicy retryPolicy)
  nameWithType: ServiceBusReactorReceiver.ServiceBusReactorReceiver(String entityPath, Receiver receiver, ReceiveLinkHandler handler, TokenManager tokenManager, ReactorProvider provider, Duration timeout, AmqpRetryPolicy retryPolicy)
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.ServiceBusReactorReceiver(String entityPath, Receiver receiver, ReceiveLinkHandler handler, TokenManager tokenManager, ReactorProvider provider, Duration timeout, AmqpRetryPolicy retryPolicy)
  overload: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.ServiceBusReactorReceiver*
  type: Constructor
  package: com.azure.messaging.servicebus.implementation
  syntax:
    content: public ServiceBusReactorReceiver(String entityPath, Receiver receiver, ReceiveLinkHandler handler, TokenManager tokenManager, ReactorProvider provider, Duration timeout, AmqpRetryPolicy retryPolicy)
    parameters:
    - id: entityPath
      type: java.lang.String
    - id: receiver
      type: org.apache.qpid.proton.engine.Receiver
    - id: handler
      type: com.azure.core.amqp.implementation.handler.ReceiveLinkHandler
    - id: tokenManager
      type: com.azure.core.amqp.implementation.TokenManager
    - id: provider
      type: com.azure.core.amqp.implementation.ReactorProvider
    - id: timeout
      type: java.time.Duration
    - id: retryPolicy
      type: com.azure.core.amqp.AmqpRetryPolicy
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.decodeDelivery(org.apache.qpid.proton.engine.Delivery)
  id: decodeDelivery(org.apache.qpid.proton.engine.Delivery)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver
  langs:
  - java
  name: decodeDelivery(Delivery delivery)
  nameWithType: ServiceBusReactorReceiver.decodeDelivery(Delivery delivery)
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.decodeDelivery(Delivery delivery)
  overload: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.decodeDelivery*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  syntax:
    content: protected Message decodeDelivery(Delivery delivery)
    parameters:
    - id: delivery
      type: org.apache.qpid.proton.engine.Delivery
    return:
      type: org.apache.qpid.proton.message.Message
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.dispose()
  id: dispose()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver
  langs:
  - java
  name: dispose()
  nameWithType: ServiceBusReactorReceiver.dispose()
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.dispose()
  overload: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.dispose*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  syntax:
    content: public void dispose()
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.getSessionId()
  id: getSessionId()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver
  langs:
  - java
  name: getSessionId()
  nameWithType: ServiceBusReactorReceiver.getSessionId()
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.getSessionId()
  overload: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.getSessionId*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  syntax:
    content: public Mono<String> getSessionId()
    return:
      type: reactor.core.publisher.Mono<java.lang.String>
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.getSessionLockedUntil()
  id: getSessionLockedUntil()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver
  langs:
  - java
  name: getSessionLockedUntil()
  nameWithType: ServiceBusReactorReceiver.getSessionLockedUntil()
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.getSessionLockedUntil()
  overload: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.getSessionLockedUntil*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  syntax:
    content: public Mono<Instant> getSessionLockedUntil()
    return:
      type: reactor.core.publisher.Mono<java.time.Instant>
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.receive()
  id: receive()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver
  langs:
  - java
  name: receive()
  nameWithType: ServiceBusReactorReceiver.receive()
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.receive()
  overload: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.receive*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  syntax:
    content: public Flux<Message> receive()
    return:
      type: reactor.core.publisher.Flux<org.apache.qpid.proton.message.Message>
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.updateDisposition(java.lang.String,org.apache.qpid.proton.amqp.transport.DeliveryState)
  id: updateDisposition(java.lang.String,org.apache.qpid.proton.amqp.transport.DeliveryState)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver
  langs:
  - java
  name: updateDisposition(String lockToken, DeliveryState deliveryState)
  nameWithType: ServiceBusReactorReceiver.updateDisposition(String lockToken, DeliveryState deliveryState)
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.updateDisposition(String lockToken, DeliveryState deliveryState)
  overload: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.updateDisposition*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  syntax:
    content: public Mono<Void> updateDisposition(String lockToken, DeliveryState deliveryState)
    parameters:
    - id: lockToken
      type: java.lang.String
    - id: deliveryState
      type: org.apache.qpid.proton.amqp.transport.DeliveryState
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.qpid.proton.engine.Receiver
  spec.java:
  - uid: org.apache.qpid.proton.engine.Receiver
    name: Receiver
    fullName: org.apache.qpid.proton.engine.Receiver
- uid: com.azure.core.amqp.implementation.handler.ReceiveLinkHandler
  spec.java:
  - uid: com.azure.core.amqp.implementation.handler.ReceiveLinkHandler
    name: ReceiveLinkHandler
    fullName: com.azure.core.amqp.implementation.handler.ReceiveLinkHandler
- uid: com.azure.core.amqp.implementation.TokenManager
  spec.java:
  - uid: com.azure.core.amqp.implementation.TokenManager
    name: TokenManager
    fullName: com.azure.core.amqp.implementation.TokenManager
- uid: com.azure.core.amqp.implementation.ReactorProvider
  spec.java:
  - uid: com.azure.core.amqp.implementation.ReactorProvider
    name: ReactorProvider
    fullName: com.azure.core.amqp.implementation.ReactorProvider
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.core.amqp.AmqpRetryPolicy
  spec.java:
  - uid: com.azure.core.amqp.AmqpRetryPolicy
    name: AmqpRetryPolicy
    fullName: com.azure.core.amqp.AmqpRetryPolicy
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.ServiceBusReactorReceiver*
  name: ServiceBusReactorReceiver
  nameWithType: ServiceBusReactorReceiver.ServiceBusReactorReceiver
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.ServiceBusReactorReceiver
  package: com.azure.messaging.servicebus.implementation
- uid: org.apache.qpid.proton.amqp.transport.DeliveryState
  spec.java:
  - uid: org.apache.qpid.proton.amqp.transport.DeliveryState
    name: DeliveryState
    fullName: org.apache.qpid.proton.amqp.transport.DeliveryState
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.updateDisposition*
  name: updateDisposition
  nameWithType: ServiceBusReactorReceiver.updateDisposition
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.updateDisposition
  package: com.azure.messaging.servicebus.implementation
- uid: reactor.core.publisher.Flux<org.apache.qpid.proton.message.Message>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: org.apache.qpid.proton.message.Message
    name: Message
    fullName: org.apache.qpid.proton.message.Message
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.receive*
  name: receive
  nameWithType: ServiceBusReactorReceiver.receive
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.receive
  package: com.azure.messaging.servicebus.implementation
- uid: reactor.core.publisher.Mono<java.lang.String>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.getSessionId*
  name: getSessionId
  nameWithType: ServiceBusReactorReceiver.getSessionId
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.getSessionId
  package: com.azure.messaging.servicebus.implementation
- uid: reactor.core.publisher.Mono<java.time.Instant>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.time.Instant
    name: Instant
    fullName: java.time.Instant
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.getSessionLockedUntil*
  name: getSessionLockedUntil
  nameWithType: ServiceBusReactorReceiver.getSessionLockedUntil
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.getSessionLockedUntil
  package: com.azure.messaging.servicebus.implementation
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.dispose*
  name: dispose
  nameWithType: ServiceBusReactorReceiver.dispose
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.dispose
  package: com.azure.messaging.servicebus.implementation
- uid: org.apache.qpid.proton.engine.Delivery
  spec.java:
  - uid: org.apache.qpid.proton.engine.Delivery
    name: Delivery
    fullName: org.apache.qpid.proton.engine.Delivery
- uid: org.apache.qpid.proton.message.Message
  spec.java:
  - uid: org.apache.qpid.proton.message.Message
    name: Message
    fullName: org.apache.qpid.proton.message.Message
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.decodeDelivery*
  name: decodeDelivery
  nameWithType: ServiceBusReactorReceiver.decodeDelivery
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.decodeDelivery
  package: com.azure.messaging.servicebus.implementation
- uid: com.azure.core.amqp.implementation.ReactorReceiver
  name: ReactorReceiver
  nameWithType: ReactorReceiver
  fullName: com.azure.core.amqp.implementation.ReactorReceiver
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReceiveLink
  name: ServiceBusReceiveLink
  nameWithType: ServiceBusReceiveLink
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReceiveLink
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.core.amqp.implementation.ReactorReceiver.dispose()
  name: ReactorReceiver.dispose()
  nameWithType: ReactorReceiver.dispose()
  fullName: com.azure.core.amqp.implementation.ReactorReceiver.dispose()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.core.amqp.implementation.ReactorReceiver.addCredits(int)
  name: ReactorReceiver.addCredits(int)
  nameWithType: ReactorReceiver.addCredits(int)
  fullName: com.azure.core.amqp.implementation.ReactorReceiver.addCredits(int)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.core.amqp.implementation.ReactorReceiver.receive()
  name: ReactorReceiver.receive()
  nameWithType: ReactorReceiver.receive()
  fullName: com.azure.core.amqp.implementation.ReactorReceiver.receive()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.amqp.implementation.ReactorReceiver.setEmptyCreditListener(java.util.function.Supplier<java.lang.Integer>)
  name: ReactorReceiver.setEmptyCreditListener(Supplier<Integer>)
  nameWithType: ReactorReceiver.setEmptyCreditListener(Supplier<Integer>)
  fullName: com.azure.core.amqp.implementation.ReactorReceiver.setEmptyCreditListener(java.util.function.Supplier<java.lang.Integer>)
- uid: com.azure.core.amqp.implementation.ReactorReceiver.getEndpointStates()
  name: ReactorReceiver.getEndpointStates()
  nameWithType: ReactorReceiver.getEndpointStates()
  fullName: com.azure.core.amqp.implementation.ReactorReceiver.getEndpointStates()
- uid: com.azure.core.amqp.implementation.ReactorReceiver.getLinkName()
  name: ReactorReceiver.getLinkName()
  nameWithType: ReactorReceiver.getLinkName()
  fullName: com.azure.core.amqp.implementation.ReactorReceiver.getLinkName()
- uid: com.azure.core.amqp.implementation.ReactorReceiver.getHostname()
  name: ReactorReceiver.getHostname()
  nameWithType: ReactorReceiver.getHostname()
  fullName: com.azure.core.amqp.implementation.ReactorReceiver.getHostname()
- uid: com.azure.core.amqp.implementation.ReactorReceiver.isDisposed()
  name: ReactorReceiver.isDisposed()
  nameWithType: ReactorReceiver.isDisposed()
  fullName: com.azure.core.amqp.implementation.ReactorReceiver.isDisposed()
- uid: com.azure.core.amqp.implementation.ReactorReceiver.decodeDelivery(org.apache.qpid.proton.engine.Delivery)
  name: ReactorReceiver.decodeDelivery(Delivery)
  nameWithType: ReactorReceiver.decodeDelivery(Delivery)
  fullName: com.azure.core.amqp.implementation.ReactorReceiver.decodeDelivery(org.apache.qpid.proton.engine.Delivery)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.azure.core.amqp.implementation.ReactorReceiver.getCredits()
  name: ReactorReceiver.getCredits()
  nameWithType: ReactorReceiver.getCredits()
  fullName: com.azure.core.amqp.implementation.ReactorReceiver.getCredits()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.core.amqp.implementation.ReactorReceiver.getEntityPath()
  name: ReactorReceiver.getEntityPath()
  nameWithType: ReactorReceiver.getEntityPath()
  fullName: com.azure.core.amqp.implementation.ReactorReceiver.getEntityPath()
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.UpdateDispositionWorkItem
  name: ServiceBusReactorReceiver.UpdateDispositionWorkItem
  nameWithType: ServiceBusReactorReceiver.UpdateDispositionWorkItem
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorReceiver.UpdateDispositionWorkItem
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.time.Instant
  name: Instant
  nameWithType: Instant
  fullName: java.time.Instant
- uid: com.azure.core.amqp.implementation.ReactorReceiver.setEmptyCreditListener(java.util.function.Supplier
  name: ReactorReceiver.setEmptyCreditListener(Supplier
  nameWithType: ReactorReceiver.setEmptyCreditListener(Supplier
  fullName: com.azure.core.amqp.implementation.ReactorReceiver.setEmptyCreditListener(java.util.function.Supplier
- uid: java.lang.Integer>)
  name: Integer>)
  nameWithType: Integer>)
  fullName: java.lang.Integer>)
