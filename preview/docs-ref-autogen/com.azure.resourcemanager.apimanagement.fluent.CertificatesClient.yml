### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient"
fullName: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient"
name: "CertificatesClient"
nameWithType: "CertificatesClient"
summary: "An instance of this class provides access to all the operations defined in Certificates<wbr>Client."
syntax: "public interface CertificatesClient"
methods:
- uid: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.models.CertificateCreateOrUpdateParameters)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.createOrUpdate(String resourceGroupName, String serviceName, String certificateId, CertificateCreateOrUpdateParameters parameters)"
  name: "createOrUpdate(String resourceGroupName, String serviceName, String certificateId, CertificateCreateOrUpdateParameters parameters)"
  nameWithType: "CertificatesClient.createOrUpdate(String resourceGroupName, String serviceName, String certificateId, CertificateCreateOrUpdateParameters parameters)"
  summary: "Creates or updates the certificate being used for authentication with the backend."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the certificate entity. Must be unique in the current API Management service\n     instance."
    name: "certificateId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Create or Update parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.CertificateCreateOrUpdateParameters?alt=com.azure.resourcemanager.apimanagement.models.CertificateCreateOrUpdateParameters&text=CertificateCreateOrUpdateParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CertificateContractInner createOrUpdate(String resourceGroupName, String serviceName, String certificateId, CertificateCreateOrUpdateParameters parameters)"
  desc: "Creates or updates the certificate being used for authentication with the backend."
  returns:
    description: "certificate details."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.CertificateContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.CertificateContractInner&text=CertificateContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.createOrUpdateWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.models.CertificateCreateOrUpdateParameters,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.createOrUpdateWithResponse(String resourceGroupName, String serviceName, String certificateId, CertificateCreateOrUpdateParameters parameters, String ifMatch, Context context)"
  name: "createOrUpdateWithResponse(String resourceGroupName, String serviceName, String certificateId, CertificateCreateOrUpdateParameters parameters, String ifMatch, Context context)"
  nameWithType: "CertificatesClient.createOrUpdateWithResponse(String resourceGroupName, String serviceName, String certificateId, CertificateCreateOrUpdateParameters parameters, String ifMatch, Context context)"
  summary: "Creates or updates the certificate being used for authentication with the backend."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the certificate entity. Must be unique in the current API Management service\n     instance."
    name: "certificateId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Create or Update parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.CertificateCreateOrUpdateParameters?alt=com.azure.resourcemanager.apimanagement.models.CertificateCreateOrUpdateParameters&text=CertificateCreateOrUpdateParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. Not required when creating an entity, but required when updating an entity."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CertificatesCreateOrUpdateResponse createOrUpdateWithResponse(String resourceGroupName, String serviceName, String certificateId, CertificateCreateOrUpdateParameters parameters, String ifMatch, Context context)"
  desc: "Creates or updates the certificate being used for authentication with the backend."
  returns:
    description: "certificate details."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.CertificatesCreateOrUpdateResponse?alt=com.azure.resourcemanager.apimanagement.models.CertificatesCreateOrUpdateResponse&text=CertificatesCreateOrUpdateResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.delete(String resourceGroupName, String serviceName, String certificateId, String ifMatch)"
  name: "delete(String resourceGroupName, String serviceName, String certificateId, String ifMatch)"
  nameWithType: "CertificatesClient.delete(String resourceGroupName, String serviceName, String certificateId, String ifMatch)"
  summary: "Deletes specific certificate."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the certificate entity. Must be unique in the current API Management service\n     instance."
    name: "certificateId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET\n     request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String serviceName, String certificateId, String ifMatch)"
  desc: "Deletes specific certificate."
- uid: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.deleteWithResponse(String resourceGroupName, String serviceName, String certificateId, String ifMatch, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String serviceName, String certificateId, String ifMatch, Context context)"
  nameWithType: "CertificatesClient.deleteWithResponse(String resourceGroupName, String serviceName, String certificateId, String ifMatch, Context context)"
  summary: "Deletes specific certificate."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the certificate entity. Must be unique in the current API Management service\n     instance."
    name: "certificateId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET\n     request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String serviceName, String certificateId, String ifMatch, Context context)"
  desc: "Deletes specific certificate."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.get(String resourceGroupName, String serviceName, String certificateId)"
  name: "get(String resourceGroupName, String serviceName, String certificateId)"
  nameWithType: "CertificatesClient.get(String resourceGroupName, String serviceName, String certificateId)"
  summary: "Gets the details of the certificate specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the certificate entity. Must be unique in the current API Management service\n     instance."
    name: "certificateId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CertificateContractInner get(String resourceGroupName, String serviceName, String certificateId)"
  desc: "Gets the details of the certificate specified by its identifier."
  returns:
    description: "the details of the certificate specified by its identifier."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.CertificateContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.CertificateContractInner&text=CertificateContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.getEntityTag(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.getEntityTag(String resourceGroupName, String serviceName, String certificateId)"
  name: "getEntityTag(String resourceGroupName, String serviceName, String certificateId)"
  nameWithType: "CertificatesClient.getEntityTag(String resourceGroupName, String serviceName, String certificateId)"
  summary: "Gets the entity state (Etag) version of the certificate specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the certificate entity. Must be unique in the current API Management service\n     instance."
    name: "certificateId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void getEntityTag(String resourceGroupName, String serviceName, String certificateId)"
  desc: "Gets the entity state (Etag) version of the certificate specified by its identifier."
- uid: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.getEntityTagWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.getEntityTagWithResponse(String resourceGroupName, String serviceName, String certificateId, Context context)"
  name: "getEntityTagWithResponse(String resourceGroupName, String serviceName, String certificateId, Context context)"
  nameWithType: "CertificatesClient.getEntityTagWithResponse(String resourceGroupName, String serviceName, String certificateId, Context context)"
  summary: "Gets the entity state (Etag) version of the certificate specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the certificate entity. Must be unique in the current API Management service\n     instance."
    name: "certificateId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CertificatesGetEntityTagResponse getEntityTagWithResponse(String resourceGroupName, String serviceName, String certificateId, Context context)"
  desc: "Gets the entity state (Etag) version of the certificate specified by its identifier."
  returns:
    description: "the entity state (Etag) version of the certificate specified by its identifier."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.CertificatesGetEntityTagResponse?alt=com.azure.resourcemanager.apimanagement.models.CertificatesGetEntityTagResponse&text=CertificatesGetEntityTagResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.getWithResponse(String resourceGroupName, String serviceName, String certificateId, Context context)"
  name: "getWithResponse(String resourceGroupName, String serviceName, String certificateId, Context context)"
  nameWithType: "CertificatesClient.getWithResponse(String resourceGroupName, String serviceName, String certificateId, Context context)"
  summary: "Gets the details of the certificate specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the certificate entity. Must be unique in the current API Management service\n     instance."
    name: "certificateId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CertificatesGetResponse getWithResponse(String resourceGroupName, String serviceName, String certificateId, Context context)"
  desc: "Gets the details of the certificate specified by its identifier."
  returns:
    description: "the details of the certificate specified by its identifier."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.CertificatesGetResponse?alt=com.azure.resourcemanager.apimanagement.models.CertificatesGetResponse&text=CertificatesGetResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.listByService(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.listByService(String resourceGroupName, String serviceName)"
  name: "listByService(String resourceGroupName, String serviceName)"
  nameWithType: "CertificatesClient.listByService(String resourceGroupName, String serviceName)"
  summary: "Lists a collection of all certificates in the specified service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<CertificateContractInner> listByService(String resourceGroupName, String serviceName)"
  desc: "Lists a collection of all certificates in the specified service instance."
  returns:
    description: "paged Certificates list representation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.CertificateContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.CertificateContractInner&text=CertificateContractInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.listByService(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Boolean,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Boolean isKeyVaultRefreshFailed, Context context)"
  name: "listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Boolean isKeyVaultRefreshFailed, Context context)"
  nameWithType: "CertificatesClient.listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Boolean isKeyVaultRefreshFailed, Context context)"
  summary: "Lists a collection of all certificates in the specified service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "| Field | Usage | Supported operators | Supported functions\n     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq,\n     ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| subject | filter | ge, le, eq, ne, gt,\n     lt | substringof, contains, startswith, endswith |&lt;/br&gt;| thumbprint | filter | ge, le, eq, ne, gt, lt |\n     substringof, contains, startswith, endswith |&lt;/br&gt;| expirationDate | filter | ge, le, eq, ne, gt, lt |\n     |&lt;/br&gt;."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Number of records to skip."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "When set to true, the response contains only certificates entities which failed\n     refresh."
    name: "isKeyVaultRefreshFailed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<CertificateContractInner> listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Boolean isKeyVaultRefreshFailed, Context context)"
  desc: "Lists a collection of all certificates in the specified service instance."
  returns:
    description: "paged Certificates list representation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.CertificateContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.CertificateContractInner&text=CertificateContractInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.refreshSecret(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.refreshSecret(String resourceGroupName, String serviceName, String certificateId)"
  name: "refreshSecret(String resourceGroupName, String serviceName, String certificateId)"
  nameWithType: "CertificatesClient.refreshSecret(String resourceGroupName, String serviceName, String certificateId)"
  summary: "From Key<wbr>Vault, Refresh the certificate being used for authentication with the backend."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the certificate entity. Must be unique in the current API Management service\n     instance."
    name: "certificateId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CertificateContractInner refreshSecret(String resourceGroupName, String serviceName, String certificateId)"
  desc: "From KeyVault, Refresh the certificate being used for authentication with the backend."
  returns:
    description: "certificate details."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.CertificateContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.CertificateContractInner&text=CertificateContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.refreshSecretWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.CertificatesClient.refreshSecretWithResponse(String resourceGroupName, String serviceName, String certificateId, Context context)"
  name: "refreshSecretWithResponse(String resourceGroupName, String serviceName, String certificateId, Context context)"
  nameWithType: "CertificatesClient.refreshSecretWithResponse(String resourceGroupName, String serviceName, String certificateId, Context context)"
  summary: "From Key<wbr>Vault, Refresh the certificate being used for authentication with the backend."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identifier of the certificate entity. Must be unique in the current API Management service\n     instance."
    name: "certificateId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CertificatesRefreshSecretResponse refreshSecretWithResponse(String resourceGroupName, String serviceName, String certificateId, Context context)"
  desc: "From KeyVault, Refresh the certificate being used for authentication with the backend."
  returns:
    description: "certificate details."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.CertificatesRefreshSecretResponse?alt=com.azure.resourcemanager.apimanagement.models.CertificatesRefreshSecretResponse&text=CertificatesRefreshSecretResponse\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in CertificatesClient."
metadata: {}
package: "com.azure.resourcemanager.apimanagement.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.3
