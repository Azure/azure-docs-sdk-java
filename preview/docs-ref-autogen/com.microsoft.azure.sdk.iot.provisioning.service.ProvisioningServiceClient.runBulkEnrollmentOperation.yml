### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.runBulkEnrollmentOperation*"
fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.runBulkEnrollmentOperation"
name: "runBulkEnrollmentOperation"
nameWithType: "ProvisioningServiceClient.runBulkEnrollmentOperation"
members:
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.runBulkEnrollmentOperation(com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode,java.util.Collection<com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment>)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)"
  name: "runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)"
  nameWithType: "ProvisioningServiceClient.runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)"
  summary: "Create, update or delete a set of individual Device Enrollments.\n\nThis API provide the means to do a single operation over multiple individualEnrollments. A valid operation is determined by <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BulkOperationMode\"></xref>, and can be 'create', 'update', 'updateIfMatchETag', or 'delete'.\n\nTo use the Device Provisioning Service API, you must include the follow package on your application.\n\n```java\n// Include the following imports to use the Device Provisioning Service APIs.\n import com.microsoft.azure.sdk.iot.provisioning.service.*;\n```\n\n**Sample:**\n\nThe follow code will create two new enrollment that will provisioning the ContosoDevice1000 and ContosoDevice1001 to the ContosoHub.azure-devices.net using TPM attestation.\n\n```java\n// IndividualEnrollment information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String TPM_ENDORSEMENT_KEY = \"tpm-endorsement-key\";\n private static final String IOTHUB_HOST_NAME = \"ContosoHub.azure-devices.net\";\n\n private static final String REGISTRATION_ID_1 = \"registrationId-1\";\n private static final String DEVICE_ID_1 = \"ContosoDevice1000\";\n\n private static final String REGISTRATION_ID_2 = \"registrationId-2\";\n private static final String DEVICE_ID_2 = \"ContosoDevice1001\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Create two new individualEnrollment configurations.\n     Attestation attestation = new TpmAttestation(TPM_ENDORSEMENT_KEY);\n     IndividualEnrollment enrollment1 =\n        new IndividualEnrollment(\n             REGISTRATION_ID_1,\n             attestation);\n     enrollment1.setDeviceId(DEVICE_ID_1);\n     enrollment1.setIotHubHostName(IOTHUB_HOST_NAME);\n     enrollment1.setProvisioningStatus(ProvisioningStatus.DISABLED);\n\n     IndividualEnrollment enrollment2 =\n        new IndividualEnrollment(\n             REGISTRATION_ID_2,\n             attestation);\n     enrollment2.setDeviceId(DEVICE_ID_2);\n     enrollment2.setIotHubHostName(IOTHUB_HOST_NAME);\n     enrollment2.setProvisioningStatus(ProvisioningStatus.DISABLED);\n\n     // Add these 2 individualEnrollments to a list of individualEnrollments.\n     List individualEnrollments = new LinkedList<>();\n     individualEnrollments.add(enrollment1);\n     individualEnrollments.add(enrollment2);\n\n     // Create these 2 new individualEnrollment using the bulk operation.\n     BulkEnrollmentOperationResult bulkEnrollmentOperationResult =  provisioningServiceClient.runBulkEnrollmentOperation(BulkOperationMode.create, individualEnrollments);\n }\n```"
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BulkOperationMode\"></xref> that defines the single operation to do over the individualEnrollments. It cannot be <code>null</code>."
    name: "bulkOperationMode"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode&text=BulkOperationMode\" data-throw-if-not-resolved=\"False\" />"
  - description: "the collection of <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IndividualEnrollment\"></xref> that contains the description of each individualEnrollment. It cannot be <code>null</code> or empty."
    name: "individualEnrollments"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment&text=IndividualEnrollment\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BulkEnrollmentOperationResult runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)"
  exceptions:
  - description: "if the provided parameters are not correct."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "A <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BulkEnrollmentOperationResult\"></xref> object with the result of operation for each enrollment."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationResult?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationResult&text=BulkEnrollmentOperationResult\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.sdk.iot.provisioning.service"
artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
