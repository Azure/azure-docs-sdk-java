### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet.intersects*"
fullName: "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet<C>.intersects"
name: "intersects"
nameWithType: "TreeRangeSet<C>.intersects"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet.intersects(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet<C>.intersects(Range<C> range)"
  name: "intersects(Range<C> range)"
  nameWithType: "TreeRangeSet<C>.intersects(Range<C> range)"
  summary: "Returns `true` if there exists a non-empty range enclosed by both a member range in this range set and the specified range. This is equivalent to calling `subRangeSet(otherRange)` and testing whether the resulting range set is non-empty."
  overridden: "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.intersects(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
  parameters:
  - name: "range"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Range?alt=com.azure.cosmos.implementation.guava25.collect.Range&text=Range\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public boolean intersects(Range<C> range)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
