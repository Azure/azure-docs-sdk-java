### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties"
name: "HiveLinkedServiceTypeProperties"
nameWithType: "HiveLinkedServiceTypeProperties"
summary: "Hive Server linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class HiveLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.HiveLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.HiveLinkedServiceTypeProperties()"
  name: "HiveLinkedServiceTypeProperties()"
  nameWithType: "HiveLinkedServiceTypeProperties.HiveLinkedServiceTypeProperties()"
  syntax: "public HiveLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.allowHostnameCNMismatch()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.allowHostnameCNMismatch()"
  name: "allowHostnameCNMismatch()"
  nameWithType: "HiveLinkedServiceTypeProperties.allowHostnameCNMismatch()"
  summary: "Get the allowHostnameCNMismatch property: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
  syntax: "public Object allowHostnameCNMismatch()"
  returns:
    description: "the allowHostnameCNMismatch value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.allowSelfSignedServerCert()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.allowSelfSignedServerCert()"
  name: "allowSelfSignedServerCert()"
  nameWithType: "HiveLinkedServiceTypeProperties.allowSelfSignedServerCert()"
  summary: "Get the allowSelfSignedServerCert property: Specifies whether to allow self-signed certificates from the server. The default value is false."
  syntax: "public Object allowSelfSignedServerCert()"
  returns:
    description: "the allowSelfSignedServerCert value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.authenticationType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.authenticationType()"
  name: "authenticationType()"
  nameWithType: "HiveLinkedServiceTypeProperties.authenticationType()"
  summary: "Get the authenticationType property: The authentication method used to access the Hive server."
  syntax: "public HiveAuthenticationType authenticationType()"
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.HiveAuthenticationType&text=HiveAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.enableSsl()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.enableSsl()"
  name: "enableSsl()"
  nameWithType: "HiveLinkedServiceTypeProperties.enableSsl()"
  summary: "Get the enableSsl property: Specifies whether the connections to the server are encrypted using SSL. The default value is false."
  syntax: "public Object enableSsl()"
  returns:
    description: "the enableSsl value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "HiveLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  syntax: "public Object encryptedCredential()"
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.host()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.host()"
  name: "host()"
  nameWithType: "HiveLinkedServiceTypeProperties.host()"
  summary: "Get the host property: IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable)."
  syntax: "public Object host()"
  returns:
    description: "the host value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.httpPath()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.httpPath()"
  name: "httpPath()"
  nameWithType: "HiveLinkedServiceTypeProperties.httpPath()"
  summary: "Get the httpPath property: The partial URL corresponding to the Hive server."
  syntax: "public Object httpPath()"
  returns:
    description: "the httpPath value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.password()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.password()"
  name: "password()"
  nameWithType: "HiveLinkedServiceTypeProperties.password()"
  summary: "Get the password property: The password corresponding to the user name that you provided in the Username field."
  syntax: "public SecretBase password()"
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.port()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.port()"
  name: "port()"
  nameWithType: "HiveLinkedServiceTypeProperties.port()"
  summary: "Get the port property: The TCP port that the Hive server uses to listen for client connections."
  syntax: "public Object port()"
  returns:
    description: "the port value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.serverType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.serverType()"
  name: "serverType()"
  nameWithType: "HiveLinkedServiceTypeProperties.serverType()"
  summary: "Get the serverType property: The type of Hive server."
  syntax: "public HiveServerType serverType()"
  returns:
    description: "the serverType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveServerType?alt=com.azure.resourcemanager.datafactory.models.HiveServerType&text=HiveServerType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.serviceDiscoveryMode()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.serviceDiscoveryMode()"
  name: "serviceDiscoveryMode()"
  nameWithType: "HiveLinkedServiceTypeProperties.serviceDiscoveryMode()"
  summary: "Get the serviceDiscoveryMode property: true to indicate using the ZooKeeper service, false not."
  syntax: "public Object serviceDiscoveryMode()"
  returns:
    description: "the serviceDiscoveryMode value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.thriftTransportProtocol()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.thriftTransportProtocol()"
  name: "thriftTransportProtocol()"
  nameWithType: "HiveLinkedServiceTypeProperties.thriftTransportProtocol()"
  summary: "Get the thriftTransportProtocol property: The transport protocol to use in the Thrift layer."
  syntax: "public HiveThriftTransportProtocol thriftTransportProtocol()"
  returns:
    description: "the thriftTransportProtocol value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveThriftTransportProtocol?alt=com.azure.resourcemanager.datafactory.models.HiveThriftTransportProtocol&text=HiveThriftTransportProtocol\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.trustedCertPath()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.trustedCertPath()"
  name: "trustedCertPath()"
  nameWithType: "HiveLinkedServiceTypeProperties.trustedCertPath()"
  summary: "Get the trustedCertPath property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
  syntax: "public Object trustedCertPath()"
  returns:
    description: "the trustedCertPath value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.useNativeQuery()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.useNativeQuery()"
  name: "useNativeQuery()"
  nameWithType: "HiveLinkedServiceTypeProperties.useNativeQuery()"
  summary: "Get the useNativeQuery property: Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL."
  syntax: "public Object useNativeQuery()"
  returns:
    description: "the useNativeQuery value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.useSystemTrustStore()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.useSystemTrustStore()"
  name: "useSystemTrustStore()"
  nameWithType: "HiveLinkedServiceTypeProperties.useSystemTrustStore()"
  summary: "Get the useSystemTrustStore property: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
  syntax: "public Object useSystemTrustStore()"
  returns:
    description: "the useSystemTrustStore value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.username()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.username()"
  name: "username()"
  nameWithType: "HiveLinkedServiceTypeProperties.username()"
  summary: "Get the username property: The user name that you use to access Hive Server."
  syntax: "public Object username()"
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "HiveLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withAllowHostnameCNMismatch(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withAllowHostnameCNMismatch(Object allowHostnameCNMismatch)"
  name: "withAllowHostnameCNMismatch(Object allowHostnameCNMismatch)"
  nameWithType: "HiveLinkedServiceTypeProperties.withAllowHostnameCNMismatch(Object allowHostnameCNMismatch)"
  summary: "Set the allowHostnameCNMismatch property: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
  parameters:
  - description: "the allowHostnameCNMismatch value to set."
    name: "allowHostnameCNMismatch"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedServiceTypeProperties withAllowHostnameCNMismatch(Object allowHostnameCNMismatch)"
  returns:
    description: "the HiveLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties&text=HiveLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withAllowSelfSignedServerCert(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  name: "withAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  nameWithType: "HiveLinkedServiceTypeProperties.withAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  summary: "Set the allowSelfSignedServerCert property: Specifies whether to allow self-signed certificates from the server. The default value is false."
  parameters:
  - description: "the allowSelfSignedServerCert value to set."
    name: "allowSelfSignedServerCert"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedServiceTypeProperties withAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  returns:
    description: "the HiveLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties&text=HiveLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withAuthenticationType(com.azure.resourcemanager.datafactory.models.HiveAuthenticationType)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withAuthenticationType(HiveAuthenticationType authenticationType)"
  name: "withAuthenticationType(HiveAuthenticationType authenticationType)"
  nameWithType: "HiveLinkedServiceTypeProperties.withAuthenticationType(HiveAuthenticationType authenticationType)"
  summary: "Set the authenticationType property: The authentication method used to access the Hive server."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.HiveAuthenticationType&text=HiveAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedServiceTypeProperties withAuthenticationType(HiveAuthenticationType authenticationType)"
  returns:
    description: "the HiveLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties&text=HiveLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withEnableSsl(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withEnableSsl(Object enableSsl)"
  name: "withEnableSsl(Object enableSsl)"
  nameWithType: "HiveLinkedServiceTypeProperties.withEnableSsl(Object enableSsl)"
  summary: "Set the enableSsl property: Specifies whether the connections to the server are encrypted using SSL. The default value is false."
  parameters:
  - description: "the enableSsl value to set."
    name: "enableSsl"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedServiceTypeProperties withEnableSsl(Object enableSsl)"
  returns:
    description: "the HiveLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties&text=HiveLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "HiveLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  returns:
    description: "the HiveLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties&text=HiveLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withHost(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withHost(Object host)"
  name: "withHost(Object host)"
  nameWithType: "HiveLinkedServiceTypeProperties.withHost(Object host)"
  summary: "Set the host property: IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable)."
  parameters:
  - description: "the host value to set."
    name: "host"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedServiceTypeProperties withHost(Object host)"
  returns:
    description: "the HiveLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties&text=HiveLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withHttpPath(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withHttpPath(Object httpPath)"
  name: "withHttpPath(Object httpPath)"
  nameWithType: "HiveLinkedServiceTypeProperties.withHttpPath(Object httpPath)"
  summary: "Set the httpPath property: The partial URL corresponding to the Hive server."
  parameters:
  - description: "the httpPath value to set."
    name: "httpPath"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedServiceTypeProperties withHttpPath(Object httpPath)"
  returns:
    description: "the HiveLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties&text=HiveLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "HiveLinkedServiceTypeProperties.withPassword(SecretBase password)"
  summary: "Set the password property: The password corresponding to the user name that you provided in the Username field."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedServiceTypeProperties withPassword(SecretBase password)"
  returns:
    description: "the HiveLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties&text=HiveLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withPort(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withPort(Object port)"
  name: "withPort(Object port)"
  nameWithType: "HiveLinkedServiceTypeProperties.withPort(Object port)"
  summary: "Set the port property: The TCP port that the Hive server uses to listen for client connections."
  parameters:
  - description: "the port value to set."
    name: "port"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedServiceTypeProperties withPort(Object port)"
  returns:
    description: "the HiveLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties&text=HiveLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withServerType(com.azure.resourcemanager.datafactory.models.HiveServerType)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withServerType(HiveServerType serverType)"
  name: "withServerType(HiveServerType serverType)"
  nameWithType: "HiveLinkedServiceTypeProperties.withServerType(HiveServerType serverType)"
  summary: "Set the serverType property: The type of Hive server."
  parameters:
  - description: "the serverType value to set."
    name: "serverType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveServerType?alt=com.azure.resourcemanager.datafactory.models.HiveServerType&text=HiveServerType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedServiceTypeProperties withServerType(HiveServerType serverType)"
  returns:
    description: "the HiveLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties&text=HiveLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withServiceDiscoveryMode(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withServiceDiscoveryMode(Object serviceDiscoveryMode)"
  name: "withServiceDiscoveryMode(Object serviceDiscoveryMode)"
  nameWithType: "HiveLinkedServiceTypeProperties.withServiceDiscoveryMode(Object serviceDiscoveryMode)"
  summary: "Set the serviceDiscoveryMode property: true to indicate using the ZooKeeper service, false not."
  parameters:
  - description: "the serviceDiscoveryMode value to set."
    name: "serviceDiscoveryMode"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedServiceTypeProperties withServiceDiscoveryMode(Object serviceDiscoveryMode)"
  returns:
    description: "the HiveLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties&text=HiveLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withThriftTransportProtocol(com.azure.resourcemanager.datafactory.models.HiveThriftTransportProtocol)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withThriftTransportProtocol(HiveThriftTransportProtocol thriftTransportProtocol)"
  name: "withThriftTransportProtocol(HiveThriftTransportProtocol thriftTransportProtocol)"
  nameWithType: "HiveLinkedServiceTypeProperties.withThriftTransportProtocol(HiveThriftTransportProtocol thriftTransportProtocol)"
  summary: "Set the thriftTransportProtocol property: The transport protocol to use in the Thrift layer."
  parameters:
  - description: "the thriftTransportProtocol value to set."
    name: "thriftTransportProtocol"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveThriftTransportProtocol?alt=com.azure.resourcemanager.datafactory.models.HiveThriftTransportProtocol&text=HiveThriftTransportProtocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedServiceTypeProperties withThriftTransportProtocol(HiveThriftTransportProtocol thriftTransportProtocol)"
  returns:
    description: "the HiveLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties&text=HiveLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withTrustedCertPath(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withTrustedCertPath(Object trustedCertPath)"
  name: "withTrustedCertPath(Object trustedCertPath)"
  nameWithType: "HiveLinkedServiceTypeProperties.withTrustedCertPath(Object trustedCertPath)"
  summary: "Set the trustedCertPath property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
  parameters:
  - description: "the trustedCertPath value to set."
    name: "trustedCertPath"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedServiceTypeProperties withTrustedCertPath(Object trustedCertPath)"
  returns:
    description: "the HiveLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties&text=HiveLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withUseNativeQuery(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withUseNativeQuery(Object useNativeQuery)"
  name: "withUseNativeQuery(Object useNativeQuery)"
  nameWithType: "HiveLinkedServiceTypeProperties.withUseNativeQuery(Object useNativeQuery)"
  summary: "Set the useNativeQuery property: Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL."
  parameters:
  - description: "the useNativeQuery value to set."
    name: "useNativeQuery"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedServiceTypeProperties withUseNativeQuery(Object useNativeQuery)"
  returns:
    description: "the HiveLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties&text=HiveLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withUseSystemTrustStore(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withUseSystemTrustStore(Object useSystemTrustStore)"
  name: "withUseSystemTrustStore(Object useSystemTrustStore)"
  nameWithType: "HiveLinkedServiceTypeProperties.withUseSystemTrustStore(Object useSystemTrustStore)"
  summary: "Set the useSystemTrustStore property: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
  parameters:
  - description: "the useSystemTrustStore value to set."
    name: "useSystemTrustStore"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedServiceTypeProperties withUseSystemTrustStore(Object useSystemTrustStore)"
  returns:
    description: "the HiveLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties&text=HiveLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "HiveLinkedServiceTypeProperties.withUsername(Object username)"
  summary: "Set the username property: The user name that you use to access Hive Server."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedServiceTypeProperties withUsername(Object username)"
  returns:
    description: "the HiveLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties&text=HiveLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withZooKeeperNameSpace(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.withZooKeeperNameSpace(Object zooKeeperNameSpace)"
  name: "withZooKeeperNameSpace(Object zooKeeperNameSpace)"
  nameWithType: "HiveLinkedServiceTypeProperties.withZooKeeperNameSpace(Object zooKeeperNameSpace)"
  summary: "Set the zooKeeperNameSpace property: The namespace on ZooKeeper under which Hive Server 2 nodes are added."
  parameters:
  - description: "the zooKeeperNameSpace value to set."
    name: "zooKeeperNameSpace"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedServiceTypeProperties withZooKeeperNameSpace(Object zooKeeperNameSpace)"
  returns:
    description: "the HiveLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties&text=HiveLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.zooKeeperNameSpace()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HiveLinkedServiceTypeProperties.zooKeeperNameSpace()"
  name: "zooKeeperNameSpace()"
  nameWithType: "HiveLinkedServiceTypeProperties.zooKeeperNameSpace()"
  summary: "Get the zooKeeperNameSpace property: The namespace on ZooKeeper under which Hive Server 2 nodes are added."
  syntax: "public Object zooKeeperNameSpace()"
  returns:
    description: "the zooKeeperNameSpace value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
