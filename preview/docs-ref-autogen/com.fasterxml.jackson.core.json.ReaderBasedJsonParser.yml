### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  id: ReaderBasedJsonParser
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json
  children:
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,char[],int,int,boolean)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._bufferRecyclable
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApos()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int,boolean)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddName(int)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(int)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._hashSeed
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._icLatin1
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._isNextTokenNameMaybe(int,java.lang.String)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._loadMore()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._loadMoreGuaranteed()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String,int)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameStartCol
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameStartOffset
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameStartRow
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._objectCodec
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseAposName()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFloatThatStartsWithPeriod()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseNegNumber()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsePosNumber(int)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[])
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reader
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._releaseBuffers()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String,java.lang.String)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._symbols
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenIncomplete
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.finishToken()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getCodec()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getCurrentLocation()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getInputSource()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar(java.lang.String)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText(java.io.Writer)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTokenLocation()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(java.lang.String)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextFieldName()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.releaseBuffered(java.io.Writer)
  - com.fasterxml.jackson.core.json.ReaderBasedJsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  langs:
  - java
  name: ReaderBasedJsonParser
  nameWithType: ReaderBasedJsonParser
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  type: Class
  package: com.fasterxml.jackson.core.json
  summary: This is a concrete implementation of <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref>, which is based on a <xref uid="java.io.Reader" data-throw-if-not-resolved="false">java.io.Reader</xref> to handle low-level character conversion tasks.
  syntax:
    content: public class ReaderBasedJsonParser extends ParserBase
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.core.JsonParser
  - com.fasterxml.jackson.core.base.ParserMinimalBase
  - com.fasterxml.jackson.core.base.ParserBase
  inheritedMembers:
  - com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)
  - com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)
  - com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()
  - com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)
  - com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)
  - com.fasterxml.jackson.core.JsonParser._codec()
  - com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)
  - com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()
  - com.fasterxml.jackson.core.JsonParser.canParseAsync()
  - com.fasterxml.jackson.core.JsonParser.canReadObjectId()
  - com.fasterxml.jackson.core.JsonParser.canReadTypeId()
  - com.fasterxml.jackson.core.JsonParser.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
  - com.fasterxml.jackson.core.JsonParser.currentName()
  - com.fasterxml.jackson.core.JsonParser.finishToken()
  - com.fasterxml.jackson.core.JsonParser.getBinaryValue()
  - com.fasterxml.jackson.core.JsonParser.getBooleanValue()
  - com.fasterxml.jackson.core.JsonParser.getByteValue()
  - com.fasterxml.jackson.core.JsonParser.getCodec()
  - com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()
  - com.fasterxml.jackson.core.JsonParser.getFeatureMask()
  - com.fasterxml.jackson.core.JsonParser.getFormatFeatures()
  - com.fasterxml.jackson.core.JsonParser.getInputSource()
  - com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()
  - com.fasterxml.jackson.core.JsonParser.getObjectId()
  - com.fasterxml.jackson.core.JsonParser.getSchema()
  - com.fasterxml.jackson.core.JsonParser.getShortValue()
  - com.fasterxml.jackson.core.JsonParser.getText(java.io.Writer)
  - com.fasterxml.jackson.core.JsonParser.getTypeId()
  - com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()
  - com.fasterxml.jackson.core.JsonParser.getValueAsDouble()
  - com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
  - com.fasterxml.jackson.core.JsonParser.nextBooleanValue()
  - com.fasterxml.jackson.core.JsonParser.nextFieldName()
  - com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.JsonParser.nextIntValue(int)
  - com.fasterxml.jackson.core.JsonParser.nextLongValue(long)
  - com.fasterxml.jackson.core.JsonParser.nextTextValue()
  - com.fasterxml.jackson.core.JsonParser.overrideFormatFeatures(int,int)
  - com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
  - com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)
  - com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)
  - com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)
  - com.fasterxml.jackson.core.JsonParser.requiresCustomCodec()
  - com.fasterxml.jackson.core.JsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  - com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)
  - com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)
  - com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)
  - com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.core.base.ParserBase._checkStdFeatureChanges(int,int)
  - com.fasterxml.jackson.core.base.ParserBase._closeInput()
  - com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int)
  - com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,int,int)
  - com.fasterxml.jackson.core.base.ParserBase._decodeEscaped()
  - com.fasterxml.jackson.core.base.ParserBase._eofAsNextChar()
  - com.fasterxml.jackson.core.base.ParserBase._finishString()
  - com.fasterxml.jackson.core.base.ParserBase._getByteArrayBuilder()
  - com.fasterxml.jackson.core.base.ParserBase._getSourceReference()
  - com.fasterxml.jackson.core.base.ParserBase._handleBase64MissingPadding(com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.core.base.ParserBase._handleEOF()
  - com.fasterxml.jackson.core.base.ParserBase._handleUnrecognizedCharacterEscape(char)
  - com.fasterxml.jackson.core.base.ParserBase._parseIntValue()
  - com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)
  - com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()
  - com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int,char)
  - com.fasterxml.jackson.core.base.ParserBase._reportTooLongIntegral(int,java.lang.String)
  - com.fasterxml.jackson.core.base.ParserBase._throwUnquotedSpace(int,java.lang.String)
  - com.fasterxml.jackson.core.base.ParserBase._validJsonTokenList()
  - com.fasterxml.jackson.core.base.ParserBase._validJsonValueList()
  - com.fasterxml.jackson.core.base.ParserBase.close()
  - com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()
  - com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()
  - com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()
  - com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()
  - com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()
  - com.fasterxml.jackson.core.base.ParserBase.disable(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.core.base.ParserBase.enable(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue()
  - com.fasterxml.jackson.core.base.ParserBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.core.base.ParserBase.getCurrentLocation()
  - com.fasterxml.jackson.core.base.ParserBase.getCurrentName()
  - com.fasterxml.jackson.core.base.ParserBase.getCurrentValue()
  - com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()
  - com.fasterxml.jackson.core.base.ParserBase.getDoubleValue()
  - com.fasterxml.jackson.core.base.ParserBase.getFloatValue()
  - com.fasterxml.jackson.core.base.ParserBase.getIntValue()
  - com.fasterxml.jackson.core.base.ParserBase.getLongValue()
  - com.fasterxml.jackson.core.base.ParserBase.getNumberType()
  - com.fasterxml.jackson.core.base.ParserBase.getNumberValue()
  - com.fasterxml.jackson.core.base.ParserBase.getParsingContext()
  - com.fasterxml.jackson.core.base.ParserBase.getTokenCharacterOffset()
  - com.fasterxml.jackson.core.base.ParserBase.getTokenColumnNr()
  - com.fasterxml.jackson.core.base.ParserBase.getTokenLineNr()
  - com.fasterxml.jackson.core.base.ParserBase.getTokenLocation()
  - com.fasterxml.jackson.core.base.ParserBase.growArrayBy(int[],int)
  - com.fasterxml.jackson.core.base.ParserBase.hasTextCharacters()
  - com.fasterxml.jackson.core.base.ParserBase.isClosed()
  - com.fasterxml.jackson.core.base.ParserBase.isNaN()
  - com.fasterxml.jackson.core.base.ParserBase.loadMore()
  - com.fasterxml.jackson.core.base.ParserBase.loadMoreGuaranteed()
  - com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserBase.overrideStdFeatures(int,int)
  - com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int)
  - com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)
  - com.fasterxml.jackson.core.base.ParserBase.reset(boolean,int,int,int)
  - com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String,double)
  - com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean,int,int,int)
  - com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean,int)
  - com.fasterxml.jackson.core.base.ParserBase.setCurrentValue(java.lang.Object)
  - com.fasterxml.jackson.core.base.ParserBase.setFeatureMask(int)
  - com.fasterxml.jackson.core.base.ParserBase.version()
  - com.fasterxml.jackson.core.base.ParserMinimalBase._ascii(byte[])
  - com.fasterxml.jackson.core.base.ParserMinimalBase._asciiBytes(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String,java.lang.Throwable)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._hasTextualNull(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._longIntegerDesc(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._longNumberDesc(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class<?>)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue()
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportMissingRootWS(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int,java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal()
  - com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(java.lang.String,java.lang.Throwable)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.currentToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentTokenId()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getText()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getTextLength()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getTextOffset()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.hasToken(com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.hasTokenId(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartObjectToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportInvalidNumber(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportUnexpectedNumberChar(int,java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)
  id: ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st)
  nameWithType: ReaderBasedJsonParser.ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser*
  type: Constructor
  package: com.fasterxml.jackson.core.json
  summary: Method called when input comes as a <xref uid="java.io.Reader" data-throw-if-not-resolved="false">java.io.Reader</xref>, and buffer allocation can be done using default mechanism.
  syntax:
    content: public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.core.io.IOContext
    - id: features
      type: int
    - id: r
      type: java.io.Reader
    - id: codec
      type: com.fasterxml.jackson.core.ObjectCodec
    - id: st
      type: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,char[],int,int,boolean)
  id: ReaderBasedJsonParser(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,char[],int,int,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable)
  nameWithType: ReaderBasedJsonParser.ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser*
  type: Constructor
  package: com.fasterxml.jackson.core.json
  summary: Method called when caller wants to provide input buffer directly, and it may or may not be recyclable use standard recycle context.
  syntax:
    content: public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.core.io.IOContext
    - id: features
      type: int
    - id: r
      type: java.io.Reader
    - id: codec
      type: com.fasterxml.jackson.core.ObjectCodec
    - id: st
      type: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer
    - id: inputBuffer
      type: char[]
    - id: start
      type: int
    - id: end
      type: int
    - id: bufferRecyclable
      type: boolean
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._bufferRecyclable
  id: _bufferRecyclable
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _bufferRecyclable
  nameWithType: ReaderBasedJsonParser._bufferRecyclable
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._bufferRecyclable
  type: Field
  package: com.fasterxml.jackson.core.json
  summary: >-
    Flag that indicates whether the input buffer is recycable (and needs to be returned to recycler once we are done) or not.


    If it is not, it also means that parser can NOT modify underlying buffer.
  syntax:
    content: protected boolean _bufferRecyclable
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput()
  id: _closeInput()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _closeInput()
  nameWithType: ReaderBasedJsonParser._closeInput()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected void _closeInput()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(com.fasterxml.jackson.core.Base64Variant)
  id: _decodeBase64(com.fasterxml.jackson.core.Base64Variant)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _decodeBase64(Base64Variant b64variant)
  nameWithType: ReaderBasedJsonParser._decodeBase64(Base64Variant b64variant)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64(Base64Variant b64variant)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Efficient handling for incremental parsing of base64-encoded textual content.
  syntax:
    content: protected byte[] _decodeBase64(Base64Variant b64variant)
    parameters:
    - id: b64variant
      type: com.fasterxml.jackson.core.Base64Variant
    return:
      type: byte[]
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()
  id: _decodeEscaped()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _decodeEscaped()
  nameWithType: ReaderBasedJsonParser._decodeEscaped()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Method that sub-classes must implement to support escaped sequences in base64-encoded sections. Sub-classes that do not need base64 support can leave this as is
  syntax:
    content: protected char _decodeEscaped()
    return:
      type: char
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()
  id: _finishString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _finishString()
  nameWithType: ReaderBasedJsonParser._finishString()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected final void _finishString()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()
  id: _finishString2()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _finishString2()
  nameWithType: ReaderBasedJsonParser._finishString2()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected void _finishString2()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2(com.fasterxml.jackson.core.JsonToken)
  id: _getText2(com.fasterxml.jackson.core.JsonToken)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _getText2(JsonToken t)
  nameWithType: ReaderBasedJsonParser._getText2(JsonToken t)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2(JsonToken t)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected final String _getText2(JsonToken t)
    parameters:
    - id: t
      type: com.fasterxml.jackson.core.JsonToken
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApos()
  id: _handleApos()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _handleApos()
  nameWithType: ReaderBasedJsonParser._handleApos()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApos()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApos*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected JsonToken _handleApos()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int,boolean)
  id: _handleInvalidNumberStart(int,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _handleInvalidNumberStart(int ch, boolean negative)
  nameWithType: ReaderBasedJsonParser._handleInvalidNumberStart(int ch, boolean negative)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart(int ch, boolean negative)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Method called if expected numeric value (due to leading sign) does not look like a number
  syntax:
    content: protected JsonToken _handleInvalidNumberStart(int ch, boolean negative)
    parameters:
    - id: ch
      type: int
    - id: negative
      type: boolean
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddName(int)
  id: _handleOddName(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _handleOddName(int i)
  nameWithType: ReaderBasedJsonParser._handleOddName(int i)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddName(int i)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddName*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Method called when we see non-white space character other than double quote, when expecting a field name. In standard mode will just throw an expection; but in non-standard modes may be able to parse name.
  syntax:
    content: protected String _handleOddName(int i)
    parameters:
    - id: i
      type: int
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(int)
  id: _handleOddValue(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _handleOddValue(int i)
  nameWithType: ReaderBasedJsonParser._handleOddValue(int i)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(int i)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Method for handling cases where first non-space character of an expected value token is not legal for standard JSON content.
  syntax:
    content: protected JsonToken _handleOddValue(int i)
    parameters:
    - id: i
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._hashSeed
  id: _hashSeed
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _hashSeed
  nameWithType: ReaderBasedJsonParser._hashSeed
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._hashSeed
  type: Field
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected final int _hashSeed
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._icLatin1
  id: _icLatin1
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _icLatin1
  nameWithType: ReaderBasedJsonParser._icLatin1
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._icLatin1
  type: Field
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected static final int[] _icLatin1
    return:
      type: int[]
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer
  id: _inputBuffer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _inputBuffer
  nameWithType: ReaderBasedJsonParser._inputBuffer
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputBuffer
  type: Field
  package: com.fasterxml.jackson.core.json
  summary: Current buffer from which data is read; generally data is read into buffer from input source.
  syntax:
    content: protected char[] _inputBuffer
    return:
      type: char[]
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._isNextTokenNameMaybe(int,java.lang.String)
  id: _isNextTokenNameMaybe(int,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _isNextTokenNameMaybe(int i, String nameToMatch)
  nameWithType: ReaderBasedJsonParser._isNextTokenNameMaybe(int i, String nameToMatch)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._isNextTokenNameMaybe(int i, String nameToMatch)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._isNextTokenNameMaybe*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected boolean _isNextTokenNameMaybe(int i, String nameToMatch)
    parameters:
    - id: i
      type: int
    - id: nameToMatch
      type: java.lang.String
    return:
      type: boolean
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._loadMore()
  id: _loadMore()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _loadMore()
  nameWithType: ReaderBasedJsonParser._loadMore()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._loadMore()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._loadMore*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected boolean _loadMore()
    return:
      type: boolean
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._loadMoreGuaranteed()
  id: _loadMoreGuaranteed()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _loadMoreGuaranteed()
  nameWithType: ReaderBasedJsonParser._loadMoreGuaranteed()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._loadMoreGuaranteed()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._loadMoreGuaranteed*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected void _loadMoreGuaranteed()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(java.lang.String,int)
  id: _matchToken(java.lang.String,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _matchToken(String matchStr, int i)
  nameWithType: ReaderBasedJsonParser._matchToken(String matchStr, int i)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(String matchStr, int i)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Helper method for checking whether input matches expected token
  syntax:
    content: protected final void _matchToken(String matchStr, int i)
    parameters:
    - id: matchStr
      type: java.lang.String
    - id: i
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameStartCol
  id: _nameStartCol
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _nameStartCol
  nameWithType: ReaderBasedJsonParser._nameStartCol
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameStartCol
  type: Field
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected int _nameStartCol
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameStartOffset
  id: _nameStartOffset
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _nameStartOffset
  nameWithType: ReaderBasedJsonParser._nameStartOffset
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameStartOffset
  type: Field
  package: com.fasterxml.jackson.core.json
  summary: Value of <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser._inputPtr" data-throw-if-not-resolved="false">#_inputPtr</xref> at the time when the first character of name token was read. Used for calculating token location when requested; combined with <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser._currInputProcessed" data-throw-if-not-resolved="false">#_currInputProcessed</xref>, may be updated appropriately as needed.
  syntax:
    content: protected long _nameStartOffset
    return:
      type: long
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameStartRow
  id: _nameStartRow
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _nameStartRow
  nameWithType: ReaderBasedJsonParser._nameStartRow
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nameStartRow
  type: Field
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected int _nameStartRow
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._objectCodec
  id: _objectCodec
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _objectCodec
  nameWithType: ReaderBasedJsonParser._objectCodec
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._objectCodec
  type: Field
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected ObjectCodec _objectCodec
    return:
      type: com.fasterxml.jackson.core.ObjectCodec
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseAposName()
  id: _parseAposName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _parseAposName()
  nameWithType: ReaderBasedJsonParser._parseAposName()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseAposName()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseAposName*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected String _parseAposName()
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFloatThatStartsWithPeriod()
  id: _parseFloatThatStartsWithPeriod()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _parseFloatThatStartsWithPeriod()
  nameWithType: ReaderBasedJsonParser._parseFloatThatStartsWithPeriod()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFloatThatStartsWithPeriod()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFloatThatStartsWithPeriod*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected final JsonToken _parseFloatThatStartsWithPeriod()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName()
  id: _parseName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _parseName()
  nameWithType: ReaderBasedJsonParser._parseName()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected final String _parseName()
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseNegNumber()
  id: _parseNegNumber()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _parseNegNumber()
  nameWithType: ReaderBasedJsonParser._parseNegNumber()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseNegNumber()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseNegNumber*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected final JsonToken _parseNegNumber()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsePosNumber(int)
  id: _parsePosNumber(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _parsePosNumber(int ch)
  nameWithType: ReaderBasedJsonParser._parsePosNumber(int ch)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsePosNumber(int ch)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsePosNumber*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: >-
    Initial parsing method for number values. It needs to be able to parse enough input to be able to determine whether the value is to be considered a simple integer value, or a more generic decimal value: latter of which needs to be expressed as a floating point number. The basic rule is that if the number has no fractional or exponential part, it is an integer; otherwise a floating point number.


    Because much of input has to be processed in any case, no partial parsing is done: all input text will be stored for further processing. However, actual numeric value conversion will be deferred, since it is usually the most complicated and costliest part of processing.
  syntax:
    content: protected final JsonToken _parsePosNumber(int ch)
    parameters:
    - id: ch
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[])
  id: _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _readBinary(Base64Variant b64variant, OutputStream out, byte[] buffer)
  nameWithType: ReaderBasedJsonParser._readBinary(Base64Variant b64variant, OutputStream out, byte[] buffer)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary(Base64Variant b64variant, OutputStream out, byte[] buffer)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected int _readBinary(Base64Variant b64variant, OutputStream out, byte[] buffer)
    parameters:
    - id: b64variant
      type: com.fasterxml.jackson.core.Base64Variant
    - id: out
      type: java.io.OutputStream
    - id: buffer
      type: byte[]
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reader
  id: _reader
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _reader
  nameWithType: ReaderBasedJsonParser._reader
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reader
  type: Field
  package: com.fasterxml.jackson.core.json
  summary: Reader that can be used for reading more content, if one buffer from input source, but in some cases pre-loaded buffer is handed to the parser.
  syntax:
    content: protected Reader _reader
    return:
      type: java.io.Reader
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._releaseBuffers()
  id: _releaseBuffers()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _releaseBuffers()
  nameWithType: ReaderBasedJsonParser._releaseBuffers()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._releaseBuffers()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._releaseBuffers*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Method called to release internal buffers owned by the base reader. This may be called along with <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput*" data-throw-if-not-resolved="false">#_closeInput</xref> (for example, when explicitly closing this reader instance), or separately (if need be).
  syntax:
    content: protected void _releaseBuffers()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String)
  id: _reportInvalidToken(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _reportInvalidToken(String matchedPart)
  nameWithType: ReaderBasedJsonParser._reportInvalidToken(String matchedPart)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(String matchedPart)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected void _reportInvalidToken(String matchedPart)
    parameters:
    - id: matchedPart
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(java.lang.String,java.lang.String)
  id: _reportInvalidToken(java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _reportInvalidToken(String matchedPart, String msg)
  nameWithType: ReaderBasedJsonParser._reportInvalidToken(String matchedPart, String msg)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(String matchedPart, String msg)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected void _reportInvalidToken(String matchedPart, String msg)
    parameters:
    - id: matchedPart
      type: java.lang.String
    - id: msg
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR()
  id: _skipCR()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _skipCR()
  nameWithType: ReaderBasedJsonParser._skipCR()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: We actually need to check the character value here (to see if we have \\n following \\r).
  syntax:
    content: protected final void _skipCR()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString()
  id: _skipString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _skipString()
  nameWithType: ReaderBasedJsonParser._skipString()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Method called to skim through rest of unparsed String value, if it is not needed. This can be done bit faster if contents need not be stored for future access.
  syntax:
    content: protected final void _skipString()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._symbols
  id: _symbols
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _symbols
  nameWithType: ReaderBasedJsonParser._symbols
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._symbols
  type: Field
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected final CharsToNameCanonicalizer _symbols
    return:
      type: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenIncomplete
  id: _tokenIncomplete
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: _tokenIncomplete
  nameWithType: ReaderBasedJsonParser._tokenIncomplete
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._tokenIncomplete
  type: Field
  package: com.fasterxml.jackson.core.json
  summary: Flag that indicates that the current token has not yet been fully processed, and needs to be finished for some access (or skipped to obtain the next token)
  syntax:
    content: protected boolean _tokenIncomplete
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.finishToken()
  id: finishToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: finishToken()
  nameWithType: ReaderBasedJsonParser.finishToken()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.finishToken()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.finishToken*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: >-
    Method that may be used to force full handling of the current token so that even if lazy processing is enabled, the whole contents are read for possible retrieval. This is usually used to ensure that the token end location is available, as well as token contents (similar to what calling, say <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()" data-throw-if-not-resolved="false">#getTextCharacters()</xref>, would achieve).


    Note that for many dataformat implementations this method will not do anything; this is the default implementation unless overridden by sub-classes.
  syntax:
    content: public void finishToken()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  id: getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: getBinaryValue(Base64Variant b64variant)
  nameWithType: ReaderBasedJsonParser.getBinaryValue(Base64Variant b64variant)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(Base64Variant b64variant)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: >-
    Method that can be used to read (and consume -- results may not be accessible using other methods after the call) base64-encoded binary data included in the current textual JSON value. It works similar to getting String value via <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText*" data-throw-if-not-resolved="false">#getText</xref> and decoding result (except for decoding part), but should be significantly more performant.


    Note that non-decoded textual contents of the current token are not guaranteed to be accessible after this method is called. Current implementation, for example, clears up textual content during decoding. Decoded binary content, however, will be retained until parser is advanced to the next event.
  syntax:
    content: public byte[] getBinaryValue(Base64Variant b64variant)
    parameters:
    - id: b64variant
      type: com.fasterxml.jackson.core.Base64Variant
    return:
      type: byte[]
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getCodec()
  id: getCodec()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: getCodec()
  nameWithType: ReaderBasedJsonParser.getCodec()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getCodec()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getCodec*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Accessor for <xref uid="com.fasterxml.jackson.core.ObjectCodec" data-throw-if-not-resolved="false">ObjectCodec</xref> associated with this parser, if any. Codec is used by <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readValueAs*" data-throw-if-not-resolved="false">#readValueAs(Class)</xref> method (and its variants).
  syntax:
    content: public ObjectCodec getCodec()
    return:
      type: com.fasterxml.jackson.core.ObjectCodec
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getCurrentLocation()
  id: getCurrentLocation()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: getCurrentLocation()
  nameWithType: ReaderBasedJsonParser.getCurrentLocation()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getCurrentLocation()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getCurrentLocation*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Method that returns location of the last processed character; usually for error reporting purposes
  syntax:
    content: public JsonLocation getCurrentLocation()
    return:
      type: com.fasterxml.jackson.core.JsonLocation
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getInputSource()
  id: getInputSource()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: getInputSource()
  nameWithType: ReaderBasedJsonParser.getInputSource()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getInputSource()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getInputSource*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: >-
    Method that can be used to get access to object that is used to access input being parsed; this is usually either <xref uid="java.io.InputStream" data-throw-if-not-resolved="false">InputStream</xref> or <xref uid="java.io.Reader" data-throw-if-not-resolved="false">Reader</xref>, depending on what parser was constructed with. Note that returned value may be null in some cases; including case where parser implementation does not want to exposed raw source to caller. In cases where input has been decorated, object returned here is the decorated version; this allows some level of interaction between users of parser and decorator object.


    In general use of this accessor should be considered as "last effort", i.e. only used if no other mechanism is applicable.
  syntax:
    content: public Object getInputSource()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar(java.lang.String)
  id: getNextChar(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: getNextChar(String eofMsg)
  nameWithType: ReaderBasedJsonParser.getNextChar(String eofMsg)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar(String eofMsg)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected char getNextChar(String eofMsg)
    parameters:
    - id: eofMsg
      type: java.lang.String
    return:
      type: char
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  id: getNextChar(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: getNextChar(String eofMsg, JsonToken forToken)
  nameWithType: ReaderBasedJsonParser.getNextChar(String eofMsg, JsonToken forToken)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar(String eofMsg, JsonToken forToken)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected char getNextChar(String eofMsg, JsonToken forToken)
    parameters:
    - id: eofMsg
      type: java.lang.String
    - id: forToken
      type: com.fasterxml.jackson.core.JsonToken
    return:
      type: char
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()
  id: getText()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: getText()
  nameWithType: ReaderBasedJsonParser.getText()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Method for accessing textual representation of the current event; if no current event (before first call to <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken*" data-throw-if-not-resolved="false">#nextToken</xref>, or after encountering end-of-input), returns null. Method can be called for any event.
  syntax:
    content: public final String getText()
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText(java.io.Writer)
  id: getText(java.io.Writer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: getText(Writer writer)
  nameWithType: ReaderBasedJsonParser.getText(Writer writer)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText(Writer writer)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: >-
    Method to read the textual representation of the current token in chunks and pass it to the given Writer. Conceptually same as calling:


    ```java

    writer.write(parser.getText());

    ```


    but should typically be more efficient as longer content does need to be combined into a single `String` to return, and write can occur directly from intermediate buffers Jackson uses.
  syntax:
    content: public int getText(Writer writer)
    parameters:
    - id: writer
      type: java.io.Writer
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()
  id: getTextCharacters()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: getTextCharacters()
  nameWithType: ReaderBasedJsonParser.getTextCharacters()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: >-
    Method similar to <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText*" data-throw-if-not-resolved="false">#getText</xref>, but that will return underlying (unmodifiable) character array that contains textual value, instead of constructing a String object to contain this information. Note, however, that:

     *  Textual contents are not guaranteed to start at index 0 (rather, call <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset*" data-throw-if-not-resolved="false">#getTextOffset</xref>) to know the actual offset
     *  Length of textual contents may be less than the length of returned buffer: call <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength*" data-throw-if-not-resolved="false">#getTextLength</xref> for actual length of returned content.

    Note that caller **MUST NOT** modify the returned character array in any way -- doing so may corrupt current parser state and render parser instance useless.


    The only reason to call this method (over <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText*" data-throw-if-not-resolved="false">#getText</xref>) is to avoid construction of a String object (which will make a copy of contents).
  syntax:
    content: public final char[] getTextCharacters()
    return:
      type: char[]
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()
  id: getTextLength()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: getTextLength()
  nameWithType: ReaderBasedJsonParser.getTextLength()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Accessor used with <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters*" data-throw-if-not-resolved="false">#getTextCharacters</xref>, to know length of String stored in returned buffer.
  syntax:
    content: public final int getTextLength()
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset()
  id: getTextOffset()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: getTextOffset()
  nameWithType: ReaderBasedJsonParser.getTextOffset()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Accessor used with <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters*" data-throw-if-not-resolved="false">#getTextCharacters</xref>, to know offset of the first text content character within buffer.
  syntax:
    content: public final int getTextOffset()
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTokenLocation()
  id: getTokenLocation()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: getTokenLocation()
  nameWithType: ReaderBasedJsonParser.getTokenLocation()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTokenLocation()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTokenLocation*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Method that return the **starting** location of the current token; that is, position of the first character from input that starts the current token.
  syntax:
    content: public JsonLocation getTokenLocation()
    return:
      type: com.fasterxml.jackson.core.JsonLocation
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString()
  id: getValueAsString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: getValueAsString()
  nameWithType: ReaderBasedJsonParser.getValueAsString()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Method that will try to convert value of current token to a <xref uid="java.lang.String" data-throw-if-not-resolved="false">java.lang.String</xref>. JSON Strings map naturally; scalar values get converted to their textual representation. If representation can not be converted to a String value (including structured types like Objects and Arrays and null token), default value of **null** will be returned; no exceptions are thrown.
  syntax:
    content: public final String getValueAsString()
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(java.lang.String)
  id: getValueAsString(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: getValueAsString(String defValue)
  nameWithType: ReaderBasedJsonParser.getValueAsString(String defValue)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(String defValue)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Method that will try to convert value of current token to a <xref uid="java.lang.String" data-throw-if-not-resolved="false">java.lang.String</xref>. JSON Strings map naturally; scalar values get converted to their textual representation. If representation can not be converted to a String value (including structured types like Objects and Arrays and null token), specified default value will be returned; no exceptions are thrown.
  syntax:
    content: public final String getValueAsString(String defValue)
    parameters:
    - id: defValue
      type: java.lang.String
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()
  id: nextBooleanValue()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: nextBooleanValue()
  nameWithType: ReaderBasedJsonParser.nextBooleanValue()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: >-
    Method that fetches next token (as if calling <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken*" data-throw-if-not-resolved="false">#nextToken</xref>) and if it is <xref uid="com.fasterxml.jackson.core.JsonToken.VALUE_TRUE" data-throw-if-not-resolved="false">JsonToken#VALUE_TRUE</xref> or <xref uid="com.fasterxml.jackson.core.JsonToken.VALUE_FALSE" data-throw-if-not-resolved="false">JsonToken#VALUE_FALSE</xref> returns matching Boolean value; otherwise return null. It is functionally equivalent to:


    ```java

    JsonToken t = nextToken();
      if (t == JsonToken.VALUE_TRUE) return Boolean.TRUE;
      if (t == JsonToken.VALUE_FALSE) return Boolean.FALSE;
      return null;
    ```


    but may be faster for parser to process, and can therefore be used if caller expects to get a Boolean value next from input.
  syntax:
    content: public final Boolean nextBooleanValue()
    return:
      type: java.lang.Boolean
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextFieldName()
  id: nextFieldName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: nextFieldName()
  nameWithType: ReaderBasedJsonParser.nextFieldName()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextFieldName()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextFieldName*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Method that fetches next token (as if calling <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken*" data-throw-if-not-resolved="false">#nextToken</xref>) and verifies whether it is <xref uid="com.fasterxml.jackson.core.JsonToken.FIELD_NAME" data-throw-if-not-resolved="false">JsonToken#FIELD_NAME</xref>; if it is, returns same as <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getCurrentName*" data-throw-if-not-resolved="false">#getCurrentName()</xref>, otherwise null.
  syntax:
    content: public String nextFieldName()
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)
  id: nextFieldName(com.fasterxml.jackson.core.SerializableString)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: nextFieldName(SerializableString sstr)
  nameWithType: ReaderBasedJsonParser.nextFieldName(SerializableString sstr)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextFieldName(SerializableString sstr)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextFieldName*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: >-
    Method that fetches next token (as if calling <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken*" data-throw-if-not-resolved="false">#nextToken</xref>) and verifies whether it is <xref uid="com.fasterxml.jackson.core.JsonToken.FIELD_NAME" data-throw-if-not-resolved="false">JsonToken#FIELD_NAME</xref> with specified name and returns result of that comparison. It is functionally equivalent to:


    ```java

    return (nextToken() == JsonToken.FIELD_NAME) && str.getValue().equals(getCurrentName());

    ```


    but may be faster for parser to verify, and can therefore be used if caller expects to get such a property name from input next.
  syntax:
    content: public boolean nextFieldName(SerializableString sstr)
    parameters:
    - id: sstr
      type: com.fasterxml.jackson.core.SerializableString
    return:
      type: boolean
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int)
  id: nextIntValue(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: nextIntValue(int defaultValue)
  nameWithType: ReaderBasedJsonParser.nextIntValue(int defaultValue)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int defaultValue)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: >-
    Method that fetches next token (as if calling <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken*" data-throw-if-not-resolved="false">#nextToken</xref>) and if it is <xref uid="com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT" data-throw-if-not-resolved="false">JsonToken#VALUE_NUMBER_INT</xref> returns 32-bit int value; otherwise returns specified default value It is functionally equivalent to:


    ```java

    return (nextToken() == JsonToken.VALUE_NUMBER_INT) ? getIntValue() : defaultValue;

    ```


    but may be faster for parser to process, and can therefore be used if caller expects to get an int value next from input.
  syntax:
    content: public final int nextIntValue(int defaultValue)
    parameters:
    - id: defaultValue
      type: int
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long)
  id: nextLongValue(long)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: nextLongValue(long defaultValue)
  nameWithType: ReaderBasedJsonParser.nextLongValue(long defaultValue)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long defaultValue)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: >-
    Method that fetches next token (as if calling <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken*" data-throw-if-not-resolved="false">#nextToken</xref>) and if it is <xref uid="com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT" data-throw-if-not-resolved="false">JsonToken#VALUE_NUMBER_INT</xref> returns 64-bit long value; otherwise returns specified default value It is functionally equivalent to:


    ```java

    return (nextToken() == JsonToken.VALUE_NUMBER_INT) ? getLongValue() : defaultValue;

    ```


    but may be faster for parser to process, and can therefore be used if caller expects to get a long value next from input.
  syntax:
    content: public final long nextLongValue(long defaultValue)
    parameters:
    - id: defaultValue
      type: long
    return:
      type: long
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()
  id: nextTextValue()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: nextTextValue()
  nameWithType: ReaderBasedJsonParser.nextTextValue()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: >-
    Method that fetches next token (as if calling <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken*" data-throw-if-not-resolved="false">#nextToken</xref>) and if it is <xref uid="com.fasterxml.jackson.core.JsonToken.VALUE_STRING" data-throw-if-not-resolved="false">JsonToken#VALUE_STRING</xref> returns contained String value; otherwise returns null. It is functionally equivalent to:


    ```java

    return (nextToken() == JsonToken.VALUE_STRING) ? getText() : null;

    ```


    but may be faster for parser to process, and can therefore be used if caller expects to get a String value next from input.
  syntax:
    content: public final String nextTextValue()
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()
  id: nextToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: nextToken()
  nameWithType: ReaderBasedJsonParser.nextToken()
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken()
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Main iteration method, which will advance stream enough to determine type of the next token, if any. If none remaining (stream has no content other than possible white space before ending), null will be returned.
  syntax:
    content: public final JsonToken nextToken()
    return:
      type: com.fasterxml.jackson.core.JsonToken
      description: >-
        Next token from the stream, if any found, or null
           to indicate end-of-input
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
  id: readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: readBinaryValue(Base64Variant b64variant, OutputStream out)
  nameWithType: ReaderBasedJsonParser.readBinaryValue(Base64Variant b64variant, OutputStream out)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue(Base64Variant b64variant, OutputStream out)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Similar to <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue*" data-throw-if-not-resolved="false">#readBinaryValue(OutputStream)</xref> but allows explicitly specifying base64 variant to use.
  syntax:
    content: public int readBinaryValue(Base64Variant b64variant, OutputStream out)
    parameters:
    - id: b64variant
      type: com.fasterxml.jackson.core.Base64Variant
    - id: out
      type: java.io.OutputStream
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.releaseBuffered(java.io.Writer)
  id: releaseBuffered(java.io.Writer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: releaseBuffered(Writer w)
  nameWithType: ReaderBasedJsonParser.releaseBuffered(Writer w)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.releaseBuffered(Writer w)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.releaseBuffered*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Method that can be called to push back any content that has been read but not consumed by the parser. This is usually done after reading all content of interest using parser. Content is released by writing it to given writer if possible; if underlying input is char-based it can released, if not (byte-based) it can not.
  syntax:
    content: public int releaseBuffered(Writer w)
    parameters:
    - id: w
      type: java.io.Writer
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  id: setCodec(com.fasterxml.jackson.core.ObjectCodec)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
  langs:
  - java
  name: setCodec(ObjectCodec c)
  nameWithType: ReaderBasedJsonParser.setCodec(ObjectCodec c)
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.setCodec(ObjectCodec c)
  overload: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.setCodec*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Setter that allows defining <xref uid="com.fasterxml.jackson.core.ObjectCodec" data-throw-if-not-resolved="false">ObjectCodec</xref> associated with this parser, if any. Codec is used by <xref uid="com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readValueAs*" data-throw-if-not-resolved="false">#readValueAs(Class)</xref> method (and its variants).
  syntax:
    content: public void setCodec(ObjectCodec c)
    parameters:
    - id: c
      type: com.fasterxml.jackson.core.ObjectCodec
references:
- uid: com.fasterxml.jackson.core.io.IOContext
  name: IOContext
  nameWithType: IOContext
  fullName: com.fasterxml.jackson.core.io.IOContext
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.io.Reader
  spec.java:
  - uid: java.io.Reader
    name: Reader
    fullName: java.io.Reader
- uid: com.fasterxml.jackson.core.ObjectCodec
  name: ObjectCodec
  nameWithType: ObjectCodec
  fullName: com.fasterxml.jackson.core.ObjectCodec
- uid: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer
  name: CharsToNameCanonicalizer
  nameWithType: CharsToNameCanonicalizer
  fullName: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser*
  name: ReaderBasedJsonParser
  nameWithType: ReaderBasedJsonParser.ReaderBasedJsonParser
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.ReaderBasedJsonParser
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getCodec*
  name: getCodec
  nameWithType: ReaderBasedJsonParser.getCodec
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getCodec
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.setCodec*
  name: setCodec
  nameWithType: ReaderBasedJsonParser.setCodec
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.setCodec
  package: com.fasterxml.jackson.core.json
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.io.Writer
  spec.java:
  - uid: java.io.Writer
    name: Writer
    fullName: java.io.Writer
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.releaseBuffered*
  name: releaseBuffered
  nameWithType: ReaderBasedJsonParser.releaseBuffered
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.releaseBuffered
  package: com.fasterxml.jackson.core.json
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getInputSource*
  name: getInputSource
  nameWithType: ReaderBasedJsonParser.getInputSource
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getInputSource
  package: com.fasterxml.jackson.core.json
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: char
  spec.java:
  - uid: char
    name: char
    fullName: char
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar*
  name: getNextChar
  nameWithType: ReaderBasedJsonParser.getNextChar
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.JsonToken
  name: JsonToken
  nameWithType: JsonToken
  fullName: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput*
  name: _closeInput
  nameWithType: ReaderBasedJsonParser._closeInput
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._releaseBuffers*
  name: _releaseBuffers
  nameWithType: ReaderBasedJsonParser._releaseBuffers
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._releaseBuffers
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._loadMoreGuaranteed*
  name: _loadMoreGuaranteed
  nameWithType: ReaderBasedJsonParser._loadMoreGuaranteed
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._loadMoreGuaranteed
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._loadMore*
  name: _loadMore
  nameWithType: ReaderBasedJsonParser._loadMore
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._loadMore
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText*
  name: getText
  nameWithType: ReaderBasedJsonParser.getText
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString*
  name: getValueAsString
  nameWithType: ReaderBasedJsonParser.getValueAsString
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2*
  name: _getText2
  nameWithType: ReaderBasedJsonParser._getText2
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters*
  name: getTextCharacters
  nameWithType: ReaderBasedJsonParser.getTextCharacters
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength*
  name: getTextLength
  nameWithType: ReaderBasedJsonParser.getTextLength
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset*
  name: getTextOffset
  nameWithType: ReaderBasedJsonParser.getTextOffset
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.Base64Variant
  name: Base64Variant
  nameWithType: Base64Variant
  fullName: com.fasterxml.jackson.core.Base64Variant
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue*
  name: getBinaryValue
  nameWithType: ReaderBasedJsonParser.getBinaryValue
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue
  package: com.fasterxml.jackson.core.json
- uid: java.io.OutputStream
  spec.java:
  - uid: java.io.OutputStream
    name: OutputStream
    fullName: java.io.OutputStream
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue*
  name: readBinaryValue
  nameWithType: ReaderBasedJsonParser.readBinaryValue
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.readBinaryValue
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary*
  name: _readBinary
  nameWithType: ReaderBasedJsonParser._readBinary
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._readBinary
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken*
  name: nextToken
  nameWithType: ReaderBasedJsonParser.nextToken
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.finishToken*
  name: finishToken
  nameWithType: ReaderBasedJsonParser.finishToken
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.finishToken
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.SerializableString
  name: SerializableString
  nameWithType: SerializableString
  fullName: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextFieldName*
  name: nextFieldName
  nameWithType: ReaderBasedJsonParser.nextFieldName
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextFieldName
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._isNextTokenNameMaybe*
  name: _isNextTokenNameMaybe
  nameWithType: ReaderBasedJsonParser._isNextTokenNameMaybe
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._isNextTokenNameMaybe
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue*
  name: nextTextValue
  nameWithType: ReaderBasedJsonParser.nextTextValue
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue*
  name: nextIntValue
  nameWithType: ReaderBasedJsonParser.nextIntValue
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue
  package: com.fasterxml.jackson.core.json
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue*
  name: nextLongValue
  nameWithType: ReaderBasedJsonParser.nextLongValue
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue
  package: com.fasterxml.jackson.core.json
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue*
  name: nextBooleanValue
  nameWithType: ReaderBasedJsonParser.nextBooleanValue
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFloatThatStartsWithPeriod*
  name: _parseFloatThatStartsWithPeriod
  nameWithType: ReaderBasedJsonParser._parseFloatThatStartsWithPeriod
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFloatThatStartsWithPeriod
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsePosNumber*
  name: _parsePosNumber
  nameWithType: ReaderBasedJsonParser._parsePosNumber
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsePosNumber
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseNegNumber*
  name: _parseNegNumber
  nameWithType: ReaderBasedJsonParser._parseNegNumber
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseNegNumber
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart*
  name: _handleInvalidNumberStart
  nameWithType: ReaderBasedJsonParser._handleInvalidNumberStart
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleInvalidNumberStart
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName*
  name: _parseName
  nameWithType: ReaderBasedJsonParser._parseName
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddName*
  name: _handleOddName
  nameWithType: ReaderBasedJsonParser._handleOddName
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddName
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseAposName*
  name: _parseAposName
  nameWithType: ReaderBasedJsonParser._parseAposName
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseAposName
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue*
  name: _handleOddValue
  nameWithType: ReaderBasedJsonParser._handleOddValue
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApos*
  name: _handleApos
  nameWithType: ReaderBasedJsonParser._handleApos
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApos
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString*
  name: _finishString
  nameWithType: ReaderBasedJsonParser._finishString
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2*
  name: _finishString2
  nameWithType: ReaderBasedJsonParser._finishString2
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString*
  name: _skipString
  nameWithType: ReaderBasedJsonParser._skipString
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR*
  name: _skipCR
  nameWithType: ReaderBasedJsonParser._skipCR
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped*
  name: _decodeEscaped
  nameWithType: ReaderBasedJsonParser._decodeEscaped
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken*
  name: _matchToken
  nameWithType: ReaderBasedJsonParser._matchToken
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64*
  name: _decodeBase64
  nameWithType: ReaderBasedJsonParser._decodeBase64
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeBase64
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.JsonLocation
  name: JsonLocation
  nameWithType: JsonLocation
  fullName: com.fasterxml.jackson.core.JsonLocation
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTokenLocation*
  name: getTokenLocation
  nameWithType: ReaderBasedJsonParser.getTokenLocation
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTokenLocation
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getCurrentLocation*
  name: getCurrentLocation
  nameWithType: ReaderBasedJsonParser.getCurrentLocation
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getCurrentLocation
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken*
  name: _reportInvalidToken
  nameWithType: ReaderBasedJsonParser._reportInvalidToken
  fullName: com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken
  package: com.fasterxml.jackson.core.json
- uid: int[]
  spec.java:
  - uid: int
    name: int
    fullName: int
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.base.ParserBase
  name: ParserBase
  nameWithType: ParserBase
  fullName: com.fasterxml.jackson.core.base.ParserBase
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._asciiBytes(java.lang.String)
  name: ParserMinimalBase._asciiBytes(String)
  nameWithType: ParserMinimalBase._asciiBytes(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._asciiBytes(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.loadMoreGuaranteed()
  name: ParserBase.loadMoreGuaranteed()
  nameWithType: ParserBase.loadMoreGuaranteed()
  fullName: com.fasterxml.jackson.core.base.ParserBase.loadMoreGuaranteed()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.core.base.ParserBase.getTokenCharacterOffset()
  name: ParserBase.getTokenCharacterOffset()
  nameWithType: ParserBase.getTokenCharacterOffset()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getTokenCharacterOffset()
- uid: com.fasterxml.jackson.core.JsonParser.canReadTypeId()
  name: JsonParser.canReadTypeId()
  nameWithType: JsonParser.canReadTypeId()
  fullName: com.fasterxml.jackson.core.JsonParser.canReadTypeId()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue()
  name: ParserMinimalBase._reportInvalidEOFInValue()
  nameWithType: ParserMinimalBase._reportInvalidEOFInValue()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue()
- uid: com.fasterxml.jackson.core.base.ParserBase._getByteArrayBuilder()
  name: ParserBase._getByteArrayBuilder()
  nameWithType: ParserBase._getByteArrayBuilder()
  fullName: com.fasterxml.jackson.core.base.ParserBase._getByteArrayBuilder()
- uid: com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean,int,int,int)
  name: ParserBase.resetFloat(boolean,int,int,int)
  nameWithType: ParserBase.resetFloat(boolean,int,int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean,int,int,int)
- uid: com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)
  name: JsonParser.readBinaryValue(OutputStream)
  nameWithType: JsonParser.readBinaryValue(OutputStream)
  fullName: com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong()
  name: ParserMinimalBase.reportOverflowLong()
  nameWithType: ParserMinimalBase.reportOverflowLong()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong()
- uid: com.fasterxml.jackson.core.JsonParser.getObjectId()
  name: JsonParser.getObjectId()
  nameWithType: JsonParser.getObjectId()
  fullName: com.fasterxml.jackson.core.JsonParser.getObjectId()
- uid: com.fasterxml.jackson.core.JsonParser.canParseAsync()
  name: JsonParser.canParseAsync()
  nameWithType: JsonParser.canParseAsync()
  fullName: com.fasterxml.jackson.core.JsonParser.canParseAsync()
- uid: com.fasterxml.jackson.core.base.ParserBase.getDoubleValue()
  name: ParserBase.getDoubleValue()
  nameWithType: ParserBase.getDoubleValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getDoubleValue()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)
  name: ParserMinimalBase._getCharDesc(int)
  nameWithType: ParserMinimalBase._getCharDesc(int)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)
- uid: com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()
  name: ParserBase.convertNumberToBigInteger()
  nameWithType: ParserBase.convertNumberToBigInteger()
  fullName: com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)
  name: ParserMinimalBase.getValueAsInt(int)
  nameWithType: ParserMinimalBase.getValueAsInt(int)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getText()
  name: ParserMinimalBase.getText()
  nameWithType: ParserMinimalBase.getText()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getText()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken)
  name: ParserMinimalBase._reportInvalidEOFInValue(JsonToken)
  nameWithType: ParserMinimalBase._reportInvalidEOFInValue(JsonToken)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String)
  name: ParserMinimalBase.reportOverflowLong(String)
  nameWithType: ParserMinimalBase.reportOverflowLong(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.getCurrentName()
  name: ParserBase.getCurrentName()
  nameWithType: ParserBase.getCurrentName()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getCurrentName()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.base.ParserBase.getCurrentLocation()
  name: ParserBase.getCurrentLocation()
  nameWithType: ParserBase.getCurrentLocation()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getCurrentLocation()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.core.base.ParserBase._finishString()
  name: ParserBase._finishString()
  nameWithType: ParserBase._finishString()
  fullName: com.fasterxml.jackson.core.base.ParserBase._finishString()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()
  name: ParserMinimalBase._reportInvalidEOF()
  nameWithType: ParserMinimalBase._reportInvalidEOF()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()
- uid: com.fasterxml.jackson.core.base.ParserBase._checkStdFeatureChanges(int,int)
  name: ParserBase._checkStdFeatureChanges(int,int)
  nameWithType: ParserBase._checkStdFeatureChanges(int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase._checkStdFeatureChanges(int,int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()
  name: ParserMinimalBase.nextValue()
  nameWithType: ParserMinimalBase.nextValue()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()
- uid: com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,int,int)
  name: ParserBase._decodeBase64Escape(Base64Variant,int,int)
  nameWithType: ParserBase._decodeBase64Escape(Base64Variant,int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,int,int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._longNumberDesc(java.lang.String)
  name: ParserMinimalBase._longNumberDesc(String)
  nameWithType: ParserMinimalBase._longNumberDesc(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._longNumberDesc(java.lang.String)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._longIntegerDesc(java.lang.String)
  name: ParserMinimalBase._longIntegerDesc(String)
  nameWithType: ParserMinimalBase._longIntegerDesc(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._longIntegerDesc(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.getBooleanValue()
  name: JsonParser.getBooleanValue()
  nameWithType: JsonParser.getBooleanValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getBooleanValue()
- uid: com.fasterxml.jackson.core.base.ParserBase.hasTextCharacters()
  name: ParserBase.hasTextCharacters()
  nameWithType: ParserBase.hasTextCharacters()
  fullName: com.fasterxml.jackson.core.base.ParserBase.hasTextCharacters()
- uid: com.fasterxml.jackson.core.JsonParser.getBinaryValue()
  name: JsonParser.getBinaryValue()
  nameWithType: JsonParser.getBinaryValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getBinaryValue()
- uid: com.fasterxml.jackson.core.JsonParser.canReadObjectId()
  name: JsonParser.canReadObjectId()
  nameWithType: JsonParser.canReadObjectId()
  fullName: com.fasterxml.jackson.core.JsonParser.canReadObjectId()
- uid: com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int)
  name: ParserBase._decodeBase64Escape(Base64Variant,char,int)
  nameWithType: ParserBase._decodeBase64Escape(Base64Variant,char,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class<?>)
  name: ParserMinimalBase._reportInputCoercion(String,JsonToken,Class<?>)
  nameWithType: ParserMinimalBase._reportInputCoercion(String,JsonToken,Class<?>)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class<?>)
- uid: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)
  name: JsonParser.setRequestPayloadOnError(String)
  nameWithType: JsonParser.setRequestPayloadOnError(String)
  fullName: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.getIntValue()
  name: ParserBase.getIntValue()
  nameWithType: ParserBase.getIntValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getIntValue()
- uid: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
  name: JsonParser.isEnabled(StreamReadFeature)
  nameWithType: JsonParser.isEnabled(StreamReadFeature)
  fullName: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
- uid: com.fasterxml.jackson.core.base.ParserBase.getLongValue()
  name: ParserBase.getLongValue()
  nameWithType: ParserBase.getLongValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getLongValue()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)
  name: JsonParser.<T>readValueAs(TypeReference<?>)
  nameWithType: JsonParser.<T>readValueAs(TypeReference<?>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)
- uid: com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String,double)
  name: ParserBase.resetAsNaN(String,double)
  nameWithType: ParserBase.resetAsNaN(String,double)
  fullName: com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String,double)
- uid: com.fasterxml.jackson.core.base.ParserBase._closeInput()
  name: ParserBase._closeInput()
  nameWithType: ParserBase._closeInput()
  fullName: com.fasterxml.jackson.core.base.ParserBase._closeInput()
- uid: com.fasterxml.jackson.core.base.ParserBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  name: ParserBase.getBinaryValue(Base64Variant)
  nameWithType: ParserBase.getBinaryValue(Base64Variant)
  fullName: com.fasterxml.jackson.core.base.ParserBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
- uid: com.fasterxml.jackson.core.JsonParser.getInputSource()
  name: JsonParser.getInputSource()
  nameWithType: JsonParser.getInputSource()
  fullName: com.fasterxml.jackson.core.JsonParser.getInputSource()
- uid: com.fasterxml.jackson.core.base.ParserBase.getTokenColumnNr()
  name: ParserBase.getTokenColumnNr()
  nameWithType: ParserBase.getTokenColumnNr()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getTokenColumnNr()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal()
  name: ParserMinimalBase._throwInternal()
  nameWithType: ParserMinimalBase._throwInternal()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal()
- uid: com.fasterxml.jackson.core.base.ParserBase._parseIntValue()
  name: ParserBase._parseIntValue()
  nameWithType: ParserBase._parseIntValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase._parseIntValue()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(java.lang.String,java.lang.Throwable)
  name: ParserMinimalBase._wrapError(String,Throwable)
  nameWithType: ParserMinimalBase._wrapError(String,Throwable)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(java.lang.String,java.lang.Throwable)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)
  name: ParserMinimalBase._reportError(String)
  nameWithType: ParserMinimalBase._reportError(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportMissingRootWS(int)
  name: ParserMinimalBase._reportMissingRootWS(int)
  nameWithType: ParserMinimalBase._reportMissingRootWS(int)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportMissingRootWS(int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong()
  name: ParserMinimalBase.getValueAsLong()
  nameWithType: ParserMinimalBase.getValueAsLong()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()
  name: ParserMinimalBase.isExpectedStartArrayToken()
  nameWithType: ParserMinimalBase.isExpectedStartArrayToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken()
  name: ParserMinimalBase.getLastClearedToken()
  nameWithType: ParserMinimalBase.getLastClearedToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)
  name: JsonParser.<T>readValuesAs(Class<T>)
  nameWithType: JsonParser.<T>readValuesAs(Class<T>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)
- uid: com.fasterxml.jackson.core.base.ParserBase._handleEOF()
  name: ParserBase._handleEOF()
  nameWithType: ParserBase._handleEOF()
  fullName: com.fasterxml.jackson.core.base.ParserBase._handleEOF()
- uid: com.fasterxml.jackson.core.JsonParser.getCodec()
  name: JsonParser.getCodec()
  nameWithType: JsonParser.getCodec()
  fullName: com.fasterxml.jackson.core.JsonParser.getCodec()
- uid: com.fasterxml.jackson.core.JsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  name: JsonParser.setCodec(ObjectCodec)
  nameWithType: JsonParser.setCodec(ObjectCodec)
  fullName: com.fasterxml.jackson.core.JsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)
- uid: com.fasterxml.jackson.core.JsonParser.currentName()
  name: JsonParser.currentName()
  nameWithType: JsonParser.currentName()
  fullName: com.fasterxml.jackson.core.JsonParser.currentName()
- uid: com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()
  name: ParserBase.convertNumberToBigDecimal()
  nameWithType: ParserBase.convertNumberToBigDecimal()
  fullName: com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken()
  name: ParserMinimalBase.hasCurrentToken()
  nameWithType: ParserMinimalBase.hasCurrentToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken()
  name: ParserMinimalBase.clearCurrentToken()
  nameWithType: ParserMinimalBase.clearCurrentToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken()
- uid: com.fasterxml.jackson.core.JsonParser.requiresCustomCodec()
  name: JsonParser.requiresCustomCodec()
  nameWithType: JsonParser.requiresCustomCodec()
  fullName: com.fasterxml.jackson.core.JsonParser.requiresCustomCodec()
- uid: com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()
  name: JsonParser._reportUnsupportedOperation()
  nameWithType: JsonParser._reportUnsupportedOperation()
  fullName: com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object,java.lang.Object)
  name: ParserMinimalBase._reportError(String,Object,Object)
  nameWithType: ParserMinimalBase._reportError(String,Object,Object)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object,java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonParser.getValueAsDouble()
  name: JsonParser.getValueAsDouble()
  nameWithType: JsonParser.getValueAsDouble()
  fullName: com.fasterxml.jackson.core.JsonParser.getValueAsDouble()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt()
  name: ParserMinimalBase.getValueAsInt()
  nameWithType: ParserMinimalBase.getValueAsInt()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)
  name: ParserMinimalBase._reportInvalidEOF(String)
  nameWithType: ParserMinimalBase._reportInvalidEOF(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase._throwUnquotedSpace(int,java.lang.String)
  name: ParserBase._throwUnquotedSpace(int,String)
  nameWithType: ParserBase._throwUnquotedSpace(int,String)
  fullName: com.fasterxml.jackson.core.base.ParserBase._throwUnquotedSpace(int,java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.getTokenLocation()
  name: ParserBase.getTokenLocation()
  nameWithType: ParserBase.getTokenLocation()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getTokenLocation()
- uid: com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)
  name: ParserBase.overrideCurrentName(String)
  nameWithType: ParserBase.overrideCurrentName(String)
  fullName: com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()
  name: ParserBase.getDecimalValue()
  nameWithType: ParserBase.getDecimalValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()
- uid: com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int)
  name: ParserBase.reportInvalidBase64Char(Base64Variant,int,int)
  nameWithType: ParserBase.reportInvalidBase64Char(Base64Variant,int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int)
- uid: com.fasterxml.jackson.core.base.ParserBase._validJsonTokenList()
  name: ParserBase._validJsonTokenList()
  nameWithType: ParserBase._validJsonTokenList()
  fullName: com.fasterxml.jackson.core.base.ParserBase._validJsonTokenList()
- uid: com.fasterxml.jackson.core.base.ParserBase.reset(boolean,int,int,int)
  name: ParserBase.reset(boolean,int,int,int)
  nameWithType: ParserBase.reset(boolean,int,int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.reset(boolean,int,int,int)
- uid: com.fasterxml.jackson.core.JsonParser.nextBooleanValue()
  name: JsonParser.nextBooleanValue()
  nameWithType: JsonParser.nextBooleanValue()
  fullName: com.fasterxml.jackson.core.JsonParser.nextBooleanValue()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.currentToken()
  name: ParserMinimalBase.currentToken()
  nameWithType: ParserMinimalBase.currentToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.currentToken()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()
  name: JsonParser.<T>readValueAsTree()
  nameWithType: JsonParser.<T>readValueAsTree()
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextOffset()
  name: ParserMinimalBase.getTextOffset()
  nameWithType: ParserMinimalBase.getTextOffset()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextOffset()
- uid: com.fasterxml.jackson.core.JsonParser.getTypeId()
  name: JsonParser.getTypeId()
  nameWithType: JsonParser.getTypeId()
  fullName: com.fasterxml.jackson.core.JsonParser.getTypeId()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextLength()
  name: ParserMinimalBase.getTextLength()
  nameWithType: ParserMinimalBase.getTextLength()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextLength()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()
  name: ParserMinimalBase.skipChildren()
  nameWithType: ParserMinimalBase.skipChildren()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()
- uid: com.fasterxml.jackson.core.base.ParserBase.version()
  name: ParserBase.version()
  nameWithType: ParserBase.version()
  fullName: com.fasterxml.jackson.core.base.ParserBase.version()
- uid: com.fasterxml.jackson.core.base.ParserBase.enable(com.fasterxml.jackson.core.JsonParser.Feature)
  name: ParserBase.enable(JsonParser.Feature)
  nameWithType: ParserBase.enable(JsonParser.Feature)
  fullName: com.fasterxml.jackson.core.base.ParserBase.enable(com.fasterxml.jackson.core.JsonParser.Feature)
- uid: com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()
  name: JsonParser.getEmbeddedObject()
  nameWithType: JsonParser.getEmbeddedObject()
  fullName: com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()
- uid: com.fasterxml.jackson.core.base.ParserBase._handleUnrecognizedCharacterEscape(char)
  name: ParserBase._handleUnrecognizedCharacterEscape(char)
  nameWithType: ParserBase._handleUnrecognizedCharacterEscape(char)
  fullName: com.fasterxml.jackson.core.base.ParserBase._handleUnrecognizedCharacterEscape(char)
- uid: com.fasterxml.jackson.core.base.ParserBase.disable(com.fasterxml.jackson.core.JsonParser.Feature)
  name: ParserBase.disable(JsonParser.Feature)
  nameWithType: ParserBase.disable(JsonParser.Feature)
  fullName: com.fasterxml.jackson.core.base.ParserBase.disable(com.fasterxml.jackson.core.JsonParser.Feature)
- uid: com.fasterxml.jackson.core.JsonParser.nextIntValue(int)
  name: JsonParser.nextIntValue(int)
  nameWithType: JsonParser.nextIntValue(int)
  fullName: com.fasterxml.jackson.core.JsonParser.nextIntValue(int)
- uid: com.fasterxml.jackson.core.JsonParser.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
  name: JsonParser.canUseSchema(FormatSchema)
  nameWithType: JsonParser.canUseSchema(FormatSchema)
  fullName: com.fasterxml.jackson.core.JsonParser.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
- uid: com.fasterxml.jackson.core.base.ParserBase.isClosed()
  name: ParserBase.isClosed()
  nameWithType: ParserBase.isClosed()
  fullName: com.fasterxml.jackson.core.base.ParserBase.isClosed()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)
  name: JsonParser.<T>readValueAs(Class<T>)
  nameWithType: JsonParser.<T>readValueAs(Class<T>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)
- uid: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)
  name: JsonParser.setRequestPayloadOnError(RequestPayload)
  nameWithType: JsonParser.setRequestPayloadOnError(RequestPayload)
  fullName: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)
- uid: com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue()
  name: ParserBase.getBigIntegerValue()
  nameWithType: ParserBase.getBigIntegerValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue()
- uid: com.fasterxml.jackson.core.base.ParserBase.setCurrentValue(java.lang.Object)
  name: ParserBase.setCurrentValue(Object)
  nameWithType: ParserBase.setCurrentValue(Object)
  fullName: com.fasterxml.jackson.core.base.ParserBase.setCurrentValue(java.lang.Object)
- uid: com.fasterxml.jackson.core.base.ParserBase.overrideStdFeatures(int,int)
  name: ParserBase.overrideStdFeatures(int,int)
  nameWithType: ParserBase.overrideStdFeatures(int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.overrideStdFeatures(int,int)
- uid: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)
  name: JsonParser.releaseBuffered(OutputStream)
  nameWithType: JsonParser.releaseBuffered(OutputStream)
  fullName: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)
- uid: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  name: JsonParser.isEnabled(JsonParser.Feature)
  nameWithType: JsonParser.isEnabled(JsonParser.Feature)
  fullName: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
- uid: com.fasterxml.jackson.core.JsonParser.getText(java.io.Writer)
  name: JsonParser.getText(Writer)
  nameWithType: JsonParser.getText(Writer)
  fullName: com.fasterxml.jackson.core.JsonParser.getText(java.io.Writer)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken()
  name: ParserMinimalBase.getCurrentToken()
  nameWithType: ParserMinimalBase.getCurrentToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken()
- uid: com.fasterxml.jackson.core.base.ParserBase.getCurrentValue()
  name: ParserBase.getCurrentValue()
  nameWithType: ParserBase.getCurrentValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getCurrentValue()
- uid: com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()
  name: ParserBase.convertNumberToDouble()
  nameWithType: ParserBase.convertNumberToDouble()
  fullName: com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()
- uid: com.fasterxml.jackson.core.JsonParser.nextFieldName()
  name: JsonParser.nextFieldName()
  nameWithType: JsonParser.nextFieldName()
  fullName: com.fasterxml.jackson.core.JsonParser.nextFieldName()
- uid: com.fasterxml.jackson.core.base.ParserBase.getNumberType()
  name: ParserBase.getNumberType()
  nameWithType: ParserBase.getNumberType()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getNumberType()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.core.base.ParserBase.getTokenLineNr()
  name: ParserBase.getTokenLineNr()
  nameWithType: ParserBase.getTokenLineNr()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getTokenLineNr()
- uid: com.fasterxml.jackson.core.JsonParser._codec()
  name: JsonParser._codec()
  nameWithType: JsonParser._codec()
  fullName: com.fasterxml.jackson.core.JsonParser._codec()
- uid: com.fasterxml.jackson.core.JsonParser.nextTextValue()
  name: JsonParser.nextTextValue()
  nameWithType: JsonParser.nextTextValue()
  fullName: com.fasterxml.jackson.core.JsonParser.nextTextValue()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object)
  name: ParserMinimalBase._reportError(String,Object)
  nameWithType: ParserMinimalBase._reportError(String,Object)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId()
  name: ParserMinimalBase.currentTokenId()
  nameWithType: ParserMinimalBase.currentTokenId()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId()
- uid: com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
  name: JsonParser.readBinaryValue(Base64Variant,OutputStream)
  nameWithType: JsonParser.readBinaryValue(Base64Variant,OutputStream)
  fullName: com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._ascii(byte[])
  name: ParserMinimalBase._ascii(byte[])
  nameWithType: ParserMinimalBase._ascii(byte[])
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._ascii(byte[])
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
  name: ParserMinimalBase._decodeBase64(String,ByteArrayBuilder,Base64Variant)
  nameWithType: ParserMinimalBase._decodeBase64(String,ByteArrayBuilder,Base64Variant)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
- uid: com.fasterxml.jackson.core.JsonParser.finishToken()
  name: JsonParser.finishToken()
  nameWithType: JsonParser.finishToken()
  fullName: com.fasterxml.jackson.core.JsonParser.finishToken()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)
  name: ParserMinimalBase.getValueAsBoolean(boolean)
  nameWithType: ParserMinimalBase.getValueAsBoolean(boolean)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)
- uid: com.fasterxml.jackson.core.JsonParser.nextLongValue(long)
  name: JsonParser.nextLongValue(long)
  nameWithType: JsonParser.nextLongValue(long)
  fullName: com.fasterxml.jackson.core.JsonParser.nextLongValue(long)
- uid: com.fasterxml.jackson.core.base.ParserBase.loadMore()
  name: ParserBase.loadMore()
  nameWithType: ParserBase.loadMore()
  fullName: com.fasterxml.jackson.core.base.ParserBase.loadMore()
- uid: com.fasterxml.jackson.core.base.ParserBase.close()
  name: ParserBase.close()
  nameWithType: ParserBase.close()
  fullName: com.fasterxml.jackson.core.base.ParserBase.close()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportUnexpectedNumberChar(int,java.lang.String)
  name: ParserMinimalBase.reportUnexpectedNumberChar(int,String)
  nameWithType: ParserMinimalBase.reportUnexpectedNumberChar(int,String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportUnexpectedNumberChar(int,java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.getByteValue()
  name: JsonParser.getByteValue()
  nameWithType: JsonParser.getByteValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getByteValue()
- uid: com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()
  name: JsonParser.getNonBlockingInputFeeder()
  nameWithType: JsonParser.getNonBlockingInputFeeder()
  fullName: com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)
  name: ParserMinimalBase._throwInvalidSpace(int)
  nameWithType: ParserMinimalBase._throwInvalidSpace(int)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._hasTextualNull(java.lang.String)
  name: ParserMinimalBase._hasTextualNull(String)
  nameWithType: ParserMinimalBase._hasTextualNull(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._hasTextualNull(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt()
  name: ParserMinimalBase.reportOverflowInt()
  nameWithType: ParserMinimalBase.reportOverflowInt()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt()
- uid: com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()
  name: ParserBase.convertNumberToLong()
  nameWithType: ParserBase.convertNumberToLong()
  fullName: com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()
- uid: com.fasterxml.jackson.core.base.ParserBase._eofAsNextChar()
  name: ParserBase._eofAsNextChar()
  nameWithType: ParserBase._eofAsNextChar()
  fullName: com.fasterxml.jackson.core.base.ParserBase._eofAsNextChar()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  name: ParserMinimalBase._reportInvalidEOF(String,JsonToken)
  nameWithType: ParserMinimalBase._reportInvalidEOF(String,JsonToken)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean,int)
  name: ParserBase.resetInt(boolean,int)
  nameWithType: ParserBase.resetInt(boolean,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean,int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)
  name: ParserMinimalBase.getValueAsString(String)
  nameWithType: ParserMinimalBase.getValueAsString(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.getParsingContext()
  name: ParserBase.getParsingContext()
  nameWithType: ParserBase.getParsingContext()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getParsingContext()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()
  name: ParserMinimalBase.nextToken()
  nameWithType: ParserMinimalBase.nextToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()
- uid: com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()
  name: ParserBase._releaseBuffers()
  nameWithType: ParserBase._releaseBuffers()
  fullName: com.fasterxml.jackson.core.base.ParserBase._releaseBuffers()
- uid: com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)
  name: ParserBase._parseNumericValue(int)
  nameWithType: ParserBase._parseNumericValue(int)
  fullName: com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters()
  name: ParserMinimalBase.getTextCharacters()
  nameWithType: ParserMinimalBase.getTextCharacters()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters()
- uid: com.fasterxml.jackson.core.base.ParserBase.growArrayBy(int[],int)
  name: ParserBase.growArrayBy(int[],int)
  nameWithType: ParserBase.growArrayBy(int[],int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.growArrayBy(int[],int)
- uid: com.fasterxml.jackson.core.JsonParser.getSchema()
  name: JsonParser.getSchema()
  nameWithType: JsonParser.getSchema()
  fullName: com.fasterxml.jackson.core.JsonParser.getSchema()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String,java.lang.Throwable)
  name: ParserMinimalBase._constructError(String,Throwable)
  nameWithType: ParserMinimalBase._constructError(String,Throwable)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String,java.lang.Throwable)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentTokenId()
  name: ParserMinimalBase.getCurrentTokenId()
  nameWithType: ParserMinimalBase.getCurrentTokenId()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentTokenId()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  name: ParserMinimalBase.reportOverflowInt(String,JsonToken)
  nameWithType: ParserMinimalBase.reportOverflowInt(String,JsonToken)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String,com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
  name: JsonParser.configure(JsonParser.Feature,boolean)
  nameWithType: JsonParser.configure(JsonParser.Feature,boolean)
  fullName: com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.hasToken(com.fasterxml.jackson.core.JsonToken)
  name: ParserMinimalBase.hasToken(JsonToken)
  nameWithType: ParserMinimalBase.hasToken(JsonToken)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.hasToken(com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int,char)
  name: ParserBase._reportMismatchedEndMarker(int,char)
  nameWithType: ParserBase._reportMismatchedEndMarker(int,char)
  fullName: com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int,char)
- uid: com.fasterxml.jackson.core.base.ParserBase.setFeatureMask(int)
  name: ParserBase.setFeatureMask(int)
  nameWithType: ParserBase.setFeatureMask(int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.setFeatureMask(int)
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)
  name: JsonParser.<T>readValuesAs(TypeReference<T>)
  nameWithType: JsonParser.<T>readValuesAs(TypeReference<T>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)
- uid: com.fasterxml.jackson.core.JsonParser.overrideFormatFeatures(int,int)
  name: JsonParser.overrideFormatFeatures(int,int)
  nameWithType: JsonParser.overrideFormatFeatures(int,int)
  fullName: com.fasterxml.jackson.core.JsonParser.overrideFormatFeatures(int,int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String)
  name: ParserMinimalBase.reportOverflowInt(String)
  nameWithType: ParserMinimalBase.reportOverflowInt(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase._getSourceReference()
  name: ParserBase._getSourceReference()
  nameWithType: ParserBase._getSourceReference()
  fullName: com.fasterxml.jackson.core.base.ParserBase._getSourceReference()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString()
  name: ParserMinimalBase.getValueAsString()
  nameWithType: ParserMinimalBase.getValueAsString()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartObjectToken()
  name: ParserMinimalBase.isExpectedStartObjectToken()
  nameWithType: ParserMinimalBase.isExpectedStartObjectToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartObjectToken()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)
  name: ParserMinimalBase.getValueAsDouble(double)
  nameWithType: ParserMinimalBase.getValueAsDouble(double)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)
- uid: com.fasterxml.jackson.core.JsonParser.getFeatureMask()
  name: JsonParser.getFeatureMask()
  nameWithType: JsonParser.getFeatureMask()
  fullName: com.fasterxml.jackson.core.JsonParser.getFeatureMask()
- uid: com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()
  name: ParserBase.convertNumberToInt()
  nameWithType: ParserBase.convertNumberToInt()
  fullName: com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  name: ParserMinimalBase.reportOverflowLong(String,JsonToken)
  nameWithType: ParserMinimalBase.reportOverflowLong(String,JsonToken)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String,com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.hasTokenId(int)
  name: ParserMinimalBase.hasTokenId(int)
  nameWithType: ParserMinimalBase.hasTokenId(int)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.hasTokenId(int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)
  name: ParserMinimalBase.getValueAsLong(long)
  nameWithType: ParserMinimalBase.getValueAsLong(long)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)
- uid: com.fasterxml.jackson.core.base.ParserBase.getFloatValue()
  name: ParserBase.getFloatValue()
  nameWithType: ParserBase.getFloatValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getFloatValue()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportInvalidNumber(java.lang.String)
  name: ParserMinimalBase.reportInvalidNumber(String)
  nameWithType: ParserMinimalBase.reportInvalidNumber(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportInvalidNumber(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)
  name: JsonParser.setSchema(FormatSchema)
  nameWithType: JsonParser.setSchema(FormatSchema)
  fullName: com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)
- uid: com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()
  name: JsonParser.getValueAsBoolean()
  nameWithType: JsonParser.getValueAsBoolean()
  fullName: com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()
- uid: com.fasterxml.jackson.core.base.ParserBase._validJsonValueList()
  name: ParserBase._validJsonValueList()
  nameWithType: ParserBase._validJsonValueList()
  fullName: com.fasterxml.jackson.core.base.ParserBase._validJsonValueList()
- uid: com.fasterxml.jackson.core.base.ParserBase._handleBase64MissingPadding(com.fasterxml.jackson.core.Base64Variant)
  name: ParserBase._handleBase64MissingPadding(Base64Variant)
  nameWithType: ParserBase._handleBase64MissingPadding(Base64Variant)
  fullName: com.fasterxml.jackson.core.base.ParserBase._handleBase64MissingPadding(com.fasterxml.jackson.core.Base64Variant)
- uid: com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)
  name: ParserBase.reportInvalidBase64Char(Base64Variant,int,int,String)
  nameWithType: ParserBase.reportInvalidBase64Char(Base64Variant,int,int,String)
  fullName: com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)
  name: JsonParser.nextFieldName(SerializableString)
  nameWithType: JsonParser.nextFieldName(SerializableString)
  fullName: com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)
- uid: com.fasterxml.jackson.core.base.ParserBase.getNumberValue()
  name: ParserBase.getNumberValue()
  nameWithType: ParserBase.getNumberValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getNumberValue()
- uid: com.fasterxml.jackson.core.JsonParser.getShortValue()
  name: JsonParser.getShortValue()
  nameWithType: JsonParser.getShortValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getShortValue()
- uid: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)
  name: JsonParser.setRequestPayloadOnError(byte[],String)
  nameWithType: JsonParser.setRequestPayloadOnError(byte[],String)
  fullName: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int,java.lang.String)
  name: ParserMinimalBase._reportUnexpectedChar(int,String)
  nameWithType: ParserMinimalBase._reportUnexpectedChar(int,String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int,java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase._decodeEscaped()
  name: ParserBase._decodeEscaped()
  nameWithType: ParserBase._decodeEscaped()
  fullName: com.fasterxml.jackson.core.base.ParserBase._decodeEscaped()
- uid: com.fasterxml.jackson.core.base.ParserBase._reportTooLongIntegral(int,java.lang.String)
  name: ParserBase._reportTooLongIntegral(int,String)
  nameWithType: ParserBase._reportTooLongIntegral(int,String)
  fullName: com.fasterxml.jackson.core.base.ParserBase._reportTooLongIntegral(int,java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.isNaN()
  name: ParserBase.isNaN()
  nameWithType: ParserBase.isNaN()
  fullName: com.fasterxml.jackson.core.base.ParserBase.isNaN()
- uid: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)
  name: JsonParser.releaseBuffered(Writer)
  nameWithType: JsonParser.releaseBuffered(Writer)
  fullName: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)
- uid: com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)
  name: JsonParser._constructError(String)
  nameWithType: JsonParser._constructError(String)
  fullName: com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.getFormatFeatures()
  name: JsonParser.getFormatFeatures()
  nameWithType: JsonParser.getFormatFeatures()
  fullName: com.fasterxml.jackson.core.JsonParser.getFormatFeatures()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class
  name: ParserMinimalBase._reportInputCoercion(String,JsonToken,Class
  nameWithType: ParserMinimalBase._reportInputCoercion(String,JsonToken,Class
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.core.JsonParser.
  name: JsonParser.
  nameWithType: JsonParser.
  fullName: com.fasterxml.jackson.core.JsonParser.
- uid: T>readValueAs(com.fasterxml.jackson.core.type.TypeReference
  name: T>readValueAs(TypeReference
  nameWithType: T>readValueAs(TypeReference
  fullName: T>readValueAs(com.fasterxml.jackson.core.type.TypeReference
- uid: T>readValuesAs(java.lang.Class
  name: T>readValuesAs(Class
  nameWithType: T>readValuesAs(Class
  fullName: T>readValuesAs(java.lang.Class
- uid: T>)
  name: T>)
  nameWithType: T>)
  fullName: T>)
- uid: T>readValueAsTree()
  name: T>readValueAsTree()
  nameWithType: T>readValueAsTree()
  fullName: T>readValueAsTree()
- uid: T>readValueAs(java.lang.Class
  name: T>readValueAs(Class
  nameWithType: T>readValueAs(Class
  fullName: T>readValueAs(java.lang.Class
- uid: T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference
  name: T>readValuesAs(TypeReference
  nameWithType: T>readValuesAs(TypeReference
  fullName: T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference
