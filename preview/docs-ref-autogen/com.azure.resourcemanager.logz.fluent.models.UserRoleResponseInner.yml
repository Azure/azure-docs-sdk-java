### YamlMime:JavaType
uid: "com.azure.resourcemanager.logz.fluent.models.UserRoleResponseInner"
fullName: "com.azure.resourcemanager.logz.fluent.models.UserRoleResponseInner"
name: "UserRoleResponseInner"
nameWithType: "UserRoleResponseInner"
summary: "Response for checking user's role for Logz.<wbr>io account."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class UserRoleResponseInner"
constructors:
- uid: "com.azure.resourcemanager.logz.fluent.models.UserRoleResponseInner.UserRoleResponseInner()"
  fullName: "com.azure.resourcemanager.logz.fluent.models.UserRoleResponseInner.UserRoleResponseInner()"
  name: "UserRoleResponseInner()"
  nameWithType: "UserRoleResponseInner.UserRoleResponseInner()"
  syntax: "public UserRoleResponseInner()"
methods:
- uid: "com.azure.resourcemanager.logz.fluent.models.UserRoleResponseInner.role()"
  fullName: "com.azure.resourcemanager.logz.fluent.models.UserRoleResponseInner.role()"
  name: "role()"
  nameWithType: "UserRoleResponseInner.role()"
  summary: "Get the role property: User roles on configured in Logz.<wbr>io account."
  syntax: "public UserRole role()"
  desc: "Get the role property: User roles on configured in Logz.io account."
  returns:
    description: "the role value."
    type: "<xref href=\"com.azure.resourcemanager.logz.models.UserRole?alt=com.azure.resourcemanager.logz.models.UserRole&text=UserRole\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.fluent.models.UserRoleResponseInner.validate()"
  fullName: "com.azure.resourcemanager.logz.fluent.models.UserRoleResponseInner.validate()"
  name: "validate()"
  nameWithType: "UserRoleResponseInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.logz.fluent.models.UserRoleResponseInner.withRole(com.azure.resourcemanager.logz.models.UserRole)"
  fullName: "com.azure.resourcemanager.logz.fluent.models.UserRoleResponseInner.withRole(UserRole role)"
  name: "withRole(UserRole role)"
  nameWithType: "UserRoleResponseInner.withRole(UserRole role)"
  summary: "Set the role property: User roles on configured in Logz.<wbr>io account."
  parameters:
  - description: "the role value to set."
    name: "role"
    type: "<xref href=\"com.azure.resourcemanager.logz.models.UserRole?alt=com.azure.resourcemanager.logz.models.UserRole&text=UserRole\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UserRoleResponseInner withRole(UserRole role)"
  desc: "Set the role property: User roles on configured in Logz.io account."
  returns:
    description: "the UserRoleResponseInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.logz.fluent.models.UserRoleResponseInner?alt=com.azure.resourcemanager.logz.fluent.models.UserRoleResponseInner&text=UserRoleResponseInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Response for checking user's role for Logz.io account."
metadata: {}
package: "com.azure.resourcemanager.logz.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-logz:1.0.0-beta.1
