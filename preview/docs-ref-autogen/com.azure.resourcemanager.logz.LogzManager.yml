### YamlMime:JavaType
uid: "com.azure.resourcemanager.logz.LogzManager"
fullName: "com.azure.resourcemanager.logz.LogzManager"
name: "LogzManager"
nameWithType: "LogzManager"
summary: "Entry point to Logz<wbr>Manager."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LogzManager"
methods:
- uid: "com.azure.resourcemanager.logz.LogzManager.authenticate(com.azure.core.credential.TokenCredential,com.azure.core.management.profile.AzureProfile)"
  fullName: "com.azure.resourcemanager.logz.LogzManager.authenticate(TokenCredential credential, AzureProfile profile)"
  name: "authenticate(TokenCredential credential, AzureProfile profile)"
  nameWithType: "LogzManager.authenticate(TokenCredential credential, AzureProfile profile)"
  summary: "Creates an instance of logz service API entry point."
  modifiers:
  - "static"
  parameters:
  - description: "the credential to use."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - description: "the Azure profile for client."
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static LogzManager authenticate(TokenCredential credential, AzureProfile profile)"
  desc: "Creates an instance of logz service API entry point."
  returns:
    description: "the logz service API instance."
    type: "<xref href=\"com.azure.resourcemanager.logz.LogzManager?alt=com.azure.resourcemanager.logz.LogzManager&text=LogzManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.LogzManager.configure()"
  fullName: "com.azure.resourcemanager.logz.LogzManager.configure()"
  name: "configure()"
  nameWithType: "LogzManager.configure()"
  summary: "Gets a Configurable instance that can be used to create Logz<wbr>Manager with optional configuration."
  modifiers:
  - "static"
  syntax: "public static LogzManager.Configurable configure()"
  desc: "Gets a Configurable instance that can be used to create LogzManager with optional configuration."
  returns:
    description: "the Configurable instance allowing configurations."
    type: "<xref href=\"com.azure.resourcemanager.logz.LogzManager.Configurable?alt=com.azure.resourcemanager.logz.LogzManager.Configurable&text=Configurable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.LogzManager.monitorOperations()"
  fullName: "com.azure.resourcemanager.logz.LogzManager.monitorOperations()"
  name: "monitorOperations()"
  nameWithType: "LogzManager.monitorOperations()"
  syntax: "public MonitorOperations monitorOperations()"
  returns:
    description: "Resource collection API of MonitorOperations."
    type: "<xref href=\"com.azure.resourcemanager.logz.models.MonitorOperations?alt=com.azure.resourcemanager.logz.models.MonitorOperations&text=MonitorOperations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.LogzManager.monitors()"
  fullName: "com.azure.resourcemanager.logz.LogzManager.monitors()"
  name: "monitors()"
  nameWithType: "LogzManager.monitors()"
  syntax: "public Monitors monitors()"
  returns:
    description: "Resource collection API of Monitors."
    type: "<xref href=\"com.azure.resourcemanager.logz.models.Monitors?alt=com.azure.resourcemanager.logz.models.Monitors&text=Monitors\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.LogzManager.operations()"
  fullName: "com.azure.resourcemanager.logz.LogzManager.operations()"
  name: "operations()"
  nameWithType: "LogzManager.operations()"
  syntax: "public Operations operations()"
  returns:
    description: "Resource collection API of Operations."
    type: "<xref href=\"com.azure.resourcemanager.logz.models.Operations?alt=com.azure.resourcemanager.logz.models.Operations&text=Operations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.LogzManager.serviceClient()"
  fullName: "com.azure.resourcemanager.logz.LogzManager.serviceClient()"
  name: "serviceClient()"
  nameWithType: "LogzManager.serviceClient()"
  syntax: "public MicrosoftLogz serviceClient()"
  returns:
    description: "Wrapped service client MicrosoftLogz providing direct access to the underlying auto-generated API\n     implementation, based on Azure REST API."
    type: "<xref href=\"com.azure.resourcemanager.logz.fluent.MicrosoftLogz?alt=com.azure.resourcemanager.logz.fluent.MicrosoftLogz&text=MicrosoftLogz\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.LogzManager.singleSignOns()"
  fullName: "com.azure.resourcemanager.logz.LogzManager.singleSignOns()"
  name: "singleSignOns()"
  nameWithType: "LogzManager.singleSignOns()"
  syntax: "public SingleSignOns singleSignOns()"
  returns:
    description: "Resource collection API of SingleSignOns."
    type: "<xref href=\"com.azure.resourcemanager.logz.models.SingleSignOns?alt=com.azure.resourcemanager.logz.models.SingleSignOns&text=SingleSignOns\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.LogzManager.subAccountTagRules()"
  fullName: "com.azure.resourcemanager.logz.LogzManager.subAccountTagRules()"
  name: "subAccountTagRules()"
  nameWithType: "LogzManager.subAccountTagRules()"
  syntax: "public SubAccountTagRules subAccountTagRules()"
  returns:
    description: "Resource collection API of SubAccountTagRules."
    type: "<xref href=\"com.azure.resourcemanager.logz.models.SubAccountTagRules?alt=com.azure.resourcemanager.logz.models.SubAccountTagRules&text=SubAccountTagRules\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.LogzManager.subAccounts()"
  fullName: "com.azure.resourcemanager.logz.LogzManager.subAccounts()"
  name: "subAccounts()"
  nameWithType: "LogzManager.subAccounts()"
  syntax: "public SubAccounts subAccounts()"
  returns:
    description: "Resource collection API of SubAccounts."
    type: "<xref href=\"com.azure.resourcemanager.logz.models.SubAccounts?alt=com.azure.resourcemanager.logz.models.SubAccounts&text=SubAccounts\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.LogzManager.tagRules()"
  fullName: "com.azure.resourcemanager.logz.LogzManager.tagRules()"
  name: "tagRules()"
  nameWithType: "LogzManager.tagRules()"
  syntax: "public TagRules tagRules()"
  returns:
    description: "Resource collection API of TagRules."
    type: "<xref href=\"com.azure.resourcemanager.logz.models.TagRules?alt=com.azure.resourcemanager.logz.models.TagRules&text=TagRules\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Entry point to LogzManager."
metadata: {}
package: "com.azure.resourcemanager.logz"
artifact: com.azure.resourcemanager:azure-resourcemanager-logz:1.0.0-beta.1
