### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.IRoutingMapProvider.tryGetOverlappingRangesAsync*"
fullName: "com.azure.cosmos.implementation.IRoutingMapProvider.tryGetOverlappingRangesAsync"
name: "tryGetOverlappingRangesAsync"
nameWithType: "IRoutingMapProvider.tryGetOverlappingRangesAsync"
members:
- uid: "com.azure.cosmos.implementation.IRoutingMapProvider.tryGetOverlappingRangesAsync(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,com.azure.cosmos.implementation.routing.Range<java.lang.String>,boolean,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.cosmos.implementation.IRoutingMapProvider.tryGetOverlappingRangesAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionResourceId, Range<String> range, boolean forceRefresh, Map<String,Object> properties)"
  name: "tryGetOverlappingRangesAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionResourceId, Range<String> range, boolean forceRefresh, Map<String,Object> properties)"
  nameWithType: "IRoutingMapProvider.tryGetOverlappingRangesAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionResourceId, Range<String> range, boolean forceRefresh, Map<String,Object> properties)"
  parameters:
  - name: "metaDataDiagnosticsContext"
    type: "<xref href=\"com.azure.cosmos.implementation.MetadataDiagnosticsContext?alt=com.azure.cosmos.implementation.MetadataDiagnosticsContext&text=MetadataDiagnosticsContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "collectionResourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "range"
    type: "<xref href=\"com.azure.cosmos.implementation.routing.Range?alt=com.azure.cosmos.implementation.routing.Range&text=Range\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "forceRefresh"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - name: "properties"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Utils.ValueHolder<List<PartitionKeyRange>>> tryGetOverlappingRangesAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionResourceId, Range<String> range, boolean forceRefresh, Map<String,Object> properties)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.Utils.ValueHolder?alt=com.azure.cosmos.implementation.Utils.ValueHolder&text=ValueHolder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.PartitionKeyRange?alt=com.azure.cosmos.implementation.PartitionKeyRange&text=PartitionKeyRange\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
