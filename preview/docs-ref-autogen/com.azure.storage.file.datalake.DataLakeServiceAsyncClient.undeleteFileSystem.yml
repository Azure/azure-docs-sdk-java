### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeServiceAsyncClient.undeleteFileSystem*"
fullName: "com.azure.storage.file.datalake.DataLakeServiceAsyncClient.undeleteFileSystem"
name: "undeleteFileSystem"
nameWithType: "DataLakeServiceAsyncClient.undeleteFileSystem"
members:
- uid: "com.azure.storage.file.datalake.DataLakeServiceAsyncClient.undeleteFileSystem(java.lang.String,java.lang.String)"
  fullName: "com.azure.storage.file.datalake.DataLakeServiceAsyncClient.undeleteFileSystem(String deletedFileSystemName, String deletedFileSystemVersion)"
  name: "undeleteFileSystem(String deletedFileSystemName, String deletedFileSystemVersion)"
  nameWithType: "DataLakeServiceAsyncClient.undeleteFileSystem(String deletedFileSystemName, String deletedFileSystemVersion)"
  summary: "Restores a previously deleted file system. If the file system associated with provided `deletedFileSystemName` already exists, this call will result in a 409 (conflict). This API is only functional if Container Soft Delete is enabled for the storage account associated with the file system.\n\n**Code Samples**\n\n```java\nListFileSystemsOptions listFileSystemsOptions = new ListFileSystemsOptions();\n listFileSystemsOptions.getDetails().setRetrieveDeleted(true);\n client.listFileSystems(listFileSystemsOptions).flatMap(\n     deletedFileSystem -> {\n         Mono<DataLakeFileSystemAsyncClient> fileSystemClient = client.undeleteFileSystem(\n             deletedFileSystem.getName(), deletedFileSystem.getVersion());\n         return fileSystemClient;\n     }\n ).then().block();\n```"
  parameters:
  - description: "The name of the previously deleted file system."
    name: "deletedFileSystemName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The version of the previously deleted file system."
    name: "deletedFileSystemVersion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<DataLakeFileSystemAsyncClient> undeleteFileSystem(String deletedFileSystemName, String deletedFileSystemVersion)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeFileSystemAsyncClient\"></xref> used\n to interact with the restored file system."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient?alt=com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient&text=DataLakeFileSystemAsyncClient\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.5.0-beta.2
