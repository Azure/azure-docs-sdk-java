### YamlMime:JavaMember
uid: "com.azure.cosmos.CosmosAsyncContainer.queryItems*"
fullName: "com.azure.cosmos.CosmosAsyncContainer.<T>queryItems"
name: "<T>queryItems"
nameWithType: "CosmosAsyncContainer.<T>queryItems"
members:
- uid: "com.azure.cosmos.CosmosAsyncContainer.<T>queryItems(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)"
  fullName: "com.azure.cosmos.CosmosAsyncContainer.<T>queryItems(SqlQuerySpec querySpec, CosmosQueryRequestOptions options, Class<T> classType)"
  name: "<T>queryItems(SqlQuerySpec querySpec, CosmosQueryRequestOptions options, Class<T> classType)"
  nameWithType: "CosmosAsyncContainer.<T>queryItems(SqlQuerySpec querySpec, CosmosQueryRequestOptions options, Class<T> classType)"
  summary: "Query for items in the current container using a <xref uid=\"com.azure.cosmos.models.SqlQuerySpec\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SqlQuerySpec\"></xref> and <xref uid=\"com.azure.cosmos.models.CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosQueryRequestOptions\"></xref>.\n\nAfter subscription the operation will be performed. The <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> will contain one or several feed response of the obtained items. In case of failure the <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> will error."
  parameters:
  - description: "the SQL query specification."
    name: "querySpec"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - description: "the query request options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the class type."
    name: "classType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CosmosPagedFlux<T> <T>queryItems(SqlQuerySpec querySpec, CosmosQueryRequestOptions options, Class<T> classType)"
  returns:
    description: "a <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> containing one or several feed response pages of the obtained items or an\n error."
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedFlux?alt=com.azure.cosmos.util.CosmosPagedFlux&text=CosmosPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncContainer.<T>queryItems(com.azure.cosmos.models.SqlQuerySpec,java.lang.Class<T>)"
  fullName: "com.azure.cosmos.CosmosAsyncContainer.<T>queryItems(SqlQuerySpec querySpec, Class<T> classType)"
  name: "<T>queryItems(SqlQuerySpec querySpec, Class<T> classType)"
  nameWithType: "CosmosAsyncContainer.<T>queryItems(SqlQuerySpec querySpec, Class<T> classType)"
  summary: "Query for items in the current container using a <xref uid=\"com.azure.cosmos.models.SqlQuerySpec\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SqlQuerySpec\"></xref>.\n\nAfter subscription the operation will be performed. The <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> will contain one or several feed response of the obtained items. In case of failure the <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> will error."
  parameters:
  - description: "the SQL query specification."
    name: "querySpec"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - description: "the class type."
    name: "classType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CosmosPagedFlux<T> <T>queryItems(SqlQuerySpec querySpec, Class<T> classType)"
  returns:
    description: "a <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> containing one or several feed response pages of the obtained items or an\n error."
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedFlux?alt=com.azure.cosmos.util.CosmosPagedFlux&text=CosmosPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncContainer.<T>queryItems(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)"
  fullName: "com.azure.cosmos.CosmosAsyncContainer.<T>queryItems(String query, CosmosQueryRequestOptions options, Class<T> classType)"
  name: "<T>queryItems(String query, CosmosQueryRequestOptions options, Class<T> classType)"
  nameWithType: "CosmosAsyncContainer.<T>queryItems(String query, CosmosQueryRequestOptions options, Class<T> classType)"
  summary: "Query for items in the current container using a string.\n\nAfter subscription the operation will be performed. The <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> will contain one or several feed response of the obtained items. In case of failure the <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> will error."
  parameters:
  - description: "the query."
    name: "query"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the query request options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the class type."
    name: "classType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CosmosPagedFlux<T> <T>queryItems(String query, CosmosQueryRequestOptions options, Class<T> classType)"
  returns:
    description: "a <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> containing one or several feed response pages of the obtained items or an\n error."
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedFlux?alt=com.azure.cosmos.util.CosmosPagedFlux&text=CosmosPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncContainer.<T>queryItems(java.lang.String,java.lang.Class<T>)"
  fullName: "com.azure.cosmos.CosmosAsyncContainer.<T>queryItems(String query, Class<T> classType)"
  name: "<T>queryItems(String query, Class<T> classType)"
  nameWithType: "CosmosAsyncContainer.<T>queryItems(String query, Class<T> classType)"
  summary: "Query for items in the current container.\n\nAfter subscription the operation will be performed. The <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> will contain one or several feed response of the obtained items. In case of failure the <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> will error."
  parameters:
  - description: "the query."
    name: "query"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the class type."
    name: "classType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CosmosPagedFlux<T> <T>queryItems(String query, Class<T> classType)"
  returns:
    description: "a <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> containing one or several feed response pages of the obtained items or an\n error."
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedFlux?alt=com.azure.cosmos.util.CosmosPagedFlux&text=CosmosPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
