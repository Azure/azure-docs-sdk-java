### YamlMime:JavaType
uid: "com.azure.ai.openai.OpenAIClient"
fullName: "com.azure.ai.openai.OpenAIClient"
name: "OpenAIClient"
nameWithType: "OpenAIClient"
summary: "Initializes a new instance of the synchronous Open<wbr>AIClient type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **OpenAIClient**"
methods:
- uid: "com.azure.ai.openai.OpenAIClient.addUploadPart(java.lang.String,com.azure.ai.openai.models.AddUploadPartRequest)"
  fullName: "com.azure.ai.openai.OpenAIClient.addUploadPart(String uploadId, AddUploadPartRequest requestBody)"
  name: "addUploadPart(String uploadId, AddUploadPartRequest requestBody)"
  nameWithType: "OpenAIClient.addUploadPart(String uploadId, AddUploadPartRequest requestBody)"
  summary: "Adds a Part to an Upload object."
  parameters:
  - description: "The ID of the upload associated with this operation."
    name: "uploadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The request body data payload for the operation."
    name: "requestBody"
    type: "<xref href=\"com.azure.ai.openai.models.AddUploadPartRequest?alt=com.azure.ai.openai.models.AddUploadPartRequest&text=AddUploadPartRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UploadPart addUploadPart(String uploadId, AddUploadPartRequest requestBody)"
  desc: "Adds a Part to an Upload object. A Part represents a chunk of bytes from the file you are trying to upload. Each Part can be at most 64 MB, and you can add Parts until you hit the Upload maximum of 8 GB. It is possible to add multiple Parts in parallel. You can decide the intended order of the Parts when you complete the Upload."
  returns:
    description: "the upload Part represents a chunk of bytes we can add to an Upload object."
    type: "<xref href=\"com.azure.ai.openai.models.UploadPart?alt=com.azure.ai.openai.models.UploadPart&text=UploadPart\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.OpenAIClient.cancelBatch(java.lang.String)"
  fullName: "com.azure.ai.openai.OpenAIClient.cancelBatch(String batchId)"
  name: "cancelBatch(String batchId)"
  nameWithType: "OpenAIClient.cancelBatch(String batchId)"
  summary: "Gets details for a single batch specified by the given batchID."
  parameters:
  - description: "The identifier of the batch."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Batch cancelBatch(String batchId)"
  desc: "Gets details for a single batch specified by the given batchID."
  returns:
    description: "details for a single batch specified by the given batchID."
    type: "<xref href=\"com.azure.ai.openai.models.Batch?alt=com.azure.ai.openai.models.Batch&text=Batch\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.OpenAIClient.cancelBatchWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.cancelBatchWithResponse(String batchId, RequestOptions requestOptions)"
  name: "cancelBatchWithResponse(String batchId, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.cancelBatchWithResponse(String batchId, RequestOptions requestOptions)"
  summary: "Gets details for a single batch specified by the given batchID."
  parameters:
  - description: "The identifier of the batch."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Batch> cancelBatchWithResponse(String batchId, RequestOptions requestOptions)"
  desc: "Gets details for a single batch specified by the given batchID.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     endpoint: String (Optional)\n     errors (Optional): {\n         object: String (Required)\n         data (Optional): [\n              (Optional){\n                 code: String (Optional)\n                 message: String (Optional)\n                 param: String (Optional)\n                 line: Integer (Optional)\n             }\n         ]\n     }\n     input_file_id: String (Required)\n     completion_window: String (Optional)\n     status: String(validating/failed/in_progress/finalizing/completed/expired/cancelling/cancelled) (Optional)\n     output_file_id: String (Optional)\n     error_file_id: String (Optional)\n     created_at: Long (Optional)\n     in_progress_at: Long (Optional)\n     expires_at: Long (Optional)\n     finalizing_at: Long (Optional)\n     completed_at: Long (Optional)\n     failed_at: Long (Optional)\n     expired_at: Long (Optional)\n     cancelling_at: Long (Optional)\n     cancelled_at: Long (Optional)\n     request_counts (Optional): {\n         total: Integer (Optional)\n         completed: Integer (Optional)\n         failed: Integer (Optional)\n     }\n     metadata (Optional): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "details for a single batch specified by the given batchID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.Batch?alt=com.azure.ai.openai.models.Batch&text=Batch\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.cancelUpload(java.lang.String)"
  fullName: "com.azure.ai.openai.OpenAIClient.cancelUpload(String uploadId)"
  name: "cancelUpload(String uploadId)"
  nameWithType: "OpenAIClient.cancelUpload(String uploadId)"
  summary: "Cancels the Upload."
  parameters:
  - description: "The ID of the upload associated with this operation."
    name: "uploadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Upload cancelUpload(String uploadId)"
  desc: "Cancels the Upload. No Parts may be added after an Upload is cancelled."
  returns:
    description: "the Upload object can accept byte chunks in the form of Parts."
    type: "<xref href=\"com.azure.ai.openai.models.Upload?alt=com.azure.ai.openai.models.Upload&text=Upload\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.OpenAIClient.cancelUploadWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.cancelUploadWithResponse(String uploadId, RequestOptions requestOptions)"
  name: "cancelUploadWithResponse(String uploadId, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.cancelUploadWithResponse(String uploadId, RequestOptions requestOptions)"
  summary: "Cancels the Upload."
  parameters:
  - description: "The ID of the upload associated with this operation."
    name: "uploadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Upload> cancelUploadWithResponse(String uploadId, RequestOptions requestOptions)"
  desc: "Cancels the Upload. No Parts may be added after an Upload is cancelled.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     created_at: long (Required)\n     filename: String (Required)\n     bytes: long (Required)\n     purpose: String (Required)\n     status: String(pending/completed/cancelled/expired) (Required)\n     expires_at: long (Required)\n     object: String(upload) (Optional)\n     file (Optional): {\n         object: String (Required)\n         id: String (Required)\n         bytes: int (Required)\n         filename: String (Required)\n         created_at: long (Required)\n         purpose: String(fine-tune/fine-tune-results/assistants/assistants_output/batch/batch_output/vision) (Required)\n         status: String(uploaded/pending/running/processed/error/deleting/deleted) (Optional)\n         status_details: String (Optional)\n     }\n }\n```"
  returns:
    description: "the Upload object can accept byte chunks in the form of Parts along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.Upload?alt=com.azure.ai.openai.models.Upload&text=Upload\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.completeUpload(java.lang.String,com.azure.ai.openai.models.CompleteUploadRequest)"
  fullName: "com.azure.ai.openai.OpenAIClient.completeUpload(String uploadId, CompleteUploadRequest requestBody)"
  name: "completeUpload(String uploadId, CompleteUploadRequest requestBody)"
  nameWithType: "OpenAIClient.completeUpload(String uploadId, CompleteUploadRequest requestBody)"
  summary: "Completes the Upload."
  parameters:
  - description: "The ID of the upload associated with this operation."
    name: "uploadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The request body for the completion operation."
    name: "requestBody"
    type: "<xref href=\"com.azure.ai.openai.models.CompleteUploadRequest?alt=com.azure.ai.openai.models.CompleteUploadRequest&text=CompleteUploadRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Upload completeUpload(String uploadId, CompleteUploadRequest requestBody)"
  desc: "Completes the Upload. Within the returned Upload object, there is a nested File object that is ready to use in the rest of the platform. You can specify the order of the Parts by passing in an ordered list of the Part IDs. The number of bytes uploaded upon completion must match the number of bytes initially specified when creating the Upload object. No Parts may be added after an Upload is completed."
  returns:
    description: "the Upload object can accept byte chunks in the form of Parts."
    type: "<xref href=\"com.azure.ai.openai.models.Upload?alt=com.azure.ai.openai.models.Upload&text=Upload\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.OpenAIClient.completeUploadWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.completeUploadWithResponse(String uploadId, BinaryData requestBody, RequestOptions requestOptions)"
  name: "completeUploadWithResponse(String uploadId, BinaryData requestBody, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.completeUploadWithResponse(String uploadId, BinaryData requestBody, RequestOptions requestOptions)"
  summary: "Completes the Upload."
  parameters:
  - description: "The ID of the upload associated with this operation."
    name: "uploadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The request body for the completion operation."
    name: "requestBody"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Upload> completeUploadWithResponse(String uploadId, BinaryData requestBody, RequestOptions requestOptions)"
  desc: "Completes the Upload. Within the returned Upload object, there is a nested File object that is ready to use in the rest of the platform. You can specify the order of the Parts by passing in an ordered list of the Part IDs. The number of bytes uploaded upon completion must match the number of bytes initially specified when creating the Upload object. No Parts may be added after an Upload is completed.\n\n**Request Body Schema**\n\n```java\n{\n     part_ids (Required): [\n         String (Required)\n     ]\n     md5: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     created_at: long (Required)\n     filename: String (Required)\n     bytes: long (Required)\n     purpose: String (Required)\n     status: String(pending/completed/cancelled/expired) (Required)\n     expires_at: long (Required)\n     object: String(upload) (Optional)\n     file (Optional): {\n         object: String (Required)\n         id: String (Required)\n         bytes: int (Required)\n         filename: String (Required)\n         created_at: long (Required)\n         purpose: String(fine-tune/fine-tune-results/assistants/assistants_output/batch/batch_output/vision) (Required)\n         status: String(uploaded/pending/running/processed/error/deleting/deleted) (Optional)\n         status_details: String (Optional)\n     }\n }\n```"
  returns:
    description: "the Upload object can accept byte chunks in the form of Parts along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.Upload?alt=com.azure.ai.openai.models.Upload&text=Upload\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.createBatch(com.azure.ai.openai.models.BatchCreateRequest)"
  fullName: "com.azure.ai.openai.OpenAIClient.createBatch(BatchCreateRequest createBatchRequest)"
  name: "createBatch(BatchCreateRequest createBatchRequest)"
  nameWithType: "OpenAIClient.createBatch(BatchCreateRequest createBatchRequest)"
  summary: "Creates and executes a batch from an uploaded file of requests."
  parameters:
  - description: "The specification of the batch to create and execute."
    name: "createBatchRequest"
    type: "<xref href=\"com.azure.ai.openai.models.BatchCreateRequest?alt=com.azure.ai.openai.models.BatchCreateRequest&text=BatchCreateRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Batch createBatch(BatchCreateRequest createBatchRequest)"
  desc: "Creates and executes a batch from an uploaded file of requests. Response includes details of the enqueued job including job status. The ID of the result file is added to the response once complete."
  returns:
    description: "the Batch object."
    type: "<xref href=\"com.azure.ai.openai.models.Batch?alt=com.azure.ai.openai.models.Batch&text=Batch\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.OpenAIClient.createBatchWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.createBatchWithResponse(BinaryData createBatchRequest, RequestOptions requestOptions)"
  name: "createBatchWithResponse(BinaryData createBatchRequest, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.createBatchWithResponse(BinaryData createBatchRequest, RequestOptions requestOptions)"
  summary: "Creates and executes a batch from an uploaded file of requests."
  parameters:
  - description: "The specification of the batch to create and execute."
    name: "createBatchRequest"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Batch> createBatchWithResponse(BinaryData createBatchRequest, RequestOptions requestOptions)"
  desc: "Creates and executes a batch from an uploaded file of requests. Response includes details of the enqueued job including job status. The ID of the result file is added to the response once complete.\n\n**Request Body Schema**\n\n```java\n{\n     endpoint: String (Required)\n     input_file_id: String (Required)\n     completion_window: String (Required)\n     metadata (Optional): {\n         String: String (Required)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     endpoint: String (Optional)\n     errors (Optional): {\n         object: String (Required)\n         data (Optional): [\n              (Optional){\n                 code: String (Optional)\n                 message: String (Optional)\n                 param: String (Optional)\n                 line: Integer (Optional)\n             }\n         ]\n     }\n     input_file_id: String (Required)\n     completion_window: String (Optional)\n     status: String(validating/failed/in_progress/finalizing/completed/expired/cancelling/cancelled) (Optional)\n     output_file_id: String (Optional)\n     error_file_id: String (Optional)\n     created_at: Long (Optional)\n     in_progress_at: Long (Optional)\n     expires_at: Long (Optional)\n     finalizing_at: Long (Optional)\n     completed_at: Long (Optional)\n     failed_at: Long (Optional)\n     expired_at: Long (Optional)\n     cancelling_at: Long (Optional)\n     cancelled_at: Long (Optional)\n     request_counts (Optional): {\n         total: Integer (Optional)\n         completed: Integer (Optional)\n         failed: Integer (Optional)\n     }\n     metadata (Optional): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "the Batch object along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.Batch?alt=com.azure.ai.openai.models.Batch&text=Batch\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.createUpload(com.azure.ai.openai.models.CreateUploadRequest)"
  fullName: "com.azure.ai.openai.OpenAIClient.createUpload(CreateUploadRequest requestBody)"
  name: "createUpload(CreateUploadRequest requestBody)"
  nameWithType: "OpenAIClient.createUpload(CreateUploadRequest requestBody)"
  summary: "Creates an intermediate Upload object that you can add Parts to."
  parameters:
  - description: "The request body for the operation options."
    name: "requestBody"
    type: "<xref href=\"com.azure.ai.openai.models.CreateUploadRequest?alt=com.azure.ai.openai.models.CreateUploadRequest&text=CreateUploadRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Upload createUpload(CreateUploadRequest requestBody)"
  desc: "Creates an intermediate Upload object that you can add Parts to. Currently, an Upload can accept at most 8 GB in total and expires after an hour after you create it. Once you complete the Upload, we will create a File object that contains all the parts you uploaded. This File is usable in the rest of our platform as a regular File object. For certain purposes, the correct mime\\_type must be specified. Please refer to documentation for the supported MIME types for your use case. For guidance on the proper filename extensions for each purpose, please follow the documentation on creating a File."
  returns:
    description: "the Upload object can accept byte chunks in the form of Parts."
    type: "<xref href=\"com.azure.ai.openai.models.Upload?alt=com.azure.ai.openai.models.Upload&text=Upload\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.OpenAIClient.createUploadWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.createUploadWithResponse(BinaryData requestBody, RequestOptions requestOptions)"
  name: "createUploadWithResponse(BinaryData requestBody, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.createUploadWithResponse(BinaryData requestBody, RequestOptions requestOptions)"
  summary: "Creates an intermediate Upload object that you can add Parts to."
  parameters:
  - description: "The request body for the operation options."
    name: "requestBody"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Upload> createUploadWithResponse(BinaryData requestBody, RequestOptions requestOptions)"
  desc: "Creates an intermediate Upload object that you can add Parts to. Currently, an Upload can accept at most 8 GB in total and expires after an hour after you create it. Once you complete the Upload, we will create a File object that contains all the parts you uploaded. This File is usable in the rest of our platform as a regular File object. For certain purposes, the correct mime\\_type must be specified. Please refer to documentation for the supported MIME types for your use case. For guidance on the proper filename extensions for each purpose, please follow the documentation on creating a File.\n\n**Request Body Schema**\n\n```java\n{\n     filename: String (Required)\n     purpose: String(assistants/batch/fine-tune/vision) (Required)\n     bytes: int (Required)\n     mime_type: String (Required)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     created_at: long (Required)\n     filename: String (Required)\n     bytes: long (Required)\n     purpose: String (Required)\n     status: String(pending/completed/cancelled/expired) (Required)\n     expires_at: long (Required)\n     object: String(upload) (Optional)\n     file (Optional): {\n         object: String (Required)\n         id: String (Required)\n         bytes: int (Required)\n         filename: String (Required)\n         created_at: long (Required)\n         purpose: String(fine-tune/fine-tune-results/assistants/assistants_output/batch/batch_output/vision) (Required)\n         status: String(uploaded/pending/running/processed/error/deleting/deleted) (Optional)\n         status_details: String (Optional)\n     }\n }\n```"
  returns:
    description: "the Upload object can accept byte chunks in the form of Parts along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.Upload?alt=com.azure.ai.openai.models.Upload&text=Upload\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.deleteFile(java.lang.String)"
  fullName: "com.azure.ai.openai.OpenAIClient.deleteFile(String fileId)"
  name: "deleteFile(String fileId)"
  nameWithType: "OpenAIClient.deleteFile(String fileId)"
  summary: "Delete a previously uploaded file."
  parameters:
  - description: "The ID of the file to delete."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public FileDeletionStatus deleteFile(String fileId)"
  desc: "Delete a previously uploaded file."
  returns:
    description: "a status response from a file deletion operation."
    type: "<xref href=\"com.azure.ai.openai.models.FileDeletionStatus?alt=com.azure.ai.openai.models.FileDeletionStatus&text=FileDeletionStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.OpenAIClient.deleteFileWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.deleteFileWithResponse(String fileId, RequestOptions requestOptions)"
  name: "deleteFileWithResponse(String fileId, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.deleteFileWithResponse(String fileId, RequestOptions requestOptions)"
  summary: "Delete a previously uploaded file."
  parameters:
  - description: "The ID of the file to delete."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<FileDeletionStatus> deleteFileWithResponse(String fileId, RequestOptions requestOptions)"
  desc: "Delete a previously uploaded file.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     deleted: boolean (Required)\n     object: String (Required)\n }\n```"
  returns:
    description: "a status response from a file deletion operation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.FileDeletionStatus?alt=com.azure.ai.openai.models.FileDeletionStatus&text=FileDeletionStatus\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.generateSpeechFromText(java.lang.String,com.azure.ai.openai.models.SpeechGenerationOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.generateSpeechFromText(String deploymentOrModelName, SpeechGenerationOptions speechGenerationOptions)"
  name: "generateSpeechFromText(String deploymentOrModelName, SpeechGenerationOptions speechGenerationOptions)"
  nameWithType: "OpenAIClient.generateSpeechFromText(String deploymentOrModelName, SpeechGenerationOptions speechGenerationOptions)"
  summary: "Generates text-to-speech audio from the input text."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A representation of the request options that control the behavior of a\n text-to-speech operation."
    name: "speechGenerationOptions"
    type: "<xref href=\"com.azure.ai.openai.models.SpeechGenerationOptions?alt=com.azure.ai.openai.models.SpeechGenerationOptions&text=SpeechGenerationOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BinaryData generateSpeechFromText(String deploymentOrModelName, SpeechGenerationOptions speechGenerationOptions)"
  desc: "Generates text-to-speech audio from the input text."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.OpenAIClient.generateSpeechFromTextWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.generateSpeechFromTextWithResponse(String deploymentOrModelName, BinaryData speechGenerationOptions, RequestOptions requestOptions)"
  name: "generateSpeechFromTextWithResponse(String deploymentOrModelName, BinaryData speechGenerationOptions, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.generateSpeechFromTextWithResponse(String deploymentOrModelName, BinaryData speechGenerationOptions, RequestOptions requestOptions)"
  summary: "Generates text-to-speech audio from the input text."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A representation of the request options that control the behavior of a\n text-to-speech operation."
    name: "speechGenerationOptions"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> generateSpeechFromTextWithResponse(String deploymentOrModelName, BinaryData speechGenerationOptions, RequestOptions requestOptions)"
  desc: "Generates text-to-speech audio from the input text.\n\n**Request Body Schema**\n\n```java\n{\n     input: String (Required)\n     voice: String(alloy/echo/fable/onyx/nova/shimmer) (Required)\n     response_format: String(mp3/opus/aac/flac) (Optional)\n     speed: Double (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\nBinaryData\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getAudioTranscription(java.lang.String,java.lang.String,com.azure.ai.openai.models.AudioTranscriptionOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getAudioTranscription(String deploymentOrModelName, String fileName, AudioTranscriptionOptions audioTranscriptionOptions)"
  name: "getAudioTranscription(String deploymentOrModelName, String fileName, AudioTranscriptionOptions audioTranscriptionOptions)"
  nameWithType: "OpenAIClient.getAudioTranscription(String deploymentOrModelName, String fileName, AudioTranscriptionOptions audioTranscriptionOptions)"
  summary: "Gets transcribed text and associated metadata from provided spoken audio file data."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The file name that is represented in the <code>file</code> field of <xref uid=\"com.azure.ai.openai.models.AudioTranscriptionOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AudioTranscriptionOptions\"></xref>."
    name: "fileName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for an audio transcription request."
    name: "audioTranscriptionOptions"
    type: "<xref href=\"com.azure.ai.openai.models.AudioTranscriptionOptions?alt=com.azure.ai.openai.models.AudioTranscriptionOptions&text=AudioTranscriptionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AudioTranscription getAudioTranscription(String deploymentOrModelName, String fileName, AudioTranscriptionOptions audioTranscriptionOptions)"
  desc: "Gets transcribed text and associated metadata from provided spoken audio file data. Audio will be transcribed in the written language corresponding to the language it was spoken in."
  returns:
    description: "<xref uid=\"com.azure.ai.openai.models.AudioTranscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AudioTranscription\"></xref> transcribed text and associated metadata from provided spoken audio data."
    type: "<xref href=\"com.azure.ai.openai.models.AudioTranscription?alt=com.azure.ai.openai.models.AudioTranscription&text=AudioTranscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.OpenAIClient.getAudioTranscriptionAsPlainText(java.lang.String,com.azure.ai.openai.models.AudioTranscriptionOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getAudioTranscriptionAsPlainText(String deploymentOrModelName, AudioTranscriptionOptions audioTranscriptionOptions)"
  name: "getAudioTranscriptionAsPlainText(String deploymentOrModelName, AudioTranscriptionOptions audioTranscriptionOptions)"
  nameWithType: "OpenAIClient.getAudioTranscriptionAsPlainText(String deploymentOrModelName, AudioTranscriptionOptions audioTranscriptionOptions)"
  summary: "Gets transcribed text and associated metadata from provided spoken audio data."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for an audio transcription request."
    name: "audioTranscriptionOptions"
    type: "<xref href=\"com.azure.ai.openai.models.AudioTranscriptionOptions?alt=com.azure.ai.openai.models.AudioTranscriptionOptions&text=AudioTranscriptionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String getAudioTranscriptionAsPlainText(String deploymentOrModelName, AudioTranscriptionOptions audioTranscriptionOptions)"
  desc: "Gets transcribed text and associated metadata from provided spoken audio data. Audio will be transcribed in the written language corresponding to the language it was spoken in."
  returns:
    description: "transcribed text and associated metadata from provided spoken audio data."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.OpenAIClient.getAudioTranscriptionText(java.lang.String,java.lang.String,com.azure.ai.openai.models.AudioTranscriptionOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getAudioTranscriptionText(String deploymentOrModelName, String fileName, AudioTranscriptionOptions audioTranscriptionOptions)"
  name: "getAudioTranscriptionText(String deploymentOrModelName, String fileName, AudioTranscriptionOptions audioTranscriptionOptions)"
  nameWithType: "OpenAIClient.getAudioTranscriptionText(String deploymentOrModelName, String fileName, AudioTranscriptionOptions audioTranscriptionOptions)"
  summary: "Gets transcribed text and associated metadata from provided spoken audio file data."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The file name that is represented in the <code>file</code> field of <xref uid=\"com.azure.ai.openai.models.AudioTranscriptionOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AudioTranscriptionOptions\"></xref>."
    name: "fileName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for an audio transcription request."
    name: "audioTranscriptionOptions"
    type: "<xref href=\"com.azure.ai.openai.models.AudioTranscriptionOptions?alt=com.azure.ai.openai.models.AudioTranscriptionOptions&text=AudioTranscriptionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String getAudioTranscriptionText(String deploymentOrModelName, String fileName, AudioTranscriptionOptions audioTranscriptionOptions)"
  desc: "Gets transcribed text and associated metadata from provided spoken audio file data. Audio will be transcribed in the written language corresponding to the language it was spoken in."
  returns:
    description: "transcribed text and associated metadata from provided spoken audio data."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.OpenAIClient.getAudioTranscriptionTextWithResponse(java.lang.String,java.lang.String,com.azure.ai.openai.models.AudioTranscriptionOptions,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getAudioTranscriptionTextWithResponse(String deploymentOrModelName, String fileName, AudioTranscriptionOptions audioTranscriptionOptions, RequestOptions requestOptions)"
  name: "getAudioTranscriptionTextWithResponse(String deploymentOrModelName, String fileName, AudioTranscriptionOptions audioTranscriptionOptions, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.getAudioTranscriptionTextWithResponse(String deploymentOrModelName, String fileName, AudioTranscriptionOptions audioTranscriptionOptions, RequestOptions requestOptions)"
  summary: "Gets transcribed text and associated metadata from provided spoken audio file data."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The file name that is represented in the <code>file</code> field of <xref uid=\"com.azure.ai.openai.models.AudioTranscriptionOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AudioTranscriptionOptions\"></xref>."
    name: "fileName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for an audio transcription request."
    name: "audioTranscriptionOptions"
    type: "<xref href=\"com.azure.ai.openai.models.AudioTranscriptionOptions?alt=com.azure.ai.openai.models.AudioTranscriptionOptions&text=AudioTranscriptionOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<String> getAudioTranscriptionTextWithResponse(String deploymentOrModelName, String fileName, AudioTranscriptionOptions audioTranscriptionOptions, RequestOptions requestOptions)"
  desc: "Gets transcribed text and associated metadata from provided spoken audio file data. Audio will be transcribed in the written language corresponding to the language it was spoken in."
  returns:
    description: "transcribed text and associated metadata from provided spoken audio data."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getAudioTranscriptionWithResponse(java.lang.String,java.lang.String,com.azure.ai.openai.models.AudioTranscriptionOptions,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getAudioTranscriptionWithResponse(String deploymentOrModelName, String fileName, AudioTranscriptionOptions audioTranscriptionOptions, RequestOptions requestOptions)"
  name: "getAudioTranscriptionWithResponse(String deploymentOrModelName, String fileName, AudioTranscriptionOptions audioTranscriptionOptions, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.getAudioTranscriptionWithResponse(String deploymentOrModelName, String fileName, AudioTranscriptionOptions audioTranscriptionOptions, RequestOptions requestOptions)"
  summary: "Gets transcribed text and associated metadata from provided spoken audio file data."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The file name that is represented in the <code>file</code> field of <xref uid=\"com.azure.ai.openai.models.AudioTranscriptionOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AudioTranscriptionOptions\"></xref>."
    name: "fileName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for an audio transcription request."
    name: "audioTranscriptionOptions"
    type: "<xref href=\"com.azure.ai.openai.models.AudioTranscriptionOptions?alt=com.azure.ai.openai.models.AudioTranscriptionOptions&text=AudioTranscriptionOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<AudioTranscription> getAudioTranscriptionWithResponse(String deploymentOrModelName, String fileName, AudioTranscriptionOptions audioTranscriptionOptions, RequestOptions requestOptions)"
  desc: "Gets transcribed text and associated metadata from provided spoken audio file data. Audio will be transcribed in the written language corresponding to the language it was spoken in."
  returns:
    description: "<xref uid=\"com.azure.ai.openai.models.AudioTranscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AudioTranscription\"></xref> transcribed text and associated metadata from provided spoken audio data along\n with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.AudioTranscription?alt=com.azure.ai.openai.models.AudioTranscription&text=AudioTranscription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getAudioTranslation(java.lang.String,java.lang.String,com.azure.ai.openai.models.AudioTranslationOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getAudioTranslation(String deploymentOrModelName, String fileName, AudioTranslationOptions audioTranslationOptions)"
  name: "getAudioTranslation(String deploymentOrModelName, String fileName, AudioTranslationOptions audioTranslationOptions)"
  nameWithType: "OpenAIClient.getAudioTranslation(String deploymentOrModelName, String fileName, AudioTranslationOptions audioTranslationOptions)"
  summary: "Gets English language transcribed text and associated metadata from provided spoken audio file data."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The file name that is represented in the <code>file</code> field of <xref uid=\"com.azure.ai.openai.models.AudioTranslationOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AudioTranslationOptions\"></xref>."
    name: "fileName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for an audio translation request."
    name: "audioTranslationOptions"
    type: "<xref href=\"com.azure.ai.openai.models.AudioTranslationOptions?alt=com.azure.ai.openai.models.AudioTranslationOptions&text=AudioTranslationOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AudioTranslation getAudioTranslation(String deploymentOrModelName, String fileName, AudioTranslationOptions audioTranslationOptions)"
  desc: "Gets English language transcribed text and associated metadata from provided spoken audio file data."
  returns:
    description: "<xref uid=\"com.azure.ai.openai.models.AudioTranscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AudioTranscription\"></xref> english language transcribed text and associated metadata from provided spoken\n audio file data."
    type: "<xref href=\"com.azure.ai.openai.models.AudioTranslation?alt=com.azure.ai.openai.models.AudioTranslation&text=AudioTranslation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.OpenAIClient.getAudioTranslationAsPlainText(java.lang.String,com.azure.ai.openai.models.AudioTranslationOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getAudioTranslationAsPlainText(String deploymentOrModelName, AudioTranslationOptions audioTranslationOptions)"
  name: "getAudioTranslationAsPlainText(String deploymentOrModelName, AudioTranslationOptions audioTranslationOptions)"
  nameWithType: "OpenAIClient.getAudioTranslationAsPlainText(String deploymentOrModelName, AudioTranslationOptions audioTranslationOptions)"
  summary: "Gets English language transcribed text and associated metadata from provided spoken audio data."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for an audio translation request."
    name: "audioTranslationOptions"
    type: "<xref href=\"com.azure.ai.openai.models.AudioTranslationOptions?alt=com.azure.ai.openai.models.AudioTranslationOptions&text=AudioTranslationOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String getAudioTranslationAsPlainText(String deploymentOrModelName, AudioTranslationOptions audioTranslationOptions)"
  desc: "Gets English language transcribed text and associated metadata from provided spoken audio data."
  returns:
    description: "english language transcribed text and associated metadata from provided spoken audio data."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.OpenAIClient.getAudioTranslationText(java.lang.String,java.lang.String,com.azure.ai.openai.models.AudioTranslationOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getAudioTranslationText(String deploymentOrModelName, String fileName, AudioTranslationOptions audioTranslationOptions)"
  name: "getAudioTranslationText(String deploymentOrModelName, String fileName, AudioTranslationOptions audioTranslationOptions)"
  nameWithType: "OpenAIClient.getAudioTranslationText(String deploymentOrModelName, String fileName, AudioTranslationOptions audioTranslationOptions)"
  summary: "Gets English language transcribed text and associated metadata from provided spoken audio file data."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The file name that is represented in the <code>file</code> field of <xref uid=\"com.azure.ai.openai.models.AudioTranslationOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AudioTranslationOptions\"></xref>."
    name: "fileName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for an audio translation request."
    name: "audioTranslationOptions"
    type: "<xref href=\"com.azure.ai.openai.models.AudioTranslationOptions?alt=com.azure.ai.openai.models.AudioTranslationOptions&text=AudioTranslationOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String getAudioTranslationText(String deploymentOrModelName, String fileName, AudioTranslationOptions audioTranslationOptions)"
  desc: "Gets English language transcribed text and associated metadata from provided spoken audio file data."
  returns:
    description: "english language transcribed text and associated metadata from provided spoken audio file data."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.OpenAIClient.getAudioTranslationTextWithResponse(java.lang.String,java.lang.String,com.azure.ai.openai.models.AudioTranslationOptions,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getAudioTranslationTextWithResponse(String deploymentOrModelName, String fileName, AudioTranslationOptions audioTranslationOptions, RequestOptions requestOptions)"
  name: "getAudioTranslationTextWithResponse(String deploymentOrModelName, String fileName, AudioTranslationOptions audioTranslationOptions, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.getAudioTranslationTextWithResponse(String deploymentOrModelName, String fileName, AudioTranslationOptions audioTranslationOptions, RequestOptions requestOptions)"
  summary: "Gets English language transcribed text and associated metadata from provided spoken audio file data."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The file name that is represented in the <code>file</code> field of <xref uid=\"com.azure.ai.openai.models.AudioTranslationOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AudioTranslationOptions\"></xref>."
    name: "fileName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for an audio translation request."
    name: "audioTranslationOptions"
    type: "<xref href=\"com.azure.ai.openai.models.AudioTranslationOptions?alt=com.azure.ai.openai.models.AudioTranslationOptions&text=AudioTranslationOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<String> getAudioTranslationTextWithResponse(String deploymentOrModelName, String fileName, AudioTranslationOptions audioTranslationOptions, RequestOptions requestOptions)"
  desc: "Gets English language transcribed text and associated metadata from provided spoken audio file data."
  returns:
    description: "english language transcribed text and associated metadata from provided spoken audio file data along with\n <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getAudioTranslationWithResponse(java.lang.String,java.lang.String,com.azure.ai.openai.models.AudioTranslationOptions,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getAudioTranslationWithResponse(String deploymentOrModelName, String fileName, AudioTranslationOptions audioTranslationOptions, RequestOptions requestOptions)"
  name: "getAudioTranslationWithResponse(String deploymentOrModelName, String fileName, AudioTranslationOptions audioTranslationOptions, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.getAudioTranslationWithResponse(String deploymentOrModelName, String fileName, AudioTranslationOptions audioTranslationOptions, RequestOptions requestOptions)"
  summary: "Gets English language transcribed text and associated metadata from provided spoken audio file data."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The file name that is represented in the <code>file</code> field of <xref uid=\"com.azure.ai.openai.models.AudioTranslationOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AudioTranslationOptions\"></xref>."
    name: "fileName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for an audio translation request."
    name: "audioTranslationOptions"
    type: "<xref href=\"com.azure.ai.openai.models.AudioTranslationOptions?alt=com.azure.ai.openai.models.AudioTranslationOptions&text=AudioTranslationOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<AudioTranslation> getAudioTranslationWithResponse(String deploymentOrModelName, String fileName, AudioTranslationOptions audioTranslationOptions, RequestOptions requestOptions)"
  desc: "Gets English language transcribed text and associated metadata from provided spoken audio file data."
  returns:
    description: "<xref uid=\"com.azure.ai.openai.models.AudioTranslation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AudioTranslation\"></xref> english language transcribed text and associated metadata from provided spoken\n audio file data along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.AudioTranslation?alt=com.azure.ai.openai.models.AudioTranslation&text=AudioTranslation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getBatch(java.lang.String)"
  fullName: "com.azure.ai.openai.OpenAIClient.getBatch(String batchId)"
  name: "getBatch(String batchId)"
  nameWithType: "OpenAIClient.getBatch(String batchId)"
  summary: "Gets details for a single batch specified by the given batchID."
  parameters:
  - description: "The identifier of the batch."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Batch getBatch(String batchId)"
  desc: "Gets details for a single batch specified by the given batchID."
  returns:
    description: "details for a single batch specified by the given batchID."
    type: "<xref href=\"com.azure.ai.openai.models.Batch?alt=com.azure.ai.openai.models.Batch&text=Batch\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.OpenAIClient.getBatchWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getBatchWithResponse(String batchId, RequestOptions requestOptions)"
  name: "getBatchWithResponse(String batchId, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.getBatchWithResponse(String batchId, RequestOptions requestOptions)"
  summary: "Gets details for a single batch specified by the given batchID."
  parameters:
  - description: "The identifier of the batch."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Batch> getBatchWithResponse(String batchId, RequestOptions requestOptions)"
  desc: "Gets details for a single batch specified by the given batchID.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     endpoint: String (Optional)\n     errors (Optional): {\n         object: String (Required)\n         data (Optional): [\n              (Optional){\n                 code: String (Optional)\n                 message: String (Optional)\n                 param: String (Optional)\n                 line: Integer (Optional)\n             }\n         ]\n     }\n     input_file_id: String (Required)\n     completion_window: String (Optional)\n     status: String(validating/failed/in_progress/finalizing/completed/expired/cancelling/cancelled) (Optional)\n     output_file_id: String (Optional)\n     error_file_id: String (Optional)\n     created_at: Long (Optional)\n     in_progress_at: Long (Optional)\n     expires_at: Long (Optional)\n     finalizing_at: Long (Optional)\n     completed_at: Long (Optional)\n     failed_at: Long (Optional)\n     expired_at: Long (Optional)\n     cancelling_at: Long (Optional)\n     cancelled_at: Long (Optional)\n     request_counts (Optional): {\n         total: Integer (Optional)\n         completed: Integer (Optional)\n         failed: Integer (Optional)\n     }\n     metadata (Optional): {\n         String: String (Required)\n     }\n }\n```"
  returns:
    description: "details for a single batch specified by the given batchID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.Batch?alt=com.azure.ai.openai.models.Batch&text=Batch\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getChatCompletions(java.lang.String,com.azure.ai.openai.models.ChatCompletionsOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getChatCompletions(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions)"
  name: "getChatCompletions(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions)"
  nameWithType: "OpenAIClient.getChatCompletions(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions)"
  summary: "Gets chat completions for the provided chat messages."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for a chat completions request.\n Completions support a wide variety of tasks and generate text that continues from or \"completes\"\n provided prompt data."
    name: "chatCompletionsOptions"
    type: "<xref href=\"com.azure.ai.openai.models.ChatCompletionsOptions?alt=com.azure.ai.openai.models.ChatCompletionsOptions&text=ChatCompletionsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChatCompletions getChatCompletions(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions)"
  desc: "Gets chat completions for the provided chat messages. Completions support a wide variety of tasks and generate text that continues from or \"completes\" provided prompt data."
  returns:
    description: "chat completions for the provided chat messages.\n Completions support a wide variety of tasks and generate text that continues from or \"completes\"\n provided prompt data."
    type: "<xref href=\"com.azure.ai.openai.models.ChatCompletions?alt=com.azure.ai.openai.models.ChatCompletions&text=ChatCompletions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.OpenAIClient.getChatCompletionsStream(java.lang.String,com.azure.ai.openai.models.ChatCompletionsOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getChatCompletionsStream(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions)"
  name: "getChatCompletionsStream(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions)"
  nameWithType: "OpenAIClient.getChatCompletionsStream(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions)"
  summary: "Gets chat completions for the provided chat messages in streaming mode."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for a chat completions request. Completions support a\n wide variety of tasks and generate text that continues from or \"completes\" provided prompt data."
    name: "chatCompletionsOptions"
    type: "<xref href=\"com.azure.ai.openai.models.ChatCompletionsOptions?alt=com.azure.ai.openai.models.ChatCompletionsOptions&text=ChatCompletionsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IterableStream<ChatCompletions> getChatCompletionsStream(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions)"
  desc: "Gets chat completions for the provided chat messages in streaming mode. Chat completions support a wide variety of tasks and generate text that continues from or \"completes\" provided prompt data.\n\n**Code Samples**\n\n```java\nopenAIClient.getChatCompletionsStream(deploymentOrModelId, new ChatCompletionsOptions(chatMessages))\n         .forEach(chatCompletions -> {\n             if (CoreUtils.isNullOrEmpty(chatCompletions.getChoices())) {\n                 return;\n             }\n             ChatResponseMessage delta = chatCompletions.getChoices().get(0).getDelta();\n             if (delta.getRole() != null) {\n                 System.out.println(\"Role = \" + delta.getRole());\n             }\n             if (delta.getContent() != null) {\n                 String content = delta.getContent();\n                 System.out.print(content);\n             }\n         });\n```"
  returns:
    description: "chat completions stream for the provided chat messages. Completions support a wide variety of tasks and\n generate text that continues from or \"completes\" provided prompt data."
    type: "<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.ChatCompletions?alt=com.azure.ai.openai.models.ChatCompletions&text=ChatCompletions\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getChatCompletionsStream(java.lang.String,com.azure.ai.openai.models.ChatCompletionsOptions,com.azure.ai.openai.models.ChatCompletionStreamOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getChatCompletionsStream(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions, ChatCompletionStreamOptions streamOptions)"
  name: "getChatCompletionsStream(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions, ChatCompletionStreamOptions streamOptions)"
  nameWithType: "OpenAIClient.getChatCompletionsStream(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions, ChatCompletionStreamOptions streamOptions)"
  summary: "Gets chat completions for the provided chat messages in streaming mode."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for a chat completions request. Completions support a\n wide variety of tasks and generate text that continues from or \"completes\" provided prompt data."
    name: "chatCompletionsOptions"
    type: "<xref href=\"com.azure.ai.openai.models.ChatCompletionsOptions?alt=com.azure.ai.openai.models.ChatCompletionsOptions&text=ChatCompletionsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the streamOptions value to set."
    name: "streamOptions"
    type: "<xref href=\"com.azure.ai.openai.models.ChatCompletionStreamOptions?alt=com.azure.ai.openai.models.ChatCompletionStreamOptions&text=ChatCompletionStreamOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IterableStream<ChatCompletions> getChatCompletionsStream(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions, ChatCompletionStreamOptions streamOptions)"
  desc: "Gets chat completions for the provided chat messages in streaming mode. Chat completions support a wide variety of tasks and generate text that continues from or \"completes\" provided prompt data."
  returns:
    description: "chat completions stream for the provided chat messages. Completions support a wide variety of tasks and\n generate text that continues from or \"completes\" provided prompt data."
    type: "<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.ChatCompletions?alt=com.azure.ai.openai.models.ChatCompletions&text=ChatCompletions\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getChatCompletionsStreamWithResponse(java.lang.String,com.azure.ai.openai.models.ChatCompletionsOptions,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getChatCompletionsStreamWithResponse(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions, RequestOptions requestOptions)"
  name: "getChatCompletionsStreamWithResponse(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.getChatCompletionsStreamWithResponse(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions, RequestOptions requestOptions)"
  summary: "Gets chat completions for the provided chat messages in streaming mode."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for a chat completions request. Completions support a\n wide variety of tasks and generate text that continues from or \"completes\" provided prompt data."
    name: "chatCompletionsOptions"
    type: "<xref href=\"com.azure.ai.openai.models.ChatCompletionsOptions?alt=com.azure.ai.openai.models.ChatCompletionsOptions&text=ChatCompletionsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<IterableStream<ChatCompletions>> getChatCompletionsStreamWithResponse(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions, RequestOptions requestOptions)"
  desc: "Gets chat completions for the provided chat messages in streaming mode. Chat completions support a wide variety of tasks and generate text that continues from or \"completes\" provided prompt data.\n\n**Code Samples**\n\n```java\nopenAIClient\n     .getChatCompletionsStreamWithResponse(deploymentOrModelId, new ChatCompletionsOptions(chatMessages),\n         new RequestOptions().setHeader(\"my-header\", \"my-header-value\"))\n     .getValue()\n     .forEach(chatCompletions -> {\n         if (CoreUtils.isNullOrEmpty(chatCompletions.getChoices())) {\n             return;\n         }\n         ChatResponseMessage delta = chatCompletions.getChoices().get(0).getDelta();\n         if (delta.getRole() != null) {\n             System.out.println(\"Role = \" + delta.getRole());\n         }\n         if (delta.getContent() != null) {\n             String content = delta.getContent();\n             System.out.print(content);\n         }\n     });\n```"
  returns:
    description: "chat completions stream for the provided chat messages. Completions support a wide variety of tasks and\n generate text that continues from or \"completes\" provided prompt data."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.ChatCompletions?alt=com.azure.ai.openai.models.ChatCompletions&text=ChatCompletions\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getChatCompletionsWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getChatCompletionsWithResponse(String deploymentOrModelName, BinaryData chatCompletionsOptions, RequestOptions requestOptions)"
  name: "getChatCompletionsWithResponse(String deploymentOrModelName, BinaryData chatCompletionsOptions, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.getChatCompletionsWithResponse(String deploymentOrModelName, BinaryData chatCompletionsOptions, RequestOptions requestOptions)"
  summary: "Gets chat completions for the provided chat messages."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for a chat completions request. Completions support a\n wide variety of tasks and generate text that continues from or \"completes\" provided prompt data."
    name: "chatCompletionsOptions"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getChatCompletionsWithResponse(String deploymentOrModelName, BinaryData chatCompletionsOptions, RequestOptions requestOptions)"
  desc: "Gets chat completions for the provided chat messages. Completions support a wide variety of tasks and generate text that continues from or \"completes\" provided prompt data.\n\n**Request Body Schema**\n\n```java\n{\n     messages (Required): [\n          (Required){\n             role: String(system/assistant/user) (Required)\n             content: String (Optional)\n         }\n     ]\n     max_tokens: Integer (Optional)\n     temperature: Double (Optional)\n     top_p: Double (Optional)\n     logit_bias (Optional): {\n         String: int (Optional)\n     }\n     user: String (Optional)\n     n: Integer (Optional)\n     stop (Optional): [\n         String (Optional)\n     ]\n     presence_penalty: Double (Optional)\n     frequency_penalty: Double (Optional)\n     stream: Boolean (Optional)\n     model: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     created: int (Required)\n     choices (Required): [\n          (Required){\n             message (Optional): {\n                 role: String(system/assistant/user) (Required)\n                 content: String (Optional)\n             }\n             index: int (Required)\n             finish_reason: String(stopped/tokenLimitReached/contentFiltered) (Required)\n             delta (Optional): {\n                 role: String(system/assistant/user) (Optional)\n                 content: String (Optional)\n             }\n         }\n     ]\n     usage (Required): {\n         completion_tokens: int (Required)\n         prompt_tokens: int (Required)\n         total_tokens: int (Required)\n     }\n }\n```"
  returns:
    description: "chat completions for the provided chat messages. Completions support a wide variety of tasks and generate\n text that continues from or \"completes\" provided prompt data along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getChatCompletionsWithResponse(java.lang.String,com.azure.ai.openai.models.ChatCompletionsOptions,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getChatCompletionsWithResponse(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions, RequestOptions requestOptions)"
  name: "getChatCompletionsWithResponse(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.getChatCompletionsWithResponse(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions, RequestOptions requestOptions)"
  summary: "Gets chat completions for the provided chat messages."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for a chat completions request. Completions support a\n wide variety of tasks and generate text that continues from or \"completes\" provided prompt data."
    name: "chatCompletionsOptions"
    type: "<xref href=\"com.azure.ai.openai.models.ChatCompletionsOptions?alt=com.azure.ai.openai.models.ChatCompletionsOptions&text=ChatCompletionsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ChatCompletions> getChatCompletionsWithResponse(String deploymentOrModelName, ChatCompletionsOptions chatCompletionsOptions, RequestOptions requestOptions)"
  desc: "Gets chat completions for the provided chat messages. Completions support a wide variety of tasks and generate text that continues from or \"completes\" provided prompt data.\n\n**Request Body Schema**\n\n```java\n{\n     messages (Required): [\n          (Required){\n             role: String(system/assistant/user) (Required)\n             content: String (Optional)\n         }\n     ]\n     max_tokens: Integer (Optional)\n     temperature: Double (Optional)\n     top_p: Double (Optional)\n     logit_bias (Optional): {\n         String: int (Optional)\n     }\n     user: String (Optional)\n     n: Integer (Optional)\n     stop (Optional): [\n         String (Optional)\n     ]\n     presence_penalty: Double (Optional)\n     frequency_penalty: Double (Optional)\n     stream: Boolean (Optional)\n     model: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     created: int (Required)\n     choices (Required): [\n          (Required){\n             message (Optional): {\n                 role: String(system/assistant/user) (Required)\n                 content: String (Optional)\n             }\n             index: int (Required)\n             finish_reason: String(stopped/tokenLimitReached/contentFiltered) (Required)\n             delta (Optional): {\n                 role: String(system/assistant/user) (Optional)\n                 content: String (Optional)\n             }\n         }\n     ]\n     usage (Required): {\n         completion_tokens: int (Required)\n         prompt_tokens: int (Required)\n         total_tokens: int (Required)\n     }\n }\n```"
  returns:
    description: "chat completions for the provided chat messages. Completions support a wide variety of tasks and generate\n text that continues from or \"completes\" provided prompt data along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.ChatCompletions?alt=com.azure.ai.openai.models.ChatCompletions&text=ChatCompletions\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getCompletions(java.lang.String,com.azure.ai.openai.models.CompletionsOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getCompletions(String deploymentOrModelName, CompletionsOptions completionsOptions)"
  name: "getCompletions(String deploymentOrModelName, CompletionsOptions completionsOptions)"
  nameWithType: "OpenAIClient.getCompletions(String deploymentOrModelName, CompletionsOptions completionsOptions)"
  summary: "Gets completions for the provided input prompts."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for a completions request.\n Completions support a wide variety of tasks and generate text that continues from or \"completes\"\n provided prompt data."
    name: "completionsOptions"
    type: "<xref href=\"com.azure.ai.openai.models.CompletionsOptions?alt=com.azure.ai.openai.models.CompletionsOptions&text=CompletionsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Completions getCompletions(String deploymentOrModelName, CompletionsOptions completionsOptions)"
  desc: "Gets completions for the provided input prompts. Completions support a wide variety of tasks and generate text that continues from or \"completes\" provided prompt data."
  returns:
    description: "completions for the provided input prompts.\n Completions support a wide variety of tasks and generate text that continues from or \"completes\"\n provided prompt data."
    type: "<xref href=\"com.azure.ai.openai.models.Completions?alt=com.azure.ai.openai.models.Completions&text=Completions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.OpenAIClient.getCompletions(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.openai.OpenAIClient.getCompletions(String deploymentOrModelName, String prompt)"
  name: "getCompletions(String deploymentOrModelName, String prompt)"
  nameWithType: "OpenAIClient.getCompletions(String deploymentOrModelName, String prompt)"
  summary: "Gets completions for the provided input prompt."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The prompt to generate completion text from."
    name: "prompt"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Completions getCompletions(String deploymentOrModelName, String prompt)"
  desc: "Gets completions for the provided input prompt. Completions support a wide variety of tasks and generate text that continues from or \"completes\" provided prompt data."
  returns:
    description: "completions for the provided input prompts. Completions support a wide variety of tasks and generate text\n that continues from or \"completes\" provided prompt data."
    type: "<xref href=\"com.azure.ai.openai.models.Completions?alt=com.azure.ai.openai.models.Completions&text=Completions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.OpenAIClient.getCompletionsStream(java.lang.String,com.azure.ai.openai.models.CompletionsOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getCompletionsStream(String deploymentOrModelName, CompletionsOptions completionsOptions)"
  name: "getCompletionsStream(String deploymentOrModelName, CompletionsOptions completionsOptions)"
  nameWithType: "OpenAIClient.getCompletionsStream(String deploymentOrModelName, CompletionsOptions completionsOptions)"
  summary: "Gets completions as a stream for the provided input prompts."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for a completions request. Completions support a wide\n variety of tasks and generate text that continues from or \"completes\" provided prompt data."
    name: "completionsOptions"
    type: "<xref href=\"com.azure.ai.openai.models.CompletionsOptions?alt=com.azure.ai.openai.models.CompletionsOptions&text=CompletionsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IterableStream<Completions> getCompletionsStream(String deploymentOrModelName, CompletionsOptions completionsOptions)"
  desc: "Gets completions as a stream for the provided input prompts. Completions support a wide variety of tasks and generate text that continues from or \"completes\" provided prompt data."
  returns:
    description: "an <xref uid=\"com.azure.core.util.IterableStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IterableStream\"></xref> of completions for the provided input prompts. Completions support a wide\n variety of tasks and generate text that continues from or \"completes\" provided prompt data."
    type: "<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.Completions?alt=com.azure.ai.openai.models.Completions&text=Completions\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getCompletionsStream(java.lang.String,com.azure.ai.openai.models.CompletionsOptions,com.azure.ai.openai.models.ChatCompletionStreamOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getCompletionsStream(String deploymentOrModelName, CompletionsOptions completionsOptions, ChatCompletionStreamOptions streamOptions)"
  name: "getCompletionsStream(String deploymentOrModelName, CompletionsOptions completionsOptions, ChatCompletionStreamOptions streamOptions)"
  nameWithType: "OpenAIClient.getCompletionsStream(String deploymentOrModelName, CompletionsOptions completionsOptions, ChatCompletionStreamOptions streamOptions)"
  summary: "Gets completions as a stream for the provided input prompts."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for a completions request. Completions support a wide\n variety of tasks and generate text that continues from or \"completes\" provided prompt data."
    name: "completionsOptions"
    type: "<xref href=\"com.azure.ai.openai.models.CompletionsOptions?alt=com.azure.ai.openai.models.CompletionsOptions&text=CompletionsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the streamOptions value to set."
    name: "streamOptions"
    type: "<xref href=\"com.azure.ai.openai.models.ChatCompletionStreamOptions?alt=com.azure.ai.openai.models.ChatCompletionStreamOptions&text=ChatCompletionStreamOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IterableStream<Completions> getCompletionsStream(String deploymentOrModelName, CompletionsOptions completionsOptions, ChatCompletionStreamOptions streamOptions)"
  desc: "Gets completions as a stream for the provided input prompts. Completions support a wide variety of tasks and generate text that continues from or \"completes\" provided prompt data."
  returns:
    description: "an <xref uid=\"com.azure.core.util.IterableStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IterableStream\"></xref> of completions for the provided input prompts. Completions support a wide\n variety of tasks and generate text that continues from or \"completes\" provided prompt data."
    type: "<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.Completions?alt=com.azure.ai.openai.models.Completions&text=Completions\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getCompletionsWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getCompletionsWithResponse(String deploymentOrModelName, BinaryData completionsOptions, RequestOptions requestOptions)"
  name: "getCompletionsWithResponse(String deploymentOrModelName, BinaryData completionsOptions, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.getCompletionsWithResponse(String deploymentOrModelName, BinaryData completionsOptions, RequestOptions requestOptions)"
  summary: "Gets completions for the provided input prompts."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for a completions request. Completions support a wide\n variety of tasks and generate text that continues from or \"completes\" provided prompt data."
    name: "completionsOptions"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getCompletionsWithResponse(String deploymentOrModelName, BinaryData completionsOptions, RequestOptions requestOptions)"
  desc: "Gets completions for the provided input prompts. Completions support a wide variety of tasks and generate text that continues from or \"completes\" provided prompt data.\n\n**Request Body Schema**\n\n```java\n{\n     prompt (Required): [\n         String (Required)\n     ]\n     max_tokens: Integer (Optional)\n     temperature: Double (Optional)\n     top_p: Double (Optional)\n     logit_bias (Optional): {\n         String: int (Optional)\n     }\n     user: String (Optional)\n     n: Integer (Optional)\n     logprobs: Integer (Optional)\n     echo: Boolean (Optional)\n     stop (Optional): [\n         String (Optional)\n     ]\n     presence_penalty: Double (Optional)\n     frequency_penalty: Double (Optional)\n     best_of: Integer (Optional)\n     stream: Boolean (Optional)\n     model: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     created: int (Required)\n     choices (Required): [\n          (Required){\n             text: String (Required)\n             index: int (Required)\n             logprobs (Required): {\n                 tokens (Required): [\n                     String (Required)\n                 ]\n                 token_logprobs (Required): [\n                     double (Required)\n                 ]\n                 top_logprobs (Required): [\n                      (Required){\n                         String: double (Required)\n                     }\n                 ]\n                 text_offset (Required): [\n                     int (Required)\n                 ]\n             }\n             finish_reason: String(stopped/tokenLimitReached/contentFiltered) (Required)\n         }\n     ]\n     usage (Required): {\n         completion_tokens: int (Required)\n         prompt_tokens: int (Required)\n         total_tokens: int (Required)\n     }\n }\n```"
  returns:
    description: "completions for the provided input prompts. Completions support a wide variety of tasks and generate text\n that continues from or \"completes\" provided prompt data along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getCompletionsWithResponse(java.lang.String,com.azure.ai.openai.models.CompletionsOptions,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getCompletionsWithResponse(String deploymentOrModelName, CompletionsOptions completionsOptions, RequestOptions requestOptions)"
  name: "getCompletionsWithResponse(String deploymentOrModelName, CompletionsOptions completionsOptions, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.getCompletionsWithResponse(String deploymentOrModelName, CompletionsOptions completionsOptions, RequestOptions requestOptions)"
  summary: "Gets completions for the provided input prompts."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for a completions request. Completions support a wide\n variety of tasks and generate text that continues from or \"completes\" provided prompt data."
    name: "completionsOptions"
    type: "<xref href=\"com.azure.ai.openai.models.CompletionsOptions?alt=com.azure.ai.openai.models.CompletionsOptions&text=CompletionsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Completions> getCompletionsWithResponse(String deploymentOrModelName, CompletionsOptions completionsOptions, RequestOptions requestOptions)"
  desc: "Gets completions for the provided input prompts. Completions support a wide variety of tasks and generate text that continues from or \"completes\" provided prompt data.\n\n**Request Body Schema**\n\n```java\n{\n     prompt (Required): [\n         String (Required)\n     ]\n     max_tokens: Integer (Optional)\n     temperature: Double (Optional)\n     top_p: Double (Optional)\n     logit_bias (Optional): {\n         String: int (Optional)\n     }\n     user: String (Optional)\n     n: Integer (Optional)\n     logprobs: Integer (Optional)\n     echo: Boolean (Optional)\n     stop (Optional): [\n         String (Optional)\n     ]\n     presence_penalty: Double (Optional)\n     frequency_penalty: Double (Optional)\n     best_of: Integer (Optional)\n     stream: Boolean (Optional)\n     model: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     created: int (Required)\n     choices (Required): [\n          (Required){\n             text: String (Required)\n             index: int (Required)\n             logprobs (Required): {\n                 tokens (Required): [\n                     String (Required)\n                 ]\n                 token_logprobs (Required): [\n                     double (Required)\n                 ]\n                 top_logprobs (Required): [\n                      (Required){\n                         String: double (Required)\n                     }\n                 ]\n                 text_offset (Required): [\n                     int (Required)\n                 ]\n             }\n             finish_reason: String(stopped/tokenLimitReached/contentFiltered) (Required)\n         }\n     ]\n     usage (Required): {\n         completion_tokens: int (Required)\n         prompt_tokens: int (Required)\n         total_tokens: int (Required)\n     }\n }\n```"
  returns:
    description: "completions for the provided input prompts. Completions support a wide variety of tasks and generate text\n that continues from or \"completes\" provided prompt data along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.Completions?alt=com.azure.ai.openai.models.Completions&text=Completions\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getEmbeddings(java.lang.String,com.azure.ai.openai.models.EmbeddingsOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getEmbeddings(String deploymentOrModelName, EmbeddingsOptions embeddingsOptions)"
  name: "getEmbeddings(String deploymentOrModelName, EmbeddingsOptions embeddingsOptions)"
  nameWithType: "OpenAIClient.getEmbeddings(String deploymentOrModelName, EmbeddingsOptions embeddingsOptions)"
  summary: "Return the embeddings for a given prompt."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for an embeddings request.\n Embeddings measure the relatedness of text strings and are commonly used for search, clustering,\n recommendations, and other similar scenarios."
    name: "embeddingsOptions"
    type: "<xref href=\"com.azure.ai.openai.models.EmbeddingsOptions?alt=com.azure.ai.openai.models.EmbeddingsOptions&text=EmbeddingsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Embeddings getEmbeddings(String deploymentOrModelName, EmbeddingsOptions embeddingsOptions)"
  desc: "Return the embeddings for a given prompt."
  returns:
    description: "representation of the response data from an embeddings request.\n Embeddings measure the relatedness of text strings and are commonly used for search, clustering,\n recommendations, and other similar scenarios."
    type: "<xref href=\"com.azure.ai.openai.models.Embeddings?alt=com.azure.ai.openai.models.Embeddings&text=Embeddings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.OpenAIClient.getEmbeddingsWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getEmbeddingsWithResponse(String deploymentOrModelName, BinaryData embeddingsOptions, RequestOptions requestOptions)"
  name: "getEmbeddingsWithResponse(String deploymentOrModelName, BinaryData embeddingsOptions, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.getEmbeddingsWithResponse(String deploymentOrModelName, BinaryData embeddingsOptions, RequestOptions requestOptions)"
  summary: "Return the embeddings for a given prompt."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for an embeddings request. Embeddings measure the\n relatedness of text strings and are commonly used for search, clustering, recommendations, and other similar\n scenarios."
    name: "embeddingsOptions"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getEmbeddingsWithResponse(String deploymentOrModelName, BinaryData embeddingsOptions, RequestOptions requestOptions)"
  desc: "Return the embeddings for a given prompt.\n\n**Request Body Schema**\n\n```java\n{\n     user: String (Optional)\n     model: String (Optional)\n     input (Required): [\n         String (Required)\n     ]\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     data (Required): [\n          (Required){\n             embedding (Required): [\n                 double (Required)\n             ]\n             index: int (Required)\n         }\n     ]\n     usage (Required): {\n         prompt_tokens: int (Required)\n         total_tokens: int (Required)\n     }\n }\n```"
  returns:
    description: "representation of the response data from an embeddings request. Embeddings measure the relatedness of\n text strings and are commonly used for search, clustering, recommendations, and other similar scenarios along\n with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getEmbeddingsWithResponse(java.lang.String,com.azure.ai.openai.models.EmbeddingsOptions,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getEmbeddingsWithResponse(String deploymentOrModelName, EmbeddingsOptions embeddingsOptions, RequestOptions requestOptions)"
  name: "getEmbeddingsWithResponse(String deploymentOrModelName, EmbeddingsOptions embeddingsOptions, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.getEmbeddingsWithResponse(String deploymentOrModelName, EmbeddingsOptions embeddingsOptions, RequestOptions requestOptions)"
  summary: "Return the embeddings for a given prompt."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configuration information for an embeddings request. Embeddings measure the\n relatedness of text strings and are commonly used for search, clustering, recommendations, and other similar\n scenarios."
    name: "embeddingsOptions"
    type: "<xref href=\"com.azure.ai.openai.models.EmbeddingsOptions?alt=com.azure.ai.openai.models.EmbeddingsOptions&text=EmbeddingsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Embeddings> getEmbeddingsWithResponse(String deploymentOrModelName, EmbeddingsOptions embeddingsOptions, RequestOptions requestOptions)"
  desc: "Return the embeddings for a given prompt.\n\n**Request Body Schema**\n\n```java\n{\n     user: String (Optional)\n     model: String (Optional)\n     input (Required): [\n         String (Required)\n     ]\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     data (Required): [\n          (Required){\n             embedding (Required): [\n                 double (Required)\n             ]\n             index: int (Required)\n         }\n     ]\n     usage (Required): {\n         prompt_tokens: int (Required)\n         total_tokens: int (Required)\n     }\n }\n```"
  returns:
    description: "representation of the response data from an embeddings request. Embeddings measure the relatedness of\n text strings and are commonly used for search, clustering, recommendations, and other similar scenarios along\n with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.Embeddings?alt=com.azure.ai.openai.models.Embeddings&text=Embeddings\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getFile(java.lang.String)"
  fullName: "com.azure.ai.openai.OpenAIClient.getFile(String fileId)"
  name: "getFile(String fileId)"
  nameWithType: "OpenAIClient.getFile(String fileId)"
  summary: "Returns information about a specific file."
  parameters:
  - description: "The ID of the file to retrieve."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public OpenAIFile getFile(String fileId)"
  desc: "Returns information about a specific file. Does not retrieve file content."
  returns:
    description: "represents an assistant that can call the model and use tools."
    type: "<xref href=\"com.azure.ai.openai.models.OpenAIFile?alt=com.azure.ai.openai.models.OpenAIFile&text=OpenAIFile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.OpenAIClient.getFileContent(java.lang.String)"
  fullName: "com.azure.ai.openai.OpenAIClient.getFileContent(String fileId)"
  name: "getFileContent(String fileId)"
  nameWithType: "OpenAIClient.getFileContent(String fileId)"
  summary: "Returns information about a specific file."
  parameters:
  - description: "The ID of the file to retrieve."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public byte[] getFileContent(String fileId)"
  desc: "Returns information about a specific file. Does not retrieve file content."
  returns:
    description: "represent a byte array."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.ai.openai.OpenAIClient.getFileContentWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getFileContentWithResponse(String fileId, RequestOptions requestOptions)"
  name: "getFileContentWithResponse(String fileId, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.getFileContentWithResponse(String fileId, RequestOptions requestOptions)"
  summary: "Returns information about a specific file."
  parameters:
  - description: "The ID of the file to retrieve."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<byte[]> getFileContentWithResponse(String fileId, RequestOptions requestOptions)"
  desc: "Returns information about a specific file. Does not retrieve file content.\n\n**Response Body Schema**\n\n```java\nbyte[]\n```"
  returns:
    description: "represent a byte array along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getFileWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getFileWithResponse(String fileId, RequestOptions requestOptions)"
  name: "getFileWithResponse(String fileId, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.getFileWithResponse(String fileId, RequestOptions requestOptions)"
  summary: "Returns information about a specific file."
  parameters:
  - description: "The ID of the file to retrieve."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<OpenAIFile> getFileWithResponse(String fileId, RequestOptions requestOptions)"
  desc: "Returns information about a specific file. Does not retrieve file content.\n\n**Response Body Schema**\n\n```java\n{\n     object: String (Required)\n     id: String (Required)\n     bytes: int (Required)\n     filename: String (Required)\n     created_at: long (Required)\n     purpose: String(fine-tune/fine-tune-results/assistants/assistants_output/batch/batch_output/vision) (Required)\n     status: String(uploaded/pending/running/processed/error/deleting/deleted) (Optional)\n     status_details: String (Optional)\n }\n```"
  returns:
    description: "represents an assistant that can call the model and use tools along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.OpenAIFile?alt=com.azure.ai.openai.models.OpenAIFile&text=OpenAIFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.getImageGenerations(java.lang.String,com.azure.ai.openai.models.ImageGenerationOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getImageGenerations(String deploymentOrModelName, ImageGenerationOptions imageGenerationOptions)"
  name: "getImageGenerations(String deploymentOrModelName, ImageGenerationOptions imageGenerationOptions)"
  nameWithType: "OpenAIClient.getImageGenerations(String deploymentOrModelName, ImageGenerationOptions imageGenerationOptions)"
  summary: "Creates an image given a prompt."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Represents the request data used to generate images."
    name: "imageGenerationOptions"
    type: "<xref href=\"com.azure.ai.openai.models.ImageGenerationOptions?alt=com.azure.ai.openai.models.ImageGenerationOptions&text=ImageGenerationOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageGenerations getImageGenerations(String deploymentOrModelName, ImageGenerationOptions imageGenerationOptions)"
  desc: "Creates an image given a prompt."
  returns:
    description: "the result of a successful image generation operation."
    type: "<xref href=\"com.azure.ai.openai.models.ImageGenerations?alt=com.azure.ai.openai.models.ImageGenerations&text=ImageGenerations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.OpenAIClient.getImageGenerationsWithResponse(java.lang.String,com.azure.ai.openai.models.ImageGenerationOptions,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.getImageGenerationsWithResponse(String deploymentOrModelName, ImageGenerationOptions imageGenerationOptions, RequestOptions requestOptions)"
  name: "getImageGenerationsWithResponse(String deploymentOrModelName, ImageGenerationOptions imageGenerationOptions, RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.getImageGenerationsWithResponse(String deploymentOrModelName, ImageGenerationOptions imageGenerationOptions, RequestOptions requestOptions)"
  summary: "Creates an image given a prompt."
  parameters:
  - description: "Specifies either the model deployment name (when using Azure OpenAI) or model name\n (when using non-Azure OpenAI) to use for this request."
    name: "deploymentOrModelName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Represents the request data used to generate images."
    name: "imageGenerationOptions"
    type: "<xref href=\"com.azure.ai.openai.models.ImageGenerationOptions?alt=com.azure.ai.openai.models.ImageGenerationOptions&text=ImageGenerationOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ImageGenerations> getImageGenerationsWithResponse(String deploymentOrModelName, ImageGenerationOptions imageGenerationOptions, RequestOptions requestOptions)"
  desc: "Creates an image given a prompt.\n\n**Request Body Schema**\n\n```java\n{\n     model: String (Optional)\n     prompt: String (Required)\n     n: Integer (Optional)\n     size: String(256x256/512x512/1024x1024/1792x1024/1024x1792) (Optional)\n     response_format: String(url/b64_json) (Optional)\n     quality: String(standard/hd) (Optional)\n     style: String(natural/vivid) (Optional)\n     user: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     created: long (Required)\n     data (Required): [\n          (Required){\n             url: String (Optional)\n             b64_json: String (Optional)\n             revised_prompt: String (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "the result of a successful image generation operation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.ImageGenerations?alt=com.azure.ai.openai.models.ImageGenerations&text=ImageGenerations\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.listBatches()"
  fullName: "com.azure.ai.openai.OpenAIClient.listBatches()"
  name: "listBatches()"
  nameWithType: "OpenAIClient.listBatches()"
  summary: "Gets a list of all batches owned by the Azure OpenAI resource."
  syntax: "public PageableList<Batch> listBatches()"
  desc: "Gets a list of all batches owned by the Azure OpenAI resource."
  returns:
    description: "a list of all batches owned by the Azure OpenAI resource."
    type: "<xref href=\"com.azure.ai.openai.models.PageableList?alt=com.azure.ai.openai.models.PageableList&text=PageableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.Batch?alt=com.azure.ai.openai.models.Batch&text=Batch\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.listBatches(java.lang.String,java.lang.Integer)"
  fullName: "com.azure.ai.openai.OpenAIClient.listBatches(String after, Integer limit)"
  name: "listBatches(String after, Integer limit)"
  nameWithType: "OpenAIClient.listBatches(String after, Integer limit)"
  summary: "Gets a list of all batches owned by the Azure OpenAI resource."
  parameters:
  - description: "Identifier for the last event from the previous pagination request."
    name: "after"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of batches to retrieve. The default is 20."
    name: "limit"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public PageableList<Batch> listBatches(String after, Integer limit)"
  desc: "Gets a list of all batches owned by the Azure OpenAI resource."
  returns:
    description: "a list of all batches owned by the Azure OpenAI resource."
    type: "<xref href=\"com.azure.ai.openai.models.PageableList?alt=com.azure.ai.openai.models.PageableList&text=PageableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.Batch?alt=com.azure.ai.openai.models.Batch&text=Batch\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.listBatchesWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.listBatchesWithResponse(RequestOptions requestOptions)"
  name: "listBatchesWithResponse(RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.listBatchesWithResponse(RequestOptions requestOptions)"
  summary: "Gets a list of all batches owned by the Azure OpenAI resource."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<PageableList<Batch>> listBatchesWithResponse(RequestOptions requestOptions)"
  desc: "Gets a list of all batches owned by the Azure OpenAI resource.\n\n**Query Parameters**\n\n    | ----- | ------- | -------- | ------------------------------------------------------------------- |\n    | Name  | Type    | Required | Description                                                         |\n    | after | String  | No       | Identifier for the last event from the previous pagination request. |\n    | limit | Integer | No       | Number of batches to retrieve. Defaults to 20.                      |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     object: String (Required)\n     data (Optional): [\n          (Optional){\n             id: String (Required)\n             object: String (Required)\n             endpoint: String (Optional)\n             errors (Optional): {\n                 object: String (Required)\n                 data (Optional): [\n                      (Optional){\n                         code: String (Optional)\n                         message: String (Optional)\n                         param: String (Optional)\n                         line: Integer (Optional)\n                     }\n                 ]\n             }\n             input_file_id: String (Required)\n             completion_window: String (Optional)\n             status: String(validating/failed/in_progress/finalizing/completed/expired/cancelling/cancelled) (Optional)\n             output_file_id: String (Optional)\n             error_file_id: String (Optional)\n             created_at: Long (Optional)\n             in_progress_at: Long (Optional)\n             expires_at: Long (Optional)\n             finalizing_at: Long (Optional)\n             completed_at: Long (Optional)\n             failed_at: Long (Optional)\n             expired_at: Long (Optional)\n             cancelling_at: Long (Optional)\n             cancelled_at: Long (Optional)\n             request_counts (Optional): {\n                 total: Integer (Optional)\n                 completed: Integer (Optional)\n                 failed: Integer (Optional)\n             }\n             metadata (Optional): {\n                 String: String (Required)\n             }\n         }\n     ]\n     first_id: String (Optional)\n     last_id: String (Optional)\n     has_more: Boolean (Optional)\n }\n```"
  returns:
    description: "a list of all batches owned by the Azure OpenAI resource along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.PageableList?alt=com.azure.ai.openai.models.PageableList&text=PageableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.models.Batch?alt=com.azure.ai.openai.models.Batch&text=Batch\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.listFiles()"
  fullName: "com.azure.ai.openai.OpenAIClient.listFiles()"
  name: "listFiles()"
  nameWithType: "OpenAIClient.listFiles()"
  summary: "Gets a list of previously uploaded files."
  syntax: "public List<OpenAIFile> listFiles()"
  desc: "Gets a list of previously uploaded files."
  returns:
    description: "a list of previously uploaded files."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.openai.models.OpenAIFile?alt=com.azure.ai.openai.models.OpenAIFile&text=OpenAIFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.listFiles(com.azure.ai.openai.models.FilePurpose)"
  fullName: "com.azure.ai.openai.OpenAIClient.listFiles(FilePurpose purpose)"
  name: "listFiles(FilePurpose purpose)"
  nameWithType: "OpenAIClient.listFiles(FilePurpose purpose)"
  summary: "Gets a list of previously uploaded files."
  parameters:
  - description: "A value that, when provided, limits list results to files matching the corresponding purpose."
    name: "purpose"
    type: "<xref href=\"com.azure.ai.openai.models.FilePurpose?alt=com.azure.ai.openai.models.FilePurpose&text=FilePurpose\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public List<OpenAIFile> listFiles(FilePurpose purpose)"
  desc: "Gets a list of previously uploaded files."
  returns:
    description: "a list of previously uploaded files."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.openai.models.OpenAIFile?alt=com.azure.ai.openai.models.OpenAIFile&text=OpenAIFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.listFilesWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.OpenAIClient.listFilesWithResponse(RequestOptions requestOptions)"
  name: "listFilesWithResponse(RequestOptions requestOptions)"
  nameWithType: "OpenAIClient.listFilesWithResponse(RequestOptions requestOptions)"
  summary: "Gets a list of previously uploaded files."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<List<OpenAIFile>> listFilesWithResponse(RequestOptions requestOptions)"
  desc: "Gets a list of previously uploaded files.\n\n**Query Parameters**\n\n    | ------- | ------ | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name    | Type   | Required | Description                                                                                                                                                                                                             |\n    | purpose | String | No       | A value that, when provided, limits list results to files matching the corresponding purpose. Allowed values: \"fine-tune\", \"fine-tune-results\", \"assistants\", \"assistants\\_output\", \"batch\", \"batch\\_output\", \"vision\". |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     object: String (Required)\n     data (Required): [\n          (Required){\n             object: String (Required)\n             id: String (Required)\n             bytes: int (Required)\n             filename: String (Required)\n             created_at: long (Required)\n             purpose: String(fine-tune/fine-tune-results/assistants/assistants_output/batch/batch_output/vision) (Required)\n             status: String(uploaded/pending/running/processed/error/deleting/deleted) (Optional)\n             status_details: String (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "a list of previously uploaded files along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.openai.models.OpenAIFile?alt=com.azure.ai.openai.models.OpenAIFile&text=OpenAIFile\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.openai.OpenAIClient.uploadFile(com.azure.ai.openai.models.FileDetails,com.azure.ai.openai.models.FilePurpose)"
  fullName: "com.azure.ai.openai.OpenAIClient.uploadFile(FileDetails file, FilePurpose purpose)"
  name: "uploadFile(FileDetails file, FilePurpose purpose)"
  nameWithType: "OpenAIClient.uploadFile(FileDetails file, FilePurpose purpose)"
  summary: "Uploads a file for use by other operations."
  parameters:
  - description: "The file data (not filename) to upload."
    name: "file"
    type: "<xref href=\"com.azure.ai.openai.models.FileDetails?alt=com.azure.ai.openai.models.FileDetails&text=FileDetails\" data-throw-if-not-resolved=\"False\" />"
  - description: "The intended purpose of the file."
    name: "purpose"
    type: "<xref href=\"com.azure.ai.openai.models.FilePurpose?alt=com.azure.ai.openai.models.FilePurpose&text=FilePurpose\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OpenAIFile uploadFile(FileDetails file, FilePurpose purpose)"
  desc: "Uploads a file for use by other operations."
  returns:
    description: "represents an assistant that can call the model and use tools."
    type: "<xref href=\"com.azure.ai.openai.models.OpenAIFile?alt=com.azure.ai.openai.models.OpenAIFile&text=OpenAIFile\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Initializes a new instance of the synchronous OpenAIClient type."
metadata: {}
package: "com.azure.ai.openai"
artifact: com.azure:azure-ai-openai:1.0.0-beta.16
