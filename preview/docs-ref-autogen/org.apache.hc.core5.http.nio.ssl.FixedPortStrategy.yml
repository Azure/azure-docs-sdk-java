### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.http.nio.ssl.FixedPortStrategy
  id: FixedPortStrategy
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.ssl
  children:
  - org.apache.hc.core5.http.nio.ssl.FixedPortStrategy.FixedPortStrategy(int...)
  - org.apache.hc.core5.http.nio.ssl.FixedPortStrategy.isSecure(java.net.SocketAddress)
  langs:
  - java
  name: FixedPortStrategy
  nameWithType: FixedPortStrategy
  fullName: org.apache.hc.core5.http.nio.ssl.FixedPortStrategy
  type: Class
  package: org.apache.hc.core5.http.nio.ssl
  summary: Basic implementation of <xref uid="org.apache.hc.core5.http.nio.ssl.SecurePortStrategy" data-throw-if-not-resolved="false">SecurePortStrategy</xref> with a fixed list of secure ports.
  syntax:
    content: public final class FixedPortStrategy implements SecurePortStrategy
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.core5.http.nio.ssl.SecurePortStrategy
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.http.nio.ssl.FixedPortStrategy.FixedPortStrategy(int...)
  id: FixedPortStrategy(int...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.ssl.FixedPortStrategy
  langs:
  - java
  name: FixedPortStrategy(int[] securePorts)
  nameWithType: FixedPortStrategy.FixedPortStrategy(int[] securePorts)
  fullName: org.apache.hc.core5.http.nio.ssl.FixedPortStrategy.FixedPortStrategy(int[] securePorts)
  overload: org.apache.hc.core5.http.nio.ssl.FixedPortStrategy.FixedPortStrategy*
  type: Constructor
  package: org.apache.hc.core5.http.nio.ssl
  syntax:
    content: public FixedPortStrategy(int[] securePorts)
    parameters:
    - id: securePorts
      type: int[]
- uid: org.apache.hc.core5.http.nio.ssl.FixedPortStrategy.isSecure(java.net.SocketAddress)
  id: isSecure(java.net.SocketAddress)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.ssl.FixedPortStrategy
  langs:
  - java
  name: isSecure(SocketAddress localAddress)
  nameWithType: FixedPortStrategy.isSecure(SocketAddress localAddress)
  fullName: org.apache.hc.core5.http.nio.ssl.FixedPortStrategy.isSecure(SocketAddress localAddress)
  overload: org.apache.hc.core5.http.nio.ssl.FixedPortStrategy.isSecure*
  type: Method
  package: org.apache.hc.core5.http.nio.ssl
  summary: Determines if the given address should be secured or considered secure.
  syntax:
    content: public boolean isSecure(SocketAddress localAddress)
    parameters:
    - id: localAddress
      type: java.net.SocketAddress
    return:
      type: boolean
references:
- uid: int[]
  spec.java:
  - uid: int
    name: int
    fullName: int
  - name: '[]'
    fullName: '[]'
- uid: org.apache.hc.core5.http.nio.ssl.FixedPortStrategy.FixedPortStrategy*
  name: FixedPortStrategy
  nameWithType: FixedPortStrategy.FixedPortStrategy
  fullName: org.apache.hc.core5.http.nio.ssl.FixedPortStrategy.FixedPortStrategy
  package: org.apache.hc.core5.http.nio.ssl
- uid: java.net.SocketAddress
  spec.java:
  - uid: java.net.SocketAddress
    name: SocketAddress
    fullName: java.net.SocketAddress
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.core5.http.nio.ssl.FixedPortStrategy.isSecure*
  name: isSecure
  nameWithType: FixedPortStrategy.isSecure
  fullName: org.apache.hc.core5.http.nio.ssl.FixedPortStrategy.isSecure
  package: org.apache.hc.core5.http.nio.ssl
- uid: org.apache.hc.core5.http.nio.ssl.SecurePortStrategy
  name: SecurePortStrategy
  nameWithType: SecurePortStrategy
  fullName: org.apache.hc.core5.http.nio.ssl.SecurePortStrategy
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
