### YamlMime:JavaType
uid: "com.azure.developer.devcenter.DevCenterAsyncClient"
fullName: "com.azure.developer.devcenter.DevCenterAsyncClient"
name: "DevCenterAsyncClient"
nameWithType: "DevCenterAsyncClient"
summary: "Initializes a new instance of the asynchronous Dev<wbr>Center<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **DevCenterAsyncClient**"
methods:
- uid: "com.azure.developer.devcenter.DevCenterAsyncClient.getProjectWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevCenterAsyncClient.getProjectWithResponse(String projectName, RequestOptions requestOptions)"
  name: "getProjectWithResponse(String projectName, RequestOptions requestOptions)"
  nameWithType: "DevCenterAsyncClient.getProjectWithResponse(String projectName, RequestOptions requestOptions)"
  summary: "Gets a project."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getProjectWithResponse(String projectName, RequestOptions requestOptions)"
  desc: "Gets a project.\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Optional)\n     description: String (Optional)\n }\n```"
  returns:
    description: "a project along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.developer.devcenter.DevCenterAsyncClient.listAllDevBoxes(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevCenterAsyncClient.listAllDevBoxes(RequestOptions requestOptions)"
  name: "listAllDevBoxes(RequestOptions requestOptions)"
  nameWithType: "DevCenterAsyncClient.listAllDevBoxes(RequestOptions requestOptions)"
  summary: "Lists Dev Boxes that the caller has access to in the Dev<wbr>Center."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listAllDevBoxes(RequestOptions requestOptions)"
  desc: "Lists Dev Boxes that the caller has access to in the DevCenter.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | -------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                      |\n    | filter | String  | No       | An OData filter clause to apply to the operation.                                |\n    | top    | Integer | No       | The maximum number of resources to return from the operation. Example: 'top=10'. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Optional)\n     projectName: String (Optional)\n     poolName: String (Required)\n     provisioningState: String (Optional)\n     actionState: String (Optional)\n     powerState: String(Unknown/Deallocated/PoweredOff/Running/Hibernated) (Optional)\n     uniqueId: String (Optional)\n     errorDetails (Optional): {\n         code: String (Optional)\n         message: String (Optional)\n     }\n     location: String (Optional)\n     osType: String(Windows) (Optional)\n     user: String (Optional)\n     hardwareProfile (Optional): {\n         skuName: String (Optional)\n         vCPUs: Integer (Optional)\n         memoryGB: Integer (Optional)\n     }\n     storageProfile (Optional): {\n         osDisk (Optional): {\n             diskSizeGB: Integer (Optional)\n         }\n     }\n     imageReference (Optional): {\n         name: String (Optional)\n         version: String (Optional)\n         operatingSystem: String (Optional)\n         osBuildNumber: String (Optional)\n         publishedDate: OffsetDateTime (Optional)\n     }\n     createdTime: OffsetDateTime (Optional)\n     localAdministrator: String(Enabled/Disabled) (Optional)\n }\n```"
  returns:
    description: "the Dev Box list result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DevCenterAsyncClient.listAllDevBoxesByUser(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevCenterAsyncClient.listAllDevBoxesByUser(String userId, RequestOptions requestOptions)"
  name: "listAllDevBoxesByUser(String userId, RequestOptions requestOptions)"
  nameWithType: "DevCenterAsyncClient.listAllDevBoxesByUser(String userId, RequestOptions requestOptions)"
  summary: "Lists Dev Boxes in the Dev Center for a particular user."
  parameters:
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n     context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listAllDevBoxesByUser(String userId, RequestOptions requestOptions)"
  desc: "Lists Dev Boxes in the Dev Center for a particular user.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | -------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                      |\n    | filter | String  | No       | An OData filter clause to apply to the operation.                                |\n    | top    | Integer | No       | The maximum number of resources to return from the operation. Example: 'top=10'. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Optional)\n     projectName: String (Optional)\n     poolName: String (Required)\n     provisioningState: String (Optional)\n     actionState: String (Optional)\n     powerState: String(Unknown/Deallocated/PoweredOff/Running/Hibernated) (Optional)\n     uniqueId: String (Optional)\n     errorDetails (Optional): {\n         code: String (Optional)\n         message: String (Optional)\n     }\n     location: String (Optional)\n     osType: String(Windows) (Optional)\n     user: String (Optional)\n     hardwareProfile (Optional): {\n         skuName: String (Optional)\n         vCPUs: Integer (Optional)\n         memoryGB: Integer (Optional)\n     }\n     storageProfile (Optional): {\n         osDisk (Optional): {\n             diskSizeGB: Integer (Optional)\n         }\n     }\n     imageReference (Optional): {\n         name: String (Optional)\n         version: String (Optional)\n         operatingSystem: String (Optional)\n         osBuildNumber: String (Optional)\n         publishedDate: OffsetDateTime (Optional)\n     }\n     createdTime: OffsetDateTime (Optional)\n     localAdministrator: String(Enabled/Disabled) (Optional)\n }\n```"
  returns:
    description: "the Dev Box list result as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DevCenterAsyncClient.listProjects(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DevCenterAsyncClient.listProjects(RequestOptions requestOptions)"
  name: "listProjects(RequestOptions requestOptions)"
  nameWithType: "DevCenterAsyncClient.listProjects(RequestOptions requestOptions)"
  summary: "Lists all projects."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listProjects(RequestOptions requestOptions)"
  desc: "Lists all projects.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | -------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                      |\n    | filter | String  | No       | An OData filter clause to apply to the operation.                                |\n    | top    | Integer | No       | The maximum number of resources to return from the operation. Example: 'top=10'. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Optional)\n     description: String (Optional)\n }\n```"
  returns:
    description: "results of the project list operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous DevCenterClient type."
metadata: {}
package: "com.azure.developer.devcenter"
artifact: com.azure:azure-developer-devcenter:1.0.0-beta.1
