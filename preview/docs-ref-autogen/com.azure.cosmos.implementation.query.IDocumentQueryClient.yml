### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient
  id: IDocumentQueryClient
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query
  children:
  - com.azure.cosmos.implementation.query.IDocumentQueryClient.QueryCompatibilityMode
  - com.azure.cosmos.implementation.query.IDocumentQueryClient.executeQueryAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  - com.azure.cosmos.implementation.query.IDocumentQueryClient.getCollectionCache()
  - com.azure.cosmos.implementation.query.IDocumentQueryClient.getDefaultConsistencyLevelAsync()
  - com.azure.cosmos.implementation.query.IDocumentQueryClient.getDesiredConsistencyLevelAsync()
  - com.azure.cosmos.implementation.query.IDocumentQueryClient.getPartitionKeyRangeCache()
  - com.azure.cosmos.implementation.query.IDocumentQueryClient.getQueryCompatibilityMode()
  - com.azure.cosmos.implementation.query.IDocumentQueryClient.getResetSessionTokenRetryPolicy()
  - com.azure.cosmos.implementation.query.IDocumentQueryClient.readFeedAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  langs:
  - java
  name: IDocumentQueryClient
  nameWithType: IDocumentQueryClient
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient
  type: Interface
  package: com.azure.cosmos.implementation.query
  summary: While this class is public, but it is not part of our published public APIs. This is meant to be internally used only by our sdk.
  syntax:
    content: public interface IDocumentQueryClient
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient.executeQueryAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  id: executeQueryAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.IDocumentQueryClient
  langs:
  - java
  name: executeQueryAsync(RxDocumentServiceRequest request)
  nameWithType: IDocumentQueryClient.executeQueryAsync(RxDocumentServiceRequest request)
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient.executeQueryAsync(RxDocumentServiceRequest request)
  overload: com.azure.cosmos.implementation.query.IDocumentQueryClient.executeQueryAsync*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public abstract Mono<RxDocumentServiceResponse> executeQueryAsync(RxDocumentServiceRequest request)
    parameters:
    - id: request
      type: com.azure.cosmos.implementation.RxDocumentServiceRequest
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.RxDocumentServiceResponse>
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient.getCollectionCache()
  id: getCollectionCache()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.IDocumentQueryClient
  langs:
  - java
  name: getCollectionCache()
  nameWithType: IDocumentQueryClient.getCollectionCache()
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient.getCollectionCache()
  overload: com.azure.cosmos.implementation.query.IDocumentQueryClient.getCollectionCache*
  type: Method
  package: com.azure.cosmos.implementation.query
  summary: 'TODO: this should be async returning observable'
  syntax:
    content: public abstract RxCollectionCache getCollectionCache()
    return:
      type: com.azure.cosmos.implementation.caches.RxCollectionCache
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient.getDefaultConsistencyLevelAsync()
  id: getDefaultConsistencyLevelAsync()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.IDocumentQueryClient
  langs:
  - java
  name: getDefaultConsistencyLevelAsync()
  nameWithType: IDocumentQueryClient.getDefaultConsistencyLevelAsync()
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient.getDefaultConsistencyLevelAsync()
  overload: com.azure.cosmos.implementation.query.IDocumentQueryClient.getDefaultConsistencyLevelAsync*
  type: Method
  package: com.azure.cosmos.implementation.query
  summary: 'TODO: this should be async returning observable'
  syntax:
    content: public abstract ConsistencyLevel getDefaultConsistencyLevelAsync()
    return:
      type: com.azure.cosmos.ConsistencyLevel
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient.getDesiredConsistencyLevelAsync()
  id: getDesiredConsistencyLevelAsync()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.IDocumentQueryClient
  langs:
  - java
  name: getDesiredConsistencyLevelAsync()
  nameWithType: IDocumentQueryClient.getDesiredConsistencyLevelAsync()
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient.getDesiredConsistencyLevelAsync()
  overload: com.azure.cosmos.implementation.query.IDocumentQueryClient.getDesiredConsistencyLevelAsync*
  type: Method
  package: com.azure.cosmos.implementation.query
  summary: 'TODO: this should be async returning observable'
  syntax:
    content: public abstract ConsistencyLevel getDesiredConsistencyLevelAsync()
    return:
      type: com.azure.cosmos.ConsistencyLevel
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient.getPartitionKeyRangeCache()
  id: getPartitionKeyRangeCache()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.IDocumentQueryClient
  langs:
  - java
  name: getPartitionKeyRangeCache()
  nameWithType: IDocumentQueryClient.getPartitionKeyRangeCache()
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient.getPartitionKeyRangeCache()
  overload: com.azure.cosmos.implementation.query.IDocumentQueryClient.getPartitionKeyRangeCache*
  type: Method
  package: com.azure.cosmos.implementation.query
  summary: 'TODO: this should be async returning observable'
  syntax:
    content: public abstract IPartitionKeyRangeCache getPartitionKeyRangeCache()
    return:
      type: com.azure.cosmos.implementation.caches.IPartitionKeyRangeCache
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient.getQueryCompatibilityMode()
  id: getQueryCompatibilityMode()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.IDocumentQueryClient
  langs:
  - java
  name: getQueryCompatibilityMode()
  nameWithType: IDocumentQueryClient.getQueryCompatibilityMode()
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient.getQueryCompatibilityMode()
  overload: com.azure.cosmos.implementation.query.IDocumentQueryClient.getQueryCompatibilityMode*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public abstract IDocumentQueryClient.QueryCompatibilityMode getQueryCompatibilityMode()
    return:
      type: com.azure.cosmos.implementation.query.IDocumentQueryClient.QueryCompatibilityMode
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient.getResetSessionTokenRetryPolicy()
  id: getResetSessionTokenRetryPolicy()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.IDocumentQueryClient
  langs:
  - java
  name: getResetSessionTokenRetryPolicy()
  nameWithType: IDocumentQueryClient.getResetSessionTokenRetryPolicy()
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient.getResetSessionTokenRetryPolicy()
  overload: com.azure.cosmos.implementation.query.IDocumentQueryClient.getResetSessionTokenRetryPolicy*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public abstract IRetryPolicyFactory getResetSessionTokenRetryPolicy()
    return:
      type: com.azure.cosmos.implementation.IRetryPolicyFactory
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient.readFeedAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  id: readFeedAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.IDocumentQueryClient
  langs:
  - java
  name: readFeedAsync(RxDocumentServiceRequest request)
  nameWithType: IDocumentQueryClient.readFeedAsync(RxDocumentServiceRequest request)
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient.readFeedAsync(RxDocumentServiceRequest request)
  overload: com.azure.cosmos.implementation.query.IDocumentQueryClient.readFeedAsync*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public abstract Mono<RxDocumentServiceResponse> readFeedAsync(RxDocumentServiceRequest request)
    parameters:
    - id: request
      type: com.azure.cosmos.implementation.RxDocumentServiceRequest
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.RxDocumentServiceResponse>
references:
- uid: com.azure.cosmos.implementation.caches.RxCollectionCache
  name: RxCollectionCache
  nameWithType: RxCollectionCache
  fullName: com.azure.cosmos.implementation.caches.RxCollectionCache
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient.getCollectionCache*
  name: getCollectionCache
  nameWithType: IDocumentQueryClient.getCollectionCache
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient.getCollectionCache
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.implementation.caches.IPartitionKeyRangeCache
  name: IPartitionKeyRangeCache
  nameWithType: IPartitionKeyRangeCache
  fullName: com.azure.cosmos.implementation.caches.IPartitionKeyRangeCache
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient.getPartitionKeyRangeCache*
  name: getPartitionKeyRangeCache
  nameWithType: IDocumentQueryClient.getPartitionKeyRangeCache
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient.getPartitionKeyRangeCache
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.implementation.IRetryPolicyFactory
  name: IRetryPolicyFactory
  nameWithType: IRetryPolicyFactory
  fullName: com.azure.cosmos.implementation.IRetryPolicyFactory
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient.getResetSessionTokenRetryPolicy*
  name: getResetSessionTokenRetryPolicy
  nameWithType: IDocumentQueryClient.getResetSessionTokenRetryPolicy
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient.getResetSessionTokenRetryPolicy
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.ConsistencyLevel
  name: ConsistencyLevel
  nameWithType: ConsistencyLevel
  fullName: com.azure.cosmos.ConsistencyLevel
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient.getDefaultConsistencyLevelAsync*
  name: getDefaultConsistencyLevelAsync
  nameWithType: IDocumentQueryClient.getDefaultConsistencyLevelAsync
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient.getDefaultConsistencyLevelAsync
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient.getDesiredConsistencyLevelAsync*
  name: getDesiredConsistencyLevelAsync
  nameWithType: IDocumentQueryClient.getDesiredConsistencyLevelAsync
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient.getDesiredConsistencyLevelAsync
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.implementation.RxDocumentServiceRequest
  name: RxDocumentServiceRequest
  nameWithType: RxDocumentServiceRequest
  fullName: com.azure.cosmos.implementation.RxDocumentServiceRequest
- uid: reactor.core.publisher.Mono<com.azure.cosmos.implementation.RxDocumentServiceResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.RxDocumentServiceResponse
    name: RxDocumentServiceResponse
    fullName: com.azure.cosmos.implementation.RxDocumentServiceResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient.executeQueryAsync*
  name: executeQueryAsync
  nameWithType: IDocumentQueryClient.executeQueryAsync
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient.executeQueryAsync
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient.QueryCompatibilityMode
  name: IDocumentQueryClient.QueryCompatibilityMode
  nameWithType: IDocumentQueryClient.QueryCompatibilityMode
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient.QueryCompatibilityMode
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient.getQueryCompatibilityMode*
  name: getQueryCompatibilityMode
  nameWithType: IDocumentQueryClient.getQueryCompatibilityMode
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient.getQueryCompatibilityMode
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient.readFeedAsync*
  name: readFeedAsync
  nameWithType: IDocumentQueryClient.readFeedAsync
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient.readFeedAsync
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.implementation.RxDocumentServiceResponse
  name: RxDocumentServiceResponse
  nameWithType: RxDocumentServiceResponse
  fullName: com.azure.cosmos.implementation.RxDocumentServiceResponse
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
