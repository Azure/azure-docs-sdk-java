### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery
  id: RawTwinQuery
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin
  children:
  - com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.createFromConnectionString(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.hasNext(com.microsoft.azure.sdk.iot.service.devicetwin.Query)
  - com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.next(com.microsoft.azure.sdk.iot.service.devicetwin.Query)
  - com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.query(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.query(java.lang.String,java.lang.Integer)
  langs:
  - java
  name: RawTwinQuery
  nameWithType: RawTwinQuery
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery
  type: Class
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public class RawTwinQuery
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.RawTwinQuery()
  id: RawTwinQuery()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery
  langs:
  - java
  name: RawTwinQuery()
  nameWithType: RawTwinQuery.RawTwinQuery()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.RawTwinQuery()
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.RawTwinQuery*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: private RawTwinQuery()
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.createFromConnectionString(java.lang.String)
  id: createFromConnectionString(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery
  langs:
  - java
  name: createFromConnectionString(String connectionString)
  nameWithType: RawTwinQuery.createFromConnectionString(String connectionString)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.createFromConnectionString(String connectionString)
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.createFromConnectionString*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: Static constructor to create instance from connection string
  syntax:
    content: public static RawTwinQuery createFromConnectionString(String connectionString)
    parameters:
    - id: connectionString
      type: java.lang.String
      description: The iot hub connection string
    return:
      type: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery
      description: The instance of RawTwinQuery
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the object creation failed
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.hasNext(com.microsoft.azure.sdk.iot.service.devicetwin.Query)
  id: hasNext(com.microsoft.azure.sdk.iot.service.devicetwin.Query)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery
  langs:
  - java
  name: hasNext(Query query)
  nameWithType: RawTwinQuery.hasNext(Query query)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.hasNext(Query query)
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.hasNext*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: Returns the availability of next element in response. Sends the request again (if possible) to retrieve response until no response is found.
  syntax:
    content: public synchronized boolean hasNext(Query query)
    parameters:
    - id: query
      type: com.microsoft.azure.sdk.iot.service.devicetwin.Query
      description: Object corresponding to the query
    return:
      type: boolean
      description: True if available and false otherwise
  exceptions:
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: If IotHub could not respond successfully to the query request
  - type: java.io.IOException
    description: If IotHub could not respond successfully to the query request
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.next(com.microsoft.azure.sdk.iot.service.devicetwin.Query)
  id: next(com.microsoft.azure.sdk.iot.service.devicetwin.Query)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery
  langs:
  - java
  name: next(Query query)
  nameWithType: RawTwinQuery.next(Query query)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.next(Query query)
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.next*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: Returns the next json element available in response
  syntax:
    content: public synchronized String next(Query query)
    parameters:
    - id: query
      type: com.microsoft.azure.sdk.iot.service.devicetwin.Query
      description: Object corresponding for this query
    return:
      type: java.lang.String
      description: Next json element as a response to this query
  exceptions:
  - type: java.io.IOException
    description: If any of input parameters are incorrect
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: If any of input parameters are incorrect
  - type: java.util.NoSuchElementException
    description: If any of input parameters are incorrect
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.query(java.lang.String)
  id: query(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery
  langs:
  - java
  name: query(String sqlQuery)
  nameWithType: RawTwinQuery.query(String sqlQuery)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.query(String sqlQuery)
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.query*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: Creates a query object for this query using default page size
  syntax:
    content: public synchronized Query query(String sqlQuery)
    parameters:
    - id: sqlQuery
      type: java.lang.String
      description: Sql style query for Raw data over twin
    return:
      type: com.microsoft.azure.sdk.iot.service.devicetwin.Query
      description: Object for the query
  exceptions:
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: If IotHub did not respond successfully to the query
  - type: java.io.IOException
    description: If IotHub did not respond successfully to the query
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.query(java.lang.String,java.lang.Integer)
  id: query(java.lang.String,java.lang.Integer)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery
  langs:
  - java
  name: query(String sqlQuery, Integer pageSize)
  nameWithType: RawTwinQuery.query(String sqlQuery, Integer pageSize)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.query(String sqlQuery, Integer pageSize)
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.query*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: Creates a query object for this query
  syntax:
    content: public synchronized Query query(String sqlQuery, Integer pageSize)
    parameters:
    - id: sqlQuery
      type: java.lang.String
      description: Sql style query for Raw data over twin
    - id: pageSize
      type: java.lang.Integer
      description: Size to restrict response of query by
    return:
      type: com.microsoft.azure.sdk.iot.service.devicetwin.Query
      description: Object for the query
  exceptions:
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: If IotHub did not respond successfully to the query
  - type: java.io.IOException
    description: If IotHub did not respond successfully to the query
references:
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.RawTwinQuery*
  name: RawTwinQuery
  nameWithType: RawTwinQuery.RawTwinQuery
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.RawTwinQuery
  package: com.microsoft.azure.sdk.iot.service.devicetwin
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.createFromConnectionString*
  name: createFromConnectionString
  nameWithType: RawTwinQuery.createFromConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.createFromConnectionString
  package: com.microsoft.azure.sdk.iot.service.devicetwin
- uid: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
  name: IotHubException
  nameWithType: IotHubException
  fullName: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.Query
  name: Query
  nameWithType: Query
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.Query
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.query*
  name: query
  nameWithType: RawTwinQuery.query
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.query
  package: com.microsoft.azure.sdk.iot.service.devicetwin
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.hasNext*
  name: hasNext
  nameWithType: RawTwinQuery.hasNext
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.hasNext
  package: com.microsoft.azure.sdk.iot.service.devicetwin
- uid: java.util.NoSuchElementException
  spec.java:
  - uid: java.util.NoSuchElementException
    name: NoSuchElementException
    fullName: java.util.NoSuchElementException
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.next*
  name: next
  nameWithType: RawTwinQuery.next
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.RawTwinQuery.next
  package: com.microsoft.azure.sdk.iot.service.devicetwin
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
