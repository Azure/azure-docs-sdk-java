### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService"
fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService"
name: "AzureDatabricksDeltaLakeLinkedService"
nameWithType: "AzureDatabricksDeltaLakeLinkedService"
summary: "Azure Databricks Delta Lake linked service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedService?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.LinkedService.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.annotations()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.connectVia()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.description()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.parameters()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzureDatabricksDeltaLakeLinkedService extends LinkedService"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.AzureDatabricksDeltaLakeLinkedService()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.AzureDatabricksDeltaLakeLinkedService()"
  name: "AzureDatabricksDeltaLakeLinkedService()"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.AzureDatabricksDeltaLakeLinkedService()"
  syntax: "public AzureDatabricksDeltaLakeLinkedService()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.accessToken()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.accessToken()"
  name: "accessToken()"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.accessToken()"
  summary: "Get the access<wbr>Token property: Access token for databricks REST API."
  syntax: "public SecretBase accessToken()"
  desc: "Get the accessToken property: Access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string, SecureString or AzureKeyVaultSecretReference."
  returns:
    description: "the accessToken value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.clusterId()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.clusterId()"
  name: "clusterId()"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.clusterId()"
  summary: "Get the cluster<wbr>Id property: The id of an existing interactive cluster that will be used for all runs of this job."
  syntax: "public Object clusterId()"
  desc: "Get the clusterId property: The id of an existing interactive cluster that will be used for all runs of this job. Type: string (or Expression with resultType string)."
  returns:
    description: "the clusterId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.credential()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.credential()"
  name: "credential()"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.credential()"
  summary: "Get the credential property: The credential reference containing authentication information."
  syntax: "public CredentialReference credential()"
  desc: "Get the credential property: The credential reference containing authentication information."
  returns:
    description: "the credential value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.domain()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.domain()"
  name: "domain()"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.domain()"
  summary: "Get the domain property: <REGION>.azuredatabricks.<wbr>net, domain name of your Databricks deployment."
  syntax: "public Object domain()"
  desc: "Get the domain property: <REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string)."
  returns:
    description: "the domain value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public Object encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.validate()"
  name: "validate()"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withAccessToken(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withAccessToken(SecretBase accessToken)"
  name: "withAccessToken(SecretBase accessToken)"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.withAccessToken(SecretBase accessToken)"
  summary: "Set the access<wbr>Token property: Access token for databricks REST API."
  parameters:
  - description: "the accessToken value to set."
    name: "accessToken"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksDeltaLakeLinkedService withAccessToken(SecretBase accessToken)"
  desc: "Set the accessToken property: Access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string, SecureString or AzureKeyVaultSecretReference."
  returns:
    description: "the AzureDatabricksDeltaLakeLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService&text=AzureDatabricksDeltaLakeLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AzureDatabricksDeltaLakeLinkedService withAnnotations(List<Object> annotations)"
  desc: "Set the annotations property: List of tags that can be used for describing the linked service."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService&text=AzureDatabricksDeltaLakeLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withClusterId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withClusterId(Object clusterId)"
  name: "withClusterId(Object clusterId)"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.withClusterId(Object clusterId)"
  summary: "Set the cluster<wbr>Id property: The id of an existing interactive cluster that will be used for all runs of this job."
  parameters:
  - description: "the clusterId value to set."
    name: "clusterId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksDeltaLakeLinkedService withClusterId(Object clusterId)"
  desc: "Set the clusterId property: The id of an existing interactive cluster that will be used for all runs of this job. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksDeltaLakeLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService&text=AzureDatabricksDeltaLakeLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  name: "withConnectVia(IntegrationRuntimeReference connectVia)"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  summary: "Set the connect<wbr>Via property: The integration runtime reference."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  parameters:
  - name: "connectVia"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference?alt=com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference&text=IntegrationRuntimeReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksDeltaLakeLinkedService withConnectVia(IntegrationRuntimeReference connectVia)"
  desc: "Set the connectVia property: The integration runtime reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService&text=AzureDatabricksDeltaLakeLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withCredential(com.azure.resourcemanager.datafactory.models.CredentialReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withCredential(CredentialReference credential)"
  name: "withCredential(CredentialReference credential)"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.withCredential(CredentialReference credential)"
  summary: "Set the credential property: The credential reference containing authentication information."
  parameters:
  - description: "the credential value to set."
    name: "credential"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksDeltaLakeLinkedService withCredential(CredentialReference credential)"
  desc: "Set the credential property: The credential reference containing authentication information."
  returns:
    description: "the AzureDatabricksDeltaLakeLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService&text=AzureDatabricksDeltaLakeLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.withDescription(String description)"
  summary: "Set the description property: Linked service description."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksDeltaLakeLinkedService withDescription(String description)"
  desc: "Set the description property: Linked service description."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService&text=AzureDatabricksDeltaLakeLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withDomain(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withDomain(Object domain)"
  name: "withDomain(Object domain)"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.withDomain(Object domain)"
  summary: "Set the domain property: <REGION>.azuredatabricks.<wbr>net, domain name of your Databricks deployment."
  parameters:
  - description: "the domain value to set."
    name: "domain"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksDeltaLakeLinkedService withDomain(Object domain)"
  desc: "Set the domain property: <REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksDeltaLakeLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService&text=AzureDatabricksDeltaLakeLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksDeltaLakeLinkedService withEncryptedCredential(Object encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksDeltaLakeLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService&text=AzureDatabricksDeltaLakeLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  name: "withParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: Parameters for linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AzureDatabricksDeltaLakeLinkedService withParameters(Map<String,ParameterSpecification> parameters)"
  desc: "Set the parameters property: Parameters for linked service."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService&text=AzureDatabricksDeltaLakeLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withWorkspaceResourceId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.withWorkspaceResourceId(Object workspaceResourceId)"
  name: "withWorkspaceResourceId(Object workspaceResourceId)"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.withWorkspaceResourceId(Object workspaceResourceId)"
  summary: "Set the workspace<wbr>Resource<wbr>Id property: Workspace resource id for databricks REST API."
  parameters:
  - description: "the workspaceResourceId value to set."
    name: "workspaceResourceId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksDeltaLakeLinkedService withWorkspaceResourceId(Object workspaceResourceId)"
  desc: "Set the workspaceResourceId property: Workspace resource id for databricks REST API. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksDeltaLakeLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService&text=AzureDatabricksDeltaLakeLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.workspaceResourceId()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksDeltaLakeLinkedService.workspaceResourceId()"
  name: "workspaceResourceId()"
  nameWithType: "AzureDatabricksDeltaLakeLinkedService.workspaceResourceId()"
  summary: "Get the workspace<wbr>Resource<wbr>Id property: Workspace resource id for databricks REST API."
  syntax: "public Object workspaceResourceId()"
  desc: "Get the workspaceResourceId property: Workspace resource id for databricks REST API. Type: string (or Expression with resultType string)."
  returns:
    description: "the workspaceResourceId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Azure Databricks Delta Lake linked service."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
