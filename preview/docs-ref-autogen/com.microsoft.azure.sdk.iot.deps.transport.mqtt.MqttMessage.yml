### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage"
fullName: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage"
name: "MqttMessage"
nameWithType: "MqttMessage"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class MqttMessage"
constructors:
- uid: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.MqttMessage(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.MqttMessage(String topic)"
  name: "MqttMessage(String topic)"
  nameWithType: "MqttMessage.MqttMessage(String topic)"
  summary: "Constructor that takes the topic of the Message"
  parameters:
  - description: "The topic of the message"
    name: "topic"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MqttMessage(String topic)"
  desc: "Constructor that takes the topic of the Message"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.MqttMessage(java.lang.String,byte[])"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.MqttMessage(String topic, byte[] payload)"
  name: "MqttMessage(String topic, byte[] payload)"
  nameWithType: "MqttMessage.MqttMessage(String topic, byte[] payload)"
  summary: "Constructor that takes the topic of the Message and payload"
  parameters:
  - description: "The topic of the message"
    name: "topic"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The payload of the message"
    name: "payload"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public MqttMessage(String topic, byte[] payload)"
  desc: "Constructor that takes the topic of the Message and payload"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.MqttMessage(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.MqttMessage(String topic, MqttMessage mqttMessage)"
  name: "MqttMessage(String topic, MqttMessage mqttMessage)"
  nameWithType: "MqttMessage.MqttMessage(String topic, MqttMessage mqttMessage)"
  summary: "Constructor that takes the topic of the Message and a PAHO Mqtt<wbr>Message"
  parameters:
  - description: "The topic of the message"
    name: "topic"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The mqtt message"
    name: "mqttMessage"
    type: "<xref href=\"org.eclipse.paho.client.mqttv3.MqttMessage?alt=org.eclipse.paho.client.mqttv3.MqttMessage&text=MqttMessage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MqttMessage(String topic, MqttMessage mqttMessage)"
  desc: "Constructor that takes the topic of the Message and a PAHO MqttMessage"
methods:
- uid: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.getMqttMessage()"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.getMqttMessage()"
  name: "getMqttMessage()"
  nameWithType: "MqttMessage.getMqttMessage()"
  summary: "Gets the PAHO Mqtt<wbr>Message from an existing message"
  syntax: "public MqttMessage getMqttMessage()"
  desc: "Gets the PAHO MqttMessage from an existing message"
  returns:
    description: "the mqtt message"
    type: "<xref href=\"org.eclipse.paho.client.mqttv3.MqttMessage?alt=org.eclipse.paho.client.mqttv3.MqttMessage&text=MqttMessage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.getPayload()"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.getPayload()"
  name: "getPayload()"
  nameWithType: "MqttMessage.getPayload()"
  summary: "Returns the Message Payload"
  syntax: "public byte[] getPayload()"
  desc: "Returns the Message Payload"
  returns:
    description: "the message in byte[]"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.getQos()"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.getQos()"
  name: "getQos()"
  nameWithType: "MqttMessage.getQos()"
  summary: "Gets the Qos value of the Message"
  syntax: "public MqttQos getQos()"
  desc: "Gets the Qos value of the Message"
  returns:
    description: "the quality of service"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos?alt=com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos&text=MqttQos\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.getTopic()"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.getTopic()"
  name: "getTopic()"
  nameWithType: "MqttMessage.getTopic()"
  summary: "Gets the topic of the message"
  syntax: "public String getTopic()"
  desc: "Gets the topic of the message"
  returns:
    description: "Topic represented as a string"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.retrieveQosValue(com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.retrieveQosValue(MqttQos qos)"
  name: "retrieveQosValue(MqttQos qos)"
  nameWithType: "MqttMessage.retrieveQosValue(MqttQos qos)"
  summary: "Converts the MqttQOS value to a integer representation"
  modifiers:
  - "static"
  parameters:
  - description: "MqttQos value"
    name: "qos"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos?alt=com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos&text=MqttQos\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static int retrieveQosValue(MqttQos qos)"
  desc: "Converts the MqttQOS value to a integer representation"
  returns:
    description: "the qos value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.setPayload(byte[])"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.setPayload(byte[] payload)"
  name: "setPayload(byte[] payload)"
  nameWithType: "MqttMessage.setPayload(byte[] payload)"
  summary: "Sets the Message Payload"
  parameters:
  - description: "the message in byte[]"
    name: "payload"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public void setPayload(byte[] payload)"
  desc: "Sets the Message Payload"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.setQos(com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.setQos(MqttQos qos)"
  name: "setQos(MqttQos qos)"
  nameWithType: "MqttMessage.setQos(MqttQos qos)"
  summary: "Sets the Qos value of the Message"
  parameters:
  - description: "the quality of service"
    name: "qos"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos?alt=com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos&text=MqttQos\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setQos(MqttQos qos)"
  desc: "Sets the Qos value of the Message"
- uid: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.setTopic(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.setTopic(String topic)"
  name: "setTopic(String topic)"
  nameWithType: "MqttMessage.setTopic(String topic)"
  summary: "Sets the topic of the message"
  parameters:
  - description: "The topic of the message"
    name: "topic"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setTopic(String topic)"
  desc: "Sets the topic of the message"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.deps.transport.mqtt"
artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
