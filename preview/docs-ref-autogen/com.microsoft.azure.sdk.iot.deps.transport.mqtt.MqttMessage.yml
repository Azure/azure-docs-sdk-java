### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage"
fullName: "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage"
name: "MqttMessage"
nameWithType: "MqttMessage"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class MqttMessage"
constructors:
- "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.MqttMessage(java.lang.String)"
- "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.MqttMessage(java.lang.String,byte[])"
- "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.MqttMessage(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage)"
methods:
- "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.getMqttMessage()"
- "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.getPayload()"
- "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.getQos()"
- "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.getTopic()"
- "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.retrieveQosValue(com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos)"
- "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.setPayload(byte[])"
- "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.setQos(com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos)"
- "com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage.setTopic(java.lang.String)"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.deps.transport.mqtt"
artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
