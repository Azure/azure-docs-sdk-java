### YamlMime:JavaMember
uid: "com.azure.cosmos.CosmosAsyncDatabase.readAllContainers*"
fullName: "com.azure.cosmos.CosmosAsyncDatabase.readAllContainers"
name: "readAllContainers"
nameWithType: "CosmosAsyncDatabase.readAllContainers"
members:
- uid: "com.azure.cosmos.CosmosAsyncDatabase.readAllContainers()"
  fullName: "com.azure.cosmos.CosmosAsyncDatabase.readAllContainers()"
  name: "readAllContainers()"
  nameWithType: "CosmosAsyncDatabase.readAllContainers()"
  summary: "Reads all cosmos containers.\n\nAfter subscription the operation will be performed. The <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> will contain one or several feed response of the read containers. In case of failure the <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> will error."
  syntax: "public CosmosPagedFlux<CosmosContainerProperties> readAllContainers()"
  returns:
    description: "a <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> containing one or several feed response pages of read\n containers or an error."
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedFlux?alt=com.azure.cosmos.util.CosmosPagedFlux&text=CosmosPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosContainerProperties?alt=com.azure.cosmos.models.CosmosContainerProperties&text=CosmosContainerProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncDatabase.readAllContainers(com.azure.cosmos.models.CosmosQueryRequestOptions)"
  fullName: "com.azure.cosmos.CosmosAsyncDatabase.readAllContainers(CosmosQueryRequestOptions options)"
  name: "readAllContainers(CosmosQueryRequestOptions options)"
  nameWithType: "CosmosAsyncDatabase.readAllContainers(CosmosQueryRequestOptions options)"
  summary: "Reads all cosmos containers.\n\nAfter subscription the operation will be performed. The <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> will contain one or several feed response of the read containers. In case of failure the <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> will error."
  parameters:
  - description: "<xref uid=\"com.azure.cosmos.models.CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosQueryRequestOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosPagedFlux<CosmosContainerProperties> readAllContainers(CosmosQueryRequestOptions options)"
  returns:
    description: "a <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref> containing one or several feed response pages of read\n containers or an error."
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedFlux?alt=com.azure.cosmos.util.CosmosPagedFlux&text=CosmosPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosContainerProperties?alt=com.azure.cosmos.models.CosmosContainerProperties&text=CosmosContainerProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
