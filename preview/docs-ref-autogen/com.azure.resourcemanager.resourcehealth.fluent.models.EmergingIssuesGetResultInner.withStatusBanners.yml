### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner.withStatusBanners*"
fullName: "com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner.withStatusBanners"
name: "withStatusBanners"
nameWithType: "EmergingIssuesGetResultInner.withStatusBanners"
members:
- uid: "com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner.withStatusBanners(java.util.List<com.azure.resourcemanager.resourcehealth.models.StatusBanner>)"
  fullName: "com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner.withStatusBanners(List<StatusBanner> statusBanners)"
  name: "withStatusBanners(List<StatusBanner> statusBanners)"
  nameWithType: "EmergingIssuesGetResultInner.withStatusBanners(List<StatusBanner> statusBanners)"
  summary: "Set the statusBanners property: The list of emerging issues of banner type."
  parameters:
  - description: "the statusBanners value to set."
    name: "statusBanners"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resourcehealth.models.StatusBanner?alt=com.azure.resourcemanager.resourcehealth.models.StatusBanner&text=StatusBanner\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EmergingIssuesGetResultInner withStatusBanners(List<StatusBanner> statusBanners)"
  returns:
    description: "the EmergingIssuesGetResultInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner?alt=com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner&text=EmergingIssuesGetResultInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resourcehealth.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-resourcehealth:1.0.0-beta.1
