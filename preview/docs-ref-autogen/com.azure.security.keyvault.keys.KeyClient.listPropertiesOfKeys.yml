### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.KeyClient.listPropertiesOfKeys*"
fullName: "com.azure.security.keyvault.keys.KeyClient.listPropertiesOfKeys"
name: "listPropertiesOfKeys"
nameWithType: "KeyClient.listPropertiesOfKeys"
members:
- uid: "com.azure.security.keyvault.keys.KeyClient.listPropertiesOfKeys()"
  fullName: "com.azure.security.keyvault.keys.KeyClient.listPropertiesOfKeys()"
  name: "listPropertiesOfKeys()"
  nameWithType: "KeyClient.listPropertiesOfKeys()"
  summary: "List keys in the key vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The List operation is applicable to all key types and the individual key response in the list is represented by <xref uid=\"com.azure.security.keyvault.keys.models.KeyProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyProperties\"></xref> as only the key identifier, attributes and tags are provided in the response. The key material and individual key versions are not listed in the response. This operation requires the `keys/list` permission.\n\nIt is possible to get full keys with key material from this information. Loop over the <xref uid=\"com.azure.security.keyvault.keys.models.KeyProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> and call <xref uid=\"com.azure.security.keyvault.keys.KeyClient.getKey(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyClient#getKey(String, String)\"></xref>. This will return the <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> with key material included of its latest version.\n\n\\{@codesnippet com.azure.keyvault.keys.keyclient.listKeys\\}\n\n**Code Samples to iterate keys by page**\n\nIt is possible to get full keys with key material from this information. Iterate over all the <xref uid=\"com.azure.security.keyvault.keys.models.KeyProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> by page and call <xref uid=\"com.azure.security.keyvault.keys.KeyClient.getKey(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyClient#getKey(String, String)\"></xref>. This will return the <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> with key material included of its latest version.\n\n\\{@codesnippet com.azure.keyvault.keys.keyclient.listKeys.iterableByPage\\}"
  syntax: "public PagedIterable<KeyProperties> listPropertiesOfKeys()"
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> of <xref uid=\"com.azure.security.keyvault.keys.models.KeyProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> of all the keys in the vault."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.keys.models.KeyProperties?alt=com.azure.security.keyvault.keys.models.KeyProperties&text=KeyProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.keys.KeyClient.listPropertiesOfKeys(com.azure.core.util.Context)"
  fullName: "com.azure.security.keyvault.keys.KeyClient.listPropertiesOfKeys(Context context)"
  name: "listPropertiesOfKeys(Context context)"
  nameWithType: "KeyClient.listPropertiesOfKeys(Context context)"
  summary: "List keys in the key vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The List operation is applicable to all key types and the individual key response in the list is represented by <xref uid=\"com.azure.security.keyvault.keys.models.KeyProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyProperties\"></xref> as only the key identifier, attributes and tags are provided in the response. The key material and individual key versions are not listed in the response. This operation requires the `keys/list` permission.\n\nIt is possible to get full keys with key material from this information. Loop over the <xref uid=\"com.azure.security.keyvault.keys.models.KeyProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> and call <xref uid=\"com.azure.security.keyvault.keys.KeyClient.getKey(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyClient#getKey(String, String)\"></xref>. This will return the <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> with key material included of its latest version.\n\n\\{@codesnippet com.azure.keyvault.keys.keyclient.listKeys\\#Context\\}\n\n**Code Samples to iterate keys by page**\n\nIt is possible to get full keys with key material from this information. Iterate over all the <xref uid=\"com.azure.security.keyvault.keys.models.KeyProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> by page and call <xref uid=\"com.azure.security.keyvault.keys.KeyClient.getKey(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyClient#getKey(String, String)\"></xref>. This will return the <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> with key material included of its latest version.\n\n\\{@codesnippet com.azure.keyvault.keys.keyclient.listKeys.iterableByPage\\}"
  parameters:
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<KeyProperties> listPropertiesOfKeys(Context context)"
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> of <xref uid=\"com.azure.security.keyvault.keys.models.KeyProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> of all the keys in the vault."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.keys.models.KeyProperties?alt=com.azure.security.keyvault.keys.models.KeyProperties&text=KeyProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys"
artifact: com.azure:azure-security-keyvault-keys:4.4.0-beta.1
