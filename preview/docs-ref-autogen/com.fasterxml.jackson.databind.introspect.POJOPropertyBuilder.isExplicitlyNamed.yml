### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.isExplicitlyNamed*"
fullName: "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.isExplicitlyNamed"
name: "isExplicitlyNamed"
nameWithType: "POJOPropertyBuilder.isExplicitlyNamed"
members:
- uid: "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.isExplicitlyNamed()"
  fullName: "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.isExplicitlyNamed()"
  name: "isExplicitlyNamed()"
  nameWithType: "POJOPropertyBuilder.isExplicitlyNamed()"
  summary: "Accessor that can be called to check whether property name was due to an explicit marker (usually annotation), or just by naming convention or use of \"use-default-name\" marker (annotation).\n\nNote that entries that return true from this method will always return true for <xref uid=\"com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.isExplicitlyIncluded()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#isExplicitlyIncluded()\"></xref>, but not necessarily vice versa."
  overridden: "com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.isExplicitlyNamed()"
  syntax: "public boolean isExplicitlyNamed()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.introspect"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
