### YamlMime:JavaType
uid: "com.azure.ai.anomalydetector.models.VariableState"
fullName: "com.azure.ai.anomalydetector.models.VariableState"
name: "VariableState"
nameWithType: "VariableState"
summary: "The VariableState model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class VariableState"
constructors:
- uid: "com.azure.ai.anomalydetector.models.VariableState.VariableState()"
  fullName: "com.azure.ai.anomalydetector.models.VariableState.VariableState()"
  name: "VariableState()"
  nameWithType: "VariableState.VariableState()"
  syntax: "public VariableState()"
methods:
- uid: "com.azure.ai.anomalydetector.models.VariableState.getEffectiveCount()"
  fullName: "com.azure.ai.anomalydetector.models.VariableState.getEffectiveCount()"
  name: "getEffectiveCount()"
  nameWithType: "VariableState.getEffectiveCount()"
  summary: "Get the effectiveCount property: Number of effective points counted."
  syntax: "public Integer getEffectiveCount()"
  returns:
    description: "the effectiveCount value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.VariableState.getEndTime()"
  fullName: "com.azure.ai.anomalydetector.models.VariableState.getEndTime()"
  name: "getEndTime()"
  nameWithType: "VariableState.getEndTime()"
  summary: "Get the endTime property: End time of the variable."
  syntax: "public OffsetDateTime getEndTime()"
  returns:
    description: "the endTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.VariableState.getFilledNARatio()"
  fullName: "com.azure.ai.anomalydetector.models.VariableState.getFilledNARatio()"
  name: "getFilledNARatio()"
  nameWithType: "VariableState.getFilledNARatio()"
  summary: "Get the filledNARatio property: Proportion of NaN values filled of the variable."
  syntax: "public Float getFilledNARatio()"
  returns:
    description: "the filledNARatio value."
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.VariableState.getStartTime()"
  fullName: "com.azure.ai.anomalydetector.models.VariableState.getStartTime()"
  name: "getStartTime()"
  nameWithType: "VariableState.getStartTime()"
  summary: "Get the startTime property: Start time of the variable."
  syntax: "public OffsetDateTime getStartTime()"
  returns:
    description: "the startTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.VariableState.getVariable()"
  fullName: "com.azure.ai.anomalydetector.models.VariableState.getVariable()"
  name: "getVariable()"
  nameWithType: "VariableState.getVariable()"
  summary: "Get the variable property: Variable name."
  syntax: "public String getVariable()"
  returns:
    description: "the variable value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.VariableState.setEffectiveCount(java.lang.Integer)"
  fullName: "com.azure.ai.anomalydetector.models.VariableState.setEffectiveCount(Integer effectiveCount)"
  name: "setEffectiveCount(Integer effectiveCount)"
  nameWithType: "VariableState.setEffectiveCount(Integer effectiveCount)"
  summary: "Set the effectiveCount property: Number of effective points counted."
  parameters:
  - description: "the effectiveCount value to set."
    name: "effectiveCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VariableState setEffectiveCount(Integer effectiveCount)"
  returns:
    description: "the VariableState object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.VariableState?alt=com.azure.ai.anomalydetector.models.VariableState&text=VariableState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.VariableState.setEndTime(java.time.OffsetDateTime)"
  fullName: "com.azure.ai.anomalydetector.models.VariableState.setEndTime(OffsetDateTime endTime)"
  name: "setEndTime(OffsetDateTime endTime)"
  nameWithType: "VariableState.setEndTime(OffsetDateTime endTime)"
  summary: "Set the endTime property: End time of the variable."
  parameters:
  - description: "the endTime value to set."
    name: "endTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VariableState setEndTime(OffsetDateTime endTime)"
  returns:
    description: "the VariableState object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.VariableState?alt=com.azure.ai.anomalydetector.models.VariableState&text=VariableState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.VariableState.setFilledNARatio(java.lang.Float)"
  fullName: "com.azure.ai.anomalydetector.models.VariableState.setFilledNARatio(Float filledNARatio)"
  name: "setFilledNARatio(Float filledNARatio)"
  nameWithType: "VariableState.setFilledNARatio(Float filledNARatio)"
  summary: "Set the filledNARatio property: Proportion of NaN values filled of the variable."
  parameters:
  - description: "the filledNARatio value to set."
    name: "filledNARatio"
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VariableState setFilledNARatio(Float filledNARatio)"
  returns:
    description: "the VariableState object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.VariableState?alt=com.azure.ai.anomalydetector.models.VariableState&text=VariableState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.VariableState.setStartTime(java.time.OffsetDateTime)"
  fullName: "com.azure.ai.anomalydetector.models.VariableState.setStartTime(OffsetDateTime startTime)"
  name: "setStartTime(OffsetDateTime startTime)"
  nameWithType: "VariableState.setStartTime(OffsetDateTime startTime)"
  summary: "Set the startTime property: Start time of the variable."
  parameters:
  - description: "the startTime value to set."
    name: "startTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VariableState setStartTime(OffsetDateTime startTime)"
  returns:
    description: "the VariableState object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.VariableState?alt=com.azure.ai.anomalydetector.models.VariableState&text=VariableState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.VariableState.setVariable(java.lang.String)"
  fullName: "com.azure.ai.anomalydetector.models.VariableState.setVariable(String variable)"
  name: "setVariable(String variable)"
  nameWithType: "VariableState.setVariable(String variable)"
  summary: "Set the variable property: Variable name."
  parameters:
  - description: "the variable value to set."
    name: "variable"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VariableState setVariable(String variable)"
  returns:
    description: "the VariableState object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.VariableState?alt=com.azure.ai.anomalydetector.models.VariableState&text=VariableState\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.ai.anomalydetector.models"
artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.4
