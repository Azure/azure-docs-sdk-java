### YamlMime:JavaType
uid: "com.azure.ai.anomalydetector.models.ModelInfo"
fullName: "com.azure.ai.anomalydetector.models.ModelInfo"
name: "ModelInfo"
nameWithType: "ModelInfo"
summary: "Train result of a model including status, errors and diagnose info for model and variables."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ModelInfo"
constructors:
- uid: "com.azure.ai.anomalydetector.models.ModelInfo.ModelInfo()"
  fullName: "com.azure.ai.anomalydetector.models.ModelInfo.ModelInfo()"
  name: "ModelInfo()"
  nameWithType: "ModelInfo.ModelInfo()"
  syntax: "public ModelInfo()"
methods:
- uid: "com.azure.ai.anomalydetector.models.ModelInfo.getAlignPolicy()"
  fullName: "com.azure.ai.anomalydetector.models.ModelInfo.getAlignPolicy()"
  name: "getAlignPolicy()"
  nameWithType: "ModelInfo.getAlignPolicy()"
  summary: "Get the alignPolicy property: The alignPolicy property."
  syntax: "public AlignPolicy getAlignPolicy()"
  returns:
    description: "the alignPolicy value."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.AlignPolicy?alt=com.azure.ai.anomalydetector.models.AlignPolicy&text=AlignPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.ModelInfo.getDiagnosticsInfo()"
  fullName: "com.azure.ai.anomalydetector.models.ModelInfo.getDiagnosticsInfo()"
  name: "getDiagnosticsInfo()"
  nameWithType: "ModelInfo.getDiagnosticsInfo()"
  summary: "Get the diagnosticsInfo property: The diagnosticsInfo property."
  syntax: "public DiagnosticsInfo getDiagnosticsInfo()"
  returns:
    description: "the diagnosticsInfo value."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.DiagnosticsInfo?alt=com.azure.ai.anomalydetector.models.DiagnosticsInfo&text=DiagnosticsInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.ModelInfo.getDisplayName()"
  fullName: "com.azure.ai.anomalydetector.models.ModelInfo.getDisplayName()"
  name: "getDisplayName()"
  nameWithType: "ModelInfo.getDisplayName()"
  summary: "Get the displayName property: An optional field. The name of the model whose maximum length is 24."
  syntax: "public String getDisplayName()"
  returns:
    description: "the displayName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.ModelInfo.getEndTime()"
  fullName: "com.azure.ai.anomalydetector.models.ModelInfo.getEndTime()"
  name: "getEndTime()"
  nameWithType: "ModelInfo.getEndTime()"
  summary: "Get the endTime property: A required field, indicating the end time of training data. Should be date-time."
  syntax: "public OffsetDateTime getEndTime()"
  returns:
    description: "the endTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.ModelInfo.getErrors()"
  fullName: "com.azure.ai.anomalydetector.models.ModelInfo.getErrors()"
  name: "getErrors()"
  nameWithType: "ModelInfo.getErrors()"
  summary: "Get the errors property: Error messages when failed to create a model."
  syntax: "public List<ErrorResponse> getErrors()"
  returns:
    description: "the errors value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.anomalydetector.models.ErrorResponse?alt=com.azure.ai.anomalydetector.models.ErrorResponse&text=ErrorResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.anomalydetector.models.ModelInfo.getSlidingWindow()"
  fullName: "com.azure.ai.anomalydetector.models.ModelInfo.getSlidingWindow()"
  name: "getSlidingWindow()"
  nameWithType: "ModelInfo.getSlidingWindow()"
  summary: "Get the slidingWindow property: An optional field, indicating how many previous points will be used to compute the anomaly score of the subsequent point."
  syntax: "public Integer getSlidingWindow()"
  returns:
    description: "the slidingWindow value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.ModelInfo.getSource()"
  fullName: "com.azure.ai.anomalydetector.models.ModelInfo.getSource()"
  name: "getSource()"
  nameWithType: "ModelInfo.getSource()"
  summary: "Get the source property: Source link to the input variables. Each variable should be a csv file with two columns, \\`timestamp\\` and \\`value\\`. By default, the file name of the variable will be used as its variable name."
  syntax: "public String getSource()"
  returns:
    description: "the source value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.ModelInfo.getStartTime()"
  fullName: "com.azure.ai.anomalydetector.models.ModelInfo.getStartTime()"
  name: "getStartTime()"
  nameWithType: "ModelInfo.getStartTime()"
  summary: "Get the startTime property: A required field, indicating the start time of training data. Should be date-time."
  syntax: "public OffsetDateTime getStartTime()"
  returns:
    description: "the startTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.ModelInfo.getStatus()"
  fullName: "com.azure.ai.anomalydetector.models.ModelInfo.getStatus()"
  name: "getStatus()"
  nameWithType: "ModelInfo.getStatus()"
  summary: "Get the status property: Model training status."
  syntax: "public ModelStatus getStatus()"
  returns:
    description: "the status value."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ModelStatus?alt=com.azure.ai.anomalydetector.models.ModelStatus&text=ModelStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.ModelInfo.setAlignPolicy(com.azure.ai.anomalydetector.models.AlignPolicy)"
  fullName: "com.azure.ai.anomalydetector.models.ModelInfo.setAlignPolicy(AlignPolicy alignPolicy)"
  name: "setAlignPolicy(AlignPolicy alignPolicy)"
  nameWithType: "ModelInfo.setAlignPolicy(AlignPolicy alignPolicy)"
  summary: "Set the alignPolicy property: The alignPolicy property."
  parameters:
  - description: "the alignPolicy value to set."
    name: "alignPolicy"
    type: "<xref href=\"com.azure.ai.anomalydetector.models.AlignPolicy?alt=com.azure.ai.anomalydetector.models.AlignPolicy&text=AlignPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ModelInfo setAlignPolicy(AlignPolicy alignPolicy)"
  returns:
    description: "the ModelInfo object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ModelInfo?alt=com.azure.ai.anomalydetector.models.ModelInfo&text=ModelInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.ModelInfo.setDisplayName(java.lang.String)"
  fullName: "com.azure.ai.anomalydetector.models.ModelInfo.setDisplayName(String displayName)"
  name: "setDisplayName(String displayName)"
  nameWithType: "ModelInfo.setDisplayName(String displayName)"
  summary: "Set the displayName property: An optional field. The name of the model whose maximum length is 24."
  parameters:
  - description: "the displayName value to set."
    name: "displayName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ModelInfo setDisplayName(String displayName)"
  returns:
    description: "the ModelInfo object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ModelInfo?alt=com.azure.ai.anomalydetector.models.ModelInfo&text=ModelInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.ModelInfo.setEndTime(java.time.OffsetDateTime)"
  fullName: "com.azure.ai.anomalydetector.models.ModelInfo.setEndTime(OffsetDateTime endTime)"
  name: "setEndTime(OffsetDateTime endTime)"
  nameWithType: "ModelInfo.setEndTime(OffsetDateTime endTime)"
  summary: "Set the endTime property: A required field, indicating the end time of training data. Should be date-time."
  parameters:
  - description: "the endTime value to set."
    name: "endTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ModelInfo setEndTime(OffsetDateTime endTime)"
  returns:
    description: "the ModelInfo object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ModelInfo?alt=com.azure.ai.anomalydetector.models.ModelInfo&text=ModelInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.ModelInfo.setSlidingWindow(java.lang.Integer)"
  fullName: "com.azure.ai.anomalydetector.models.ModelInfo.setSlidingWindow(Integer slidingWindow)"
  name: "setSlidingWindow(Integer slidingWindow)"
  nameWithType: "ModelInfo.setSlidingWindow(Integer slidingWindow)"
  summary: "Set the slidingWindow property: An optional field, indicating how many previous points will be used to compute the anomaly score of the subsequent point."
  parameters:
  - description: "the slidingWindow value to set."
    name: "slidingWindow"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ModelInfo setSlidingWindow(Integer slidingWindow)"
  returns:
    description: "the ModelInfo object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ModelInfo?alt=com.azure.ai.anomalydetector.models.ModelInfo&text=ModelInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.ModelInfo.setSource(java.lang.String)"
  fullName: "com.azure.ai.anomalydetector.models.ModelInfo.setSource(String source)"
  name: "setSource(String source)"
  nameWithType: "ModelInfo.setSource(String source)"
  summary: "Set the source property: Source link to the input variables. Each variable should be a csv file with two columns, \\`timestamp\\` and \\`value\\`. By default, the file name of the variable will be used as its variable name."
  parameters:
  - description: "the source value to set."
    name: "source"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ModelInfo setSource(String source)"
  returns:
    description: "the ModelInfo object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ModelInfo?alt=com.azure.ai.anomalydetector.models.ModelInfo&text=ModelInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.ModelInfo.setStartTime(java.time.OffsetDateTime)"
  fullName: "com.azure.ai.anomalydetector.models.ModelInfo.setStartTime(OffsetDateTime startTime)"
  name: "setStartTime(OffsetDateTime startTime)"
  nameWithType: "ModelInfo.setStartTime(OffsetDateTime startTime)"
  summary: "Set the startTime property: A required field, indicating the start time of training data. Should be date-time."
  parameters:
  - description: "the startTime value to set."
    name: "startTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ModelInfo setStartTime(OffsetDateTime startTime)"
  returns:
    description: "the ModelInfo object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ModelInfo?alt=com.azure.ai.anomalydetector.models.ModelInfo&text=ModelInfo\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.ai.anomalydetector.models"
artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.4
