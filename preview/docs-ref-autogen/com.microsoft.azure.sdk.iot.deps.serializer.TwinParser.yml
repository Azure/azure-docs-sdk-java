### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser"
fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser"
name: "TwinParser"
nameWithType: "TwinParser"
summary: "Twin<wbr>Parser Representation including the twin collection and Json serializer and deserializer."
deprecatedTag: "As of release 0.4.0, replaced by <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinState\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.azure.sdk.iot.deps.twin.TwinState\"></xref>"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "@Deprecated\npublic class TwinParser"
constructors:
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.TwinParser()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.TwinParser()"
  name: "TwinParser()"
  nameWithType: "TwinParser.TwinParser()"
  summary: "CONSTRUCTOR Create a Twin<wbr>Parser instance with default values."
  syntax: "public TwinParser()"
  desc: "CONSTRUCTOR Create a TwinParser instance with default values. set OnDesiredCallback as null set OnReportedCallback as null set Tags as null"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.TwinParser(com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.TwinParser(TwinChangedCallback onDesiredCallback)"
  name: "TwinParser(TwinChangedCallback onDesiredCallback)"
  nameWithType: "TwinParser.TwinParser(TwinChangedCallback onDesiredCallback)"
  summary: "CONSTRUCTOR Create a Twin<wbr>Parser instance with default values."
  parameters:
  - description: "- Callback function to report changes on the `Desired` collection."
    name: "onDesiredCallback"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback?alt=com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback&text=TwinChangedCallback\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TwinParser(TwinChangedCallback onDesiredCallback)"
  desc: "CONSTRUCTOR Create a TwinParser instance with default values. set OnReportedCallback as null set Tags as null"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.TwinParser(com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback,com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.TwinParser(TwinChangedCallback onDesiredCallback, TwinChangedCallback onReportedCallback)"
  name: "TwinParser(TwinChangedCallback onDesiredCallback, TwinChangedCallback onReportedCallback)"
  nameWithType: "TwinParser.TwinParser(TwinChangedCallback onDesiredCallback, TwinChangedCallback onReportedCallback)"
  summary: "CONSTRUCTOR Create a Twin<wbr>Parser instance with default values."
  parameters:
  - description: "- Callback function to report changes on the `Desired` collection."
    name: "onDesiredCallback"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback?alt=com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback&text=TwinChangedCallback\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Callback function to report changes on the `Reported` collection."
    name: "onReportedCallback"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback?alt=com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback&text=TwinChangedCallback\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TwinParser(TwinChangedCallback onDesiredCallback, TwinChangedCallback onReportedCallback)"
  desc: "CONSTRUCTOR Create a TwinParser instance with default values. set Tags as null"
fields:
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.manager"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.manager"
  name: "manager"
  nameWithType: "TwinParser.manager"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.RegisterManagerParser?alt=com.microsoft.azure.sdk.iot.deps.serializer.RegisterManagerParser&text=RegisterManagerParser\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected RegisterManagerParser manager"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.properties"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.properties"
  name: "properties"
  nameWithType: "TwinParser.properties"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.TwinProperties?alt=com.microsoft.azure.sdk.iot.deps.serializer.TwinProperties&text=TwinProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected TwinProperties properties"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.tags"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.tags"
  name: "tags"
  nameWithType: "TwinParser.tags"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.TwinTags?alt=com.microsoft.azure.sdk.iot.deps.serializer.TwinTags&text=TwinTags\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected TwinTags tags"
methods:
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.enableMetadata()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.enableMetadata()"
  name: "enableMetadata()"
  nameWithType: "TwinParser.enableMetadata()"
  summary: "Enable metadata report in the Json."
  syntax: "public void enableMetadata()"
  desc: "Enable metadata report in the Json."
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.enableTags()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.enableTags()"
  name: "enableTags()"
  nameWithType: "TwinParser.enableTags()"
  summary: "Enable tags in the Twin collection and in the Json."
  syntax: "public void enableTags()"
  desc: "Enable tags in the Twin collection and in the Json."
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getConnectionState()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getConnectionState()"
  name: "getConnectionState()"
  nameWithType: "TwinParser.getConnectionState()"
  summary: "Getter for connection state"
  syntax: "public TwinConnectionState getConnectionState()"
  desc: "Getter for connection state"
  returns:
    description: "The connectionState string"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.TwinConnectionState?alt=com.microsoft.azure.sdk.iot.deps.serializer.TwinConnectionState&text=TwinConnectionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getConnectionStateUpdatedTime()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getConnectionStateUpdatedTime()"
  name: "getConnectionStateUpdatedTime()"
  nameWithType: "TwinParser.getConnectionStateUpdatedTime()"
  summary: "Getter for connection state updated date and time"
  syntax: "public String getConnectionStateUpdatedTime()"
  desc: "Getter for connection state updated date and time"
  returns:
    description: "The string containing the time when the connectionState parameter was updated"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getDesiredPropertyMap()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getDesiredPropertyMap()"
  name: "getDesiredPropertyMap()"
  nameWithType: "TwinParser.getDesiredPropertyMap()"
  summary: "Return a map with all \\`desired\\` properties in the collection."
  syntax: "public Map<String,Object> getDesiredPropertyMap()"
  desc: "Return a map with all \\`desired\\` properties in the collection."
  returns:
    description: "A map with all `desired` properties in the collection (it can be null)."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getDesiredPropertyVersion()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getDesiredPropertyVersion()"
  name: "getDesiredPropertyVersion()"
  nameWithType: "TwinParser.getDesiredPropertyVersion()"
  summary: "Return the \\`desired\\` property version."
  syntax: "public Integer getDesiredPropertyVersion()"
  desc: "Return the \\`desired\\` property version."
  returns:
    description: "Integer that contains the `desired` property version (it can be null)."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getDeviceId()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getDeviceId()"
  name: "getDeviceId()"
  nameWithType: "TwinParser.getDeviceId()"
  summary: "Getter for device name"
  syntax: "public String getDeviceId()"
  desc: "Getter for device name"
  returns:
    description: "Device name\n A case-sensitive string (up to 128 char long)\n of ASCII 7-bit alphanumeric chars\n + {'-', ':', '.', '+', '%', '_', '#', '*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''}."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getETag()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getETag()"
  name: "getETag()"
  nameWithType: "TwinParser.getETag()"
  summary: "Getter for ETag"
  syntax: "public String getETag()"
  desc: "Getter for ETag"
  returns:
    description: "A string representing a weak ETAG version\n of this JSON description. This is a hash."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getGenerationId()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getGenerationId()"
  name: "getGenerationId()"
  nameWithType: "TwinParser.getGenerationId()"
  summary: "Getter for device generation name"
  syntax: "public String getGenerationId()"
  desc: "Getter for device generation name"
  returns:
    description: "Device generation Id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getLastActivityTime()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getLastActivityTime()"
  name: "getLastActivityTime()"
  nameWithType: "TwinParser.getLastActivityTime()"
  summary: "Getter for last activity time"
  syntax: "public String getLastActivityTime()"
  desc: "Getter for last activity time"
  returns:
    description: "The string containing the time when the lastActivity parameter was updated"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getReportedPropertyMap()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getReportedPropertyMap()"
  name: "getReportedPropertyMap()"
  nameWithType: "TwinParser.getReportedPropertyMap()"
  summary: "Return a map with all \\`reported\\` properties in the collection."
  syntax: "public Map<String,Object> getReportedPropertyMap()"
  desc: "Return a map with all \\`reported\\` properties in the collection."
  returns:
    description: "A map with all `reported` properties in the collection (it can be null)."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getReportedPropertyVersion()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getReportedPropertyVersion()"
  name: "getReportedPropertyVersion()"
  nameWithType: "TwinParser.getReportedPropertyVersion()"
  summary: "Return the \\`reported\\` property version."
  syntax: "public Integer getReportedPropertyVersion()"
  desc: "Return the \\`reported\\` property version."
  returns:
    description: "Integer that contains the `reported` property version (it can be null)."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getStatus()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getStatus()"
  name: "getStatus()"
  nameWithType: "TwinParser.getStatus()"
  summary: "Getter for device status"
  syntax: "public TwinStatus getStatus()"
  desc: "Getter for device status"
  returns:
    description: "\"enabled\", \"disabled\".\n If \"enabled\", this device is authorized to connect.\n If \"disabled\" this device cannot receive or send messages, and statusReason must be set."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.TwinStatus?alt=com.microsoft.azure.sdk.iot.deps.serializer.TwinStatus&text=TwinStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getStatusReason()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getStatusReason()"
  name: "getStatusReason()"
  nameWithType: "TwinParser.getStatusReason()"
  summary: "Getter for status reason"
  syntax: "public String getStatusReason()"
  desc: "Getter for status reason"
  returns:
    description: "A 128 char long string storing the reason of suspension.\n (all UTF-8 chars allowed)."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getStatusUpdatedTime()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getStatusUpdatedTime()"
  name: "getStatusUpdatedTime()"
  nameWithType: "TwinParser.getStatusUpdatedTime()"
  summary: "Getter for status updated date and time"
  syntax: "public String getStatusUpdatedTime()"
  desc: "Getter for status updated date and time"
  returns:
    description: "Datetime of last time the state was updated."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getTagsMap()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getTagsMap()"
  name: "getTagsMap()"
  nameWithType: "TwinParser.getTagsMap()"
  summary: "Return a map with all \\`tags\\` in the collection."
  syntax: "public Map<String,Object> getTagsMap()"
  exceptions:
  - description: "This exception is thrown if tags the is not enabled."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Return a map with all \\`tags\\` in the collection."
  returns:
    description: "A map with all `tags` in the collection (it can be null)."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getVersion()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.getVersion()"
  name: "getVersion()"
  nameWithType: "TwinParser.getVersion()"
  summary: "Getter for Twin version"
  syntax: "public Integer getVersion()"
  desc: "Getter for Twin version"
  returns:
    description: "A Integer representing a twin tags and properties version in the JSON. It can be <code>null</code>"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.resetDesiredProperty(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.resetDesiredProperty(Map<String,Object> propertyMap)"
  name: "resetDesiredProperty(Map<String,Object> propertyMap)"
  nameWithType: "TwinParser.resetDesiredProperty(Map<String,Object> propertyMap)"
  summary: "Reset the \\`desired\\` properties information in the collection, deleting all old properties and add all the new provided ones."
  parameters:
  - description: "- Map of `desired` property to change the collection."
    name: "propertyMap"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public String resetDesiredProperty(Map<String,Object> propertyMap)"
  exceptions:
  - description: "This exception is thrown if the properties in the map do not fits the requirements."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reset the \\`desired\\` properties information in the collection, deleting all old properties and add all the new provided ones. Return a string with a json that contains a sub-collection of added properties."
  returns:
    description: "Json with added properties"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.resetReportedProperty(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.resetReportedProperty(Map<String,Object> propertyMap)"
  name: "resetReportedProperty(Map<String,Object> propertyMap)"
  nameWithType: "TwinParser.resetReportedProperty(Map<String,Object> propertyMap)"
  summary: "Reset the \\`reported\\` properties information in the collection, deleting all old properties and add all the new provided ones."
  parameters:
  - description: "- Map of `reported` property to change the collection."
    name: "propertyMap"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public String resetReportedProperty(Map<String,Object> propertyMap)"
  exceptions:
  - description: "This exception is thrown if the properties in the map do not fits the requirements."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reset the \\`reported\\` properties information in the collection, deleting all old properties and add all the new provided ones. Return a string with a json that contains a sub-collection of added properties."
  returns:
    description: "Json with added properties"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.resetTags(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.resetTags(Map<String,Object> tagsMap)"
  name: "resetTags(Map<String,Object> tagsMap)"
  nameWithType: "TwinParser.resetTags(Map<String,Object> tagsMap)"
  summary: "Reset the \\`tags\\` information in the collection, deleting all old tags and add all the new provided ones."
  parameters:
  - description: "- Map of `tags` to change the collection."
    name: "tagsMap"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public String resetTags(Map<String,Object> tagsMap)"
  exceptions:
  - description: "This exception is thrown if the tags in the map do not fits the requirements."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the tags in the map do not fits the requirements."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reset the \\`tags\\` information in the collection, deleting all old tags and add all the new provided ones. Return a string with a json that contains a sub-collection of added tags."
  returns:
    description: "Json with added tags"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.setDesiredCallback(com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.setDesiredCallback(TwinChangedCallback onDesiredCallback)"
  name: "setDesiredCallback(TwinChangedCallback onDesiredCallback)"
  nameWithType: "TwinParser.setDesiredCallback(TwinChangedCallback onDesiredCallback)"
  summary: "Set the callback function to report changes on the \\`Desired\\` collection when \\`Twin<wbr>Parser\\` receives a new json."
  parameters:
  - description: "- Callback function to report changes on the `Desired` collection."
    name: "onDesiredCallback"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback?alt=com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback&text=TwinChangedCallback\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setDesiredCallback(TwinChangedCallback onDesiredCallback)"
  desc: "Set the callback function to report changes on the \\`Desired\\` collection when \\`TwinParser\\` receives a new json."
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.setDeviceId(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.setDeviceId(String deviceId)"
  name: "setDeviceId(String deviceId)"
  nameWithType: "TwinParser.setDeviceId(String deviceId)"
  summary: "Setter for device name"
  parameters:
  - description: "device id\n A case-sensitive string (up to 128 char long)\n of ASCII 7-bit alphanumeric chars\n + {'-', ':', '.', '+', '%', '_', '#', '*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''}"
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setDeviceId(String deviceId)"
  exceptions:
  - description: "if the provided device Id is not valid."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Setter for device name"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.setETag(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.setETag(String eTag)"
  name: "setETag(String eTag)"
  nameWithType: "TwinParser.setETag(String eTag)"
  summary: "Setter for ETag."
  parameters:
  - description: "is a string representing a weak ETAG version\n of this JSON description. This is a hash."
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setETag(String eTag)"
  exceptions:
  - description: "if the provided eTag Id is not valid."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Setter for ETag."
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.setReportedCallback(com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.setReportedCallback(TwinChangedCallback onReportedCallback)"
  name: "setReportedCallback(TwinChangedCallback onReportedCallback)"
  nameWithType: "TwinParser.setReportedCallback(TwinChangedCallback onReportedCallback)"
  summary: "Set the callback function to report changes on the \\`Reported\\` collection when \\`Twin<wbr>Parser\\` receives a new json."
  parameters:
  - description: "- Callback function to report changes on the `Reported` collection."
    name: "onReportedCallback"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback?alt=com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback&text=TwinChangedCallback\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setReportedCallback(TwinChangedCallback onReportedCallback)"
  desc: "Set the callback function to report changes on the \\`Reported\\` collection when \\`TwinParser\\` receives a new json."
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.setTagsCallback(com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.setTagsCallback(TwinChangedCallback onTagsCallback)"
  name: "setTagsCallback(TwinChangedCallback onTagsCallback)"
  nameWithType: "TwinParser.setTagsCallback(TwinChangedCallback onTagsCallback)"
  summary: "Set the callback function to report changes on the \\`tags\\` collection when \\`Twin<wbr>Parser\\` receives a new json."
  parameters:
  - description: "- Callback function to report changes on the `Reported` collection."
    name: "onTagsCallback"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback?alt=com.microsoft.azure.sdk.iot.deps.serializer.TwinChangedCallback&text=TwinChangedCallback\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setTagsCallback(TwinChangedCallback onTagsCallback)"
  desc: "Set the callback function to report changes on the \\`tags\\` collection when \\`TwinParser\\` receives a new json."
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.toJson()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.toJson()"
  name: "toJson()"
  nameWithType: "TwinParser.toJson()"
  summary: "Create a String with a json content that represents all the information in the Twin<wbr>Parser class and inner<wbr>Classes."
  syntax: "public String toJson()"
  desc: "Create a String with a json content that represents all the information in the TwinParser class and innerClasses."
  returns:
    description: "String with the json content."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.toJsonElement()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.toJsonElement()"
  name: "toJsonElement()"
  nameWithType: "TwinParser.toJsonElement()"
  summary: "Create a Json<wbr>Element that represents all the information in the Twin<wbr>Parser class and inner<wbr>Classes."
  syntax: "public JsonElement toJsonElement()"
  desc: "Create a JsonElement that represents all the information in the TwinParser class and innerClasses."
  returns:
    description: "JsonElement with the Twin information."
    type: "<xref href=\"com.google.gson.JsonElement?alt=com.google.gson.JsonElement&text=JsonElement\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateDesiredProperty(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateDesiredProperty(String json)"
  name: "updateDesiredProperty(String json)"
  nameWithType: "TwinParser.updateDesiredProperty(String json)"
  summary: "Update the \\`desired\\` properties information in the collection, using the information parsed from the provided json."
  parameters:
  - description: "- Json with `desired` property to change the collection."
    name: "json"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void updateDesiredProperty(String json)"
  exceptions:
  - description: "This exception is thrown if the Json is not well formed."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Update the \\`desired\\` properties information in the collection, using the information parsed from the provided json. It will fire a callback if any property was added, excluded, or had its value updated."
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateDesiredProperty(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateDesiredProperty(Map<String,Object> propertyMap)"
  name: "updateDesiredProperty(Map<String,Object> propertyMap)"
  nameWithType: "TwinParser.updateDesiredProperty(Map<String,Object> propertyMap)"
  summary: "Update the \\`desired\\` properties information in the collection, and return a string with a json that contains a sub-collection of added properties, or properties with new value."
  parameters:
  - description: "- Map of `desired` property to change the collection."
    name: "propertyMap"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public String updateDesiredProperty(Map<String,Object> propertyMap)"
  exceptions:
  - description: "This exception is thrown if the properties in the map do not fits the requirements."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Update the \\`desired\\` properties information in the collection, and return a string with a json that contains a sub-collection of added properties, or properties with new value."
  returns:
    description: "Json with added or changed properties"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateDeviceManager(java.lang.String,com.microsoft.azure.sdk.iot.deps.serializer.TwinStatus,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateDeviceManager(String deviceId, TwinStatus status, String statusReason)"
  name: "updateDeviceManager(String deviceId, TwinStatus status, String statusReason)"
  nameWithType: "TwinParser.updateDeviceManager(String deviceId, TwinStatus status, String statusReason)"
  summary: "Update the device manager information in the collection, and return a string with a json that contains a the new device manager description, including new and old values."
  parameters:
  - description: "- Device name"
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "- Device status(\"enabled\", \"disabled\")"
    name: "status"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.TwinStatus?alt=com.microsoft.azure.sdk.iot.deps.serializer.TwinStatus&text=TwinStatus\" data-throw-if-not-resolved=\"False\" />"
  - description: "- A 128 char long string storing the reason of suspension (for status=\"disabled\")."
    name: "statusReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String updateDeviceManager(String deviceId, TwinStatus status, String statusReason)"
  exceptions:
  - description: "This exception is thrown if there are any inconsistent in the provided description."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Update the device manager information in the collection, and return a string with a json that contains a the new device manager description, including new and old values."
  returns:
    description: "Json with the manager description. Null if nothing change."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateReportedProperty(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateReportedProperty(String json)"
  name: "updateReportedProperty(String json)"
  nameWithType: "TwinParser.updateReportedProperty(String json)"
  summary: "Update the \\`reported\\` properties information in the collection, using the information parsed from the provided json."
  parameters:
  - description: "- Json with `reported` property to change the collection."
    name: "json"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void updateReportedProperty(String json)"
  exceptions:
  - description: "This exception is thrown if the Json is not well formed."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Update the \\`reported\\` properties information in the collection, using the information parsed from the provided json. It will fire a callback if any property was added, excluded, or had its value updated."
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateReportedProperty(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateReportedProperty(Map<String,Object> propertyMap)"
  name: "updateReportedProperty(Map<String,Object> propertyMap)"
  nameWithType: "TwinParser.updateReportedProperty(Map<String,Object> propertyMap)"
  summary: "Update the \\`reported\\` properties information in the collection, and return a string with a json that contains a sub-collection of added properties, or properties with new value."
  parameters:
  - description: "- Map of `reported` property to change the collection."
    name: "propertyMap"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public String updateReportedProperty(Map<String,Object> propertyMap)"
  exceptions:
  - description: "This exception is thrown if the properties in the map do not fits the requirements."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Update the \\`reported\\` properties information in the collection, and return a string with a json that contains a sub-collection of added properties, or properties with new value."
  returns:
    description: "Json with added or changed properties"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateTags(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateTags(Map<String,Object> tagsMap)"
  name: "updateTags(Map<String,Object> tagsMap)"
  nameWithType: "TwinParser.updateTags(Map<String,Object> tagsMap)"
  summary: "Update the \\`tags\\` information in the collection, and return a string with a json that contains a sub-collection of added tags, or tags with new value."
  parameters:
  - description: "- Map of `tags` to change the collection."
    name: "tagsMap"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public String updateTags(Map<String,Object> tagsMap)"
  exceptions:
  - description: "This exception is thrown if the tags in the map do not fits the requirements."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the tags in the map do not fits the requirements."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Update the \\`tags\\` information in the collection, and return a string with a json that contains a sub-collection of added tags, or tags with new value."
  returns:
    description: "Json with added or changed tags"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateTwin(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateTwin(String json)"
  name: "updateTwin(String json)"
  nameWithType: "TwinParser.updateTwin(String json)"
  summary: "Update the properties information in the collection, using the information parsed from the provided json."
  parameters:
  - description: "- Json with property to change the collection."
    name: "json"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void updateTwin(String json)"
  exceptions:
  - description: "This exception is thrown if the Json is not well formed."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Update the properties information in the collection, using the information parsed from the provided json. It will fire a callback if any property was added, excluded, or had its value updated."
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateTwin(java.util.Map<java.lang.String,java.lang.Object>,java.util.Map<java.lang.String,java.lang.Object>,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateTwin(Map<String,Object> desiredPropertyMap, Map<String,Object> reportedPropertyMap, Map<String,Object> tagsMap)"
  name: "updateTwin(Map<String,Object> desiredPropertyMap, Map<String,Object> reportedPropertyMap, Map<String,Object> tagsMap)"
  nameWithType: "TwinParser.updateTwin(Map<String,Object> desiredPropertyMap, Map<String,Object> reportedPropertyMap, Map<String,Object> tagsMap)"
  summary: "Update properties and tags information in the collection, and return a string with a json that contains a sub-collection of added properties, properties with new value, added tags, and tags with new values."
  parameters:
  - description: "- Map of `desired` property to change the collection."
    name: "desiredPropertyMap"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "- Map of `reported` property to change the collection."
    name: "reportedPropertyMap"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "- Map of `tags` to change the collection."
    name: "tagsMap"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public String updateTwin(Map<String,Object> desiredPropertyMap, Map<String,Object> reportedPropertyMap, Map<String,Object> tagsMap)"
  exceptions:
  - description: "This exception is thrown if the properties or tags in the maps do not fits the requirements."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the properties or tags in the maps do not fits the requirements."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Update properties and tags information in the collection, and return a string with a json that contains a sub-collection of added properties, properties with new value, added tags, and tags with new values."
  returns:
    description: "Json with added or changed properties and tags"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "TwinParser Representation including the twin collection and Json serializer and deserializer."
hasDeprecatedTag: true
metadata: {}
package: "com.microsoft.azure.sdk.iot.deps.serializer"
artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
