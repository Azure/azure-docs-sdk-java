### YamlMime:JavaType
uid: "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl"
fullName: "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl"
name: "DiskPoolImpl"
nameWithType: "DiskPoolImpl"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DiskPoolImpl implements DiskPool, DiskPool.Definition, DiskPool.Update"
methods:
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.additionalCapabilities()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.apply()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.apply(com.azure.core.util.Context)"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.availabilityZones()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.create()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.create(com.azure.core.util.Context)"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.deallocate()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.deallocate(com.azure.core.util.Context)"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.disks()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.id()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.innerModel()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.location()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.managedBy()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.managedByExtended()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.name()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.nameSkuName()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.provisioningState()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.refresh()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.refresh(com.azure.core.util.Context)"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.region()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.regionName()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.start()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.start(com.azure.core.util.Context)"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.status()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.subnetId()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.systemData()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.tags()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.tier()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.type()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.update()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.upgrade()"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.upgrade(com.azure.core.util.Context)"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.withAdditionalCapabilities(java.util.List<java.lang.String>)"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.withAvailabilityZones(java.util.List<java.lang.String>)"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.withDisks(java.util.List<com.azure.resourcemanager.storagepool.models.Disk>)"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.withExistingResourceGroup(java.lang.String)"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.withManagedBy(java.lang.String)"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.withManagedByExtended(java.util.List<java.lang.String>)"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.withRegion(com.azure.core.management.Region)"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.withRegion(java.lang.String)"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.withSku(com.azure.resourcemanager.storagepool.fluent.models.Sku)"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.withSubnetId(java.lang.String)"
- "com.azure.resourcemanager.storagepool.implementation.DiskPoolImpl.withTags(java.util.Map<java.lang.String,java.lang.String>)"
type: "class"
implements:
- "<xref href=\"com.azure.resourcemanager.storagepool.models.DiskPool.Definition?alt=com.azure.resourcemanager.storagepool.models.DiskPool.Definition&text=Definition\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.storagepool.models.DiskPool.Update?alt=com.azure.resourcemanager.storagepool.models.DiskPool.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.storagepool.models.DiskPool?alt=com.azure.resourcemanager.storagepool.models.DiskPool&text=DiskPool\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.storagepool.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-storagepool:1.0.0-beta.1
