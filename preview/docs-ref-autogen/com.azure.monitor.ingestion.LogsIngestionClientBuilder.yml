### YamlMime:JavaType
uid: "com.azure.monitor.ingestion.LogsIngestionClientBuilder"
fullName: "com.azure.monitor.ingestion.LogsIngestionClientBuilder"
name: "LogsIngestionClientBuilder"
nameWithType: "LogsIngestionClientBuilder"
summary: "Fluent builder for creating instances of <xref uid=\"com.azure.monitor.ingestion.LogsIngestionClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionClient\"></xref> and <xref uid=\"com.azure.monitor.ingestion.LogsIngestionAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionAsyncClient\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LogsIngestionClientBuilder implements ConfigurationTrait<LogsIngestionClientBuilder>, HttpTrait<LogsIngestionClientBuilder>, EndpointTrait<LogsIngestionClientBuilder>, TokenCredentialTrait<LogsIngestionClientBuilder>"
constructors:
- uid: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.LogsIngestionClientBuilder()"
  fullName: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.LogsIngestionClientBuilder()"
  name: "LogsIngestionClientBuilder()"
  nameWithType: "LogsIngestionClientBuilder.LogsIngestionClientBuilder()"
  syntax: "public LogsIngestionClientBuilder()"
methods:
- uid: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  fullName: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.addPolicy(HttpPipelinePolicy customPolicy)"
  name: "addPolicy(HttpPipelinePolicy customPolicy)"
  nameWithType: "LogsIngestionClientBuilder.addPolicy(HttpPipelinePolicy customPolicy)"
  summary: "Adds a custom Http pipeline policy."
  parameters:
  - description: "The custom Http pipeline policy to add."
    name: "customPolicy"
    type: "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LogsIngestionClientBuilder addPolicy(HttpPipelinePolicy customPolicy)"
  desc: "Adds a custom Http pipeline policy."
  returns:
    description: "the updated <xref uid=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder?alt=com.azure.monitor.ingestion.LogsIngestionClientBuilder&text=LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.buildAsyncClient()"
  fullName: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.buildAsyncClient()"
  name: "buildAsyncClient()"
  nameWithType: "LogsIngestionClientBuilder.buildAsyncClient()"
  summary: "Creates an asynchronous client with the configured options in this builder."
  syntax: "public LogsIngestionAsyncClient buildAsyncClient()"
  desc: "Creates an asynchronous client with the configured options in this builder."
  returns:
    description: "An asynchronous <xref uid=\"com.azure.monitor.ingestion.LogsIngestionAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionAsyncClient\"></xref>."
    type: "<xref href=\"com.azure.monitor.ingestion.LogsIngestionAsyncClient?alt=com.azure.monitor.ingestion.LogsIngestionAsyncClient&text=LogsIngestionAsyncClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.buildClient()"
  fullName: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.buildClient()"
  name: "buildClient()"
  nameWithType: "LogsIngestionClientBuilder.buildClient()"
  summary: "Creates a synchronous client with the configured options in this builder."
  syntax: "public LogsIngestionClient buildClient()"
  desc: "Creates a synchronous client with the configured options in this builder."
  returns:
    description: "A synchronous <xref uid=\"com.azure.monitor.ingestion.LogsIngestionClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionClient\"></xref>."
    type: "<xref href=\"com.azure.monitor.ingestion.LogsIngestionClient?alt=com.azure.monitor.ingestion.LogsIngestionClient&text=LogsIngestionClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.clientOptions(com.azure.core.util.ClientOptions)"
  fullName: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.clientOptions(ClientOptions clientOptions)"
  name: "clientOptions(ClientOptions clientOptions)"
  nameWithType: "LogsIngestionClientBuilder.clientOptions(ClientOptions clientOptions)"
  summary: "Set the <xref uid=\"com.azure.core.util.ClientOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions\"></xref> used for creating the client."
  parameters:
  - description: "The <xref uid=\"com.azure.core.util.ClientOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions\"></xref>."
    name: "clientOptions"
    type: "<xref href=\"com.azure.core.util.ClientOptions?alt=com.azure.core.util.ClientOptions&text=ClientOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LogsIngestionClientBuilder clientOptions(ClientOptions clientOptions)"
  desc: "Set the <xref uid=\"com.azure.core.util.ClientOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions\"></xref> used for creating the client."
  returns:
    description: "the updated <xref uid=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder?alt=com.azure.monitor.ingestion.LogsIngestionClientBuilder&text=LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.configuration(com.azure.core.util.Configuration)"
  fullName: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.configuration(Configuration configuration)"
  name: "configuration(Configuration configuration)"
  nameWithType: "LogsIngestionClientBuilder.configuration(Configuration configuration)"
  summary: "Sets The configuration store that is used during construction of the service client."
  parameters:
  - description: "the configuration value."
    name: "configuration"
    type: "<xref href=\"com.azure.core.util.Configuration?alt=com.azure.core.util.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LogsIngestionClientBuilder configuration(Configuration configuration)"
  desc: "Sets The configuration store that is used during construction of the service client."
  returns:
    description: "the updated <xref uid=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder?alt=com.azure.monitor.ingestion.LogsIngestionClientBuilder&text=LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.credential(com.azure.core.credential.TokenCredential)"
  fullName: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.credential(TokenCredential tokenCredential)"
  name: "credential(TokenCredential tokenCredential)"
  nameWithType: "LogsIngestionClientBuilder.credential(TokenCredential tokenCredential)"
  summary: "Sets The Token<wbr>Credential used for authentication."
  parameters:
  - description: "the tokenCredential value."
    name: "tokenCredential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LogsIngestionClientBuilder credential(TokenCredential tokenCredential)"
  desc: "Sets The TokenCredential used for authentication."
  returns:
    description: "the updated <xref uid=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder?alt=com.azure.monitor.ingestion.LogsIngestionClientBuilder&text=LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.endpoint(java.lang.String)"
  fullName: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.endpoint(String endpoint)"
  name: "endpoint(String endpoint)"
  nameWithType: "LogsIngestionClientBuilder.endpoint(String endpoint)"
  summary: "Sets the log query endpoint."
  parameters:
  - description: "the host value."
    name: "endpoint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LogsIngestionClientBuilder endpoint(String endpoint)"
  desc: "Sets the log query endpoint."
  returns:
    description: "the updated <xref uid=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder?alt=com.azure.monitor.ingestion.LogsIngestionClientBuilder&text=LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  fullName: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.httpClient(HttpClient httpClient)"
  name: "httpClient(HttpClient httpClient)"
  nameWithType: "LogsIngestionClientBuilder.httpClient(HttpClient httpClient)"
  summary: "Sets The HTTP client used to send the request."
  parameters:
  - description: "the httpClient value."
    name: "httpClient"
    type: "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LogsIngestionClientBuilder httpClient(HttpClient httpClient)"
  desc: "Sets The HTTP client used to send the request."
  returns:
    description: "the updated <xref uid=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder?alt=com.azure.monitor.ingestion.LogsIngestionClientBuilder&text=LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  fullName: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.httpLogOptions(HttpLogOptions httpLogOptions)"
  name: "httpLogOptions(HttpLogOptions httpLogOptions)"
  nameWithType: "LogsIngestionClientBuilder.httpLogOptions(HttpLogOptions httpLogOptions)"
  summary: "Sets The logging configuration for HTTP requests and responses."
  parameters:
  - description: "the httpLogOptions value."
    name: "httpLogOptions"
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LogsIngestionClientBuilder httpLogOptions(HttpLogOptions httpLogOptions)"
  desc: "Sets The logging configuration for HTTP requests and responses."
  returns:
    description: "the updated <xref uid=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder?alt=com.azure.monitor.ingestion.LogsIngestionClientBuilder&text=LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  fullName: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.pipeline(HttpPipeline pipeline)"
  name: "pipeline(HttpPipeline pipeline)"
  nameWithType: "LogsIngestionClientBuilder.pipeline(HttpPipeline pipeline)"
  summary: "Sets The HTTP pipeline to send requests through."
  parameters:
  - description: "the pipeline value."
    name: "pipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LogsIngestionClientBuilder pipeline(HttpPipeline pipeline)"
  desc: "Sets The HTTP pipeline to send requests through."
  returns:
    description: "the updated <xref uid=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder?alt=com.azure.monitor.ingestion.LogsIngestionClientBuilder&text=LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.retryOptions(com.azure.core.http.policy.RetryOptions)"
  fullName: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.retryOptions(RetryOptions retryOptions)"
  name: "retryOptions(RetryOptions retryOptions)"
  nameWithType: "LogsIngestionClientBuilder.retryOptions(RetryOptions retryOptions)"
  summary: "Sets the retry options for this client."
  parameters:
  - description: "the retry options for this client."
    name: "retryOptions"
    type: "<xref href=\"com.azure.core.http.policy.RetryOptions?alt=com.azure.core.http.policy.RetryOptions&text=RetryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LogsIngestionClientBuilder retryOptions(RetryOptions retryOptions)"
  desc: "Sets the retry options for this client."
  returns:
    description: "the updated <xref uid=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder?alt=com.azure.monitor.ingestion.LogsIngestionClientBuilder&text=LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)"
  fullName: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.retryPolicy(RetryPolicy retryPolicy)"
  name: "retryPolicy(RetryPolicy retryPolicy)"
  nameWithType: "LogsIngestionClientBuilder.retryPolicy(RetryPolicy retryPolicy)"
  summary: "Sets The retry policy that will attempt to retry failed requests, if applicable."
  parameters:
  - description: "the retryPolicy value."
    name: "retryPolicy"
    type: "<xref href=\"com.azure.core.http.policy.RetryPolicy?alt=com.azure.core.http.policy.RetryPolicy&text=RetryPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LogsIngestionClientBuilder retryPolicy(RetryPolicy retryPolicy)"
  desc: "Sets The retry policy that will attempt to retry failed requests, if applicable."
  returns:
    description: "the updated <xref uid=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder?alt=com.azure.monitor.ingestion.LogsIngestionClientBuilder&text=LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.serviceVersion(com.azure.monitor.ingestion.LogsIngestionServiceVersion)"
  fullName: "com.azure.monitor.ingestion.LogsIngestionClientBuilder.serviceVersion(LogsIngestionServiceVersion serviceVersion)"
  name: "serviceVersion(LogsIngestionServiceVersion serviceVersion)"
  nameWithType: "LogsIngestionClientBuilder.serviceVersion(LogsIngestionServiceVersion serviceVersion)"
  summary: "The service version to use when creating the client."
  parameters:
  - description: "The <xref uid=\"com.azure.monitor.ingestion.LogsIngestionServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionServiceVersion\"></xref>."
    name: "serviceVersion"
    type: "<xref href=\"com.azure.monitor.ingestion.LogsIngestionServiceVersion?alt=com.azure.monitor.ingestion.LogsIngestionServiceVersion&text=LogsIngestionServiceVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LogsIngestionClientBuilder serviceVersion(LogsIngestionServiceVersion serviceVersion)"
  desc: "The service version to use when creating the client."
  returns:
    description: "the updated <xref uid=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder?alt=com.azure.monitor.ingestion.LogsIngestionClientBuilder&text=LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Fluent builder for creating instances of <xref uid=\"com.azure.monitor.ingestion.LogsIngestionClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionClient\"></xref> and <xref uid=\"com.azure.monitor.ingestion.LogsIngestionAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LogsIngestionAsyncClient\"></xref>."
implements:
- "<xref href=\"com.azure.core.client.traits.ConfigurationTrait?alt=com.azure.core.client.traits.ConfigurationTrait&text=ConfigurationTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder?alt=com.azure.monitor.ingestion.LogsIngestionClientBuilder&text=LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.EndpointTrait?alt=com.azure.core.client.traits.EndpointTrait&text=EndpointTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder?alt=com.azure.monitor.ingestion.LogsIngestionClientBuilder&text=LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.HttpTrait?alt=com.azure.core.client.traits.HttpTrait&text=HttpTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder?alt=com.azure.monitor.ingestion.LogsIngestionClientBuilder&text=LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.TokenCredentialTrait?alt=com.azure.core.client.traits.TokenCredentialTrait&text=TokenCredentialTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.monitor.ingestion.LogsIngestionClientBuilder?alt=com.azure.monitor.ingestion.LogsIngestionClientBuilder&text=LogsIngestionClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.monitor.ingestion"
artifact: com.azure:azure-monitor-ingestion:1.0.0-beta.2
