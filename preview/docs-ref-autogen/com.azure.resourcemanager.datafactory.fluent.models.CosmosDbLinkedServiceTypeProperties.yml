### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties"
name: "CosmosDbLinkedServiceTypeProperties"
nameWithType: "CosmosDbLinkedServiceTypeProperties"
summary: "CosmosDB linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CosmosDbLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.CosmosDbLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.CosmosDbLinkedServiceTypeProperties()"
  name: "CosmosDbLinkedServiceTypeProperties()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.CosmosDbLinkedServiceTypeProperties()"
  syntax: "public CosmosDbLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.accountEndpoint()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.accountEndpoint()"
  name: "accountEndpoint()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.accountEndpoint()"
  summary: "Get the account<wbr>Endpoint property: The endpoint of the Azure CosmosDB account."
  syntax: "public Object accountEndpoint()"
  desc: "Get the accountEndpoint property: The endpoint of the Azure CosmosDB account. Type: string (or Expression with resultType string)."
  returns:
    description: "the accountEndpoint value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.accountKey()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.accountKey()"
  name: "accountKey()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.accountKey()"
  summary: "Get the account<wbr>Key property: The account key of the Azure CosmosDB account."
  syntax: "public SecretBase accountKey()"
  desc: "Get the accountKey property: The account key of the Azure CosmosDB account. Type: SecureString or AzureKeyVaultSecretReference."
  returns:
    description: "the accountKey value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.azureCloudType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.azureCloudType()"
  name: "azureCloudType()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.azureCloudType()"
  summary: "Get the azure<wbr>Cloud<wbr>Type property: Indicates the azure cloud type of the service principle auth."
  syntax: "public Object azureCloudType()"
  desc: "Get the azureCloudType property: Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions\\\\u2019 cloud type. Type: string (or Expression with resultType string)."
  returns:
    description: "the azureCloudType value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.connectionMode()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.connectionMode()"
  name: "connectionMode()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.connectionMode()"
  summary: "Get the connection<wbr>Mode property: The connection mode used to access CosmosDB account."
  syntax: "public CosmosDbConnectionMode connectionMode()"
  desc: "Get the connectionMode property: The connection mode used to access CosmosDB account. Type: string (or Expression with resultType string)."
  returns:
    description: "the connectionMode value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CosmosDbConnectionMode?alt=com.azure.resourcemanager.datafactory.models.CosmosDbConnectionMode&text=CosmosDbConnectionMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.connectionString()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.connectionString()"
  name: "connectionString()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.connectionString()"
  summary: "Get the connection<wbr>String property: The connection string."
  syntax: "public Object connectionString()"
  desc: "Get the connectionString property: The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
  returns:
    description: "the connectionString value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.credential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.credential()"
  name: "credential()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.credential()"
  summary: "Get the credential property: The credential reference containing authentication information."
  syntax: "public CredentialReference credential()"
  desc: "Get the credential property: The credential reference containing authentication information."
  returns:
    description: "the credential value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.database()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.database()"
  name: "database()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.database()"
  summary: "Get the database property: The name of the database."
  syntax: "public Object database()"
  desc: "Get the database property: The name of the database. Type: string (or Expression with resultType string)."
  returns:
    description: "the database value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public Object encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.servicePrincipalCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.servicePrincipalCredential()"
  name: "servicePrincipalCredential()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.servicePrincipalCredential()"
  summary: "Get the service<wbr>Principal<wbr>Credential property: The credential of the service principal object in Azure Active Directory."
  syntax: "public SecretBase servicePrincipalCredential()"
  desc: "Get the servicePrincipalCredential property: The credential of the service principal object in Azure Active Directory. If servicePrincipalCredentialType is 'ServicePrincipalKey', servicePrincipalCredential can be SecureString or AzureKeyVaultSecretReference. If servicePrincipalCredentialType is 'ServicePrincipalCert', servicePrincipalCredential can only be AzureKeyVaultSecretReference."
  returns:
    description: "the servicePrincipalCredential value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.servicePrincipalCredentialType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.servicePrincipalCredentialType()"
  name: "servicePrincipalCredentialType()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.servicePrincipalCredentialType()"
  summary: "Get the service<wbr>Principal<wbr>Credential<wbr>Type property: The service principal credential type to use in Server-To-Server authentication."
  syntax: "public CosmosDbServicePrincipalCredentialType servicePrincipalCredentialType()"
  desc: "Get the servicePrincipalCredentialType property: The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string)."
  returns:
    description: "the servicePrincipalCredentialType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CosmosDbServicePrincipalCredentialType?alt=com.azure.resourcemanager.datafactory.models.CosmosDbServicePrincipalCredentialType&text=CosmosDbServicePrincipalCredentialType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.servicePrincipalId()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.servicePrincipalId()"
  name: "servicePrincipalId()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.servicePrincipalId()"
  summary: "Get the service<wbr>Principal<wbr>Id property: The client ID of the application in Azure Active Directory used for Server-To-Server authentication."
  syntax: "public Object servicePrincipalId()"
  desc: "Get the servicePrincipalId property: The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string)."
  returns:
    description: "the servicePrincipalId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.tenant()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.tenant()"
  name: "tenant()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.tenant()"
  summary: "Get the tenant property: The name or ID of the tenant to which the service principal belongs."
  syntax: "public Object tenant()"
  desc: "Get the tenant property: The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
  returns:
    description: "the tenant value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withAccountEndpoint(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withAccountEndpoint(Object accountEndpoint)"
  name: "withAccountEndpoint(Object accountEndpoint)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withAccountEndpoint(Object accountEndpoint)"
  summary: "Set the account<wbr>Endpoint property: The endpoint of the Azure CosmosDB account."
  parameters:
  - description: "the accountEndpoint value to set."
    name: "accountEndpoint"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withAccountEndpoint(Object accountEndpoint)"
  desc: "Set the accountEndpoint property: The endpoint of the Azure CosmosDB account. Type: string (or Expression with resultType string)."
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withAccountKey(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withAccountKey(SecretBase accountKey)"
  name: "withAccountKey(SecretBase accountKey)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withAccountKey(SecretBase accountKey)"
  summary: "Set the account<wbr>Key property: The account key of the Azure CosmosDB account."
  parameters:
  - description: "the accountKey value to set."
    name: "accountKey"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withAccountKey(SecretBase accountKey)"
  desc: "Set the accountKey property: The account key of the Azure CosmosDB account. Type: SecureString or AzureKeyVaultSecretReference."
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withAzureCloudType(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withAzureCloudType(Object azureCloudType)"
  name: "withAzureCloudType(Object azureCloudType)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withAzureCloudType(Object azureCloudType)"
  summary: "Set the azure<wbr>Cloud<wbr>Type property: Indicates the azure cloud type of the service principle auth."
  parameters:
  - description: "the azureCloudType value to set."
    name: "azureCloudType"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withAzureCloudType(Object azureCloudType)"
  desc: "Set the azureCloudType property: Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions\\\\u2019 cloud type. Type: string (or Expression with resultType string)."
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withConnectionMode(com.azure.resourcemanager.datafactory.models.CosmosDbConnectionMode)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withConnectionMode(CosmosDbConnectionMode connectionMode)"
  name: "withConnectionMode(CosmosDbConnectionMode connectionMode)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withConnectionMode(CosmosDbConnectionMode connectionMode)"
  summary: "Set the connection<wbr>Mode property: The connection mode used to access CosmosDB account."
  parameters:
  - description: "the connectionMode value to set."
    name: "connectionMode"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CosmosDbConnectionMode?alt=com.azure.resourcemanager.datafactory.models.CosmosDbConnectionMode&text=CosmosDbConnectionMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withConnectionMode(CosmosDbConnectionMode connectionMode)"
  desc: "Set the connectionMode property: The connection mode used to access CosmosDB account. Type: string (or Expression with resultType string)."
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withConnectionString(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withConnectionString(Object connectionString)"
  name: "withConnectionString(Object connectionString)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withConnectionString(Object connectionString)"
  summary: "Set the connection<wbr>String property: The connection string."
  parameters:
  - description: "the connectionString value to set."
    name: "connectionString"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withConnectionString(Object connectionString)"
  desc: "Set the connectionString property: The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withCredential(com.azure.resourcemanager.datafactory.models.CredentialReference)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withCredential(CredentialReference credential)"
  name: "withCredential(CredentialReference credential)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withCredential(CredentialReference credential)"
  summary: "Set the credential property: The credential reference containing authentication information."
  parameters:
  - description: "the credential value to set."
    name: "credential"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withCredential(CredentialReference credential)"
  desc: "Set the credential property: The credential reference containing authentication information."
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withDatabase(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withDatabase(Object database)"
  name: "withDatabase(Object database)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withDatabase(Object database)"
  summary: "Set the database property: The name of the database."
  parameters:
  - description: "the database value to set."
    name: "database"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withDatabase(Object database)"
  desc: "Set the database property: The name of the database. Type: string (or Expression with resultType string)."
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withServicePrincipalCredential(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withServicePrincipalCredential(SecretBase servicePrincipalCredential)"
  name: "withServicePrincipalCredential(SecretBase servicePrincipalCredential)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withServicePrincipalCredential(SecretBase servicePrincipalCredential)"
  summary: "Set the service<wbr>Principal<wbr>Credential property: The credential of the service principal object in Azure Active Directory."
  parameters:
  - description: "the servicePrincipalCredential value to set."
    name: "servicePrincipalCredential"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withServicePrincipalCredential(SecretBase servicePrincipalCredential)"
  desc: "Set the servicePrincipalCredential property: The credential of the service principal object in Azure Active Directory. If servicePrincipalCredentialType is 'ServicePrincipalKey', servicePrincipalCredential can be SecureString or AzureKeyVaultSecretReference. If servicePrincipalCredentialType is 'ServicePrincipalCert', servicePrincipalCredential can only be AzureKeyVaultSecretReference."
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withServicePrincipalCredentialType(com.azure.resourcemanager.datafactory.models.CosmosDbServicePrincipalCredentialType)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withServicePrincipalCredentialType(CosmosDbServicePrincipalCredentialType servicePrincipalCredentialType)"
  name: "withServicePrincipalCredentialType(CosmosDbServicePrincipalCredentialType servicePrincipalCredentialType)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withServicePrincipalCredentialType(CosmosDbServicePrincipalCredentialType servicePrincipalCredentialType)"
  summary: "Set the service<wbr>Principal<wbr>Credential<wbr>Type property: The service principal credential type to use in Server-To-Server authentication."
  parameters:
  - description: "the servicePrincipalCredentialType value to set."
    name: "servicePrincipalCredentialType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CosmosDbServicePrincipalCredentialType?alt=com.azure.resourcemanager.datafactory.models.CosmosDbServicePrincipalCredentialType&text=CosmosDbServicePrincipalCredentialType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withServicePrincipalCredentialType(CosmosDbServicePrincipalCredentialType servicePrincipalCredentialType)"
  desc: "Set the servicePrincipalCredentialType property: The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string)."
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withServicePrincipalId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withServicePrincipalId(Object servicePrincipalId)"
  name: "withServicePrincipalId(Object servicePrincipalId)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withServicePrincipalId(Object servicePrincipalId)"
  summary: "Set the service<wbr>Principal<wbr>Id property: The client ID of the application in Azure Active Directory used for Server-To-Server authentication."
  parameters:
  - description: "the servicePrincipalId value to set."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withServicePrincipalId(Object servicePrincipalId)"
  desc: "Set the servicePrincipalId property: The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string)."
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withTenant(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withTenant(Object tenant)"
  name: "withTenant(Object tenant)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withTenant(Object tenant)"
  summary: "Set the tenant property: The name or ID of the tenant to which the service principal belongs."
  parameters:
  - description: "the tenant value to set."
    name: "tenant"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withTenant(Object tenant)"
  desc: "Set the tenant property: The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "CosmosDB linked service properties."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
