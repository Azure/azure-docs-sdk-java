### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties"
name: "CosmosDbLinkedServiceTypeProperties"
nameWithType: "CosmosDbLinkedServiceTypeProperties"
summary: "CosmosDB linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CosmosDbLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.CosmosDbLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.CosmosDbLinkedServiceTypeProperties()"
  name: "CosmosDbLinkedServiceTypeProperties()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.CosmosDbLinkedServiceTypeProperties()"
  syntax: "public CosmosDbLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.accountEndpoint()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.accountEndpoint()"
  name: "accountEndpoint()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.accountEndpoint()"
  summary: "Get the accountEndpoint property: The endpoint of the Azure CosmosDB account. Type: string (or Expression with resultType string)."
  syntax: "public Object accountEndpoint()"
  returns:
    description: "the accountEndpoint value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.accountKey()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.accountKey()"
  name: "accountKey()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.accountKey()"
  summary: "Get the accountKey property: The account key of the Azure CosmosDB account. Type: SecureString or AzureKeyVaultSecretReference."
  syntax: "public SecretBase accountKey()"
  returns:
    description: "the accountKey value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.azureCloudType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.azureCloudType()"
  name: "azureCloudType()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.azureCloudType()"
  summary: "Get the azureCloudType property: Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions\\\\u2019 cloud type. Type: string (or Expression with resultType string)."
  syntax: "public Object azureCloudType()"
  returns:
    description: "the azureCloudType value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.connectionMode()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.connectionMode()"
  name: "connectionMode()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.connectionMode()"
  summary: "Get the connectionMode property: The connection mode used to access CosmosDB account. Type: string (or Expression with resultType string)."
  syntax: "public CosmosDbConnectionMode connectionMode()"
  returns:
    description: "the connectionMode value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CosmosDbConnectionMode?alt=com.azure.resourcemanager.datafactory.models.CosmosDbConnectionMode&text=CosmosDbConnectionMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.connectionString()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.connectionString()"
  name: "connectionString()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.connectionString()"
  summary: "Get the connectionString property: The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
  syntax: "public Object connectionString()"
  returns:
    description: "the connectionString value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.credential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.credential()"
  name: "credential()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.credential()"
  summary: "Get the credential property: The credential reference containing authentication information."
  syntax: "public CredentialReference credential()"
  returns:
    description: "the credential value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.database()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.database()"
  name: "database()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.database()"
  summary: "Get the database property: The name of the database. Type: string (or Expression with resultType string)."
  syntax: "public Object database()"
  returns:
    description: "the database value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  syntax: "public Object encryptedCredential()"
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.servicePrincipalCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.servicePrincipalCredential()"
  name: "servicePrincipalCredential()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.servicePrincipalCredential()"
  summary: "Get the servicePrincipalCredential property: The credential of the service principal object in Azure Active Directory. If servicePrincipalCredentialType is 'ServicePrincipalKey', servicePrincipalCredential can be SecureString or AzureKeyVaultSecretReference. If servicePrincipalCredentialType is 'ServicePrincipalCert', servicePrincipalCredential can only be AzureKeyVaultSecretReference."
  syntax: "public SecretBase servicePrincipalCredential()"
  returns:
    description: "the servicePrincipalCredential value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.servicePrincipalCredentialType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.servicePrincipalCredentialType()"
  name: "servicePrincipalCredentialType()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.servicePrincipalCredentialType()"
  summary: "Get the servicePrincipalCredentialType property: The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string)."
  syntax: "public CosmosDbServicePrincipalCredentialType servicePrincipalCredentialType()"
  returns:
    description: "the servicePrincipalCredentialType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CosmosDbServicePrincipalCredentialType?alt=com.azure.resourcemanager.datafactory.models.CosmosDbServicePrincipalCredentialType&text=CosmosDbServicePrincipalCredentialType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.servicePrincipalId()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.servicePrincipalId()"
  name: "servicePrincipalId()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.servicePrincipalId()"
  summary: "Get the servicePrincipalId property: The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string)."
  syntax: "public Object servicePrincipalId()"
  returns:
    description: "the servicePrincipalId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.tenant()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.tenant()"
  name: "tenant()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.tenant()"
  summary: "Get the tenant property: The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
  syntax: "public Object tenant()"
  returns:
    description: "the tenant value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withAccountEndpoint(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withAccountEndpoint(Object accountEndpoint)"
  name: "withAccountEndpoint(Object accountEndpoint)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withAccountEndpoint(Object accountEndpoint)"
  summary: "Set the accountEndpoint property: The endpoint of the Azure CosmosDB account. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the accountEndpoint value to set."
    name: "accountEndpoint"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withAccountEndpoint(Object accountEndpoint)"
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withAccountKey(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withAccountKey(SecretBase accountKey)"
  name: "withAccountKey(SecretBase accountKey)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withAccountKey(SecretBase accountKey)"
  summary: "Set the accountKey property: The account key of the Azure CosmosDB account. Type: SecureString or AzureKeyVaultSecretReference."
  parameters:
  - description: "the accountKey value to set."
    name: "accountKey"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withAccountKey(SecretBase accountKey)"
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withAzureCloudType(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withAzureCloudType(Object azureCloudType)"
  name: "withAzureCloudType(Object azureCloudType)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withAzureCloudType(Object azureCloudType)"
  summary: "Set the azureCloudType property: Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions\\\\u2019 cloud type. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the azureCloudType value to set."
    name: "azureCloudType"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withAzureCloudType(Object azureCloudType)"
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withConnectionMode(com.azure.resourcemanager.datafactory.models.CosmosDbConnectionMode)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withConnectionMode(CosmosDbConnectionMode connectionMode)"
  name: "withConnectionMode(CosmosDbConnectionMode connectionMode)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withConnectionMode(CosmosDbConnectionMode connectionMode)"
  summary: "Set the connectionMode property: The connection mode used to access CosmosDB account. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the connectionMode value to set."
    name: "connectionMode"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CosmosDbConnectionMode?alt=com.azure.resourcemanager.datafactory.models.CosmosDbConnectionMode&text=CosmosDbConnectionMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withConnectionMode(CosmosDbConnectionMode connectionMode)"
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withConnectionString(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withConnectionString(Object connectionString)"
  name: "withConnectionString(Object connectionString)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withConnectionString(Object connectionString)"
  summary: "Set the connectionString property: The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
  parameters:
  - description: "the connectionString value to set."
    name: "connectionString"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withConnectionString(Object connectionString)"
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withCredential(com.azure.resourcemanager.datafactory.models.CredentialReference)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withCredential(CredentialReference credential)"
  name: "withCredential(CredentialReference credential)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withCredential(CredentialReference credential)"
  summary: "Set the credential property: The credential reference containing authentication information."
  parameters:
  - description: "the credential value to set."
    name: "credential"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withCredential(CredentialReference credential)"
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withDatabase(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withDatabase(Object database)"
  name: "withDatabase(Object database)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withDatabase(Object database)"
  summary: "Set the database property: The name of the database. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the database value to set."
    name: "database"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withDatabase(Object database)"
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withServicePrincipalCredential(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withServicePrincipalCredential(SecretBase servicePrincipalCredential)"
  name: "withServicePrincipalCredential(SecretBase servicePrincipalCredential)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withServicePrincipalCredential(SecretBase servicePrincipalCredential)"
  summary: "Set the servicePrincipalCredential property: The credential of the service principal object in Azure Active Directory. If servicePrincipalCredentialType is 'ServicePrincipalKey', servicePrincipalCredential can be SecureString or AzureKeyVaultSecretReference. If servicePrincipalCredentialType is 'ServicePrincipalCert', servicePrincipalCredential can only be AzureKeyVaultSecretReference."
  parameters:
  - description: "the servicePrincipalCredential value to set."
    name: "servicePrincipalCredential"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withServicePrincipalCredential(SecretBase servicePrincipalCredential)"
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withServicePrincipalCredentialType(com.azure.resourcemanager.datafactory.models.CosmosDbServicePrincipalCredentialType)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withServicePrincipalCredentialType(CosmosDbServicePrincipalCredentialType servicePrincipalCredentialType)"
  name: "withServicePrincipalCredentialType(CosmosDbServicePrincipalCredentialType servicePrincipalCredentialType)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withServicePrincipalCredentialType(CosmosDbServicePrincipalCredentialType servicePrincipalCredentialType)"
  summary: "Set the servicePrincipalCredentialType property: The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the servicePrincipalCredentialType value to set."
    name: "servicePrincipalCredentialType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CosmosDbServicePrincipalCredentialType?alt=com.azure.resourcemanager.datafactory.models.CosmosDbServicePrincipalCredentialType&text=CosmosDbServicePrincipalCredentialType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withServicePrincipalCredentialType(CosmosDbServicePrincipalCredentialType servicePrincipalCredentialType)"
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withServicePrincipalId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withServicePrincipalId(Object servicePrincipalId)"
  name: "withServicePrincipalId(Object servicePrincipalId)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withServicePrincipalId(Object servicePrincipalId)"
  summary: "Set the servicePrincipalId property: The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the servicePrincipalId value to set."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withServicePrincipalId(Object servicePrincipalId)"
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withTenant(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties.withTenant(Object tenant)"
  name: "withTenant(Object tenant)"
  nameWithType: "CosmosDbLinkedServiceTypeProperties.withTenant(Object tenant)"
  summary: "Set the tenant property: The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the tenant value to set."
    name: "tenant"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDbLinkedServiceTypeProperties withTenant(Object tenant)"
  returns:
    description: "the CosmosDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.CosmosDbLinkedServiceTypeProperties&text=CosmosDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
