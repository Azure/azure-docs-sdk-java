### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper
  id: ReactorMapper
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils
  children:
  - com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper.<T>map(reactor.core.publisher.Mono<?>,T)
  - com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper.apply(java.lang.Object)
  - com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper.mapToVoid(reactor.core.publisher.Mono<?>)
  langs:
  - java
  name: ReactorMapper<T>
  nameWithType: ReactorMapper<T>
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper<T>
  type: Class
  package: com.azure.resourcemanager.resources.fluentcore.utils
  summary: An internal utility class representing an RX function returning the provided type instance from a call with an arbitrary parameter.
  syntax:
    content: public final class ReactorMapper<T> implements Function<Object,T>
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  implements:
  - java.util.function.Function<java.lang.Object,T>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper.<T>map(reactor.core.publisher.Mono<?>,T)
  id: <T>map(reactor.core.publisher.Mono<?>,T)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper
  langs:
  - java
  name: <T>map(Mono<?> fromObservable, T toValue)
  nameWithType: ReactorMapper<T>.<T>map(Mono<?> fromObservable, T toValue)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper<T>.<T>map(Mono<?> fromObservable, T toValue)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper.map*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  summary: Shortcut for mapping the output of an arbitrary observable to one returning an instance of a specific type, using the IO scheduler.
  syntax:
    content: public static Mono<T> <T>map(Mono<?> fromObservable, T toValue)
    parameters:
    - id: fromObservable
      type: reactor.core.publisher.Mono<?>
      description: the source observable
    - id: toValue
      type: T
      description: the value to emit to the observer
    return:
      type: reactor.core.publisher.Mono<T>
      description: an observable emitting the specified value
- uid: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper.ReactorMapper()
  id: ReactorMapper()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper
  langs:
  - java
  name: ReactorMapper()
  nameWithType: ReactorMapper<T>.ReactorMapper()
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper<T>.ReactorMapper()
  overload: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper.ReactorMapper*
  type: Constructor
  package: com.azure.resourcemanager.resources.fluentcore.utils
  summary: Void emitting mapper.
  syntax:
    content: private ReactorMapper()
- uid: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper.ReactorMapper(T)
  id: ReactorMapper(T)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper
  langs:
  - java
  name: ReactorMapper(T value)
  nameWithType: ReactorMapper<T>.ReactorMapper(T value)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper<T>.ReactorMapper(T value)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper.ReactorMapper*
  type: Constructor
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: private ReactorMapper(T value)
    parameters:
    - id: value
      type: T
      description: the value to emit
- uid: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper.apply(java.lang.Object)
  id: apply(java.lang.Object)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper
  langs:
  - java
  name: apply(Object t)
  nameWithType: ReactorMapper<T>.apply(Object t)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper<T>.apply(Object t)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper.apply*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  syntax:
    content: public T apply(Object t)
    parameters:
    - id: t
      type: java.lang.Object
    return:
      type: T
- uid: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper.mapToVoid(reactor.core.publisher.Mono<?>)
  id: mapToVoid(reactor.core.publisher.Mono<?>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper
  langs:
  - java
  name: mapToVoid(Mono<?> fromObservable)
  nameWithType: ReactorMapper<T>.mapToVoid(Mono<?> fromObservable)
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper<T>.mapToVoid(Mono<?> fromObservable)
  overload: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper.mapToVoid*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.utils
  summary: Shortcut for mapping an arbitrary observable to void, using the IO scheduler.
  syntax:
    content: public static Mono<Void> mapToVoid(Mono<?> fromObservable)
    parameters:
    - id: fromObservable
      type: reactor.core.publisher.Mono<?>
      description: the source observable
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: a void-emitting observable
references:
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper.ReactorMapper*
  name: ReactorMapper
  nameWithType: ReactorMapper<T>.ReactorMapper
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper<T>.ReactorMapper
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: reactor.core.publisher.Mono<?>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Mono<T>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper.map*
  name: <T>map
  nameWithType: ReactorMapper<T>.<T>map
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper<T>.<T>map
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper.mapToVoid*
  name: mapToVoid
  nameWithType: ReactorMapper<T>.mapToVoid
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper<T>.mapToVoid
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper.apply*
  name: apply
  nameWithType: ReactorMapper<T>.apply
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.ReactorMapper<T>.apply
  package: com.azure.resourcemanager.resources.fluentcore.utils
- uid: java.util.function.Function<java.lang.Object,T>
  name: Function<Object,T>
  nameWithType: Function<Object,T>
  fullName: java.util.function.Function<java.lang.Object,T>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.lang.Object,T
  name: Object,T
  nameWithType: Object,T
  fullName: java.lang.Object,T
- uid: java.util.function.Function
  name: Function
  nameWithType: Function
  fullName: java.util.function.Function
