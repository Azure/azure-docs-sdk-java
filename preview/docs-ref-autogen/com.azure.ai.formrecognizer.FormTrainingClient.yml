### YamlMime:ManagedReference
items:
- uid: com.azure.ai.formrecognizer.FormTrainingClient
  id: FormTrainingClient
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer
  children:
  - com.azure.ai.formrecognizer.FormTrainingClient.FormTrainingClient(com.azure.ai.formrecognizer.FormTrainingAsyncClient)
  - com.azure.ai.formrecognizer.FormTrainingClient.beginTraining(java.lang.String,boolean)
  - com.azure.ai.formrecognizer.FormTrainingClient.beginTraining(java.lang.String,boolean,boolean,java.lang.String,java.time.Duration)
  - com.azure.ai.formrecognizer.FormTrainingClient.deleteModel(java.lang.String)
  - com.azure.ai.formrecognizer.FormTrainingClient.deleteModelWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.FormTrainingClient.getAccountProperties()
  - com.azure.ai.formrecognizer.FormTrainingClient.getAccountPropertiesWithResponse(com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.FormTrainingClient.getCustomModel(java.lang.String)
  - com.azure.ai.formrecognizer.FormTrainingClient.getCustomModelWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.FormTrainingClient.getModelInfos()
  - com.azure.ai.formrecognizer.FormTrainingClient.getModelInfos(com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.FormTrainingClient.getServiceVersion()
  langs:
  - java
  name: FormTrainingClient
  nameWithType: FormTrainingClient
  fullName: com.azure.ai.formrecognizer.FormTrainingClient
  type: Class
  package: com.azure.ai.formrecognizer
  summary: >-
    This class provides a synchronous client that contains model management the operations that apply to Azure Form Recognizer. Operations allowed by the client are, to creating, training of custom models, delete models, list models and get subscription account information.


    **Instantiating a synchronous Form Training Client**


    ```java

    FormTrainingClient formTrainingClient = new FormRecognizerClientBuilder().buildClient()
         .getFormTrainingClient();
    ```
  syntax:
    content: public class FormTrainingClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.ai.formrecognizer.FormTrainingClient.FormTrainingClient(com.azure.ai.formrecognizer.FormTrainingAsyncClient)
  id: FormTrainingClient(com.azure.ai.formrecognizer.FormTrainingAsyncClient)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingClient
  langs:
  - java
  name: FormTrainingClient(FormTrainingAsyncClient formTrainingAsyncClient)
  nameWithType: FormTrainingClient.FormTrainingClient(FormTrainingAsyncClient formTrainingAsyncClient)
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.FormTrainingClient(FormTrainingAsyncClient formTrainingAsyncClient)
  overload: com.azure.ai.formrecognizer.FormTrainingClient.FormTrainingClient*
  type: Constructor
  package: com.azure.ai.formrecognizer
  summary: Create a <xref uid="com.azure.ai.formrecognizer.FormTrainingClient" data-throw-if-not-resolved="false">FormTrainingClient</xref> that sends requests to the Form Recognizer service's endpoint. Each service call goes through the <xref uid="com.azure.ai.formrecognizer.FormRecognizerClientBuilder.pipeline*" data-throw-if-not-resolved="false">http pipeline</xref>.
  syntax:
    content: " FormTrainingClient(FormTrainingAsyncClient formTrainingAsyncClient)"
    parameters:
    - id: formTrainingAsyncClient
      type: com.azure.ai.formrecognizer.FormTrainingAsyncClient
      description: The <xref uid="com.azure.ai.formrecognizer.FormRecognizerAsyncClient" data-throw-if-not-resolved="false">FormRecognizerAsyncClient</xref> that the client routes its request through.
- uid: com.azure.ai.formrecognizer.FormTrainingClient.beginTraining(java.lang.String,boolean)
  id: beginTraining(java.lang.String,boolean)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingClient
  langs:
  - java
  name: beginTraining(String fileSourceUrl, boolean useLabelFile)
  nameWithType: FormTrainingClient.beginTraining(String fileSourceUrl, boolean useLabelFile)
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.beginTraining(String fileSourceUrl, boolean useLabelFile)
  overload: com.azure.ai.formrecognizer.FormTrainingClient.beginTraining*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: >-
    Create and train a custom model.


    Models are trained using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff'. Other type of content is ignored.


    The service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.


    **Code sample**


    ```java

    String trainingSetSource = "{training-set-SAS-URL}";
     boolean useLabelFile = true;
     CustomFormModel customFormModel =
         formTrainingClient.beginTraining(trainingSetSource, useLabelFile).getFinalResult();
     System.out.printf("Model Id: %s%n", customFormModel.getModelId());
     System.out.printf("Model Status: %s%n", customFormModel.getModelStatus());
     customFormModel.getSubModels().forEach(customFormSubModel ->
         customFormSubModel.getFieldMap().forEach((key, customFormModelField) ->
             System.out.printf("Form Type: %s Field Text: %s Field Accuracy: %s%n",
                 key, customFormModelField.getName(), customFormModelField.getAccuracy())));
    ```
  syntax:
    content: public SyncPoller<OperationResult,CustomFormModel> beginTraining(String fileSourceUrl, boolean useLabelFile)
    parameters:
    - id: fileSourceUrl
      type: java.lang.String
      description: >-
        source URL parameter that is either an externally accessible
         Azure storage blob container Uri (preferably a Shared Access Signature Uri).
    - id: useLabelFile
      type: boolean
      description: Boolean to specify the use of labeled files for training the model.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.ai.formrecognizer.models.OperationResult,com.azure.ai.formrecognizer.models.CustomFormModel>
      description: >-
        A <xref uid="com.azure.core.util.polling.SyncPoller" data-throw-if-not-resolved="false">SyncPoller</xref> that polls the training model operation until it has completed, has failed, or has
         been cancelled.
- uid: com.azure.ai.formrecognizer.FormTrainingClient.beginTraining(java.lang.String,boolean,boolean,java.lang.String,java.time.Duration)
  id: beginTraining(java.lang.String,boolean,boolean,java.lang.String,java.time.Duration)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingClient
  langs:
  - java
  name: beginTraining(String fileSourceUrl, boolean useLabelFile, boolean includeSubFolders, String filePrefix, Duration pollInterval)
  nameWithType: FormTrainingClient.beginTraining(String fileSourceUrl, boolean useLabelFile, boolean includeSubFolders, String filePrefix, Duration pollInterval)
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.beginTraining(String fileSourceUrl, boolean useLabelFile, boolean includeSubFolders, String filePrefix, Duration pollInterval)
  overload: com.azure.ai.formrecognizer.FormTrainingClient.beginTraining*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: "Create and train a custom model. Models are trained using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff'. Other type of content is ignored.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nString trainingSetSource = \"{training-set-SAS-URL}\";\n boolean isIncludeSubFolders = false; // {is-include-subfolders}\n String filePrefix = \"{file-prefix}\";\n boolean useLabelFile = true;\n \n CustomFormModel customFormModel = formTrainingClient.beginTraining(\n     trainingSetSource, useLabelFile, isIncludeSubFolders, filePrefix, Duration.ofSeconds(5)).getFinalResult();\n \n System.out.printf(\"Model Id: %s%n\", customFormModel.getModelId());\n System.out.printf(\"Model Status: %s%n\", customFormModel.getModelStatus());\n customFormModel.getSubModels().forEach(customFormSubModel ->\n     customFormSubModel.getFieldMap().forEach((key, customFormModelField) ->\n         System.out.printf(\"Form Type: %s Field Text: %s Field Accuracy: %s%n\",\n             key, customFormModelField.getName(), customFormModelField.getAccuracy())));\n```"
  syntax:
    content: public SyncPoller<OperationResult,CustomFormModel> beginTraining(String fileSourceUrl, boolean useLabelFile, boolean includeSubFolders, String filePrefix, Duration pollInterval)
    parameters:
    - id: fileSourceUrl
      type: java.lang.String
      description: >-
        source URL parameter that is either an externally accessible Azure storage
         blob container Uri (preferably a Shared Access Signature Uri).
    - id: useLabelFile
      type: boolean
      description: Boolean to specify the use of labeled files for training the model.
    - id: includeSubFolders
      type: boolean
      description: >-
        to indicate if sub folders within the set of prefix folders will
         also need to be included when searching for content to be preprocessed.
    - id: filePrefix
      type: java.lang.String
      description: >-
        A case-sensitive prefix string to filter documents in the source path
         for training. For example, when using a Azure storage blob Uri, use the prefix to restrict
         sub folders for training.
    - id: pollInterval
      type: java.time.Duration
      description: >-
        Duration between each poll for the operation status. If none is specified, a default of
         5 seconds is used.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.ai.formrecognizer.models.OperationResult,com.azure.ai.formrecognizer.models.CustomFormModel>
      description: >-
        A <xref uid="com.azure.core.util.polling.SyncPoller" data-throw-if-not-resolved="false">SyncPoller</xref> that polls the extract receipt operation until it
         has completed, has failed, or has been cancelled.
- uid: com.azure.ai.formrecognizer.FormTrainingClient.deleteModel(java.lang.String)
  id: deleteModel(java.lang.String)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingClient
  langs:
  - java
  name: deleteModel(String modelId)
  nameWithType: FormTrainingClient.deleteModel(String modelId)
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.deleteModel(String modelId)
  overload: com.azure.ai.formrecognizer.FormTrainingClient.deleteModel*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: >-
    Deletes the specified custom model.


    **Code sample**


    ```java

    String modelId = "{model_id}";
     formTrainingClient.deleteModel(modelId);
     System.out.printf("Model Id: %s is deleted.%n", modelId);
    ```
  syntax:
    content: public void deleteModel(String modelId)
    parameters:
    - id: modelId
      type: java.lang.String
      description: The UUID string format model identifier.
- uid: com.azure.ai.formrecognizer.FormTrainingClient.deleteModelWithResponse(java.lang.String,com.azure.core.util.Context)
  id: deleteModelWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingClient
  langs:
  - java
  name: deleteModelWithResponse(String modelId, Context context)
  nameWithType: FormTrainingClient.deleteModelWithResponse(String modelId, Context context)
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.deleteModelWithResponse(String modelId, Context context)
  overload: com.azure.ai.formrecognizer.FormTrainingClient.deleteModelWithResponse*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: >-
    Deletes the specified custom model.


    **Code sample**


    ```java

    String modelId = "{model_id}";
     Response<Void> response = formTrainingClient.deleteModelWithResponse(modelId, Context.NONE);
     System.out.printf("Response Status Code: %d.", response.getStatusCode());
     System.out.printf("Model Id: %s is deleted.%n", modelId);
    ```
  syntax:
    content: public Response<Void> deleteModelWithResponse(String modelId, Context context)
    parameters:
    - id: modelId
      type: java.lang.String
      description: The UUID string format model identifier.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: A <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> containing containing status code and HTTP headers
- uid: com.azure.ai.formrecognizer.FormTrainingClient.getAccountProperties()
  id: getAccountProperties()
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingClient
  langs:
  - java
  name: getAccountProperties()
  nameWithType: FormTrainingClient.getAccountProperties()
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.getAccountProperties()
  overload: com.azure.ai.formrecognizer.FormTrainingClient.getAccountProperties*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: >-
    Get account information for all custom models.


    **Code sample**


    ```java

    AccountProperties accountProperties = formTrainingClient.getAccountProperties();
     System.out.printf("Max number of models that can be trained for this account: %s%n",
         accountProperties.getLimit());
     System.out.printf("Current count of trained custom models: %d%n", accountProperties.getCount());
    ```
  syntax:
    content: public AccountProperties getAccountProperties()
    return:
      type: com.azure.ai.formrecognizer.models.AccountProperties
      description: The account information.
- uid: com.azure.ai.formrecognizer.FormTrainingClient.getAccountPropertiesWithResponse(com.azure.core.util.Context)
  id: getAccountPropertiesWithResponse(com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingClient
  langs:
  - java
  name: getAccountPropertiesWithResponse(Context context)
  nameWithType: FormTrainingClient.getAccountPropertiesWithResponse(Context context)
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.getAccountPropertiesWithResponse(Context context)
  overload: com.azure.ai.formrecognizer.FormTrainingClient.getAccountPropertiesWithResponse*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: >-
    Get account information for all custom models.


    **Code sample**


    ```java

    Response<AccountProperties> response = formTrainingClient.getAccountPropertiesWithResponse(Context.NONE);
     System.out.printf("Response Status Code: %d.", response.getStatusCode());
     AccountProperties accountProperties = response.getValue();
     System.out.printf("Max number of models that can be trained for this account: %s%n",
         accountProperties.getLimit());
     System.out.printf("Current count of trained custom models: %d%n", accountProperties.getCount());
    ```
  syntax:
    content: public Response<AccountProperties> getAccountPropertiesWithResponse(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.models.AccountProperties>
      description: The account information.
- uid: com.azure.ai.formrecognizer.FormTrainingClient.getCustomModel(java.lang.String)
  id: getCustomModel(java.lang.String)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingClient
  langs:
  - java
  name: getCustomModel(String modelId)
  nameWithType: FormTrainingClient.getCustomModel(String modelId)
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.getCustomModel(String modelId)
  overload: com.azure.ai.formrecognizer.FormTrainingClient.getCustomModel*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: >-
    Get detailed information for a specified custom model id.


    **Code sample**


    ```java

    String modelId = "{model_id}";
     CustomFormModel customFormModel = formTrainingClient.getCustomModel(modelId);
     System.out.printf("Model Id: %s%n", customFormModel.getModelId());
     System.out.printf("Model Status: %s%n", customFormModel.getModelStatus());
     customFormModel.getSubModels().forEach(customFormSubModel ->
         customFormSubModel.getFieldMap().forEach((key, customFormModelField) ->
             System.out.printf("Form Type: %s Field Text: %s Field Accuracy: %s%n",
                 key, customFormModelField.getName(), customFormModelField.getAccuracy())));
    ```
  syntax:
    content: public CustomFormModel getCustomModel(String modelId)
    parameters:
    - id: modelId
      type: java.lang.String
      description: The UUID string format model identifier.
    return:
      type: com.azure.ai.formrecognizer.models.CustomFormModel
      description: The detailed information for the specified model.
- uid: com.azure.ai.formrecognizer.FormTrainingClient.getCustomModelWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getCustomModelWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingClient
  langs:
  - java
  name: getCustomModelWithResponse(String modelId, Context context)
  nameWithType: FormTrainingClient.getCustomModelWithResponse(String modelId, Context context)
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.getCustomModelWithResponse(String modelId, Context context)
  overload: com.azure.ai.formrecognizer.FormTrainingClient.getCustomModelWithResponse*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: >-
    Get detailed information for a specified custom model id.


    **Code sample**


    ```java

    String modelId = "{model_id}";
     Response<CustomFormModel> response = formTrainingClient.getCustomModelWithResponse(modelId, Context.NONE);
     System.out.printf("Response Status Code: %d.", response.getStatusCode());
     CustomFormModel customFormModel = response.getValue();
     System.out.printf("Model Id: %s%n", customFormModel.getModelId());
     System.out.printf("Model Status: %s%n", customFormModel.getModelStatus());
     customFormModel.getSubModels().forEach(customFormSubModel ->
         customFormSubModel.getFieldMap().forEach((key, customFormModelField) ->
             System.out.printf("Form Type: %s Field Text: %s Field Accuracy: %s%n",
                 key, customFormModelField.getName(), customFormModelField.getAccuracy())));
    ```
  syntax:
    content: public Response<CustomFormModel> getCustomModelWithResponse(String modelId, Context context)
    parameters:
    - id: modelId
      type: java.lang.String
      description: The UUID string format model identifier.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.models.CustomFormModel>
      description: The detailed information for the specified model.
- uid: com.azure.ai.formrecognizer.FormTrainingClient.getModelInfos()
  id: getModelInfos()
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingClient
  langs:
  - java
  name: getModelInfos()
  nameWithType: FormTrainingClient.getModelInfos()
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.getModelInfos()
  overload: com.azure.ai.formrecognizer.FormTrainingClient.getModelInfos*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: >-
    List information for all models.


    **Code sample**


    ```java

    formTrainingClient.getModelInfos().forEach(customModel ->
         System.out.printf("Model Id: %s, Model status: %s, Created on: %s, Last updated on: %s.%n",
             customModel.getModelId(),
             customModel.getStatus(),
             customModel.getCreatedOn(),
             customModel.getLastUpdatedOn())
     );
    ```
  syntax:
    content: public PagedIterable<CustomFormModelInfo> getModelInfos()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.ai.formrecognizer.models.CustomFormModelInfo>
      description: <xref uid="com.azure.core.http.rest.PagedIterable" data-throw-if-not-resolved="false">PagedIterable</xref> of <xref uid="com.azure.ai.formrecognizer.models.CustomFormModelInfo" data-throw-if-not-resolved="false">CustomFormModelInfo</xref> custom form model information.
- uid: com.azure.ai.formrecognizer.FormTrainingClient.getModelInfos(com.azure.core.util.Context)
  id: getModelInfos(com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingClient
  langs:
  - java
  name: getModelInfos(Context context)
  nameWithType: FormTrainingClient.getModelInfos(Context context)
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.getModelInfos(Context context)
  overload: com.azure.ai.formrecognizer.FormTrainingClient.getModelInfos*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: >-
    List information for all models with taking <xref uid="" data-throw-if-not-resolved="false">Context</xref>.


    **Code sample**


    ```java

    formTrainingClient.getModelInfos(Context.NONE).forEach(customModel ->
         System.out.printf("Model Id: %s, Model status: %s, Created on: %s, Last updated on: %s.%n",
             customModel.getModelId(),
             customModel.getStatus(),
             customModel.getCreatedOn(),
             customModel.getLastUpdatedOn())
     );
    ```
  syntax:
    content: public PagedIterable<CustomFormModelInfo> getModelInfos(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.ai.formrecognizer.models.CustomFormModelInfo>
      description: <xref uid="com.azure.core.http.rest.PagedIterable" data-throw-if-not-resolved="false">PagedIterable</xref> of <xref uid="com.azure.ai.formrecognizer.models.CustomFormModelInfo" data-throw-if-not-resolved="false">CustomFormModelInfo</xref> custom form model information.
- uid: com.azure.ai.formrecognizer.FormTrainingClient.getServiceVersion()
  id: getServiceVersion()
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingClient
  langs:
  - java
  name: getServiceVersion()
  nameWithType: FormTrainingClient.getServiceVersion()
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.getServiceVersion()
  overload: com.azure.ai.formrecognizer.FormTrainingClient.getServiceVersion*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: Gets the service version the client is using.
  syntax:
    content: public FormRecognizerServiceVersion getServiceVersion()
    return:
      type: com.azure.ai.formrecognizer.FormRecognizerServiceVersion
      description: the service version the client is using.
references:
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  name: FormTrainingAsyncClient
  nameWithType: FormTrainingAsyncClient
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient
- uid: com.azure.ai.formrecognizer.FormTrainingClient.FormTrainingClient*
  name: FormTrainingClient
  nameWithType: FormTrainingClient.FormTrainingClient
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.FormTrainingClient
  package: com.azure.ai.formrecognizer
- uid: com.azure.ai.formrecognizer.FormRecognizerServiceVersion
  name: FormRecognizerServiceVersion
  nameWithType: FormRecognizerServiceVersion
  fullName: com.azure.ai.formrecognizer.FormRecognizerServiceVersion
- uid: com.azure.ai.formrecognizer.FormTrainingClient.getServiceVersion*
  name: getServiceVersion
  nameWithType: FormTrainingClient.getServiceVersion
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.getServiceVersion
  package: com.azure.ai.formrecognizer
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.core.util.polling.SyncPoller<com.azure.ai.formrecognizer.models.OperationResult,com.azure.ai.formrecognizer.models.CustomFormModel>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.models.OperationResult
    name: OperationResult
    fullName: com.azure.ai.formrecognizer.models.OperationResult
  - name: ','
    fullName: ','
  - uid: com.azure.ai.formrecognizer.models.CustomFormModel
    name: CustomFormModel
    fullName: com.azure.ai.formrecognizer.models.CustomFormModel
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.FormTrainingClient.beginTraining*
  name: beginTraining
  nameWithType: FormTrainingClient.beginTraining
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.beginTraining
  package: com.azure.ai.formrecognizer
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.ai.formrecognizer.models.CustomFormModel
  name: CustomFormModel
  nameWithType: CustomFormModel
  fullName: com.azure.ai.formrecognizer.models.CustomFormModel
- uid: com.azure.ai.formrecognizer.FormTrainingClient.getCustomModel*
  name: getCustomModel
  nameWithType: FormTrainingClient.getCustomModel
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.getCustomModel
  package: com.azure.ai.formrecognizer
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.models.CustomFormModel>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.models.CustomFormModel
    name: CustomFormModel
    fullName: com.azure.ai.formrecognizer.models.CustomFormModel
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.FormTrainingClient.getCustomModelWithResponse*
  name: getCustomModelWithResponse
  nameWithType: FormTrainingClient.getCustomModelWithResponse
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.getCustomModelWithResponse
  package: com.azure.ai.formrecognizer
- uid: com.azure.ai.formrecognizer.models.AccountProperties
  name: AccountProperties
  nameWithType: AccountProperties
  fullName: com.azure.ai.formrecognizer.models.AccountProperties
- uid: com.azure.ai.formrecognizer.FormTrainingClient.getAccountProperties*
  name: getAccountProperties
  nameWithType: FormTrainingClient.getAccountProperties
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.getAccountProperties
  package: com.azure.ai.formrecognizer
- uid: com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.models.AccountProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.models.AccountProperties
    name: AccountProperties
    fullName: com.azure.ai.formrecognizer.models.AccountProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.FormTrainingClient.getAccountPropertiesWithResponse*
  name: getAccountPropertiesWithResponse
  nameWithType: FormTrainingClient.getAccountPropertiesWithResponse
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.getAccountPropertiesWithResponse
  package: com.azure.ai.formrecognizer
- uid: com.azure.ai.formrecognizer.FormTrainingClient.deleteModel*
  name: deleteModel
  nameWithType: FormTrainingClient.deleteModel
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.deleteModel
  package: com.azure.ai.formrecognizer
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.FormTrainingClient.deleteModelWithResponse*
  name: deleteModelWithResponse
  nameWithType: FormTrainingClient.deleteModelWithResponse
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.deleteModelWithResponse
  package: com.azure.ai.formrecognizer
- uid: com.azure.core.http.rest.PagedIterable<com.azure.ai.formrecognizer.models.CustomFormModelInfo>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.models.CustomFormModelInfo
    name: CustomFormModelInfo
    fullName: com.azure.ai.formrecognizer.models.CustomFormModelInfo
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.FormTrainingClient.getModelInfos*
  name: getModelInfos
  nameWithType: FormTrainingClient.getModelInfos
  fullName: com.azure.ai.formrecognizer.FormTrainingClient.getModelInfos
  package: com.azure.ai.formrecognizer
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: com.azure.ai.formrecognizer.models.OperationResult,com.azure.ai.formrecognizer.models.CustomFormModel
  name: OperationResult,CustomFormModel
  nameWithType: OperationResult,CustomFormModel
  fullName: com.azure.ai.formrecognizer.models.OperationResult,com.azure.ai.formrecognizer.models.CustomFormModel
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.ai.formrecognizer.models.CustomFormModelInfo
  name: CustomFormModelInfo
  nameWithType: CustomFormModelInfo
  fullName: com.azure.ai.formrecognizer.models.CustomFormModelInfo
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
