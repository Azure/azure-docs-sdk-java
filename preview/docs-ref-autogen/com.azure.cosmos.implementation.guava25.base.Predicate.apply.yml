### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Predicate.apply*"
fullName: "com.azure.cosmos.implementation.guava25.base.Predicate<T>.apply"
name: "apply"
nameWithType: "Predicate<T>.apply"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Predicate.apply(T)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Predicate<T>.apply(T input)"
  name: "apply(T input)"
  nameWithType: "Predicate<T>.apply(T input)"
  summary: "Returns the result of applying this predicate to `input` (Java 8 users, see notes in the class documentation above). This method is *generally expected*, but not absolutely required, to have the following properties:\n\n *  Its execution does not cause any observable side effects.\n *  The computation is *consistent with equals*; that is, <xref uid=\"com.azure.cosmos.implementation.guava25.base.Objects.equal*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Objects.equal\"></xref>`(a, b)` implies that `predicate.apply(a) == predicate.apply(b))`."
  parameters:
  - name: "input"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract boolean apply(T input)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
