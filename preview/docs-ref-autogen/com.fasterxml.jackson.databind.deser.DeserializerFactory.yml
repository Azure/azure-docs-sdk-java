### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory
  id: DeserializerFactory
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser
  children:
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.DeserializerFactory()
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.NO_DESERIALIZERS
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.createReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.hasExplicitDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier)
  - com.fasterxml.jackson.databind.deser.DeserializerFactory.withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators)
  langs:
  - java
  name: DeserializerFactory
  nameWithType: DeserializerFactory
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory
  type: Class
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Abstract class that defines API used by <xref uid="com.fasterxml.jackson.databind.DeserializationContext" data-throw-if-not-resolved="false">DeserializationContext</xref> to construct actual <xref uid="com.fasterxml.jackson.databind.JsonDeserializer" data-throw-if-not-resolved="false">JsonDeserializer</xref> instances (which are then cached by context and/or dedicated cache).


    Since there are multiple broad categories of deserializers, there are multiple factory methods:

     *  For JSON "Array" type, we need 2 methods: one to deal with expected Java arrays (<xref uid="com.fasterxml.jackson.databind.deser.DeserializerFactory.createArrayDeserializer*" data-throw-if-not-resolved="false">#createArrayDeserializer</xref>) and the other for other Java containers like <xref uid="java.util.List" data-throw-if-not-resolved="false">java.util.List</xref>s and <xref uid="java.util.Set" data-throw-if-not-resolved="false">java.util.Set</xref>s (<xref uid="com.fasterxml.jackson.databind.deser.DeserializerFactory.createCollectionDeserializer*" data-throw-if-not-resolved="false">#createCollectionDeserializer</xref>). Actually there is also a third method for "Collection-like" types; things like Scala collections that act like JDK collections but do not implement same interfaces.
     *  For JSON "Object" type, we need 2 methods: one to deal with expected Java <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>s (<xref uid="com.fasterxml.jackson.databind.deser.DeserializerFactory.createMapDeserializer*" data-throw-if-not-resolved="false">#createMapDeserializer</xref>), and another for POJOs (<xref uid="com.fasterxml.jackson.databind.deser.DeserializerFactory.createBeanDeserializer*" data-throw-if-not-resolved="false">#createBeanDeserializer</xref>. As an additional twist there is also a callback for "Map-like" types, mostly to make it possible to support Scala Maps (which are NOT JDK Map compatible).
     *  For Tree Model (<xref uid="com.fasterxml.jackson.databind.JsonNode" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.JsonNode</xref>) properties there is <xref uid="com.fasterxml.jackson.databind.deser.DeserializerFactory.createTreeDeserializer*" data-throw-if-not-resolved="false">#createTreeDeserializer</xref>
     *  For enumerated types (<xref uid="java.lang.Enum" data-throw-if-not-resolved="false">java.lang.Enum</xref>) there is <xref uid="com.fasterxml.jackson.databind.deser.DeserializerFactory.createEnumDeserializer*" data-throw-if-not-resolved="false">#createEnumDeserializer</xref>
     *  For all other types, <xref uid="com.fasterxml.jackson.databind.deser.DeserializerFactory.createBeanDeserializer*" data-throw-if-not-resolved="false">#createBeanDeserializer</xref> is used.
  syntax:
    content: public abstract class DeserializerFactory
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.DeserializerFactory()
  id: DeserializerFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: DeserializerFactory()
  nameWithType: DeserializerFactory.DeserializerFactory()
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.DeserializerFactory()
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.DeserializerFactory*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public DeserializerFactory()
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.NO_DESERIALIZERS
  id: NO_DESERIALIZERS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: NO_DESERIALIZERS
  nameWithType: DeserializerFactory.NO_DESERIALIZERS
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.NO_DESERIALIZERS
  type: Field
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: protected static final Deserializers[] NO_DESERIALIZERS
    return:
      type: com.fasterxml.jackson.databind.deser.Deserializers[]
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription)
  id: createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: createArrayDeserializer(DeserializationContext ctxt, ArrayType type, BeanDescription beanDesc)
  nameWithType: DeserializerFactory.createArrayDeserializer(DeserializationContext ctxt, ArrayType type, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createArrayDeserializer(DeserializationContext ctxt, ArrayType type, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.createArrayDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to create (or, for completely immutable deserializers, reuse) a deserializer that can convert JSON content into values of specified Java type.
  syntax:
    content: public abstract JsonDeserializer<?> createArrayDeserializer(DeserializationContext ctxt, ArrayType type, BeanDescription beanDesc)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: type
      type: com.fasterxml.jackson.databind.type.ArrayType
      description: Type to be deserialized
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  id: createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: createBeanDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc)
  nameWithType: DeserializerFactory.createBeanDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createBeanDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.createBeanDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to create (or, for completely immutable deserializers, reuse) a deserializer that can convert JSON content into values of specified Java "bean" (POJO) type. At this point it is known that the type is not otherwise recognized as one of structured types (array, Collection, Map) or a well-known JDK type (enum, primitives/wrappers, String); this method only gets called if other options are exhausted. This also means that this method can be overridden to add support for custom types.
  syntax:
    content: public abstract JsonDeserializer<Object> createBeanDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
      description: Type to be deserialized
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class<?>)
  id: createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: createBuilderBasedDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc, Class<?> builderClass)
  nameWithType: DeserializerFactory.createBuilderBasedDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc, Class<?> builderClass)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createBuilderBasedDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc, Class<?> builderClass)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.createBuilderBasedDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to create a deserializer that will use specified Builder class for building value instances.
  syntax:
    content: public abstract JsonDeserializer<Object> createBuilderBasedDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc, Class<?> builderClass)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: builderClass
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription)
  id: createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: createCollectionDeserializer(DeserializationContext ctxt, CollectionType type, BeanDescription beanDesc)
  nameWithType: DeserializerFactory.createCollectionDeserializer(DeserializationContext ctxt, CollectionType type, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createCollectionDeserializer(DeserializationContext ctxt, CollectionType type, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.createCollectionDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public abstract JsonDeserializer<?> createCollectionDeserializer(DeserializationContext ctxt, CollectionType type, BeanDescription beanDesc)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: type
      type: com.fasterxml.jackson.databind.type.CollectionType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription)
  id: createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: createCollectionLikeDeserializer(DeserializationContext ctxt, CollectionLikeType type, BeanDescription beanDesc)
  nameWithType: DeserializerFactory.createCollectionLikeDeserializer(DeserializationContext ctxt, CollectionLikeType type, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createCollectionLikeDeserializer(DeserializationContext ctxt, CollectionLikeType type, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.createCollectionLikeDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public abstract JsonDeserializer<?> createCollectionLikeDeserializer(DeserializationContext ctxt, CollectionLikeType type, BeanDescription beanDesc)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: type
      type: com.fasterxml.jackson.databind.type.CollectionLikeType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  id: createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: createEnumDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc)
  nameWithType: DeserializerFactory.createEnumDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createEnumDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.createEnumDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public abstract JsonDeserializer<?> createEnumDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  id: createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: createKeyDeserializer(DeserializationContext ctxt, JavaType type)
  nameWithType: DeserializerFactory.createKeyDeserializer(DeserializationContext ctxt, JavaType type)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createKeyDeserializer(DeserializationContext ctxt, JavaType type)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.createKeyDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to find if factory knows how to create a key deserializer for specified type; currently this means checking if a module has registered possible deserializers.
  syntax:
    content: public abstract KeyDeserializer createKeyDeserializer(DeserializationContext ctxt, JavaType type)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.KeyDeserializer
      description: >-
        Key deserializer to use for specified type, if one found; null if not
           (and default key deserializer should be used)
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription)
  id: createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: createMapDeserializer(DeserializationContext ctxt, MapType type, BeanDescription beanDesc)
  nameWithType: DeserializerFactory.createMapDeserializer(DeserializationContext ctxt, MapType type, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createMapDeserializer(DeserializationContext ctxt, MapType type, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.createMapDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public abstract JsonDeserializer<?> createMapDeserializer(DeserializationContext ctxt, MapType type, BeanDescription beanDesc)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: type
      type: com.fasterxml.jackson.databind.type.MapType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription)
  id: createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: createMapLikeDeserializer(DeserializationContext ctxt, MapLikeType type, BeanDescription beanDesc)
  nameWithType: DeserializerFactory.createMapLikeDeserializer(DeserializationContext ctxt, MapLikeType type, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createMapLikeDeserializer(DeserializationContext ctxt, MapLikeType type, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.createMapLikeDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public abstract JsonDeserializer<?> createMapLikeDeserializer(DeserializationContext ctxt, MapLikeType type, BeanDescription beanDesc)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: type
      type: com.fasterxml.jackson.databind.type.MapLikeType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription)
  id: createReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: createReferenceDeserializer(DeserializationContext ctxt, ReferenceType type, BeanDescription beanDesc)
  nameWithType: DeserializerFactory.createReferenceDeserializer(DeserializationContext ctxt, ReferenceType type, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createReferenceDeserializer(DeserializationContext ctxt, ReferenceType type, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.createReferenceDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public abstract JsonDeserializer<?> createReferenceDeserializer(DeserializationContext ctxt, ReferenceType type, BeanDescription beanDesc)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: type
      type: com.fasterxml.jackson.databind.type.ReferenceType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  id: createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: createTreeDeserializer(DeserializationConfig config, JavaType type, BeanDescription beanDesc)
  nameWithType: DeserializerFactory.createTreeDeserializer(DeserializationConfig config, JavaType type, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createTreeDeserializer(DeserializationConfig config, JavaType type, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.createTreeDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to create and return a deserializer that can construct JsonNode(s) from JSON content.
  syntax:
    content: public abstract JsonDeserializer<?> createTreeDeserializer(DeserializationConfig config, JavaType type, BeanDescription beanDesc)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
  id: findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: findTypeDeserializer(DeserializationConfig config, JavaType baseType)
  nameWithType: DeserializerFactory.findTypeDeserializer(DeserializationConfig config, JavaType baseType)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.findTypeDeserializer(DeserializationConfig config, JavaType baseType)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.findTypeDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method called to find and create a type information deserializer for given base type, if one is needed. If not needed (no polymorphic handling configured for type), should return null.


    Note that this method is usually only directly called for values of container (Collection, array, Map) types and root values, but not for bean property values.
  syntax:
    content: public abstract TypeDeserializer findTypeDeserializer(DeserializationConfig config, JavaType baseType)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
      description: >-
        Declared base type of the value to deserializer (actual
            deserializer type will be this type or its subtype)
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
      description: Type deserializer to use for given base type, if one is needed; null if not.
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)
  id: findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: findValueInstantiator(DeserializationContext ctxt, BeanDescription beanDesc)
  nameWithType: DeserializerFactory.findValueInstantiator(DeserializationContext ctxt, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.findValueInstantiator(DeserializationContext ctxt, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.findValueInstantiator*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method that is to find all creators (constructors, factory methods) for the bean type to deserialize.
  syntax:
    content: public abstract ValueInstantiator findValueInstantiator(DeserializationContext ctxt, BeanDescription beanDesc)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.deser.ValueInstantiator
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.hasExplicitDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class<?>)
  id: hasExplicitDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: hasExplicitDeserializerFor(DeserializationConfig config, Class<?> valueType)
  nameWithType: DeserializerFactory.hasExplicitDeserializerFor(DeserializationConfig config, Class<?> valueType)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.hasExplicitDeserializerFor(DeserializationConfig config, Class<?> valueType)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.hasExplicitDeserializerFor*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method that can be used to check if databind module has explicitly declared deserializer for given (likely JDK) type, explicit meaning that there is specific deserializer for given type as opposed to auto-generated "Bean" deserializer. Factory itself will check for known JDK-provided types, but registered <xref uid="com.fasterxml.jackson.databind.Module" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.Module</xref>s are also called to see if they might provide explicit deserializer.


    Main use for this method is with Safe Default Typing (and generally Safe Polymorphic Deserialization), during which it is good to be able to check that given raw type is explicitly supported and as such "known type" (as opposed to potentially dangerous "gadget type" which could be exploited).


    This matches `Deserializers.Base.hasDeserializerFor(Class)` method, which is the mechanism used to determine if a `Module` might provide an explicit deserializer instead of core databind.
  syntax:
    content: public abstract boolean hasExplicitDeserializerFor(DeserializationConfig config, Class<?> valueType)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: valueType
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
  id: mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: mapAbstractType(DeserializationConfig config, JavaType type)
  nameWithType: DeserializerFactory.mapAbstractType(DeserializationConfig config, JavaType type)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.mapAbstractType(DeserializationConfig config, JavaType type)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.mapAbstractType*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method that can be called to try to resolve an abstract type (interface, abstract class) into a concrete type, or at least something "more concrete" (abstract class instead of interface). Will either return passed type, or a more specific type.
  syntax:
    content: public abstract JavaType mapAbstractType(DeserializationConfig config, JavaType type)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JavaType
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver)
  id: withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: withAbstractTypeResolver(AbstractTypeResolver resolver)
  nameWithType: DeserializerFactory.withAbstractTypeResolver(AbstractTypeResolver resolver)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.withAbstractTypeResolver(AbstractTypeResolver resolver)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.withAbstractTypeResolver*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Convenience method for creating a new factory instance with additional <xref uid="com.fasterxml.jackson.databind.AbstractTypeResolver" data-throw-if-not-resolved="false">AbstractTypeResolver</xref>.
  syntax:
    content: public abstract DeserializerFactory withAbstractTypeResolver(AbstractTypeResolver resolver)
    parameters:
    - id: resolver
      type: com.fasterxml.jackson.databind.AbstractTypeResolver
    return:
      type: com.fasterxml.jackson.databind.deser.DeserializerFactory
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers)
  id: withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: withAdditionalDeserializers(Deserializers additional)
  nameWithType: DeserializerFactory.withAdditionalDeserializers(Deserializers additional)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.withAdditionalDeserializers(Deserializers additional)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.withAdditionalDeserializers*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Convenience method for creating a new factory instance with additional deserializer provider.
  syntax:
    content: public abstract DeserializerFactory withAdditionalDeserializers(Deserializers additional)
    parameters:
    - id: additional
      type: com.fasterxml.jackson.databind.deser.Deserializers
    return:
      type: com.fasterxml.jackson.databind.deser.DeserializerFactory
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers)
  id: withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: withAdditionalKeyDeserializers(KeyDeserializers additional)
  nameWithType: DeserializerFactory.withAdditionalKeyDeserializers(KeyDeserializers additional)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.withAdditionalKeyDeserializers(KeyDeserializers additional)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.withAdditionalKeyDeserializers*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Convenience method for creating a new factory instance with additional <xref uid="com.fasterxml.jackson.databind.deser.KeyDeserializers" data-throw-if-not-resolved="false">KeyDeserializers</xref>.
  syntax:
    content: public abstract DeserializerFactory withAdditionalKeyDeserializers(KeyDeserializers additional)
    parameters:
    - id: additional
      type: com.fasterxml.jackson.databind.deser.KeyDeserializers
    return:
      type: com.fasterxml.jackson.databind.deser.DeserializerFactory
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier)
  id: withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: withDeserializerModifier(BeanDeserializerModifier modifier)
  nameWithType: DeserializerFactory.withDeserializerModifier(BeanDeserializerModifier modifier)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.withDeserializerModifier(BeanDeserializerModifier modifier)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.withDeserializerModifier*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Convenience method for creating a new factory instance with additional <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerModifier" data-throw-if-not-resolved="false">BeanDeserializerModifier</xref>.
  syntax:
    content: public abstract DeserializerFactory withDeserializerModifier(BeanDeserializerModifier modifier)
    parameters:
    - id: modifier
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
    return:
      type: com.fasterxml.jackson.databind.deser.DeserializerFactory
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators)
  id: withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DeserializerFactory
  langs:
  - java
  name: withValueInstantiators(ValueInstantiators instantiators)
  nameWithType: DeserializerFactory.withValueInstantiators(ValueInstantiators instantiators)
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.withValueInstantiators(ValueInstantiators instantiators)
  overload: com.fasterxml.jackson.databind.deser.DeserializerFactory.withValueInstantiators*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Convenience method for creating a new factory instance with additional <xref uid="com.fasterxml.jackson.databind.deser.ValueInstantiators" data-throw-if-not-resolved="false">ValueInstantiators</xref>.
  syntax:
    content: public abstract DeserializerFactory withValueInstantiators(ValueInstantiators instantiators)
    parameters:
    - id: instantiators
      type: com.fasterxml.jackson.databind.deser.ValueInstantiators
    return:
      type: com.fasterxml.jackson.databind.deser.DeserializerFactory
references:
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.DeserializerFactory*
  name: DeserializerFactory
  nameWithType: DeserializerFactory.DeserializerFactory
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.DeserializerFactory
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.Deserializers
  name: Deserializers
  nameWithType: Deserializers
  fullName: com.fasterxml.jackson.databind.deser.Deserializers
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.withAdditionalDeserializers*
  name: withAdditionalDeserializers
  nameWithType: DeserializerFactory.withAdditionalDeserializers
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.withAdditionalDeserializers
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.KeyDeserializers
  name: KeyDeserializers
  nameWithType: KeyDeserializers
  fullName: com.fasterxml.jackson.databind.deser.KeyDeserializers
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.withAdditionalKeyDeserializers*
  name: withAdditionalKeyDeserializers
  nameWithType: DeserializerFactory.withAdditionalKeyDeserializers
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.withAdditionalKeyDeserializers
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
  name: BeanDeserializerModifier
  nameWithType: BeanDeserializerModifier
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.withDeserializerModifier*
  name: withDeserializerModifier
  nameWithType: DeserializerFactory.withDeserializerModifier
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.withDeserializerModifier
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.AbstractTypeResolver
  name: AbstractTypeResolver
  nameWithType: AbstractTypeResolver
  fullName: com.fasterxml.jackson.databind.AbstractTypeResolver
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.withAbstractTypeResolver*
  name: withAbstractTypeResolver
  nameWithType: DeserializerFactory.withAbstractTypeResolver
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.withAbstractTypeResolver
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.ValueInstantiators
  name: ValueInstantiators
  nameWithType: ValueInstantiators
  fullName: com.fasterxml.jackson.databind.deser.ValueInstantiators
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.withValueInstantiators*
  name: withValueInstantiators
  nameWithType: DeserializerFactory.withValueInstantiators
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.withValueInstantiators
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DeserializationConfig
  name: DeserializationConfig
  nameWithType: DeserializationConfig
  fullName: com.fasterxml.jackson.databind.DeserializationConfig
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.mapAbstractType*
  name: mapAbstractType
  nameWithType: DeserializerFactory.mapAbstractType
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.mapAbstractType
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: com.fasterxml.jackson.databind.BeanDescription
  name: BeanDescription
  nameWithType: BeanDescription
  fullName: com.fasterxml.jackson.databind.BeanDescription
- uid: com.fasterxml.jackson.databind.deser.ValueInstantiator
  name: ValueInstantiator
  nameWithType: ValueInstantiator
  fullName: com.fasterxml.jackson.databind.deser.ValueInstantiator
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.findValueInstantiator*
  name: findValueInstantiator
  nameWithType: DeserializerFactory.findValueInstantiator
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.findValueInstantiator
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createBeanDeserializer*
  name: createBeanDeserializer
  nameWithType: DeserializerFactory.createBeanDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createBeanDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createBuilderBasedDeserializer*
  name: createBuilderBasedDeserializer
  nameWithType: DeserializerFactory.createBuilderBasedDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createBuilderBasedDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.JsonDeserializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createEnumDeserializer*
  name: createEnumDeserializer
  nameWithType: DeserializerFactory.createEnumDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createEnumDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.ReferenceType
  name: ReferenceType
  nameWithType: ReferenceType
  fullName: com.fasterxml.jackson.databind.type.ReferenceType
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createReferenceDeserializer*
  name: createReferenceDeserializer
  nameWithType: DeserializerFactory.createReferenceDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createReferenceDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createTreeDeserializer*
  name: createTreeDeserializer
  nameWithType: DeserializerFactory.createTreeDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createTreeDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.ArrayType
  name: ArrayType
  nameWithType: ArrayType
  fullName: com.fasterxml.jackson.databind.type.ArrayType
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createArrayDeserializer*
  name: createArrayDeserializer
  nameWithType: DeserializerFactory.createArrayDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createArrayDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.CollectionType
  name: CollectionType
  nameWithType: CollectionType
  fullName: com.fasterxml.jackson.databind.type.CollectionType
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createCollectionDeserializer*
  name: createCollectionDeserializer
  nameWithType: DeserializerFactory.createCollectionDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createCollectionDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.CollectionLikeType
  name: CollectionLikeType
  nameWithType: CollectionLikeType
  fullName: com.fasterxml.jackson.databind.type.CollectionLikeType
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createCollectionLikeDeserializer*
  name: createCollectionLikeDeserializer
  nameWithType: DeserializerFactory.createCollectionLikeDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createCollectionLikeDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.MapType
  name: MapType
  nameWithType: MapType
  fullName: com.fasterxml.jackson.databind.type.MapType
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createMapDeserializer*
  name: createMapDeserializer
  nameWithType: DeserializerFactory.createMapDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createMapDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.MapLikeType
  name: MapLikeType
  nameWithType: MapLikeType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createMapLikeDeserializer*
  name: createMapLikeDeserializer
  nameWithType: DeserializerFactory.createMapLikeDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createMapLikeDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.KeyDeserializer
  name: KeyDeserializer
  nameWithType: KeyDeserializer
  fullName: com.fasterxml.jackson.databind.KeyDeserializer
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.createKeyDeserializer*
  name: createKeyDeserializer
  nameWithType: DeserializerFactory.createKeyDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.createKeyDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
  name: TypeDeserializer
  nameWithType: TypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.findTypeDeserializer*
  name: findTypeDeserializer
  nameWithType: DeserializerFactory.findTypeDeserializer
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.findTypeDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.deser.DeserializerFactory.hasExplicitDeserializerFor*
  name: hasExplicitDeserializerFor
  nameWithType: DeserializerFactory.hasExplicitDeserializerFor
  fullName: com.fasterxml.jackson.databind.deser.DeserializerFactory.hasExplicitDeserializerFor
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.Deserializers[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.deser.Deserializers
    name: Deserializers
    fullName: com.fasterxml.jackson.databind.deser.Deserializers
  - name: '[]'
    fullName: '[]'
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Object
  name: Object
  nameWithType: Object
  fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
