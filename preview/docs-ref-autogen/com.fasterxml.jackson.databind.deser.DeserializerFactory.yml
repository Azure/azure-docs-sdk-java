### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.deser.DeserializerFactory"
fullName: "com.fasterxml.jackson.databind.deser.DeserializerFactory"
name: "DeserializerFactory"
nameWithType: "DeserializerFactory"
summary: "Abstract class that defines API used by <xref uid=\"com.fasterxml.jackson.databind.DeserializationContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeserializationContext\"></xref> to construct actual <xref uid=\"com.fasterxml.jackson.databind.JsonDeserializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonDeserializer\"></xref> instances (which are then cached by context and/or dedicated cache).\n\nSince there are multiple broad categories of deserializers, there are multiple factory methods:\n\n *  For JSON \"Array\" type, we need 2 methods: one to deal with expected Java arrays (<xref uid=\"com.fasterxml.jackson.databind.deser.DeserializerFactory.createArrayDeserializer*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createArrayDeserializer\"></xref>) and the other for other Java containers like <xref uid=\"java.util.List\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.List\"></xref>s and <xref uid=\"java.util.Set\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Set\"></xref>s (<xref uid=\"com.fasterxml.jackson.databind.deser.DeserializerFactory.createCollectionDeserializer*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createCollectionDeserializer\"></xref>). Actually there is also a third method for \"Collection-like\" types; things like Scala collections that act like JDK collections but do not implement same interfaces.\n *  For JSON \"Object\" type, we need 2 methods: one to deal with expected Java <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Map\"></xref>s (<xref uid=\"com.fasterxml.jackson.databind.deser.DeserializerFactory.createMapDeserializer*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createMapDeserializer\"></xref>), and another for POJOs (<xref uid=\"com.fasterxml.jackson.databind.deser.DeserializerFactory.createBeanDeserializer*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createBeanDeserializer\"></xref>. As an additional twist there is also a callback for \"Map-like\" types, mostly to make it possible to support Scala Maps (which are NOT JDK Map compatible).\n *  For Tree Model (<xref uid=\"com.fasterxml.jackson.databind.JsonNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.databind.JsonNode\"></xref>) properties there is <xref uid=\"com.fasterxml.jackson.databind.deser.DeserializerFactory.createTreeDeserializer*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createTreeDeserializer\"></xref>\n *  For enumerated types (<xref uid=\"java.lang.Enum\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.lang.Enum\"></xref>) there is <xref uid=\"com.fasterxml.jackson.databind.deser.DeserializerFactory.createEnumDeserializer*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createEnumDeserializer\"></xref>\n *  For all other types, <xref uid=\"com.fasterxml.jackson.databind.deser.DeserializerFactory.createBeanDeserializer*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createBeanDeserializer\"></xref> is used."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class DeserializerFactory"
constructors:
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.DeserializerFactory()"
fields:
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.NO_DESERIALIZERS"
methods:
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.createReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.hasExplicitDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier)"
- "com.fasterxml.jackson.databind.deser.DeserializerFactory.withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators)"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.databind.deser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
