### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder
  id: DefaultTypeResolverBuilder
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind
  children:
  - com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.DefaultTypeResolverBuilder(com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping)
  - com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.DefaultTypeResolverBuilder(com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  - com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder._appliesFor
  - com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder._subtypeValidator
  - com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
  - com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
  - com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.construct(com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  - com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  - com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.useForType(com.fasterxml.jackson.databind.JavaType)
  langs:
  - java
  name: ObjectMapper.DefaultTypeResolverBuilder
  nameWithType: ObjectMapper.DefaultTypeResolverBuilder
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder
  type: Class
  package: com.fasterxml.jackson.databind
  summary: >-
    Customized <xref uid="com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder" data-throw-if-not-resolved="false">TypeResolverBuilder</xref> that provides type resolver builders used with so-called "default typing" (see <xref uid="com.fasterxml.jackson.databind.ObjectMapper.activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)" data-throw-if-not-resolved="false">ObjectMapper#activateDefaultTyping(PolymorphicTypeValidator)</xref> for details).


    Type resolver construction is based on configuration: implementation takes care of only providing builders in cases where type information should be applied. This is important since build calls may be sent for any and all types, and type information should NOT be applied to all of them.
  syntax:
    content: public static class ObjectMapper.DefaultTypeResolverBuilder extends StdTypeResolverBuilder implements Serializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.allowPrimitiveTypes(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defaultImpl(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defineDefaultImpl(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getDefaultImpl()
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getTypeProperty()
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>,boolean,boolean)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo.As)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.init(com.fasterxml.jackson.annotation.JsonTypeInfo.Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.isTypeIdVisible()
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.noTypeInfoBuilder()
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.reportInvalidBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeIdVisibility(boolean)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeProperty(java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.verifyBaseTypeValidity(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.DefaultTypeResolverBuilder(com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping)
  id: DefaultTypeResolverBuilder(com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder
  langs:
  - java
  name: DefaultTypeResolverBuilder(ObjectMapper.DefaultTyping t)
  nameWithType: ObjectMapper.DefaultTypeResolverBuilder.DefaultTypeResolverBuilder(ObjectMapper.DefaultTyping t)
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.DefaultTypeResolverBuilder(ObjectMapper.DefaultTyping t)
  overload: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.DefaultTypeResolverBuilder*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: public DefaultTypeResolverBuilder(ObjectMapper.DefaultTyping t)
    parameters:
    - id: t
      type: com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.DefaultTypeResolverBuilder(com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  id: DefaultTypeResolverBuilder(com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder
  langs:
  - java
  name: DefaultTypeResolverBuilder(ObjectMapper.DefaultTyping t, PolymorphicTypeValidator ptv)
  nameWithType: ObjectMapper.DefaultTypeResolverBuilder.DefaultTypeResolverBuilder(ObjectMapper.DefaultTyping t, PolymorphicTypeValidator ptv)
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.DefaultTypeResolverBuilder(ObjectMapper.DefaultTyping t, PolymorphicTypeValidator ptv)
  overload: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.DefaultTypeResolverBuilder*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: public DefaultTypeResolverBuilder(ObjectMapper.DefaultTyping t, PolymorphicTypeValidator ptv)
    parameters:
    - id: t
      type: com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping
    - id: ptv
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder._appliesFor
  id: _appliesFor
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder
  langs:
  - java
  name: _appliesFor
  nameWithType: ObjectMapper.DefaultTypeResolverBuilder._appliesFor
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder._appliesFor
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Definition of what types is this default typer valid for.
  syntax:
    content: protected final ObjectMapper.DefaultTyping _appliesFor
    return:
      type: com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder._subtypeValidator
  id: _subtypeValidator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder
  langs:
  - java
  name: _subtypeValidator
  nameWithType: ObjectMapper.DefaultTypeResolverBuilder._subtypeValidator
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder._subtypeValidator
  type: Field
  package: com.fasterxml.jackson.databind
  summary: <xref uid="com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator" data-throw-if-not-resolved="false">PolymorphicTypeValidator</xref> top use for validating that the subtypes resolved are valid for use (usually to protect against possible security issues)
  syntax:
    content: protected final PolymorphicTypeValidator _subtypeValidator
    return:
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
  id: buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder
  langs:
  - java
  name: buildTypeDeserializer(DeserializationConfig config, JavaType baseType, Collection<NamedType> subtypes)
  nameWithType: ObjectMapper.DefaultTypeResolverBuilder.buildTypeDeserializer(DeserializationConfig config, JavaType baseType, Collection<NamedType> subtypes)
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.buildTypeDeserializer(DeserializationConfig config, JavaType baseType, Collection<NamedType> subtypes)
  overload: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.buildTypeDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for building type deserializer based on current configuration of this builder.
  syntax:
    content: public TypeDeserializer buildTypeDeserializer(DeserializationConfig config, JavaType baseType, Collection<NamedType> subtypes)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: subtypes
      type: java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
  id: buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder
  langs:
  - java
  name: buildTypeSerializer(SerializationConfig config, JavaType baseType, Collection<NamedType> subtypes)
  nameWithType: ObjectMapper.DefaultTypeResolverBuilder.buildTypeSerializer(SerializationConfig config, JavaType baseType, Collection<NamedType> subtypes)
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.buildTypeSerializer(SerializationConfig config, JavaType baseType, Collection<NamedType> subtypes)
  overload: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.buildTypeSerializer*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for building type serializer based on current configuration of this builder.
  syntax:
    content: public TypeSerializer buildTypeSerializer(SerializationConfig config, JavaType baseType, Collection<NamedType> subtypes)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: subtypes
      type: java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.construct(com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  id: construct(com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder
  langs:
  - java
  name: construct(ObjectMapper.DefaultTyping t, PolymorphicTypeValidator ptv)
  nameWithType: ObjectMapper.DefaultTypeResolverBuilder.construct(ObjectMapper.DefaultTyping t, PolymorphicTypeValidator ptv)
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.construct(ObjectMapper.DefaultTyping t, PolymorphicTypeValidator ptv)
  overload: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.construct*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public static ObjectMapper.DefaultTypeResolverBuilder construct(ObjectMapper.DefaultTyping t, PolymorphicTypeValidator ptv)
    parameters:
    - id: t
      type: com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping
    - id: ptv
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
    return:
      type: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  id: subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder
  langs:
  - java
  name: subTypeValidator(MapperConfig<?> config)
  nameWithType: ObjectMapper.DefaultTypeResolverBuilder.subTypeValidator(MapperConfig<?> config)
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.subTypeValidator(MapperConfig<?> config)
  overload: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.subTypeValidator*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Overridable helper method for determining actual validator to use when constructing type serializers and type deserializers.


    Default implementation simply uses one configured and accessible using <xref uid="com.fasterxml.jackson.databind.cfg.MapperConfig.getPolymorphicTypeValidator()" data-throw-if-not-resolved="false">MapperConfig#getPolymorphicTypeValidator()</xref>.
  syntax:
    content: public PolymorphicTypeValidator subTypeValidator(MapperConfig<?> config)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    return:
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.useForType(com.fasterxml.jackson.databind.JavaType)
  id: useForType(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder
  langs:
  - java
  name: useForType(JavaType t)
  nameWithType: ObjectMapper.DefaultTypeResolverBuilder.useForType(JavaType t)
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.useForType(JavaType t)
  overload: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.useForType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Method called to check if the default type handler should be used for given type. Note: "natural types" (String, Boolean, Integer, Double) will never use typing; that is both due to them being concrete and final, and since actual serializers and deserializers will also ignore any attempts to enforce typing.'
  syntax:
    content: public boolean useForType(JavaType t)
    parameters:
    - id: t
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: boolean
references:
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping
  name: ObjectMapper.DefaultTyping
  nameWithType: ObjectMapper.DefaultTyping
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.DefaultTypeResolverBuilder*
  name: DefaultTypeResolverBuilder
  nameWithType: ObjectMapper.DefaultTypeResolverBuilder.DefaultTypeResolverBuilder
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.DefaultTypeResolverBuilder
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
  name: PolymorphicTypeValidator
  nameWithType: PolymorphicTypeValidator
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.construct*
  name: construct
  nameWithType: ObjectMapper.DefaultTypeResolverBuilder.construct
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.construct
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.cfg.MapperConfig
    name: MapperConfig
    fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.subTypeValidator*
  name: subTypeValidator
  nameWithType: ObjectMapper.DefaultTypeResolverBuilder.subTypeValidator
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.subTypeValidator
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.DeserializationConfig
  name: DeserializationConfig
  nameWithType: DeserializationConfig
  fullName: com.fasterxml.jackson.databind.DeserializationConfig
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.jsontype.NamedType
    name: NamedType
    fullName: com.fasterxml.jackson.databind.jsontype.NamedType
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
  name: TypeDeserializer
  nameWithType: TypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.buildTypeDeserializer*
  name: buildTypeDeserializer
  nameWithType: ObjectMapper.DefaultTypeResolverBuilder.buildTypeDeserializer
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.buildTypeDeserializer
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.SerializationConfig
  name: SerializationConfig
  nameWithType: SerializationConfig
  fullName: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.buildTypeSerializer*
  name: buildTypeSerializer
  nameWithType: ObjectMapper.DefaultTypeResolverBuilder.buildTypeSerializer
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.buildTypeSerializer
  package: com.fasterxml.jackson.databind
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.useForType*
  name: useForType
  nameWithType: ObjectMapper.DefaultTypeResolverBuilder.useForType
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.useForType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
  name: StdTypeResolverBuilder
  nameWithType: StdTypeResolverBuilder
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.reportInvalidBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  name: StdTypeResolverBuilder.reportInvalidBaseType(MapperConfig<?>,JavaType,PolymorphicTypeValidator)
  nameWithType: StdTypeResolverBuilder.reportInvalidBaseType(MapperConfig<?>,JavaType,PolymorphicTypeValidator)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.reportInvalidBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo.As)
  name: StdTypeResolverBuilder.inclusion(JsonTypeInfo.As)
  nameWithType: StdTypeResolverBuilder.inclusion(JsonTypeInfo.As)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo.As)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeIdVisibility(boolean)
  name: StdTypeResolverBuilder.typeIdVisibility(boolean)
  nameWithType: StdTypeResolverBuilder.typeIdVisibility(boolean)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeIdVisibility(boolean)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
  name: StdTypeResolverBuilder.buildTypeSerializer(SerializationConfig,JavaType,Collection<NamedType>)
  nameWithType: StdTypeResolverBuilder.buildTypeSerializer(SerializationConfig,JavaType,Collection<NamedType>)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>,boolean,boolean)
  name: StdTypeResolverBuilder.idResolver(MapperConfig<?>,JavaType,PolymorphicTypeValidator,Collection<NamedType>,boolean,boolean)
  nameWithType: StdTypeResolverBuilder.idResolver(MapperConfig<?>,JavaType,PolymorphicTypeValidator,Collection<NamedType>,boolean,boolean)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>,boolean,boolean)
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.allowPrimitiveTypes(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  name: StdTypeResolverBuilder.allowPrimitiveTypes(MapperConfig<?>,JavaType)
  nameWithType: StdTypeResolverBuilder.allowPrimitiveTypes(MapperConfig<?>,JavaType)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.allowPrimitiveTypes(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.isTypeIdVisible()
  name: StdTypeResolverBuilder.isTypeIdVisible()
  nameWithType: StdTypeResolverBuilder.isTypeIdVisible()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.isTypeIdVisible()
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defineDefaultImpl(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
  name: StdTypeResolverBuilder.defineDefaultImpl(DeserializationConfig,JavaType)
  nameWithType: StdTypeResolverBuilder.defineDefaultImpl(DeserializationConfig,JavaType)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defineDefaultImpl(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
  name: StdTypeResolverBuilder.buildTypeDeserializer(DeserializationConfig,JavaType,Collection<NamedType>)
  nameWithType: StdTypeResolverBuilder.buildTypeDeserializer(DeserializationConfig,JavaType,Collection<NamedType>)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getDefaultImpl()
  name: StdTypeResolverBuilder.getDefaultImpl()
  nameWithType: StdTypeResolverBuilder.getDefaultImpl()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getDefaultImpl()
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.init(com.fasterxml.jackson.annotation.JsonTypeInfo.Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver)
  name: StdTypeResolverBuilder.init(JsonTypeInfo.Id,TypeIdResolver)
  nameWithType: StdTypeResolverBuilder.init(JsonTypeInfo.Id,TypeIdResolver)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.init(com.fasterxml.jackson.annotation.JsonTypeInfo.Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.verifyBaseTypeValidity(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
  name: StdTypeResolverBuilder.verifyBaseTypeValidity(MapperConfig<?>,JavaType)
  nameWithType: StdTypeResolverBuilder.verifyBaseTypeValidity(MapperConfig<?>,JavaType)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.verifyBaseTypeValidity(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  name: StdTypeResolverBuilder.subTypeValidator(MapperConfig<?>)
  nameWithType: StdTypeResolverBuilder.subTypeValidator(MapperConfig<?>)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getTypeProperty()
  name: StdTypeResolverBuilder.getTypeProperty()
  nameWithType: StdTypeResolverBuilder.getTypeProperty()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.getTypeProperty()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defaultImpl(java.lang.Class<?>)
  name: StdTypeResolverBuilder.defaultImpl(Class<?>)
  nameWithType: StdTypeResolverBuilder.defaultImpl(Class<?>)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defaultImpl(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.noTypeInfoBuilder()
  name: StdTypeResolverBuilder.noTypeInfoBuilder()
  nameWithType: StdTypeResolverBuilder.noTypeInfoBuilder()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.noTypeInfoBuilder()
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeProperty(java.lang.String)
  name: StdTypeResolverBuilder.typeProperty(String)
  nameWithType: StdTypeResolverBuilder.typeProperty(String)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.typeProperty(java.lang.String)
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig
  name: MapperConfig
  nameWithType: MapperConfig
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: com.fasterxml.jackson.databind.jsontype.NamedType
  name: NamedType
  nameWithType: NamedType
  fullName: com.fasterxml.jackson.databind.jsontype.NamedType
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.reportInvalidBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: StdTypeResolverBuilder.reportInvalidBaseType(MapperConfig
  nameWithType: StdTypeResolverBuilder.reportInvalidBaseType(MapperConfig
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.reportInvalidBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: ?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  name: ?>,JavaType,PolymorphicTypeValidator)
  nameWithType: ?>,JavaType,PolymorphicTypeValidator)
  fullName: ?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
- uid: com.fasterxml.jackson.databind.jsontype.NamedType>)
  name: NamedType>)
  nameWithType: NamedType>)
  fullName: com.fasterxml.jackson.databind.jsontype.NamedType>)
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection
  name: StdTypeResolverBuilder.buildTypeSerializer(SerializationConfig,JavaType,Collection
  nameWithType: StdTypeResolverBuilder.buildTypeSerializer(SerializationConfig,JavaType,Collection
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: StdTypeResolverBuilder.idResolver(MapperConfig
  nameWithType: StdTypeResolverBuilder.idResolver(MapperConfig
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: com.fasterxml.jackson.databind.jsontype.NamedType>,boolean,boolean)
  name: NamedType>,boolean,boolean)
  nameWithType: NamedType>,boolean,boolean)
  fullName: com.fasterxml.jackson.databind.jsontype.NamedType>,boolean,boolean)
- uid: ?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,java.util.Collection
  name: ?>,JavaType,PolymorphicTypeValidator,Collection
  nameWithType: ?>,JavaType,PolymorphicTypeValidator,Collection
  fullName: ?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,java.util.Collection
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.allowPrimitiveTypes(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: StdTypeResolverBuilder.allowPrimitiveTypes(MapperConfig
  nameWithType: StdTypeResolverBuilder.allowPrimitiveTypes(MapperConfig
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.allowPrimitiveTypes(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: ?>,com.fasterxml.jackson.databind.JavaType)
  name: ?>,JavaType)
  nameWithType: ?>,JavaType)
  fullName: ?>,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection
  name: StdTypeResolverBuilder.buildTypeDeserializer(DeserializationConfig,JavaType,Collection
  nameWithType: StdTypeResolverBuilder.buildTypeDeserializer(DeserializationConfig,JavaType,Collection
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.verifyBaseTypeValidity(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: StdTypeResolverBuilder.verifyBaseTypeValidity(MapperConfig
  nameWithType: StdTypeResolverBuilder.verifyBaseTypeValidity(MapperConfig
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.verifyBaseTypeValidity(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: StdTypeResolverBuilder.subTypeValidator(MapperConfig
  nameWithType: StdTypeResolverBuilder.subTypeValidator(MapperConfig
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defaultImpl(java.lang.Class
  name: StdTypeResolverBuilder.defaultImpl(Class
  nameWithType: StdTypeResolverBuilder.defaultImpl(Class
  fullName: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defaultImpl(java.lang.Class
