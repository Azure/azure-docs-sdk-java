### YamlMime:ManagedReference
items:
- uid: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource
  id: StorageQueueMessageSource
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue.inbound
  children:
  - com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.StorageQueueMessageSource(java.lang.String,com.azure.spring.integration.storage.queue.StorageQueueOperation)
  - com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.doReceive()
  - com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.getComponentType()
  langs:
  - java
  name: StorageQueueMessageSource
  nameWithType: StorageQueueMessageSource
  fullName: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource
  type: Class
  package: com.azure.spring.integration.storage.queue.inbound
  summary: Inbound Message Source to receive messages from Azure Storage Queue.
  syntax:
    content: public class StorageQueueMessageSource extends AbstractMessageSource<Message<?>>
  inheritance:
  - java.lang.Object
  - org.springframework.integration.util.AbstractExpressionEvaluator
  - org.springframework.integration.endpoint.AbstractMessageSource
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.springframework.integration.endpoint.AbstractMessageSource.buildMessage(java.lang.Object)
  - org.springframework.integration.endpoint.AbstractMessageSource.destroy()
  - org.springframework.integration.endpoint.AbstractMessageSource.doReceive()
  - org.springframework.integration.endpoint.AbstractMessageSource.getBeanName()
  - org.springframework.integration.endpoint.AbstractMessageSource.getComponentName()
  - org.springframework.integration.endpoint.AbstractMessageSource.getManagedName()
  - org.springframework.integration.endpoint.AbstractMessageSource.getManagedType()
  - org.springframework.integration.endpoint.AbstractMessageSource.getMessageCount()
  - org.springframework.integration.endpoint.AbstractMessageSource.getMessageCountLong()
  - org.springframework.integration.endpoint.AbstractMessageSource.getOverrides()
  - org.springframework.integration.endpoint.AbstractMessageSource.isCountsEnabled()
  - org.springframework.integration.endpoint.AbstractMessageSource.isLoggingEnabled()
  - org.springframework.integration.endpoint.AbstractMessageSource.receive()
  - org.springframework.integration.endpoint.AbstractMessageSource.registerMetricsCaptor(org.springframework.integration.support.management.metrics.MetricsCaptor)
  - org.springframework.integration.endpoint.AbstractMessageSource.reset()
  - org.springframework.integration.endpoint.AbstractMessageSource.setBeanName(java.lang.String)
  - org.springframework.integration.endpoint.AbstractMessageSource.setCountsEnabled(boolean)
  - org.springframework.integration.endpoint.AbstractMessageSource.setHeaderExpressions(java.util.Map<java.lang.String,org.springframework.expression.Expression>)
  - org.springframework.integration.endpoint.AbstractMessageSource.setLoggingEnabled(boolean)
  - org.springframework.integration.endpoint.AbstractMessageSource.setManagedName(java.lang.String)
  - org.springframework.integration.endpoint.AbstractMessageSource.setManagedType(java.lang.String)
  - org.springframework.integration.util.AbstractExpressionEvaluator.<T>evaluateExpression(java.lang.String,java.lang.Object,java.lang.Class<T>)
  - org.springframework.integration.util.AbstractExpressionEvaluator.<T>evaluateExpression(org.springframework.expression.Expression,java.lang.Class<T>)
  - org.springframework.integration.util.AbstractExpressionEvaluator.<T>evaluateExpression(org.springframework.expression.Expression,java.lang.Object,java.lang.Class<T>)
  - org.springframework.integration.util.AbstractExpressionEvaluator.<T>evaluateExpression(org.springframework.expression.Expression,org.springframework.messaging.Message<?>,java.lang.Class<T>)
  - org.springframework.integration.util.AbstractExpressionEvaluator.afterPropertiesSet()
  - org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(java.lang.String,java.lang.Object)
  - org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(org.springframework.expression.Expression)
  - org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(org.springframework.expression.Expression,java.lang.Object)
  - org.springframework.integration.util.AbstractExpressionEvaluator.getBeanFactory()
  - org.springframework.integration.util.AbstractExpressionEvaluator.getEvaluationContext()
  - org.springframework.integration.util.AbstractExpressionEvaluator.getEvaluationContext(boolean)
  - org.springframework.integration.util.AbstractExpressionEvaluator.getMessageBuilderFactory()
  - org.springframework.integration.util.AbstractExpressionEvaluator.onInit()
  - org.springframework.integration.util.AbstractExpressionEvaluator.setBeanFactory(org.springframework.beans.factory.BeanFactory)
  - org.springframework.integration.util.AbstractExpressionEvaluator.setConversionService(org.springframework.core.convert.ConversionService)
- uid: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.StorageQueueMessageSource(java.lang.String,com.azure.spring.integration.storage.queue.StorageQueueOperation)
  id: StorageQueueMessageSource(java.lang.String,com.azure.spring.integration.storage.queue.StorageQueueOperation)
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource
  langs:
  - java
  name: StorageQueueMessageSource(String destination, StorageQueueOperation storageQueueOperation)
  nameWithType: StorageQueueMessageSource.StorageQueueMessageSource(String destination, StorageQueueOperation storageQueueOperation)
  fullName: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.StorageQueueMessageSource(String destination, StorageQueueOperation storageQueueOperation)
  overload: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.StorageQueueMessageSource*
  type: Constructor
  package: com.azure.spring.integration.storage.queue.inbound
  syntax:
    content: public StorageQueueMessageSource(String destination, StorageQueueOperation storageQueueOperation)
    parameters:
    - id: destination
      type: java.lang.String
    - id: storageQueueOperation
      type: com.azure.spring.integration.storage.queue.StorageQueueOperation
- uid: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.doReceive()
  id: doReceive()
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource
  langs:
  - java
  name: doReceive()
  nameWithType: StorageQueueMessageSource.doReceive()
  fullName: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.doReceive()
  overload: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.doReceive*
  type: Method
  package: com.azure.spring.integration.storage.queue.inbound
  syntax:
    content: public Object doReceive()
    return:
      type: java.lang.Object
- uid: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.getComponentType()
  id: getComponentType()
  artifact: com.azure.spring:azure-spring-integration-storage-queue:2.0.0-beta.1
  parent: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource
  langs:
  - java
  name: getComponentType()
  nameWithType: StorageQueueMessageSource.getComponentType()
  fullName: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.getComponentType()
  overload: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.getComponentType*
  type: Method
  package: com.azure.spring.integration.storage.queue.inbound
  syntax:
    content: public String getComponentType()
    return:
      type: java.lang.String
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.spring.integration.storage.queue.StorageQueueOperation
  name: StorageQueueOperation
  nameWithType: StorageQueueOperation
  fullName: com.azure.spring.integration.storage.queue.StorageQueueOperation
- uid: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.StorageQueueMessageSource*
  name: StorageQueueMessageSource
  nameWithType: StorageQueueMessageSource.StorageQueueMessageSource
  fullName: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.StorageQueueMessageSource
  package: com.azure.spring.integration.storage.queue.inbound
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.doReceive*
  name: doReceive
  nameWithType: StorageQueueMessageSource.doReceive
  fullName: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.doReceive
  package: com.azure.spring.integration.storage.queue.inbound
- uid: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.getComponentType*
  name: getComponentType
  nameWithType: StorageQueueMessageSource.getComponentType
  fullName: com.azure.spring.integration.storage.queue.inbound.StorageQueueMessageSource.getComponentType
  package: com.azure.spring.integration.storage.queue.inbound
- uid: org.springframework.integration.endpoint.AbstractMessageSource<org.springframework.messaging.Message<?>>
  name: AbstractMessageSource<Message<?>>
  nameWithType: AbstractMessageSource<Message<?>>
  fullName: org.springframework.integration.endpoint.AbstractMessageSource<org.springframework.messaging.Message<?>>
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: org.springframework.integration.endpoint.AbstractMessageSource.registerMetricsCaptor(org.springframework.integration.support.management.metrics.MetricsCaptor)
  name: AbstractMessageSource.registerMetricsCaptor(MetricsCaptor)
  nameWithType: AbstractMessageSource.registerMetricsCaptor(MetricsCaptor)
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.registerMetricsCaptor(org.springframework.integration.support.management.metrics.MetricsCaptor)
- uid: org.springframework.integration.endpoint.AbstractMessageSource.getManagedType()
  name: AbstractMessageSource.getManagedType()
  nameWithType: AbstractMessageSource.getManagedType()
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.getManagedType()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: org.springframework.integration.endpoint.AbstractMessageSource.setBeanName(java.lang.String)
  name: AbstractMessageSource.setBeanName(String)
  nameWithType: AbstractMessageSource.setBeanName(String)
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.setBeanName(java.lang.String)
- uid: org.springframework.integration.endpoint.AbstractMessageSource.getMessageCount()
  name: AbstractMessageSource.getMessageCount()
  nameWithType: AbstractMessageSource.getMessageCount()
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.getMessageCount()
- uid: org.springframework.integration.endpoint.AbstractMessageSource.getOverrides()
  name: AbstractMessageSource.getOverrides()
  nameWithType: AbstractMessageSource.getOverrides()
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.getOverrides()
- uid: org.springframework.integration.endpoint.AbstractMessageSource.reset()
  name: AbstractMessageSource.reset()
  nameWithType: AbstractMessageSource.reset()
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.reset()
- uid: org.springframework.integration.endpoint.AbstractMessageSource.getMessageCountLong()
  name: AbstractMessageSource.getMessageCountLong()
  nameWithType: AbstractMessageSource.getMessageCountLong()
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.getMessageCountLong()
- uid: org.springframework.integration.util.AbstractExpressionEvaluator.setConversionService(org.springframework.core.convert.ConversionService)
  name: AbstractExpressionEvaluator.setConversionService(ConversionService)
  nameWithType: AbstractExpressionEvaluator.setConversionService(ConversionService)
  fullName: org.springframework.integration.util.AbstractExpressionEvaluator.setConversionService(org.springframework.core.convert.ConversionService)
- uid: org.springframework.integration.endpoint.AbstractMessageSource.getComponentName()
  name: AbstractMessageSource.getComponentName()
  nameWithType: AbstractMessageSource.getComponentName()
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.getComponentName()
- uid: org.springframework.integration.endpoint.AbstractMessageSource.receive()
  name: AbstractMessageSource.receive()
  nameWithType: AbstractMessageSource.receive()
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.receive()
- uid: org.springframework.integration.endpoint.AbstractMessageSource.buildMessage(java.lang.Object)
  name: AbstractMessageSource.buildMessage(Object)
  nameWithType: AbstractMessageSource.buildMessage(Object)
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.buildMessage(java.lang.Object)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: org.springframework.integration.endpoint.AbstractMessageSource.setCountsEnabled(boolean)
  name: AbstractMessageSource.setCountsEnabled(boolean)
  nameWithType: AbstractMessageSource.setCountsEnabled(boolean)
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.setCountsEnabled(boolean)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(org.springframework.expression.Expression)
  name: AbstractExpressionEvaluator.evaluateExpression(Expression)
  nameWithType: AbstractExpressionEvaluator.evaluateExpression(Expression)
  fullName: org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(org.springframework.expression.Expression)
- uid: org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(java.lang.String,java.lang.Object)
  name: AbstractExpressionEvaluator.evaluateExpression(String,Object)
  nameWithType: AbstractExpressionEvaluator.evaluateExpression(String,Object)
  fullName: org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(java.lang.String,java.lang.Object)
- uid: org.springframework.integration.util.AbstractExpressionEvaluator.getMessageBuilderFactory()
  name: AbstractExpressionEvaluator.getMessageBuilderFactory()
  nameWithType: AbstractExpressionEvaluator.getMessageBuilderFactory()
  fullName: org.springframework.integration.util.AbstractExpressionEvaluator.getMessageBuilderFactory()
- uid: org.springframework.integration.util.AbstractExpressionEvaluator.getEvaluationContext(boolean)
  name: AbstractExpressionEvaluator.getEvaluationContext(boolean)
  nameWithType: AbstractExpressionEvaluator.getEvaluationContext(boolean)
  fullName: org.springframework.integration.util.AbstractExpressionEvaluator.getEvaluationContext(boolean)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: org.springframework.integration.util.AbstractExpressionEvaluator.<T>evaluateExpression(org.springframework.expression.Expression,org.springframework.messaging.Message<?>,java.lang.Class<T>)
  name: AbstractExpressionEvaluator.<T>evaluateExpression(Expression,Message<?>,Class<T>)
  nameWithType: AbstractExpressionEvaluator.<T>evaluateExpression(Expression,Message<?>,Class<T>)
  fullName: org.springframework.integration.util.AbstractExpressionEvaluator.<T>evaluateExpression(org.springframework.expression.Expression,org.springframework.messaging.Message<?>,java.lang.Class<T>)
- uid: org.springframework.integration.endpoint.AbstractMessageSource.isLoggingEnabled()
  name: AbstractMessageSource.isLoggingEnabled()
  nameWithType: AbstractMessageSource.isLoggingEnabled()
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.isLoggingEnabled()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.springframework.integration.endpoint.AbstractMessageSource.isCountsEnabled()
  name: AbstractMessageSource.isCountsEnabled()
  nameWithType: AbstractMessageSource.isCountsEnabled()
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.isCountsEnabled()
- uid: org.springframework.integration.endpoint.AbstractMessageSource.doReceive()
  name: AbstractMessageSource.doReceive()
  nameWithType: AbstractMessageSource.doReceive()
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.doReceive()
- uid: org.springframework.integration.endpoint.AbstractMessageSource.getManagedName()
  name: AbstractMessageSource.getManagedName()
  nameWithType: AbstractMessageSource.getManagedName()
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.getManagedName()
- uid: org.springframework.integration.util.AbstractExpressionEvaluator.setBeanFactory(org.springframework.beans.factory.BeanFactory)
  name: AbstractExpressionEvaluator.setBeanFactory(BeanFactory)
  nameWithType: AbstractExpressionEvaluator.setBeanFactory(BeanFactory)
  fullName: org.springframework.integration.util.AbstractExpressionEvaluator.setBeanFactory(org.springframework.beans.factory.BeanFactory)
- uid: org.springframework.integration.util.AbstractExpressionEvaluator.<T>evaluateExpression(java.lang.String,java.lang.Object,java.lang.Class<T>)
  name: AbstractExpressionEvaluator.<T>evaluateExpression(String,Object,Class<T>)
  nameWithType: AbstractExpressionEvaluator.<T>evaluateExpression(String,Object,Class<T>)
  fullName: org.springframework.integration.util.AbstractExpressionEvaluator.<T>evaluateExpression(java.lang.String,java.lang.Object,java.lang.Class<T>)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.springframework.integration.endpoint.AbstractMessageSource.setManagedType(java.lang.String)
  name: AbstractMessageSource.setManagedType(String)
  nameWithType: AbstractMessageSource.setManagedType(String)
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.setManagedType(java.lang.String)
- uid: org.springframework.integration.endpoint.AbstractMessageSource.getBeanName()
  name: AbstractMessageSource.getBeanName()
  nameWithType: AbstractMessageSource.getBeanName()
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.getBeanName()
- uid: org.springframework.integration.util.AbstractExpressionEvaluator.getBeanFactory()
  name: AbstractExpressionEvaluator.getBeanFactory()
  nameWithType: AbstractExpressionEvaluator.getBeanFactory()
  fullName: org.springframework.integration.util.AbstractExpressionEvaluator.getBeanFactory()
- uid: org.springframework.integration.endpoint.AbstractMessageSource.destroy()
  name: AbstractMessageSource.destroy()
  nameWithType: AbstractMessageSource.destroy()
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.destroy()
- uid: org.springframework.integration.util.AbstractExpressionEvaluator.afterPropertiesSet()
  name: AbstractExpressionEvaluator.afterPropertiesSet()
  nameWithType: AbstractExpressionEvaluator.afterPropertiesSet()
  fullName: org.springframework.integration.util.AbstractExpressionEvaluator.afterPropertiesSet()
- uid: org.springframework.integration.endpoint.AbstractMessageSource.setManagedName(java.lang.String)
  name: AbstractMessageSource.setManagedName(String)
  nameWithType: AbstractMessageSource.setManagedName(String)
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.setManagedName(java.lang.String)
- uid: org.springframework.integration.endpoint.AbstractMessageSource.setLoggingEnabled(boolean)
  name: AbstractMessageSource.setLoggingEnabled(boolean)
  nameWithType: AbstractMessageSource.setLoggingEnabled(boolean)
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.setLoggingEnabled(boolean)
- uid: org.springframework.integration.endpoint.AbstractMessageSource.setHeaderExpressions(java.util.Map<java.lang.String,org.springframework.expression.Expression>)
  name: AbstractMessageSource.setHeaderExpressions(Map<String,Expression>)
  nameWithType: AbstractMessageSource.setHeaderExpressions(Map<String,Expression>)
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.setHeaderExpressions(java.util.Map<java.lang.String,org.springframework.expression.Expression>)
- uid: org.springframework.integration.util.AbstractExpressionEvaluator.<T>evaluateExpression(org.springframework.expression.Expression,java.lang.Class<T>)
  name: AbstractExpressionEvaluator.<T>evaluateExpression(Expression,Class<T>)
  nameWithType: AbstractExpressionEvaluator.<T>evaluateExpression(Expression,Class<T>)
  fullName: org.springframework.integration.util.AbstractExpressionEvaluator.<T>evaluateExpression(org.springframework.expression.Expression,java.lang.Class<T>)
- uid: org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(org.springframework.expression.Expression,java.lang.Object)
  name: AbstractExpressionEvaluator.evaluateExpression(Expression,Object)
  nameWithType: AbstractExpressionEvaluator.evaluateExpression(Expression,Object)
  fullName: org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(org.springframework.expression.Expression,java.lang.Object)
- uid: org.springframework.integration.util.AbstractExpressionEvaluator.<T>evaluateExpression(org.springframework.expression.Expression,java.lang.Object,java.lang.Class<T>)
  name: AbstractExpressionEvaluator.<T>evaluateExpression(Expression,Object,Class<T>)
  nameWithType: AbstractExpressionEvaluator.<T>evaluateExpression(Expression,Object,Class<T>)
  fullName: org.springframework.integration.util.AbstractExpressionEvaluator.<T>evaluateExpression(org.springframework.expression.Expression,java.lang.Object,java.lang.Class<T>)
- uid: org.springframework.integration.util.AbstractExpressionEvaluator.getEvaluationContext()
  name: AbstractExpressionEvaluator.getEvaluationContext()
  nameWithType: AbstractExpressionEvaluator.getEvaluationContext()
  fullName: org.springframework.integration.util.AbstractExpressionEvaluator.getEvaluationContext()
- uid: org.springframework.integration.util.AbstractExpressionEvaluator.onInit()
  name: AbstractExpressionEvaluator.onInit()
  nameWithType: AbstractExpressionEvaluator.onInit()
  fullName: org.springframework.integration.util.AbstractExpressionEvaluator.onInit()
- uid: org.springframework.integration.endpoint.AbstractMessageSource
  name: AbstractMessageSource
  nameWithType: AbstractMessageSource
  fullName: org.springframework.integration.endpoint.AbstractMessageSource
- uid: org.springframework.messaging.Message
  name: Message
  nameWithType: Message
  fullName: org.springframework.messaging.Message
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: T>evaluateExpression(org.springframework.expression.Expression,org.springframework.messaging.Message
  name: T>evaluateExpression(Expression,Message
  nameWithType: T>evaluateExpression(Expression,Message
  fullName: T>evaluateExpression(org.springframework.expression.Expression,org.springframework.messaging.Message
- uid: ?>,java.lang.Class
  name: ?>,Class
  nameWithType: ?>,Class
  fullName: ?>,java.lang.Class
- uid: org.springframework.integration.util.AbstractExpressionEvaluator.
  name: AbstractExpressionEvaluator.
  nameWithType: AbstractExpressionEvaluator.
  fullName: org.springframework.integration.util.AbstractExpressionEvaluator.
- uid: T>)
  name: T>)
  nameWithType: T>)
  fullName: T>)
- uid: T>evaluateExpression(java.lang.String,java.lang.Object,java.lang.Class
  name: T>evaluateExpression(String,Object,Class
  nameWithType: T>evaluateExpression(String,Object,Class
  fullName: T>evaluateExpression(java.lang.String,java.lang.Object,java.lang.Class
- uid: org.springframework.integration.endpoint.AbstractMessageSource.setHeaderExpressions(java.util.Map
  name: AbstractMessageSource.setHeaderExpressions(Map
  nameWithType: AbstractMessageSource.setHeaderExpressions(Map
  fullName: org.springframework.integration.endpoint.AbstractMessageSource.setHeaderExpressions(java.util.Map
- uid: java.lang.String,org.springframework.expression.Expression>)
  name: String,Expression>)
  nameWithType: String,Expression>)
  fullName: java.lang.String,org.springframework.expression.Expression>)
- uid: T>evaluateExpression(org.springframework.expression.Expression,java.lang.Class
  name: T>evaluateExpression(Expression,Class
  nameWithType: T>evaluateExpression(Expression,Class
  fullName: T>evaluateExpression(org.springframework.expression.Expression,java.lang.Class
- uid: T>evaluateExpression(org.springframework.expression.Expression,java.lang.Object,java.lang.Class
  name: T>evaluateExpression(Expression,Object,Class
  nameWithType: T>evaluateExpression(Expression,Object,Class
  fullName: T>evaluateExpression(org.springframework.expression.Expression,java.lang.Object,java.lang.Class
