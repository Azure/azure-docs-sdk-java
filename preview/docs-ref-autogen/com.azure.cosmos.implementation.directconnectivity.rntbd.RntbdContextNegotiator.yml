### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextNegotiator
  id: RntbdContextNegotiator
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.directconnectivity.rntbd
  children:
  - com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextNegotiator.RntbdContextNegotiator(com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager,com.azure.cosmos.implementation.UserAgentContainer)
  - com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextNegotiator.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)
  langs:
  - java
  name: RntbdContextNegotiator
  nameWithType: RntbdContextNegotiator
  fullName: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextNegotiator
  type: Class
  package: com.azure.cosmos.implementation.directconnectivity.rntbd
  syntax:
    content: public final class RntbdContextNegotiator extends CombinedChannelDuplexHandler<RntbdContextDecoder,RntbdContextRequestEncoder>
  inheritance:
  - java.lang.Object
  - io.netty.channel.ChannelHandlerAdapter
  - io.netty.channel.ChannelInboundHandlerAdapter
  - io.netty.channel.ChannelDuplexHandler
  - io.netty.channel.CombinedChannelDuplexHandler
  inheritedMembers:
  - io.netty.channel.ChannelHandlerAdapter.ensureNotSharable()
  - io.netty.channel.ChannelHandlerAdapter.isSharable()
  - io.netty.channel.CombinedChannelDuplexHandler.bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise)
  - io.netty.channel.CombinedChannelDuplexHandler.channelActive(io.netty.channel.ChannelHandlerContext)
  - io.netty.channel.CombinedChannelDuplexHandler.channelInactive(io.netty.channel.ChannelHandlerContext)
  - io.netty.channel.CombinedChannelDuplexHandler.channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)
  - io.netty.channel.CombinedChannelDuplexHandler.channelReadComplete(io.netty.channel.ChannelHandlerContext)
  - io.netty.channel.CombinedChannelDuplexHandler.channelRegistered(io.netty.channel.ChannelHandlerContext)
  - io.netty.channel.CombinedChannelDuplexHandler.channelUnregistered(io.netty.channel.ChannelHandlerContext)
  - io.netty.channel.CombinedChannelDuplexHandler.channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)
  - io.netty.channel.CombinedChannelDuplexHandler.close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)
  - io.netty.channel.CombinedChannelDuplexHandler.connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)
  - io.netty.channel.CombinedChannelDuplexHandler.deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)
  - io.netty.channel.CombinedChannelDuplexHandler.disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)
  - io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)
  - io.netty.channel.CombinedChannelDuplexHandler.flush(io.netty.channel.ChannelHandlerContext)
  - io.netty.channel.CombinedChannelDuplexHandler.handlerAdded(io.netty.channel.ChannelHandlerContext)
  - io.netty.channel.CombinedChannelDuplexHandler.handlerRemoved(io.netty.channel.ChannelHandlerContext)
  - io.netty.channel.CombinedChannelDuplexHandler.inboundHandler()
  - io.netty.channel.CombinedChannelDuplexHandler.init(I,O)
  - io.netty.channel.CombinedChannelDuplexHandler.outboundHandler()
  - io.netty.channel.CombinedChannelDuplexHandler.read(io.netty.channel.ChannelHandlerContext)
  - io.netty.channel.CombinedChannelDuplexHandler.removeInboundHandler()
  - io.netty.channel.CombinedChannelDuplexHandler.removeOutboundHandler()
  - io.netty.channel.CombinedChannelDuplexHandler.userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)
  - io.netty.channel.CombinedChannelDuplexHandler.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextNegotiator.RntbdContextNegotiator(com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager,com.azure.cosmos.implementation.UserAgentContainer)
  id: RntbdContextNegotiator(com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager,com.azure.cosmos.implementation.UserAgentContainer)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextNegotiator
  langs:
  - java
  name: RntbdContextNegotiator(RntbdRequestManager manager, UserAgentContainer userAgent)
  nameWithType: RntbdContextNegotiator.RntbdContextNegotiator(RntbdRequestManager manager, UserAgentContainer userAgent)
  fullName: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextNegotiator.RntbdContextNegotiator(RntbdRequestManager manager, UserAgentContainer userAgent)
  overload: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextNegotiator.RntbdContextNegotiator*
  type: Constructor
  package: com.azure.cosmos.implementation.directconnectivity.rntbd
  syntax:
    content: public RntbdContextNegotiator(RntbdRequestManager manager, UserAgentContainer userAgent)
    parameters:
    - id: manager
      type: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager
    - id: userAgent
      type: com.azure.cosmos.implementation.UserAgentContainer
- uid: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextNegotiator.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)
  id: write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextNegotiator
  langs:
  - java
  name: write(ChannelHandlerContext context, Object message, ChannelPromise promise)
  nameWithType: RntbdContextNegotiator.write(ChannelHandlerContext context, Object message, ChannelPromise promise)
  fullName: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextNegotiator.write(ChannelHandlerContext context, Object message, ChannelPromise promise)
  overload: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextNegotiator.write*
  type: Method
  package: com.azure.cosmos.implementation.directconnectivity.rntbd
  summary: Called once a write operation is made. The write operation will write the messages through the <xref uid="" data-throw-if-not-resolved="false">ChannelPipeline</xref>. Those are then ready to be flushed to the actual <xref uid="" data-throw-if-not-resolved="false">Channel</xref> once <xref uid="" data-throw-if-not-resolved="false">Channel#flush()</xref> is called
  syntax:
    content: public void write(ChannelHandlerContext context, Object message, ChannelPromise promise)
    parameters:
    - id: context
      type: io.netty.channel.ChannelHandlerContext
      description: the <xref uid="io.netty.channel.ChannelHandlerContext" data-throw-if-not-resolved="false">ChannelHandlerContext</xref> for which the write operation is made
    - id: message
      type: java.lang.Object
      description: the message to write
    - id: promise
      type: io.netty.channel.ChannelPromise
      description: the <xref uid="io.netty.channel.ChannelPromise" data-throw-if-not-resolved="false">ChannelPromise</xref> to notify once the operation completes
  exceptions:
  - type: java.lang.Exception
    description: thrown if an error occurs
references:
- uid: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager
  name: RntbdRequestManager
  nameWithType: RntbdRequestManager
  fullName: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager
- uid: com.azure.cosmos.implementation.UserAgentContainer
  name: UserAgentContainer
  nameWithType: UserAgentContainer
  fullName: com.azure.cosmos.implementation.UserAgentContainer
- uid: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextNegotiator.RntbdContextNegotiator*
  name: RntbdContextNegotiator
  nameWithType: RntbdContextNegotiator.RntbdContextNegotiator
  fullName: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextNegotiator.RntbdContextNegotiator
  package: com.azure.cosmos.implementation.directconnectivity.rntbd
- uid: java.lang.Exception
  spec.java:
  - uid: java.lang.Exception
    name: Exception
    fullName: java.lang.Exception
- uid: io.netty.channel.ChannelHandlerContext
  spec.java:
  - uid: io.netty.channel.ChannelHandlerContext
    name: ChannelHandlerContext
    fullName: io.netty.channel.ChannelHandlerContext
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: io.netty.channel.ChannelPromise
  spec.java:
  - uid: io.netty.channel.ChannelPromise
    name: ChannelPromise
    fullName: io.netty.channel.ChannelPromise
- uid: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextNegotiator.write*
  name: write
  nameWithType: RntbdContextNegotiator.write
  fullName: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextNegotiator.write
  package: com.azure.cosmos.implementation.directconnectivity.rntbd
- uid: io.netty.channel.CombinedChannelDuplexHandler<com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextDecoder,com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder>
  name: CombinedChannelDuplexHandler<RntbdContextDecoder,RntbdContextRequestEncoder>
  nameWithType: CombinedChannelDuplexHandler<RntbdContextDecoder,RntbdContextRequestEncoder>
  fullName: io.netty.channel.CombinedChannelDuplexHandler<com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextDecoder,com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder>
- uid: io.netty.channel.CombinedChannelDuplexHandler.deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)
  name: CombinedChannelDuplexHandler.deregister(ChannelHandlerContext,ChannelPromise)
  nameWithType: CombinedChannelDuplexHandler.deregister(ChannelHandlerContext,ChannelPromise)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)
- uid: io.netty.channel.ChannelHandlerAdapter.ensureNotSharable()
  name: ChannelHandlerAdapter.ensureNotSharable()
  nameWithType: ChannelHandlerAdapter.ensureNotSharable()
  fullName: io.netty.channel.ChannelHandlerAdapter.ensureNotSharable()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: io.netty.channel.CombinedChannelDuplexHandler.handlerAdded(io.netty.channel.ChannelHandlerContext)
  name: CombinedChannelDuplexHandler.handlerAdded(ChannelHandlerContext)
  nameWithType: CombinedChannelDuplexHandler.handlerAdded(ChannelHandlerContext)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.handlerAdded(io.netty.channel.ChannelHandlerContext)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: io.netty.channel.CombinedChannelDuplexHandler.inboundHandler()
  name: CombinedChannelDuplexHandler.inboundHandler()
  nameWithType: CombinedChannelDuplexHandler.inboundHandler()
  fullName: io.netty.channel.CombinedChannelDuplexHandler.inboundHandler()
- uid: io.netty.channel.CombinedChannelDuplexHandler.channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)
  name: CombinedChannelDuplexHandler.channelWritabilityChanged(ChannelHandlerContext)
  nameWithType: CombinedChannelDuplexHandler.channelWritabilityChanged(ChannelHandlerContext)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)
- uid: io.netty.channel.ChannelHandlerAdapter.isSharable()
  name: ChannelHandlerAdapter.isSharable()
  nameWithType: ChannelHandlerAdapter.isSharable()
  fullName: io.netty.channel.ChannelHandlerAdapter.isSharable()
- uid: io.netty.channel.CombinedChannelDuplexHandler.removeOutboundHandler()
  name: CombinedChannelDuplexHandler.removeOutboundHandler()
  nameWithType: CombinedChannelDuplexHandler.removeOutboundHandler()
  fullName: io.netty.channel.CombinedChannelDuplexHandler.removeOutboundHandler()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: io.netty.channel.CombinedChannelDuplexHandler.bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise)
  name: CombinedChannelDuplexHandler.bind(ChannelHandlerContext,SocketAddress,ChannelPromise)
  nameWithType: CombinedChannelDuplexHandler.bind(ChannelHandlerContext,SocketAddress,ChannelPromise)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: io.netty.channel.CombinedChannelDuplexHandler.userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)
  name: CombinedChannelDuplexHandler.userEventTriggered(ChannelHandlerContext,Object)
  nameWithType: CombinedChannelDuplexHandler.userEventTriggered(ChannelHandlerContext,Object)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)
- uid: io.netty.channel.CombinedChannelDuplexHandler.init(I,O)
  name: CombinedChannelDuplexHandler.init(I,O)
  nameWithType: CombinedChannelDuplexHandler.init(I,O)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.init(I,O)
- uid: io.netty.channel.CombinedChannelDuplexHandler.connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)
  name: CombinedChannelDuplexHandler.connect(ChannelHandlerContext,SocketAddress,SocketAddress,ChannelPromise)
  nameWithType: CombinedChannelDuplexHandler.connect(ChannelHandlerContext,SocketAddress,SocketAddress,ChannelPromise)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: io.netty.channel.CombinedChannelDuplexHandler.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)
  name: CombinedChannelDuplexHandler.write(ChannelHandlerContext,Object,ChannelPromise)
  nameWithType: CombinedChannelDuplexHandler.write(ChannelHandlerContext,Object,ChannelPromise)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: io.netty.channel.CombinedChannelDuplexHandler.read(io.netty.channel.ChannelHandlerContext)
  name: CombinedChannelDuplexHandler.read(ChannelHandlerContext)
  nameWithType: CombinedChannelDuplexHandler.read(ChannelHandlerContext)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.read(io.netty.channel.ChannelHandlerContext)
- uid: io.netty.channel.CombinedChannelDuplexHandler.channelReadComplete(io.netty.channel.ChannelHandlerContext)
  name: CombinedChannelDuplexHandler.channelReadComplete(ChannelHandlerContext)
  nameWithType: CombinedChannelDuplexHandler.channelReadComplete(ChannelHandlerContext)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.channelReadComplete(io.netty.channel.ChannelHandlerContext)
- uid: io.netty.channel.CombinedChannelDuplexHandler.channelActive(io.netty.channel.ChannelHandlerContext)
  name: CombinedChannelDuplexHandler.channelActive(ChannelHandlerContext)
  nameWithType: CombinedChannelDuplexHandler.channelActive(ChannelHandlerContext)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.channelActive(io.netty.channel.ChannelHandlerContext)
- uid: io.netty.channel.CombinedChannelDuplexHandler.outboundHandler()
  name: CombinedChannelDuplexHandler.outboundHandler()
  nameWithType: CombinedChannelDuplexHandler.outboundHandler()
  fullName: io.netty.channel.CombinedChannelDuplexHandler.outboundHandler()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: io.netty.channel.CombinedChannelDuplexHandler.handlerRemoved(io.netty.channel.ChannelHandlerContext)
  name: CombinedChannelDuplexHandler.handlerRemoved(ChannelHandlerContext)
  nameWithType: CombinedChannelDuplexHandler.handlerRemoved(ChannelHandlerContext)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.handlerRemoved(io.netty.channel.ChannelHandlerContext)
- uid: io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)
  name: CombinedChannelDuplexHandler.exceptionCaught(ChannelHandlerContext,Throwable)
  nameWithType: CombinedChannelDuplexHandler.exceptionCaught(ChannelHandlerContext,Throwable)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: io.netty.channel.CombinedChannelDuplexHandler.channelUnregistered(io.netty.channel.ChannelHandlerContext)
  name: CombinedChannelDuplexHandler.channelUnregistered(ChannelHandlerContext)
  nameWithType: CombinedChannelDuplexHandler.channelUnregistered(ChannelHandlerContext)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.channelUnregistered(io.netty.channel.ChannelHandlerContext)
- uid: io.netty.channel.CombinedChannelDuplexHandler.flush(io.netty.channel.ChannelHandlerContext)
  name: CombinedChannelDuplexHandler.flush(ChannelHandlerContext)
  nameWithType: CombinedChannelDuplexHandler.flush(ChannelHandlerContext)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.flush(io.netty.channel.ChannelHandlerContext)
- uid: io.netty.channel.CombinedChannelDuplexHandler.channelInactive(io.netty.channel.ChannelHandlerContext)
  name: CombinedChannelDuplexHandler.channelInactive(ChannelHandlerContext)
  nameWithType: CombinedChannelDuplexHandler.channelInactive(ChannelHandlerContext)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.channelInactive(io.netty.channel.ChannelHandlerContext)
- uid: io.netty.channel.CombinedChannelDuplexHandler.disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)
  name: CombinedChannelDuplexHandler.disconnect(ChannelHandlerContext,ChannelPromise)
  nameWithType: CombinedChannelDuplexHandler.disconnect(ChannelHandlerContext,ChannelPromise)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)
- uid: io.netty.channel.CombinedChannelDuplexHandler.close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)
  name: CombinedChannelDuplexHandler.close(ChannelHandlerContext,ChannelPromise)
  nameWithType: CombinedChannelDuplexHandler.close(ChannelHandlerContext,ChannelPromise)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)
- uid: io.netty.channel.CombinedChannelDuplexHandler.channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)
  name: CombinedChannelDuplexHandler.channelRead(ChannelHandlerContext,Object)
  nameWithType: CombinedChannelDuplexHandler.channelRead(ChannelHandlerContext,Object)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)
- uid: io.netty.channel.CombinedChannelDuplexHandler.removeInboundHandler()
  name: CombinedChannelDuplexHandler.removeInboundHandler()
  nameWithType: CombinedChannelDuplexHandler.removeInboundHandler()
  fullName: io.netty.channel.CombinedChannelDuplexHandler.removeInboundHandler()
- uid: io.netty.channel.CombinedChannelDuplexHandler.channelRegistered(io.netty.channel.ChannelHandlerContext)
  name: CombinedChannelDuplexHandler.channelRegistered(ChannelHandlerContext)
  nameWithType: CombinedChannelDuplexHandler.channelRegistered(ChannelHandlerContext)
  fullName: io.netty.channel.CombinedChannelDuplexHandler.channelRegistered(io.netty.channel.ChannelHandlerContext)
- uid: io.netty.channel.CombinedChannelDuplexHandler
  name: CombinedChannelDuplexHandler
  nameWithType: CombinedChannelDuplexHandler
  fullName: io.netty.channel.CombinedChannelDuplexHandler
- uid: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextDecoder,com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder
  name: RntbdContextDecoder,RntbdContextRequestEncoder
  nameWithType: RntbdContextDecoder,RntbdContextRequestEncoder
  fullName: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextDecoder,com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder
