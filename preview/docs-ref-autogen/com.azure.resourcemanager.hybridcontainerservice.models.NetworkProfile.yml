### YamlMime:JavaType
uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile"
fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile"
name: "NetworkProfile"
nameWithType: "NetworkProfile"
summary: "Network<wbr>Profile - Profile of network configuration."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **NetworkProfile**"
constructors:
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.NetworkProfile()"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.NetworkProfile()"
  name: "NetworkProfile()"
  nameWithType: "NetworkProfile.NetworkProfile()"
  summary: "Creates an instance of Network<wbr>Profile class."
  syntax: "public NetworkProfile()"
  desc: "Creates an instance of NetworkProfile class."
methods:
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.dnsServiceIp()"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.dnsServiceIp()"
  name: "dnsServiceIp()"
  nameWithType: "NetworkProfile.dnsServiceIp()"
  summary: "Get the dns<wbr>Service<wbr>Ip property: DNSServiceIP - An IP address assigned to the Kubernetes DNS service."
  syntax: "public String dnsServiceIp()"
  desc: "Get the dnsServiceIp property: DNSServiceIP - An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr."
  returns:
    description: "the dnsServiceIp value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.loadBalancerProfile()"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.loadBalancerProfile()"
  name: "loadBalancerProfile()"
  nameWithType: "NetworkProfile.loadBalancerProfile()"
  summary: "Get the load<wbr>Balancer<wbr>Profile property: Load<wbr>Balancer<wbr>Profile - Profile of the cluster load balancer."
  syntax: "public LoadBalancerProfile loadBalancerProfile()"
  desc: "Get the loadBalancerProfile property: LoadBalancerProfile - Profile of the cluster load balancer."
  returns:
    description: "the loadBalancerProfile value."
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.LoadBalancerProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.LoadBalancerProfile&text=LoadBalancerProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.loadBalancerSku()"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.loadBalancerSku()"
  name: "loadBalancerSku()"
  nameWithType: "NetworkProfile.loadBalancerSku()"
  summary: "Get the load<wbr>Balancer<wbr>Sku property: Load<wbr>Balancer<wbr>Sku - The load balancer sku for the provisioned cluster."
  syntax: "public LoadBalancerSku loadBalancerSku()"
  desc: "Get the loadBalancerSku property: LoadBalancerSku - The load balancer sku for the provisioned cluster. Possible values: 'unstacked-haproxy', 'stacked-kube-vip', 'stacked-metallb', 'unmanaged'. The default is 'unmanaged'."
  returns:
    description: "the loadBalancerSku value."
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.LoadBalancerSku?alt=com.azure.resourcemanager.hybridcontainerservice.models.LoadBalancerSku&text=LoadBalancerSku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.networkPolicy()"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.networkPolicy()"
  name: "networkPolicy()"
  nameWithType: "NetworkProfile.networkPolicy()"
  summary: "Get the network<wbr>Policy property: Network<wbr>Policy - Network policy used for building Kubernetes network."
  syntax: "public NetworkPolicy networkPolicy()"
  desc: "Get the networkPolicy property: NetworkPolicy - Network policy used for building Kubernetes network. Possible values include: 'calico', 'flannel'. Default is 'calico'."
  returns:
    description: "the networkPolicy value."
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NetworkPolicy?alt=com.azure.resourcemanager.hybridcontainerservice.models.NetworkPolicy&text=NetworkPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.podCidr()"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.podCidr()"
  name: "podCidr()"
  nameWithType: "NetworkProfile.podCidr()"
  summary: "Get the pod<wbr>Cidr property: Pod<wbr>Cidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used."
  syntax: "public String podCidr()"
  desc: "Get the podCidr property: PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used."
  returns:
    description: "the podCidr value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.podCidrs()"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.podCidrs()"
  name: "podCidrs()"
  nameWithType: "NetworkProfile.podCidrs()"
  summary: "Get the pod<wbr>Cidrs property: The CIDR notation IP ranges from which to assign pod IPs."
  syntax: "public List<String> podCidrs()"
  desc: "Get the podCidrs property: The CIDR notation IP ranges from which to assign pod IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking."
  returns:
    description: "the podCidrs value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.serviceCidr()"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.serviceCidr()"
  name: "serviceCidr()"
  nameWithType: "NetworkProfile.serviceCidr()"
  summary: "Get the service<wbr>Cidr property: Service<wbr>Cidr - A CIDR notation IP range from which to assign service cluster IPs."
  syntax: "public String serviceCidr()"
  desc: "Get the serviceCidr property: ServiceCidr - A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges."
  returns:
    description: "the serviceCidr value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.serviceCidrs()"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.serviceCidrs()"
  name: "serviceCidrs()"
  nameWithType: "NetworkProfile.serviceCidrs()"
  summary: "Get the service<wbr>Cidrs property: The CIDR notation IP ranges from which to assign service cluster IPs."
  syntax: "public List<String> serviceCidrs()"
  desc: "Get the serviceCidrs property: The CIDR notation IP ranges from which to assign service cluster IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges."
  returns:
    description: "the serviceCidrs value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.validate()"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.validate()"
  name: "validate()"
  nameWithType: "NetworkProfile.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.withDnsServiceIp(java.lang.String)"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.withDnsServiceIp(String dnsServiceIp)"
  name: "withDnsServiceIp(String dnsServiceIp)"
  nameWithType: "NetworkProfile.withDnsServiceIp(String dnsServiceIp)"
  summary: "Set the dns<wbr>Service<wbr>Ip property: DNSServiceIP - An IP address assigned to the Kubernetes DNS service."
  parameters:
  - description: "the dnsServiceIp value to set."
    name: "dnsServiceIp"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public NetworkProfile withDnsServiceIp(String dnsServiceIp)"
  desc: "Set the dnsServiceIp property: DNSServiceIP - An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr."
  returns:
    description: "the NetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile&text=NetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.withLoadBalancerProfile(com.azure.resourcemanager.hybridcontainerservice.models.LoadBalancerProfile)"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.withLoadBalancerProfile(LoadBalancerProfile loadBalancerProfile)"
  name: "withLoadBalancerProfile(LoadBalancerProfile loadBalancerProfile)"
  nameWithType: "NetworkProfile.withLoadBalancerProfile(LoadBalancerProfile loadBalancerProfile)"
  summary: "Set the load<wbr>Balancer<wbr>Profile property: Load<wbr>Balancer<wbr>Profile - Profile of the cluster load balancer."
  parameters:
  - description: "the loadBalancerProfile value to set."
    name: "loadBalancerProfile"
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.LoadBalancerProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.LoadBalancerProfile&text=LoadBalancerProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkProfile withLoadBalancerProfile(LoadBalancerProfile loadBalancerProfile)"
  desc: "Set the loadBalancerProfile property: LoadBalancerProfile - Profile of the cluster load balancer."
  returns:
    description: "the NetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile&text=NetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.withLoadBalancerSku(com.azure.resourcemanager.hybridcontainerservice.models.LoadBalancerSku)"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.withLoadBalancerSku(LoadBalancerSku loadBalancerSku)"
  name: "withLoadBalancerSku(LoadBalancerSku loadBalancerSku)"
  nameWithType: "NetworkProfile.withLoadBalancerSku(LoadBalancerSku loadBalancerSku)"
  summary: "Set the load<wbr>Balancer<wbr>Sku property: Load<wbr>Balancer<wbr>Sku - The load balancer sku for the provisioned cluster."
  parameters:
  - description: "the loadBalancerSku value to set."
    name: "loadBalancerSku"
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.LoadBalancerSku?alt=com.azure.resourcemanager.hybridcontainerservice.models.LoadBalancerSku&text=LoadBalancerSku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkProfile withLoadBalancerSku(LoadBalancerSku loadBalancerSku)"
  desc: "Set the loadBalancerSku property: LoadBalancerSku - The load balancer sku for the provisioned cluster. Possible values: 'unstacked-haproxy', 'stacked-kube-vip', 'stacked-metallb', 'unmanaged'. The default is 'unmanaged'."
  returns:
    description: "the NetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile&text=NetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.withNetworkPolicy(com.azure.resourcemanager.hybridcontainerservice.models.NetworkPolicy)"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.withNetworkPolicy(NetworkPolicy networkPolicy)"
  name: "withNetworkPolicy(NetworkPolicy networkPolicy)"
  nameWithType: "NetworkProfile.withNetworkPolicy(NetworkPolicy networkPolicy)"
  summary: "Set the network<wbr>Policy property: Network<wbr>Policy - Network policy used for building Kubernetes network."
  parameters:
  - description: "the networkPolicy value to set."
    name: "networkPolicy"
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NetworkPolicy?alt=com.azure.resourcemanager.hybridcontainerservice.models.NetworkPolicy&text=NetworkPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkProfile withNetworkPolicy(NetworkPolicy networkPolicy)"
  desc: "Set the networkPolicy property: NetworkPolicy - Network policy used for building Kubernetes network. Possible values include: 'calico', 'flannel'. Default is 'calico'."
  returns:
    description: "the NetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile&text=NetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.withPodCidr(java.lang.String)"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.withPodCidr(String podCidr)"
  name: "withPodCidr(String podCidr)"
  nameWithType: "NetworkProfile.withPodCidr(String podCidr)"
  summary: "Set the pod<wbr>Cidr property: Pod<wbr>Cidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used."
  parameters:
  - description: "the podCidr value to set."
    name: "podCidr"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public NetworkProfile withPodCidr(String podCidr)"
  desc: "Set the podCidr property: PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used."
  returns:
    description: "the NetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile&text=NetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.withPodCidrs(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.withPodCidrs(List<String> podCidrs)"
  name: "withPodCidrs(List<String> podCidrs)"
  nameWithType: "NetworkProfile.withPodCidrs(List<String> podCidrs)"
  summary: "Set the pod<wbr>Cidrs property: The CIDR notation IP ranges from which to assign pod IPs."
  parameters:
  - description: "the podCidrs value to set."
    name: "podCidrs"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public NetworkProfile withPodCidrs(List<String> podCidrs)"
  desc: "Set the podCidrs property: The CIDR notation IP ranges from which to assign pod IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking."
  returns:
    description: "the NetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile&text=NetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.withServiceCidr(java.lang.String)"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.withServiceCidr(String serviceCidr)"
  name: "withServiceCidr(String serviceCidr)"
  nameWithType: "NetworkProfile.withServiceCidr(String serviceCidr)"
  summary: "Set the service<wbr>Cidr property: Service<wbr>Cidr - A CIDR notation IP range from which to assign service cluster IPs."
  parameters:
  - description: "the serviceCidr value to set."
    name: "serviceCidr"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public NetworkProfile withServiceCidr(String serviceCidr)"
  desc: "Set the serviceCidr property: ServiceCidr - A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges."
  returns:
    description: "the NetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile&text=NetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.withServiceCidrs(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile.withServiceCidrs(List<String> serviceCidrs)"
  name: "withServiceCidrs(List<String> serviceCidrs)"
  nameWithType: "NetworkProfile.withServiceCidrs(List<String> serviceCidrs)"
  summary: "Set the service<wbr>Cidrs property: The CIDR notation IP ranges from which to assign service cluster IPs."
  parameters:
  - description: "the serviceCidrs value to set."
    name: "serviceCidrs"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public NetworkProfile withServiceCidrs(List<String> serviceCidrs)"
  desc: "Set the serviceCidrs property: The CIDR notation IP ranges from which to assign service cluster IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges."
  returns:
    description: "the NetworkProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile?alt=com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile&text=NetworkProfile\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "NetworkProfile - Profile of network configuration."
metadata: {}
package: "com.azure.resourcemanager.hybridcontainerservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-hybridcontainerservice:1.0.0-beta.1
