### YamlMime:JavaType
uid: "com.fasterxml.jackson.annotation.ObjectIdGenerators.StringIdGenerator"
fullName: "com.fasterxml.jackson.annotation.ObjectIdGenerators.StringIdGenerator"
name: "ObjectIdGenerators.StringIdGenerator"
nameWithType: "ObjectIdGenerators.StringIdGenerator"
summary: "Implementation that will accept arbitrary (but unique) String Ids on deserialization, and (by default) use random UUID generation similar to <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UUIDGenerator\"></xref> for generation ids.\n\nThis generator is most useful for cases where another system creates String Ids (of arbitrary structure, if any), and Jackson only needs to keep track of id-to-Object mapping. Generation also works, although if UUIDs are always used, <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UUIDGenerator\"></xref> is a better match as it will also validate ids being used."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.annotation.ObjectIdGenerator\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.annotation.ObjectIdGenerators.Base\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.annotation.ObjectIdGenerator.forScope(java.lang.Class<?>)"
- "com.fasterxml.jackson.annotation.ObjectIdGenerator.isValidReferencePropertyName(java.lang.String,java.lang.Object)"
- "com.fasterxml.jackson.annotation.ObjectIdGenerator.key(java.lang.Object)"
- "com.fasterxml.jackson.annotation.ObjectIdGenerator.maySerializeAsObject()"
- "com.fasterxml.jackson.annotation.ObjectIdGenerator.newForSerialization(java.lang.Object)"
- "com.fasterxml.jackson.annotation.ObjectIdGenerators.Base.canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator<?>)"
- "com.fasterxml.jackson.annotation.ObjectIdGenerators.Base.generateId(java.lang.Object)"
- "com.fasterxml.jackson.annotation.ObjectIdGenerators.Base.getScope()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public static final class ObjectIdGenerators.StringIdGenerator extends ObjectIdGenerators.Base<String>"
constructors:
- "com.fasterxml.jackson.annotation.ObjectIdGenerators.StringIdGenerator.StringIdGenerator()"
methods:
- "com.fasterxml.jackson.annotation.ObjectIdGenerators.StringIdGenerator.canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator<?>)"
- "com.fasterxml.jackson.annotation.ObjectIdGenerators.StringIdGenerator.forScope(java.lang.Class<?>)"
- "com.fasterxml.jackson.annotation.ObjectIdGenerators.StringIdGenerator.generateId(java.lang.Object)"
- "com.fasterxml.jackson.annotation.ObjectIdGenerators.StringIdGenerator.key(java.lang.Object)"
- "com.fasterxml.jackson.annotation.ObjectIdGenerators.StringIdGenerator.newForSerialization(java.lang.Object)"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
