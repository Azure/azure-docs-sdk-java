### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.deser.Deserializers.findMapLikeDeserializer*"
fullName: "com.fasterxml.jackson.databind.deser.Deserializers.findMapLikeDeserializer"
name: "findMapLikeDeserializer"
nameWithType: "Deserializers.findMapLikeDeserializer"
members:
- uid: "com.fasterxml.jackson.databind.deser.Deserializers.findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)"
  fullName: "com.fasterxml.jackson.databind.deser.Deserializers.findMapLikeDeserializer(MapLikeType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)"
  name: "findMapLikeDeserializer(MapLikeType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)"
  nameWithType: "Deserializers.findMapLikeDeserializer(MapLikeType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)"
  summary: "Method called to locate serializer for specified \"Map-like\" type (one that acts like <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Map\"></xref> but does not implement it).\n\nDeserializer for element type may be passed, if configured explicitly at higher level (by annotations, typically), but usually are not. Type deserializer for element is passed if one is needed based on contextual information (annotations on declared element class; or on field or method type is associated with).\n\nSimilarly, a <xref uid=\"com.fasterxml.jackson.databind.KeyDeserializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyDeserializer\"></xref> may be passed, but this is only done if there is a specific configuration override (annotations) to indicate instance to use. Otherwise null is passed, and key deserializer needs to be obtained later during resolution (using <xref uid=\"com.fasterxml.jackson.databind.deser.ResolvableDeserializer.resolve*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ResolvableDeserializer#resolve\"></xref>)."
  parameters:
  - description: "Type of <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Map\"></xref> instances to deserialize"
    name: "type"
    type: "<xref href=\"com.fasterxml.jackson.databind.type.MapLikeType?alt=com.fasterxml.jackson.databind.type.MapLikeType&text=MapLikeType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Configuration in effect"
    name: "config"
    type: "<xref href=\"com.fasterxml.jackson.databind.DeserializationConfig?alt=com.fasterxml.jackson.databind.DeserializationConfig&text=DeserializationConfig\" data-throw-if-not-resolved=\"False\" />"
  - description: "Definition of the enumeration type that contains class annotations and\n    other information typically needed for building deserializers"
    name: "beanDesc"
    type: "<xref href=\"com.fasterxml.jackson.databind.BeanDescription?alt=com.fasterxml.jackson.databind.BeanDescription&text=BeanDescription\" data-throw-if-not-resolved=\"False\" />"
  - description: "Key deserializer use, if it is defined via annotations or other configuration;\n    null if default key deserializer for key type can be used."
    name: "keyDeserializer"
    type: "<xref href=\"com.fasterxml.jackson.databind.KeyDeserializer?alt=com.fasterxml.jackson.databind.KeyDeserializer&text=KeyDeserializer\" data-throw-if-not-resolved=\"False\" />"
  - description: "If element type needs polymorphic type handling, this is\n    the type information deserializer to use; should usually be used as is when constructing\n    array deserializer."
    name: "elementTypeDeserializer"
    type: "<xref href=\"com.fasterxml.jackson.databind.jsontype.TypeDeserializer?alt=com.fasterxml.jackson.databind.jsontype.TypeDeserializer&text=TypeDeserializer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Deserializer to use for elements, if explicitly defined (by using\n    annotations, for exmple). May be null, in which case it should be resolved here (or using\n    <xref uid=\"com.fasterxml.jackson.databind.deser.ResolvableDeserializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ResolvableDeserializer\"></xref> callback)"
    name: "elementDeserializer"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonDeserializer?alt=com.fasterxml.jackson.databind.JsonDeserializer&text=JsonDeserializer\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public abstract JsonDeserializer<?> findMapLikeDeserializer(MapLikeType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Deserializer to use for the type; or null if this provider does not know how to construct it"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonDeserializer?alt=com.fasterxml.jackson.databind.JsonDeserializer&text=JsonDeserializer\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.deser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
