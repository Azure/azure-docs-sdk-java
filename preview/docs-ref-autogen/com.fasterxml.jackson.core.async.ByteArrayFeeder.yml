### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.async.ByteArrayFeeder
  id: ByteArrayFeeder
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.async
  children:
  - com.fasterxml.jackson.core.async.ByteArrayFeeder.feedInput(byte[],int,int)
  langs:
  - java
  name: ByteArrayFeeder
  nameWithType: ByteArrayFeeder
  fullName: com.fasterxml.jackson.core.async.ByteArrayFeeder
  type: Interface
  package: com.fasterxml.jackson.core.async
  summary: <xref uid="com.fasterxml.jackson.core.async.NonBlockingInputFeeder" data-throw-if-not-resolved="false">NonBlockingInputFeeder</xref> implementation used when feeding data as byte arrays.
  syntax:
    content: public interface ByteArrayFeeder extends NonBlockingInputFeeder
  implements:
  - com.fasterxml.jackson.core.async.NonBlockingInputFeeder
- uid: com.fasterxml.jackson.core.async.ByteArrayFeeder.feedInput(byte[],int,int)
  id: feedInput(byte[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.async.ByteArrayFeeder
  langs:
  - java
  name: feedInput(byte[] data, int offset, int end)
  nameWithType: ByteArrayFeeder.feedInput(byte[] data, int offset, int end)
  fullName: com.fasterxml.jackson.core.async.ByteArrayFeeder.feedInput(byte[] data, int offset, int end)
  overload: com.fasterxml.jackson.core.async.ByteArrayFeeder.feedInput*
  type: Method
  package: com.fasterxml.jackson.core.async
  summary: Method that can be called to feed more data, if (and only if) <xref uid="com.fasterxml.jackson.core.async.ByteArrayFeeder.needMoreInput" data-throw-if-not-resolved="false">#needMoreInput</xref> returns true.
  syntax:
    content: public abstract void feedInput(byte[] data, int offset, int end)
    parameters:
    - id: data
      type: byte[]
      description: >-
        Byte array that contains data to feed: caller must ensure data remains
            stable until it is fully processed (which is true when <xref uid="com.fasterxml.jackson.core.async.ByteArrayFeeder.needMoreInput" data-throw-if-not-resolved="false">#needMoreInput</xref>
            returns true)
    - id: offset
      type: int
      description: Offset within array where input data to process starts
    - id: end
      type: int
      description: Offset after last byte contained in the input array
  exceptions:
  - type: java.io.IOException
    description: >-
      if the state is such that this method should not be called
         (has not yet consumed existing input data, or has been marked as closed)
references:
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.async.ByteArrayFeeder.feedInput*
  name: feedInput
  nameWithType: ByteArrayFeeder.feedInput
  fullName: com.fasterxml.jackson.core.async.ByteArrayFeeder.feedInput
  package: com.fasterxml.jackson.core.async
- uid: com.fasterxml.jackson.core.async.NonBlockingInputFeeder
  name: NonBlockingInputFeeder
  nameWithType: NonBlockingInputFeeder
  fullName: com.fasterxml.jackson.core.async.NonBlockingInputFeeder
