### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.withSkipToken*"
fullName: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.withSkipToken"
name: "withSkipToken"
nameWithType: "QueryResponseInner.withSkipToken"
members:
- uid: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.withSkipToken(java.lang.String)"
  fullName: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.withSkipToken(String skipToken)"
  name: "withSkipToken(String skipToken)"
  nameWithType: "QueryResponseInner.withSkipToken(String skipToken)"
  summary: "Set the skipToken property: When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data."
  parameters:
  - description: "the skipToken value to set."
    name: "skipToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryResponseInner withSkipToken(String skipToken)"
  returns:
    description: "the QueryResponseInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner?alt=com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner&text=QueryResponseInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resourcegraph.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-resourcegraph:1.0.0-beta.1
