### YamlMime:JavaType
uid: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder"
fullName: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder"
name: "SchemaRegistryApacheAvroSerializerBuilder"
nameWithType: "SchemaRegistryApacheAvroSerializerBuilder"
summary: "The builder for instantiating a <xref uid=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryApacheAvroSerializer\"></xref>. Additional code samples are in <xref uid=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryApacheAvroSerializer\"></xref>.\n\n**Creating a <xref uid=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryApacheAvroSerializer\"></xref>**\n\n```java\nTokenCredential tokenCredential = new DefaultAzureCredentialBuilder().build();\n SchemaRegistryAsyncClient schemaRegistryAsyncClient = new SchemaRegistryClientBuilder()\n     .credential(tokenCredential)\n     .fullyQualifiedNamespace(\"{schema-registry-endpoint}\")\n     .buildAsyncClient();\n\n // By setting autoRegisterSchema to true, if the schema does not exist in the Schema Registry instance, it is\n // added to the instance. By default, this is false, so it will error if the schema is not found.\n SchemaRegistryApacheAvroSerializer serializer = new SchemaRegistryApacheAvroSerializerBuilder()\n     .schemaRegistryAsyncClient(schemaRegistryAsyncClient)\n     .autoRegisterSchema(true)\n     .schemaGroup(\"{schema-group}\")\n     .buildSerializer();\n```"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SchemaRegistryApacheAvroSerializerBuilder"
constructors:
- "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.SchemaRegistryApacheAvroSerializerBuilder()"
methods:
- "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.autoRegisterSchema(boolean)"
- "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.avroSpecificReader(boolean)"
- "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.buildSerializer()"
- "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.schemaGroup(java.lang.String)"
- "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.schemaRegistryAsyncClient(com.azure.data.schemaregistry.SchemaRegistryAsyncClient)"
type: "class"
metadata: {}
package: "com.azure.data.schemaregistry.apacheavro"
artifact: com.azure:azure-data-schemaregistry-apacheavro:1.0.0-beta.11
