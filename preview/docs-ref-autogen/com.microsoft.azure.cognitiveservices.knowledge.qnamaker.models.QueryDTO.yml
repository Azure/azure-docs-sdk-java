### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO"
fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO"
name: "QueryDTO"
nameWithType: "QueryDTO"
summary: "POST body schema to query the knowledgebase."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class QueryDTO"
constructors:
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.QueryDTO()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.QueryDTO()"
  name: "QueryDTO()"
  nameWithType: "QueryDTO.QueryDTO()"
  syntax: "public QueryDTO()"
methods:
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.answerSpanRequest()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.answerSpanRequest()"
  name: "answerSpanRequest()"
  nameWithType: "QueryDTO.answerSpanRequest()"
  summary: "Get the answer<wbr>Span<wbr>Request value."
  syntax: "public QueryDTOAnswerSpanRequest answerSpanRequest()"
  desc: "Get the answerSpanRequest value."
  returns:
    description: "the answerSpanRequest value"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTOAnswerSpanRequest?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTOAnswerSpanRequest&text=QueryDTOAnswerSpanRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.context()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.context()"
  name: "context()"
  nameWithType: "QueryDTO.context()"
  summary: "Get the context value."
  syntax: "public QueryDTOContext context()"
  desc: "Get the context value."
  returns:
    description: "the context value"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTOContext?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTOContext&text=QueryDTOContext\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.isTest()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.isTest()"
  name: "isTest()"
  nameWithType: "QueryDTO.isTest()"
  summary: "Get the is<wbr>Test value."
  syntax: "public Boolean isTest()"
  desc: "Get the isTest value."
  returns:
    description: "the isTest value"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.qnaId()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.qnaId()"
  name: "qnaId()"
  nameWithType: "QueryDTO.qnaId()"
  summary: "Get the qna<wbr>Id value."
  syntax: "public String qnaId()"
  desc: "Get the qnaId value."
  returns:
    description: "the qnaId value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.question()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.question()"
  name: "question()"
  nameWithType: "QueryDTO.question()"
  summary: "Get the question value."
  syntax: "public String question()"
  desc: "Get the question value."
  returns:
    description: "the question value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.rankerType()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.rankerType()"
  name: "rankerType()"
  nameWithType: "QueryDTO.rankerType()"
  summary: "Get the ranker<wbr>Type value."
  syntax: "public String rankerType()"
  desc: "Get the rankerType value."
  returns:
    description: "the rankerType value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.scoreThreshold()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.scoreThreshold()"
  name: "scoreThreshold()"
  nameWithType: "QueryDTO.scoreThreshold()"
  summary: "Get the score<wbr>Threshold value."
  syntax: "public Double scoreThreshold()"
  desc: "Get the scoreThreshold value."
  returns:
    description: "the scoreThreshold value"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.strictFilters()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.strictFilters()"
  name: "strictFilters()"
  nameWithType: "QueryDTO.strictFilters()"
  summary: "Get the strict<wbr>Filters value."
  syntax: "public List<MetadataDTO> strictFilters()"
  desc: "Get the strictFilters value."
  returns:
    description: "the strictFilters value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.MetadataDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.MetadataDTO&text=MetadataDTO\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.strictFiltersCompoundOperationType()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.strictFiltersCompoundOperationType()"
  name: "strictFiltersCompoundOperationType()"
  nameWithType: "QueryDTO.strictFiltersCompoundOperationType()"
  summary: "Get the strict<wbr>Filters<wbr>Compound<wbr>Operation<wbr>Type value."
  syntax: "public StrictFiltersCompoundOperationType strictFiltersCompoundOperationType()"
  desc: "Get the strictFiltersCompoundOperationType value."
  returns:
    description: "the strictFiltersCompoundOperationType value"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.StrictFiltersCompoundOperationType?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.StrictFiltersCompoundOperationType&text=StrictFiltersCompoundOperationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.top()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.top()"
  name: "top()"
  nameWithType: "QueryDTO.top()"
  summary: "Get the top value."
  syntax: "public Integer top()"
  desc: "Get the top value."
  returns:
    description: "the top value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.userId()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.userId()"
  name: "userId()"
  nameWithType: "QueryDTO.userId()"
  summary: "Get the user<wbr>Id value."
  syntax: "public String userId()"
  desc: "Get the userId value."
  returns:
    description: "the userId value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withAnswerSpanRequest(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTOAnswerSpanRequest)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withAnswerSpanRequest(QueryDTOAnswerSpanRequest answerSpanRequest)"
  name: "withAnswerSpanRequest(QueryDTOAnswerSpanRequest answerSpanRequest)"
  nameWithType: "QueryDTO.withAnswerSpanRequest(QueryDTOAnswerSpanRequest answerSpanRequest)"
  summary: "Set the answer<wbr>Span<wbr>Request value."
  parameters:
  - description: "the answerSpanRequest value to set"
    name: "answerSpanRequest"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTOAnswerSpanRequest?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTOAnswerSpanRequest&text=QueryDTOAnswerSpanRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryDTO withAnswerSpanRequest(QueryDTOAnswerSpanRequest answerSpanRequest)"
  desc: "Set the answerSpanRequest value."
  returns:
    description: "the QueryDTO object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO&text=QueryDTO\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withContext(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTOContext)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withContext(QueryDTOContext context)"
  name: "withContext(QueryDTOContext context)"
  nameWithType: "QueryDTO.withContext(QueryDTOContext context)"
  summary: "Set the context value."
  parameters:
  - description: "the context value to set"
    name: "context"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTOContext?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTOContext&text=QueryDTOContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryDTO withContext(QueryDTOContext context)"
  desc: "Set the context value."
  returns:
    description: "the QueryDTO object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO&text=QueryDTO\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withIsTest(java.lang.Boolean)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withIsTest(Boolean isTest)"
  name: "withIsTest(Boolean isTest)"
  nameWithType: "QueryDTO.withIsTest(Boolean isTest)"
  summary: "Set the is<wbr>Test value."
  parameters:
  - description: "the isTest value to set"
    name: "isTest"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryDTO withIsTest(Boolean isTest)"
  desc: "Set the isTest value."
  returns:
    description: "the QueryDTO object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO&text=QueryDTO\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withQnaId(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withQnaId(String qnaId)"
  name: "withQnaId(String qnaId)"
  nameWithType: "QueryDTO.withQnaId(String qnaId)"
  summary: "Set the qna<wbr>Id value."
  parameters:
  - description: "the qnaId value to set"
    name: "qnaId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryDTO withQnaId(String qnaId)"
  desc: "Set the qnaId value."
  returns:
    description: "the QueryDTO object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO&text=QueryDTO\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withQuestion(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withQuestion(String question)"
  name: "withQuestion(String question)"
  nameWithType: "QueryDTO.withQuestion(String question)"
  summary: "Set the question value."
  parameters:
  - description: "the question value to set"
    name: "question"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryDTO withQuestion(String question)"
  desc: "Set the question value."
  returns:
    description: "the QueryDTO object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO&text=QueryDTO\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withRankerType(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withRankerType(String rankerType)"
  name: "withRankerType(String rankerType)"
  nameWithType: "QueryDTO.withRankerType(String rankerType)"
  summary: "Set the ranker<wbr>Type value."
  parameters:
  - description: "the rankerType value to set"
    name: "rankerType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryDTO withRankerType(String rankerType)"
  desc: "Set the rankerType value."
  returns:
    description: "the QueryDTO object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO&text=QueryDTO\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withScoreThreshold(java.lang.Double)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withScoreThreshold(Double scoreThreshold)"
  name: "withScoreThreshold(Double scoreThreshold)"
  nameWithType: "QueryDTO.withScoreThreshold(Double scoreThreshold)"
  summary: "Set the score<wbr>Threshold value."
  parameters:
  - description: "the scoreThreshold value to set"
    name: "scoreThreshold"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryDTO withScoreThreshold(Double scoreThreshold)"
  desc: "Set the scoreThreshold value."
  returns:
    description: "the QueryDTO object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO&text=QueryDTO\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withStrictFilters(java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.MetadataDTO>)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withStrictFilters(List<MetadataDTO> strictFilters)"
  name: "withStrictFilters(List<MetadataDTO> strictFilters)"
  nameWithType: "QueryDTO.withStrictFilters(List<MetadataDTO> strictFilters)"
  summary: "Set the strict<wbr>Filters value."
  parameters:
  - description: "the strictFilters value to set"
    name: "strictFilters"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.MetadataDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.MetadataDTO&text=MetadataDTO\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public QueryDTO withStrictFilters(List<MetadataDTO> strictFilters)"
  desc: "Set the strictFilters value."
  returns:
    description: "the QueryDTO object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO&text=QueryDTO\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withStrictFiltersCompoundOperationType(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.StrictFiltersCompoundOperationType)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withStrictFiltersCompoundOperationType(StrictFiltersCompoundOperationType strictFiltersCompoundOperationType)"
  name: "withStrictFiltersCompoundOperationType(StrictFiltersCompoundOperationType strictFiltersCompoundOperationType)"
  nameWithType: "QueryDTO.withStrictFiltersCompoundOperationType(StrictFiltersCompoundOperationType strictFiltersCompoundOperationType)"
  summary: "Set the strict<wbr>Filters<wbr>Compound<wbr>Operation<wbr>Type value."
  parameters:
  - description: "the strictFiltersCompoundOperationType value to set"
    name: "strictFiltersCompoundOperationType"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.StrictFiltersCompoundOperationType?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.StrictFiltersCompoundOperationType&text=StrictFiltersCompoundOperationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryDTO withStrictFiltersCompoundOperationType(StrictFiltersCompoundOperationType strictFiltersCompoundOperationType)"
  desc: "Set the strictFiltersCompoundOperationType value."
  returns:
    description: "the QueryDTO object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO&text=QueryDTO\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withTop(java.lang.Integer)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withTop(Integer top)"
  name: "withTop(Integer top)"
  nameWithType: "QueryDTO.withTop(Integer top)"
  summary: "Set the top value."
  parameters:
  - description: "the top value to set"
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryDTO withTop(Integer top)"
  desc: "Set the top value."
  returns:
    description: "the QueryDTO object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO&text=QueryDTO\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withUserId(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO.withUserId(String userId)"
  name: "withUserId(String userId)"
  nameWithType: "QueryDTO.withUserId(String userId)"
  summary: "Set the user<wbr>Id value."
  parameters:
  - description: "the userId value to set"
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryDTO withUserId(String userId)"
  desc: "Set the userId value."
  returns:
    description: "the QueryDTO object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO&text=QueryDTO\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "POST body schema to query the knowledgebase."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
