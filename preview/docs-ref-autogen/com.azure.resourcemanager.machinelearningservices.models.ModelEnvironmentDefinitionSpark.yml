### YamlMime:JavaType
uid: "com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark"
fullName: "com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark"
name: "ModelEnvironmentDefinitionSpark"
nameWithType: "ModelEnvironmentDefinitionSpark"
summary: "The configuration for a Spark environment."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.machinelearningservices.models.ModelSparkSection?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.machinelearningservices.models.ModelSparkSection.packages()"
- "com.azure.resourcemanager.machinelearningservices.models.ModelSparkSection.precachePackages()"
- "com.azure.resourcemanager.machinelearningservices.models.ModelSparkSection.repositories()"
- "com.azure.resourcemanager.machinelearningservices.models.ModelSparkSection.validate()"
- "com.azure.resourcemanager.machinelearningservices.models.ModelSparkSection.withPackages(java.util.List<com.azure.resourcemanager.machinelearningservices.models.SparkMavenPackage>)"
- "com.azure.resourcemanager.machinelearningservices.models.ModelSparkSection.withPrecachePackages(java.lang.Boolean)"
- "com.azure.resourcemanager.machinelearningservices.models.ModelSparkSection.withRepositories(java.util.List<java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ModelEnvironmentDefinitionSpark extends ModelSparkSection"
constructors:
- uid: "com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark.ModelEnvironmentDefinitionSpark()"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark.ModelEnvironmentDefinitionSpark()"
  name: "ModelEnvironmentDefinitionSpark()"
  nameWithType: "ModelEnvironmentDefinitionSpark.ModelEnvironmentDefinitionSpark()"
  syntax: "public ModelEnvironmentDefinitionSpark()"
methods:
- uid: "com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark.validate()"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark.validate()"
  name: "validate()"
  nameWithType: "ModelEnvironmentDefinitionSpark.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.machinelearningservices.models.ModelSparkSection.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark.withPackages(java.util.List<com.azure.resourcemanager.machinelearningservices.models.SparkMavenPackage>)"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark.withPackages(List<SparkMavenPackage> packages)"
  name: "withPackages(List<SparkMavenPackage> packages)"
  nameWithType: "ModelEnvironmentDefinitionSpark.withPackages(List<SparkMavenPackage> packages)"
  summary: "Set the packages property: The Spark packages to use."
  overridden: "com.azure.resourcemanager.machinelearningservices.models.ModelSparkSection.withPackages(java.util.List<com.azure.resourcemanager.machinelearningservices.models.SparkMavenPackage>)"
  parameters:
  - name: "packages"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.machinelearningservices.models.SparkMavenPackage?alt=com.azure.resourcemanager.machinelearningservices.models.SparkMavenPackage&text=SparkMavenPackage\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ModelEnvironmentDefinitionSpark withPackages(List<SparkMavenPackage> packages)"
  desc: "Set the packages property: The Spark packages to use."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark?alt=com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark&text=ModelEnvironmentDefinitionSpark\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark.withPrecachePackages(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark.withPrecachePackages(Boolean precachePackages)"
  name: "withPrecachePackages(Boolean precachePackages)"
  nameWithType: "ModelEnvironmentDefinitionSpark.withPrecachePackages(Boolean precachePackages)"
  summary: "Set the precache<wbr>Packages property: Whether to precache the packages."
  overridden: "com.azure.resourcemanager.machinelearningservices.models.ModelSparkSection.withPrecachePackages(java.lang.Boolean)"
  parameters:
  - name: "precachePackages"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ModelEnvironmentDefinitionSpark withPrecachePackages(Boolean precachePackages)"
  desc: "Set the precachePackages property: Whether to precache the packages."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark?alt=com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark&text=ModelEnvironmentDefinitionSpark\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark.withRepositories(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark.withRepositories(List<String> repositories)"
  name: "withRepositories(List<String> repositories)"
  nameWithType: "ModelEnvironmentDefinitionSpark.withRepositories(List<String> repositories)"
  summary: "Set the repositories property: The list of spark repositories."
  overridden: "com.azure.resourcemanager.machinelearningservices.models.ModelSparkSection.withRepositories(java.util.List<java.lang.String>)"
  parameters:
  - name: "repositories"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ModelEnvironmentDefinitionSpark withRepositories(List<String> repositories)"
  desc: "Set the repositories property: The list of spark repositories."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark?alt=com.azure.resourcemanager.machinelearningservices.models.ModelEnvironmentDefinitionSpark&text=ModelEnvironmentDefinitionSpark\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The configuration for a Spark environment."
metadata: {}
package: "com.azure.resourcemanager.machinelearningservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-machinelearningservices:1.0.0-beta.1
