### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.format.DataFormatDetector.withOptimalMatch*"
fullName: "com.fasterxml.jackson.core.format.DataFormatDetector.withOptimalMatch"
name: "withOptimalMatch"
nameWithType: "DataFormatDetector.withOptimalMatch"
members:
- uid: "com.fasterxml.jackson.core.format.DataFormatDetector.withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength)"
  fullName: "com.fasterxml.jackson.core.format.DataFormatDetector.withOptimalMatch(MatchStrength optMatch)"
  name: "withOptimalMatch(MatchStrength optMatch)"
  nameWithType: "DataFormatDetector.withOptimalMatch(MatchStrength optMatch)"
  summary: "Method that will return a detector instance that uses given optimal match level (match that is considered sufficient to return, without trying to find stronger matches with other formats)."
  parameters:
  - name: "optMatch"
    type: "<xref href=\"com.fasterxml.jackson.core.format.MatchStrength?alt=com.fasterxml.jackson.core.format.MatchStrength&text=MatchStrength\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataFormatDetector withOptimalMatch(MatchStrength optMatch)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.format.DataFormatDetector?alt=com.fasterxml.jackson.core.format.DataFormatDetector&text=DataFormatDetector\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.format"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
