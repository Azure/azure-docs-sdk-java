### YamlMime:JavaMember
uid: "com.azure.data.tables.TableServiceAsyncClient.createTableIfNotExistsWithResponse*"
fullName: "com.azure.data.tables.TableServiceAsyncClient.createTableIfNotExistsWithResponse"
name: "createTableIfNotExistsWithResponse"
nameWithType: "TableServiceAsyncClient.createTableIfNotExistsWithResponse"
members:
- uid: "com.azure.data.tables.TableServiceAsyncClient.createTableIfNotExistsWithResponse(java.lang.String)"
  fullName: "com.azure.data.tables.TableServiceAsyncClient.createTableIfNotExistsWithResponse(String tableName)"
  name: "createTableIfNotExistsWithResponse(String tableName)"
  nameWithType: "TableServiceAsyncClient.createTableIfNotExistsWithResponse(String tableName)"
  summary: "Creates a table within the Tables service if the table does not already exist."
  parameters:
  - description: "The name of the table to create."
    name: "tableName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<TableAsyncClient>> createTableIfNotExistsWithResponse(String tableName)"
  returns:
    description: "A reactive result containing the HTTP response and a <xref uid=\"com.azure.data.tables.TableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableClient\"></xref> for the created table."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.tables.TableAsyncClient?alt=com.azure.data.tables.TableAsyncClient&text=TableAsyncClient\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.data.tables"
artifact: com.azure:azure-data-tables:12.0.0-beta.7
