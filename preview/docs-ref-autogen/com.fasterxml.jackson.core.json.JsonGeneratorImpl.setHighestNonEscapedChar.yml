### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.json.JsonGeneratorImpl.setHighestNonEscapedChar*"
fullName: "com.fasterxml.jackson.core.json.JsonGeneratorImpl.setHighestNonEscapedChar"
name: "setHighestNonEscapedChar"
nameWithType: "JsonGeneratorImpl.setHighestNonEscapedChar"
members:
- uid: "com.fasterxml.jackson.core.json.JsonGeneratorImpl.setHighestNonEscapedChar(int)"
  fullName: "com.fasterxml.jackson.core.json.JsonGeneratorImpl.setHighestNonEscapedChar(int charCode)"
  name: "setHighestNonEscapedChar(int charCode)"
  nameWithType: "JsonGeneratorImpl.setHighestNonEscapedChar(int charCode)"
  summary: "Method that can be called to request that generator escapes all character codes above specified code point (if positive value); or, to not escape any characters except for ones that must be escaped for the data format (if -1). To force escaping of all non-ASCII characters, for example, this method would be called with value of 127.\n\nNote that generators are NOT required to support setting of value higher than 127, because there are other ways to affect quoting (or lack thereof) of character codes between 0 and 127. Not all generators support concept of escaping, either; if so, calling this method will have no effect.\n\nDefault implementation does nothing; sub-classes need to redefine it according to rules of supported data format."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.setHighestNonEscapedChar(int)"
  parameters:
  - name: "charCode"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonGenerator setHighestNonEscapedChar(int charCode)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.json"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
