### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService"
fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService"
name: "AzureBlobFSLinkedService"
nameWithType: "AzureBlobFSLinkedService"
summary: "Azure Data Lake Storage Gen2 linked service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedService?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.LinkedService.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.annotations()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.connectVia()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.description()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.parameters()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzureBlobFSLinkedService extends LinkedService"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.AzureBlobFSLinkedService()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.AzureBlobFSLinkedService()"
  name: "AzureBlobFSLinkedService()"
  nameWithType: "AzureBlobFSLinkedService.AzureBlobFSLinkedService()"
  syntax: "public AzureBlobFSLinkedService()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.accountKey()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.accountKey()"
  name: "accountKey()"
  nameWithType: "AzureBlobFSLinkedService.accountKey()"
  summary: "Get the account<wbr>Key property: Account key for the Azure Data Lake Storage Gen2 service."
  syntax: "public Object accountKey()"
  desc: "Get the accountKey property: Account key for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string)."
  returns:
    description: "the accountKey value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.azureCloudType()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.azureCloudType()"
  name: "azureCloudType()"
  nameWithType: "AzureBlobFSLinkedService.azureCloudType()"
  summary: "Get the azure<wbr>Cloud<wbr>Type property: Indicates the azure cloud type of the service principle auth."
  syntax: "public Object azureCloudType()"
  desc: "Get the azureCloudType property: Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions\\\\u2019 cloud type. Type: string (or Expression with resultType string)."
  returns:
    description: "the azureCloudType value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.credential()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.credential()"
  name: "credential()"
  nameWithType: "AzureBlobFSLinkedService.credential()"
  summary: "Get the credential property: The credential reference containing authentication information."
  syntax: "public CredentialReference credential()"
  desc: "Get the credential property: The credential reference containing authentication information."
  returns:
    description: "the credential value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "AzureBlobFSLinkedService.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public Object encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.servicePrincipalCredential()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.servicePrincipalCredential()"
  name: "servicePrincipalCredential()"
  nameWithType: "AzureBlobFSLinkedService.servicePrincipalCredential()"
  summary: "Get the service<wbr>Principal<wbr>Credential property: The credential of the service principal object in Azure Active Directory."
  syntax: "public SecretBase servicePrincipalCredential()"
  desc: "Get the servicePrincipalCredential property: The credential of the service principal object in Azure Active Directory. If servicePrincipalCredentialType is 'ServicePrincipalKey', servicePrincipalCredential can be SecureString or AzureKeyVaultSecretReference. If servicePrincipalCredentialType is 'ServicePrincipalCert', servicePrincipalCredential can only be AzureKeyVaultSecretReference."
  returns:
    description: "the servicePrincipalCredential value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.servicePrincipalCredentialType()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.servicePrincipalCredentialType()"
  name: "servicePrincipalCredentialType()"
  nameWithType: "AzureBlobFSLinkedService.servicePrincipalCredentialType()"
  summary: "Get the service<wbr>Principal<wbr>Credential<wbr>Type property: The service principal credential type to use in Server-To-Server authentication."
  syntax: "public Object servicePrincipalCredentialType()"
  desc: "Get the servicePrincipalCredentialType property: The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string)."
  returns:
    description: "the servicePrincipalCredentialType value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.servicePrincipalId()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.servicePrincipalId()"
  name: "servicePrincipalId()"
  nameWithType: "AzureBlobFSLinkedService.servicePrincipalId()"
  summary: "Get the service<wbr>Principal<wbr>Id property: The ID of the application used to authenticate against the Azure Data Lake Storage Gen2 account."
  syntax: "public Object servicePrincipalId()"
  desc: "Get the servicePrincipalId property: The ID of the application used to authenticate against the Azure Data Lake Storage Gen2 account. Type: string (or Expression with resultType string)."
  returns:
    description: "the servicePrincipalId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.servicePrincipalKey()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.servicePrincipalKey()"
  name: "servicePrincipalKey()"
  nameWithType: "AzureBlobFSLinkedService.servicePrincipalKey()"
  summary: "Get the service<wbr>Principal<wbr>Key property: The Key of the application used to authenticate against the Azure Data Lake Storage Gen2 account."
  syntax: "public SecretBase servicePrincipalKey()"
  desc: "Get the servicePrincipalKey property: The Key of the application used to authenticate against the Azure Data Lake Storage Gen2 account."
  returns:
    description: "the servicePrincipalKey value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.tenant()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.tenant()"
  name: "tenant()"
  nameWithType: "AzureBlobFSLinkedService.tenant()"
  summary: "Get the tenant property: The name or ID of the tenant to which the service principal belongs."
  syntax: "public Object tenant()"
  desc: "Get the tenant property: The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
  returns:
    description: "the tenant value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.url()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.url()"
  name: "url()"
  nameWithType: "AzureBlobFSLinkedService.url()"
  summary: "Get the url property: Endpoint for the Azure Data Lake Storage Gen2 service."
  syntax: "public Object url()"
  desc: "Get the url property: Endpoint for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string)."
  returns:
    description: "the url value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.validate()"
  name: "validate()"
  nameWithType: "AzureBlobFSLinkedService.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withAccountKey(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withAccountKey(Object accountKey)"
  name: "withAccountKey(Object accountKey)"
  nameWithType: "AzureBlobFSLinkedService.withAccountKey(Object accountKey)"
  summary: "Set the account<wbr>Key property: Account key for the Azure Data Lake Storage Gen2 service."
  parameters:
  - description: "the accountKey value to set."
    name: "accountKey"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureBlobFSLinkedService withAccountKey(Object accountKey)"
  desc: "Set the accountKey property: Account key for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureBlobFSLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService&text=AzureBlobFSLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "AzureBlobFSLinkedService.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AzureBlobFSLinkedService withAnnotations(List<Object> annotations)"
  desc: "Set the annotations property: List of tags that can be used for describing the linked service."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService&text=AzureBlobFSLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withAzureCloudType(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withAzureCloudType(Object azureCloudType)"
  name: "withAzureCloudType(Object azureCloudType)"
  nameWithType: "AzureBlobFSLinkedService.withAzureCloudType(Object azureCloudType)"
  summary: "Set the azure<wbr>Cloud<wbr>Type property: Indicates the azure cloud type of the service principle auth."
  parameters:
  - description: "the azureCloudType value to set."
    name: "azureCloudType"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureBlobFSLinkedService withAzureCloudType(Object azureCloudType)"
  desc: "Set the azureCloudType property: Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions\\\\u2019 cloud type. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureBlobFSLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService&text=AzureBlobFSLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  name: "withConnectVia(IntegrationRuntimeReference connectVia)"
  nameWithType: "AzureBlobFSLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  summary: "Set the connect<wbr>Via property: The integration runtime reference."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  parameters:
  - name: "connectVia"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference?alt=com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference&text=IntegrationRuntimeReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureBlobFSLinkedService withConnectVia(IntegrationRuntimeReference connectVia)"
  desc: "Set the connectVia property: The integration runtime reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService&text=AzureBlobFSLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withCredential(com.azure.resourcemanager.datafactory.models.CredentialReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withCredential(CredentialReference credential)"
  name: "withCredential(CredentialReference credential)"
  nameWithType: "AzureBlobFSLinkedService.withCredential(CredentialReference credential)"
  summary: "Set the credential property: The credential reference containing authentication information."
  parameters:
  - description: "the credential value to set."
    name: "credential"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureBlobFSLinkedService withCredential(CredentialReference credential)"
  desc: "Set the credential property: The credential reference containing authentication information."
  returns:
    description: "the AzureBlobFSLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService&text=AzureBlobFSLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "AzureBlobFSLinkedService.withDescription(String description)"
  summary: "Set the description property: Linked service description."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureBlobFSLinkedService withDescription(String description)"
  desc: "Set the description property: Linked service description."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService&text=AzureBlobFSLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "AzureBlobFSLinkedService.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureBlobFSLinkedService withEncryptedCredential(Object encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureBlobFSLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService&text=AzureBlobFSLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  name: "withParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "AzureBlobFSLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: Parameters for linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AzureBlobFSLinkedService withParameters(Map<String,ParameterSpecification> parameters)"
  desc: "Set the parameters property: Parameters for linked service."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService&text=AzureBlobFSLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withServicePrincipalCredential(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withServicePrincipalCredential(SecretBase servicePrincipalCredential)"
  name: "withServicePrincipalCredential(SecretBase servicePrincipalCredential)"
  nameWithType: "AzureBlobFSLinkedService.withServicePrincipalCredential(SecretBase servicePrincipalCredential)"
  summary: "Set the service<wbr>Principal<wbr>Credential property: The credential of the service principal object in Azure Active Directory."
  parameters:
  - description: "the servicePrincipalCredential value to set."
    name: "servicePrincipalCredential"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureBlobFSLinkedService withServicePrincipalCredential(SecretBase servicePrincipalCredential)"
  desc: "Set the servicePrincipalCredential property: The credential of the service principal object in Azure Active Directory. If servicePrincipalCredentialType is 'ServicePrincipalKey', servicePrincipalCredential can be SecureString or AzureKeyVaultSecretReference. If servicePrincipalCredentialType is 'ServicePrincipalCert', servicePrincipalCredential can only be AzureKeyVaultSecretReference."
  returns:
    description: "the AzureBlobFSLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService&text=AzureBlobFSLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withServicePrincipalCredentialType(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withServicePrincipalCredentialType(Object servicePrincipalCredentialType)"
  name: "withServicePrincipalCredentialType(Object servicePrincipalCredentialType)"
  nameWithType: "AzureBlobFSLinkedService.withServicePrincipalCredentialType(Object servicePrincipalCredentialType)"
  summary: "Set the service<wbr>Principal<wbr>Credential<wbr>Type property: The service principal credential type to use in Server-To-Server authentication."
  parameters:
  - description: "the servicePrincipalCredentialType value to set."
    name: "servicePrincipalCredentialType"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureBlobFSLinkedService withServicePrincipalCredentialType(Object servicePrincipalCredentialType)"
  desc: "Set the servicePrincipalCredentialType property: The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureBlobFSLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService&text=AzureBlobFSLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withServicePrincipalId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withServicePrincipalId(Object servicePrincipalId)"
  name: "withServicePrincipalId(Object servicePrincipalId)"
  nameWithType: "AzureBlobFSLinkedService.withServicePrincipalId(Object servicePrincipalId)"
  summary: "Set the service<wbr>Principal<wbr>Id property: The ID of the application used to authenticate against the Azure Data Lake Storage Gen2 account."
  parameters:
  - description: "the servicePrincipalId value to set."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureBlobFSLinkedService withServicePrincipalId(Object servicePrincipalId)"
  desc: "Set the servicePrincipalId property: The ID of the application used to authenticate against the Azure Data Lake Storage Gen2 account. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureBlobFSLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService&text=AzureBlobFSLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withServicePrincipalKey(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withServicePrincipalKey(SecretBase servicePrincipalKey)"
  name: "withServicePrincipalKey(SecretBase servicePrincipalKey)"
  nameWithType: "AzureBlobFSLinkedService.withServicePrincipalKey(SecretBase servicePrincipalKey)"
  summary: "Set the service<wbr>Principal<wbr>Key property: The Key of the application used to authenticate against the Azure Data Lake Storage Gen2 account."
  parameters:
  - description: "the servicePrincipalKey value to set."
    name: "servicePrincipalKey"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureBlobFSLinkedService withServicePrincipalKey(SecretBase servicePrincipalKey)"
  desc: "Set the servicePrincipalKey property: The Key of the application used to authenticate against the Azure Data Lake Storage Gen2 account."
  returns:
    description: "the AzureBlobFSLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService&text=AzureBlobFSLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withTenant(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withTenant(Object tenant)"
  name: "withTenant(Object tenant)"
  nameWithType: "AzureBlobFSLinkedService.withTenant(Object tenant)"
  summary: "Set the tenant property: The name or ID of the tenant to which the service principal belongs."
  parameters:
  - description: "the tenant value to set."
    name: "tenant"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureBlobFSLinkedService withTenant(Object tenant)"
  desc: "Set the tenant property: The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureBlobFSLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService&text=AzureBlobFSLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withUrl(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService.withUrl(Object url)"
  name: "withUrl(Object url)"
  nameWithType: "AzureBlobFSLinkedService.withUrl(Object url)"
  summary: "Set the url property: Endpoint for the Azure Data Lake Storage Gen2 service."
  parameters:
  - description: "the url value to set."
    name: "url"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureBlobFSLinkedService withUrl(Object url)"
  desc: "Set the url property: Endpoint for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureBlobFSLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureBlobFSLinkedService&text=AzureBlobFSLinkedService\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Azure Data Lake Storage Gen2 linked service."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
