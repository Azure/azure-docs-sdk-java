### YamlMime:JavaEnum
uid: "com.azure.cosmos.implementation.AuthorizationTokenType"
fullName: "com.azure.cosmos.implementation.AuthorizationTokenType"
name: "AuthorizationTokenType"
nameWithType: "AuthorizationTokenType"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum AuthorizationTokenType extends Enum<AuthorizationTokenType>"
fields:
- uid: "com.azure.cosmos.implementation.AuthorizationTokenType.Invalid"
  fullName: "com.azure.cosmos.implementation.AuthorizationTokenType.Invalid"
  name: "Invalid"
  nameWithType: "AuthorizationTokenType.Invalid"
- uid: "com.azure.cosmos.implementation.AuthorizationTokenType.PrimaryMasterKey"
  fullName: "com.azure.cosmos.implementation.AuthorizationTokenType.PrimaryMasterKey"
  name: "PrimaryMasterKey"
  nameWithType: "AuthorizationTokenType.PrimaryMasterKey"
- uid: "com.azure.cosmos.implementation.AuthorizationTokenType.PrimaryReadonlyMasterKey"
  fullName: "com.azure.cosmos.implementation.AuthorizationTokenType.PrimaryReadonlyMasterKey"
  name: "PrimaryReadonlyMasterKey"
  nameWithType: "AuthorizationTokenType.PrimaryReadonlyMasterKey"
- uid: "com.azure.cosmos.implementation.AuthorizationTokenType.ResourceToken"
  fullName: "com.azure.cosmos.implementation.AuthorizationTokenType.ResourceToken"
  name: "ResourceToken"
  nameWithType: "AuthorizationTokenType.ResourceToken"
- uid: "com.azure.cosmos.implementation.AuthorizationTokenType.SecondaryMasterKey"
  fullName: "com.azure.cosmos.implementation.AuthorizationTokenType.SecondaryMasterKey"
  name: "SecondaryMasterKey"
  nameWithType: "AuthorizationTokenType.SecondaryMasterKey"
- uid: "com.azure.cosmos.implementation.AuthorizationTokenType.SecondaryReadonlyMasterKey"
  fullName: "com.azure.cosmos.implementation.AuthorizationTokenType.SecondaryReadonlyMasterKey"
  name: "SecondaryReadonlyMasterKey"
  nameWithType: "AuthorizationTokenType.SecondaryReadonlyMasterKey"
- uid: "com.azure.cosmos.implementation.AuthorizationTokenType.SystemAll"
  fullName: "com.azure.cosmos.implementation.AuthorizationTokenType.SystemAll"
  name: "SystemAll"
  nameWithType: "AuthorizationTokenType.SystemAll"
- uid: "com.azure.cosmos.implementation.AuthorizationTokenType.SystemReadOnly"
  fullName: "com.azure.cosmos.implementation.AuthorizationTokenType.SystemReadOnly"
  name: "SystemReadOnly"
  nameWithType: "AuthorizationTokenType.SystemReadOnly"
- uid: "com.azure.cosmos.implementation.AuthorizationTokenType.SystemReadWrite"
  fullName: "com.azure.cosmos.implementation.AuthorizationTokenType.SystemReadWrite"
  name: "SystemReadWrite"
  nameWithType: "AuthorizationTokenType.SystemReadWrite"
methods:
- uid: "com.azure.cosmos.implementation.AuthorizationTokenType.valueOf(java.lang.String)"
  fullName: "com.azure.cosmos.implementation.AuthorizationTokenType.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "AuthorizationTokenType.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AuthorizationTokenType valueOf(String name)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.AuthorizationTokenType?alt=com.azure.cosmos.implementation.AuthorizationTokenType&text=AuthorizationTokenType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.AuthorizationTokenType.values()"
  fullName: "com.azure.cosmos.implementation.AuthorizationTokenType.values()"
  name: "values()"
  nameWithType: "AuthorizationTokenType.values()"
  syntax: "public static AuthorizationTokenType[] values()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.AuthorizationTokenType?alt=com.azure.cosmos.implementation.AuthorizationTokenType&text=AuthorizationTokenType\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.azure.cosmos.implementation"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
