### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.of*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>of"
name: "<E>of"
nameWithType: "ImmutableSortedSet<E>.<E>of"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.<E>of()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>of()"
  name: "<E>of()"
  nameWithType: "ImmutableSortedSet<E>.<E>of()"
  summary: "Returns the empty immutable sorted set."
  syntax: "public static ImmutableSortedSet<E> <E>of()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet&text=ImmutableSortedSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.<E>of(E)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>of(E element)"
  name: "<E>of(E element)"
  nameWithType: "ImmutableSortedSet<E>.<E>of(E element)"
  summary: "Returns an immutable sorted set containing a single element."
  parameters:
  - name: "element"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImmutableSortedSet<E> <E>of(E element)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet&text=ImmutableSortedSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.<E>of(E,E)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>of(E e1, E e2)"
  name: "<E>of(E e1, E e2)"
  nameWithType: "ImmutableSortedSet<E>.<E>of(E e1, E e2)"
  summary: "Returns an immutable sorted set containing the given elements sorted by their natural ordering. When multiple elements are equivalent according to <xref uid=\"java.lang.Comparable.compareTo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparable#compareTo\"></xref>, only the first one specified is included."
  parameters:
  - name: "e1"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e2"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImmutableSortedSet<E> <E>of(E e1, E e2)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet&text=ImmutableSortedSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.<E>of(E,E,E)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>of(E e1, E e2, E e3)"
  name: "<E>of(E e1, E e2, E e3)"
  nameWithType: "ImmutableSortedSet<E>.<E>of(E e1, E e2, E e3)"
  summary: "Returns an immutable sorted set containing the given elements sorted by their natural ordering. When multiple elements are equivalent according to <xref uid=\"java.lang.Comparable.compareTo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparable#compareTo\"></xref>, only the first one specified is included."
  parameters:
  - name: "e1"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e2"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e3"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImmutableSortedSet<E> <E>of(E e1, E e2, E e3)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet&text=ImmutableSortedSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.<E>of(E,E,E,E)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>of(E e1, E e2, E e3, E e4)"
  name: "<E>of(E e1, E e2, E e3, E e4)"
  nameWithType: "ImmutableSortedSet<E>.<E>of(E e1, E e2, E e3, E e4)"
  summary: "Returns an immutable sorted set containing the given elements sorted by their natural ordering. When multiple elements are equivalent according to <xref uid=\"java.lang.Comparable.compareTo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparable#compareTo\"></xref>, only the first one specified is included."
  parameters:
  - name: "e1"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e2"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e3"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e4"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImmutableSortedSet<E> <E>of(E e1, E e2, E e3, E e4)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet&text=ImmutableSortedSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.<E>of(E,E,E,E,E)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>of(E e1, E e2, E e3, E e4, E e5)"
  name: "<E>of(E e1, E e2, E e3, E e4, E e5)"
  nameWithType: "ImmutableSortedSet<E>.<E>of(E e1, E e2, E e3, E e4, E e5)"
  summary: "Returns an immutable sorted set containing the given elements sorted by their natural ordering. When multiple elements are equivalent according to <xref uid=\"java.lang.Comparable.compareTo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparable#compareTo\"></xref>, only the first one specified is included."
  parameters:
  - name: "e1"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e2"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e3"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e4"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e5"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImmutableSortedSet<E> <E>of(E e1, E e2, E e3, E e4, E e5)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet&text=ImmutableSortedSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.<E>of(E,E,E,E,E,E,E...)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E[] remaining)"
  name: "<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E[] remaining)"
  nameWithType: "ImmutableSortedSet<E>.<E>of(E e1, E e2, E e3, E e4, E e5, E e6, E[] remaining)"
  summary: "Returns an immutable sorted set containing the given elements sorted by their natural ordering. When multiple elements are equivalent according to <xref uid=\"java.lang.Comparable.compareTo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparable#compareTo\"></xref>, only the first one specified is included."
  parameters:
  - name: "e1"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e2"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e3"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e4"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e5"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "e6"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - name: "remaining"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static ImmutableSortedSet<E> <E>of(E e1, E e2, E e3, E e4, E e5, E e6, E[] remaining)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet&text=ImmutableSortedSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
