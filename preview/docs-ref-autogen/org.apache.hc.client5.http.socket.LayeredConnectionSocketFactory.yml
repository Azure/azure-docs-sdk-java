### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.socket.LayeredConnectionSocketFactory
  id: LayeredConnectionSocketFactory
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.socket
  children:
  - org.apache.hc.client5.http.socket.LayeredConnectionSocketFactory.createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.hc.core5.http.protocol.HttpContext)
  langs:
  - java
  name: LayeredConnectionSocketFactory
  nameWithType: LayeredConnectionSocketFactory
  fullName: org.apache.hc.client5.http.socket.LayeredConnectionSocketFactory
  type: Interface
  package: org.apache.hc.client5.http.socket
  summary: Extended <xref uid="org.apache.hc.client5.http.socket.ConnectionSocketFactory" data-throw-if-not-resolved="false">ConnectionSocketFactory</xref> interface for layered sockets such as SSL/TLS.
  syntax:
    content: public interface LayeredConnectionSocketFactory extends ConnectionSocketFactory
  implements:
  - org.apache.hc.client5.http.socket.ConnectionSocketFactory
- uid: org.apache.hc.client5.http.socket.LayeredConnectionSocketFactory.createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.hc.core5.http.protocol.HttpContext)
  id: createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.socket.LayeredConnectionSocketFactory
  langs:
  - java
  name: createLayeredSocket(Socket socket, String target, int port, HttpContext context)
  nameWithType: LayeredConnectionSocketFactory.createLayeredSocket(Socket socket, String target, int port, HttpContext context)
  fullName: org.apache.hc.client5.http.socket.LayeredConnectionSocketFactory.createLayeredSocket(Socket socket, String target, int port, HttpContext context)
  overload: org.apache.hc.client5.http.socket.LayeredConnectionSocketFactory.createLayeredSocket*
  type: Method
  package: org.apache.hc.client5.http.socket
  summary: Returns a socket connected to the given host that is layered over an existing socket. Used primarily for creating secure sockets through proxies.
  syntax:
    content: public abstract Socket createLayeredSocket(Socket socket, String target, int port, HttpContext context)
    parameters:
    - id: socket
      type: java.net.Socket
      description: the existing socket
    - id: target
      type: java.lang.String
      description: the name of the target host.
    - id: port
      type: int
      description: the port to connect to on the target host.
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: the actual HTTP context.
    return:
      type: java.net.Socket
      description: Socket a new socket
  exceptions:
  - type: java.io.IOException
    description: if an I/O error occurs while creating the socket
references:
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.net.Socket
  spec.java:
  - uid: java.net.Socket
    name: Socket
    fullName: java.net.Socket
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: org.apache.hc.client5.http.socket.LayeredConnectionSocketFactory.createLayeredSocket*
  name: createLayeredSocket
  nameWithType: LayeredConnectionSocketFactory.createLayeredSocket
  fullName: org.apache.hc.client5.http.socket.LayeredConnectionSocketFactory.createLayeredSocket
  package: org.apache.hc.client5.http.socket
- uid: org.apache.hc.client5.http.socket.ConnectionSocketFactory
  name: ConnectionSocketFactory
  nameWithType: ConnectionSocketFactory
  fullName: org.apache.hc.client5.http.socket.ConnectionSocketFactory
