### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.KqlScriptsAsyncClient"
fullName: "com.azure.analytics.synapse.artifacts.KqlScriptsAsyncClient"
name: "KqlScriptsAsyncClient"
nameWithType: "KqlScriptsAsyncClient"
summary: "Initializes a new instance of the asynchronous Artifacts<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class KqlScriptsAsyncClient"
methods:
- uid: "com.azure.analytics.synapse.artifacts.KqlScriptsAsyncClient.getAll()"
  fullName: "com.azure.analytics.synapse.artifacts.KqlScriptsAsyncClient.getAll()"
  name: "getAll()"
  nameWithType: "KqlScriptsAsyncClient.getAll()"
  summary: "Get all KQL scripts."
  syntax: "public PagedFlux<KqlScriptResource> getAll()"
  desc: "Get all KQL scripts."
  returns:
    description: "all KQL scripts as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.KqlScriptResource?alt=com.azure.analytics.synapse.artifacts.models.KqlScriptResource&text=KqlScriptResource\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous ArtifactsClient type."
metadata: {}
package: "com.azure.analytics.synapse.artifacts"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
