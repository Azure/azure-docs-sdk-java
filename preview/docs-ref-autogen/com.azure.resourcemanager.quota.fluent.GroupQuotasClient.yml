### YamlMime:JavaType
uid: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient"
fullName: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient"
name: "GroupQuotasClient"
nameWithType: "GroupQuotasClient"
summary: "An instance of this class provides access to all the operations defined in Group<wbr>Quotas<wbr>Client."
syntax: "public interface **GroupQuotasClient**"
methods:
- uid: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.beginCreateOrUpdate(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.beginCreateOrUpdate(String managementGroupId, String groupQuotaName)"
  name: "beginCreateOrUpdate(String managementGroupId, String groupQuotaName)"
  nameWithType: "GroupQuotasClient.beginCreateOrUpdate(String managementGroupId, String groupQuotaName)"
  summary: "Creates a new Group<wbr>Quota for the name passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management Group Id."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuota name. The name should be unique for the provided context tenantId/MgId."
    name: "groupQuotaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract SyncPoller<PollResult<ProxyResource>,ProxyResource> beginCreateOrUpdate(String managementGroupId, String groupQuotaName)"
  desc: "Creates a new GroupQuota for the name passed. Creates a new GroupQuota for the name passed. A RequestId will be returned by the Service. The status can be polled periodically. The status Async polling is using standards defined at - https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md\\#asynchronous-operations. Use the OperationsStatus URI provided in Azure-AsyncOperation header, the duration will be specified in retry-after header. Once the operation gets to terminal state - Succeeded | Failed, then the URI will change to Get URI and full details can be checked."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of properties and filters for ShareQuota."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.ProxyResource?alt=com.azure.core.management.ProxyResource&text=ProxyResource\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.core.management.ProxyResource?alt=com.azure.core.management.ProxyResource&text=ProxyResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.beginCreateOrUpdate(String managementGroupId, String groupQuotaName, GroupQuotasEntityInner groupQuotaPutRequestBody, Context context)"
  name: "beginCreateOrUpdate(String managementGroupId, String groupQuotaName, GroupQuotasEntityInner groupQuotaPutRequestBody, Context context)"
  nameWithType: "GroupQuotasClient.beginCreateOrUpdate(String managementGroupId, String groupQuotaName, GroupQuotasEntityInner groupQuotaPutRequestBody, Context context)"
  summary: "Creates a new Group<wbr>Quota for the name passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management Group Id."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuota name. The name should be unique for the provided context tenantId/MgId."
    name: "groupQuotaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuota body details for creation or update of a GroupQuota entity."
    name: "groupQuotaPutRequestBody"
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner?alt=com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner&text=GroupQuotasEntityInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<ProxyResource>,ProxyResource> beginCreateOrUpdate(String managementGroupId, String groupQuotaName, GroupQuotasEntityInner groupQuotaPutRequestBody, Context context)"
  desc: "Creates a new GroupQuota for the name passed. Creates a new GroupQuota for the name passed. A RequestId will be returned by the Service. The status can be polled periodically. The status Async polling is using standards defined at - https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md\\#asynchronous-operations. Use the OperationsStatus URI provided in Azure-AsyncOperation header, the duration will be specified in retry-after header. Once the operation gets to terminal state - Succeeded | Failed, then the URI will change to Get URI and full details can be checked."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of properties and filters for ShareQuota."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.ProxyResource?alt=com.azure.core.management.ProxyResource&text=ProxyResource\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.core.management.ProxyResource?alt=com.azure.core.management.ProxyResource&text=ProxyResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.beginDelete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.beginDelete(String managementGroupId, String groupQuotaName)"
  name: "beginDelete(String managementGroupId, String groupQuotaName)"
  nameWithType: "GroupQuotasClient.beginDelete(String managementGroupId, String groupQuotaName)"
  summary: "Deletes Group<wbr>Quotas for the name passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management Group Id."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuota name. The name should be unique for the provided context tenantId/MgId."
    name: "groupQuotaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String managementGroupId, String groupQuotaName)"
  desc: "Deletes GroupQuotas for the name passed. Deletes the GroupQuotas for the name passed. All the remaining shareQuota in the GroupQuotas will be lost."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.beginDelete(String managementGroupId, String groupQuotaName, Context context)"
  name: "beginDelete(String managementGroupId, String groupQuotaName, Context context)"
  nameWithType: "GroupQuotasClient.beginDelete(String managementGroupId, String groupQuotaName, Context context)"
  summary: "Deletes Group<wbr>Quotas for the name passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management Group Id."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuota name. The name should be unique for the provided context tenantId/MgId."
    name: "groupQuotaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String managementGroupId, String groupQuotaName, Context context)"
  desc: "Deletes GroupQuotas for the name passed. Deletes the GroupQuotas for the name passed. All the remaining shareQuota in the GroupQuotas will be lost."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.beginUpdate(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.beginUpdate(String managementGroupId, String groupQuotaName)"
  name: "beginUpdate(String managementGroupId, String groupQuotaName)"
  nameWithType: "GroupQuotasClient.beginUpdate(String managementGroupId, String groupQuotaName)"
  summary: "Updates a new Group<wbr>Quotas for the name passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management Group Id."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuota name. The name should be unique for the provided context tenantId/MgId."
    name: "groupQuotaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract SyncPoller<PollResult<GroupQuotasEntityInner>,GroupQuotasEntityInner> beginUpdate(String managementGroupId, String groupQuotaName)"
  desc: "Updates a new GroupQuotas for the name passed. Updates the GroupQuotas for the name passed. A GroupQuotas RequestId will be returned by the Service. The status can be polled periodically. The status Async polling is using standards defined at - https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md\\#asynchronous-operations. Use the OperationsStatus URI provided in Azure-AsyncOperation header, the duration will be specified in retry-after header. Once the operation gets to terminal state - Succeeded | Failed, then the URI will change to Get URI and full details can be checked. Any change in the filters will be applicable to the future quota assignments, existing quota allocated to subscriptions from the GroupQuotas remains unchanged."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of properties and filters for ShareQuota."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner?alt=com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner&text=GroupQuotasEntityInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner?alt=com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner&text=GroupQuotasEntityInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.quota.models.GroupQuotasEntityPatch,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.beginUpdate(String managementGroupId, String groupQuotaName, GroupQuotasEntityPatch groupQuotasPatchRequestBody, Context context)"
  name: "beginUpdate(String managementGroupId, String groupQuotaName, GroupQuotasEntityPatch groupQuotasPatchRequestBody, Context context)"
  nameWithType: "GroupQuotasClient.beginUpdate(String managementGroupId, String groupQuotaName, GroupQuotasEntityPatch groupQuotasPatchRequestBody, Context context)"
  summary: "Updates a new Group<wbr>Quotas for the name passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management Group Id."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuota name. The name should be unique for the provided context tenantId/MgId."
    name: "groupQuotaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuotas Patch Request."
    name: "groupQuotasPatchRequestBody"
    type: "<xref href=\"com.azure.resourcemanager.quota.models.GroupQuotasEntityPatch?alt=com.azure.resourcemanager.quota.models.GroupQuotasEntityPatch&text=GroupQuotasEntityPatch\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<GroupQuotasEntityInner>,GroupQuotasEntityInner> beginUpdate(String managementGroupId, String groupQuotaName, GroupQuotasEntityPatch groupQuotasPatchRequestBody, Context context)"
  desc: "Updates a new GroupQuotas for the name passed. Updates the GroupQuotas for the name passed. A GroupQuotas RequestId will be returned by the Service. The status can be polled periodically. The status Async polling is using standards defined at - https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md\\#asynchronous-operations. Use the OperationsStatus URI provided in Azure-AsyncOperation header, the duration will be specified in retry-after header. Once the operation gets to terminal state - Succeeded | Failed, then the URI will change to Get URI and full details can be checked. Any change in the filters will be applicable to the future quota assignments, existing quota allocated to subscriptions from the GroupQuotas remains unchanged."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of properties and filters for ShareQuota."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner?alt=com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner&text=GroupQuotasEntityInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner?alt=com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner&text=GroupQuotasEntityInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.createOrUpdate(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.createOrUpdate(String managementGroupId, String groupQuotaName)"
  name: "createOrUpdate(String managementGroupId, String groupQuotaName)"
  nameWithType: "GroupQuotasClient.createOrUpdate(String managementGroupId, String groupQuotaName)"
  summary: "Creates a new Group<wbr>Quota for the name passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management Group Id."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuota name. The name should be unique for the provided context tenantId/MgId."
    name: "groupQuotaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract ProxyResource createOrUpdate(String managementGroupId, String groupQuotaName)"
  desc: "Creates a new GroupQuota for the name passed. Creates a new GroupQuota for the name passed. A RequestId will be returned by the Service. The status can be polled periodically. The status Async polling is using standards defined at - https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md\\#asynchronous-operations. Use the OperationsStatus URI provided in Azure-AsyncOperation header, the duration will be specified in retry-after header. Once the operation gets to terminal state - Succeeded | Failed, then the URI will change to Get URI and full details can be checked."
  returns:
    description: "properties and filters for ShareQuota."
    type: "<xref href=\"com.azure.core.management.ProxyResource?alt=com.azure.core.management.ProxyResource&text=ProxyResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.createOrUpdate(String managementGroupId, String groupQuotaName, GroupQuotasEntityInner groupQuotaPutRequestBody, Context context)"
  name: "createOrUpdate(String managementGroupId, String groupQuotaName, GroupQuotasEntityInner groupQuotaPutRequestBody, Context context)"
  nameWithType: "GroupQuotasClient.createOrUpdate(String managementGroupId, String groupQuotaName, GroupQuotasEntityInner groupQuotaPutRequestBody, Context context)"
  summary: "Creates a new Group<wbr>Quota for the name passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management Group Id."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuota name. The name should be unique for the provided context tenantId/MgId."
    name: "groupQuotaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuota body details for creation or update of a GroupQuota entity."
    name: "groupQuotaPutRequestBody"
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner?alt=com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner&text=GroupQuotasEntityInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ProxyResource createOrUpdate(String managementGroupId, String groupQuotaName, GroupQuotasEntityInner groupQuotaPutRequestBody, Context context)"
  desc: "Creates a new GroupQuota for the name passed. Creates a new GroupQuota for the name passed. A RequestId will be returned by the Service. The status can be polled periodically. The status Async polling is using standards defined at - https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md\\#asynchronous-operations. Use the OperationsStatus URI provided in Azure-AsyncOperation header, the duration will be specified in retry-after header. Once the operation gets to terminal state - Succeeded | Failed, then the URI will change to Get URI and full details can be checked."
  returns:
    description: "properties and filters for ShareQuota."
    type: "<xref href=\"com.azure.core.management.ProxyResource?alt=com.azure.core.management.ProxyResource&text=ProxyResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.delete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.delete(String managementGroupId, String groupQuotaName)"
  name: "delete(String managementGroupId, String groupQuotaName)"
  nameWithType: "GroupQuotasClient.delete(String managementGroupId, String groupQuotaName)"
  summary: "Deletes Group<wbr>Quotas for the name passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management Group Id."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuota name. The name should be unique for the provided context tenantId/MgId."
    name: "groupQuotaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void delete(String managementGroupId, String groupQuotaName)"
  desc: "Deletes GroupQuotas for the name passed. Deletes the GroupQuotas for the name passed. All the remaining shareQuota in the GroupQuotas will be lost."
- uid: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.delete(String managementGroupId, String groupQuotaName, Context context)"
  name: "delete(String managementGroupId, String groupQuotaName, Context context)"
  nameWithType: "GroupQuotasClient.delete(String managementGroupId, String groupQuotaName, Context context)"
  summary: "Deletes Group<wbr>Quotas for the name passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management Group Id."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuota name. The name should be unique for the provided context tenantId/MgId."
    name: "groupQuotaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String managementGroupId, String groupQuotaName, Context context)"
  desc: "Deletes GroupQuotas for the name passed. Deletes the GroupQuotas for the name passed. All the remaining shareQuota in the GroupQuotas will be lost."
- uid: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.get(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.get(String managementGroupId, String groupQuotaName)"
  name: "get(String managementGroupId, String groupQuotaName)"
  nameWithType: "GroupQuotasClient.get(String managementGroupId, String groupQuotaName)"
  summary: "Gets Group<wbr>Quotas for the name passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management Group Id."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuota name. The name should be unique for the provided context tenantId/MgId."
    name: "groupQuotaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract GroupQuotasEntityInner get(String managementGroupId, String groupQuotaName)"
  desc: "Gets GroupQuotas for the name passed. Gets the GroupQuotas for the name passed. It will return the GroupQuotas properties only. The details on group quota can be access from the group quota APIs."
  returns:
    description: "the GroupQuotas for the name passed."
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner?alt=com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner&text=GroupQuotasEntityInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.getWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.getWithResponse(String managementGroupId, String groupQuotaName, Context context)"
  name: "getWithResponse(String managementGroupId, String groupQuotaName, Context context)"
  nameWithType: "GroupQuotasClient.getWithResponse(String managementGroupId, String groupQuotaName, Context context)"
  summary: "Gets Group<wbr>Quotas for the name passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management Group Id."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuota name. The name should be unique for the provided context tenantId/MgId."
    name: "groupQuotaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<GroupQuotasEntityInner> getWithResponse(String managementGroupId, String groupQuotaName, Context context)"
  desc: "Gets GroupQuotas for the name passed. Gets the GroupQuotas for the name passed. It will return the GroupQuotas properties only. The details on group quota can be access from the group quota APIs."
  returns:
    description: "the GroupQuotas for the name passed along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner?alt=com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner&text=GroupQuotasEntityInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.list(java.lang.String)"
  fullName: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.list(String managementGroupId)"
  name: "list(String managementGroupId)"
  nameWithType: "GroupQuotasClient.list(String managementGroupId)"
  summary: "Lists Group<wbr>Quotas for the scope passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management Group Id."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<GroupQuotasEntityInner> list(String managementGroupId)"
  desc: "Lists GroupQuotas for the scope passed. Lists GroupQuotas for the scope passed. It will return the GroupQuotas QuotaEntity properties only.The details on group quota can be access from the group quota APIs."
  returns:
    description: "list of Group Quotas at MG level as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner?alt=com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner&text=GroupQuotasEntityInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.list(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.list(String managementGroupId, Context context)"
  name: "list(String managementGroupId, Context context)"
  nameWithType: "GroupQuotasClient.list(String managementGroupId, Context context)"
  summary: "Lists Group<wbr>Quotas for the scope passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management Group Id."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<GroupQuotasEntityInner> list(String managementGroupId, Context context)"
  desc: "Lists GroupQuotas for the scope passed. Lists GroupQuotas for the scope passed. It will return the GroupQuotas QuotaEntity properties only.The details on group quota can be access from the group quota APIs."
  returns:
    description: "list of Group Quotas at MG level as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner?alt=com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner&text=GroupQuotasEntityInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.update(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.update(String managementGroupId, String groupQuotaName)"
  name: "update(String managementGroupId, String groupQuotaName)"
  nameWithType: "GroupQuotasClient.update(String managementGroupId, String groupQuotaName)"
  summary: "Updates a new Group<wbr>Quotas for the name passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management Group Id."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuota name. The name should be unique for the provided context tenantId/MgId."
    name: "groupQuotaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract GroupQuotasEntityInner update(String managementGroupId, String groupQuotaName)"
  desc: "Updates a new GroupQuotas for the name passed. Updates the GroupQuotas for the name passed. A GroupQuotas RequestId will be returned by the Service. The status can be polled periodically. The status Async polling is using standards defined at - https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md\\#asynchronous-operations. Use the OperationsStatus URI provided in Azure-AsyncOperation header, the duration will be specified in retry-after header. Once the operation gets to terminal state - Succeeded | Failed, then the URI will change to Get URI and full details can be checked. Any change in the filters will be applicable to the future quota assignments, existing quota allocated to subscriptions from the GroupQuotas remains unchanged."
  returns:
    description: "properties and filters for ShareQuota."
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner?alt=com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner&text=GroupQuotasEntityInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.quota.models.GroupQuotasEntityPatch,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.fluent.GroupQuotasClient.update(String managementGroupId, String groupQuotaName, GroupQuotasEntityPatch groupQuotasPatchRequestBody, Context context)"
  name: "update(String managementGroupId, String groupQuotaName, GroupQuotasEntityPatch groupQuotasPatchRequestBody, Context context)"
  nameWithType: "GroupQuotasClient.update(String managementGroupId, String groupQuotaName, GroupQuotasEntityPatch groupQuotasPatchRequestBody, Context context)"
  summary: "Updates a new Group<wbr>Quotas for the name passed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management Group Id."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuota name. The name should be unique for the provided context tenantId/MgId."
    name: "groupQuotaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The GroupQuotas Patch Request."
    name: "groupQuotasPatchRequestBody"
    type: "<xref href=\"com.azure.resourcemanager.quota.models.GroupQuotasEntityPatch?alt=com.azure.resourcemanager.quota.models.GroupQuotasEntityPatch&text=GroupQuotasEntityPatch\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract GroupQuotasEntityInner update(String managementGroupId, String groupQuotaName, GroupQuotasEntityPatch groupQuotasPatchRequestBody, Context context)"
  desc: "Updates a new GroupQuotas for the name passed. Updates the GroupQuotas for the name passed. A GroupQuotas RequestId will be returned by the Service. The status can be polled periodically. The status Async polling is using standards defined at - https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md\\#asynchronous-operations. Use the OperationsStatus URI provided in Azure-AsyncOperation header, the duration will be specified in retry-after header. Once the operation gets to terminal state - Succeeded | Failed, then the URI will change to Get URI and full details can be checked. Any change in the filters will be applicable to the future quota assignments, existing quota allocated to subscriptions from the GroupQuotas remains unchanged."
  returns:
    description: "properties and filters for ShareQuota."
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner?alt=com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner&text=GroupQuotasEntityInner\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in GroupQuotasClient."
metadata: {}
package: "com.azure.resourcemanager.quota.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-quota:1.1.0-beta.1
