### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ObjectReader
  id: ObjectReader
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind
  children:
  - com.fasterxml.jackson.databind.ObjectReader.<T>_bindAndReadValues(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.ObjectReader.<T>_detectBindAndReadValues(com.fasterxml.jackson.databind.deser.DataFormatReaders.Match,boolean)
  - com.fasterxml.jackson.databind.ObjectReader.<T>_newIterator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JsonDeserializer<?>,boolean)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readTree(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(byte[])
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(byte[],int,int)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(byte[],int,int,java.lang.Class<T>)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(byte[],java.lang.Class<T>)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(com.fasterxml.jackson.databind.JsonNode)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(com.fasterxml.jackson.databind.JsonNode,java.lang.Class<T>)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.io.DataInput)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.io.DataInput,java.lang.Class<T>)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.io.File)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.io.File,java.lang.Class<T>)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.io.InputStream)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.io.InputStream,java.lang.Class<T>)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.io.Reader)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.io.Reader,java.lang.Class<T>)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.lang.String)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.lang.String,java.lang.Class<T>)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.net.URL)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.net.URL,java.lang.Class<T>)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValues(byte[])
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValues(byte[],int,int)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValues(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValues(java.io.DataInput)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValues(java.io.File)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValues(java.io.InputStream)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValues(java.io.Reader)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValues(java.lang.String)
  - com.fasterxml.jackson.databind.ObjectReader.<T>readValues(java.net.URL)
  - com.fasterxml.jackson.databind.ObjectReader.<T>treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class<T>)
  - com.fasterxml.jackson.databind.ObjectReader.ObjectReader(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig)
  - com.fasterxml.jackson.databind.ObjectReader.ObjectReader(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues)
  - com.fasterxml.jackson.databind.ObjectReader.ObjectReader(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.JsonFactory)
  - com.fasterxml.jackson.databind.ObjectReader.ObjectReader(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.filter.TokenFilter)
  - com.fasterxml.jackson.databind.ObjectReader.ObjectReader(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig)
  - com.fasterxml.jackson.databind.ObjectReader.ObjectReader(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues,com.fasterxml.jackson.databind.deser.DataFormatReaders)
  - com.fasterxml.jackson.databind.ObjectReader._assertNotNull(java.lang.String,java.lang.Object)
  - com.fasterxml.jackson.databind.ObjectReader._bind(com.fasterxml.jackson.core.JsonParser,java.lang.Object)
  - com.fasterxml.jackson.databind.ObjectReader._bindAndClose(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.ObjectReader._bindAndCloseAsTree(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.ObjectReader._bindAsTree(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.ObjectReader._bindAsTreeOrNull(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.ObjectReader._config
  - com.fasterxml.jackson.databind.ObjectReader._considerFilter(com.fasterxml.jackson.core.JsonParser,boolean)
  - com.fasterxml.jackson.databind.ObjectReader._context
  - com.fasterxml.jackson.databind.ObjectReader._dataFormatReaders
  - com.fasterxml.jackson.databind.ObjectReader._detectBindAndClose(byte[],int,int)
  - com.fasterxml.jackson.databind.ObjectReader._detectBindAndClose(com.fasterxml.jackson.databind.deser.DataFormatReaders.Match,boolean)
  - com.fasterxml.jackson.databind.ObjectReader._detectBindAndCloseAsTree(java.io.InputStream)
  - com.fasterxml.jackson.databind.ObjectReader._findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.ObjectReader._findTreeDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.ObjectReader._initForMultiRead(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.ObjectReader._initForReading(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.ObjectReader._injectableValues
  - com.fasterxml.jackson.databind.ObjectReader._inputStream(java.io.File)
  - com.fasterxml.jackson.databind.ObjectReader._inputStream(java.net.URL)
  - com.fasterxml.jackson.databind.ObjectReader._jsonNodeType
  - com.fasterxml.jackson.databind.ObjectReader._jsonNodeType()
  - com.fasterxml.jackson.databind.ObjectReader._new(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.JsonFactory)
  - com.fasterxml.jackson.databind.ObjectReader._new(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig)
  - com.fasterxml.jackson.databind.ObjectReader._new(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues,com.fasterxml.jackson.databind.deser.DataFormatReaders)
  - com.fasterxml.jackson.databind.ObjectReader._parserFactory
  - com.fasterxml.jackson.databind.ObjectReader._prefetchRootDeserializer(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ObjectReader._reportUndetectableSource(java.lang.Object)
  - com.fasterxml.jackson.databind.ObjectReader._reportUnkownFormat(com.fasterxml.jackson.databind.deser.DataFormatReaders,com.fasterxml.jackson.databind.deser.DataFormatReaders.Match)
  - com.fasterxml.jackson.databind.ObjectReader._rootDeserializer
  - com.fasterxml.jackson.databind.ObjectReader._rootDeserializers
  - com.fasterxml.jackson.databind.ObjectReader._schema
  - com.fasterxml.jackson.databind.ObjectReader._unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ObjectReader._unwrapRoot
  - com.fasterxml.jackson.databind.ObjectReader._valueToUpdate
  - com.fasterxml.jackson.databind.ObjectReader._valueType
  - com.fasterxml.jackson.databind.ObjectReader._verifyNoTrailingTokens(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ObjectReader._verifySchemaType(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.databind.ObjectReader._with(com.fasterxml.jackson.databind.DeserializationConfig)
  - com.fasterxml.jackson.databind.ObjectReader.at(com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.databind.ObjectReader.at(java.lang.String)
  - com.fasterxml.jackson.databind.ObjectReader.createArrayNode()
  - com.fasterxml.jackson.databind.ObjectReader.createDeserializationContext(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.ObjectReader.createNonBlockingByteArrayParser()
  - com.fasterxml.jackson.databind.ObjectReader.createObjectNode()
  - com.fasterxml.jackson.databind.ObjectReader.createParser(byte[])
  - com.fasterxml.jackson.databind.ObjectReader.createParser(byte[],int,int)
  - com.fasterxml.jackson.databind.ObjectReader.createParser(char[])
  - com.fasterxml.jackson.databind.ObjectReader.createParser(char[],int,int)
  - com.fasterxml.jackson.databind.ObjectReader.createParser(java.io.DataInput)
  - com.fasterxml.jackson.databind.ObjectReader.createParser(java.io.File)
  - com.fasterxml.jackson.databind.ObjectReader.createParser(java.io.InputStream)
  - com.fasterxml.jackson.databind.ObjectReader.createParser(java.io.Reader)
  - com.fasterxml.jackson.databind.ObjectReader.createParser(java.lang.String)
  - com.fasterxml.jackson.databind.ObjectReader.createParser(java.net.URL)
  - com.fasterxml.jackson.databind.ObjectReader.forType(com.fasterxml.jackson.core.type.TypeReference<?>)
  - com.fasterxml.jackson.databind.ObjectReader.forType(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ObjectReader.forType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ObjectReader.getAttributes()
  - com.fasterxml.jackson.databind.ObjectReader.getConfig()
  - com.fasterxml.jackson.databind.ObjectReader.getFactory()
  - com.fasterxml.jackson.databind.ObjectReader.getInjectableValues()
  - com.fasterxml.jackson.databind.ObjectReader.getTypeFactory()
  - com.fasterxml.jackson.databind.ObjectReader.getValueType()
  - com.fasterxml.jackson.databind.ObjectReader.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.databind.ObjectReader.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
  - com.fasterxml.jackson.databind.ObjectReader.isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
  - com.fasterxml.jackson.databind.ObjectReader.isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  - com.fasterxml.jackson.databind.ObjectReader.missingNode()
  - com.fasterxml.jackson.databind.ObjectReader.nullNode()
  - com.fasterxml.jackson.databind.ObjectReader.readTree(byte[])
  - com.fasterxml.jackson.databind.ObjectReader.readTree(byte[],int,int)
  - com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.DataInput)
  - com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.InputStream)
  - com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.Reader)
  - com.fasterxml.jackson.databind.ObjectReader.readTree(java.lang.String)
  - com.fasterxml.jackson.databind.ObjectReader.treeAsTokens(com.fasterxml.jackson.core.TreeNode)
  - com.fasterxml.jackson.databind.ObjectReader.version()
  - com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.core.FormatFeature)
  - com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.core.JsonFactory)
  - com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.core.StreamReadFeature)
  - com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.databind.DeserializationConfig)
  - com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.databind.DeserializationFeature)
  - com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature...)
  - com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.databind.InjectableValues)
  - com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.databind.cfg.ContextAttributes)
  - com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.databind.node.JsonNodeFactory)
  - com.fasterxml.jackson.databind.ObjectReader.with(java.util.Locale)
  - com.fasterxml.jackson.databind.ObjectReader.with(java.util.TimeZone)
  - com.fasterxml.jackson.databind.ObjectReader.withAttribute(java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.ObjectReader.withAttributes(java.util.Map<?,?>)
  - com.fasterxml.jackson.databind.ObjectReader.withFeatures(com.fasterxml.jackson.core.FormatFeature...)
  - com.fasterxml.jackson.databind.ObjectReader.withFeatures(com.fasterxml.jackson.core.JsonParser.Feature...)
  - com.fasterxml.jackson.databind.ObjectReader.withFeatures(com.fasterxml.jackson.databind.DeserializationFeature...)
  - com.fasterxml.jackson.databind.ObjectReader.withFormatDetection(com.fasterxml.jackson.databind.ObjectReader...)
  - com.fasterxml.jackson.databind.ObjectReader.withFormatDetection(com.fasterxml.jackson.databind.deser.DataFormatReaders)
  - com.fasterxml.jackson.databind.ObjectReader.withHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler)
  - com.fasterxml.jackson.databind.ObjectReader.withRootName(com.fasterxml.jackson.databind.PropertyName)
  - com.fasterxml.jackson.databind.ObjectReader.withRootName(java.lang.String)
  - com.fasterxml.jackson.databind.ObjectReader.withType(com.fasterxml.jackson.core.type.TypeReference<?>)
  - com.fasterxml.jackson.databind.ObjectReader.withType(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ObjectReader.withType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ObjectReader.withType(java.lang.reflect.Type)
  - com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate(java.lang.Object)
  - com.fasterxml.jackson.databind.ObjectReader.withView(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ObjectReader.without(com.fasterxml.jackson.core.FormatFeature)
  - com.fasterxml.jackson.databind.ObjectReader.without(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.databind.ObjectReader.without(com.fasterxml.jackson.core.StreamReadFeature)
  - com.fasterxml.jackson.databind.ObjectReader.without(com.fasterxml.jackson.databind.DeserializationFeature)
  - com.fasterxml.jackson.databind.ObjectReader.without(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature...)
  - com.fasterxml.jackson.databind.ObjectReader.withoutAttribute(java.lang.Object)
  - com.fasterxml.jackson.databind.ObjectReader.withoutFeatures(com.fasterxml.jackson.core.FormatFeature...)
  - com.fasterxml.jackson.databind.ObjectReader.withoutFeatures(com.fasterxml.jackson.core.JsonParser.Feature...)
  - com.fasterxml.jackson.databind.ObjectReader.withoutFeatures(com.fasterxml.jackson.databind.DeserializationFeature...)
  - com.fasterxml.jackson.databind.ObjectReader.withoutRootName()
  - com.fasterxml.jackson.databind.ObjectReader.writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode)
  - com.fasterxml.jackson.databind.ObjectReader.writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
  langs:
  - java
  name: ObjectReader
  nameWithType: ObjectReader
  fullName: com.fasterxml.jackson.databind.ObjectReader
  type: Class
  package: com.fasterxml.jackson.databind
  summary: >-
    Builder object that can be used for per-serialization configuration of deserialization parameters, such as root type to use or object to update (instead of constructing new instance).


    Uses "mutant factory" pattern so that instances are immutable (and thus fully thread-safe with no external synchronization); new instances are constructed for different configurations. Instances are initially constructed by <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref> and can be reused, shared, cached; both because of thread-safety and because instances are relatively light-weight.


    NOTE: this class is NOT meant as sub-classable (with Jackson 2.8 and above) by users. It is left as non-final mostly to allow frameworks that require bytecode generation for proxying and similar use cases, but there is no expecation that functionality should be extended by sub-classing.
  syntax:
    content: public class ObjectReader extends ObjectCodec implements Versioned, Serializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.core.TreeCodec
  - com.fasterxml.jackson.core.ObjectCodec
  implements:
  - com.fasterxml.jackson.core.Versioned
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.core.ObjectCodec.<T>readTree(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  - com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
  - com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  - com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  - com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
  - com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  - com.fasterxml.jackson.core.ObjectCodec.<T>treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class<T>)
  - com.fasterxml.jackson.core.ObjectCodec.createArrayNode()
  - com.fasterxml.jackson.core.ObjectCodec.createObjectNode()
  - com.fasterxml.jackson.core.ObjectCodec.getFactory()
  - com.fasterxml.jackson.core.ObjectCodec.getJsonFactory()
  - com.fasterxml.jackson.core.ObjectCodec.treeAsTokens(com.fasterxml.jackson.core.TreeNode)
  - com.fasterxml.jackson.core.ObjectCodec.version()
  - com.fasterxml.jackson.core.ObjectCodec.writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode)
  - com.fasterxml.jackson.core.ObjectCodec.writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
  - com.fasterxml.jackson.core.TreeCodec.missingNode()
  - com.fasterxml.jackson.core.TreeCodec.nullNode()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>_bindAndReadValues(com.fasterxml.jackson.core.JsonParser)
  id: <T>_bindAndReadValues(com.fasterxml.jackson.core.JsonParser)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>_bindAndReadValues(JsonParser p)
  nameWithType: ObjectReader.<T>_bindAndReadValues(JsonParser p)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>_bindAndReadValues(JsonParser p)
  overload: com.fasterxml.jackson.databind.ObjectReader._bindAndReadValues*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected MappingIterator<T> <T>_bindAndReadValues(JsonParser p)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    return:
      type: com.fasterxml.jackson.databind.MappingIterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>_detectBindAndReadValues(com.fasterxml.jackson.databind.deser.DataFormatReaders.Match,boolean)
  id: <T>_detectBindAndReadValues(com.fasterxml.jackson.databind.deser.DataFormatReaders.Match,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>_detectBindAndReadValues(DataFormatReaders.Match match, boolean forceClosing)
  nameWithType: ObjectReader.<T>_detectBindAndReadValues(DataFormatReaders.Match match, boolean forceClosing)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>_detectBindAndReadValues(DataFormatReaders.Match match, boolean forceClosing)
  overload: com.fasterxml.jackson.databind.ObjectReader._detectBindAndReadValues*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected MappingIterator<T> <T>_detectBindAndReadValues(DataFormatReaders.Match match, boolean forceClosing)
    parameters:
    - id: match
      type: com.fasterxml.jackson.databind.deser.DataFormatReaders.Match
    - id: forceClosing
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.MappingIterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>_newIterator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JsonDeserializer<?>,boolean)
  id: <T>_newIterator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JsonDeserializer<?>,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>_newIterator(JsonParser p, DeserializationContext ctxt, JsonDeserializer<?> deser, boolean parserManaged)
  nameWithType: ObjectReader.<T>_newIterator(JsonParser p, DeserializationContext ctxt, JsonDeserializer<?> deser, boolean parserManaged)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>_newIterator(JsonParser p, DeserializationContext ctxt, JsonDeserializer<?> deser, boolean parserManaged)
  overload: com.fasterxml.jackson.databind.ObjectReader._newIterator*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Factory method used to create <xref uid="com.fasterxml.jackson.databind.MappingIterator" data-throw-if-not-resolved="false">MappingIterator</xref> instances; either default, or custom subtype.
  syntax:
    content: protected MappingIterator<T> <T>_newIterator(JsonParser p, DeserializationContext ctxt, JsonDeserializer<?> deser, boolean parserManaged)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: deser
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    - id: parserManaged
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.MappingIterator<T>
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readTree(com.fasterxml.jackson.core.JsonParser)
  id: <T>readTree(com.fasterxml.jackson.core.JsonParser)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readTree(JsonParser p)
  nameWithType: ObjectReader.<T>readTree(JsonParser p)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readTree(JsonParser p)
  overload: com.fasterxml.jackson.databind.ObjectReader.readTree*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Convenience method that binds content read using given parser, using configuration of this reader, except that content is bound as JSON tree instead of configured root value type. Returns <xref uid="com.fasterxml.jackson.databind.JsonNode" data-throw-if-not-resolved="false">JsonNode</xref> that represents the root of the resulting tree, if there was content to read, or `null` if no more content is accessible via passed <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref>.


    NOTE! Behavior with end-of-input (no more content) differs between this `readTree` method, and all other methods that take input source: latter will return "missing node", NOT `null`


    Note: if an object was specified with <xref uid="com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate*" data-throw-if-not-resolved="false">#withValueToUpdate</xref>, it will be ignored.


    NOTE: this method never tries to auto-detect format, since actual (data-format specific) parser is given.
  syntax:
    content: public T <T>readTree(JsonParser p)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(byte[])
  id: <T>readValue(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(byte[] content)
  nameWithType: ObjectReader.<T>readValue(byte[] content)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(byte[] content)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that binds content read from given byte array, using configuration of this reader. Value return is either newly constructed, or root value that was specified with <xref uid="com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate(java.lang.Object)" data-throw-if-not-resolved="false">#withValueToUpdate(Object)</xref>.
  syntax:
    content: public T <T>readValue(byte[] content)
    parameters:
    - id: content
      type: byte[]
      description: Byte array that contains encoded content to read
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(byte[],int,int)
  id: <T>readValue(byte[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(byte[] buffer, int offset, int length)
  nameWithType: ObjectReader.<T>readValue(byte[] buffer, int offset, int length)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(byte[] buffer, int offset, int length)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that binds content read from given byte array, using configuration of this reader. Value return is either newly constructed, or root value that was specified with <xref uid="com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate(java.lang.Object)" data-throw-if-not-resolved="false">#withValueToUpdate(Object)</xref>.
  syntax:
    content: public T <T>readValue(byte[] buffer, int offset, int length)
    parameters:
    - id: buffer
      type: byte[]
      description: Byte array that contains encoded content to read
    - id: offset
      type: int
      description: Offset of the first content byte in <code>buffer</code>
    - id: length
      type: int
      description: Length of content in <code>buffer</code>, in bytes
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(byte[],int,int,java.lang.Class<T>)
  id: <T>readValue(byte[],int,int,java.lang.Class<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(byte[] buffer, int offset, int length, Class<T> valueType)
  nameWithType: ObjectReader.<T>readValue(byte[] buffer, int offset, int length, Class<T> valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(byte[] buffer, int offset, int length, Class<T> valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Same as <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValue(byte[],int,int)" data-throw-if-not-resolved="false">#readValue(byte[],int,int)</xref> except that target value type overridden as `valueType`
  syntax:
    content: public T <T>readValue(byte[] buffer, int offset, int length, Class<T> valueType)
    parameters:
    - id: buffer
      type: byte[]
      description: Byte array that contains encoded content to read
    - id: offset
      type: int
      description: Offset of the first content byte in <code>buffer</code>
    - id: length
      type: int
      description: Length of content in <code>buffer</code>, in bytes
    - id: valueType
      type: java.lang.Class<T>
      description: Target type to bind content to
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(byte[],java.lang.Class<T>)
  id: <T>readValue(byte[],java.lang.Class<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(byte[] content, Class<T> valueType)
  nameWithType: ObjectReader.<T>readValue(byte[] content, Class<T> valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(byte[] content, Class<T> valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Same as <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValue(byte[])" data-throw-if-not-resolved="false">#readValue(byte[])</xref> except that target value type overridden as `valueType`
  syntax:
    content: public T <T>readValue(byte[] content, Class<T> valueType)
    parameters:
    - id: content
      type: byte[]
      description: Byte array that contains encoded content to read
    - id: valueType
      type: java.lang.Class<T>
      description: Target type to bind content to
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(com.fasterxml.jackson.core.JsonParser)
  id: <T>readValue(com.fasterxml.jackson.core.JsonParser)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(JsonParser p)
  nameWithType: ObjectReader.<T>readValue(JsonParser p)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(JsonParser p)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method that binds content read using given parser, using configuration of this reader, including expected result type. Value return is either newly constructed, or root value that was specified with <xref uid="com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate(java.lang.Object)" data-throw-if-not-resolved="false">#withValueToUpdate(Object)</xref>.


    NOTE: this method never tries to auto-detect format, since actual (data-format specific) parser is given.
  syntax:
    content: public T <T>readValue(JsonParser p)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  id: <T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(JsonParser p, ResolvedType valueType)
  nameWithType: ObjectReader.<T>readValue(JsonParser p, ResolvedType valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(JsonParser p, ResolvedType valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Convenience method that binds content read using given parser, using configuration of this reader, except that expected value type is specified with the call (instead of currently configured root type). Value return is either newly constructed, or root value that was specified with <xref uid="com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate(java.lang.Object)" data-throw-if-not-resolved="false">#withValueToUpdate(Object)</xref>.


    NOTE: this method never tries to auto-detect format, since actual (data-format specific) parser is given.
  syntax:
    content: public T <T>readValue(JsonParser p, ResolvedType valueType)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: valueType
      type: com.fasterxml.jackson.core.type.ResolvedType
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
  id: <T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(JsonParser p, TypeReference<T> valueTypeRef)
  nameWithType: ObjectReader.<T>readValue(JsonParser p, TypeReference<T> valueTypeRef)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(JsonParser p, TypeReference<T> valueTypeRef)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Convenience method that binds content read using given parser, using configuration of this reader, except that expected value type is specified with the call (instead of currently configured root type). Value return is either newly constructed, or root value that was specified with <xref uid="com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate(java.lang.Object)" data-throw-if-not-resolved="false">#withValueToUpdate(Object)</xref>.


    NOTE: this method never tries to auto-detect format, since actual (data-format specific) parser is given.
  syntax:
    content: public T <T>readValue(JsonParser p, TypeReference<T> valueTypeRef)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: valueTypeRef
      type: com.fasterxml.jackson.core.type.TypeReference<T>
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)
  id: <T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(JsonParser p, JavaType valueType)
  nameWithType: ObjectReader.<T>readValue(JsonParser p, JavaType valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(JsonParser p, JavaType valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Type-safe overloaded method, basically alias for <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)" data-throw-if-not-resolved="false">#readValue(JsonParser, ResolvedType)</xref>.


    NOTE: this method never tries to auto-detect format, since actual (data-format specific) parser is given.
  syntax:
    content: public T <T>readValue(JsonParser p, JavaType valueType)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: valueType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  id: <T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(JsonParser p, Class<T> valueType)
  nameWithType: ObjectReader.<T>readValue(JsonParser p, Class<T> valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(JsonParser p, Class<T> valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Convenience method that binds content read using given parser, using configuration of this reader, except that expected value type is specified with the call (instead of currently configured root type). Value return is either newly constructed, or root value that was specified with <xref uid="com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate(java.lang.Object)" data-throw-if-not-resolved="false">#withValueToUpdate(Object)</xref>.


    NOTE: this method never tries to auto-detect format, since actual (data-format specific) parser is given.
  syntax:
    content: public T <T>readValue(JsonParser p, Class<T> valueType)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: valueType
      type: java.lang.Class<T>
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(com.fasterxml.jackson.databind.JsonNode)
  id: <T>readValue(com.fasterxml.jackson.databind.JsonNode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(JsonNode content)
  nameWithType: ObjectReader.<T>readValue(JsonNode content)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(JsonNode content)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Convenience method for converting results from given JSON tree into given value type. Basically short-cut for:


    ```java

    objectReader.readValue(src.traverse())

    ```
  syntax:
    content: public T <T>readValue(JsonNode content)
    parameters:
    - id: content
      type: com.fasterxml.jackson.databind.JsonNode
      description: Tree that contains content to convert
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(com.fasterxml.jackson.databind.JsonNode,java.lang.Class<T>)
  id: <T>readValue(com.fasterxml.jackson.databind.JsonNode,java.lang.Class<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(JsonNode content, Class<T> valueType)
  nameWithType: ObjectReader.<T>readValue(JsonNode content, Class<T> valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(JsonNode content, Class<T> valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Same as <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValue(com.fasterxml.jackson.databind.JsonNode)" data-throw-if-not-resolved="false">#readValue(JsonNode)</xref> except that target value type overridden as `valueType`
  syntax:
    content: public T <T>readValue(JsonNode content, Class<T> valueType)
    parameters:
    - id: content
      type: com.fasterxml.jackson.databind.JsonNode
      description: Tree that contains content to convert
    - id: valueType
      type: java.lang.Class<T>
      description: Target type to convert content to
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.io.DataInput)
  id: <T>readValue(java.io.DataInput)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(DataInput src)
  nameWithType: ObjectReader.<T>readValue(DataInput src)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(DataInput src)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public T <T>readValue(DataInput src)
    parameters:
    - id: src
      type: java.io.DataInput
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.io.DataInput,java.lang.Class<T>)
  id: <T>readValue(java.io.DataInput,java.lang.Class<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(DataInput content, Class<T> valueType)
  nameWithType: ObjectReader.<T>readValue(DataInput content, Class<T> valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(DataInput content, Class<T> valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Same as <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValue(java.io.DataInput)" data-throw-if-not-resolved="false">#readValue(DataInput)</xref> except that target value type overridden as `valueType`
  syntax:
    content: public T <T>readValue(DataInput content, Class<T> valueType)
    parameters:
    - id: content
      type: java.io.DataInput
      description: DataInput that contains content to read
    - id: valueType
      type: java.lang.Class<T>
      description: Target type to bind content to
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.io.File)
  id: <T>readValue(java.io.File)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(File src)
  nameWithType: ObjectReader.<T>readValue(File src)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(File src)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that binds content read from given <xref uid="java.io.File" data-throw-if-not-resolved="false">File</xref> using configuration of this reader. Value return is either newly constructed, or root value that was specified with <xref uid="com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate(java.lang.Object)" data-throw-if-not-resolved="false">#withValueToUpdate(Object)</xref>.
  syntax:
    content: public T <T>readValue(File src)
    parameters:
    - id: src
      type: java.io.File
      description: File that contains content to read
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.io.File,java.lang.Class<T>)
  id: <T>readValue(java.io.File,java.lang.Class<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(File src, Class<T> valueType)
  nameWithType: ObjectReader.<T>readValue(File src, Class<T> valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(File src, Class<T> valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Same as <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValue(java.io.File)" data-throw-if-not-resolved="false">#readValue(File)</xref> except that target value type overridden as `valueType`
  syntax:
    content: public T <T>readValue(File src, Class<T> valueType)
    parameters:
    - id: src
      type: java.io.File
      description: File that contains content to read
    - id: valueType
      type: java.lang.Class<T>
      description: Target type to bind content to
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.io.InputStream)
  id: <T>readValue(java.io.InputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(InputStream src)
  nameWithType: ObjectReader.<T>readValue(InputStream src)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(InputStream src)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that binds content read from given input source, using configuration of this reader. Value return is either newly constructed, or root value that was specified with <xref uid="com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate(java.lang.Object)" data-throw-if-not-resolved="false">#withValueToUpdate(Object)</xref>.
  syntax:
    content: public T <T>readValue(InputStream src)
    parameters:
    - id: src
      type: java.io.InputStream
      description: Source to read content from
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.io.InputStream,java.lang.Class<T>)
  id: <T>readValue(java.io.InputStream,java.lang.Class<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(InputStream src, Class<T> valueType)
  nameWithType: ObjectReader.<T>readValue(InputStream src, Class<T> valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(InputStream src, Class<T> valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Same as <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValue(java.io.InputStream)" data-throw-if-not-resolved="false">#readValue(InputStream)</xref> except that target value type overridden as `valueType`
  syntax:
    content: public T <T>readValue(InputStream src, Class<T> valueType)
    parameters:
    - id: src
      type: java.io.InputStream
      description: Source to read content from
    - id: valueType
      type: java.lang.Class<T>
      description: Target type to bind content to
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.io.Reader)
  id: <T>readValue(java.io.Reader)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(Reader src)
  nameWithType: ObjectReader.<T>readValue(Reader src)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(Reader src)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that binds content read from given input source, using configuration of this reader. Value return is either newly constructed, or root value that was specified with <xref uid="com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate(java.lang.Object)" data-throw-if-not-resolved="false">#withValueToUpdate(Object)</xref>.
  syntax:
    content: public T <T>readValue(Reader src)
    parameters:
    - id: src
      type: java.io.Reader
      description: Source to read content from
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.io.Reader,java.lang.Class<T>)
  id: <T>readValue(java.io.Reader,java.lang.Class<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(Reader src, Class<T> valueType)
  nameWithType: ObjectReader.<T>readValue(Reader src, Class<T> valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(Reader src, Class<T> valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Same as <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValue(java.io.Reader)" data-throw-if-not-resolved="false">#readValue(Reader)</xref> except that target value type overridden as `valueType`
  syntax:
    content: public T <T>readValue(Reader src, Class<T> valueType)
    parameters:
    - id: src
      type: java.io.Reader
      description: Source to read content from
    - id: valueType
      type: java.lang.Class<T>
      description: Target type to bind content to
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.lang.String)
  id: <T>readValue(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(String src)
  nameWithType: ObjectReader.<T>readValue(String src)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(String src)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that binds content read from given JSON string, using configuration of this reader. Value return is either newly constructed, or root value that was specified with <xref uid="com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate(java.lang.Object)" data-throw-if-not-resolved="false">#withValueToUpdate(Object)</xref>.
  syntax:
    content: public T <T>readValue(String src)
    parameters:
    - id: src
      type: java.lang.String
      description: String that contains content to read
    return:
      type: T
  exceptions:
  - type: com.fasterxml.jackson.core.JsonProcessingException
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.lang.String,java.lang.Class<T>)
  id: <T>readValue(java.lang.String,java.lang.Class<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(String src, Class<T> valueType)
  nameWithType: ObjectReader.<T>readValue(String src, Class<T> valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(String src, Class<T> valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Same as <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValue(java.lang.String)" data-throw-if-not-resolved="false">#readValue(String)</xref> except that target value type overridden as `valueType`
  syntax:
    content: public T <T>readValue(String src, Class<T> valueType)
    parameters:
    - id: src
      type: java.lang.String
      description: String that contains content to read
    - id: valueType
      type: java.lang.Class<T>
      description: Target type to bind content to
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.net.URL)
  id: <T>readValue(java.net.URL)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(URL src)
  nameWithType: ObjectReader.<T>readValue(URL src)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(URL src)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method that binds content read from given input source, using configuration of this reader. Value return is either newly constructed, or root value that was specified with <xref uid="com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate(java.lang.Object)" data-throw-if-not-resolved="false">#withValueToUpdate(Object)</xref>.


    NOTE: handling of <xref uid="java.net.URL" data-throw-if-not-resolved="false">java.net.URL</xref> is delegated to <xref uid="com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)" data-throw-if-not-resolved="false">JsonFactory#createParser(java.net.URL)</xref> and usually simply calls <xref uid="java.net.URL.openStream*" data-throw-if-not-resolved="false">java.net.URL#openStream()</xref>, meaning no special handling is done. If different HTTP connection options are needed you will need to create <xref uid="java.io.InputStream" data-throw-if-not-resolved="false">java.io.InputStream</xref> separately.
  syntax:
    content: public T <T>readValue(URL src)
    parameters:
    - id: src
      type: java.net.URL
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(java.net.URL,java.lang.Class<T>)
  id: <T>readValue(java.net.URL,java.lang.Class<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValue(URL src, Class<T> valueType)
  nameWithType: ObjectReader.<T>readValue(URL src, Class<T> valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue(URL src, Class<T> valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Same as <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValue(java.net.URL)" data-throw-if-not-resolved="false">#readValue(URL)</xref> except that target value type overridden as `valueType`
  syntax:
    content: public T <T>readValue(URL src, Class<T> valueType)
    parameters:
    - id: src
      type: java.net.URL
      description: URL pointing to resource that contains content to read
    - id: valueType
      type: java.lang.Class<T>
      description: Target type to bind content to
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(byte[])
  id: <T>readValues(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValues(byte[] src)
  nameWithType: ObjectReader.<T>readValues(byte[] src)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(byte[] src)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValues*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Overloaded version of <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValue(java.io.InputStream)" data-throw-if-not-resolved="false">#readValue(InputStream)</xref>.
  syntax:
    content: public final MappingIterator<T> <T>readValues(byte[] src)
    parameters:
    - id: src
      type: byte[]
    return:
      type: com.fasterxml.jackson.databind.MappingIterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(byte[],int,int)
  id: <T>readValues(byte[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValues(byte[] src, int offset, int length)
  nameWithType: ObjectReader.<T>readValues(byte[] src, int offset, int length)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(byte[] src, int offset, int length)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValues*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Overloaded version of <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValue(java.io.InputStream)" data-throw-if-not-resolved="false">#readValue(InputStream)</xref>.
  syntax:
    content: public MappingIterator<T> <T>readValues(byte[] src, int offset, int length)
    parameters:
    - id: src
      type: byte[]
    - id: offset
      type: int
    - id: length
      type: int
    return:
      type: com.fasterxml.jackson.databind.MappingIterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(com.fasterxml.jackson.core.JsonParser)
  id: <T>readValues(com.fasterxml.jackson.core.JsonParser)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValues(JsonParser p)
  nameWithType: ObjectReader.<T>readValues(JsonParser p)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(JsonParser p)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValues*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for reading sequence of Objects from parser stream.


    Sequence can be either root-level "unwrapped" sequence (without surrounding JSON array), or a sequence contained in a JSON Array. In either case <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> must point to the first token of the first element, OR not point to any token (in which case it is advanced to the next token). This means, specifically, that for wrapped sequences, parser MUST NOT point to the surrounding `START_ARRAY` but rather to the token following it.
  syntax:
    content: public MappingIterator<T> <T>readValues(JsonParser p)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    return:
      type: com.fasterxml.jackson.databind.MappingIterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  id: <T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValues(JsonParser p, ResolvedType valueType)
  nameWithType: ObjectReader.<T>readValues(JsonParser p, ResolvedType valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(JsonParser p, ResolvedType valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValues*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Convenience method that is equivalent to:


    ```java

    withType(valueType).readValues(p);

    ```


    Method reads a sequence of Objects from parser stream. Sequence can be either root-level "unwrapped" sequence (without surrounding JSON array), or a sequence contained in a JSON Array. In either case <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> **MUST** point to the first token of the first element, OR not point to any token (in which case it is advanced to the next token). This means, specifically, that for wrapped sequences, parser MUST NOT point to the surrounding `START_ARRAY` (one that contains values to read) but rather to the token following it which is the first token of the first value to read.


    NOTE: this method never tries to auto-detect format, since actual (data-format specific) parser is given.
  syntax:
    content: public Iterator<T> <T>readValues(JsonParser p, ResolvedType valueType)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: valueType
      type: com.fasterxml.jackson.core.type.ResolvedType
    return:
      type: java.util.Iterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
  id: <T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValues(JsonParser p, TypeReference<T> valueTypeRef)
  nameWithType: ObjectReader.<T>readValues(JsonParser p, TypeReference<T> valueTypeRef)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(JsonParser p, TypeReference<T> valueTypeRef)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValues*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Convenience method that is equivalent to:


    ```java

    withType(valueTypeRef).readValues(p);

    ```


    Method reads a sequence of Objects from parser stream. Sequence can be either root-level "unwrapped" sequence (without surrounding JSON array), or a sequence contained in a JSON Array. In either case <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> **MUST** point to the first token of the first element, OR not point to any token (in which case it is advanced to the next token). This means, specifically, that for wrapped sequences, parser MUST NOT point to the surrounding `START_ARRAY` (one that contains values to read) but rather to the token following it which is the first token of the first value to read.


    NOTE: this method never tries to auto-detect format, since actual (data-format specific) parser is given.
  syntax:
    content: public Iterator<T> <T>readValues(JsonParser p, TypeReference<T> valueTypeRef)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: valueTypeRef
      type: com.fasterxml.jackson.core.type.TypeReference<T>
    return:
      type: java.util.Iterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)
  id: <T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValues(JsonParser p, JavaType valueType)
  nameWithType: ObjectReader.<T>readValues(JsonParser p, JavaType valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(JsonParser p, JavaType valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValues*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Convenience method that is equivalent to:


    ```java

    withType(valueType).readValues(p);

    ```


    Method reads a sequence of Objects from parser stream. Sequence can be either root-level "unwrapped" sequence (without surrounding JSON array), or a sequence contained in a JSON Array. In either case <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> **MUST** point to the first token of the first element, OR not point to any token (in which case it is advanced to the next token). This means, specifically, that for wrapped sequences, parser MUST NOT point to the surrounding `START_ARRAY` (one that contains values to read) but rather to the token following it which is the first token of the first value to read.


    NOTE: this method never tries to auto-detect format, since actual (data-format specific) parser is given.
  syntax:
    content: public Iterator<T> <T>readValues(JsonParser p, JavaType valueType)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: valueType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: java.util.Iterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  id: <T>readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValues(JsonParser p, Class<T> valueType)
  nameWithType: ObjectReader.<T>readValues(JsonParser p, Class<T> valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(JsonParser p, Class<T> valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValues*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Convenience method that is equivalent to:


    ```java

    withType(valueType).readValues(p);

    ```


    Method reads a sequence of Objects from parser stream. Sequence can be either root-level "unwrapped" sequence (without surrounding JSON array), or a sequence contained in a JSON Array. In either case <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> **MUST** point to the first token of the first element, OR not point to any token (in which case it is advanced to the next token). This means, specifically, that for wrapped sequences, parser MUST NOT point to the surrounding `START_ARRAY` (one that contains values to read) but rather to the token following it which is the first token of the first value to read.


    NOTE: this method never tries to auto-detect format, since actual (data-format specific) parser is given.
  syntax:
    content: public Iterator<T> <T>readValues(JsonParser p, Class<T> valueType)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: valueType
      type: java.lang.Class<T>
    return:
      type: java.util.Iterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(java.io.DataInput)
  id: <T>readValues(java.io.DataInput)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValues(DataInput src)
  nameWithType: ObjectReader.<T>readValues(DataInput src)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(DataInput src)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValues*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public MappingIterator<T> <T>readValues(DataInput src)
    parameters:
    - id: src
      type: java.io.DataInput
    return:
      type: com.fasterxml.jackson.databind.MappingIterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(java.io.File)
  id: <T>readValues(java.io.File)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValues(File src)
  nameWithType: ObjectReader.<T>readValues(File src)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(File src)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValues*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Overloaded version of <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValue(java.io.InputStream)" data-throw-if-not-resolved="false">#readValue(InputStream)</xref>.
  syntax:
    content: public MappingIterator<T> <T>readValues(File src)
    parameters:
    - id: src
      type: java.io.File
    return:
      type: com.fasterxml.jackson.databind.MappingIterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(java.io.InputStream)
  id: <T>readValues(java.io.InputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValues(InputStream src)
  nameWithType: ObjectReader.<T>readValues(InputStream src)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(InputStream src)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValues*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for reading sequence of Objects from parser stream.


    Sequence can be either wrapped or unwrapped root-level sequence: wrapped means that the elements are enclosed in JSON Array; and unwrapped that elements are directly accessed at main level. Assumption is that iff the first token of the document is `START_ARRAY`, we have a wrapped sequence; otherwise unwrapped. For wrapped sequences, leading `START_ARRAY` is skipped, so that for both cases, underlying <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> will point to what is expected to be the first token of the first element.


    Note that the wrapped vs unwrapped logic means that it is NOT possible to use this method for reading an unwrapped sequence of elements written as JSON Arrays: to read such sequences, one has to use <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValues(com.fasterxml.jackson.core.JsonParser)" data-throw-if-not-resolved="false">#readValues(JsonParser)</xref>, making sure parser points to the first token of the first element (i.e. the second `START_ARRAY` which is part of the first element).
  syntax:
    content: public MappingIterator<T> <T>readValues(InputStream src)
    parameters:
    - id: src
      type: java.io.InputStream
    return:
      type: com.fasterxml.jackson.databind.MappingIterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(java.io.Reader)
  id: <T>readValues(java.io.Reader)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValues(Reader src)
  nameWithType: ObjectReader.<T>readValues(Reader src)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(Reader src)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValues*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Overloaded version of <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValue(java.io.InputStream)" data-throw-if-not-resolved="false">#readValue(InputStream)</xref>.
  syntax:
    content: public MappingIterator<T> <T>readValues(Reader src)
    parameters:
    - id: src
      type: java.io.Reader
    return:
      type: com.fasterxml.jackson.databind.MappingIterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(java.lang.String)
  id: <T>readValues(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValues(String json)
  nameWithType: ObjectReader.<T>readValues(String json)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(String json)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValues*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Overloaded version of <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValue(java.io.InputStream)" data-throw-if-not-resolved="false">#readValue(InputStream)</xref>.
  syntax:
    content: public MappingIterator<T> <T>readValues(String json)
    parameters:
    - id: json
      type: java.lang.String
      description: String that contains JSON content to parse
    return:
      type: com.fasterxml.jackson.databind.MappingIterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(java.net.URL)
  id: <T>readValues(java.net.URL)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>readValues(URL src)
  nameWithType: ObjectReader.<T>readValues(URL src)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValues(URL src)
  overload: com.fasterxml.jackson.databind.ObjectReader.readValues*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Overloaded version of <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValue(java.io.InputStream)" data-throw-if-not-resolved="false">#readValue(InputStream)</xref>.


    NOTE: handling of <xref uid="java.net.URL" data-throw-if-not-resolved="false">java.net.URL</xref> is delegated to <xref uid="com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)" data-throw-if-not-resolved="false">JsonFactory#createParser(java.net.URL)</xref> and usually simply calls <xref uid="java.net.URL.openStream*" data-throw-if-not-resolved="false">java.net.URL#openStream()</xref>, meaning no special handling is done. If different HTTP connection options are needed you will need to create <xref uid="java.io.InputStream" data-throw-if-not-resolved="false">java.io.InputStream</xref> separately.
  syntax:
    content: public MappingIterator<T> <T>readValues(URL src)
    parameters:
    - id: src
      type: java.net.URL
      description: URL to read to access JSON content to parse.
    return:
      type: com.fasterxml.jackson.databind.MappingIterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.<T>treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class<T>)
  id: <T>treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: <T>treeToValue(TreeNode n, Class<T> valueType)
  nameWithType: ObjectReader.<T>treeToValue(TreeNode n, Class<T> valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>treeToValue(TreeNode n, Class<T> valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.treeToValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Convenience method for converting given JSON tree into instance of specified value type. This is equivalent to first constructing a <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> to iterate over contents of the tree, and using that parser for data binding.
  syntax:
    content: public T <T>treeToValue(TreeNode n, Class<T> valueType)
    parameters:
    - id: n
      type: com.fasterxml.jackson.core.TreeNode
    - id: valueType
      type: java.lang.Class<T>
    return:
      type: T
  exceptions:
  - type: com.fasterxml.jackson.core.JsonProcessingException
- uid: com.fasterxml.jackson.databind.ObjectReader.ObjectReader(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig)
  id: ObjectReader(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: ObjectReader(ObjectMapper mapper, DeserializationConfig config)
  nameWithType: ObjectReader.ObjectReader(ObjectMapper mapper, DeserializationConfig config)
  fullName: com.fasterxml.jackson.databind.ObjectReader.ObjectReader(ObjectMapper mapper, DeserializationConfig config)
  overload: com.fasterxml.jackson.databind.ObjectReader.ObjectReader*
  type: Constructor
  package: com.fasterxml.jackson.databind
  summary: Constructor used by <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref> for initial instantiation
  syntax:
    content: protected ObjectReader(ObjectMapper mapper, DeserializationConfig config)
    parameters:
    - id: mapper
      type: com.fasterxml.jackson.databind.ObjectMapper
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
- uid: com.fasterxml.jackson.databind.ObjectReader.ObjectReader(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues)
  id: ObjectReader(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: ObjectReader(ObjectMapper mapper, DeserializationConfig config, JavaType valueType, Object valueToUpdate, FormatSchema schema, InjectableValues injectableValues)
  nameWithType: ObjectReader.ObjectReader(ObjectMapper mapper, DeserializationConfig config, JavaType valueType, Object valueToUpdate, FormatSchema schema, InjectableValues injectableValues)
  fullName: com.fasterxml.jackson.databind.ObjectReader.ObjectReader(ObjectMapper mapper, DeserializationConfig config, JavaType valueType, Object valueToUpdate, FormatSchema schema, InjectableValues injectableValues)
  overload: com.fasterxml.jackson.databind.ObjectReader.ObjectReader*
  type: Constructor
  package: com.fasterxml.jackson.databind
  summary: Constructor called when a root deserializer should be fetched based on other configuration.
  syntax:
    content: protected ObjectReader(ObjectMapper mapper, DeserializationConfig config, JavaType valueType, Object valueToUpdate, FormatSchema schema, InjectableValues injectableValues)
    parameters:
    - id: mapper
      type: com.fasterxml.jackson.databind.ObjectMapper
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: valueType
      type: com.fasterxml.jackson.databind.JavaType
    - id: valueToUpdate
      type: java.lang.Object
    - id: schema
      type: com.fasterxml.jackson.core.FormatSchema
    - id: injectableValues
      type: com.fasterxml.jackson.databind.InjectableValues
- uid: com.fasterxml.jackson.databind.ObjectReader.ObjectReader(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.JsonFactory)
  id: ObjectReader(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.JsonFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: ObjectReader(ObjectReader base, JsonFactory f)
  nameWithType: ObjectReader.ObjectReader(ObjectReader base, JsonFactory f)
  fullName: com.fasterxml.jackson.databind.ObjectReader.ObjectReader(ObjectReader base, JsonFactory f)
  overload: com.fasterxml.jackson.databind.ObjectReader.ObjectReader*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected ObjectReader(ObjectReader base, JsonFactory f)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ObjectReader
    - id: f
      type: com.fasterxml.jackson.core.JsonFactory
- uid: com.fasterxml.jackson.databind.ObjectReader.ObjectReader(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.filter.TokenFilter)
  id: ObjectReader(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.filter.TokenFilter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: ObjectReader(ObjectReader base, TokenFilter filter)
  nameWithType: ObjectReader.ObjectReader(ObjectReader base, TokenFilter filter)
  fullName: com.fasterxml.jackson.databind.ObjectReader.ObjectReader(ObjectReader base, TokenFilter filter)
  overload: com.fasterxml.jackson.databind.ObjectReader.ObjectReader*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected ObjectReader(ObjectReader base, TokenFilter filter)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ObjectReader
    - id: filter
      type: com.fasterxml.jackson.core.filter.TokenFilter
- uid: com.fasterxml.jackson.databind.ObjectReader.ObjectReader(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig)
  id: ObjectReader(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: ObjectReader(ObjectReader base, DeserializationConfig config)
  nameWithType: ObjectReader.ObjectReader(ObjectReader base, DeserializationConfig config)
  fullName: com.fasterxml.jackson.databind.ObjectReader.ObjectReader(ObjectReader base, DeserializationConfig config)
  overload: com.fasterxml.jackson.databind.ObjectReader.ObjectReader*
  type: Constructor
  package: com.fasterxml.jackson.databind
  summary: Copy constructor used when modifying simple feature flags
  syntax:
    content: protected ObjectReader(ObjectReader base, DeserializationConfig config)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ObjectReader
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
- uid: com.fasterxml.jackson.databind.ObjectReader.ObjectReader(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues,com.fasterxml.jackson.databind.deser.DataFormatReaders)
  id: ObjectReader(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues,com.fasterxml.jackson.databind.deser.DataFormatReaders)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: ObjectReader(ObjectReader base, DeserializationConfig config, JavaType valueType, JsonDeserializer<Object> rootDeser, Object valueToUpdate, FormatSchema schema, InjectableValues injectableValues, DataFormatReaders dataFormatReaders)
  nameWithType: ObjectReader.ObjectReader(ObjectReader base, DeserializationConfig config, JavaType valueType, JsonDeserializer<Object> rootDeser, Object valueToUpdate, FormatSchema schema, InjectableValues injectableValues, DataFormatReaders dataFormatReaders)
  fullName: com.fasterxml.jackson.databind.ObjectReader.ObjectReader(ObjectReader base, DeserializationConfig config, JavaType valueType, JsonDeserializer<Object> rootDeser, Object valueToUpdate, FormatSchema schema, InjectableValues injectableValues, DataFormatReaders dataFormatReaders)
  overload: com.fasterxml.jackson.databind.ObjectReader.ObjectReader*
  type: Constructor
  package: com.fasterxml.jackson.databind
  summary: Copy constructor used for building variations.
  syntax:
    content: protected ObjectReader(ObjectReader base, DeserializationConfig config, JavaType valueType, JsonDeserializer<Object> rootDeser, Object valueToUpdate, FormatSchema schema, InjectableValues injectableValues, DataFormatReaders dataFormatReaders)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ObjectReader
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: valueType
      type: com.fasterxml.jackson.databind.JavaType
    - id: rootDeser
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
    - id: valueToUpdate
      type: java.lang.Object
    - id: schema
      type: com.fasterxml.jackson.core.FormatSchema
    - id: injectableValues
      type: com.fasterxml.jackson.databind.InjectableValues
    - id: dataFormatReaders
      type: com.fasterxml.jackson.databind.deser.DataFormatReaders
- uid: com.fasterxml.jackson.databind.ObjectReader._assertNotNull(java.lang.String,java.lang.Object)
  id: _assertNotNull(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _assertNotNull(String paramName, Object src)
  nameWithType: ObjectReader._assertNotNull(String paramName, Object src)
  fullName: com.fasterxml.jackson.databind.ObjectReader._assertNotNull(String paramName, Object src)
  overload: com.fasterxml.jackson.databind.ObjectReader._assertNotNull*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final void _assertNotNull(String paramName, Object src)
    parameters:
    - id: paramName
      type: java.lang.String
    - id: src
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ObjectReader._bind(com.fasterxml.jackson.core.JsonParser,java.lang.Object)
  id: _bind(com.fasterxml.jackson.core.JsonParser,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _bind(JsonParser p, Object valueToUpdate)
  nameWithType: ObjectReader._bind(JsonParser p, Object valueToUpdate)
  fullName: com.fasterxml.jackson.databind.ObjectReader._bind(JsonParser p, Object valueToUpdate)
  overload: com.fasterxml.jackson.databind.ObjectReader._bind*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Actual implementation of value reading+binding operation.
  syntax:
    content: protected Object _bind(JsonParser p, Object valueToUpdate)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: valueToUpdate
      type: java.lang.Object
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader._bindAndClose(com.fasterxml.jackson.core.JsonParser)
  id: _bindAndClose(com.fasterxml.jackson.core.JsonParser)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _bindAndClose(JsonParser p0)
  nameWithType: ObjectReader._bindAndClose(JsonParser p0)
  fullName: com.fasterxml.jackson.databind.ObjectReader._bindAndClose(JsonParser p0)
  overload: com.fasterxml.jackson.databind.ObjectReader._bindAndClose*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected Object _bindAndClose(JsonParser p0)
    parameters:
    - id: p0
      type: com.fasterxml.jackson.core.JsonParser
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader._bindAndCloseAsTree(com.fasterxml.jackson.core.JsonParser)
  id: _bindAndCloseAsTree(com.fasterxml.jackson.core.JsonParser)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _bindAndCloseAsTree(JsonParser p0)
  nameWithType: ObjectReader._bindAndCloseAsTree(JsonParser p0)
  fullName: com.fasterxml.jackson.databind.ObjectReader._bindAndCloseAsTree(JsonParser p0)
  overload: com.fasterxml.jackson.databind.ObjectReader._bindAndCloseAsTree*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final JsonNode _bindAndCloseAsTree(JsonParser p0)
    parameters:
    - id: p0
      type: com.fasterxml.jackson.core.JsonParser
    return:
      type: com.fasterxml.jackson.databind.JsonNode
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader._bindAsTree(com.fasterxml.jackson.core.JsonParser)
  id: _bindAsTree(com.fasterxml.jackson.core.JsonParser)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _bindAsTree(JsonParser p)
  nameWithType: ObjectReader._bindAsTree(JsonParser p)
  fullName: com.fasterxml.jackson.databind.ObjectReader._bindAsTree(JsonParser p)
  overload: com.fasterxml.jackson.databind.ObjectReader._bindAsTree*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final JsonNode _bindAsTree(JsonParser p)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    return:
      type: com.fasterxml.jackson.databind.JsonNode
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader._bindAsTreeOrNull(com.fasterxml.jackson.core.JsonParser)
  id: _bindAsTreeOrNull(com.fasterxml.jackson.core.JsonParser)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _bindAsTreeOrNull(JsonParser p)
  nameWithType: ObjectReader._bindAsTreeOrNull(JsonParser p)
  fullName: com.fasterxml.jackson.databind.ObjectReader._bindAsTreeOrNull(JsonParser p)
  overload: com.fasterxml.jackson.databind.ObjectReader._bindAsTreeOrNull*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Same as <xref uid="com.fasterxml.jackson.databind.ObjectReader._bindAsTree*" data-throw-if-not-resolved="false">#_bindAsTree</xref> except end-of-input is reported by returning `null`, not "missing node"
  syntax:
    content: protected final JsonNode _bindAsTreeOrNull(JsonParser p)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    return:
      type: com.fasterxml.jackson.databind.JsonNode
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader._config
  id: _config
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _config
  nameWithType: ObjectReader._config
  fullName: com.fasterxml.jackson.databind.ObjectReader._config
  type: Field
  package: com.fasterxml.jackson.databind
  summary: General serialization configuration settings; while immutable, can use copy-constructor to create modified instances as necessary.
  syntax:
    content: protected final DeserializationConfig _config
    return:
      type: com.fasterxml.jackson.databind.DeserializationConfig
- uid: com.fasterxml.jackson.databind.ObjectReader._considerFilter(com.fasterxml.jackson.core.JsonParser,boolean)
  id: _considerFilter(com.fasterxml.jackson.core.JsonParser,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _considerFilter(JsonParser p, boolean multiValue)
  nameWithType: ObjectReader._considerFilter(JsonParser p, boolean multiValue)
  fullName: com.fasterxml.jackson.databind.ObjectReader._considerFilter(JsonParser p, boolean multiValue)
  overload: com.fasterxml.jackson.databind.ObjectReader._considerFilter*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Consider filter when creating JsonParser.
  syntax:
    content: protected JsonParser _considerFilter(JsonParser p, boolean multiValue)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: multiValue
      type: boolean
    return:
      type: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.databind.ObjectReader._context
  id: _context
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _context
  nameWithType: ObjectReader._context
  fullName: com.fasterxml.jackson.databind.ObjectReader._context
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Blueprint instance of deserialization context; used for creating actual instance when needed.
  syntax:
    content: protected final DefaultDeserializationContext _context
    return:
      type: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext
- uid: com.fasterxml.jackson.databind.ObjectReader._dataFormatReaders
  id: _dataFormatReaders
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _dataFormatReaders
  nameWithType: ObjectReader._dataFormatReaders
  fullName: com.fasterxml.jackson.databind.ObjectReader._dataFormatReaders
  type: Field
  package: com.fasterxml.jackson.databind
  summary: >-
    Optional detector used for auto-detecting data format that byte-based input uses.


    NOTE: If defined non-null, `readValue()` methods that take <xref uid="java.io.Reader" data-throw-if-not-resolved="false">Reader</xref> or <xref uid="java.lang.String" data-throw-if-not-resolved="false">String</xref> input **will fail with exception**, because format-detection only works on byte-sources. Also, if format cannot be detect reliably (as per detector settings), a <xref uid="com.fasterxml.jackson.core.JsonParseException" data-throw-if-not-resolved="false">JsonParseException</xref> will be thrown).
  syntax:
    content: protected final DataFormatReaders _dataFormatReaders
    return:
      type: com.fasterxml.jackson.databind.deser.DataFormatReaders
- uid: com.fasterxml.jackson.databind.ObjectReader._detectBindAndClose(byte[],int,int)
  id: _detectBindAndClose(byte[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _detectBindAndClose(byte[] src, int offset, int length)
  nameWithType: ObjectReader._detectBindAndClose(byte[] src, int offset, int length)
  fullName: com.fasterxml.jackson.databind.ObjectReader._detectBindAndClose(byte[] src, int offset, int length)
  overload: com.fasterxml.jackson.databind.ObjectReader._detectBindAndClose*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected Object _detectBindAndClose(byte[] src, int offset, int length)
    parameters:
    - id: src
      type: byte[]
    - id: offset
      type: int
    - id: length
      type: int
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader._detectBindAndClose(com.fasterxml.jackson.databind.deser.DataFormatReaders.Match,boolean)
  id: _detectBindAndClose(com.fasterxml.jackson.databind.deser.DataFormatReaders.Match,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _detectBindAndClose(DataFormatReaders.Match match, boolean forceClosing)
  nameWithType: ObjectReader._detectBindAndClose(DataFormatReaders.Match match, boolean forceClosing)
  fullName: com.fasterxml.jackson.databind.ObjectReader._detectBindAndClose(DataFormatReaders.Match match, boolean forceClosing)
  overload: com.fasterxml.jackson.databind.ObjectReader._detectBindAndClose*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected Object _detectBindAndClose(DataFormatReaders.Match match, boolean forceClosing)
    parameters:
    - id: match
      type: com.fasterxml.jackson.databind.deser.DataFormatReaders.Match
    - id: forceClosing
      type: boolean
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader._detectBindAndCloseAsTree(java.io.InputStream)
  id: _detectBindAndCloseAsTree(java.io.InputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _detectBindAndCloseAsTree(InputStream in)
  nameWithType: ObjectReader._detectBindAndCloseAsTree(InputStream in)
  fullName: com.fasterxml.jackson.databind.ObjectReader._detectBindAndCloseAsTree(InputStream in)
  overload: com.fasterxml.jackson.databind.ObjectReader._detectBindAndCloseAsTree*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected JsonNode _detectBindAndCloseAsTree(InputStream in)
    parameters:
    - id: in
      type: java.io.InputStream
    return:
      type: com.fasterxml.jackson.databind.JsonNode
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader._findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
  id: _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _findRootDeserializer(DeserializationContext ctxt)
  nameWithType: ObjectReader._findRootDeserializer(DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.ObjectReader._findRootDeserializer(DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.ObjectReader._findRootDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method called to locate deserializer for the passed root-level value.
  syntax:
    content: protected JsonDeserializer<Object> _findRootDeserializer(DeserializationContext ctxt)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ObjectReader._findTreeDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
  id: _findTreeDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _findTreeDeserializer(DeserializationContext ctxt)
  nameWithType: ObjectReader._findTreeDeserializer(DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.ObjectReader._findTreeDeserializer(DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.ObjectReader._findTreeDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected JsonDeserializer<Object> _findTreeDeserializer(DeserializationContext ctxt)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ObjectReader._initForMultiRead(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
  id: _initForMultiRead(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _initForMultiRead(DeserializationContext ctxt, JsonParser p)
  nameWithType: ObjectReader._initForMultiRead(DeserializationContext ctxt, JsonParser p)
  fullName: com.fasterxml.jackson.databind.ObjectReader._initForMultiRead(DeserializationContext ctxt, JsonParser p)
  overload: com.fasterxml.jackson.databind.ObjectReader._initForMultiRead*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Alternative to <xref uid="com.fasterxml.jackson.databind.ObjectReader._initForReading*" data-throw-if-not-resolved="false">#_initForReading</xref> used in cases where reading of multiple values means that we may or may not want to advance the stream, but need to do other initialization.


    Base implementation only sets configured <xref uid="com.fasterxml.jackson.core.FormatSchema" data-throw-if-not-resolved="false">FormatSchema</xref>, if any, on parser.
  syntax:
    content: protected void _initForMultiRead(DeserializationContext ctxt, JsonParser p)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader._initForReading(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
  id: _initForReading(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _initForReading(DeserializationContext ctxt, JsonParser p)
  nameWithType: ObjectReader._initForReading(DeserializationContext ctxt, JsonParser p)
  fullName: com.fasterxml.jackson.databind.ObjectReader._initForReading(DeserializationContext ctxt, JsonParser p)
  overload: com.fasterxml.jackson.databind.ObjectReader._initForReading*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected JsonToken _initForReading(DeserializationContext ctxt, JsonParser p)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader._injectableValues
  id: _injectableValues
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _injectableValues
  nameWithType: ObjectReader._injectableValues
  fullName: com.fasterxml.jackson.databind.ObjectReader._injectableValues
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Values that can be injected during deserialization, if any.
  syntax:
    content: protected final InjectableValues _injectableValues
    return:
      type: com.fasterxml.jackson.databind.InjectableValues
- uid: com.fasterxml.jackson.databind.ObjectReader._inputStream(java.io.File)
  id: _inputStream(java.io.File)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _inputStream(File f)
  nameWithType: ObjectReader._inputStream(File f)
  fullName: com.fasterxml.jackson.databind.ObjectReader._inputStream(File f)
  overload: com.fasterxml.jackson.databind.ObjectReader._inputStream*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected InputStream _inputStream(File f)
    parameters:
    - id: f
      type: java.io.File
    return:
      type: java.io.InputStream
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader._inputStream(java.net.URL)
  id: _inputStream(java.net.URL)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _inputStream(URL src)
  nameWithType: ObjectReader._inputStream(URL src)
  fullName: com.fasterxml.jackson.databind.ObjectReader._inputStream(URL src)
  overload: com.fasterxml.jackson.databind.ObjectReader._inputStream*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected InputStream _inputStream(URL src)
    parameters:
    - id: src
      type: java.net.URL
    return:
      type: java.io.InputStream
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader._jsonNodeType
  id: _jsonNodeType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _jsonNodeType
  nameWithType: ObjectReader._jsonNodeType
  fullName: com.fasterxml.jackson.databind.ObjectReader._jsonNodeType
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Lazily resolved <xref uid="com.fasterxml.jackson.databind.JavaType" data-throw-if-not-resolved="false">JavaType</xref> for <xref uid="com.fasterxml.jackson.databind.JsonNode" data-throw-if-not-resolved="false">JsonNode</xref>
  syntax:
    content: protected transient JavaType _jsonNodeType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ObjectReader._jsonNodeType()
  id: _jsonNodeType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _jsonNodeType()
  nameWithType: ObjectReader._jsonNodeType()
  fullName: com.fasterxml.jackson.databind.ObjectReader._jsonNodeType()
  overload: com.fasterxml.jackson.databind.ObjectReader._jsonNodeType*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final JavaType _jsonNodeType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ObjectReader._new(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.JsonFactory)
  id: _new(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.JsonFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _new(ObjectReader base, JsonFactory f)
  nameWithType: ObjectReader._new(ObjectReader base, JsonFactory f)
  fullName: com.fasterxml.jackson.databind.ObjectReader._new(ObjectReader base, JsonFactory f)
  overload: com.fasterxml.jackson.databind.ObjectReader._new*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Overridable factory method called by various "withXxx()" methods
  syntax:
    content: protected ObjectReader _new(ObjectReader base, JsonFactory f)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ObjectReader
    - id: f
      type: com.fasterxml.jackson.core.JsonFactory
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader._new(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig)
  id: _new(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _new(ObjectReader base, DeserializationConfig config)
  nameWithType: ObjectReader._new(ObjectReader base, DeserializationConfig config)
  fullName: com.fasterxml.jackson.databind.ObjectReader._new(ObjectReader base, DeserializationConfig config)
  overload: com.fasterxml.jackson.databind.ObjectReader._new*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Overridable factory method called by various "withXxx()" methods
  syntax:
    content: protected ObjectReader _new(ObjectReader base, DeserializationConfig config)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ObjectReader
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader._new(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues,com.fasterxml.jackson.databind.deser.DataFormatReaders)
  id: _new(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues,com.fasterxml.jackson.databind.deser.DataFormatReaders)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _new(ObjectReader base, DeserializationConfig config, JavaType valueType, JsonDeserializer<Object> rootDeser, Object valueToUpdate, FormatSchema schema, InjectableValues injectableValues, DataFormatReaders dataFormatReaders)
  nameWithType: ObjectReader._new(ObjectReader base, DeserializationConfig config, JavaType valueType, JsonDeserializer<Object> rootDeser, Object valueToUpdate, FormatSchema schema, InjectableValues injectableValues, DataFormatReaders dataFormatReaders)
  fullName: com.fasterxml.jackson.databind.ObjectReader._new(ObjectReader base, DeserializationConfig config, JavaType valueType, JsonDeserializer<Object> rootDeser, Object valueToUpdate, FormatSchema schema, InjectableValues injectableValues, DataFormatReaders dataFormatReaders)
  overload: com.fasterxml.jackson.databind.ObjectReader._new*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Overridable factory method called by various "withXxx()" methods
  syntax:
    content: protected ObjectReader _new(ObjectReader base, DeserializationConfig config, JavaType valueType, JsonDeserializer<Object> rootDeser, Object valueToUpdate, FormatSchema schema, InjectableValues injectableValues, DataFormatReaders dataFormatReaders)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ObjectReader
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: valueType
      type: com.fasterxml.jackson.databind.JavaType
    - id: rootDeser
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
    - id: valueToUpdate
      type: java.lang.Object
    - id: schema
      type: com.fasterxml.jackson.core.FormatSchema
    - id: injectableValues
      type: com.fasterxml.jackson.databind.InjectableValues
    - id: dataFormatReaders
      type: com.fasterxml.jackson.databind.deser.DataFormatReaders
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader._parserFactory
  id: _parserFactory
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _parserFactory
  nameWithType: ObjectReader._parserFactory
  fullName: com.fasterxml.jackson.databind.ObjectReader._parserFactory
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Factory used for constructing <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref>s
  syntax:
    content: protected final JsonFactory _parserFactory
    return:
      type: com.fasterxml.jackson.core.JsonFactory
- uid: com.fasterxml.jackson.databind.ObjectReader._prefetchRootDeserializer(com.fasterxml.jackson.databind.JavaType)
  id: _prefetchRootDeserializer(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _prefetchRootDeserializer(JavaType valueType)
  nameWithType: ObjectReader._prefetchRootDeserializer(JavaType valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader._prefetchRootDeserializer(JavaType valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader._prefetchRootDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method called to locate deserializer ahead of time, if permitted by configuration. Method also is NOT to throw an exception if access fails.
  syntax:
    content: protected JsonDeserializer<Object> _prefetchRootDeserializer(JavaType valueType)
    parameters:
    - id: valueType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ObjectReader._reportUndetectableSource(java.lang.Object)
  id: _reportUndetectableSource(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _reportUndetectableSource(Object src)
  nameWithType: ObjectReader._reportUndetectableSource(Object src)
  fullName: com.fasterxml.jackson.databind.ObjectReader._reportUndetectableSource(Object src)
  overload: com.fasterxml.jackson.databind.ObjectReader._reportUndetectableSource*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected void _reportUndetectableSource(Object src)
    parameters:
    - id: src
      type: java.lang.Object
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.databind.ObjectReader._reportUnkownFormat(com.fasterxml.jackson.databind.deser.DataFormatReaders,com.fasterxml.jackson.databind.deser.DataFormatReaders.Match)
  id: _reportUnkownFormat(com.fasterxml.jackson.databind.deser.DataFormatReaders,com.fasterxml.jackson.databind.deser.DataFormatReaders.Match)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _reportUnkownFormat(DataFormatReaders detector, DataFormatReaders.Match match)
  nameWithType: ObjectReader._reportUnkownFormat(DataFormatReaders detector, DataFormatReaders.Match match)
  fullName: com.fasterxml.jackson.databind.ObjectReader._reportUnkownFormat(DataFormatReaders detector, DataFormatReaders.Match match)
  overload: com.fasterxml.jackson.databind.ObjectReader._reportUnkownFormat*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method called to indicate that format detection failed to detect format of given input
  syntax:
    content: protected void _reportUnkownFormat(DataFormatReaders detector, DataFormatReaders.Match match)
    parameters:
    - id: detector
      type: com.fasterxml.jackson.databind.deser.DataFormatReaders
    - id: match
      type: com.fasterxml.jackson.databind.deser.DataFormatReaders.Match
  exceptions:
  - type: com.fasterxml.jackson.core.JsonProcessingException
- uid: com.fasterxml.jackson.databind.ObjectReader._rootDeserializer
  id: _rootDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _rootDeserializer
  nameWithType: ObjectReader._rootDeserializer
  fullName: com.fasterxml.jackson.databind.ObjectReader._rootDeserializer
  type: Field
  package: com.fasterxml.jackson.databind
  summary: We may pre-fetch deserializer as soon as <xref uid="com.fasterxml.jackson.databind.ObjectReader._valueType" data-throw-if-not-resolved="false">#_valueType</xref> is known, and if so, reuse it afterwards. This allows avoiding further deserializer lookups and increases performance a bit on cases where readers are reused.
  syntax:
    content: protected final JsonDeserializer<Object> _rootDeserializer
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ObjectReader._rootDeserializers
  id: _rootDeserializers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _rootDeserializers
  nameWithType: ObjectReader._rootDeserializers
  fullName: com.fasterxml.jackson.databind.ObjectReader._rootDeserializers
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Root-level cached deserializers. Passed by <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref>, shared with it.
  syntax:
    content: protected final ConcurrentHashMap<JavaType,JsonDeserializer<Object>> _rootDeserializers
    return:
      type: java.util.concurrent.ConcurrentHashMap<com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>>
- uid: com.fasterxml.jackson.databind.ObjectReader._schema
  id: _schema
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _schema
  nameWithType: ObjectReader._schema
  fullName: com.fasterxml.jackson.databind.ObjectReader._schema
  type: Field
  package: com.fasterxml.jackson.databind
  summary: When using data format that uses a schema, schema is passed to parser.
  syntax:
    content: protected final FormatSchema _schema
    return:
      type: com.fasterxml.jackson.core.FormatSchema
- uid: com.fasterxml.jackson.databind.ObjectReader._unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>)
  id: _unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _unwrapAndDeserialize(JsonParser p, DeserializationContext ctxt, JavaType rootType, JsonDeserializer<Object> deser)
  nameWithType: ObjectReader._unwrapAndDeserialize(JsonParser p, DeserializationContext ctxt, JavaType rootType, JsonDeserializer<Object> deser)
  fullName: com.fasterxml.jackson.databind.ObjectReader._unwrapAndDeserialize(JsonParser p, DeserializationContext ctxt, JavaType rootType, JsonDeserializer<Object> deser)
  overload: com.fasterxml.jackson.databind.ObjectReader._unwrapAndDeserialize*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected Object _unwrapAndDeserialize(JsonParser p, DeserializationContext ctxt, JavaType rootType, JsonDeserializer<Object> deser)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: rootType
      type: com.fasterxml.jackson.databind.JavaType
    - id: deser
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader._unwrapRoot
  id: _unwrapRoot
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _unwrapRoot
  nameWithType: ObjectReader._unwrapRoot
  fullName: com.fasterxml.jackson.databind.ObjectReader._unwrapRoot
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Flag that indicates whether root values are expected to be unwrapped or not
  syntax:
    content: protected final boolean _unwrapRoot
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ObjectReader._valueToUpdate
  id: _valueToUpdate
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _valueToUpdate
  nameWithType: ObjectReader._valueToUpdate
  fullName: com.fasterxml.jackson.databind.ObjectReader._valueToUpdate
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Instance to update with data binding; if any. If null, a new instance is created, if non-null, properties of this value object will be updated instead. Note that value can be of almost any type, except not <xref uid="com.fasterxml.jackson.databind.type.ArrayType" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.type.ArrayType</xref>; array types cannot be modified because array size is immutable.
  syntax:
    content: protected final Object _valueToUpdate
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ObjectReader._valueType
  id: _valueType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _valueType
  nameWithType: ObjectReader._valueType
  fullName: com.fasterxml.jackson.databind.ObjectReader._valueType
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Declared type of value to instantiate during deserialization. Defines which deserializer to use; as well as base type of instance to construct if an updatable value is not configured to be used (subject to changes by embedded type information, for polymorphic types). If <xref uid="com.fasterxml.jackson.databind.ObjectReader._valueToUpdate" data-throw-if-not-resolved="false">#_valueToUpdate</xref> is non-null, only used for locating deserializer.
  syntax:
    content: protected final JavaType _valueType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ObjectReader._verifyNoTrailingTokens(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  id: _verifyNoTrailingTokens(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _verifyNoTrailingTokens(JsonParser p, DeserializationContext ctxt, JavaType bindType)
  nameWithType: ObjectReader._verifyNoTrailingTokens(JsonParser p, DeserializationContext ctxt, JavaType bindType)
  fullName: com.fasterxml.jackson.databind.ObjectReader._verifyNoTrailingTokens(JsonParser p, DeserializationContext ctxt, JavaType bindType)
  overload: com.fasterxml.jackson.databind.ObjectReader._verifyNoTrailingTokens*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final void _verifyNoTrailingTokens(JsonParser p, DeserializationContext ctxt, JavaType bindType)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: bindType
      type: com.fasterxml.jackson.databind.JavaType
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader._verifySchemaType(com.fasterxml.jackson.core.FormatSchema)
  id: _verifySchemaType(com.fasterxml.jackson.core.FormatSchema)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _verifySchemaType(FormatSchema schema)
  nameWithType: ObjectReader._verifySchemaType(FormatSchema schema)
  fullName: com.fasterxml.jackson.databind.ObjectReader._verifySchemaType(FormatSchema schema)
  overload: com.fasterxml.jackson.databind.ObjectReader._verifySchemaType*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected void _verifySchemaType(FormatSchema schema)
    parameters:
    - id: schema
      type: com.fasterxml.jackson.core.FormatSchema
- uid: com.fasterxml.jackson.databind.ObjectReader._with(com.fasterxml.jackson.databind.DeserializationConfig)
  id: _with(com.fasterxml.jackson.databind.DeserializationConfig)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: _with(DeserializationConfig newConfig)
  nameWithType: ObjectReader._with(DeserializationConfig newConfig)
  fullName: com.fasterxml.jackson.databind.ObjectReader._with(DeserializationConfig newConfig)
  overload: com.fasterxml.jackson.databind.ObjectReader._with*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected ObjectReader _with(DeserializationConfig newConfig)
    parameters:
    - id: newConfig
      type: com.fasterxml.jackson.databind.DeserializationConfig
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.at(com.fasterxml.jackson.core.JsonPointer)
  id: at(com.fasterxml.jackson.core.JsonPointer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: at(JsonPointer pointer)
  nameWithType: ObjectReader.at(JsonPointer pointer)
  fullName: com.fasterxml.jackson.databind.ObjectReader.at(JsonPointer pointer)
  overload: com.fasterxml.jackson.databind.ObjectReader.at*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Convenience method to bind from <xref uid="com.fasterxml.jackson.core.JsonPointer" data-throw-if-not-resolved="false">JsonPointer</xref> <xref uid="com.fasterxml.jackson.core.filter.JsonPointerBasedFilter" data-throw-if-not-resolved="false">JsonPointerBasedFilter</xref> is registered and will be used for parsing later.
  syntax:
    content: public ObjectReader at(JsonPointer pointer)
    parameters:
    - id: pointer
      type: com.fasterxml.jackson.core.JsonPointer
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.at(java.lang.String)
  id: at(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: at(String pointerExpr)
  nameWithType: ObjectReader.at(String pointerExpr)
  fullName: com.fasterxml.jackson.databind.ObjectReader.at(String pointerExpr)
  overload: com.fasterxml.jackson.databind.ObjectReader.at*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Convenience method to bind from <xref uid="com.fasterxml.jackson.core.JsonPointer" data-throw-if-not-resolved="false">JsonPointer</xref>. <xref uid="com.fasterxml.jackson.core.filter.JsonPointerBasedFilter" data-throw-if-not-resolved="false">JsonPointerBasedFilter</xref> is registered and will be used for parsing later.
  syntax:
    content: public ObjectReader at(String pointerExpr)
    parameters:
    - id: pointerExpr
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.createArrayNode()
  id: createArrayNode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: createArrayNode()
  nameWithType: ObjectReader.createArrayNode()
  fullName: com.fasterxml.jackson.databind.ObjectReader.createArrayNode()
  overload: com.fasterxml.jackson.databind.ObjectReader.createArrayNode*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for construct root level Array nodes for Tree Model instances.
  syntax:
    content: public JsonNode createArrayNode()
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.ObjectReader.createDeserializationContext(com.fasterxml.jackson.core.JsonParser)
  id: createDeserializationContext(com.fasterxml.jackson.core.JsonParser)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: createDeserializationContext(JsonParser p)
  nameWithType: ObjectReader.createDeserializationContext(JsonParser p)
  fullName: com.fasterxml.jackson.databind.ObjectReader.createDeserializationContext(JsonParser p)
  overload: com.fasterxml.jackson.databind.ObjectReader.createDeserializationContext*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Internal helper method called to create an instance of <xref uid="com.fasterxml.jackson.databind.DeserializationContext" data-throw-if-not-resolved="false">DeserializationContext</xref> for deserializing a single root value. Can be overridden if a custom context is needed.
  syntax:
    content: protected DefaultDeserializationContext createDeserializationContext(JsonParser p)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    return:
      type: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext
- uid: com.fasterxml.jackson.databind.ObjectReader.createNonBlockingByteArrayParser()
  id: createNonBlockingByteArrayParser()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: createNonBlockingByteArrayParser()
  nameWithType: ObjectReader.createNonBlockingByteArrayParser()
  fullName: com.fasterxml.jackson.databind.ObjectReader.createNonBlockingByteArrayParser()
  overload: com.fasterxml.jackson.databind.ObjectReader.createNonBlockingByteArrayParser*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Factory method for constructing properly initialized <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> to read content using non-blocking (asynchronous) mode. Parser is not managed (or "owned") by ObjectReader: caller is responsible for properly closing it once content reading is complete.'
  syntax:
    content: public JsonParser createNonBlockingByteArrayParser()
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.createObjectNode()
  id: createObjectNode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: createObjectNode()
  nameWithType: ObjectReader.createObjectNode()
  fullName: com.fasterxml.jackson.databind.ObjectReader.createObjectNode()
  overload: com.fasterxml.jackson.databind.ObjectReader.createObjectNode*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for construct root level Object nodes for Tree Model instances.
  syntax:
    content: public JsonNode createObjectNode()
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.ObjectReader.createParser(byte[])
  id: createParser(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: createParser(byte[] content)
  nameWithType: ObjectReader.createParser(byte[] content)
  fullName: com.fasterxml.jackson.databind.ObjectReader.createParser(byte[] content)
  overload: com.fasterxml.jackson.databind.ObjectReader.createParser*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Factory method for constructing properly initialized <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> to read content from specified byte array. Parser is not managed (or "owned") by ObjectReader: caller is responsible for properly closing it once content reading is complete.'
  syntax:
    content: public JsonParser createParser(byte[] content)
    parameters:
    - id: content
      type: byte[]
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.createParser(byte[],int,int)
  id: createParser(byte[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: createParser(byte[] content, int offset, int len)
  nameWithType: ObjectReader.createParser(byte[] content, int offset, int len)
  fullName: com.fasterxml.jackson.databind.ObjectReader.createParser(byte[] content, int offset, int len)
  overload: com.fasterxml.jackson.databind.ObjectReader.createParser*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Factory method for constructing properly initialized <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> to read content from specified byte array. Parser is not managed (or "owned") by ObjectReader: caller is responsible for properly closing it once content reading is complete.'
  syntax:
    content: public JsonParser createParser(byte[] content, int offset, int len)
    parameters:
    - id: content
      type: byte[]
    - id: offset
      type: int
    - id: len
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.createParser(char[])
  id: createParser(char[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: createParser(char[] content)
  nameWithType: ObjectReader.createParser(char[] content)
  fullName: com.fasterxml.jackson.databind.ObjectReader.createParser(char[] content)
  overload: com.fasterxml.jackson.databind.ObjectReader.createParser*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Factory method for constructing properly initialized <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> to read content from specified character array Parser is not managed (or "owned") by ObjectReader: caller is responsible for properly closing it once content reading is complete.'
  syntax:
    content: public JsonParser createParser(char[] content)
    parameters:
    - id: content
      type: char[]
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.createParser(char[],int,int)
  id: createParser(char[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: createParser(char[] content, int offset, int len)
  nameWithType: ObjectReader.createParser(char[] content, int offset, int len)
  fullName: com.fasterxml.jackson.databind.ObjectReader.createParser(char[] content, int offset, int len)
  overload: com.fasterxml.jackson.databind.ObjectReader.createParser*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Factory method for constructing properly initialized <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> to read content from specified character array. Parser is not managed (or "owned") by ObjectReader: caller is responsible for properly closing it once content reading is complete.'
  syntax:
    content: public JsonParser createParser(char[] content, int offset, int len)
    parameters:
    - id: content
      type: char[]
    - id: offset
      type: int
    - id: len
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.createParser(java.io.DataInput)
  id: createParser(java.io.DataInput)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: createParser(DataInput content)
  nameWithType: ObjectReader.createParser(DataInput content)
  fullName: com.fasterxml.jackson.databind.ObjectReader.createParser(DataInput content)
  overload: com.fasterxml.jackson.databind.ObjectReader.createParser*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Factory method for constructing properly initialized <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> to read content using specified <xref uid="java.io.DataInput" data-throw-if-not-resolved="false">DataInput</xref>. Parser is not managed (or "owned") by ObjectReader: caller is responsible for properly closing it once content reading is complete.'
  syntax:
    content: public JsonParser createParser(DataInput content)
    parameters:
    - id: content
      type: java.io.DataInput
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.createParser(java.io.File)
  id: createParser(java.io.File)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: createParser(File src)
  nameWithType: ObjectReader.createParser(File src)
  fullName: com.fasterxml.jackson.databind.ObjectReader.createParser(File src)
  overload: com.fasterxml.jackson.databind.ObjectReader.createParser*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Factory method for constructing properly initialized <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> to read content from specified <xref uid="java.io.File" data-throw-if-not-resolved="false">File</xref>. Parser is not managed (or "owned") by ObjectReader: caller is responsible for properly closing it once content reading is complete.'
  syntax:
    content: public JsonParser createParser(File src)
    parameters:
    - id: src
      type: java.io.File
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.createParser(java.io.InputStream)
  id: createParser(java.io.InputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: createParser(InputStream in)
  nameWithType: ObjectReader.createParser(InputStream in)
  fullName: com.fasterxml.jackson.databind.ObjectReader.createParser(InputStream in)
  overload: com.fasterxml.jackson.databind.ObjectReader.createParser*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Factory method for constructing properly initialized <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> to read content using specified <xref uid="java.io.InputStream" data-throw-if-not-resolved="false">InputStream</xref>. Parser is not managed (or "owned") by ObjectReader: caller is responsible for properly closing it once content reading is complete.'
  syntax:
    content: public JsonParser createParser(InputStream in)
    parameters:
    - id: in
      type: java.io.InputStream
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.createParser(java.io.Reader)
  id: createParser(java.io.Reader)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: createParser(Reader r)
  nameWithType: ObjectReader.createParser(Reader r)
  fullName: com.fasterxml.jackson.databind.ObjectReader.createParser(Reader r)
  overload: com.fasterxml.jackson.databind.ObjectReader.createParser*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Factory method for constructing properly initialized <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> to read content using specified <xref uid="java.io.Reader" data-throw-if-not-resolved="false">Reader</xref>. Parser is not managed (or "owned") by ObjectReader: caller is responsible for properly closing it once content reading is complete.'
  syntax:
    content: public JsonParser createParser(Reader r)
    parameters:
    - id: r
      type: java.io.Reader
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.createParser(java.lang.String)
  id: createParser(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: createParser(String content)
  nameWithType: ObjectReader.createParser(String content)
  fullName: com.fasterxml.jackson.databind.ObjectReader.createParser(String content)
  overload: com.fasterxml.jackson.databind.ObjectReader.createParser*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Factory method for constructing properly initialized <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> to read content from specified String. Parser is not managed (or "owned") by ObjectReader: caller is responsible for properly closing it once content reading is complete.'
  syntax:
    content: public JsonParser createParser(String content)
    parameters:
    - id: content
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.createParser(java.net.URL)
  id: createParser(java.net.URL)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: createParser(URL src)
  nameWithType: ObjectReader.createParser(URL src)
  fullName: com.fasterxml.jackson.databind.ObjectReader.createParser(URL src)
  overload: com.fasterxml.jackson.databind.ObjectReader.createParser*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Factory method for constructing properly initialized <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> to read content from specified <xref uid="java.io.File" data-throw-if-not-resolved="false">File</xref>. Parser is not managed (or "owned") by ObjectReader: caller is responsible for properly closing it once content reading is complete.'
  syntax:
    content: public JsonParser createParser(URL src)
    parameters:
    - id: src
      type: java.net.URL
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.forType(com.fasterxml.jackson.core.type.TypeReference<?>)
  id: forType(com.fasterxml.jackson.core.type.TypeReference<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: forType(TypeReference<?> valueTypeRef)
  nameWithType: ObjectReader.forType(TypeReference<?> valueTypeRef)
  fullName: com.fasterxml.jackson.databind.ObjectReader.forType(TypeReference<?> valueTypeRef)
  overload: com.fasterxml.jackson.databind.ObjectReader.forType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for constructing a new reader instance that is configured to data bind into specified type.


    Note that the method does NOT change state of this reader, but rather construct and returns a newly configured instance.
  syntax:
    content: public ObjectReader forType(TypeReference<?> valueTypeRef)
    parameters:
    - id: valueTypeRef
      type: com.fasterxml.jackson.core.type.TypeReference<?>
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.forType(com.fasterxml.jackson.databind.JavaType)
  id: forType(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: forType(JavaType valueType)
  nameWithType: ObjectReader.forType(JavaType valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.forType(JavaType valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.forType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for constructing a new reader instance that is configured to data bind into specified type.


    Note that the method does NOT change state of this reader, but rather construct and returns a newly configured instance.
  syntax:
    content: public ObjectReader forType(JavaType valueType)
    parameters:
    - id: valueType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.forType(java.lang.Class<?>)
  id: forType(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: forType(Class<?> valueType)
  nameWithType: ObjectReader.forType(Class<?> valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.forType(Class<?> valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.forType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for constructing a new reader instance that is configured to data bind into specified type.


    Note that the method does NOT change state of this reader, but rather construct and returns a newly configured instance.
  syntax:
    content: public ObjectReader forType(Class<?> valueType)
    parameters:
    - id: valueType
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.getAttributes()
  id: getAttributes()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: getAttributes()
  nameWithType: ObjectReader.getAttributes()
  fullName: com.fasterxml.jackson.databind.ObjectReader.getAttributes()
  overload: com.fasterxml.jackson.databind.ObjectReader.getAttributes*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ContextAttributes getAttributes()
    return:
      type: com.fasterxml.jackson.databind.cfg.ContextAttributes
- uid: com.fasterxml.jackson.databind.ObjectReader.getConfig()
  id: getConfig()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: getConfig()
  nameWithType: ObjectReader.getConfig()
  fullName: com.fasterxml.jackson.databind.ObjectReader.getConfig()
  overload: com.fasterxml.jackson.databind.ObjectReader.getConfig*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public DeserializationConfig getConfig()
    return:
      type: com.fasterxml.jackson.databind.DeserializationConfig
- uid: com.fasterxml.jackson.databind.ObjectReader.getFactory()
  id: getFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: getFactory()
  nameWithType: ObjectReader.getFactory()
  fullName: com.fasterxml.jackson.databind.ObjectReader.getFactory()
  overload: com.fasterxml.jackson.databind.ObjectReader.getFactory*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Accessor for finding underlying data format factory (<xref uid="com.fasterxml.jackson.core.JsonFactory" data-throw-if-not-resolved="false">JsonFactory</xref>) codec will use for data binding.
  syntax:
    content: public JsonFactory getFactory()
    return:
      type: com.fasterxml.jackson.core.JsonFactory
- uid: com.fasterxml.jackson.databind.ObjectReader.getInjectableValues()
  id: getInjectableValues()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: getInjectableValues()
  nameWithType: ObjectReader.getInjectableValues()
  fullName: com.fasterxml.jackson.databind.ObjectReader.getInjectableValues()
  overload: com.fasterxml.jackson.databind.ObjectReader.getInjectableValues*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public InjectableValues getInjectableValues()
    return:
      type: com.fasterxml.jackson.databind.InjectableValues
- uid: com.fasterxml.jackson.databind.ObjectReader.getTypeFactory()
  id: getTypeFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: getTypeFactory()
  nameWithType: ObjectReader.getTypeFactory()
  fullName: com.fasterxml.jackson.databind.ObjectReader.getTypeFactory()
  overload: com.fasterxml.jackson.databind.ObjectReader.getTypeFactory*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public TypeFactory getTypeFactory()
    return:
      type: com.fasterxml.jackson.databind.type.TypeFactory
- uid: com.fasterxml.jackson.databind.ObjectReader.getValueType()
  id: getValueType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: getValueType()
  nameWithType: ObjectReader.getValueType()
  fullName: com.fasterxml.jackson.databind.ObjectReader.getValueType()
  overload: com.fasterxml.jackson.databind.ObjectReader.getValueType*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public JavaType getValueType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ObjectReader.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  id: isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: isEnabled(JsonParser.Feature f)
  nameWithType: ObjectReader.isEnabled(JsonParser.Feature f)
  fullName: com.fasterxml.jackson.databind.ObjectReader.isEnabled(JsonParser.Feature f)
  overload: com.fasterxml.jackson.databind.ObjectReader.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean isEnabled(JsonParser.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.JsonParser.Feature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ObjectReader.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
  id: isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: isEnabled(StreamReadFeature f)
  nameWithType: ObjectReader.isEnabled(StreamReadFeature f)
  fullName: com.fasterxml.jackson.databind.ObjectReader.isEnabled(StreamReadFeature f)
  overload: com.fasterxml.jackson.databind.ObjectReader.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean isEnabled(StreamReadFeature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.StreamReadFeature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ObjectReader.isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
  id: isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: isEnabled(DeserializationFeature f)
  nameWithType: ObjectReader.isEnabled(DeserializationFeature f)
  fullName: com.fasterxml.jackson.databind.ObjectReader.isEnabled(DeserializationFeature f)
  overload: com.fasterxml.jackson.databind.ObjectReader.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean isEnabled(DeserializationFeature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.databind.DeserializationFeature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ObjectReader.isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  id: isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: isEnabled(MapperFeature f)
  nameWithType: ObjectReader.isEnabled(MapperFeature f)
  fullName: com.fasterxml.jackson.databind.ObjectReader.isEnabled(MapperFeature f)
  overload: com.fasterxml.jackson.databind.ObjectReader.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean isEnabled(MapperFeature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.databind.MapperFeature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ObjectReader.missingNode()
  id: missingNode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: missingNode()
  nameWithType: ObjectReader.missingNode()
  fullName: com.fasterxml.jackson.databind.ObjectReader.missingNode()
  overload: com.fasterxml.jackson.databind.ObjectReader.missingNode*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public JsonNode missingNode()
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.ObjectReader.nullNode()
  id: nullNode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: nullNode()
  nameWithType: ObjectReader.nullNode()
  fullName: com.fasterxml.jackson.databind.ObjectReader.nullNode()
  overload: com.fasterxml.jackson.databind.ObjectReader.nullNode*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public JsonNode nullNode()
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.ObjectReader.readTree(byte[])
  id: readTree(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: readTree(byte[] json)
  nameWithType: ObjectReader.readTree(byte[] json)
  fullName: com.fasterxml.jackson.databind.ObjectReader.readTree(byte[] json)
  overload: com.fasterxml.jackson.databind.ObjectReader.readTree*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Same as <xref uid="com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.InputStream)" data-throw-if-not-resolved="false">#readTree(InputStream)</xref> except content read from passed-in byte array.
  syntax:
    content: public JsonNode readTree(byte[] json)
    parameters:
    - id: json
      type: byte[]
    return:
      type: com.fasterxml.jackson.databind.JsonNode
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.readTree(byte[],int,int)
  id: readTree(byte[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: readTree(byte[] json, int offset, int len)
  nameWithType: ObjectReader.readTree(byte[] json, int offset, int len)
  fullName: com.fasterxml.jackson.databind.ObjectReader.readTree(byte[] json, int offset, int len)
  overload: com.fasterxml.jackson.databind.ObjectReader.readTree*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Same as <xref uid="com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.InputStream)" data-throw-if-not-resolved="false">#readTree(InputStream)</xref> except content read from passed-in byte array.
  syntax:
    content: public JsonNode readTree(byte[] json, int offset, int len)
    parameters:
    - id: json
      type: byte[]
    - id: offset
      type: int
    - id: len
      type: int
    return:
      type: com.fasterxml.jackson.databind.JsonNode
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.DataInput)
  id: readTree(java.io.DataInput)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: readTree(DataInput src)
  nameWithType: ObjectReader.readTree(DataInput src)
  fullName: com.fasterxml.jackson.databind.ObjectReader.readTree(DataInput src)
  overload: com.fasterxml.jackson.databind.ObjectReader.readTree*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Same as <xref uid="com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.InputStream)" data-throw-if-not-resolved="false">#readTree(InputStream)</xref> except content read using passed-in <xref uid="java.io.DataInput" data-throw-if-not-resolved="false">DataInput</xref>.
  syntax:
    content: public JsonNode readTree(DataInput src)
    parameters:
    - id: src
      type: java.io.DataInput
    return:
      type: com.fasterxml.jackson.databind.JsonNode
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.InputStream)
  id: readTree(java.io.InputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: readTree(InputStream src)
  nameWithType: ObjectReader.readTree(InputStream src)
  fullName: com.fasterxml.jackson.databind.ObjectReader.readTree(InputStream src)
  overload: com.fasterxml.jackson.databind.ObjectReader.readTree*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method that reads content from given input source, using configuration of this reader, and binds it as JSON Tree. Returns <xref uid="com.fasterxml.jackson.databind.JsonNode" data-throw-if-not-resolved="false">JsonNode</xref> that represents the root of the resulting tree, if there was content to read, or "missing node" (instance of <xref uid="com.fasterxml.jackson.databind.JsonNode" data-throw-if-not-resolved="false">JsonNode</xref> for which <xref uid="com.fasterxml.jackson.databind.JsonNode.isMissingNode()" data-throw-if-not-resolved="false">JsonNode#isMissingNode()</xref> returns true, and behaves otherwise similar to "null node") if no more content is accessible through passed-in input source.


    NOTE! Behavior with end-of-input (no more content) differs between this `readTree` method, and <xref uid="com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readTree(com.fasterxml.jackson.core.JsonParser)" data-throw-if-not-resolved="false">#readTree(JsonParser)</xref> \-- latter returns `null` for "no content" case.


    Note that if an object was specified with a call to <xref uid="com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate(java.lang.Object)" data-throw-if-not-resolved="false">#withValueToUpdate(Object)</xref> it will just be ignored; result is always a newly constructed <xref uid="com.fasterxml.jackson.databind.JsonNode" data-throw-if-not-resolved="false">JsonNode</xref> instance.
  syntax:
    content: public JsonNode readTree(InputStream src)
    parameters:
    - id: src
      type: java.io.InputStream
    return:
      type: com.fasterxml.jackson.databind.JsonNode
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.Reader)
  id: readTree(java.io.Reader)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: readTree(Reader src)
  nameWithType: ObjectReader.readTree(Reader src)
  fullName: com.fasterxml.jackson.databind.ObjectReader.readTree(Reader src)
  overload: com.fasterxml.jackson.databind.ObjectReader.readTree*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Same as <xref uid="com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.InputStream)" data-throw-if-not-resolved="false">#readTree(InputStream)</xref> except content accessed through passed-in <xref uid="java.io.Reader" data-throw-if-not-resolved="false">Reader</xref>
  syntax:
    content: public JsonNode readTree(Reader src)
    parameters:
    - id: src
      type: java.io.Reader
    return:
      type: com.fasterxml.jackson.databind.JsonNode
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectReader.readTree(java.lang.String)
  id: readTree(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: readTree(String json)
  nameWithType: ObjectReader.readTree(String json)
  fullName: com.fasterxml.jackson.databind.ObjectReader.readTree(String json)
  overload: com.fasterxml.jackson.databind.ObjectReader.readTree*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Same as <xref uid="com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.InputStream)" data-throw-if-not-resolved="false">#readTree(InputStream)</xref> except content read from passed-in <xref uid="java.lang.String" data-throw-if-not-resolved="false">String</xref>
  syntax:
    content: public JsonNode readTree(String json)
    parameters:
    - id: json
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JsonNode
  exceptions:
  - type: com.fasterxml.jackson.core.JsonProcessingException
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ObjectReader.treeAsTokens(com.fasterxml.jackson.core.TreeNode)
  id: treeAsTokens(com.fasterxml.jackson.core.TreeNode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: treeAsTokens(TreeNode n)
  nameWithType: ObjectReader.treeAsTokens(TreeNode n)
  fullName: com.fasterxml.jackson.databind.ObjectReader.treeAsTokens(TreeNode n)
  overload: com.fasterxml.jackson.databind.ObjectReader.treeAsTokens*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> for reading contents of a JSON tree, as if it was external serialized JSON content.
  syntax:
    content: public JsonParser treeAsTokens(TreeNode n)
    parameters:
    - id: n
      type: com.fasterxml.jackson.core.TreeNode
    return:
      type: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.databind.ObjectReader.version()
  id: version()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: version()
  nameWithType: ObjectReader.version()
  fullName: com.fasterxml.jackson.databind.ObjectReader.version()
  overload: com.fasterxml.jackson.databind.ObjectReader.version*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that will return version information stored in and read from jar that contains this class.
  syntax:
    content: public Version version()
    return:
      type: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.core.Base64Variant)
  id: with(com.fasterxml.jackson.core.Base64Variant)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: with(Base64Variant defaultBase64)
  nameWithType: ObjectReader.with(Base64Variant defaultBase64)
  fullName: com.fasterxml.jackson.databind.ObjectReader.with(Base64Variant defaultBase64)
  overload: com.fasterxml.jackson.databind.ObjectReader.with*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectReader with(Base64Variant defaultBase64)
    parameters:
    - id: defaultBase64
      type: com.fasterxml.jackson.core.Base64Variant
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.core.FormatFeature)
  id: with(com.fasterxml.jackson.core.FormatFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: with(FormatFeature feature)
  nameWithType: ObjectReader.with(FormatFeature feature)
  fullName: com.fasterxml.jackson.databind.ObjectReader.with(FormatFeature feature)
  overload: com.fasterxml.jackson.databind.ObjectReader.with*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new reader instance that is configured with specified feature enabled.
  syntax:
    content: public ObjectReader with(FormatFeature feature)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.core.FormatFeature
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.core.FormatSchema)
  id: with(com.fasterxml.jackson.core.FormatSchema)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: with(FormatSchema schema)
  nameWithType: ObjectReader.with(FormatSchema schema)
  fullName: com.fasterxml.jackson.databind.ObjectReader.with(FormatSchema schema)
  overload: com.fasterxml.jackson.databind.ObjectReader.with*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for constructing a new instance with configuration that passes specified <xref uid="com.fasterxml.jackson.core.FormatSchema" data-throw-if-not-resolved="false">FormatSchema</xref> to <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> that is constructed for parsing content.


    Note that the method does NOT change state of this reader, but rather construct and returns a newly configured instance.
  syntax:
    content: public ObjectReader with(FormatSchema schema)
    parameters:
    - id: schema
      type: com.fasterxml.jackson.core.FormatSchema
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.core.JsonFactory)
  id: with(com.fasterxml.jackson.core.JsonFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: with(JsonFactory f)
  nameWithType: ObjectReader.with(JsonFactory f)
  fullName: com.fasterxml.jackson.databind.ObjectReader.with(JsonFactory f)
  overload: com.fasterxml.jackson.databind.ObjectReader.with*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for constructing a new reader instance with configuration that uses passed <xref uid="com.fasterxml.jackson.core.JsonFactory" data-throw-if-not-resolved="false">JsonFactory</xref> for constructing underlying Readers.


    NOTE: only factories that **DO NOT REQUIRE SPECIAL MAPPERS** (that is, ones that return `false` for <xref uid="com.fasterxml.jackson.core.JsonFactory.requiresCustomCodec()" data-throw-if-not-resolved="false">JsonFactory#requiresCustomCodec()</xref>) can be used: trying to use one that requires custom codec will throw exception
  syntax:
    content: public ObjectReader with(JsonFactory f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.JsonFactory
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.core.JsonParser.Feature)
  id: with(com.fasterxml.jackson.core.JsonParser.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: with(JsonParser.Feature feature)
  nameWithType: ObjectReader.with(JsonParser.Feature feature)
  fullName: com.fasterxml.jackson.databind.ObjectReader.with(JsonParser.Feature feature)
  overload: com.fasterxml.jackson.databind.ObjectReader.with*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new reader instance that is configured with specified feature enabled.
  syntax:
    content: public ObjectReader with(JsonParser.Feature feature)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.core.JsonParser.Feature
      description: Feature to enable
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
      description: Reader instance with specified feature enabled
- uid: com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.core.StreamReadFeature)
  id: with(com.fasterxml.jackson.core.StreamReadFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: with(StreamReadFeature feature)
  nameWithType: ObjectReader.with(StreamReadFeature feature)
  fullName: com.fasterxml.jackson.databind.ObjectReader.with(StreamReadFeature feature)
  overload: com.fasterxml.jackson.databind.ObjectReader.with*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new reader instance that is configured with specified feature enabled.
  syntax:
    content: public ObjectReader with(StreamReadFeature feature)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.core.StreamReadFeature
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
      description: Reader instance with specified feature enabled
- uid: com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.databind.DeserializationConfig)
  id: with(com.fasterxml.jackson.databind.DeserializationConfig)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: with(DeserializationConfig config)
  nameWithType: ObjectReader.with(DeserializationConfig config)
  fullName: com.fasterxml.jackson.databind.ObjectReader.with(DeserializationConfig config)
  overload: com.fasterxml.jackson.databind.ObjectReader.with*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Mutant factory method that will construct a new instance that has specified underlying <xref uid="com.fasterxml.jackson.databind.DeserializationConfig" data-throw-if-not-resolved="false">DeserializationConfig</xref>.


    NOTE: use of this method is not recommended, as there are many other re-configuration methods available.
  syntax:
    content: public ObjectReader with(DeserializationConfig config)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.databind.DeserializationFeature)
  id: with(com.fasterxml.jackson.databind.DeserializationFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: with(DeserializationFeature feature)
  nameWithType: ObjectReader.with(DeserializationFeature feature)
  fullName: com.fasterxml.jackson.databind.ObjectReader.with(DeserializationFeature feature)
  overload: com.fasterxml.jackson.databind.ObjectReader.with*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new reader instance that is configured with specified feature enabled.
  syntax:
    content: public ObjectReader with(DeserializationFeature feature)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.databind.DeserializationFeature
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature...)
  id: with(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: with(DeserializationFeature first, DeserializationFeature[] other)
  nameWithType: ObjectReader.with(DeserializationFeature first, DeserializationFeature[] other)
  fullName: com.fasterxml.jackson.databind.ObjectReader.with(DeserializationFeature first, DeserializationFeature[] other)
  overload: com.fasterxml.jackson.databind.ObjectReader.with*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new reader instance that is configured with specified features enabled.
  syntax:
    content: public ObjectReader with(DeserializationFeature first, DeserializationFeature[] other)
    parameters:
    - id: first
      type: com.fasterxml.jackson.databind.DeserializationFeature
    - id: other
      type: com.fasterxml.jackson.databind.DeserializationFeature[]
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.databind.InjectableValues)
  id: with(com.fasterxml.jackson.databind.InjectableValues)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: with(InjectableValues injectableValues)
  nameWithType: ObjectReader.with(InjectableValues injectableValues)
  fullName: com.fasterxml.jackson.databind.ObjectReader.with(InjectableValues injectableValues)
  overload: com.fasterxml.jackson.databind.ObjectReader.with*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for constructing a new instance with configuration that uses passed <xref uid="com.fasterxml.jackson.databind.InjectableValues" data-throw-if-not-resolved="false">InjectableValues</xref> to provide injectable values.


    Note that the method does NOT change state of this reader, but rather construct and returns a newly configured instance.
  syntax:
    content: public ObjectReader with(InjectableValues injectableValues)
    parameters:
    - id: injectableValues
      type: com.fasterxml.jackson.databind.InjectableValues
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.databind.cfg.ContextAttributes)
  id: with(com.fasterxml.jackson.databind.cfg.ContextAttributes)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: with(ContextAttributes attrs)
  nameWithType: ObjectReader.with(ContextAttributes attrs)
  fullName: com.fasterxml.jackson.databind.ObjectReader.with(ContextAttributes attrs)
  overload: com.fasterxml.jackson.databind.ObjectReader.with*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectReader with(ContextAttributes attrs)
    parameters:
    - id: attrs
      type: com.fasterxml.jackson.databind.cfg.ContextAttributes
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.with(com.fasterxml.jackson.databind.node.JsonNodeFactory)
  id: with(com.fasterxml.jackson.databind.node.JsonNodeFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: with(JsonNodeFactory f)
  nameWithType: ObjectReader.with(JsonNodeFactory f)
  fullName: com.fasterxml.jackson.databind.ObjectReader.with(JsonNodeFactory f)
  overload: com.fasterxml.jackson.databind.ObjectReader.with*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for constructing a new reader instance with configuration that uses passed <xref uid="com.fasterxml.jackson.databind.node.JsonNodeFactory" data-throw-if-not-resolved="false">JsonNodeFactory</xref> for constructing <xref uid="com.fasterxml.jackson.databind.JsonNode" data-throw-if-not-resolved="false">JsonNode</xref> instances.


    Note that the method does NOT change state of this reader, but rather construct and returns a newly configured instance.
  syntax:
    content: public ObjectReader with(JsonNodeFactory f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.databind.node.JsonNodeFactory
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.with(java.util.Locale)
  id: with(java.util.Locale)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: with(Locale l)
  nameWithType: ObjectReader.with(Locale l)
  fullName: com.fasterxml.jackson.databind.ObjectReader.with(Locale l)
  overload: com.fasterxml.jackson.databind.ObjectReader.with*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectReader with(Locale l)
    parameters:
    - id: l
      type: java.util.Locale
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.with(java.util.TimeZone)
  id: with(java.util.TimeZone)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: with(TimeZone tz)
  nameWithType: ObjectReader.with(TimeZone tz)
  fullName: com.fasterxml.jackson.databind.ObjectReader.with(TimeZone tz)
  overload: com.fasterxml.jackson.databind.ObjectReader.with*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectReader with(TimeZone tz)
    parameters:
    - id: tz
      type: java.util.TimeZone
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.withAttribute(java.lang.Object,java.lang.Object)
  id: withAttribute(java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withAttribute(Object key, Object value)
  nameWithType: ObjectReader.withAttribute(Object key, Object value)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withAttribute(Object key, Object value)
  overload: com.fasterxml.jackson.databind.ObjectReader.withAttribute*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectReader withAttribute(Object key, Object value)
    parameters:
    - id: key
      type: java.lang.Object
    - id: value
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.withAttributes(java.util.Map<?,?>)
  id: withAttributes(java.util.Map<?,?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withAttributes(Map<?,?> attrs)
  nameWithType: ObjectReader.withAttributes(Map<?,?> attrs)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withAttributes(Map<?,?> attrs)
  overload: com.fasterxml.jackson.databind.ObjectReader.withAttributes*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectReader withAttributes(Map<?,?> attrs)
    parameters:
    - id: attrs
      type: java.util.Map<?,?>
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.withFeatures(com.fasterxml.jackson.core.FormatFeature...)
  id: withFeatures(com.fasterxml.jackson.core.FormatFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withFeatures(FormatFeature[] features)
  nameWithType: ObjectReader.withFeatures(FormatFeature[] features)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withFeatures(FormatFeature[] features)
  overload: com.fasterxml.jackson.databind.ObjectReader.withFeatures*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new reader instance that is configured with specified features enabled.
  syntax:
    content: public ObjectReader withFeatures(FormatFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.core.FormatFeature[]
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.withFeatures(com.fasterxml.jackson.core.JsonParser.Feature...)
  id: withFeatures(com.fasterxml.jackson.core.JsonParser.Feature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withFeatures(JsonParser.Feature[] features)
  nameWithType: ObjectReader.withFeatures(JsonParser.Feature[] features)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withFeatures(JsonParser.Feature[] features)
  overload: com.fasterxml.jackson.databind.ObjectReader.withFeatures*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new reader instance that is configured with specified features enabled.
  syntax:
    content: public ObjectReader withFeatures(JsonParser.Feature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.core.JsonParser.Feature[]
      description: Features to enable
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
      description: Reader instance with specified features enabled
- uid: com.fasterxml.jackson.databind.ObjectReader.withFeatures(com.fasterxml.jackson.databind.DeserializationFeature...)
  id: withFeatures(com.fasterxml.jackson.databind.DeserializationFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withFeatures(DeserializationFeature[] features)
  nameWithType: ObjectReader.withFeatures(DeserializationFeature[] features)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withFeatures(DeserializationFeature[] features)
  overload: com.fasterxml.jackson.databind.ObjectReader.withFeatures*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new reader instance that is configured with specified features enabled.
  syntax:
    content: public ObjectReader withFeatures(DeserializationFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.databind.DeserializationFeature[]
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.withFormatDetection(com.fasterxml.jackson.databind.ObjectReader...)
  id: withFormatDetection(com.fasterxml.jackson.databind.ObjectReader...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withFormatDetection(ObjectReader[] readers)
  nameWithType: ObjectReader.withFormatDetection(ObjectReader[] readers)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withFormatDetection(ObjectReader[] readers)
  overload: com.fasterxml.jackson.databind.ObjectReader.withFormatDetection*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Fluent factory method for constructing a reader that will try to auto-detect underlying data format, using specified list of <xref uid="com.fasterxml.jackson.core.JsonFactory" data-throw-if-not-resolved="false">JsonFactory</xref> instances, and default <xref uid="com.fasterxml.jackson.databind.deser.DataFormatReaders" data-throw-if-not-resolved="false">DataFormatReaders</xref> settings (for customized <xref uid="com.fasterxml.jackson.databind.deser.DataFormatReaders" data-throw-if-not-resolved="false">DataFormatReaders</xref>, you can construct instance yourself). to construct appropriate <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> for actual parsing.


    Note: since format detection only works with byte sources, it is possible to get a failure from some 'readValue()' methods. Also, if input cannot be reliably (enough) detected as one of specified types, an exception will be thrown.


    Note: not all <xref uid="com.fasterxml.jackson.core.JsonFactory" data-throw-if-not-resolved="false">JsonFactory</xref> types can be passed: specifically, ones that require "custom codec" (like XML factory) will not work. Instead, use method that takes <xref uid="com.fasterxml.jackson.databind.ObjectReader" data-throw-if-not-resolved="false">ObjectReader</xref> instances instead of factories.
  syntax:
    content: public ObjectReader withFormatDetection(ObjectReader[] readers)
    parameters:
    - id: readers
      type: com.fasterxml.jackson.databind.ObjectReader[]
      description: >-
        Data formats accepted, in decreasing order of priority (that is,
           matches checked in listed order, first match wins)
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
      description: Newly configured writer instance
- uid: com.fasterxml.jackson.databind.ObjectReader.withFormatDetection(com.fasterxml.jackson.databind.deser.DataFormatReaders)
  id: withFormatDetection(com.fasterxml.jackson.databind.deser.DataFormatReaders)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withFormatDetection(DataFormatReaders readers)
  nameWithType: ObjectReader.withFormatDetection(DataFormatReaders readers)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withFormatDetection(DataFormatReaders readers)
  overload: com.fasterxml.jackson.databind.ObjectReader.withFormatDetection*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Fluent factory method for constructing a reader that will try to auto-detect underlying data format, using specified <xref uid="com.fasterxml.jackson.databind.deser.DataFormatReaders" data-throw-if-not-resolved="false">DataFormatReaders</xref>.


    NOTE: since format detection only works with byte sources, it is possible to get a failure from some 'readValue()' methods. Also, if input cannot be reliably (enough) detected as one of specified types, an exception will be thrown.
  syntax:
    content: public ObjectReader withFormatDetection(DataFormatReaders readers)
    parameters:
    - id: readers
      type: com.fasterxml.jackson.databind.deser.DataFormatReaders
      description: DataFormatReaders to use for detecting underlying format.
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
      description: Newly configured writer instance
- uid: com.fasterxml.jackson.databind.ObjectReader.withHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler)
  id: withHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withHandler(DeserializationProblemHandler h)
  nameWithType: ObjectReader.withHandler(DeserializationProblemHandler h)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withHandler(DeserializationProblemHandler h)
  overload: com.fasterxml.jackson.databind.ObjectReader.withHandler*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectReader withHandler(DeserializationProblemHandler h)
    parameters:
    - id: h
      type: com.fasterxml.jackson.databind.deser.DeserializationProblemHandler
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.withRootName(com.fasterxml.jackson.databind.PropertyName)
  id: withRootName(com.fasterxml.jackson.databind.PropertyName)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withRootName(PropertyName rootName)
  nameWithType: ObjectReader.withRootName(PropertyName rootName)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withRootName(PropertyName rootName)
  overload: com.fasterxml.jackson.databind.ObjectReader.withRootName*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectReader withRootName(PropertyName rootName)
    parameters:
    - id: rootName
      type: com.fasterxml.jackson.databind.PropertyName
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.withRootName(java.lang.String)
  id: withRootName(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withRootName(String rootName)
  nameWithType: ObjectReader.withRootName(String rootName)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withRootName(String rootName)
  overload: com.fasterxml.jackson.databind.ObjectReader.withRootName*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for constructing a new instance with configuration that specifies what root name to expect for "root name unwrapping". See <xref uid="com.fasterxml.jackson.databind.DeserializationConfig.withRootName*" data-throw-if-not-resolved="false">DeserializationConfig#withRootName(String)</xref> for details.


    Note that the method does NOT change state of this reader, but rather construct and returns a newly configured instance.
  syntax:
    content: public ObjectReader withRootName(String rootName)
    parameters:
    - id: rootName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.withType(com.fasterxml.jackson.core.type.TypeReference<?>)
  id: withType(com.fasterxml.jackson.core.type.TypeReference<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withType(TypeReference<?> valueTypeRef)
  nameWithType: ObjectReader.withType(TypeReference<?> valueTypeRef)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withType(TypeReference<?> valueTypeRef)
  overload: com.fasterxml.jackson.databind.ObjectReader.withType*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectReader withType(TypeReference<?> valueTypeRef)
    parameters:
    - id: valueTypeRef
      type: com.fasterxml.jackson.core.type.TypeReference<?>
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.withType(com.fasterxml.jackson.databind.JavaType)
  id: withType(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withType(JavaType valueType)
  nameWithType: ObjectReader.withType(JavaType valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withType(JavaType valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.withType*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectReader withType(JavaType valueType)
    parameters:
    - id: valueType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.withType(java.lang.Class<?>)
  id: withType(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withType(Class<?> valueType)
  nameWithType: ObjectReader.withType(Class<?> valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withType(Class<?> valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.withType*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectReader withType(Class<?> valueType)
    parameters:
    - id: valueType
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.withType(java.lang.reflect.Type)
  id: withType(java.lang.reflect.Type)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withType(Type valueType)
  nameWithType: ObjectReader.withType(Type valueType)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withType(Type valueType)
  overload: com.fasterxml.jackson.databind.ObjectReader.withType*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectReader withType(Type valueType)
    parameters:
    - id: valueType
      type: java.lang.reflect.Type
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate(java.lang.Object)
  id: withValueToUpdate(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withValueToUpdate(Object value)
  nameWithType: ObjectReader.withValueToUpdate(Object value)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate(Object value)
  overload: com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for constructing a new instance with configuration that updates passed Object (as root value), instead of constructing a new value.


    Note that the method does NOT change state of this reader, but rather construct and returns a newly configured instance.
  syntax:
    content: public ObjectReader withValueToUpdate(Object value)
    parameters:
    - id: value
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.withView(java.lang.Class<?>)
  id: withView(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withView(Class<?> activeView)
  nameWithType: ObjectReader.withView(Class<?> activeView)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withView(Class<?> activeView)
  overload: com.fasterxml.jackson.databind.ObjectReader.withView*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for constructing a new instance with configuration that uses specified View for filtering.


    Note that the method does NOT change state of this reader, but rather construct and returns a newly configured instance.
  syntax:
    content: public ObjectReader withView(Class<?> activeView)
    parameters:
    - id: activeView
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.without(com.fasterxml.jackson.core.FormatFeature)
  id: without(com.fasterxml.jackson.core.FormatFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: without(FormatFeature feature)
  nameWithType: ObjectReader.without(FormatFeature feature)
  fullName: com.fasterxml.jackson.databind.ObjectReader.without(FormatFeature feature)
  overload: com.fasterxml.jackson.databind.ObjectReader.without*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new reader instance that is configured with specified feature disabled.
  syntax:
    content: public ObjectReader without(FormatFeature feature)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.core.FormatFeature
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.without(com.fasterxml.jackson.core.JsonParser.Feature)
  id: without(com.fasterxml.jackson.core.JsonParser.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: without(JsonParser.Feature feature)
  nameWithType: ObjectReader.without(JsonParser.Feature feature)
  fullName: com.fasterxml.jackson.databind.ObjectReader.without(JsonParser.Feature feature)
  overload: com.fasterxml.jackson.databind.ObjectReader.without*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new reader instance that is configured with specified feature disabled.
  syntax:
    content: public ObjectReader without(JsonParser.Feature feature)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.core.JsonParser.Feature
      description: Feature to disable
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
      description: Reader instance with specified feature disabled
- uid: com.fasterxml.jackson.databind.ObjectReader.without(com.fasterxml.jackson.core.StreamReadFeature)
  id: without(com.fasterxml.jackson.core.StreamReadFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: without(StreamReadFeature feature)
  nameWithType: ObjectReader.without(StreamReadFeature feature)
  fullName: com.fasterxml.jackson.databind.ObjectReader.without(StreamReadFeature feature)
  overload: com.fasterxml.jackson.databind.ObjectReader.without*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new reader instance that is configured with specified feature disabled.
  syntax:
    content: public ObjectReader without(StreamReadFeature feature)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.core.StreamReadFeature
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
      description: Reader instance with specified feature enabled
- uid: com.fasterxml.jackson.databind.ObjectReader.without(com.fasterxml.jackson.databind.DeserializationFeature)
  id: without(com.fasterxml.jackson.databind.DeserializationFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: without(DeserializationFeature feature)
  nameWithType: ObjectReader.without(DeserializationFeature feature)
  fullName: com.fasterxml.jackson.databind.ObjectReader.without(DeserializationFeature feature)
  overload: com.fasterxml.jackson.databind.ObjectReader.without*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new reader instance that is configured with specified feature disabled.
  syntax:
    content: public ObjectReader without(DeserializationFeature feature)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.databind.DeserializationFeature
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.without(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature...)
  id: without(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: without(DeserializationFeature first, DeserializationFeature[] other)
  nameWithType: ObjectReader.without(DeserializationFeature first, DeserializationFeature[] other)
  fullName: com.fasterxml.jackson.databind.ObjectReader.without(DeserializationFeature first, DeserializationFeature[] other)
  overload: com.fasterxml.jackson.databind.ObjectReader.without*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new reader instance that is configured with specified features disabled.
  syntax:
    content: public ObjectReader without(DeserializationFeature first, DeserializationFeature[] other)
    parameters:
    - id: first
      type: com.fasterxml.jackson.databind.DeserializationFeature
    - id: other
      type: com.fasterxml.jackson.databind.DeserializationFeature[]
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.withoutAttribute(java.lang.Object)
  id: withoutAttribute(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withoutAttribute(Object key)
  nameWithType: ObjectReader.withoutAttribute(Object key)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withoutAttribute(Object key)
  overload: com.fasterxml.jackson.databind.ObjectReader.withoutAttribute*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectReader withoutAttribute(Object key)
    parameters:
    - id: key
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.withoutFeatures(com.fasterxml.jackson.core.FormatFeature...)
  id: withoutFeatures(com.fasterxml.jackson.core.FormatFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withoutFeatures(FormatFeature[] features)
  nameWithType: ObjectReader.withoutFeatures(FormatFeature[] features)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withoutFeatures(FormatFeature[] features)
  overload: com.fasterxml.jackson.databind.ObjectReader.withoutFeatures*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new reader instance that is configured with specified features disabled.
  syntax:
    content: public ObjectReader withoutFeatures(FormatFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.core.FormatFeature[]
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.withoutFeatures(com.fasterxml.jackson.core.JsonParser.Feature...)
  id: withoutFeatures(com.fasterxml.jackson.core.JsonParser.Feature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withoutFeatures(JsonParser.Feature[] features)
  nameWithType: ObjectReader.withoutFeatures(JsonParser.Feature[] features)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withoutFeatures(JsonParser.Feature[] features)
  overload: com.fasterxml.jackson.databind.ObjectReader.withoutFeatures*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new reader instance that is configured with specified features disabled.
  syntax:
    content: public ObjectReader withoutFeatures(JsonParser.Feature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.core.JsonParser.Feature[]
      description: Features to disable
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
      description: Reader instance with specified features disabled
- uid: com.fasterxml.jackson.databind.ObjectReader.withoutFeatures(com.fasterxml.jackson.databind.DeserializationFeature...)
  id: withoutFeatures(com.fasterxml.jackson.databind.DeserializationFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withoutFeatures(DeserializationFeature[] features)
  nameWithType: ObjectReader.withoutFeatures(DeserializationFeature[] features)
  fullName: com.fasterxml.jackson.databind.ObjectReader.withoutFeatures(DeserializationFeature[] features)
  overload: com.fasterxml.jackson.databind.ObjectReader.withoutFeatures*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new reader instance that is configured with specified features disabled.
  syntax:
    content: public ObjectReader withoutFeatures(DeserializationFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.databind.DeserializationFeature[]
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.withoutRootName()
  id: withoutRootName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: withoutRootName()
  nameWithType: ObjectReader.withoutRootName()
  fullName: com.fasterxml.jackson.databind.ObjectReader.withoutRootName()
  overload: com.fasterxml.jackson.databind.ObjectReader.withoutRootName*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Convenience method that is same as calling: `withRootName("")` which will forcibly prevent use of root name wrapping when writing values with this <xref uid="com.fasterxml.jackson.databind.ObjectReader" data-throw-if-not-resolved="false">ObjectReader</xref>.'
  syntax:
    content: public ObjectReader withoutRootName()
    return:
      type: com.fasterxml.jackson.databind.ObjectReader
- uid: com.fasterxml.jackson.databind.ObjectReader.writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode)
  id: writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: writeTree(JsonGenerator g, TreeNode rootNode)
  nameWithType: ObjectReader.writeTree(JsonGenerator g, TreeNode rootNode)
  fullName: com.fasterxml.jackson.databind.ObjectReader.writeTree(JsonGenerator g, TreeNode rootNode)
  overload: com.fasterxml.jackson.databind.ObjectReader.writeTree*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public void writeTree(JsonGenerator g, TreeNode rootNode)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: rootNode
      type: com.fasterxml.jackson.core.TreeNode
- uid: com.fasterxml.jackson.databind.ObjectReader.writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
  id: writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectReader
  langs:
  - java
  name: writeValue(JsonGenerator gen, Object value)
  nameWithType: ObjectReader.writeValue(JsonGenerator gen, Object value)
  fullName: com.fasterxml.jackson.databind.ObjectReader.writeValue(JsonGenerator gen, Object value)
  overload: com.fasterxml.jackson.databind.ObjectReader.writeValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method to serialize given Java Object, using generator provided.
  syntax:
    content: public void writeValue(JsonGenerator gen, Object value)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: value
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
references:
- uid: com.fasterxml.jackson.databind.ObjectMapper
  name: ObjectMapper
  nameWithType: ObjectMapper
  fullName: com.fasterxml.jackson.databind.ObjectMapper
- uid: com.fasterxml.jackson.databind.DeserializationConfig
  name: DeserializationConfig
  nameWithType: DeserializationConfig
  fullName: com.fasterxml.jackson.databind.DeserializationConfig
- uid: com.fasterxml.jackson.databind.ObjectReader.ObjectReader*
  name: ObjectReader
  nameWithType: ObjectReader.ObjectReader
  fullName: com.fasterxml.jackson.databind.ObjectReader.ObjectReader
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.core.FormatSchema
  name: FormatSchema
  nameWithType: FormatSchema
  fullName: com.fasterxml.jackson.core.FormatSchema
- uid: com.fasterxml.jackson.databind.InjectableValues
  name: InjectableValues
  nameWithType: InjectableValues
  fullName: com.fasterxml.jackson.databind.InjectableValues
- uid: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders
  name: DataFormatReaders
  nameWithType: DataFormatReaders
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders
- uid: com.fasterxml.jackson.core.JsonFactory
  name: JsonFactory
  nameWithType: JsonFactory
  fullName: com.fasterxml.jackson.core.JsonFactory
- uid: com.fasterxml.jackson.core.filter.TokenFilter
  name: TokenFilter
  nameWithType: TokenFilter
  fullName: com.fasterxml.jackson.core.filter.TokenFilter
- uid: com.fasterxml.jackson.core.Version
  name: Version
  nameWithType: Version
  fullName: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.databind.ObjectReader.version*
  name: version
  nameWithType: ObjectReader.version
  fullName: com.fasterxml.jackson.databind.ObjectReader.version
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._new*
  name: _new
  nameWithType: ObjectReader._new
  fullName: com.fasterxml.jackson.databind.ObjectReader._new
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: com.fasterxml.jackson.databind.JsonDeserializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.MappingIterator<T>
  spec.java:
  - uid: com.fasterxml.jackson.databind.MappingIterator
    name: MappingIterator
    fullName: com.fasterxml.jackson.databind.MappingIterator
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ObjectReader._newIterator*
  name: <T>_newIterator
  nameWithType: ObjectReader.<T>_newIterator
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>_newIterator
  package: com.fasterxml.jackson.databind
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonToken
  name: JsonToken
  nameWithType: JsonToken
  fullName: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.databind.ObjectReader._initForReading*
  name: _initForReading
  nameWithType: ObjectReader._initForReading
  fullName: com.fasterxml.jackson.databind.ObjectReader._initForReading
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._initForMultiRead*
  name: _initForMultiRead
  nameWithType: ObjectReader._initForMultiRead
  fullName: com.fasterxml.jackson.databind.ObjectReader._initForMultiRead
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.DeserializationFeature
  name: DeserializationFeature
  nameWithType: DeserializationFeature
  fullName: com.fasterxml.jackson.databind.DeserializationFeature
- uid: com.fasterxml.jackson.databind.ObjectReader.with*
  name: with
  nameWithType: ObjectReader.with
  fullName: com.fasterxml.jackson.databind.ObjectReader.with
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.DeserializationFeature[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.DeserializationFeature
    name: DeserializationFeature
    fullName: com.fasterxml.jackson.databind.DeserializationFeature
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.ObjectReader.withFeatures*
  name: withFeatures
  nameWithType: ObjectReader.withFeatures
  fullName: com.fasterxml.jackson.databind.ObjectReader.withFeatures
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader.without*
  name: without
  nameWithType: ObjectReader.without
  fullName: com.fasterxml.jackson.databind.ObjectReader.without
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader.withoutFeatures*
  name: withoutFeatures
  nameWithType: ObjectReader.withoutFeatures
  fullName: com.fasterxml.jackson.databind.ObjectReader.withoutFeatures
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.JsonParser.Feature
  name: JsonParser.Feature
  nameWithType: JsonParser.Feature
  fullName: com.fasterxml.jackson.core.JsonParser.Feature
- uid: com.fasterxml.jackson.core.JsonParser.Feature[]
  spec.java:
  - uid: com.fasterxml.jackson.core.JsonParser.Feature
    name: Feature
    fullName: com.fasterxml.jackson.core.JsonParser.Feature
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.StreamReadFeature
  name: StreamReadFeature
  nameWithType: StreamReadFeature
  fullName: com.fasterxml.jackson.core.StreamReadFeature
- uid: com.fasterxml.jackson.core.FormatFeature
  name: FormatFeature
  nameWithType: FormatFeature
  fullName: com.fasterxml.jackson.core.FormatFeature
- uid: com.fasterxml.jackson.core.FormatFeature[]
  spec.java:
  - uid: com.fasterxml.jackson.core.FormatFeature
    name: FormatFeature
    fullName: com.fasterxml.jackson.core.FormatFeature
  - name: '[]'
    fullName: '[]'
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.ObjectReader.at*
  name: at
  nameWithType: ObjectReader.at
  fullName: com.fasterxml.jackson.databind.ObjectReader.at
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.JsonPointer
  name: JsonPointer
  nameWithType: JsonPointer
  fullName: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.databind.node.JsonNodeFactory
  name: JsonNodeFactory
  nameWithType: JsonNodeFactory
  fullName: com.fasterxml.jackson.databind.node.JsonNodeFactory
- uid: com.fasterxml.jackson.databind.ObjectReader.withRootName*
  name: withRootName
  nameWithType: ObjectReader.withRootName
  fullName: com.fasterxml.jackson.databind.ObjectReader.withRootName
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.PropertyName
  name: PropertyName
  nameWithType: PropertyName
  fullName: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.ObjectReader.withoutRootName*
  name: withoutRootName
  nameWithType: ObjectReader.withoutRootName
  fullName: com.fasterxml.jackson.databind.ObjectReader.withoutRootName
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader.forType*
  name: forType
  nameWithType: ObjectReader.forType
  fullName: com.fasterxml.jackson.databind.ObjectReader.forType
  package: com.fasterxml.jackson.databind
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.type.TypeReference<?>
  spec.java:
  - uid: com.fasterxml.jackson.core.type.TypeReference
    name: TypeReference
    fullName: com.fasterxml.jackson.core.type.TypeReference
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ObjectReader.withType*
  name: withType
  nameWithType: ObjectReader.withType
  fullName: com.fasterxml.jackson.databind.ObjectReader.withType
  package: com.fasterxml.jackson.databind
- uid: java.lang.reflect.Type
  spec.java:
  - uid: java.lang.reflect.Type
    name: Type
    fullName: java.lang.reflect.Type
- uid: com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate*
  name: withValueToUpdate
  nameWithType: ObjectReader.withValueToUpdate
  fullName: com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader.withView*
  name: withView
  nameWithType: ObjectReader.withView
  fullName: com.fasterxml.jackson.databind.ObjectReader.withView
  package: com.fasterxml.jackson.databind
- uid: java.util.Locale
  spec.java:
  - uid: java.util.Locale
    name: Locale
    fullName: java.util.Locale
- uid: java.util.TimeZone
  spec.java:
  - uid: java.util.TimeZone
    name: TimeZone
    fullName: java.util.TimeZone
- uid: com.fasterxml.jackson.databind.deser.DeserializationProblemHandler
  name: DeserializationProblemHandler
  nameWithType: DeserializationProblemHandler
  fullName: com.fasterxml.jackson.databind.deser.DeserializationProblemHandler
- uid: com.fasterxml.jackson.databind.ObjectReader.withHandler*
  name: withHandler
  nameWithType: ObjectReader.withHandler
  fullName: com.fasterxml.jackson.databind.ObjectReader.withHandler
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.Base64Variant
  name: Base64Variant
  nameWithType: Base64Variant
  fullName: com.fasterxml.jackson.core.Base64Variant
- uid: com.fasterxml.jackson.databind.ObjectReader[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.ObjectReader
    name: ObjectReader
    fullName: com.fasterxml.jackson.databind.ObjectReader
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.ObjectReader.withFormatDetection*
  name: withFormatDetection
  nameWithType: ObjectReader.withFormatDetection
  fullName: com.fasterxml.jackson.databind.ObjectReader.withFormatDetection
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.cfg.ContextAttributes
  name: ContextAttributes
  nameWithType: ContextAttributes
  fullName: com.fasterxml.jackson.databind.cfg.ContextAttributes
- uid: java.util.Map<?,?>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: ','
    fullName: ','
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ObjectReader.withAttributes*
  name: withAttributes
  nameWithType: ObjectReader.withAttributes
  fullName: com.fasterxml.jackson.databind.ObjectReader.withAttributes
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader.withAttribute*
  name: withAttribute
  nameWithType: ObjectReader.withAttribute
  fullName: com.fasterxml.jackson.databind.ObjectReader.withAttribute
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader.withoutAttribute*
  name: withoutAttribute
  nameWithType: ObjectReader.withoutAttribute
  fullName: com.fasterxml.jackson.databind.ObjectReader.withoutAttribute
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._with*
  name: _with
  nameWithType: ObjectReader._with
  fullName: com.fasterxml.jackson.databind.ObjectReader._with
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader.isEnabled*
  name: isEnabled
  nameWithType: ObjectReader.isEnabled
  fullName: com.fasterxml.jackson.databind.ObjectReader.isEnabled
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.MapperFeature
  name: MapperFeature
  nameWithType: MapperFeature
  fullName: com.fasterxml.jackson.databind.MapperFeature
- uid: com.fasterxml.jackson.databind.ObjectReader.getConfig*
  name: getConfig
  nameWithType: ObjectReader.getConfig
  fullName: com.fasterxml.jackson.databind.ObjectReader.getConfig
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader.getFactory*
  name: getFactory
  nameWithType: ObjectReader.getFactory
  fullName: com.fasterxml.jackson.databind.ObjectReader.getFactory
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.type.TypeFactory
  name: TypeFactory
  nameWithType: TypeFactory
  fullName: com.fasterxml.jackson.databind.type.TypeFactory
- uid: com.fasterxml.jackson.databind.ObjectReader.getTypeFactory*
  name: getTypeFactory
  nameWithType: ObjectReader.getTypeFactory
  fullName: com.fasterxml.jackson.databind.ObjectReader.getTypeFactory
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader.getAttributes*
  name: getAttributes
  nameWithType: ObjectReader.getAttributes
  fullName: com.fasterxml.jackson.databind.ObjectReader.getAttributes
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader.getInjectableValues*
  name: getInjectableValues
  nameWithType: ObjectReader.getInjectableValues
  fullName: com.fasterxml.jackson.databind.ObjectReader.getInjectableValues
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader.getValueType*
  name: getValueType
  nameWithType: ObjectReader.getValueType
  fullName: com.fasterxml.jackson.databind.ObjectReader.getValueType
  package: com.fasterxml.jackson.databind
- uid: java.io.File
  spec.java:
  - uid: java.io.File
    name: File
    fullName: java.io.File
- uid: com.fasterxml.jackson.databind.ObjectReader.createParser*
  name: createParser
  nameWithType: ObjectReader.createParser
  fullName: com.fasterxml.jackson.databind.ObjectReader.createParser
  package: com.fasterxml.jackson.databind
- uid: java.net.URL
  spec.java:
  - uid: java.net.URL
    name: URL
    fullName: java.net.URL
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: java.io.Reader
  spec.java:
  - uid: java.io.Reader
    name: Reader
    fullName: java.io.Reader
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: java.io.DataInput
  spec.java:
  - uid: java.io.DataInput
    name: DataInput
    fullName: java.io.DataInput
- uid: com.fasterxml.jackson.databind.ObjectReader.createNonBlockingByteArrayParser*
  name: createNonBlockingByteArrayParser
  nameWithType: ObjectReader.createNonBlockingByteArrayParser
  fullName: com.fasterxml.jackson.databind.ObjectReader.createNonBlockingByteArrayParser
  package: com.fasterxml.jackson.databind
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.fasterxml.jackson.databind.ObjectReader.readValue*
  name: <T>readValue
  nameWithType: ObjectReader.<T>readValue
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValue
  package: com.fasterxml.jackson.databind
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.type.TypeReference<T>
  spec.java:
  - uid: com.fasterxml.jackson.core.type.TypeReference
    name: TypeReference
    fullName: com.fasterxml.jackson.core.type.TypeReference
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.type.ResolvedType
  name: ResolvedType
  nameWithType: ResolvedType
  fullName: com.fasterxml.jackson.core.type.ResolvedType
- uid: java.util.Iterator<T>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ObjectReader.readValues*
  name: <T>readValues
  nameWithType: ObjectReader.<T>readValues
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readValues
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JsonNode
  name: JsonNode
  nameWithType: JsonNode
  fullName: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.ObjectReader.createArrayNode*
  name: createArrayNode
  nameWithType: ObjectReader.createArrayNode
  fullName: com.fasterxml.jackson.databind.ObjectReader.createArrayNode
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader.createObjectNode*
  name: createObjectNode
  nameWithType: ObjectReader.createObjectNode
  fullName: com.fasterxml.jackson.databind.ObjectReader.createObjectNode
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader.missingNode*
  name: missingNode
  nameWithType: ObjectReader.missingNode
  fullName: com.fasterxml.jackson.databind.ObjectReader.missingNode
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader.nullNode*
  name: nullNode
  nameWithType: ObjectReader.nullNode
  fullName: com.fasterxml.jackson.databind.ObjectReader.nullNode
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.TreeNode
  name: TreeNode
  nameWithType: TreeNode
  fullName: com.fasterxml.jackson.core.TreeNode
- uid: com.fasterxml.jackson.databind.ObjectReader.treeAsTokens*
  name: treeAsTokens
  nameWithType: ObjectReader.treeAsTokens
  fullName: com.fasterxml.jackson.databind.ObjectReader.treeAsTokens
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader.readTree*
  name: <T>readTree
  nameWithType: ObjectReader.<T>readTree
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>readTree
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.ObjectReader.writeTree*
  name: writeTree
  nameWithType: ObjectReader.writeTree
  fullName: com.fasterxml.jackson.databind.ObjectReader.writeTree
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.JsonProcessingException
  name: JsonProcessingException
  nameWithType: JsonProcessingException
  fullName: com.fasterxml.jackson.core.JsonProcessingException
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ObjectReader.treeToValue*
  name: <T>treeToValue
  nameWithType: ObjectReader.<T>treeToValue
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>treeToValue
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader.writeValue*
  name: writeValue
  nameWithType: ObjectReader.writeValue
  fullName: com.fasterxml.jackson.databind.ObjectReader.writeValue
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._bind*
  name: _bind
  nameWithType: ObjectReader._bind
  fullName: com.fasterxml.jackson.databind.ObjectReader._bind
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._bindAndClose*
  name: _bindAndClose
  nameWithType: ObjectReader._bindAndClose
  fullName: com.fasterxml.jackson.databind.ObjectReader._bindAndClose
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._bindAndCloseAsTree*
  name: _bindAndCloseAsTree
  nameWithType: ObjectReader._bindAndCloseAsTree
  fullName: com.fasterxml.jackson.databind.ObjectReader._bindAndCloseAsTree
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._bindAsTree*
  name: _bindAsTree
  nameWithType: ObjectReader._bindAsTree
  fullName: com.fasterxml.jackson.databind.ObjectReader._bindAsTree
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._bindAsTreeOrNull*
  name: _bindAsTreeOrNull
  nameWithType: ObjectReader._bindAsTreeOrNull
  fullName: com.fasterxml.jackson.databind.ObjectReader._bindAsTreeOrNull
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._bindAndReadValues*
  name: <T>_bindAndReadValues
  nameWithType: ObjectReader.<T>_bindAndReadValues
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>_bindAndReadValues
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._unwrapAndDeserialize*
  name: _unwrapAndDeserialize
  nameWithType: ObjectReader._unwrapAndDeserialize
  fullName: com.fasterxml.jackson.databind.ObjectReader._unwrapAndDeserialize
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._considerFilter*
  name: _considerFilter
  nameWithType: ObjectReader._considerFilter
  fullName: com.fasterxml.jackson.databind.ObjectReader._considerFilter
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._verifyNoTrailingTokens*
  name: _verifyNoTrailingTokens
  nameWithType: ObjectReader._verifyNoTrailingTokens
  fullName: com.fasterxml.jackson.databind.ObjectReader._verifyNoTrailingTokens
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._detectBindAndClose*
  name: _detectBindAndClose
  nameWithType: ObjectReader._detectBindAndClose
  fullName: com.fasterxml.jackson.databind.ObjectReader._detectBindAndClose
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.Match
  name: DataFormatReaders.Match
  nameWithType: DataFormatReaders.Match
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.Match
- uid: com.fasterxml.jackson.databind.ObjectReader._detectBindAndReadValues*
  name: <T>_detectBindAndReadValues
  nameWithType: ObjectReader.<T>_detectBindAndReadValues
  fullName: com.fasterxml.jackson.databind.ObjectReader.<T>_detectBindAndReadValues
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._detectBindAndCloseAsTree*
  name: _detectBindAndCloseAsTree
  nameWithType: ObjectReader._detectBindAndCloseAsTree
  fullName: com.fasterxml.jackson.databind.ObjectReader._detectBindAndCloseAsTree
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._reportUnkownFormat*
  name: _reportUnkownFormat
  nameWithType: ObjectReader._reportUnkownFormat
  fullName: com.fasterxml.jackson.databind.ObjectReader._reportUnkownFormat
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._verifySchemaType*
  name: _verifySchemaType
  nameWithType: ObjectReader._verifySchemaType
  fullName: com.fasterxml.jackson.databind.ObjectReader._verifySchemaType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext
  name: DefaultDeserializationContext
  nameWithType: DefaultDeserializationContext
  fullName: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext
- uid: com.fasterxml.jackson.databind.ObjectReader.createDeserializationContext*
  name: createDeserializationContext
  nameWithType: ObjectReader.createDeserializationContext
  fullName: com.fasterxml.jackson.databind.ObjectReader.createDeserializationContext
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._inputStream*
  name: _inputStream
  nameWithType: ObjectReader._inputStream
  fullName: com.fasterxml.jackson.databind.ObjectReader._inputStream
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.JsonParseException
  name: JsonParseException
  nameWithType: JsonParseException
  fullName: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.databind.ObjectReader._reportUndetectableSource*
  name: _reportUndetectableSource
  nameWithType: ObjectReader._reportUndetectableSource
  fullName: com.fasterxml.jackson.databind.ObjectReader._reportUndetectableSource
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._findRootDeserializer*
  name: _findRootDeserializer
  nameWithType: ObjectReader._findRootDeserializer
  fullName: com.fasterxml.jackson.databind.ObjectReader._findRootDeserializer
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._findTreeDeserializer*
  name: _findTreeDeserializer
  nameWithType: ObjectReader._findTreeDeserializer
  fullName: com.fasterxml.jackson.databind.ObjectReader._findTreeDeserializer
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._prefetchRootDeserializer*
  name: _prefetchRootDeserializer
  nameWithType: ObjectReader._prefetchRootDeserializer
  fullName: com.fasterxml.jackson.databind.ObjectReader._prefetchRootDeserializer
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._jsonNodeType*
  name: _jsonNodeType
  nameWithType: ObjectReader._jsonNodeType
  fullName: com.fasterxml.jackson.databind.ObjectReader._jsonNodeType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectReader._assertNotNull*
  name: _assertNotNull
  nameWithType: ObjectReader._assertNotNull
  fullName: com.fasterxml.jackson.databind.ObjectReader._assertNotNull
  package: com.fasterxml.jackson.databind
- uid: java.util.concurrent.ConcurrentHashMap<com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>>
  spec.java:
  - uid: java.util.concurrent.ConcurrentHashMap
    name: ConcurrentHashMap
    fullName: java.util.concurrent.ConcurrentHashMap
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.JavaType
    name: JavaType
    fullName: com.fasterxml.jackson.databind.JavaType
  - name: ','
    fullName: ','
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.ObjectCodec
  name: ObjectCodec
  nameWithType: ObjectCodec
  fullName: com.fasterxml.jackson.core.ObjectCodec
- uid: com.fasterxml.jackson.core.Versioned
  name: Versioned
  nameWithType: Versioned
  fullName: com.fasterxml.jackson.core.Versioned
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.core.ObjectCodec.getJsonFactory()
  name: ObjectCodec.getJsonFactory()
  nameWithType: ObjectCodec.getJsonFactory()
  fullName: com.fasterxml.jackson.core.ObjectCodec.getJsonFactory()
- uid: com.fasterxml.jackson.core.ObjectCodec.getFactory()
  name: ObjectCodec.getFactory()
  nameWithType: ObjectCodec.getFactory()
  fullName: com.fasterxml.jackson.core.ObjectCodec.getFactory()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  name: ObjectCodec.<T>readValue(JsonParser,Class<T>)
  nameWithType: ObjectCodec.<T>readValue(JsonParser,Class<T>)
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
- uid: com.fasterxml.jackson.core.ObjectCodec.treeAsTokens(com.fasterxml.jackson.core.TreeNode)
  name: ObjectCodec.treeAsTokens(TreeNode)
  nameWithType: ObjectCodec.treeAsTokens(TreeNode)
  fullName: com.fasterxml.jackson.core.ObjectCodec.treeAsTokens(com.fasterxml.jackson.core.TreeNode)
- uid: com.fasterxml.jackson.core.ObjectCodec.version()
  name: ObjectCodec.version()
  nameWithType: ObjectCodec.version()
  fullName: com.fasterxml.jackson.core.ObjectCodec.version()
- uid: com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
  name: ObjectCodec.<T>readValue(JsonParser,TypeReference<T>)
  nameWithType: ObjectCodec.<T>readValue(JsonParser,TypeReference<T>)
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
- uid: com.fasterxml.jackson.core.TreeCodec.nullNode()
  name: TreeCodec.nullNode()
  nameWithType: TreeCodec.nullNode()
  fullName: com.fasterxml.jackson.core.TreeCodec.nullNode()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.ObjectCodec.createObjectNode()
  name: ObjectCodec.createObjectNode()
  nameWithType: ObjectCodec.createObjectNode()
  fullName: com.fasterxml.jackson.core.ObjectCodec.createObjectNode()
- uid: com.fasterxml.jackson.core.ObjectCodec.createArrayNode()
  name: ObjectCodec.createArrayNode()
  nameWithType: ObjectCodec.createArrayNode()
  fullName: com.fasterxml.jackson.core.ObjectCodec.createArrayNode()
- uid: com.fasterxml.jackson.core.TreeCodec.missingNode()
  name: TreeCodec.missingNode()
  nameWithType: TreeCodec.missingNode()
  fullName: com.fasterxml.jackson.core.TreeCodec.missingNode()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.core.ObjectCodec.<T>readTree(com.fasterxml.jackson.core.JsonParser)
  name: ObjectCodec.<T>readTree(JsonParser)
  nameWithType: ObjectCodec.<T>readTree(JsonParser)
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>readTree(com.fasterxml.jackson.core.JsonParser)
- uid: com.fasterxml.jackson.core.ObjectCodec.<T>treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class<T>)
  name: ObjectCodec.<T>treeToValue(TreeNode,Class<T>)
  nameWithType: ObjectCodec.<T>treeToValue(TreeNode,Class<T>)
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class<T>)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.core.ObjectCodec.writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode)
  name: ObjectCodec.writeTree(JsonGenerator,TreeNode)
  nameWithType: ObjectCodec.writeTree(JsonGenerator,TreeNode)
  fullName: com.fasterxml.jackson.core.ObjectCodec.writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode)
- uid: com.fasterxml.jackson.core.ObjectCodec.writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
  name: ObjectCodec.writeValue(JsonGenerator,Object)
  nameWithType: ObjectCodec.writeValue(JsonGenerator,Object)
  fullName: com.fasterxml.jackson.core.ObjectCodec.writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  name: ObjectCodec.<T>readValue(JsonParser,ResolvedType)
  nameWithType: ObjectCodec.<T>readValue(JsonParser,ResolvedType)
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
- uid: com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
  name: ObjectCodec.<T>readValues(JsonParser,TypeReference<T>)
  nameWithType: ObjectCodec.<T>readValues(JsonParser,TypeReference<T>)
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
- uid: com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  name: ObjectCodec.<T>readValues(JsonParser,ResolvedType)
  nameWithType: ObjectCodec.<T>readValues(JsonParser,ResolvedType)
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
- uid: com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  name: ObjectCodec.<T>readValues(JsonParser,Class<T>)
  nameWithType: ObjectCodec.<T>readValues(JsonParser,Class<T>)
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
- uid: com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.databind.MappingIterator
  name: MappingIterator
  nameWithType: MappingIterator
  fullName: com.fasterxml.jackson.databind.MappingIterator
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: com.fasterxml.jackson.core.type.TypeReference
  name: TypeReference
  nameWithType: TypeReference
  fullName: com.fasterxml.jackson.core.type.TypeReference
- uid: ?,?
  name: ?,?
  nameWithType: ?,?
  fullName: ?,?
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
- uid: java.util.concurrent.ConcurrentHashMap
  name: ConcurrentHashMap
  nameWithType: ConcurrentHashMap
  fullName: java.util.concurrent.ConcurrentHashMap
- uid: com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer
  name: JavaType,JsonDeserializer
  nameWithType: JavaType,JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer
- uid: T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class
  name: T>readValue(JsonParser,Class
  nameWithType: T>readValue(JsonParser,Class
  fullName: T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class
- uid: com.fasterxml.jackson.core.ObjectCodec.
  name: ObjectCodec.
  nameWithType: ObjectCodec.
  fullName: com.fasterxml.jackson.core.ObjectCodec.
- uid: T>)
  name: T>)
  nameWithType: T>)
  fullName: T>)
- uid: T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference
  name: T>readValue(JsonParser,TypeReference
  nameWithType: T>readValue(JsonParser,TypeReference
  fullName: T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference
- uid: T>readTree(com.fasterxml.jackson.core.JsonParser)
  name: T>readTree(JsonParser)
  nameWithType: T>readTree(JsonParser)
  fullName: T>readTree(com.fasterxml.jackson.core.JsonParser)
- uid: T>treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class
  name: T>treeToValue(TreeNode,Class
  nameWithType: T>treeToValue(TreeNode,Class
  fullName: T>treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class
- uid: T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  name: T>readValue(JsonParser,ResolvedType)
  nameWithType: T>readValue(JsonParser,ResolvedType)
  fullName: T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
- uid: T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference
  name: T>readValues(JsonParser,TypeReference
  nameWithType: T>readValues(JsonParser,TypeReference
  fullName: T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference
- uid: T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  name: T>readValues(JsonParser,ResolvedType)
  nameWithType: T>readValues(JsonParser,ResolvedType)
  fullName: T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
- uid: T>readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class
  name: T>readValues(JsonParser,Class
  nameWithType: T>readValues(JsonParser,Class
  fullName: T>readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class
