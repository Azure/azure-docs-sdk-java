### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.MultimapBuilder.ListMultimapBuilder.build*"
fullName: "com.azure.cosmos.implementation.guava25.collect.MultimapBuilder.ListMultimapBuilder<K0,V0>.<K,V>build"
name: "<K,V>build"
nameWithType: "MultimapBuilder.ListMultimapBuilder<K0,V0>.<K,V>build"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.MultimapBuilder.ListMultimapBuilder.<K,V>build()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.MultimapBuilder.ListMultimapBuilder<K0,V0>.<K,V>build()"
  name: "<K,V>build()"
  nameWithType: "MultimapBuilder.ListMultimapBuilder<K0,V0>.<K,V>build()"
  summary: "Returns a new, empty `Multimap` with the specified implementation."
  overridden: "com.azure.cosmos.implementation.guava25.collect.MultimapBuilder.<K,V>build()"
  syntax: "public abstract ListMultimap<K,V> <K,V>build()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ListMultimap?alt=com.azure.cosmos.implementation.guava25.collect.ListMultimap&text=ListMultimap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.MultimapBuilder.ListMultimapBuilder.<K,V>build(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.MultimapBuilder.ListMultimapBuilder<K0,V0>.<K,V>build(Multimap<? extends K,? extends V> multimap)"
  name: "<K,V>build(Multimap<? extends K,? extends V> multimap)"
  nameWithType: "MultimapBuilder.ListMultimapBuilder<K0,V0>.<K,V>build(Multimap<? extends K,? extends V> multimap)"
  summary: "Returns a `Multimap` with the specified implementation, initialized with the entries of `multimap`."
  overridden: "com.azure.cosmos.implementation.guava25.collect.MultimapBuilder.<K,V>build(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)"
  parameters:
  - name: "multimap"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Multimap?alt=com.azure.cosmos.implementation.guava25.collect.Multimap&text=Multimap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends K?alt=? extends K&text=? extends K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"? extends V?alt=? extends V&text=? extends V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ListMultimap<K,V> <K,V>build(Multimap<? extends K,? extends V> multimap)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ListMultimap?alt=com.azure.cosmos.implementation.guava25.collect.ListMultimap&text=ListMultimap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
