### YamlMime:JavaEnum
uid: "com.azure.spring.data.cosmos.core.query.CriteriaType"
fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType"
name: "CriteriaType"
nameWithType: "CriteriaType"
summary: "Enum of criteria type"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum CriteriaType extends Enum<CriteriaType>"
fields:
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.AFTER"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.AFTER"
  name: "AFTER"
  nameWithType: "CriteriaType.AFTER"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.ALL"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.ALL"
  name: "ALL"
  nameWithType: "CriteriaType.ALL"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.AND"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.AND"
  name: "AND"
  nameWithType: "CriteriaType.AND"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.BEFORE"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.BEFORE"
  name: "BEFORE"
  nameWithType: "CriteriaType.BEFORE"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.BETWEEN"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.BETWEEN"
  name: "BETWEEN"
  nameWithType: "CriteriaType.BETWEEN"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.CONTAINING"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.CONTAINING"
  name: "CONTAINING"
  nameWithType: "CriteriaType.CONTAINING"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.ENDS_WITH"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.ENDS_WITH"
  name: "ENDS_WITH"
  nameWithType: "CriteriaType.ENDS_WITH"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.FALSE"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.FALSE"
  name: "FALSE"
  nameWithType: "CriteriaType.FALSE"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.GREATER_THAN"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.GREATER_THAN"
  name: "GREATER_THAN"
  nameWithType: "CriteriaType.GREATER_THAN"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.GREATER_THAN_EQUAL"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.GREATER_THAN_EQUAL"
  name: "GREATER_THAN_EQUAL"
  nameWithType: "CriteriaType.GREATER_THAN_EQUAL"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.IN"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.IN"
  name: "IN"
  nameWithType: "CriteriaType.IN"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.IS_EQUAL"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.IS_EQUAL"
  name: "IS_EQUAL"
  nameWithType: "CriteriaType.IS_EQUAL"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.IS_NOT_NULL"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.IS_NOT_NULL"
  name: "IS_NOT_NULL"
  nameWithType: "CriteriaType.IS_NOT_NULL"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.IS_NULL"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.IS_NULL"
  name: "IS_NULL"
  nameWithType: "CriteriaType.IS_NULL"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.LESS_THAN"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.LESS_THAN"
  name: "LESS_THAN"
  nameWithType: "CriteriaType.LESS_THAN"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.LESS_THAN_EQUAL"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.LESS_THAN_EQUAL"
  name: "LESS_THAN_EQUAL"
  nameWithType: "CriteriaType.LESS_THAN_EQUAL"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.NOT"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.NOT"
  name: "NOT"
  nameWithType: "CriteriaType.NOT"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.NOT_IN"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.NOT_IN"
  name: "NOT_IN"
  nameWithType: "CriteriaType.NOT_IN"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.OR"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.OR"
  name: "OR"
  nameWithType: "CriteriaType.OR"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.STARTS_WITH"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.STARTS_WITH"
  name: "STARTS_WITH"
  nameWithType: "CriteriaType.STARTS_WITH"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.TRUE"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.TRUE"
  name: "TRUE"
  nameWithType: "CriteriaType.TRUE"
methods:
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.getSqlKeyword()"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.getSqlKeyword()"
  name: "getSqlKeyword()"
  nameWithType: "CriteriaType.getSqlKeyword()"
  summary: "To get sql keyword"
  syntax: "public String getSqlKeyword()"
  returns:
    description: "String"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.isBinary(com.azure.spring.data.cosmos.core.query.CriteriaType)"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.isBinary(CriteriaType type)"
  name: "isBinary(CriteriaType type)"
  nameWithType: "CriteriaType.isBinary(CriteriaType type)"
  summary: "Check if CriteriaType operation is binary, with format of (A ops A -> B). Example: IS\\_EQUAL, AFTER."
  parameters:
  - description: "CriteriaType operation"
    name: "type"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CriteriaType?alt=com.azure.spring.data.cosmos.core.query.CriteriaType&text=CriteriaType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static boolean isBinary(CriteriaType type)"
  returns:
    description: "True if match, or false."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.isClosed(com.azure.spring.data.cosmos.core.query.CriteriaType)"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.isClosed(CriteriaType type)"
  name: "isClosed(CriteriaType type)"
  nameWithType: "CriteriaType.isClosed(CriteriaType type)"
  summary: "Check if CriteriaType operation is closure, with format of (A ops A -> A). Example: AND, OR."
  parameters:
  - description: "CriteriaType operation"
    name: "type"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CriteriaType?alt=com.azure.spring.data.cosmos.core.query.CriteriaType&text=CriteriaType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static boolean isClosed(CriteriaType type)"
  returns:
    description: "True if match, or false."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.isFunction(com.azure.spring.data.cosmos.core.query.CriteriaType)"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.isFunction(CriteriaType type)"
  name: "isFunction(CriteriaType type)"
  nameWithType: "CriteriaType.isFunction(CriteriaType type)"
  summary: "Check if CriteriaType operation is a function."
  parameters:
  - description: "CriteriaType"
    name: "type"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CriteriaType?alt=com.azure.spring.data.cosmos.core.query.CriteriaType&text=CriteriaType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static boolean isFunction(CriteriaType type)"
  returns:
    description: "True if match, or false."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.isPartTypeSupported(org.springframework.data.repository.query.parser.Part.Type)"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.isPartTypeSupported(Part.Type partType)"
  name: "isPartTypeSupported(Part.Type partType)"
  nameWithType: "CriteriaType.isPartTypeSupported(Part.Type partType)"
  summary: "Check if PartType is supported."
  parameters:
  - description: "PartType to be checked."
    name: "partType"
    type: "<xref href=\"org.springframework.data.repository.query.parser.Part.Type?alt=org.springframework.data.repository.query.parser.Part.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static boolean isPartTypeSupported(Part.Type partType)"
  returns:
    description: "True if supported, or false."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.isPartTypeUnSupported(org.springframework.data.repository.query.parser.Part.Type)"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.isPartTypeUnSupported(Part.Type partType)"
  name: "isPartTypeUnSupported(Part.Type partType)"
  nameWithType: "CriteriaType.isPartTypeUnSupported(Part.Type partType)"
  summary: "Check if PartType is NOT supported."
  parameters:
  - description: "PartType to be checked."
    name: "partType"
    type: "<xref href=\"org.springframework.data.repository.query.parser.Part.Type?alt=org.springframework.data.repository.query.parser.Part.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static boolean isPartTypeUnSupported(Part.Type partType)"
  returns:
    description: "True if unsupported, or false."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.isUnary(com.azure.spring.data.cosmos.core.query.CriteriaType)"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.isUnary(CriteriaType type)"
  name: "isUnary(CriteriaType type)"
  nameWithType: "CriteriaType.isUnary(CriteriaType type)"
  summary: "Check if CriteriaType operation is unary, with format of (ops A -> B)."
  parameters:
  - description: "CriteriaType"
    name: "type"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CriteriaType?alt=com.azure.spring.data.cosmos.core.query.CriteriaType&text=CriteriaType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static boolean isUnary(CriteriaType type)"
  returns:
    description: "True if match, or false."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.toCriteriaType(org.springframework.data.repository.query.parser.Part.Type)"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.toCriteriaType(Part.Type partType)"
  name: "toCriteriaType(Part.Type partType)"
  nameWithType: "CriteriaType.toCriteriaType(Part.Type partType)"
  summary: "Convert to criteria type."
  parameters:
  - description: "PartType to be converted."
    name: "partType"
    type: "<xref href=\"org.springframework.data.repository.query.parser.Part.Type?alt=org.springframework.data.repository.query.parser.Part.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CriteriaType toCriteriaType(Part.Type partType)"
  returns:
    description: "CriteriaType"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CriteriaType?alt=com.azure.spring.data.cosmos.core.query.CriteriaType&text=CriteriaType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.valueOf(java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "CriteriaType.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CriteriaType valueOf(String name)"
  returns:
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CriteriaType?alt=com.azure.spring.data.cosmos.core.query.CriteriaType&text=CriteriaType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.query.CriteriaType.values()"
  fullName: "com.azure.spring.data.cosmos.core.query.CriteriaType.values()"
  name: "values()"
  nameWithType: "CriteriaType.values()"
  syntax: "public static CriteriaType[] values()"
  returns:
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CriteriaType?alt=com.azure.spring.data.cosmos.core.query.CriteriaType&text=CriteriaType\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.azure.spring.data.cosmos.core.query"
artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
