### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId*"
fullName: "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId"
name: "_serializeWithObjectId"
nameWithType: "BeanSerializerBase._serializeWithObjectId"
members:
- uid: "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)"
  fullName: "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(Object bean, JsonGenerator gen, SerializerProvider provider, boolean startEndObject)"
  name: "_serializeWithObjectId(Object bean, JsonGenerator gen, SerializerProvider provider, boolean startEndObject)"
  nameWithType: "BeanSerializerBase._serializeWithObjectId(Object bean, JsonGenerator gen, SerializerProvider provider, boolean startEndObject)"
  parameters:
  - name: "bean"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "gen"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  - name: "provider"
    type: "<xref href=\"com.fasterxml.jackson.databind.SerializerProvider?alt=com.fasterxml.jackson.databind.SerializerProvider&text=SerializerProvider\" data-throw-if-not-resolved=\"False\" />"
  - name: "startEndObject"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final void _serializeWithObjectId(Object bean, JsonGenerator gen, SerializerProvider provider, boolean startEndObject)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
  fullName: "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(Object bean, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer)"
  name: "_serializeWithObjectId(Object bean, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer)"
  nameWithType: "BeanSerializerBase._serializeWithObjectId(Object bean, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer)"
  parameters:
  - name: "bean"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "gen"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  - name: "provider"
    type: "<xref href=\"com.fasterxml.jackson.databind.SerializerProvider?alt=com.fasterxml.jackson.databind.SerializerProvider&text=SerializerProvider\" data-throw-if-not-resolved=\"False\" />"
  - name: "typeSer"
    type: "<xref href=\"com.fasterxml.jackson.databind.jsontype.TypeSerializer?alt=com.fasterxml.jackson.databind.jsontype.TypeSerializer&text=TypeSerializer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final void _serializeWithObjectId(Object bean, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser.std"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
