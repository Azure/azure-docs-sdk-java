### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse"
  id: "ReactorNettyHttpResponse"
  parent: "com.azure.cosmos.implementation.http"
  children:
  - "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.ReactorNettyHttpResponse(reactor.netty.http.client.HttpClientResponse,reactor.netty.Connection)"
  - "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.body()"
  - "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.bodyAsByteArray()"
  - "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.bodyAsString()"
  - "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.bodyAsString(java.nio.charset.Charset)"
  - "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.headerValue(java.lang.String)"
  - "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.headers()"
  - "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.internConnection()"
  - "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.statusCode()"
  langs:
  - "java"
  name: "ReactorNettyClient.ReactorNettyHttpResponse"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse"
  type: "Class"
  package: "com.azure.cosmos.implementation.http"
  syntax:
    content: "private static class ReactorNettyClient.ReactorNettyHttpResponse extends HttpResponse"
  inheritance:
  - "java.lang.Object"
  - "com.azure.cosmos.implementation.http.HttpResponse"
  inheritedMembers:
  - "com.azure.cosmos.implementation.http.HttpResponse.body()"
  - "com.azure.cosmos.implementation.http.HttpResponse.bodyAsByteArray()"
  - "com.azure.cosmos.implementation.http.HttpResponse.bodyAsString()"
  - "com.azure.cosmos.implementation.http.HttpResponse.bodyAsString(java.nio.charset.Charset)"
  - "com.azure.cosmos.implementation.http.HttpResponse.buffer()"
  - "com.azure.cosmos.implementation.http.HttpResponse.close()"
  - "com.azure.cosmos.implementation.http.HttpResponse.headerValue(java.lang.String)"
  - "com.azure.cosmos.implementation.http.HttpResponse.headers()"
  - "com.azure.cosmos.implementation.http.HttpResponse.internConnection()"
  - "com.azure.cosmos.implementation.http.HttpResponse.request()"
  - "com.azure.cosmos.implementation.http.HttpResponse.statusCode()"
  - "com.azure.cosmos.implementation.http.HttpResponse.withRequest(com.azure.cosmos.implementation.http.HttpRequest)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.ReactorNettyHttpResponse(reactor.netty.http.client.HttpClientResponse,reactor.netty.Connection)"
  id: "ReactorNettyHttpResponse(reactor.netty.http.client.HttpClientResponse,reactor.netty.Connection)"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse"
  langs:
  - "java"
  name: "ReactorNettyHttpResponse(HttpClientResponse reactorNettyResponse, Connection reactorNettyConnection)"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse.ReactorNettyHttpResponse(HttpClientResponse reactorNettyResponse, Connection reactorNettyConnection)"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.ReactorNettyHttpResponse(HttpClientResponse reactorNettyResponse, Connection reactorNettyConnection)"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.ReactorNettyHttpResponse*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.http"
  syntax:
    content: " ReactorNettyHttpResponse(HttpClientResponse reactorNettyResponse, Connection reactorNettyConnection)"
    parameters:
    - id: "reactorNettyResponse"
      type: "reactor.netty.http.client.HttpClientResponse"
    - id: "reactorNettyConnection"
      type: "reactor.netty.Connection"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.body()"
  id: "body()"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse"
  langs:
  - "java"
  name: "body()"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse.body()"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.body()"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.body*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  syntax:
    content: "public Flux<ByteBuf> body()"
    return:
      type: "reactor.core.publisher.Flux<io.netty.buffer.ByteBuf>"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.bodyAsByteArray()"
  id: "bodyAsByteArray()"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse"
  langs:
  - "java"
  name: "bodyAsByteArray()"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse.bodyAsByteArray()"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.bodyAsByteArray()"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.bodyAsByteArray*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  syntax:
    content: "public Mono<byte[]> bodyAsByteArray()"
    return:
      type: "reactor.core.publisher.Mono<byte[]>"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.bodyAsString()"
  id: "bodyAsString()"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse"
  langs:
  - "java"
  name: "bodyAsString()"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse.bodyAsString()"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.bodyAsString()"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.bodyAsString*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  syntax:
    content: "public Mono<String> bodyAsString()"
    return:
      type: "reactor.core.publisher.Mono<java.lang.String>"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.bodyAsString(java.nio.charset.Charset)"
  id: "bodyAsString(java.nio.charset.Charset)"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse"
  langs:
  - "java"
  name: "bodyAsString(Charset charset)"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse.bodyAsString(Charset charset)"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.bodyAsString(Charset charset)"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.bodyAsString*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  syntax:
    content: "public Mono<String> bodyAsString(Charset charset)"
    parameters:
    - id: "charset"
      type: "java.nio.charset.Charset"
    return:
      type: "reactor.core.publisher.Mono<java.lang.String>"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.headerValue(java.lang.String)"
  id: "headerValue(java.lang.String)"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse"
  langs:
  - "java"
  name: "headerValue(String name)"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse.headerValue(String name)"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.headerValue(String name)"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.headerValue*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  syntax:
    content: "public String headerValue(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.headers()"
  id: "headers()"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse"
  langs:
  - "java"
  name: "headers()"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse.headers()"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.headers()"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.headers*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  syntax:
    content: "public HttpHeaders headers()"
    return:
      type: "com.azure.cosmos.implementation.http.HttpHeaders"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.internConnection()"
  id: "internConnection()"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse"
  langs:
  - "java"
  name: "internConnection()"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse.internConnection()"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.internConnection()"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.internConnection*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  syntax:
    content: " Connection internConnection()"
    return:
      type: "reactor.netty.Connection"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.statusCode()"
  id: "statusCode()"
  parent: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse"
  langs:
  - "java"
  name: "statusCode()"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse.statusCode()"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.statusCode()"
  overload: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.statusCode*"
  type: "Method"
  package: "com.azure.cosmos.implementation.http"
  syntax:
    content: "public int statusCode()"
    return:
      type: "int"
references:
- uid: "reactor.netty.http.client.HttpClientResponse"
  spec.java:
  - uid: "reactor.netty.http.client.HttpClientResponse"
    name: "HttpClientResponse"
    fullName: "reactor.netty.http.client.HttpClientResponse"
- uid: "reactor.netty.Connection"
  spec.java:
  - uid: "reactor.netty.Connection"
    name: "Connection"
    fullName: "reactor.netty.Connection"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.ReactorNettyHttpResponse*"
  name: "ReactorNettyHttpResponse"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse.ReactorNettyHttpResponse"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.ReactorNettyHttpResponse"
  package: "com.azure.cosmos.implementation.http"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.statusCode*"
  name: "statusCode"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse.statusCode"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.statusCode"
  package: "com.azure.cosmos.implementation.http"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.headerValue*"
  name: "headerValue"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse.headerValue"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.headerValue"
  package: "com.azure.cosmos.implementation.http"
- uid: "com.azure.cosmos.implementation.http.HttpHeaders"
  name: "HttpHeaders"
  nameWithType: "HttpHeaders"
  fullName: "com.azure.cosmos.implementation.http.HttpHeaders"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.headers*"
  name: "headers"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse.headers"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.headers"
  package: "com.azure.cosmos.implementation.http"
- uid: "reactor.core.publisher.Flux<io.netty.buffer.ByteBuf>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "io.netty.buffer.ByteBuf"
    name: "ByteBuf"
    fullName: "io.netty.buffer.ByteBuf"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.body*"
  name: "body"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse.body"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.body"
  package: "com.azure.cosmos.implementation.http"
- uid: "reactor.core.publisher.Mono<byte[]>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.bodyAsByteArray*"
  name: "bodyAsByteArray"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse.bodyAsByteArray"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.bodyAsByteArray"
  package: "com.azure.cosmos.implementation.http"
- uid: "reactor.core.publisher.Mono<java.lang.String>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.bodyAsString*"
  name: "bodyAsString"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse.bodyAsString"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.bodyAsString"
  package: "com.azure.cosmos.implementation.http"
- uid: "java.nio.charset.Charset"
  spec.java:
  - uid: "java.nio.charset.Charset"
    name: "Charset"
    fullName: "java.nio.charset.Charset"
- uid: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.internConnection*"
  name: "internConnection"
  nameWithType: "ReactorNettyClient.ReactorNettyHttpResponse.internConnection"
  fullName: "com.azure.cosmos.implementation.http.ReactorNettyClient.ReactorNettyHttpResponse.internConnection"
  package: "com.azure.cosmos.implementation.http"
- uid: "com.azure.cosmos.implementation.http.HttpResponse"
  name: "HttpResponse"
  nameWithType: "HttpResponse"
  fullName: "com.azure.cosmos.implementation.http.HttpResponse"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.cosmos.implementation.http.HttpResponse.bodyAsByteArray()"
  name: "HttpResponse.bodyAsByteArray()"
  nameWithType: "HttpResponse.bodyAsByteArray()"
  fullName: "com.azure.cosmos.implementation.http.HttpResponse.bodyAsByteArray()"
- uid: "com.azure.cosmos.implementation.http.HttpResponse.internConnection()"
  name: "HttpResponse.internConnection()"
  nameWithType: "HttpResponse.internConnection()"
  fullName: "com.azure.cosmos.implementation.http.HttpResponse.internConnection()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.cosmos.implementation.http.HttpResponse.body()"
  name: "HttpResponse.body()"
  nameWithType: "HttpResponse.body()"
  fullName: "com.azure.cosmos.implementation.http.HttpResponse.body()"
- uid: "com.azure.cosmos.implementation.http.HttpResponse.headerValue(java.lang.String)"
  name: "HttpResponse.headerValue(String)"
  nameWithType: "HttpResponse.headerValue(String)"
  fullName: "com.azure.cosmos.implementation.http.HttpResponse.headerValue(java.lang.String)"
- uid: "com.azure.cosmos.implementation.http.HttpResponse.withRequest(com.azure.cosmos.implementation.http.HttpRequest)"
  name: "HttpResponse.withRequest(HttpRequest)"
  nameWithType: "HttpResponse.withRequest(HttpRequest)"
  fullName: "com.azure.cosmos.implementation.http.HttpResponse.withRequest(com.azure.cosmos.implementation.http.HttpRequest)"
- uid: "com.azure.cosmos.implementation.http.HttpResponse.close()"
  name: "HttpResponse.close()"
  nameWithType: "HttpResponse.close()"
  fullName: "com.azure.cosmos.implementation.http.HttpResponse.close()"
- uid: "com.azure.cosmos.implementation.http.HttpResponse.buffer()"
  name: "HttpResponse.buffer()"
  nameWithType: "HttpResponse.buffer()"
  fullName: "com.azure.cosmos.implementation.http.HttpResponse.buffer()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.azure.cosmos.implementation.http.HttpResponse.bodyAsString()"
  name: "HttpResponse.bodyAsString()"
  nameWithType: "HttpResponse.bodyAsString()"
  fullName: "com.azure.cosmos.implementation.http.HttpResponse.bodyAsString()"
- uid: "com.azure.cosmos.implementation.http.HttpResponse.headers()"
  name: "HttpResponse.headers()"
  nameWithType: "HttpResponse.headers()"
  fullName: "com.azure.cosmos.implementation.http.HttpResponse.headers()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.http.HttpResponse.statusCode()"
  name: "HttpResponse.statusCode()"
  nameWithType: "HttpResponse.statusCode()"
  fullName: "com.azure.cosmos.implementation.http.HttpResponse.statusCode()"
- uid: "com.azure.cosmos.implementation.http.HttpResponse.bodyAsString(java.nio.charset.Charset)"
  name: "HttpResponse.bodyAsString(Charset)"
  nameWithType: "HttpResponse.bodyAsString(Charset)"
  fullName: "com.azure.cosmos.implementation.http.HttpResponse.bodyAsString(java.nio.charset.Charset)"
- uid: "com.azure.cosmos.implementation.http.HttpResponse.request()"
  name: "HttpResponse.request()"
  nameWithType: "HttpResponse.request()"
  fullName: "com.azure.cosmos.implementation.http.HttpResponse.request()"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "io.netty.buffer.ByteBuf"
  name: "ByteBuf"
  nameWithType: "ByteBuf"
  fullName: "io.netty.buffer.ByteBuf"
- uid: "byte[]"
  name: "byte[]"
  nameWithType: "byte[]"
  fullName: "byte[]"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
