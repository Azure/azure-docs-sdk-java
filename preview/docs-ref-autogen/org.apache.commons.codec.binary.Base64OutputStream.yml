### YamlMime:ManagedReference
items:
- uid: org.apache.commons.codec.binary.Base64OutputStream
  id: Base64OutputStream
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary
  children:
  - org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(java.io.OutputStream)
  - org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(java.io.OutputStream,boolean)
  - org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(java.io.OutputStream,boolean,int,byte[])
  langs:
  - java
  name: Base64OutputStream
  nameWithType: Base64OutputStream
  fullName: org.apache.commons.codec.binary.Base64OutputStream
  type: Class
  package: org.apache.commons.codec.binary
  summary: >-
    Provides Base64 encoding and decoding in a streaming fashion (unlimited size). When encoding the default lineLength is 76 characters and the default lineEnding is CRLF, but these can be overridden by using the appropriate constructor.


    The default behaviour of the Base64OutputStream is to ENCODE, whereas the default behaviour of the Base64InputStream is to DECODE. But this behaviour can be overridden by using a different constructor.


    This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.


    Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).


    **Note:** It is mandatory to close the stream after the last byte has been written to it, otherwise the final padding will be omitted and the resulting data will be incomplete/inconsistent.
  syntax:
    content: public class Base64OutputStream extends BaseNCodecOutputStream
  inheritance:
  - java.lang.Object
  - java.io.OutputStream
  - java.io.FilterOutputStream
  - org.apache.commons.codec.binary.BaseNCodecOutputStream
  inheritedMembers:
  - java.io.FilterOutputStream.write(byte[])
  - java.io.OutputStream.nullOutputStream()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.apache.commons.codec.binary.BaseNCodecOutputStream.close()
  - org.apache.commons.codec.binary.BaseNCodecOutputStream.eof()
  - org.apache.commons.codec.binary.BaseNCodecOutputStream.flush()
  - org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)
  - org.apache.commons.codec.binary.BaseNCodecOutputStream.write(int)
- uid: org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(java.io.OutputStream)
  id: Base64OutputStream(java.io.OutputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Base64OutputStream
  langs:
  - java
  name: Base64OutputStream(OutputStream out)
  nameWithType: Base64OutputStream.Base64OutputStream(OutputStream out)
  fullName: org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream out)
  overload: org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream*
  type: Constructor
  package: org.apache.commons.codec.binary
  summary: Creates a Base64OutputStream such that all data written is Base64-encoded to the original provided OutputStream.
  syntax:
    content: public Base64OutputStream(OutputStream out)
    parameters:
    - id: out
      type: java.io.OutputStream
      description: OutputStream to wrap.
- uid: org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(java.io.OutputStream,boolean)
  id: Base64OutputStream(java.io.OutputStream,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Base64OutputStream
  langs:
  - java
  name: Base64OutputStream(OutputStream out, boolean doEncode)
  nameWithType: Base64OutputStream.Base64OutputStream(OutputStream out, boolean doEncode)
  fullName: org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream out, boolean doEncode)
  overload: org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream*
  type: Constructor
  package: org.apache.commons.codec.binary
  summary: Creates a Base64OutputStream such that all data written is either Base64-encoded or Base64-decoded to the original provided OutputStream.
  syntax:
    content: public Base64OutputStream(OutputStream out, boolean doEncode)
    parameters:
    - id: out
      type: java.io.OutputStream
      description: OutputStream to wrap.
    - id: doEncode
      type: boolean
      description: true if we should encode all data written to us, false if we should decode.
- uid: org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(java.io.OutputStream,boolean,int,byte[])
  id: Base64OutputStream(java.io.OutputStream,boolean,int,byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Base64OutputStream
  langs:
  - java
  name: Base64OutputStream(OutputStream out, boolean doEncode, int lineLength, byte[] lineSeparator)
  nameWithType: Base64OutputStream.Base64OutputStream(OutputStream out, boolean doEncode, int lineLength, byte[] lineSeparator)
  fullName: org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream out, boolean doEncode, int lineLength, byte[] lineSeparator)
  overload: org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream*
  type: Constructor
  package: org.apache.commons.codec.binary
  summary: Creates a Base64OutputStream such that all data written is either Base64-encoded or Base64-decoded to the original provided OutputStream.
  syntax:
    content: public Base64OutputStream(OutputStream out, boolean doEncode, int lineLength, byte[] lineSeparator)
    parameters:
    - id: out
      type: java.io.OutputStream
      description: OutputStream to wrap.
    - id: doEncode
      type: boolean
      description: true if we should encode all data written to us, false if we should decode.
    - id: lineLength
      type: int
      description: >-
        If doEncode is true, each line of encoded data will contain lineLength characters (rounded down to
                    nearest multiple of 4). If lineLength &lt;= 0, the encoded data is not divided into lines. If doEncode
                    is false, lineLength is ignored.
    - id: lineSeparator
      type: byte[]
      description: >-
        If doEncode is true, each line of encoded data will be terminated with this byte sequence (e.g. \r\n).
                    If lineLength &lt;= 0, the lineSeparator is not used. If doEncode is false lineSeparator is ignored.
references:
- uid: java.io.OutputStream
  spec.java:
  - uid: java.io.OutputStream
    name: OutputStream
    fullName: java.io.OutputStream
- uid: org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream*
  name: Base64OutputStream
  nameWithType: Base64OutputStream.Base64OutputStream
  fullName: org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream
  package: org.apache.commons.codec.binary
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: org.apache.commons.codec.binary.BaseNCodecOutputStream
  name: BaseNCodecOutputStream
  nameWithType: BaseNCodecOutputStream
  fullName: org.apache.commons.codec.binary.BaseNCodecOutputStream
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: org.apache.commons.codec.binary.BaseNCodecOutputStream.flush()
  name: BaseNCodecOutputStream.flush()
  nameWithType: BaseNCodecOutputStream.flush()
  fullName: org.apache.commons.codec.binary.BaseNCodecOutputStream.flush()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.apache.commons.codec.binary.BaseNCodecOutputStream.write(int)
  name: BaseNCodecOutputStream.write(int)
  nameWithType: BaseNCodecOutputStream.write(int)
  fullName: org.apache.commons.codec.binary.BaseNCodecOutputStream.write(int)
- uid: org.apache.commons.codec.binary.BaseNCodecOutputStream.eof()
  name: BaseNCodecOutputStream.eof()
  nameWithType: BaseNCodecOutputStream.eof()
  fullName: org.apache.commons.codec.binary.BaseNCodecOutputStream.eof()
- uid: org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)
  name: BaseNCodecOutputStream.write(byte[],int,int)
  nameWithType: BaseNCodecOutputStream.write(byte[],int,int)
  fullName: org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.io.OutputStream.nullOutputStream()
  name: OutputStream.nullOutputStream()
  nameWithType: OutputStream.nullOutputStream()
  fullName: java.io.OutputStream.nullOutputStream()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: org.apache.commons.codec.binary.BaseNCodecOutputStream.close()
  name: BaseNCodecOutputStream.close()
  nameWithType: BaseNCodecOutputStream.close()
  fullName: org.apache.commons.codec.binary.BaseNCodecOutputStream.close()
- uid: java.io.FilterOutputStream.write(byte[])
  name: FilterOutputStream.write(byte[])
  nameWithType: FilterOutputStream.write(byte[])
  fullName: java.io.FilterOutputStream.write(byte[])
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
