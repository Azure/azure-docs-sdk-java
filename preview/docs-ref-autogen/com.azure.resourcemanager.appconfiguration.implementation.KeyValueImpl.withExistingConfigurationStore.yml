### YamlMime:JavaMember
uid: "com.azure.resourcemanager.appconfiguration.implementation.KeyValueImpl.withExistingConfigurationStore*"
fullName: "com.azure.resourcemanager.appconfiguration.implementation.KeyValueImpl.withExistingConfigurationStore"
name: "withExistingConfigurationStore"
nameWithType: "KeyValueImpl.withExistingConfigurationStore"
members:
- uid: "com.azure.resourcemanager.appconfiguration.implementation.KeyValueImpl.withExistingConfigurationStore(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appconfiguration.implementation.KeyValueImpl.withExistingConfigurationStore(String resourceGroupName, String configStoreName)"
  name: "withExistingConfigurationStore(String resourceGroupName, String configStoreName)"
  nameWithType: "KeyValueImpl.withExistingConfigurationStore(String resourceGroupName, String configStoreName)"
  summary: "Specifies resourceGroupName, configStoreName."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "configStoreName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KeyValueImpl withExistingConfigurationStore(String resourceGroupName, String configStoreName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.appconfiguration.implementation.KeyValueImpl?alt=com.azure.resourcemanager.appconfiguration.implementation.KeyValueImpl&text=KeyValueImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.appconfiguration.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-appconfiguration:1.0.0-beta.2
