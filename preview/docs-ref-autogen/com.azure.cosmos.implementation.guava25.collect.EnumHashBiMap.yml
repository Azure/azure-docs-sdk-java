### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap
  id: EnumHashBiMap
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.<K,V>create(java.lang.Class<K>)
  - com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.<K,V>create(java.util.Map<K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.forcePut(K,V)
  - com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.keyType()
  - com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.put(K,V)
  langs:
  - java
  name: EnumHashBiMap<K,V>
  nameWithType: EnumHashBiMap<K,V>
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap<K,V>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A `BiMap` backed by an `EnumMap` instance for keys-to-values, and a `HashMap` instance for values-to-keys. Null keys are not permitted, but null values are. An `EnumHashBiMap` and its inverse are both serializable.


    See the Guava User Guide article on [ `BiMap`][_BiMap].



    [_BiMap]: https://github.com/google/guava/wiki/NewCollectionTypesExplained#bimap
  syntax:
    content: public final class EnumHashBiMap<K,V> extends AbstractBiMap<K,V>
    typeParameters:
    - id: K
    - id: V
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.clear()
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.containsValue(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.delegate()
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.entrySet()
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.forcePut(K,V)
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.inverse()
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.keySet()
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.put(K,V)
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.putAll(java.util.Map<? extends K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.remove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.replaceAll(java.util.function.BiFunction<? super K,? super V,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.values()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.get(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardClear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsKey(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardEquals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardHashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardIsEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map<? extends K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardRemove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardToString()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.<K,V>create(java.lang.Class<K>)
  id: <K,V>create(java.lang.Class<K>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap
  langs:
  - java
  name: <K,V>create(Class<K> keyType)
  nameWithType: EnumHashBiMap<K,V>.<K,V>create(Class<K> keyType)
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap<K,V>.<K,V>create(Class<K> keyType)
  overload: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.create*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a new, empty `EnumHashBiMap` using the specified key type.
  syntax:
    content: public static EnumHashBiMap<K,V> <K,V>create(Class<K> keyType)
    parameters:
    - id: keyType
      type: java.lang.Class<K>
      description: the key type
    return:
      type: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.<K,V>create(java.util.Map<K,? extends V>)
  id: <K,V>create(java.util.Map<K,? extends V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap
  langs:
  - java
  name: <K,V>create(Map<K,? extends V> map)
  nameWithType: EnumHashBiMap<K,V>.<K,V>create(Map<K,? extends V> map)
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap<K,V>.<K,V>create(Map<K,? extends V> map)
  overload: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.create*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Constructs a new bimap with the same mappings as the specified map. If the specified map is an `EnumHashBiMap` or an <xref uid="com.azure.cosmos.implementation.guava25.collect.EnumBiMap" data-throw-if-not-resolved="false">EnumBiMap</xref>, the new bimap has the same key type as the input bimap. Otherwise, the specified map must contain at least one mapping, in order to determine the key type.
  syntax:
    content: public static EnumHashBiMap<K,V> <K,V>create(Map<K,? extends V> map)
    parameters:
    - id: map
      type: java.util.Map<K,? extends V>
      description: the map whose mappings are to be placed in this map
    return:
      type: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.EnumHashBiMap(java.lang.Class<K>)
  id: EnumHashBiMap(java.lang.Class<K>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap
  langs:
  - java
  name: EnumHashBiMap(Class<K> keyType)
  nameWithType: EnumHashBiMap<K,V>.EnumHashBiMap(Class<K> keyType)
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap<K,V>.EnumHashBiMap(Class<K> keyType)
  overload: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.EnumHashBiMap*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: private EnumHashBiMap(Class<K> keyType)
    parameters:
    - id: keyType
      type: java.lang.Class<K>
- uid: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.forcePut(K,V)
  id: forcePut(K,V)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap
  langs:
  - java
  name: forcePut(K key, V value)
  nameWithType: EnumHashBiMap<K,V>.forcePut(K key, V value)
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap<K,V>.forcePut(K key, V value)
  overload: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.forcePut*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    An alternate form of `put` that silently removes any existing entry with the value `value` before proceeding with the <xref uid="com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.put" data-throw-if-not-resolved="false">#put</xref> operation. If the bimap previously contained the provided key-value mapping, this method has no effect.


    Note that a successful call to this method could cause the size of the bimap to increase by one, stay the same, or even decrease by one.


    **Warning:** If an existing entry with this value is removed, the key for that entry is discarded and not returned.
  syntax:
    content: public V forcePut(K key, V value)
    parameters:
    - id: key
      type: K
    - id: value
      type: V
    return:
      type: V
- uid: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.keyType()
  id: keyType()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap
  langs:
  - java
  name: keyType()
  nameWithType: EnumHashBiMap<K,V>.keyType()
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap<K,V>.keyType()
  overload: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.keyType*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the associated key type.
  syntax:
    content: public Class<K> keyType()
    return:
      type: java.lang.Class<K>
- uid: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.put(K,V)
  id: put(K,V)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap
  langs:
  - java
  name: put(K key, V value)
  nameWithType: EnumHashBiMap<K,V>.put(K key, V value)
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap<K,V>.put(K key, V value)
  overload: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.put*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public V put(K key, V value)
    parameters:
    - id: key
      type: K
    - id: value
      type: V
    return:
      type: V
references:
- uid: java.lang.Class<K>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.EnumHashBiMap*
  name: EnumHashBiMap
  nameWithType: EnumHashBiMap<K,V>.EnumHashBiMap
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap<K,V>.EnumHashBiMap
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap<K,V>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap
    name: EnumHashBiMap
    fullName: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.create*
  name: <K,V>create
  nameWithType: EnumHashBiMap<K,V>.<K,V>create
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap<K,V>.<K,V>create
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Map<K,? extends V>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: '? extends V'
    name: '? extends V'
    fullName: '? extends V'
  - name: '>'
    fullName: '>'
- uid: K
  spec.java:
  - uid: K
    name: K
    fullName: K
- uid: V
  spec.java:
  - uid: V
    name: V
    fullName: V
- uid: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.put*
  name: put
  nameWithType: EnumHashBiMap<K,V>.put
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap<K,V>.put
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.forcePut*
  name: forcePut
  nameWithType: EnumHashBiMap<K,V>.forcePut
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap<K,V>.forcePut
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap.keyType*
  name: keyType
  nameWithType: EnumHashBiMap<K,V>.keyType
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumHashBiMap<K,V>.keyType
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap<K,V>
  name: AbstractBiMap<K,V>
  nameWithType: AbstractBiMap<K,V>
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap<K,V>
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals(java.lang.Object)
  name: ForwardingMap.equals(Object)
  nameWithType: ForwardingMap.equals(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals(java.lang.Object)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.containsValue(java.lang.Object)
  name: AbstractBiMap.containsValue(Object)
  nameWithType: AbstractBiMap.containsValue(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.containsValue(java.lang.Object)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.values()
  name: AbstractBiMap.values()
  nameWithType: AbstractBiMap.values()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.values()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardHashCode()
  name: ForwardingMap.standardHashCode()
  nameWithType: ForwardingMap.standardHashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardHashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.putAll(java.util.Map<? extends K,? extends V>)
  name: AbstractBiMap.putAll(Map<? extends K,? extends V>)
  nameWithType: AbstractBiMap.putAll(Map<? extends K,? extends V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.putAll(java.util.Map<? extends K,? extends V>)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.forcePut(K,V)
  name: AbstractBiMap.forcePut(K,V)
  nameWithType: AbstractBiMap.forcePut(K,V)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.forcePut(K,V)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue(java.lang.Object)
  name: ForwardingMap.standardContainsValue(Object)
  nameWithType: ForwardingMap.standardContainsValue(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.clear()
  name: AbstractBiMap.clear()
  nameWithType: AbstractBiMap.clear()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.clear()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.put(K,V)
  name: AbstractBiMap.put(K,V)
  nameWithType: AbstractBiMap.put(K,V)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.put(K,V)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardClear()
  name: ForwardingMap.standardClear()
  nameWithType: ForwardingMap.standardClear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardClear()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size()
  name: ForwardingMap.size()
  nameWithType: ForwardingMap.size()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode()
  name: ForwardingMap.hashCode()
  nameWithType: ForwardingMap.hashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.replaceAll(java.util.function.BiFunction<? super K,? super V,? extends V>)
  name: AbstractBiMap.replaceAll(BiFunction<? super K,? super V,? extends V>)
  nameWithType: AbstractBiMap.replaceAll(BiFunction<? super K,? super V,? extends V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.replaceAll(java.util.function.BiFunction<? super K,? super V,? extends V>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsKey(java.lang.Object)
  name: ForwardingMap.standardContainsKey(Object)
  nameWithType: ForwardingMap.standardContainsKey(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsKey(java.lang.Object)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.keySet()
  name: AbstractBiMap.keySet()
  nameWithType: AbstractBiMap.keySet()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.keySet()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardToString()
  name: ForwardingMap.standardToString()
  nameWithType: ForwardingMap.standardToString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardToString()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map<? extends K,? extends V>)
  name: ForwardingMap.standardPutAll(Map<? extends K,? extends V>)
  nameWithType: ForwardingMap.standardPutAll(Map<? extends K,? extends V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map<? extends K,? extends V>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.get(java.lang.Object)
  name: ForwardingMap.get(Object)
  nameWithType: ForwardingMap.get(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.get(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.delegate()
  name: AbstractBiMap.delegate()
  nameWithType: AbstractBiMap.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.delegate()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.inverse()
  name: AbstractBiMap.inverse()
  nameWithType: AbstractBiMap.inverse()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.inverse()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardRemove(java.lang.Object)
  name: ForwardingMap.standardRemove(Object)
  nameWithType: ForwardingMap.standardRemove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardRemove(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.entrySet()
  name: AbstractBiMap.entrySet()
  nameWithType: AbstractBiMap.entrySet()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.entrySet()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardIsEmpty()
  name: ForwardingMap.standardIsEmpty()
  nameWithType: ForwardingMap.standardIsEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardIsEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  name: ForwardingObject.toString()
  nameWithType: ForwardingObject.toString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty()
  name: ForwardingMap.isEmpty()
  nameWithType: ForwardingMap.isEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.remove(java.lang.Object)
  name: AbstractBiMap.remove(Object)
  nameWithType: AbstractBiMap.remove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.remove(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardEquals(java.lang.Object)
  name: ForwardingMap.standardEquals(Object)
  nameWithType: ForwardingMap.standardEquals(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardEquals(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey(java.lang.Object)
  name: ForwardingMap.containsKey(Object)
  nameWithType: ForwardingMap.containsKey(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey(java.lang.Object)
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: K,V
  name: K,V
  nameWithType: K,V
  fullName: K,V
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: K,? extends V
  name: K,? extends V
  nameWithType: K,? extends V
  fullName: K,? extends V
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap
  name: AbstractBiMap
  nameWithType: AbstractBiMap
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap
- uid: '? extends K,? extends V>)'
  name: '? extends K,? extends V>)'
  nameWithType: '? extends K,? extends V>)'
  fullName: '? extends K,? extends V>)'
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.putAll(java.util.Map
  name: AbstractBiMap.putAll(Map
  nameWithType: AbstractBiMap.putAll(Map
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.putAll(java.util.Map
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.replaceAll(java.util.function.BiFunction
  name: AbstractBiMap.replaceAll(BiFunction
  nameWithType: AbstractBiMap.replaceAll(BiFunction
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.replaceAll(java.util.function.BiFunction
- uid: '? super K,? super V,? extends V>)'
  name: '? super K,? super V,? extends V>)'
  nameWithType: '? super K,? super V,? extends V>)'
  fullName: '? super K,? super V,? extends V>)'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map
  name: ForwardingMap.standardPutAll(Map
  nameWithType: ForwardingMap.standardPutAll(Map
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map
