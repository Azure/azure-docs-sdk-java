### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.createContextual*"
fullName: "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.createContextual"
name: "createContextual"
nameWithType: "JsonValueSerializer.createContextual"
members:
- uid: "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)"
  fullName: "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.createContextual(SerializerProvider provider, BeanProperty property)"
  name: "createContextual(SerializerProvider provider, BeanProperty property)"
  nameWithType: "JsonValueSerializer.createContextual(SerializerProvider provider, BeanProperty property)"
  summary: "We can try to find the actual serializer for value, if we can statically figure out what the result type must be."
  parameters:
  - name: "provider"
    type: "<xref href=\"com.fasterxml.jackson.databind.SerializerProvider?alt=com.fasterxml.jackson.databind.SerializerProvider&text=SerializerProvider\" data-throw-if-not-resolved=\"False\" />"
  - name: "property"
    type: "<xref href=\"com.fasterxml.jackson.databind.BeanProperty?alt=com.fasterxml.jackson.databind.BeanProperty&text=BeanProperty\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonSerializer<?> createContextual(SerializerProvider provider, BeanProperty property)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser.std"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
