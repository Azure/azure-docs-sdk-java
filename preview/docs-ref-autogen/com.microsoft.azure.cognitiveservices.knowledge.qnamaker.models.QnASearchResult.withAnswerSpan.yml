### YamlMime:JavaMember
uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withAnswerSpan*"
fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withAnswerSpan"
name: "withAnswerSpan"
nameWithType: "QnASearchResult.withAnswerSpan"
members:
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withAnswerSpan(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultAnswerSpan)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult.withAnswerSpan(QnASearchResultAnswerSpan answerSpan)"
  name: "withAnswerSpan(QnASearchResultAnswerSpan answerSpan)"
  nameWithType: "QnASearchResult.withAnswerSpan(QnASearchResultAnswerSpan answerSpan)"
  summary: "Set the answerSpan value."
  parameters:
  - description: "the answerSpan value to set"
    name: "answerSpan"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultAnswerSpan?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultAnswerSpan&text=QnASearchResultAnswerSpan\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QnASearchResult withAnswerSpan(QnASearchResultAnswerSpan answerSpan)"
  returns:
    description: "the QnASearchResult object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResult&text=QnASearchResult\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
