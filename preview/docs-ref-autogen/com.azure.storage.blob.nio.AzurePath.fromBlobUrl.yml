### YamlMime:JavaMember
uid: "com.azure.storage.blob.nio.AzurePath.fromBlobUrl*"
fullName: "com.azure.storage.blob.nio.AzurePath.fromBlobUrl"
name: "fromBlobUrl"
nameWithType: "AzurePath.fromBlobUrl"
members:
- uid: "com.azure.storage.blob.nio.AzurePath.fromBlobUrl(com.azure.storage.blob.nio.AzureFileSystemProvider,java.lang.String)"
  fullName: "com.azure.storage.blob.nio.AzurePath.fromBlobUrl(AzureFileSystemProvider provider, String url)"
  name: "fromBlobUrl(AzureFileSystemProvider provider, String url)"
  nameWithType: "AzurePath.fromBlobUrl(AzureFileSystemProvider provider, String url)"
  summary: "A utility method to conveniently convert from a url to a storage resource to an `AzurePath` pointing to the same resource. The url must be well formatted. There must be an open filesystem corresponding to the account which contains the blob. Otherwise, a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.nio.file.FileSystemNotFoundException\"></xref> will be thrown. The url may point to either an account, container, or blob. If it points to an account, the path will be empty, but it will have an internal reference to the file system containing it, meaning instance methods may be performed on the path to construct a reference to another object. If it points to a container, there will be one element, which is the root element. Everything after the container, that is the blob name, will then be appended after the root element. IP style urls are not currently supported. The <xref uid=\"com.azure.storage.blob.nio.AzureFileSystemProvider\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureFileSystemProvider\"></xref> can typically be obtained via <xref uid=\"com.azure.storage.blob.nio.AzureFileSystem.provider()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureFileSystem#provider()\"></xref>."
  parameters:
  - description: "The installed <xref uid=\"com.azure.storage.blob.nio.AzureFileSystemProvider\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureFileSystemProvider\"></xref> that manages open file systems for this jvm."
    name: "provider"
    type: "<xref href=\"com.azure.storage.blob.nio.AzureFileSystemProvider?alt=com.azure.storage.blob.nio.AzureFileSystemProvider&text=AzureFileSystemProvider\" data-throw-if-not-resolved=\"False\" />"
  - description: "The url to the desired resource."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AzurePath fromBlobUrl(AzureFileSystemProvider provider, String url)"
  exceptions:
  - description: "If the url contains elements which are not well formatted."
    type: "<xref href=\"java.net.URISyntaxException?alt=java.net.URISyntaxException&text=URISyntaxException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "An <xref uid=\"com.azure.storage.blob.nio.AzurePath\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzurePath\"></xref> which points to the resrouce identified by the url."
    type: "<xref href=\"com.azure.storage.blob.nio.AzurePath?alt=com.azure.storage.blob.nio.AzurePath&text=AzurePath\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.blob.nio"
artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.17
