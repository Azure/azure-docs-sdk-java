### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.BigDataPoolsAsyncClient"
fullName: "com.azure.analytics.synapse.artifacts.BigDataPoolsAsyncClient"
name: "BigDataPoolsAsyncClient"
nameWithType: "BigDataPoolsAsyncClient"
summary: "Initializes a new instance of the asynchronous Artifacts<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class BigDataPoolsAsyncClient"
methods:
- uid: "com.azure.analytics.synapse.artifacts.BigDataPoolsAsyncClient.get(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.BigDataPoolsAsyncClient.get(String bigDataPoolName)"
  name: "get(String bigDataPoolName)"
  nameWithType: "BigDataPoolsAsyncClient.get(String bigDataPoolName)"
  summary: "Get Big Data Pool."
  parameters:
  - description: "The Big Data Pool name."
    name: "bigDataPoolName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<BigDataPoolResourceInfo> get(String bigDataPoolName)"
  desc: "Get Big Data Pool."
  returns:
    description: "big Data Pool on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.BigDataPoolsAsyncClient.getWithResponse(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.BigDataPoolsAsyncClient.getWithResponse(String bigDataPoolName)"
  name: "getWithResponse(String bigDataPoolName)"
  nameWithType: "BigDataPoolsAsyncClient.getWithResponse(String bigDataPoolName)"
  summary: "Get Big Data Pool."
  parameters:
  - description: "The Big Data Pool name."
    name: "bigDataPoolName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BigDataPoolResourceInfo>> getWithResponse(String bigDataPoolName)"
  desc: "Get Big Data Pool."
  returns:
    description: "big Data Pool along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfo&text=BigDataPoolResourceInfo\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.BigDataPoolsAsyncClient.list()"
  fullName: "com.azure.analytics.synapse.artifacts.BigDataPoolsAsyncClient.list()"
  name: "list()"
  nameWithType: "BigDataPoolsAsyncClient.list()"
  summary: "List Big Data Pools."
  syntax: "public Mono<BigDataPoolResourceInfoListResult> list()"
  desc: "List Big Data Pools."
  returns:
    description: "collection of Big Data pools on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfoListResult?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfoListResult&text=BigDataPoolResourceInfoListResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.BigDataPoolsAsyncClient.listWithResponse()"
  fullName: "com.azure.analytics.synapse.artifacts.BigDataPoolsAsyncClient.listWithResponse()"
  name: "listWithResponse()"
  nameWithType: "BigDataPoolsAsyncClient.listWithResponse()"
  summary: "List Big Data Pools."
  syntax: "public Mono<Response<BigDataPoolResourceInfoListResult>> listWithResponse()"
  desc: "List Big Data Pools."
  returns:
    description: "collection of Big Data pools along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfoListResult?alt=com.azure.analytics.synapse.artifacts.models.BigDataPoolResourceInfoListResult&text=BigDataPoolResourceInfoListResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous ArtifactsClient type."
metadata: {}
package: "com.azure.analytics.synapse.artifacts"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
