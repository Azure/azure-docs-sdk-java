### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.math.IntMath"
fullName: "com.azure.cosmos.implementation.guava25.math.IntMath"
name: "IntMath"
nameWithType: "IntMath"
summary: "A class for arithmetic on values of type `int`. Where possible, methods are defined and named analogously to their `BigInteger` counterparts.\n\nThe implementations of many methods in this class are based on material from Henry S. Warren, Jr.'s *Hacker's Delight*, (Addison Wesley, 2002).\n\nSimilar functionality for `long` and for <xref uid=\"java.math.BigInteger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BigInteger\"></xref> can be found in <xref uid=\"com.azure.cosmos.implementation.guava25.math.LongMath\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongMath\"></xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BigIntegerMath\"></xref> respectively. For other common operations on `int` values, see <xref uid=\"com.azure.cosmos.implementation.guava25.primitives.Ints\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.implementation.guava25.primitives.Ints\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class IntMath"
methods:
- "com.azure.cosmos.implementation.guava25.math.IntMath.binomial(int,int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.ceilingPowerOfTwo(int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.checkedAdd(int,int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.checkedMultiply(int,int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.checkedPow(int,int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.checkedSubtract(int,int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.divide(int,int,java.math.RoundingMode)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.factorial(int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.floorPowerOfTwo(int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.gcd(int,int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.isPowerOfTwo(int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.isPrime(int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.log10(int,java.math.RoundingMode)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.log2(int,java.math.RoundingMode)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.mean(int,int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.mod(int,int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.pow(int,int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.saturatedAdd(int,int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.saturatedMultiply(int,int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.saturatedPow(int,int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.saturatedSubtract(int,int)"
- "com.azure.cosmos.implementation.guava25.math.IntMath.sqrt(int,java.math.RoundingMode)"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.math"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
