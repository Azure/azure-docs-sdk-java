### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.config.CosmosConfigurationSupport"
fullName: "com.azure.spring.data.cosmos.config.CosmosConfigurationSupport"
name: "CosmosConfigurationSupport"
nameWithType: "CosmosConfigurationSupport"
summary: "A support class for cosmos configuration to scan beans and get initial entities"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class CosmosConfigurationSupport"
constructors:
- "com.azure.spring.data.cosmos.config.CosmosConfigurationSupport.CosmosConfigurationSupport()"
methods:
- "com.azure.spring.data.cosmos.config.CosmosConfigurationSupport.cosmosMappingContext()"
- "com.azure.spring.data.cosmos.config.CosmosConfigurationSupport.expressionResolver(org.springframework.beans.factory.BeanFactory)"
- "com.azure.spring.data.cosmos.config.CosmosConfigurationSupport.getDatabaseName()"
- "com.azure.spring.data.cosmos.config.CosmosConfigurationSupport.getInitialEntitySet()"
- "com.azure.spring.data.cosmos.config.CosmosConfigurationSupport.getMappingBasePackages()"
- "com.azure.spring.data.cosmos.config.CosmosConfigurationSupport.scanForEntities(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.spring.data.cosmos.config"
artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
