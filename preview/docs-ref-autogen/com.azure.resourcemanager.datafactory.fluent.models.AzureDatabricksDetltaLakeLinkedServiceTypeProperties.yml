### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties"
name: "AzureDatabricksDetltaLakeLinkedServiceTypeProperties"
nameWithType: "AzureDatabricksDetltaLakeLinkedServiceTypeProperties"
summary: "Azure Databricks Delta Lake linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzureDatabricksDetltaLakeLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.AzureDatabricksDetltaLakeLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.AzureDatabricksDetltaLakeLinkedServiceTypeProperties()"
  name: "AzureDatabricksDetltaLakeLinkedServiceTypeProperties()"
  nameWithType: "AzureDatabricksDetltaLakeLinkedServiceTypeProperties.AzureDatabricksDetltaLakeLinkedServiceTypeProperties()"
  syntax: "public AzureDatabricksDetltaLakeLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.accessToken()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.accessToken()"
  name: "accessToken()"
  nameWithType: "AzureDatabricksDetltaLakeLinkedServiceTypeProperties.accessToken()"
  summary: "Get the accessToken property: Access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string, SecureString or AzureKeyVaultSecretReference."
  syntax: "public SecretBase accessToken()"
  returns:
    description: "the accessToken value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.clusterId()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.clusterId()"
  name: "clusterId()"
  nameWithType: "AzureDatabricksDetltaLakeLinkedServiceTypeProperties.clusterId()"
  summary: "Get the clusterId property: The id of an existing interactive cluster that will be used for all runs of this job. Type: string (or Expression with resultType string)."
  syntax: "public Object clusterId()"
  returns:
    description: "the clusterId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.credential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.credential()"
  name: "credential()"
  nameWithType: "AzureDatabricksDetltaLakeLinkedServiceTypeProperties.credential()"
  summary: "Get the credential property: The credential reference containing authentication information."
  syntax: "public CredentialReference credential()"
  returns:
    description: "the credential value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.domain()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.domain()"
  name: "domain()"
  nameWithType: "AzureDatabricksDetltaLakeLinkedServiceTypeProperties.domain()"
  summary: "Get the domain property: <REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string)."
  syntax: "public Object domain()"
  returns:
    description: "the domain value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "AzureDatabricksDetltaLakeLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  syntax: "public Object encryptedCredential()"
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "AzureDatabricksDetltaLakeLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withAccessToken(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withAccessToken(SecretBase accessToken)"
  name: "withAccessToken(SecretBase accessToken)"
  nameWithType: "AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withAccessToken(SecretBase accessToken)"
  summary: "Set the accessToken property: Access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string, SecureString or AzureKeyVaultSecretReference."
  parameters:
  - description: "the accessToken value to set."
    name: "accessToken"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksDetltaLakeLinkedServiceTypeProperties withAccessToken(SecretBase accessToken)"
  returns:
    description: "the AzureDatabricksDetltaLakeLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties&text=AzureDatabricksDetltaLakeLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withClusterId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withClusterId(Object clusterId)"
  name: "withClusterId(Object clusterId)"
  nameWithType: "AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withClusterId(Object clusterId)"
  summary: "Set the clusterId property: The id of an existing interactive cluster that will be used for all runs of this job. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the clusterId value to set."
    name: "clusterId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksDetltaLakeLinkedServiceTypeProperties withClusterId(Object clusterId)"
  returns:
    description: "the AzureDatabricksDetltaLakeLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties&text=AzureDatabricksDetltaLakeLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withCredential(com.azure.resourcemanager.datafactory.models.CredentialReference)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withCredential(CredentialReference credential)"
  name: "withCredential(CredentialReference credential)"
  nameWithType: "AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withCredential(CredentialReference credential)"
  summary: "Set the credential property: The credential reference containing authentication information."
  parameters:
  - description: "the credential value to set."
    name: "credential"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksDetltaLakeLinkedServiceTypeProperties withCredential(CredentialReference credential)"
  returns:
    description: "the AzureDatabricksDetltaLakeLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties&text=AzureDatabricksDetltaLakeLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withDomain(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withDomain(Object domain)"
  name: "withDomain(Object domain)"
  nameWithType: "AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withDomain(Object domain)"
  summary: "Set the domain property: <REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the domain value to set."
    name: "domain"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksDetltaLakeLinkedServiceTypeProperties withDomain(Object domain)"
  returns:
    description: "the AzureDatabricksDetltaLakeLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties&text=AzureDatabricksDetltaLakeLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksDetltaLakeLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  returns:
    description: "the AzureDatabricksDetltaLakeLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties&text=AzureDatabricksDetltaLakeLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withWorkspaceResourceId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withWorkspaceResourceId(Object workspaceResourceId)"
  name: "withWorkspaceResourceId(Object workspaceResourceId)"
  nameWithType: "AzureDatabricksDetltaLakeLinkedServiceTypeProperties.withWorkspaceResourceId(Object workspaceResourceId)"
  summary: "Set the workspaceResourceId property: Workspace resource id for databricks REST API. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the workspaceResourceId value to set."
    name: "workspaceResourceId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksDetltaLakeLinkedServiceTypeProperties withWorkspaceResourceId(Object workspaceResourceId)"
  returns:
    description: "the AzureDatabricksDetltaLakeLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties&text=AzureDatabricksDetltaLakeLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.workspaceResourceId()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDatabricksDetltaLakeLinkedServiceTypeProperties.workspaceResourceId()"
  name: "workspaceResourceId()"
  nameWithType: "AzureDatabricksDetltaLakeLinkedServiceTypeProperties.workspaceResourceId()"
  summary: "Get the workspaceResourceId property: Workspace resource id for databricks REST API. Type: string (or Expression with resultType string)."
  syntax: "public Object workspaceResourceId()"
  returns:
    description: "the workspaceResourceId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
