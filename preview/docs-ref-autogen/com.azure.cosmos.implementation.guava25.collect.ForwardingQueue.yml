### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue"
fullName: "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue<E>"
name: "ForwardingQueue<E>"
nameWithType: "ForwardingQueue<E>"
summary: "A queue which forwards all its method calls to another queue. Subclasses should override one or more methods to modify the behavior of the backing queue as desired per the [decorator pattern][].\n\n**Warning:** The methods of `ForwardingQueue` forward **indiscriminately** to the methods of the delegate. For example, overriding <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.add\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#add\"></xref> alone **will not** change the behavior of <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.offer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#offer\"></xref> which can lead to unexpected behavior. In this case, you should override `offer` as well, either providing your own implementation, or delegating to the provided `standardOffer` method.\n\n**`default` method warning:** This class does *not* forward calls to `default` methods. Instead, it inherits their default implementations. When those implementations invoke methods, they invoke methods on the `ForwardingQueue`.\n\nThe `standard` methods are not guaranteed to be thread-safe, even when all of the methods that they depend on are thread-safe.\n\n\n[decorator pattern]: http://en.wikipedia.org/wiki/Decorator_pattern"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ForwardingObject\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ForwardingCollection\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.delegate()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class ForwardingQueue<E> extends ForwardingCollection<E> implements Queue<E>"
constructors:
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.ForwardingQueue()"
methods:
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.delegate()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.element()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.offer(E)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.peek()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.poll()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.remove()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.standardOffer(E)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.standardPeek()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingQueue.standardPoll()"
type: "class"
typeParameters:
- name: "E"
implements:
- "<xref href=\"java.util.Queue?alt=java.util.Queue&text=Queue\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
