### YamlMime:JavaMember
uid: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.maxPercentUnhealthyNodes*"
fullName: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.maxPercentUnhealthyNodes"
name: "maxPercentUnhealthyNodes"
nameWithType: "ClusterHealthPolicy.maxPercentUnhealthyNodes"
members:
- uid: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.maxPercentUnhealthyNodes()"
  fullName: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.maxPercentUnhealthyNodes()"
  name: "maxPercentUnhealthyNodes()"
  nameWithType: "ClusterHealthPolicy.maxPercentUnhealthyNodes()"
  summary: "Get the maxPercentUnhealthyNodes property: The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error. If the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning. The percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster. The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that."
  syntax: "public Integer maxPercentUnhealthyNodes()"
  returns:
    description: "the maxPercentUnhealthyNodes value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.servicefabric.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicefabric:1.0.0-beta.1
