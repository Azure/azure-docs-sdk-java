### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.io.CharacterEscapes
  id: CharacterEscapes
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io
  children:
  - com.fasterxml.jackson.core.io.CharacterEscapes.CharacterEscapes()
  - com.fasterxml.jackson.core.io.CharacterEscapes.ESCAPE_CUSTOM
  - com.fasterxml.jackson.core.io.CharacterEscapes.ESCAPE_NONE
  - com.fasterxml.jackson.core.io.CharacterEscapes.ESCAPE_STANDARD
  - com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeCodesForAscii()
  - com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence(int)
  - com.fasterxml.jackson.core.io.CharacterEscapes.standardAsciiEscapesForJSON()
  langs:
  - java
  name: CharacterEscapes
  nameWithType: CharacterEscapes
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes
  type: Class
  package: com.fasterxml.jackson.core.io
  summary: Abstract base class that defines interface for customizing character escaping aspects for String values, for formats that use escaping. For JSON this applies to both property names and String values.
  syntax:
    content: public abstract class CharacterEscapes implements Serializable
  inheritance:
  - java.lang.Object
  implements:
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.io.CharacterEscapes.CharacterEscapes()
  id: CharacterEscapes()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.CharacterEscapes
  langs:
  - java
  name: CharacterEscapes()
  nameWithType: CharacterEscapes.CharacterEscapes()
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes.CharacterEscapes()
  overload: com.fasterxml.jackson.core.io.CharacterEscapes.CharacterEscapes*
  type: Constructor
  package: com.fasterxml.jackson.core.io
  syntax:
    content: public CharacterEscapes()
- uid: com.fasterxml.jackson.core.io.CharacterEscapes.ESCAPE_CUSTOM
  id: ESCAPE_CUSTOM
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.CharacterEscapes
  langs:
  - java
  name: ESCAPE_CUSTOM
  nameWithType: CharacterEscapes.ESCAPE_CUSTOM
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes.ESCAPE_CUSTOM
  type: Field
  package: com.fasterxml.jackson.core.io
  summary: Value used for lookup tables to indicate that matching characters will need custom escapes; and that another call to <xref uid="com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence*" data-throw-if-not-resolved="false">#getEscapeSequence</xref> is needed to figure out exact escape sequence to output.
  syntax:
    content: public static final int ESCAPE_CUSTOM
    return:
      type: int
- uid: com.fasterxml.jackson.core.io.CharacterEscapes.ESCAPE_NONE
  id: ESCAPE_NONE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.CharacterEscapes
  langs:
  - java
  name: ESCAPE_NONE
  nameWithType: CharacterEscapes.ESCAPE_NONE
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes.ESCAPE_NONE
  type: Field
  package: com.fasterxml.jackson.core.io
  summary: Value used for lookup tables to indicate that matching characters do not need to be escaped.
  syntax:
    content: public static final int ESCAPE_NONE
    return:
      type: int
- uid: com.fasterxml.jackson.core.io.CharacterEscapes.ESCAPE_STANDARD
  id: ESCAPE_STANDARD
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.CharacterEscapes
  langs:
  - java
  name: ESCAPE_STANDARD
  nameWithType: CharacterEscapes.ESCAPE_STANDARD
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes.ESCAPE_STANDARD
  type: Field
  package: com.fasterxml.jackson.core.io
  summary: Value used for lookup tables to indicate that matching characters are to be escaped using standard escaping; for JSON this means (for example) using "backslash - u" escape method.
  syntax:
    content: public static final int ESCAPE_STANDARD
    return:
      type: int
- uid: com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeCodesForAscii()
  id: getEscapeCodesForAscii()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.CharacterEscapes
  langs:
  - java
  name: getEscapeCodesForAscii()
  nameWithType: CharacterEscapes.getEscapeCodesForAscii()
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeCodesForAscii()
  overload: com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeCodesForAscii*
  type: Method
  package: com.fasterxml.jackson.core.io
  summary: Method generators can call to get lookup table for determining escape handling for first 128 characters of Unicode (ASCII characters. Caller is not to modify contents of this array, since this is expected to be a shared copy.
  syntax:
    content: public abstract int[] getEscapeCodesForAscii()
    return:
      type: int[]
      description: >-
        Array with size of at least 128, where first 128 entries
            have either one of <code>ESCAPE_xxx</code> constants, or non-zero positive
            integer (meaning of which is data format specific; for JSON it means
            that combination of backslash and character with that value is to be used)
            to indicate that specific escape sequence is to be used.
- uid: com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence(int)
  id: getEscapeSequence(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.CharacterEscapes
  langs:
  - java
  name: getEscapeSequence(int ch)
  nameWithType: CharacterEscapes.getEscapeSequence(int ch)
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence(int ch)
  overload: com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence*
  type: Method
  package: com.fasterxml.jackson.core.io
  summary: Method generators can call to get lookup table for determining exact escape sequence to use for given character. It can be called for any character, but typically is called for either for ASCII characters for which custom escape sequence is needed; or for any non-ASCII character.
  syntax:
    content: public abstract SerializableString getEscapeSequence(int ch)
    parameters:
    - id: ch
      type: int
    return:
      type: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.core.io.CharacterEscapes.standardAsciiEscapesForJSON()
  id: standardAsciiEscapesForJSON()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.CharacterEscapes
  langs:
  - java
  name: standardAsciiEscapesForJSON()
  nameWithType: CharacterEscapes.standardAsciiEscapesForJSON()
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes.standardAsciiEscapesForJSON()
  overload: com.fasterxml.jackson.core.io.CharacterEscapes.standardAsciiEscapesForJSON*
  type: Method
  package: com.fasterxml.jackson.core.io
  summary: Helper method that can be used to get a copy of standard JSON escape definitions; this is useful when just wanting to slightly customize definitions. Caller can modify this array as it sees fit and usually returns modified instance via <xref uid="com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeCodesForAscii*" data-throw-if-not-resolved="false">#getEscapeCodesForAscii</xref>
  syntax:
    content: public static int[] standardAsciiEscapesForJSON()
    return:
      type: int[]
references:
- uid: com.fasterxml.jackson.core.io.CharacterEscapes.CharacterEscapes*
  name: CharacterEscapes
  nameWithType: CharacterEscapes.CharacterEscapes
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes.CharacterEscapes
  package: com.fasterxml.jackson.core.io
- uid: int[]
  spec.java:
  - uid: int
    name: int
    fullName: int
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeCodesForAscii*
  name: getEscapeCodesForAscii
  nameWithType: CharacterEscapes.getEscapeCodesForAscii
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeCodesForAscii
  package: com.fasterxml.jackson.core.io
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.SerializableString
  name: SerializableString
  nameWithType: SerializableString
  fullName: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence*
  name: getEscapeSequence
  nameWithType: CharacterEscapes.getEscapeSequence
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence
  package: com.fasterxml.jackson.core.io
- uid: com.fasterxml.jackson.core.io.CharacterEscapes.standardAsciiEscapesForJSON*
  name: standardAsciiEscapesForJSON
  nameWithType: CharacterEscapes.standardAsciiEscapesForJSON
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes.standardAsciiEscapesForJSON
  package: com.fasterxml.jackson.core.io
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
