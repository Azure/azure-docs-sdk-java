### YamlMime:JavaType
uid: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder"
fullName: "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder"
name: "CosmosEncryptionClientBuilder"
nameWithType: "CosmosEncryptionClientBuilder"
summary: "Helper class to build <xref uid=\"com.azure.cosmos.encryption.CosmosEncryptionAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosEncryptionAsyncClient\"></xref> and <xref uid=\"com.azure.cosmos.encryption.CosmosEncryptionClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosEncryptionClient\"></xref> instances as logical representation of the Azure Cosmos database service.\n\nWhen building client, cosmosAsyncClient()/cosmosClient(), keyEncryptionKeyResolver() and keyEncryptionKeyResolverName() are mandatory APIs, without these the initialization will fail.\n\n```java\nBuilding Cosmos Encryption Async Client APIs.\n     If Azure key vault is used in , we can input  in \n\n \n CosmosEncryptionAsyncClient cosmosEncryptionAsyncClient = new CosmosEncryptionClientBuilder()\n         .cosmosAsyncClient(cosmosAsyncClient)\n         .keyEncryptionKeyResolver(keyEncryptionKeyResolver)\n         .keyEncryptionKeyResolverName(keyEncryptionKeyResolverName)\n         .buildAsyncClient();\n```\n\n```java\nBuilding Cosmos Encryption Sync Client minimal APIs\n     If Azure key vault is used in , we can input  in \n  * \n CosmosEncryptionClient client = new CosmosEncryptionClientBuilder()\n         .cosmosClient(cosmosClient)\n         .keyEncryptionKeyResolver(keyEncryptionKeyResolver)\n         .keyEncryptionKeyResolverName(keyEncryptionKeyResolverName)\n         .buildClient();\n```"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class CosmosEncryptionClientBuilder"
constructors:
- "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.CosmosEncryptionClientBuilder()"
fields:
- "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.KEY_RESOLVER_NAME_AZURE_KEY_VAULT"
methods:
- "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.buildAsyncClient()"
- "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.buildClient()"
- "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.cosmosAsyncClient(com.azure.cosmos.CosmosAsyncClient)"
- "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.cosmosClient(com.azure.cosmos.CosmosClient)"
- "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.keyEncryptionKeyResolver(com.azure.core.cryptography.KeyEncryptionKeyResolver)"
- "com.azure.cosmos.encryption.CosmosEncryptionClientBuilder.keyEncryptionKeyResolverName(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.cosmos.encryption"
artifact: com.azure:azure-cosmos-encryption:1.0.0-beta.10
