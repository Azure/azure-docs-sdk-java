### YamlMime:JavaType
uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState"
fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState"
name: "SparkBatchJobState"
nameWithType: "SparkBatchJobState"
summary: "The Spark<wbr>Batch<wbr>Job<wbr>State model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SparkBatchJobState"
constructors:
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.SparkBatchJobState()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.SparkBatchJobState()"
  name: "SparkBatchJobState()"
  nameWithType: "SparkBatchJobState.SparkBatchJobState()"
  syntax: "public SparkBatchJobState()"
methods:
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getCurrentState()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getCurrentState()"
  name: "getCurrentState()"
  nameWithType: "SparkBatchJobState.getCurrentState()"
  summary: "Get the current<wbr>State property: the Spark job state."
  syntax: "public String getCurrentState()"
  desc: "Get the currentState property: the Spark job state."
  returns:
    description: "the currentState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getDeadAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getDeadAt()"
  name: "getDeadAt()"
  nameWithType: "SparkBatchJobState.getDeadAt()"
  summary: "Get the dead<wbr>At property: time that at which \"dead\" livy state was first seen."
  syntax: "public OffsetDateTime getDeadAt()"
  desc: "Get the deadAt property: time that at which \"dead\" livy state was first seen."
  returns:
    description: "the deadAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getJobCreationRequest()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getJobCreationRequest()"
  name: "getJobCreationRequest()"
  nameWithType: "SparkBatchJobState.getJobCreationRequest()"
  summary: "Get the job<wbr>Creation<wbr>Request property: The job<wbr>Creation<wbr>Request property."
  syntax: "public SparkRequest getJobCreationRequest()"
  desc: "Get the jobCreationRequest property: The jobCreationRequest property."
  returns:
    description: "the jobCreationRequest value."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkRequest?alt=com.azure.analytics.synapse.spark.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getNotStartedAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getNotStartedAt()"
  name: "getNotStartedAt()"
  nameWithType: "SparkBatchJobState.getNotStartedAt()"
  summary: "Get the not<wbr>Started<wbr>At property: the time that at which \"not\\_started\" livy state was first seen."
  syntax: "public OffsetDateTime getNotStartedAt()"
  desc: "Get the notStartedAt property: the time that at which \"not\\_started\" livy state was first seen."
  returns:
    description: "the notStartedAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getRecoveringAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getRecoveringAt()"
  name: "getRecoveringAt()"
  nameWithType: "SparkBatchJobState.getRecoveringAt()"
  summary: "Get the recovering<wbr>At property: the time that at which \"recovering\" livy state was first seen."
  syntax: "public OffsetDateTime getRecoveringAt()"
  desc: "Get the recoveringAt property: the time that at which \"recovering\" livy state was first seen."
  returns:
    description: "the recoveringAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getRunningAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getRunningAt()"
  name: "getRunningAt()"
  nameWithType: "SparkBatchJobState.getRunningAt()"
  summary: "Get the running<wbr>At property: the time that at which \"running\" livy state was first seen."
  syntax: "public OffsetDateTime getRunningAt()"
  desc: "Get the runningAt property: the time that at which \"running\" livy state was first seen."
  returns:
    description: "the runningAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getStartingAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getStartingAt()"
  name: "getStartingAt()"
  nameWithType: "SparkBatchJobState.getStartingAt()"
  summary: "Get the starting<wbr>At property: the time that at which \"starting\" livy state was first seen."
  syntax: "public OffsetDateTime getStartingAt()"
  desc: "Get the startingAt property: the time that at which \"starting\" livy state was first seen."
  returns:
    description: "the startingAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getSuccessAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getSuccessAt()"
  name: "getSuccessAt()"
  nameWithType: "SparkBatchJobState.getSuccessAt()"
  summary: "Get the success<wbr>At property: the time that at which \"success\" livy state was first seen."
  syntax: "public OffsetDateTime getSuccessAt()"
  desc: "Get the successAt property: the time that at which \"success\" livy state was first seen."
  returns:
    description: "the successAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getTerminatedAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.getTerminatedAt()"
  name: "getTerminatedAt()"
  nameWithType: "SparkBatchJobState.getTerminatedAt()"
  summary: "Get the terminated<wbr>At property: the time that at which \"killed\" livy state was first seen."
  syntax: "public OffsetDateTime getTerminatedAt()"
  desc: "Get the terminatedAt property: the time that at which \"killed\" livy state was first seen."
  returns:
    description: "the terminatedAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setCurrentState(java.lang.String)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setCurrentState(String currentState)"
  name: "setCurrentState(String currentState)"
  nameWithType: "SparkBatchJobState.setCurrentState(String currentState)"
  summary: "Set the current<wbr>State property: the Spark job state."
  parameters:
  - description: "the currentState value to set."
    name: "currentState"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkBatchJobState setCurrentState(String currentState)"
  desc: "Set the currentState property: the Spark job state."
  returns:
    description: "the SparkBatchJobState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobState?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobState&text=SparkBatchJobState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setDeadAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setDeadAt(OffsetDateTime deadAt)"
  name: "setDeadAt(OffsetDateTime deadAt)"
  nameWithType: "SparkBatchJobState.setDeadAt(OffsetDateTime deadAt)"
  summary: "Set the dead<wbr>At property: time that at which \"dead\" livy state was first seen."
  parameters:
  - description: "the deadAt value to set."
    name: "deadAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkBatchJobState setDeadAt(OffsetDateTime deadAt)"
  desc: "Set the deadAt property: time that at which \"dead\" livy state was first seen."
  returns:
    description: "the SparkBatchJobState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobState?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobState&text=SparkBatchJobState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setJobCreationRequest(com.azure.analytics.synapse.spark.models.SparkRequest)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setJobCreationRequest(SparkRequest jobCreationRequest)"
  name: "setJobCreationRequest(SparkRequest jobCreationRequest)"
  nameWithType: "SparkBatchJobState.setJobCreationRequest(SparkRequest jobCreationRequest)"
  summary: "Set the job<wbr>Creation<wbr>Request property: The job<wbr>Creation<wbr>Request property."
  parameters:
  - description: "the jobCreationRequest value to set."
    name: "jobCreationRequest"
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkRequest?alt=com.azure.analytics.synapse.spark.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkBatchJobState setJobCreationRequest(SparkRequest jobCreationRequest)"
  desc: "Set the jobCreationRequest property: The jobCreationRequest property."
  returns:
    description: "the SparkBatchJobState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobState?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobState&text=SparkBatchJobState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setNotStartedAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setNotStartedAt(OffsetDateTime notStartedAt)"
  name: "setNotStartedAt(OffsetDateTime notStartedAt)"
  nameWithType: "SparkBatchJobState.setNotStartedAt(OffsetDateTime notStartedAt)"
  summary: "Set the not<wbr>Started<wbr>At property: the time that at which \"not\\_started\" livy state was first seen."
  parameters:
  - description: "the notStartedAt value to set."
    name: "notStartedAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkBatchJobState setNotStartedAt(OffsetDateTime notStartedAt)"
  desc: "Set the notStartedAt property: the time that at which \"not\\_started\" livy state was first seen."
  returns:
    description: "the SparkBatchJobState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobState?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobState&text=SparkBatchJobState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setRecoveringAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setRecoveringAt(OffsetDateTime recoveringAt)"
  name: "setRecoveringAt(OffsetDateTime recoveringAt)"
  nameWithType: "SparkBatchJobState.setRecoveringAt(OffsetDateTime recoveringAt)"
  summary: "Set the recovering<wbr>At property: the time that at which \"recovering\" livy state was first seen."
  parameters:
  - description: "the recoveringAt value to set."
    name: "recoveringAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkBatchJobState setRecoveringAt(OffsetDateTime recoveringAt)"
  desc: "Set the recoveringAt property: the time that at which \"recovering\" livy state was first seen."
  returns:
    description: "the SparkBatchJobState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobState?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobState&text=SparkBatchJobState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setRunningAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setRunningAt(OffsetDateTime runningAt)"
  name: "setRunningAt(OffsetDateTime runningAt)"
  nameWithType: "SparkBatchJobState.setRunningAt(OffsetDateTime runningAt)"
  summary: "Set the running<wbr>At property: the time that at which \"running\" livy state was first seen."
  parameters:
  - description: "the runningAt value to set."
    name: "runningAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkBatchJobState setRunningAt(OffsetDateTime runningAt)"
  desc: "Set the runningAt property: the time that at which \"running\" livy state was first seen."
  returns:
    description: "the SparkBatchJobState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobState?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobState&text=SparkBatchJobState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setStartingAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setStartingAt(OffsetDateTime startingAt)"
  name: "setStartingAt(OffsetDateTime startingAt)"
  nameWithType: "SparkBatchJobState.setStartingAt(OffsetDateTime startingAt)"
  summary: "Set the starting<wbr>At property: the time that at which \"starting\" livy state was first seen."
  parameters:
  - description: "the startingAt value to set."
    name: "startingAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkBatchJobState setStartingAt(OffsetDateTime startingAt)"
  desc: "Set the startingAt property: the time that at which \"starting\" livy state was first seen."
  returns:
    description: "the SparkBatchJobState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobState?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobState&text=SparkBatchJobState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setSuccessAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setSuccessAt(OffsetDateTime successAt)"
  name: "setSuccessAt(OffsetDateTime successAt)"
  nameWithType: "SparkBatchJobState.setSuccessAt(OffsetDateTime successAt)"
  summary: "Set the success<wbr>At property: the time that at which \"success\" livy state was first seen."
  parameters:
  - description: "the successAt value to set."
    name: "successAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkBatchJobState setSuccessAt(OffsetDateTime successAt)"
  desc: "Set the successAt property: the time that at which \"success\" livy state was first seen."
  returns:
    description: "the SparkBatchJobState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobState?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobState&text=SparkBatchJobState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setTerminatedAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobState.setTerminatedAt(OffsetDateTime terminatedAt)"
  name: "setTerminatedAt(OffsetDateTime terminatedAt)"
  nameWithType: "SparkBatchJobState.setTerminatedAt(OffsetDateTime terminatedAt)"
  summary: "Set the terminated<wbr>At property: the time that at which \"killed\" livy state was first seen."
  parameters:
  - description: "the terminatedAt value to set."
    name: "terminatedAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkBatchJobState setTerminatedAt(OffsetDateTime terminatedAt)"
  desc: "Set the terminatedAt property: the time that at which \"killed\" livy state was first seen."
  returns:
    description: "the SparkBatchJobState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobState?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobState&text=SparkBatchJobState\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The SparkBatchJobState model."
metadata: {}
package: "com.azure.analytics.synapse.spark.models"
artifact: com.azure:azure-analytics-synapse-spark:1.0.0-beta.5
