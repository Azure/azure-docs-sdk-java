### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.http.io.entity.EntityUtils
  id: EntityUtils
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.entity
  children:
  - org.apache.hc.core5.http.io.entity.EntityUtils.consume(org.apache.hc.core5.http.HttpEntity)
  - org.apache.hc.core5.http.io.entity.EntityUtils.consumeQuietly(org.apache.hc.core5.http.HttpEntity)
  - org.apache.hc.core5.http.io.entity.EntityUtils.parse(org.apache.hc.core5.http.HttpEntity)
  - org.apache.hc.core5.http.io.entity.EntityUtils.parse(org.apache.hc.core5.http.HttpEntity,int)
  - org.apache.hc.core5.http.io.entity.EntityUtils.toByteArray(org.apache.hc.core5.http.HttpEntity)
  - org.apache.hc.core5.http.io.entity.EntityUtils.toByteArray(org.apache.hc.core5.http.HttpEntity,int)
  - org.apache.hc.core5.http.io.entity.EntityUtils.toString(org.apache.hc.core5.http.HttpEntity)
  - org.apache.hc.core5.http.io.entity.EntityUtils.toString(org.apache.hc.core5.http.HttpEntity,int)
  - org.apache.hc.core5.http.io.entity.EntityUtils.toString(org.apache.hc.core5.http.HttpEntity,java.lang.String)
  - org.apache.hc.core5.http.io.entity.EntityUtils.toString(org.apache.hc.core5.http.HttpEntity,java.lang.String,int)
  - org.apache.hc.core5.http.io.entity.EntityUtils.toString(org.apache.hc.core5.http.HttpEntity,java.nio.charset.Charset)
  - org.apache.hc.core5.http.io.entity.EntityUtils.toString(org.apache.hc.core5.http.HttpEntity,java.nio.charset.Charset,int)
  langs:
  - java
  name: EntityUtils
  nameWithType: EntityUtils
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils
  type: Class
  package: org.apache.hc.core5.http.io.entity
  summary: Support methods for <xref uid="org.apache.hc.core5.http.HttpEntity" data-throw-if-not-resolved="false">HttpEntity</xref>.
  syntax:
    content: public final class EntityUtils
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.EntityUtils()
  id: EntityUtils()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.entity.EntityUtils
  langs:
  - java
  name: EntityUtils()
  nameWithType: EntityUtils.EntityUtils()
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.EntityUtils()
  overload: org.apache.hc.core5.http.io.entity.EntityUtils.EntityUtils*
  type: Constructor
  package: org.apache.hc.core5.http.io.entity
  syntax:
    content: private EntityUtils()
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.consume(org.apache.hc.core5.http.HttpEntity)
  id: consume(org.apache.hc.core5.http.HttpEntity)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.entity.EntityUtils
  langs:
  - java
  name: consume(HttpEntity entity)
  nameWithType: EntityUtils.consume(HttpEntity entity)
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.consume(HttpEntity entity)
  overload: org.apache.hc.core5.http.io.entity.EntityUtils.consume*
  type: Method
  package: org.apache.hc.core5.http.io.entity
  summary: Ensures that the entity content is fully consumed and the content stream, if exists, is closed.
  syntax:
    content: public static void consume(HttpEntity entity)
    parameters:
    - id: entity
      type: org.apache.hc.core5.http.HttpEntity
      description: the entity to consume.
  exceptions:
  - type: java.io.IOException
    description: if an error occurs reading the input stream
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.consumeQuietly(org.apache.hc.core5.http.HttpEntity)
  id: consumeQuietly(org.apache.hc.core5.http.HttpEntity)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.entity.EntityUtils
  langs:
  - java
  name: consumeQuietly(HttpEntity entity)
  nameWithType: EntityUtils.consumeQuietly(HttpEntity entity)
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.consumeQuietly(HttpEntity entity)
  overload: org.apache.hc.core5.http.io.entity.EntityUtils.consumeQuietly*
  type: Method
  package: org.apache.hc.core5.http.io.entity
  summary: Ensures that the entity content is fully consumed and the content stream, if exists, is closed. The process is done, *quietly* , without throwing any IOException.
  syntax:
    content: public static void consumeQuietly(HttpEntity entity)
    parameters:
    - id: entity
      type: org.apache.hc.core5.http.HttpEntity
      description: the entity to consume.
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.parse(org.apache.hc.core5.http.HttpEntity)
  id: parse(org.apache.hc.core5.http.HttpEntity)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.entity.EntityUtils
  langs:
  - java
  name: parse(HttpEntity entity)
  nameWithType: EntityUtils.parse(HttpEntity entity)
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.parse(HttpEntity entity)
  overload: org.apache.hc.core5.http.io.entity.EntityUtils.parse*
  type: Method
  package: org.apache.hc.core5.http.io.entity
  summary: >-
    Returns a list of <xref uid="org.apache.hc.core5.http.NameValuePair" data-throw-if-not-resolved="false">NameValuePairs</xref> as parsed from an <xref uid="org.apache.hc.core5.http.HttpEntity" data-throw-if-not-resolved="false">HttpEntity</xref>. The encoding is taken from the entity's Content-Encoding header.


    This is typically used while parsing an HTTP POST.
  syntax:
    content: public static List<NameValuePair> parse(HttpEntity entity)
    parameters:
    - id: entity
      type: org.apache.hc.core5.http.HttpEntity
      description: The entity to parse
    return:
      type: java.util.List<org.apache.hc.core5.http.NameValuePair>
      description: a list of <xref uid="org.apache.hc.core5.http.NameValuePair" data-throw-if-not-resolved="false">NameValuePair</xref> as built from the URI's query portion.
  exceptions:
  - type: java.io.IOException
    description: If there was an exception getting the entity's data.
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.parse(org.apache.hc.core5.http.HttpEntity,int)
  id: parse(org.apache.hc.core5.http.HttpEntity,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.entity.EntityUtils
  langs:
  - java
  name: parse(HttpEntity entity, int maxStreamLength)
  nameWithType: EntityUtils.parse(HttpEntity entity, int maxStreamLength)
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.parse(HttpEntity entity, int maxStreamLength)
  overload: org.apache.hc.core5.http.io.entity.EntityUtils.parse*
  type: Method
  package: org.apache.hc.core5.http.io.entity
  summary: >-
    Returns a list of <xref uid="org.apache.hc.core5.http.NameValuePair" data-throw-if-not-resolved="false">NameValuePairs</xref> as parsed from an <xref uid="org.apache.hc.core5.http.HttpEntity" data-throw-if-not-resolved="false">HttpEntity</xref>. The encoding is taken from the entity's Content-Encoding header.


    This is typically used while parsing an HTTP POST.
  syntax:
    content: public static List<NameValuePair> parse(HttpEntity entity, int maxStreamLength)
    parameters:
    - id: entity
      type: org.apache.hc.core5.http.HttpEntity
      description: The entity to parse
    - id: maxStreamLength
      type: int
      description: The maximum size of the stream to read; use it to guard against unreasonable or malicious processing.
    return:
      type: java.util.List<org.apache.hc.core5.http.NameValuePair>
      description: a list of <xref uid="org.apache.hc.core5.http.NameValuePair" data-throw-if-not-resolved="false">NameValuePair</xref> as built from the URI's query portion.
  exceptions:
  - type: java.io.IOException
    description: If there was an exception getting the entity's data.
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.toByteArray(org.apache.hc.core5.http.HttpEntity)
  id: toByteArray(org.apache.hc.core5.http.HttpEntity)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.entity.EntityUtils
  langs:
  - java
  name: toByteArray(HttpEntity entity)
  nameWithType: EntityUtils.toByteArray(HttpEntity entity)
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.toByteArray(HttpEntity entity)
  overload: org.apache.hc.core5.http.io.entity.EntityUtils.toByteArray*
  type: Method
  package: org.apache.hc.core5.http.io.entity
  summary: Reads the contents of an entity and return it as a byte array.
  syntax:
    content: public static byte[] toByteArray(HttpEntity entity)
    parameters:
    - id: entity
      type: org.apache.hc.core5.http.HttpEntity
      description: the entity to read from=
    return:
      type: byte[]
      description: >-
        byte array containing the entity content. May be null if
           <xref uid="org.apache.hc.core5.http.HttpEntity.getContent()" data-throw-if-not-resolved="false">HttpEntity#getContent()</xref> is null.
  exceptions:
  - type: java.io.IOException
    description: if an error occurs reading the input stream
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.toByteArray(org.apache.hc.core5.http.HttpEntity,int)
  id: toByteArray(org.apache.hc.core5.http.HttpEntity,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.entity.EntityUtils
  langs:
  - java
  name: toByteArray(HttpEntity entity, int maxResultLength)
  nameWithType: EntityUtils.toByteArray(HttpEntity entity, int maxResultLength)
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.toByteArray(HttpEntity entity, int maxResultLength)
  overload: org.apache.hc.core5.http.io.entity.EntityUtils.toByteArray*
  type: Method
  package: org.apache.hc.core5.http.io.entity
  summary: Reads the contents of an entity and return it as a byte array.
  syntax:
    content: public static byte[] toByteArray(HttpEntity entity, int maxResultLength)
    parameters:
    - id: entity
      type: org.apache.hc.core5.http.HttpEntity
      description: the entity to read from=
    - id: maxResultLength
      type: int
      description: The maximum size of the String to return; use it to guard against unreasonable or malicious processing.
    return:
      type: byte[]
      description: >-
        byte array containing the entity content. May be null if
           <xref uid="org.apache.hc.core5.http.HttpEntity.getContent()" data-throw-if-not-resolved="false">HttpEntity#getContent()</xref> is null.
  exceptions:
  - type: java.io.IOException
    description: if an error occurs reading the input stream
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.toString(org.apache.hc.core5.http.HttpEntity)
  id: toString(org.apache.hc.core5.http.HttpEntity)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.entity.EntityUtils
  langs:
  - java
  name: toString(HttpEntity entity)
  nameWithType: EntityUtils.toString(HttpEntity entity)
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.toString(HttpEntity entity)
  overload: org.apache.hc.core5.http.io.entity.EntityUtils.toString*
  type: Method
  package: org.apache.hc.core5.http.io.entity
  summary: Reads the contents of an entity and return it as a String. The content is converted using the character set from the entity (if any), failing that, "ISO-8859-1" is used.
  syntax:
    content: public static String toString(HttpEntity entity)
    parameters:
    - id: entity
      type: org.apache.hc.core5.http.HttpEntity
      description: the entity to convert to a string; must not be null
    return:
      type: java.lang.String
      description: String containing the content.
  exceptions:
  - type: java.io.IOException
    description: if header elements cannot be parsed
  - type: org.apache.hc.core5.http.ParseException
    description: if header elements cannot be parsed
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.toString(org.apache.hc.core5.http.HttpEntity,int)
  id: toString(org.apache.hc.core5.http.HttpEntity,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.entity.EntityUtils
  langs:
  - java
  name: toString(HttpEntity entity, int maxResultLength)
  nameWithType: EntityUtils.toString(HttpEntity entity, int maxResultLength)
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.toString(HttpEntity entity, int maxResultLength)
  overload: org.apache.hc.core5.http.io.entity.EntityUtils.toString*
  type: Method
  package: org.apache.hc.core5.http.io.entity
  summary: Reads the contents of an entity and return it as a String. The content is converted using the character set from the entity (if any), failing that, "ISO-8859-1" is used.
  syntax:
    content: public static String toString(HttpEntity entity, int maxResultLength)
    parameters:
    - id: entity
      type: org.apache.hc.core5.http.HttpEntity
      description: the entity to convert to a string; must not be null
    - id: maxResultLength
      type: int
      description: The maximum size of the String to return; use it to guard against unreasonable or malicious processing.
    return:
      type: java.lang.String
      description: String containing the content.
  exceptions:
  - type: java.io.IOException
    description: if header elements cannot be parsed
  - type: org.apache.hc.core5.http.ParseException
    description: if header elements cannot be parsed
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.toString(org.apache.hc.core5.http.HttpEntity,java.lang.String)
  id: toString(org.apache.hc.core5.http.HttpEntity,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.entity.EntityUtils
  langs:
  - java
  name: toString(HttpEntity entity, String defaultCharset)
  nameWithType: EntityUtils.toString(HttpEntity entity, String defaultCharset)
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.toString(HttpEntity entity, String defaultCharset)
  overload: org.apache.hc.core5.http.io.entity.EntityUtils.toString*
  type: Method
  package: org.apache.hc.core5.http.io.entity
  summary: Gets the entity content as a String, using the provided default character set if none is found in the entity. If defaultCharset is null, the default "ISO-8859-1" is used.
  syntax:
    content: public static String toString(HttpEntity entity, String defaultCharset)
    parameters:
    - id: entity
      type: org.apache.hc.core5.http.HttpEntity
      description: must not be null
    - id: defaultCharset
      type: java.lang.String
      description: character set to be applied if none found in the entity
    return:
      type: java.lang.String
      description: >-
        the entity content as a String. May be null if
           <xref uid="org.apache.hc.core5.http.HttpEntity.getContent()" data-throw-if-not-resolved="false">HttpEntity#getContent()</xref> is null.
  exceptions:
  - type: java.io.IOException
    description: if header elements cannot be parsed
  - type: org.apache.hc.core5.http.ParseException
    description: if header elements cannot be parsed
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.toString(org.apache.hc.core5.http.HttpEntity,java.lang.String,int)
  id: toString(org.apache.hc.core5.http.HttpEntity,java.lang.String,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.entity.EntityUtils
  langs:
  - java
  name: toString(HttpEntity entity, String defaultCharset, int maxResultLength)
  nameWithType: EntityUtils.toString(HttpEntity entity, String defaultCharset, int maxResultLength)
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.toString(HttpEntity entity, String defaultCharset, int maxResultLength)
  overload: org.apache.hc.core5.http.io.entity.EntityUtils.toString*
  type: Method
  package: org.apache.hc.core5.http.io.entity
  summary: Gets the entity content as a String, using the provided default character set if none is found in the entity. If defaultCharset is null, the default "ISO-8859-1" is used.
  syntax:
    content: public static String toString(HttpEntity entity, String defaultCharset, int maxResultLength)
    parameters:
    - id: entity
      type: org.apache.hc.core5.http.HttpEntity
      description: must not be null
    - id: defaultCharset
      type: java.lang.String
      description: character set to be applied if none found in the entity
    - id: maxResultLength
      type: int
      description: The maximum size of the String to return; use it to guard against unreasonable or malicious processing.
    return:
      type: java.lang.String
      description: >-
        the entity content as a String. May be null if
           <xref uid="org.apache.hc.core5.http.HttpEntity.getContent()" data-throw-if-not-resolved="false">HttpEntity#getContent()</xref> is null.
  exceptions:
  - type: java.io.IOException
    description: if header elements cannot be parsed
  - type: org.apache.hc.core5.http.ParseException
    description: if header elements cannot be parsed
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.toString(org.apache.hc.core5.http.HttpEntity,java.nio.charset.Charset)
  id: toString(org.apache.hc.core5.http.HttpEntity,java.nio.charset.Charset)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.entity.EntityUtils
  langs:
  - java
  name: toString(HttpEntity entity, Charset defaultCharset)
  nameWithType: EntityUtils.toString(HttpEntity entity, Charset defaultCharset)
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.toString(HttpEntity entity, Charset defaultCharset)
  overload: org.apache.hc.core5.http.io.entity.EntityUtils.toString*
  type: Method
  package: org.apache.hc.core5.http.io.entity
  summary: Gets the entity content as a String, using the provided default character set if none is found in the entity. If defaultCharset is null, the default "ISO-8859-1" is used.
  syntax:
    content: public static String toString(HttpEntity entity, Charset defaultCharset)
    parameters:
    - id: entity
      type: org.apache.hc.core5.http.HttpEntity
      description: must not be null
    - id: defaultCharset
      type: java.nio.charset.Charset
      description: >-
        character set to be applied if none found in the entity,
         or if the entity provided charset is invalid or not available.
    return:
      type: java.lang.String
      description: >-
        the entity content as a String. May be null if
           <xref uid="org.apache.hc.core5.http.HttpEntity.getContent()" data-throw-if-not-resolved="false">HttpEntity#getContent()</xref> is null.
  exceptions:
  - type: java.io.IOException
    description: if header elements cannot be parsed
  - type: org.apache.hc.core5.http.ParseException
    description: if header elements cannot be parsed
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.toString(org.apache.hc.core5.http.HttpEntity,java.nio.charset.Charset,int)
  id: toString(org.apache.hc.core5.http.HttpEntity,java.nio.charset.Charset,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.entity.EntityUtils
  langs:
  - java
  name: toString(HttpEntity entity, Charset defaultCharset, int maxResultLength)
  nameWithType: EntityUtils.toString(HttpEntity entity, Charset defaultCharset, int maxResultLength)
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.toString(HttpEntity entity, Charset defaultCharset, int maxResultLength)
  overload: org.apache.hc.core5.http.io.entity.EntityUtils.toString*
  type: Method
  package: org.apache.hc.core5.http.io.entity
  summary: Gets the entity content as a String, using the provided default character set if none is found in the entity. If defaultCharset is null, the default "ISO-8859-1" is used.
  syntax:
    content: public static String toString(HttpEntity entity, Charset defaultCharset, int maxResultLength)
    parameters:
    - id: entity
      type: org.apache.hc.core5.http.HttpEntity
      description: must not be null
    - id: defaultCharset
      type: java.nio.charset.Charset
      description: >-
        character set to be applied if none found in the entity,
         or if the entity provided charset is invalid or not available.
    - id: maxResultLength
      type: int
      description: The maximum size of the String to return; use it to guard against unreasonable or malicious processing.
    return:
      type: java.lang.String
      description: >-
        the entity content as a String. May be null if
           <xref uid="org.apache.hc.core5.http.HttpEntity.getContent()" data-throw-if-not-resolved="false">HttpEntity#getContent()</xref> is null.
  exceptions:
  - type: java.io.IOException
    description: if header elements cannot be parsed
  - type: org.apache.hc.core5.http.ParseException
    description: if header elements cannot be parsed
references:
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.EntityUtils*
  name: EntityUtils
  nameWithType: EntityUtils.EntityUtils
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.EntityUtils
  package: org.apache.hc.core5.http.io.entity
- uid: org.apache.hc.core5.http.HttpEntity
  name: HttpEntity
  nameWithType: HttpEntity
  fullName: org.apache.hc.core5.http.HttpEntity
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.consumeQuietly*
  name: consumeQuietly
  nameWithType: EntityUtils.consumeQuietly
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.consumeQuietly
  package: org.apache.hc.core5.http.io.entity
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.consume*
  name: consume
  nameWithType: EntityUtils.consume
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.consume
  package: org.apache.hc.core5.http.io.entity
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.toByteArray*
  name: toByteArray
  nameWithType: EntityUtils.toByteArray
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.toByteArray
  package: org.apache.hc.core5.http.io.entity
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.core5.http.ParseException
  name: ParseException
  nameWithType: ParseException
  fullName: org.apache.hc.core5.http.ParseException
- uid: java.nio.charset.Charset
  spec.java:
  - uid: java.nio.charset.Charset
    name: Charset
    fullName: java.nio.charset.Charset
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.toString*
  name: toString
  nameWithType: EntityUtils.toString
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.toString
  package: org.apache.hc.core5.http.io.entity
- uid: java.util.List<org.apache.hc.core5.http.NameValuePair>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: org.apache.hc.core5.http.NameValuePair
    name: NameValuePair
    fullName: org.apache.hc.core5.http.NameValuePair
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.http.io.entity.EntityUtils.parse*
  name: parse
  nameWithType: EntityUtils.parse
  fullName: org.apache.hc.core5.http.io.entity.EntityUtils.parse
  package: org.apache.hc.core5.http.io.entity
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: org.apache.hc.core5.http.NameValuePair
  name: NameValuePair
  nameWithType: NameValuePair
  fullName: org.apache.hc.core5.http.NameValuePair
