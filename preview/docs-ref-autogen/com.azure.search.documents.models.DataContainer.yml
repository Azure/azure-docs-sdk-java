### YamlMime:ManagedReference
items:
- uid: "com.azure.search.documents.models.DataContainer"
  id: "DataContainer"
  parent: "com.azure.search.documents.models"
  children:
  - "com.azure.search.documents.models.DataContainer.DataContainer()"
  - "com.azure.search.documents.models.DataContainer.getName()"
  - "com.azure.search.documents.models.DataContainer.getQuery()"
  - "com.azure.search.documents.models.DataContainer.setName(java.lang.String)"
  - "com.azure.search.documents.models.DataContainer.setQuery(java.lang.String)"
  langs:
  - "java"
  name: "DataContainer"
  nameWithType: "DataContainer"
  fullName: "com.azure.search.documents.models.DataContainer"
  type: "Class"
  package: "com.azure.search.documents.models"
  summary: "Represents information about the entity (such as Azure SQL table or CosmosDB collection) that will be indexed."
  syntax:
    content: "public final class DataContainer"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.search.documents.models.DataContainer.DataContainer()"
  id: "DataContainer()"
  parent: "com.azure.search.documents.models.DataContainer"
  langs:
  - "java"
  name: "DataContainer()"
  nameWithType: "DataContainer.DataContainer()"
  fullName: "com.azure.search.documents.models.DataContainer.DataContainer()"
  overload: "com.azure.search.documents.models.DataContainer.DataContainer*"
  type: "Constructor"
  package: "com.azure.search.documents.models"
  syntax:
    content: "public DataContainer()"
- uid: "com.azure.search.documents.models.DataContainer.getName()"
  id: "getName()"
  parent: "com.azure.search.documents.models.DataContainer"
  langs:
  - "java"
  name: "getName()"
  nameWithType: "DataContainer.getName()"
  fullName: "com.azure.search.documents.models.DataContainer.getName()"
  overload: "com.azure.search.documents.models.DataContainer.getName*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the name property: The name of the table or view (for Azure SQL data source) or collection (for CosmosDB data source) that will be indexed."
  syntax:
    content: "public String getName()"
    return:
      type: "java.lang.String"
      description: "the name value."
- uid: "com.azure.search.documents.models.DataContainer.getQuery()"
  id: "getQuery()"
  parent: "com.azure.search.documents.models.DataContainer"
  langs:
  - "java"
  name: "getQuery()"
  nameWithType: "DataContainer.getQuery()"
  fullName: "com.azure.search.documents.models.DataContainer.getQuery()"
  overload: "com.azure.search.documents.models.DataContainer.getQuery*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the query property: A query that is applied to this data container. The syntax and meaning of this parameter is datasource-specific. Not supported by Azure SQL datasources."
  syntax:
    content: "public String getQuery()"
    return:
      type: "java.lang.String"
      description: "the query value."
- uid: "com.azure.search.documents.models.DataContainer.setName(java.lang.String)"
  id: "setName(java.lang.String)"
  parent: "com.azure.search.documents.models.DataContainer"
  langs:
  - "java"
  name: "setName(String name)"
  nameWithType: "DataContainer.setName(String name)"
  fullName: "com.azure.search.documents.models.DataContainer.setName(String name)"
  overload: "com.azure.search.documents.models.DataContainer.setName*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the name property: The name of the table or view (for Azure SQL data source) or collection (for CosmosDB data source) that will be indexed."
  syntax:
    content: "public DataContainer setName(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "the name value to set."
    return:
      type: "com.azure.search.documents.models.DataContainer"
      description: "the DataContainer object itself."
- uid: "com.azure.search.documents.models.DataContainer.setQuery(java.lang.String)"
  id: "setQuery(java.lang.String)"
  parent: "com.azure.search.documents.models.DataContainer"
  langs:
  - "java"
  name: "setQuery(String query)"
  nameWithType: "DataContainer.setQuery(String query)"
  fullName: "com.azure.search.documents.models.DataContainer.setQuery(String query)"
  overload: "com.azure.search.documents.models.DataContainer.setQuery*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the query property: A query that is applied to this data container. The syntax and meaning of this parameter is datasource-specific. Not supported by Azure SQL datasources."
  syntax:
    content: "public DataContainer setQuery(String query)"
    parameters:
    - id: "query"
      type: "java.lang.String"
      description: "the query value to set."
    return:
      type: "com.azure.search.documents.models.DataContainer"
      description: "the DataContainer object itself."
references:
- uid: "com.azure.search.documents.models.DataContainer.DataContainer*"
  name: "DataContainer"
  nameWithType: "DataContainer.DataContainer"
  fullName: "com.azure.search.documents.models.DataContainer.DataContainer"
  package: "com.azure.search.documents.models"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.search.documents.models.DataContainer.getName*"
  name: "getName"
  nameWithType: "DataContainer.getName"
  fullName: "com.azure.search.documents.models.DataContainer.getName"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.DataContainer.setName*"
  name: "setName"
  nameWithType: "DataContainer.setName"
  fullName: "com.azure.search.documents.models.DataContainer.setName"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.DataContainer.getQuery*"
  name: "getQuery"
  nameWithType: "DataContainer.getQuery"
  fullName: "com.azure.search.documents.models.DataContainer.getQuery"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.DataContainer.setQuery*"
  name: "setQuery"
  nameWithType: "DataContainer.setQuery"
  fullName: "com.azure.search.documents.models.DataContainer.setQuery"
  package: "com.azure.search.documents.models"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
