### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset.copyOf*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset<E>.<E>copyOf"
name: "<E>copyOf"
nameWithType: "ImmutableSortedMultiset<E>.<E>copyOf"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset.<E>copyOf(E[])"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset<E>.<E>copyOf(E[] elements)"
  name: "<E>copyOf(E[] elements)"
  nameWithType: "ImmutableSortedMultiset<E>.<E>copyOf(E[] elements)"
  summary: "Returns an immutable sorted multiset containing the given elements sorted by their natural ordering."
  parameters:
  - name: "elements"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static ImmutableSortedMultiset<E> <E>copyOf(E[] elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset&text=ImmutableSortedMultiset\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset.<E>copyOf(java.lang.Iterable<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset<E>.<E>copyOf(Iterable<? extends E> elements)"
  name: "<E>copyOf(Iterable<? extends E> elements)"
  nameWithType: "ImmutableSortedMultiset<E>.<E>copyOf(Iterable<? extends E> elements)"
  summary: "Returns an immutable sorted multiset containing the given elements sorted by their natural ordering. To create a copy of a `SortedMultiset` that preserves the comparator, call <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset.copyOfSorted\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#copyOfSorted\"></xref> instead. This method iterates over `elements` at most once.\n\nNote that if `s` is a `Multiset`, then `ImmutableSortedMultiset.copyOf(s)` returns an `ImmutableSortedMultiset` containing each of the strings in `s`, while `ImmutableSortedMultiset.of(s)` returns an `ImmutableSortedMultiset>` containing one element (the given multiset itself).\n\nDespite the method name, this method attempts to avoid actually copying the data when it is safe to do so. The exact circumstances under which a copy will or will not be performed are undocumented and subject to change.\n\nThis method is not type-safe, as it may be called on elements that are not mutually comparable."
  parameters:
  - name: "elements"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableSortedMultiset<E> <E>copyOf(Iterable<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset&text=ImmutableSortedMultiset\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset.<E>copyOf(java.util.Comparator<? super E>,java.lang.Iterable<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset<E>.<E>copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)"
  name: "<E>copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)"
  nameWithType: "ImmutableSortedMultiset<E>.<E>copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)"
  summary: "Returns an immutable sorted multiset containing the given elements sorted by the given `Comparator`. This method iterates over `elements` at most once.\n\nDespite the method name, this method attempts to avoid actually copying the data when it is safe to do so. The exact circumstances under which a copy will or will not be performed are undocumented and subject to change."
  parameters:
  - name: "comparator"
    type: "<xref href=\"java.util.Comparator?alt=java.util.Comparator&text=Comparator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? super E?alt=? super E&text=? super E\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "elements"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableSortedMultiset<E> <E>copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset&text=ImmutableSortedMultiset\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset.<E>copyOf(java.util.Comparator<? super E>,java.util.Iterator<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset<E>.<E>copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)"
  name: "<E>copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)"
  nameWithType: "ImmutableSortedMultiset<E>.<E>copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)"
  summary: "Returns an immutable sorted multiset containing the given elements sorted by the given `Comparator`."
  parameters:
  - name: "comparator"
    type: "<xref href=\"java.util.Comparator?alt=java.util.Comparator&text=Comparator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? super E?alt=? super E&text=? super E\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "elements"
    type: "<xref href=\"java.util.Iterator?alt=java.util.Iterator&text=Iterator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableSortedMultiset<E> <E>copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset&text=ImmutableSortedMultiset\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset.<E>copyOf(java.util.Iterator<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset<E>.<E>copyOf(Iterator<? extends E> elements)"
  name: "<E>copyOf(Iterator<? extends E> elements)"
  nameWithType: "ImmutableSortedMultiset<E>.<E>copyOf(Iterator<? extends E> elements)"
  summary: "Returns an immutable sorted multiset containing the given elements sorted by their natural ordering.\n\nThis method is not type-safe, as it may be called on elements that are not mutually comparable."
  parameters:
  - name: "elements"
    type: "<xref href=\"java.util.Iterator?alt=java.util.Iterator&text=Iterator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableSortedMultiset<E> <E>copyOf(Iterator<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMultiset&text=ImmutableSortedMultiset\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
