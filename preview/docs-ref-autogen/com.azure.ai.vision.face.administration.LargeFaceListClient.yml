### YamlMime:JavaType
uid: "com.azure.ai.vision.face.administration.LargeFaceListClient"
fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient"
name: "LargeFaceListClient"
nameWithType: "LargeFaceListClient"
summary: "Initializes a new instance of the synchronous Face<wbr>Administration<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **LargeFaceListClient**"
methods:
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.addFace(com.azure.core.util.BinaryData)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.addFace(BinaryData imageContent)"
  name: "addFace(BinaryData imageContent)"
  nameWithType: "LargeFaceListClient.addFace(BinaryData imageContent)"
  summary: "Add a face to a specified Large Face List, up to 1,000,000 faces."
  parameters:
  - description: "The image to be analyzed."
    name: "imageContent"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AddFaceResult addFace(BinaryData imageContent)"
  desc: "Add a face to a specified Large Face List, up to 1,000,000 faces. Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/add-large-face-list-face for more details."
  returns:
    description: "response body for adding face."
    type: "<xref href=\"com.azure.ai.vision.face.models.AddFaceResult?alt=com.azure.ai.vision.face.models.AddFaceResult&text=AddFaceResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.addFace(com.azure.core.util.BinaryData,java.util.List<java.lang.Integer>,com.azure.ai.vision.face.models.FaceDetectionModel,java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.addFace(BinaryData imageContent, List<Integer> targetFace, FaceDetectionModel detectionModel, String userData)"
  name: "addFace(BinaryData imageContent, List<Integer> targetFace, FaceDetectionModel detectionModel, String userData)"
  nameWithType: "LargeFaceListClient.addFace(BinaryData imageContent, List<Integer> targetFace, FaceDetectionModel detectionModel, String userData)"
  summary: "Add a face to a specified Large Face List, up to 1,000,000 faces."
  parameters:
  - description: "The image to be analyzed."
    name: "imageContent"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "A face rectangle to specify the target face to be added to a person, in the format of\n 'targetFace=left,top,width,height'."
    name: "targetFace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>&gt;"
  - description: "The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel'\n values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'."
    name: "detectionModel"
    type: "<xref href=\"com.azure.ai.vision.face.models.FaceDetectionModel?alt=com.azure.ai.vision.face.models.FaceDetectionModel&text=FaceDetectionModel\" data-throw-if-not-resolved=\"False\" />"
  - description: "User-provided data attached to the face. The size limit is 1K."
    name: "userData"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AddFaceResult addFace(BinaryData imageContent, List<Integer> targetFace, FaceDetectionModel detectionModel, String userData)"
  desc: "Add a face to a specified Large Face List, up to 1,000,000 faces. Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/add-large-face-list-face for more details."
  returns:
    description: "response body for adding face."
    type: "<xref href=\"com.azure.ai.vision.face.models.AddFaceResult?alt=com.azure.ai.vision.face.models.AddFaceResult&text=AddFaceResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.addFace(java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.addFace(String url)"
  name: "addFace(String url)"
  nameWithType: "LargeFaceListClient.addFace(String url)"
  summary: "Add a face to a specified Large Face List, up to 1,000,000 faces."
  parameters:
  - description: "URL of input image."
    name: "url"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AddFaceResult addFace(String url)"
  desc: "Add a face to a specified Large Face List, up to 1,000,000 faces. Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/add-large-face-list-face-from-url for more details."
  returns:
    description: "response body for adding face."
    type: "<xref href=\"com.azure.ai.vision.face.models.AddFaceResult?alt=com.azure.ai.vision.face.models.AddFaceResult&text=AddFaceResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.addFace(java.lang.String,java.util.List<java.lang.Integer>,com.azure.ai.vision.face.models.FaceDetectionModel,java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.addFace(String url, List<Integer> targetFace, FaceDetectionModel detectionModel, String userData)"
  name: "addFace(String url, List<Integer> targetFace, FaceDetectionModel detectionModel, String userData)"
  nameWithType: "LargeFaceListClient.addFace(String url, List<Integer> targetFace, FaceDetectionModel detectionModel, String userData)"
  summary: "Add a face to a specified Large Face List, up to 1,000,000 faces."
  parameters:
  - description: "URL of input image."
    name: "url"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A face rectangle to specify the target face to be added to a person, in the format of\n 'targetFace=left,top,width,height'."
    name: "targetFace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>&gt;"
  - description: "The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel'\n values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'."
    name: "detectionModel"
    type: "<xref href=\"com.azure.ai.vision.face.models.FaceDetectionModel?alt=com.azure.ai.vision.face.models.FaceDetectionModel&text=FaceDetectionModel\" data-throw-if-not-resolved=\"False\" />"
  - description: "User-provided data attached to the face. The size limit is 1K."
    name: "userData"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public AddFaceResult addFace(String url, List<Integer> targetFace, FaceDetectionModel detectionModel, String userData)"
  desc: "Add a face to a specified Large Face List, up to 1,000,000 faces. Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/add-large-face-list-face-from-url for more details."
  returns:
    description: "response body for adding face."
    type: "<xref href=\"com.azure.ai.vision.face.models.AddFaceResult?alt=com.azure.ai.vision.face.models.AddFaceResult&text=AddFaceResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.beginTrain()"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.beginTrain()"
  name: "beginTrain()"
  nameWithType: "LargeFaceListClient.beginTrain()"
  summary: "Submit a Large Face List training task."
  syntax: "public SyncPoller<FaceTrainingResult,Void> beginTrain()"
  desc: "Submit a Large Face List training task. Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/train-large-face-list for more details."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.vision.face.models.FaceTrainingResult?alt=com.azure.ai.vision.face.models.FaceTrainingResult&text=FaceTrainingResult\" data-throw-if-not-resolved=\"False\" />,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.beginTrain(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.beginTrain(RequestOptions requestOptions)"
  name: "beginTrain(RequestOptions requestOptions)"
  nameWithType: "LargeFaceListClient.beginTrain(RequestOptions requestOptions)"
  summary: "Submit a Large Face List training task."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<BinaryData,BinaryData> beginTrain(RequestOptions requestOptions)"
  desc: "Submit a Large Face List training task. Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/train-large-face-list for more details."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.create(java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.create(String name)"
  name: "create(String name)"
  nameWithType: "LargeFaceListClient.create(String name)"
  summary: "Create an empty Large Face List with user-specified large<wbr>Face<wbr>List<wbr>Id, name, an optional user<wbr>Data and recognition<wbr>Model."
  parameters:
  - description: "User defined name, maximum length is 128."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void create(String name)"
  desc: "Create an empty Large Face List with user-specified largeFaceListId, name, an optional userData and recognitionModel. Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/create-large-face-list for more details."
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.create(java.lang.String,java.lang.String,com.azure.ai.vision.face.models.FaceRecognitionModel)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.create(String name, String userData, FaceRecognitionModel recognitionModel)"
  name: "create(String name, String userData, FaceRecognitionModel recognitionModel)"
  nameWithType: "LargeFaceListClient.create(String name, String userData, FaceRecognitionModel recognitionModel)"
  summary: "Create an empty Large Face List with user-specified large<wbr>Face<wbr>List<wbr>Id, name, an optional user<wbr>Data and recognition<wbr>Model."
  parameters:
  - description: "User defined name, maximum length is 128."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Optional user defined data. Length should not exceed 16K."
    name: "userData"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The 'recognitionModel' associated with this face list. Supported 'recognitionModel'\n values include 'recognition_01', 'recognition_02, 'recognition_03', and 'recognition_04'. The default value is\n 'recognition_01'. 'recognition_04' is recommended since its accuracy is improved on faces wearing masks compared\n with 'recognition_03', and its overall accuracy is improved compared with 'recognition_01' and 'recognition_02'."
    name: "recognitionModel"
    type: "<xref href=\"com.azure.ai.vision.face.models.FaceRecognitionModel?alt=com.azure.ai.vision.face.models.FaceRecognitionModel&text=FaceRecognitionModel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void create(String name, String userData, FaceRecognitionModel recognitionModel)"
  desc: "Create an empty Large Face List with user-specified largeFaceListId, name, an optional userData and recognitionModel. Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/create-large-face-list for more details."
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.createWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.createWithResponse(BinaryData createRequest1, RequestOptions requestOptions)"
  name: "createWithResponse(BinaryData createRequest1, RequestOptions requestOptions)"
  nameWithType: "LargeFaceListClient.createWithResponse(BinaryData createRequest1, RequestOptions requestOptions)"
  summary: "Create an empty Large Face List with user-specified large<wbr>Face<wbr>List<wbr>Id, name, an optional user<wbr>Data and recognition<wbr>Model."
  parameters:
  - description: "The createRequest1 parameter."
    name: "createRequest1"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> createWithResponse(BinaryData createRequest1, RequestOptions requestOptions)"
  desc: "Create an empty Large Face List with user-specified largeFaceListId, name, an optional userData and recognitionModel. Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/create-large-face-list for more details.\n\n**Request Body Schema**\n\n```java\n{\n     name: String (Required)\n     userData: String (Optional)\n     recognitionModel: String(recognition_01/recognition_02/recognition_03/recognition_04) (Optional)\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.delete()"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.delete()"
  name: "delete()"
  nameWithType: "LargeFaceListClient.delete()"
  summary: "Delete a face from a Large Face List by specified large<wbr>Face<wbr>List<wbr>Id and persisted<wbr>Face<wbr>Id."
  syntax: "public void delete()"
  desc: "Delete a face from a Large Face List by specified largeFaceListId and persistedFaceId. Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/delete-large-face-list for more details."
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.deleteFace(java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.deleteFace(String persistedFaceId)"
  name: "deleteFace(String persistedFaceId)"
  nameWithType: "LargeFaceListClient.deleteFace(String persistedFaceId)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/face-list-operations/delete-large-face-list-face for more details."
  parameters:
  - description: "Face ID of the face."
    name: "persistedFaceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void deleteFace(String persistedFaceId)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/delete-large-face-list-face for more details."
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.deleteFaceWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.deleteFaceWithResponse(String persistedFaceId, RequestOptions requestOptions)"
  name: "deleteFaceWithResponse(String persistedFaceId, RequestOptions requestOptions)"
  nameWithType: "LargeFaceListClient.deleteFaceWithResponse(String persistedFaceId, RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/face-list-operations/delete-large-face-list-face for more details."
  parameters:
  - description: "Face ID of the face."
    name: "persistedFaceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteFaceWithResponse(String persistedFaceId, RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/delete-large-face-list-face for more details."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.deleteWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.deleteWithResponse(RequestOptions requestOptions)"
  name: "deleteWithResponse(RequestOptions requestOptions)"
  nameWithType: "LargeFaceListClient.deleteWithResponse(RequestOptions requestOptions)"
  summary: "Delete a face from a Large Face List by specified large<wbr>Face<wbr>List<wbr>Id and persisted<wbr>Face<wbr>Id."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteWithResponse(RequestOptions requestOptions)"
  desc: "Delete a face from a Large Face List by specified largeFaceListId and persistedFaceId. Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/delete-large-face-list for more details."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.get()"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.get()"
  name: "get()"
  nameWithType: "LargeFaceListClient.get()"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/face-list-operations/get-large-face-list for more details."
  syntax: "public LargeFaceList get()"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/get-large-face-list for more details."
  returns:
    description: "large face list is a list of faces, up to 1,000,000 faces."
    type: "<xref href=\"com.azure.ai.vision.face.models.LargeFaceList?alt=com.azure.ai.vision.face.models.LargeFaceList&text=LargeFaceList\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.get(java.lang.Boolean)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.get(Boolean returnRecognitionModel)"
  name: "get(Boolean returnRecognitionModel)"
  nameWithType: "LargeFaceListClient.get(Boolean returnRecognitionModel)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/face-list-operations/get-large-face-list for more details."
  parameters:
  - description: "Return 'recognitionModel' or not. The default value is false."
    name: "returnRecognitionModel"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public LargeFaceList get(Boolean returnRecognitionModel)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/get-large-face-list for more details."
  returns:
    description: "large face list is a list of faces, up to 1,000,000 faces."
    type: "<xref href=\"com.azure.ai.vision.face.models.LargeFaceList?alt=com.azure.ai.vision.face.models.LargeFaceList&text=LargeFaceList\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.getFace(java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.getFace(String persistedFaceId)"
  name: "getFace(String persistedFaceId)"
  nameWithType: "LargeFaceListClient.getFace(String persistedFaceId)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/face-list-operations/get-large-face-list-face for more details."
  parameters:
  - description: "Face ID of the face."
    name: "persistedFaceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LargeFaceListFace getFace(String persistedFaceId)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/get-large-face-list-face for more details."
  returns:
    description: "face resource for large face list."
    type: "<xref href=\"com.azure.ai.vision.face.models.LargeFaceListFace?alt=com.azure.ai.vision.face.models.LargeFaceListFace&text=LargeFaceListFace\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.getFaces()"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.getFaces()"
  name: "getFaces()"
  nameWithType: "LargeFaceListClient.getFaces()"
  summary: "List faces' persisted<wbr>Face<wbr>Id and user<wbr>Data in a specified Large Face List."
  syntax: "public List<LargeFaceListFace> getFaces()"
  desc: "List faces' persistedFaceId and userData in a specified Large Face List. Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/get-large-face-list-faces for more details."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LargeFaceListFace?alt=com.azure.ai.vision.face.models.LargeFaceListFace&text=LargeFaceListFace\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.getFaces(java.lang.String,java.lang.Integer)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.getFaces(String start, Integer top)"
  name: "getFaces(String start, Integer top)"
  nameWithType: "LargeFaceListClient.getFaces(String start, Integer top)"
  summary: "List faces' persisted<wbr>Face<wbr>Id and user<wbr>Data in a specified Large Face List."
  parameters:
  - description: "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty."
    name: "start"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of items to list, ranging in [1, 1000]. Default is 1000."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public List<LargeFaceListFace> getFaces(String start, Integer top)"
  desc: "List faces' persistedFaceId and userData in a specified Large Face List. Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/get-large-face-list-faces for more details."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LargeFaceListFace?alt=com.azure.ai.vision.face.models.LargeFaceListFace&text=LargeFaceListFace\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.getFacesWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.getFacesWithResponse(RequestOptions requestOptions)"
  name: "getFacesWithResponse(RequestOptions requestOptions)"
  nameWithType: "LargeFaceListClient.getFacesWithResponse(RequestOptions requestOptions)"
  summary: "List faces' persisted<wbr>Face<wbr>Id and user<wbr>Data in a specified Large Face List."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getFacesWithResponse(RequestOptions requestOptions)"
  desc: "List faces' persistedFaceId and userData in a specified Large Face List. Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/get-large-face-list-faces for more details.\n\n**Query Parameters**\n\n    | ----- | ------- | -------- | -------------------------------------------------------------------------------------------------- |\n    | Name  | Type    | Required | Description                                                                                        |\n    | start | String  | No       | List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. |\n    | top   | Integer | No       | The number of items to list, ranging in \\[1, 1000\\]. Default is 1000.                              |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         persistedFaceId: String (Required)\n         userData: String (Optional)\n     }\n ]\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.getFaceWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.getFaceWithResponse(String persistedFaceId, RequestOptions requestOptions)"
  name: "getFaceWithResponse(String persistedFaceId, RequestOptions requestOptions)"
  nameWithType: "LargeFaceListClient.getFaceWithResponse(String persistedFaceId, RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/face-list-operations/get-large-face-list-face for more details."
  parameters:
  - description: "Face ID of the face."
    name: "persistedFaceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getFaceWithResponse(String persistedFaceId, RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/get-large-face-list-face for more details.\n\n**Response Body Schema**\n\n```java\n{\n     persistedFaceId: String (Required)\n     userData: String (Optional)\n }\n```"
  returns:
    description: "face resource for large face list along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.getLargeFaceLists()"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.getLargeFaceLists()"
  name: "getLargeFaceLists()"
  nameWithType: "LargeFaceListClient.getLargeFaceLists()"
  summary: "List Large Face Lists' information of large<wbr>Face<wbr>List<wbr>Id, name, user<wbr>Data and recognition<wbr>Model."
  syntax: "public List<LargeFaceList> getLargeFaceLists()"
  desc: "List Large Face Lists' information of largeFaceListId, name, userData and recognitionModel. Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/get-large-face-lists for more details."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LargeFaceList?alt=com.azure.ai.vision.face.models.LargeFaceList&text=LargeFaceList\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.getLargeFaceLists(java.lang.String,java.lang.Integer,java.lang.Boolean)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.getLargeFaceLists(String start, Integer top, Boolean returnRecognitionModel)"
  name: "getLargeFaceLists(String start, Integer top, Boolean returnRecognitionModel)"
  nameWithType: "LargeFaceListClient.getLargeFaceLists(String start, Integer top, Boolean returnRecognitionModel)"
  summary: "List Large Face Lists' information of large<wbr>Face<wbr>List<wbr>Id, name, user<wbr>Data and recognition<wbr>Model."
  parameters:
  - description: "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty."
    name: "start"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of items to list, ranging in [1, 1000]. Default is 1000."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "Return 'recognitionModel' or not. The default value is false."
    name: "returnRecognitionModel"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public List<LargeFaceList> getLargeFaceLists(String start, Integer top, Boolean returnRecognitionModel)"
  desc: "List Large Face Lists' information of largeFaceListId, name, userData and recognitionModel. Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/get-large-face-lists for more details."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LargeFaceList?alt=com.azure.ai.vision.face.models.LargeFaceList&text=LargeFaceList\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.getLargeFaceListsWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.getLargeFaceListsWithResponse(RequestOptions requestOptions)"
  name: "getLargeFaceListsWithResponse(RequestOptions requestOptions)"
  nameWithType: "LargeFaceListClient.getLargeFaceListsWithResponse(RequestOptions requestOptions)"
  summary: "List Large Face Lists' information of large<wbr>Face<wbr>List<wbr>Id, name, user<wbr>Data and recognition<wbr>Model."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getLargeFaceListsWithResponse(RequestOptions requestOptions)"
  desc: "List Large Face Lists' information of largeFaceListId, name, userData and recognitionModel. Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/get-large-face-lists for more details.\n\n**Query Parameters**\n\n    | ---------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------- |\n    | Name                   | Type    | Required | Description                                                                                        |\n    | start                  | String  | No       | List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. |\n    | top                    | Integer | No       | The number of items to list, ranging in \\[1, 1000\\]. Default is 1000.                              |\n    | returnRecognitionModel | Boolean | No       | Return 'recognitionModel' or not. The default value is false.                                      |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         name: String (Required)\n         userData: String (Optional)\n         recognitionModel: String(recognition_01/recognition_02/recognition_03/recognition_04) (Optional)\n         largeFaceListId: String (Required)\n     }\n ]\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.getTrainingStatus()"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.getTrainingStatus()"
  name: "getTrainingStatus()"
  nameWithType: "LargeFaceListClient.getTrainingStatus()"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/face-list-operations/get-large-face-list-training-status for more details."
  syntax: "public FaceTrainingResult getTrainingStatus()"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/get-large-face-list-training-status for more details."
  returns:
    description: "training result of a container."
    type: "<xref href=\"com.azure.ai.vision.face.models.FaceTrainingResult?alt=com.azure.ai.vision.face.models.FaceTrainingResult&text=FaceTrainingResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.getTrainingStatusWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.getTrainingStatusWithResponse(RequestOptions requestOptions)"
  name: "getTrainingStatusWithResponse(RequestOptions requestOptions)"
  nameWithType: "LargeFaceListClient.getTrainingStatusWithResponse(RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/face-list-operations/get-large-face-list-training-status for more details."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getTrainingStatusWithResponse(RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/get-large-face-list-training-status for more details.\n\n**Response Body Schema**\n\n```java\n{\n     status: String(notStarted/running/succeeded/failed) (Required)\n     createdDateTime: OffsetDateTime (Required)\n     lastActionDateTime: OffsetDateTime (Required)\n     lastSuccessfulTrainingDateTime: OffsetDateTime (Required)\n     message: String (Optional)\n }\n```"
  returns:
    description: "training result of a container along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.getWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.getWithResponse(RequestOptions requestOptions)"
  name: "getWithResponse(RequestOptions requestOptions)"
  nameWithType: "LargeFaceListClient.getWithResponse(RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/face-list-operations/get-large-face-list for more details."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getWithResponse(RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/get-large-face-list for more details.\n\n**Query Parameters**\n\n    | ---------------------- | ------- | -------- | ------------------------------------------------------------- |\n    | Name                   | Type    | Required | Description                                                   |\n    | returnRecognitionModel | Boolean | No       | Return 'recognitionModel' or not. The default value is false. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n     userData: String (Optional)\n     recognitionModel: String(recognition_01/recognition_02/recognition_03/recognition_04) (Optional)\n     largeFaceListId: String (Required)\n }\n```"
  returns:
    description: "large face list is a list of faces, up to 1,000,000 faces along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.update()"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.update()"
  name: "update()"
  nameWithType: "LargeFaceListClient.update()"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/face-list-operations/update-large-face-list for more details."
  syntax: "public void update()"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/update-large-face-list for more details."
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.update(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.update(String name, String userData)"
  name: "update(String name, String userData)"
  nameWithType: "LargeFaceListClient.update(String name, String userData)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/face-list-operations/update-large-face-list for more details."
  parameters:
  - description: "User defined name, maximum length is 128."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Optional user defined data. Length should not exceed 16K."
    name: "userData"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void update(String name, String userData)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/update-large-face-list for more details."
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.updateFace(java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.updateFace(String persistedFaceId)"
  name: "updateFace(String persistedFaceId)"
  nameWithType: "LargeFaceListClient.updateFace(String persistedFaceId)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/face-list-operations/update-large-face-list-face for more details."
  parameters:
  - description: "Face ID of the face."
    name: "persistedFaceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void updateFace(String persistedFaceId)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/update-large-face-list-face for more details."
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.updateFace(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.updateFace(String persistedFaceId, String userData)"
  name: "updateFace(String persistedFaceId, String userData)"
  nameWithType: "LargeFaceListClient.updateFace(String persistedFaceId, String userData)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/face-list-operations/update-large-face-list-face for more details."
  parameters:
  - description: "Face ID of the face."
    name: "persistedFaceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "User-provided data attached to the face. The length limit is 1K."
    name: "userData"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void updateFace(String persistedFaceId, String userData)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/update-large-face-list-face for more details."
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.updateFaceWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.updateFaceWithResponse(String persistedFaceId, BinaryData updateFaceRequest1, RequestOptions requestOptions)"
  name: "updateFaceWithResponse(String persistedFaceId, BinaryData updateFaceRequest1, RequestOptions requestOptions)"
  nameWithType: "LargeFaceListClient.updateFaceWithResponse(String persistedFaceId, BinaryData updateFaceRequest1, RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/face-list-operations/update-large-face-list-face for more details."
  parameters:
  - description: "Face ID of the face."
    name: "persistedFaceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The updateFaceRequest1 parameter."
    name: "updateFaceRequest1"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> updateFaceWithResponse(String persistedFaceId, BinaryData updateFaceRequest1, RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/update-large-face-list-face for more details.\n\n**Request Body Schema**\n\n```java\n{\n     userData: String (Optional)\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.administration.LargeFaceListClient.updateWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.administration.LargeFaceListClient.updateWithResponse(BinaryData updateRequest1, RequestOptions requestOptions)"
  name: "updateWithResponse(BinaryData updateRequest1, RequestOptions requestOptions)"
  nameWithType: "LargeFaceListClient.updateWithResponse(BinaryData updateRequest1, RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/face-list-operations/update-large-face-list for more details."
  parameters:
  - description: "The updateRequest1 parameter."
    name: "updateRequest1"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> updateWithResponse(BinaryData updateRequest1, RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/face-list-operations/update-large-face-list for more details.\n\n**Request Body Schema**\n\n```java\n{\n     name: String (Optional)\n     userData: String (Optional)\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
type: "class"
desc: "Initializes a new instance of the synchronous FaceAdministrationClient type."
metadata: {}
package: "com.azure.ai.vision.face.administration"
artifact: com.azure:azure-ai-vision-face:1.0.0-beta.2
