### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.type.TypeFactory.constructMapLikeType*"
fullName: "com.fasterxml.jackson.databind.type.TypeFactory.constructMapLikeType"
name: "constructMapLikeType"
nameWithType: "TypeFactory.constructMapLikeType"
members:
- uid: "com.fasterxml.jackson.databind.type.TypeFactory.constructMapLikeType(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)"
  fullName: "com.fasterxml.jackson.databind.type.TypeFactory.constructMapLikeType(Class<?> mapClass, JavaType keyType, JavaType valueType)"
  name: "constructMapLikeType(Class<?> mapClass, JavaType keyType, JavaType valueType)"
  nameWithType: "TypeFactory.constructMapLikeType(Class<?> mapClass, JavaType keyType, JavaType valueType)"
  summary: "Method for constructing a <xref uid=\"com.fasterxml.jackson.databind.type.MapLikeType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MapLikeType\"></xref> instance\n\nNOTE: type modifiers are NOT called on constructed type itself."
  parameters:
  - name: "mapClass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "keyType"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - name: "valueType"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MapLikeType constructMapLikeType(Class<?> mapClass, JavaType keyType, JavaType valueType)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.type.MapLikeType?alt=com.fasterxml.jackson.databind.type.MapLikeType&text=MapLikeType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.type.TypeFactory.constructMapLikeType(java.lang.Class<?>,java.lang.Class<?>,java.lang.Class<?>)"
  fullName: "com.fasterxml.jackson.databind.type.TypeFactory.constructMapLikeType(Class<?> mapClass, Class<?> keyClass, Class<?> valueClass)"
  name: "constructMapLikeType(Class<?> mapClass, Class<?> keyClass, Class<?> valueClass)"
  nameWithType: "TypeFactory.constructMapLikeType(Class<?> mapClass, Class<?> keyClass, Class<?> valueClass)"
  summary: "Method for constructing a <xref uid=\"com.fasterxml.jackson.databind.type.MapLikeType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MapLikeType\"></xref> instance\n\nNOTE: type modifiers are NOT called on constructed type itself; but are called for contained types."
  parameters:
  - name: "mapClass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "keyClass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "valueClass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public MapLikeType constructMapLikeType(Class<?> mapClass, Class<?> keyClass, Class<?> valueClass)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.type.MapLikeType?alt=com.fasterxml.jackson.databind.type.MapLikeType&text=MapLikeType\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.type"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
