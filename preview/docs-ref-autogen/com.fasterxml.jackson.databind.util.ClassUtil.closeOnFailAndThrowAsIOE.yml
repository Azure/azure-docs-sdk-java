### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE*"
fullName: "com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE"
name: "closeOnFailAndThrowAsIOE"
nameWithType: "ClassUtil.closeOnFailAndThrowAsIOE"
members:
- uid: "com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.io.Closeable,java.lang.Exception)"
  fullName: "com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE(JsonGenerator g, Closeable toClose, Exception fail)"
  name: "closeOnFailAndThrowAsIOE(JsonGenerator g, Closeable toClose, Exception fail)"
  nameWithType: "ClassUtil.closeOnFailAndThrowAsIOE(JsonGenerator g, Closeable toClose, Exception fail)"
  summary: "Helper method that encapsulate logic in trying to close given <xref uid=\"java.io.Closeable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Closeable\"></xref> in case of failure; useful mostly in forcing flush()ing as otherwise error conditions tend to be hard to diagnose. However, it is often the case that output state may be corrupt so we need to be prepared for secondary exception without masking original one."
  parameters:
  - name: "g"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  - name: "toClose"
    type: "<xref href=\"java.io.Closeable?alt=java.io.Closeable&text=Closeable\" data-throw-if-not-resolved=\"False\" />"
  - name: "fail"
    type: "<xref href=\"java.lang.Exception?alt=java.lang.Exception&text=Exception\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void closeOnFailAndThrowAsIOE(JsonGenerator g, Closeable toClose, Exception fail)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)"
  fullName: "com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE(JsonGenerator g, Exception fail)"
  name: "closeOnFailAndThrowAsIOE(JsonGenerator g, Exception fail)"
  nameWithType: "ClassUtil.closeOnFailAndThrowAsIOE(JsonGenerator g, Exception fail)"
  summary: "Helper method that encapsulate logic in trying to close output generator in case of failure; useful mostly in forcing flush()ing as otherwise error conditions tend to be hard to diagnose. However, it is often the case that output state may be corrupt so we need to be prepared for secondary exception without masking original one."
  parameters:
  - name: "g"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  - name: "fail"
    type: "<xref href=\"java.lang.Exception?alt=java.lang.Exception&text=Exception\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void closeOnFailAndThrowAsIOE(JsonGenerator g, Exception fail)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.util"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
