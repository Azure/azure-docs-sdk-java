### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties"
name: "SparkDatasetTypeProperties"
nameWithType: "SparkDatasetTypeProperties"
summary: "Spark Properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SparkDatasetTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties.SparkDatasetTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties.SparkDatasetTypeProperties()"
  name: "SparkDatasetTypeProperties()"
  nameWithType: "SparkDatasetTypeProperties.SparkDatasetTypeProperties()"
  syntax: "public SparkDatasetTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties.schema()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties.schema()"
  name: "schema()"
  nameWithType: "SparkDatasetTypeProperties.schema()"
  summary: "Get the schema property: The schema name of the Spark."
  syntax: "public Object schema()"
  desc: "Get the schema property: The schema name of the Spark. Type: string (or Expression with resultType string)."
  returns:
    description: "the schema value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties.table()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties.table()"
  name: "table()"
  nameWithType: "SparkDatasetTypeProperties.table()"
  summary: "Get the table property: The table name of the Spark."
  syntax: "public Object table()"
  desc: "Get the table property: The table name of the Spark. Type: string (or Expression with resultType string)."
  returns:
    description: "the table value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties.tableName()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties.tableName()"
  name: "tableName()"
  nameWithType: "SparkDatasetTypeProperties.tableName()"
  summary: "Get the table<wbr>Name property: This property will be retired."
  syntax: "public Object tableName()"
  desc: "Get the tableName property: This property will be retired. Please consider using schema + table properties instead."
  returns:
    description: "the tableName value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties.validate()"
  name: "validate()"
  nameWithType: "SparkDatasetTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties.withSchema(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties.withSchema(Object schema)"
  name: "withSchema(Object schema)"
  nameWithType: "SparkDatasetTypeProperties.withSchema(Object schema)"
  summary: "Set the schema property: The schema name of the Spark."
  parameters:
  - description: "the schema value to set."
    name: "schema"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkDatasetTypeProperties withSchema(Object schema)"
  desc: "Set the schema property: The schema name of the Spark. Type: string (or Expression with resultType string)."
  returns:
    description: "the SparkDatasetTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties&text=SparkDatasetTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties.withTable(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties.withTable(Object table)"
  name: "withTable(Object table)"
  nameWithType: "SparkDatasetTypeProperties.withTable(Object table)"
  summary: "Set the table property: The table name of the Spark."
  parameters:
  - description: "the table value to set."
    name: "table"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkDatasetTypeProperties withTable(Object table)"
  desc: "Set the table property: The table name of the Spark. Type: string (or Expression with resultType string)."
  returns:
    description: "the SparkDatasetTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties&text=SparkDatasetTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties.withTableName(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties.withTableName(Object tableName)"
  name: "withTableName(Object tableName)"
  nameWithType: "SparkDatasetTypeProperties.withTableName(Object tableName)"
  summary: "Set the table<wbr>Name property: This property will be retired."
  parameters:
  - description: "the tableName value to set."
    name: "tableName"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkDatasetTypeProperties withTableName(Object tableName)"
  desc: "Set the tableName property: This property will be retired. Please consider using schema + table properties instead."
  returns:
    description: "the SparkDatasetTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.SparkDatasetTypeProperties&text=SparkDatasetTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Spark Properties."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
