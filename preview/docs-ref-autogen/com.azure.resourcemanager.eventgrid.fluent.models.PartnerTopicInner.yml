### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner"
fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner"
name: "PartnerTopicInner"
nameWithType: "PartnerTopicInner"
summary: "Event Grid Partner Topic."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PartnerTopicInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.PartnerTopicInner()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.PartnerTopicInner()"
  name: "PartnerTopicInner()"
  nameWithType: "PartnerTopicInner.PartnerTopicInner()"
  syntax: "public PartnerTopicInner()"
methods:
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.activationState()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.activationState()"
  name: "activationState()"
  nameWithType: "PartnerTopicInner.activationState()"
  summary: "Get the activation<wbr>State property: Activation state of the partner topic."
  syntax: "public PartnerTopicActivationState activationState()"
  desc: "Get the activationState property: Activation state of the partner topic."
  returns:
    description: "the activationState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopicActivationState?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopicActivationState&text=PartnerTopicActivationState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.eventTypeInfo()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.eventTypeInfo()"
  name: "eventTypeInfo()"
  nameWithType: "PartnerTopicInner.eventTypeInfo()"
  summary: "Get the event<wbr>Type<wbr>Info property: Event Type information from the corresponding event channel."
  syntax: "public EventTypeInfo eventTypeInfo()"
  desc: "Get the eventTypeInfo property: Event Type information from the corresponding event channel."
  returns:
    description: "the eventTypeInfo value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.EventTypeInfo?alt=com.azure.resourcemanager.eventgrid.models.EventTypeInfo&text=EventTypeInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.expirationTimeIfNotActivatedUtc()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.expirationTimeIfNotActivatedUtc()"
  name: "expirationTimeIfNotActivatedUtc()"
  nameWithType: "PartnerTopicInner.expirationTimeIfNotActivatedUtc()"
  summary: "Get the expiration<wbr>Time<wbr>IfNot<wbr>Activated<wbr>Utc property: Expiration time of the partner topic."
  syntax: "public OffsetDateTime expirationTimeIfNotActivatedUtc()"
  desc: "Get the expirationTimeIfNotActivatedUtc property: Expiration time of the partner topic. If this timer expires while the partner topic is still never activated, the partner topic and corresponding event channel are deleted."
  returns:
    description: "the expirationTimeIfNotActivatedUtc value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.identity()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.identity()"
  name: "identity()"
  nameWithType: "PartnerTopicInner.identity()"
  summary: "Get the identity property: Identity information for the Partner Topic resource."
  syntax: "public IdentityInfo identity()"
  desc: "Get the identity property: Identity information for the Partner Topic resource."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.IdentityInfo?alt=com.azure.resourcemanager.eventgrid.models.IdentityInfo&text=IdentityInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.messageForActivation()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.messageForActivation()"
  name: "messageForActivation()"
  nameWithType: "PartnerTopicInner.messageForActivation()"
  summary: "Get the message<wbr>For<wbr>Activation property: Context or helpful message that can be used during the approval process by the subscriber."
  syntax: "public String messageForActivation()"
  desc: "Get the messageForActivation property: Context or helpful message that can be used during the approval process by the subscriber."
  returns:
    description: "the messageForActivation value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.partnerRegistrationImmutableId()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.partnerRegistrationImmutableId()"
  name: "partnerRegistrationImmutableId()"
  nameWithType: "PartnerTopicInner.partnerRegistrationImmutableId()"
  summary: "Get the partner<wbr>Registration<wbr>Immutable<wbr>Id property: The immutable<wbr>Id of the corresponding partner registration."
  syntax: "public UUID partnerRegistrationImmutableId()"
  desc: "Get the partnerRegistrationImmutableId property: The immutableId of the corresponding partner registration."
  returns:
    description: "the partnerRegistrationImmutableId value."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.partnerTopicFriendlyDescription()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.partnerTopicFriendlyDescription()"
  name: "partnerTopicFriendlyDescription()"
  nameWithType: "PartnerTopicInner.partnerTopicFriendlyDescription()"
  summary: "Get the partner<wbr>Topic<wbr>Friendly<wbr>Description property: Friendly description about the topic."
  syntax: "public String partnerTopicFriendlyDescription()"
  desc: "Get the partnerTopicFriendlyDescription property: Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic. This will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer."
  returns:
    description: "the partnerTopicFriendlyDescription value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.provisioningState()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "PartnerTopicInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Provisioning state of the partner topic."
  syntax: "public PartnerTopicProvisioningState provisioningState()"
  desc: "Get the provisioningState property: Provisioning state of the partner topic."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopicProvisioningState?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopicProvisioningState&text=PartnerTopicProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.source()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.source()"
  name: "source()"
  nameWithType: "PartnerTopicInner.source()"
  summary: "Get the source property: Source associated with this partner topic."
  syntax: "public String source()"
  desc: "Get the source property: Source associated with this partner topic. This represents a unique partner resource."
  returns:
    description: "the source value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.systemData()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.systemData()"
  name: "systemData()"
  nameWithType: "PartnerTopicInner.systemData()"
  summary: "Get the system<wbr>Data property: The system metadata relating to Partner Topic resource."
  syntax: "public SystemData systemData()"
  desc: "Get the systemData property: The system metadata relating to Partner Topic resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.validate()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.validate()"
  name: "validate()"
  nameWithType: "PartnerTopicInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withActivationState(com.azure.resourcemanager.eventgrid.models.PartnerTopicActivationState)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withActivationState(PartnerTopicActivationState activationState)"
  name: "withActivationState(PartnerTopicActivationState activationState)"
  nameWithType: "PartnerTopicInner.withActivationState(PartnerTopicActivationState activationState)"
  summary: "Set the activation<wbr>State property: Activation state of the partner topic."
  parameters:
  - description: "the activationState value to set."
    name: "activationState"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopicActivationState?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopicActivationState&text=PartnerTopicActivationState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PartnerTopicInner withActivationState(PartnerTopicActivationState activationState)"
  desc: "Set the activationState property: Activation state of the partner topic."
  returns:
    description: "the PartnerTopicInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withEventTypeInfo(com.azure.resourcemanager.eventgrid.models.EventTypeInfo)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withEventTypeInfo(EventTypeInfo eventTypeInfo)"
  name: "withEventTypeInfo(EventTypeInfo eventTypeInfo)"
  nameWithType: "PartnerTopicInner.withEventTypeInfo(EventTypeInfo eventTypeInfo)"
  summary: "Set the event<wbr>Type<wbr>Info property: Event Type information from the corresponding event channel."
  parameters:
  - description: "the eventTypeInfo value to set."
    name: "eventTypeInfo"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.EventTypeInfo?alt=com.azure.resourcemanager.eventgrid.models.EventTypeInfo&text=EventTypeInfo\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PartnerTopicInner withEventTypeInfo(EventTypeInfo eventTypeInfo)"
  desc: "Set the eventTypeInfo property: Event Type information from the corresponding event channel."
  returns:
    description: "the PartnerTopicInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withExpirationTimeIfNotActivatedUtc(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withExpirationTimeIfNotActivatedUtc(OffsetDateTime expirationTimeIfNotActivatedUtc)"
  name: "withExpirationTimeIfNotActivatedUtc(OffsetDateTime expirationTimeIfNotActivatedUtc)"
  nameWithType: "PartnerTopicInner.withExpirationTimeIfNotActivatedUtc(OffsetDateTime expirationTimeIfNotActivatedUtc)"
  summary: "Set the expiration<wbr>Time<wbr>IfNot<wbr>Activated<wbr>Utc property: Expiration time of the partner topic."
  parameters:
  - description: "the expirationTimeIfNotActivatedUtc value to set."
    name: "expirationTimeIfNotActivatedUtc"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PartnerTopicInner withExpirationTimeIfNotActivatedUtc(OffsetDateTime expirationTimeIfNotActivatedUtc)"
  desc: "Set the expirationTimeIfNotActivatedUtc property: Expiration time of the partner topic. If this timer expires while the partner topic is still never activated, the partner topic and corresponding event channel are deleted."
  returns:
    description: "the PartnerTopicInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withIdentity(com.azure.resourcemanager.eventgrid.models.IdentityInfo)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withIdentity(IdentityInfo identity)"
  name: "withIdentity(IdentityInfo identity)"
  nameWithType: "PartnerTopicInner.withIdentity(IdentityInfo identity)"
  summary: "Set the identity property: Identity information for the Partner Topic resource."
  parameters:
  - description: "the identity value to set."
    name: "identity"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.IdentityInfo?alt=com.azure.resourcemanager.eventgrid.models.IdentityInfo&text=IdentityInfo\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PartnerTopicInner withIdentity(IdentityInfo identity)"
  desc: "Set the identity property: Identity information for the Partner Topic resource."
  returns:
    description: "the PartnerTopicInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "PartnerTopicInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PartnerTopicInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withMessageForActivation(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withMessageForActivation(String messageForActivation)"
  name: "withMessageForActivation(String messageForActivation)"
  nameWithType: "PartnerTopicInner.withMessageForActivation(String messageForActivation)"
  summary: "Set the message<wbr>For<wbr>Activation property: Context or helpful message that can be used during the approval process by the subscriber."
  parameters:
  - description: "the messageForActivation value to set."
    name: "messageForActivation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PartnerTopicInner withMessageForActivation(String messageForActivation)"
  desc: "Set the messageForActivation property: Context or helpful message that can be used during the approval process by the subscriber."
  returns:
    description: "the PartnerTopicInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withPartnerRegistrationImmutableId(java.util.UUID)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withPartnerRegistrationImmutableId(UUID partnerRegistrationImmutableId)"
  name: "withPartnerRegistrationImmutableId(UUID partnerRegistrationImmutableId)"
  nameWithType: "PartnerTopicInner.withPartnerRegistrationImmutableId(UUID partnerRegistrationImmutableId)"
  summary: "Set the partner<wbr>Registration<wbr>Immutable<wbr>Id property: The immutable<wbr>Id of the corresponding partner registration."
  parameters:
  - description: "the partnerRegistrationImmutableId value to set."
    name: "partnerRegistrationImmutableId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PartnerTopicInner withPartnerRegistrationImmutableId(UUID partnerRegistrationImmutableId)"
  desc: "Set the partnerRegistrationImmutableId property: The immutableId of the corresponding partner registration."
  returns:
    description: "the PartnerTopicInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withPartnerTopicFriendlyDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withPartnerTopicFriendlyDescription(String partnerTopicFriendlyDescription)"
  name: "withPartnerTopicFriendlyDescription(String partnerTopicFriendlyDescription)"
  nameWithType: "PartnerTopicInner.withPartnerTopicFriendlyDescription(String partnerTopicFriendlyDescription)"
  summary: "Set the partner<wbr>Topic<wbr>Friendly<wbr>Description property: Friendly description about the topic."
  parameters:
  - description: "the partnerTopicFriendlyDescription value to set."
    name: "partnerTopicFriendlyDescription"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PartnerTopicInner withPartnerTopicFriendlyDescription(String partnerTopicFriendlyDescription)"
  desc: "Set the partnerTopicFriendlyDescription property: Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic. This will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer."
  returns:
    description: "the PartnerTopicInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withSource(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withSource(String source)"
  name: "withSource(String source)"
  nameWithType: "PartnerTopicInner.withSource(String source)"
  summary: "Set the source property: Source associated with this partner topic."
  parameters:
  - description: "the source value to set."
    name: "source"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PartnerTopicInner withSource(String source)"
  desc: "Set the source property: Source associated with this partner topic. This represents a unique partner resource."
  returns:
    description: "the PartnerTopicInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "PartnerTopicInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PartnerTopicInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Event Grid Partner Topic."
metadata: {}
package: "com.azure.resourcemanager.eventgrid.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.2.0-beta.3
