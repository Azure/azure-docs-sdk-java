### YamlMime:JavaType
uid: "org.apache.commons.codec.digest.HmacUtils"
fullName: "org.apache.commons.codec.digest.HmacUtils"
name: "HmacUtils"
nameWithType: "HmacUtils"
summary: "Simplifies common <xref uid=\"javax.crypto.Mac\" data-throw-if-not-resolved=\"false\" data-raw-source=\"javax.crypto.Mac\"></xref> tasks. This class is immutable and thread-safe. However the Mac may not be.\n\n**Note: Not all JCE implementations support all algorithms. If not supported, an IllegalArgumentException is thrown.**\n\nSample usage:\n\n```java\nimport static HmacAlgorithms.*;\n byte[] key = {1,2,3,4}; // don't use this actual key!\n String valueToDigest = \"The quick brown fox jumps over the lazy dog\";\n byte[] hmac = new HmacUtils(HMAC_SHA_224, key).hmac(valueToDigest);\n // Mac re-use\n HmacUtils hm1 = new HmacUtils(\"HmacAlgoName\", key); // use a valid name here!\n String hexPom = hm1.hmacHex(new File(\"pom.xml\"));\n String hexNot = hm1.hmacHex(new File(\"NOTICE.txt\"));\n```"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class HmacUtils"
constructors:
- "org.apache.commons.codec.digest.HmacUtils.HmacUtils()"
- "org.apache.commons.codec.digest.HmacUtils.HmacUtils(java.lang.String,byte[])"
- "org.apache.commons.codec.digest.HmacUtils.HmacUtils(java.lang.String,java.lang.String)"
- "org.apache.commons.codec.digest.HmacUtils.HmacUtils(org.apache.commons.codec.digest.HmacAlgorithms,byte[])"
- "org.apache.commons.codec.digest.HmacUtils.HmacUtils(org.apache.commons.codec.digest.HmacAlgorithms,java.lang.String)"
methods:
- "org.apache.commons.codec.digest.HmacUtils.getHmacMd5(byte[])"
- "org.apache.commons.codec.digest.HmacUtils.getHmacSha1(byte[])"
- "org.apache.commons.codec.digest.HmacUtils.getHmacSha256(byte[])"
- "org.apache.commons.codec.digest.HmacUtils.getHmacSha384(byte[])"
- "org.apache.commons.codec.digest.HmacUtils.getHmacSha512(byte[])"
- "org.apache.commons.codec.digest.HmacUtils.getInitializedMac(java.lang.String,byte[])"
- "org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms,byte[])"
- "org.apache.commons.codec.digest.HmacUtils.hmac(byte[])"
- "org.apache.commons.codec.digest.HmacUtils.hmac(java.io.File)"
- "org.apache.commons.codec.digest.HmacUtils.hmac(java.io.InputStream)"
- "org.apache.commons.codec.digest.HmacUtils.hmac(java.lang.String)"
- "org.apache.commons.codec.digest.HmacUtils.hmac(java.nio.ByteBuffer)"
- "org.apache.commons.codec.digest.HmacUtils.hmacHex(byte[])"
- "org.apache.commons.codec.digest.HmacUtils.hmacHex(java.io.File)"
- "org.apache.commons.codec.digest.HmacUtils.hmacHex(java.io.InputStream)"
- "org.apache.commons.codec.digest.HmacUtils.hmacHex(java.lang.String)"
- "org.apache.commons.codec.digest.HmacUtils.hmacHex(java.nio.ByteBuffer)"
- "org.apache.commons.codec.digest.HmacUtils.hmacMd5(byte[],byte[])"
- "org.apache.commons.codec.digest.HmacUtils.hmacMd5(byte[],java.io.InputStream)"
- "org.apache.commons.codec.digest.HmacUtils.hmacMd5(java.lang.String,java.lang.String)"
- "org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(byte[],byte[])"
- "org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(byte[],java.io.InputStream)"
- "org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(java.lang.String,java.lang.String)"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha1(byte[],byte[])"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha1(byte[],java.io.InputStream)"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha1(java.lang.String,java.lang.String)"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(byte[],byte[])"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(byte[],java.io.InputStream)"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(java.lang.String,java.lang.String)"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha256(byte[],byte[])"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha256(byte[],java.io.InputStream)"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha256(java.lang.String,java.lang.String)"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex(byte[],byte[])"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex(byte[],java.io.InputStream)"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex(java.lang.String,java.lang.String)"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha384(byte[],byte[])"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha384(byte[],java.io.InputStream)"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha384(java.lang.String,java.lang.String)"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex(byte[],byte[])"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex(byte[],java.io.InputStream)"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex(java.lang.String,java.lang.String)"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha512(byte[],byte[])"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha512(byte[],java.io.InputStream)"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha512(java.lang.String,java.lang.String)"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(byte[],byte[])"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(byte[],java.io.InputStream)"
- "org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(java.lang.String,java.lang.String)"
- "org.apache.commons.codec.digest.HmacUtils.isAvailable(java.lang.String)"
- "org.apache.commons.codec.digest.HmacUtils.isAvailable(org.apache.commons.codec.digest.HmacAlgorithms)"
- "org.apache.commons.codec.digest.HmacUtils.updateHmac(javax.crypto.Mac,byte[])"
- "org.apache.commons.codec.digest.HmacUtils.updateHmac(javax.crypto.Mac,java.io.InputStream)"
- "org.apache.commons.codec.digest.HmacUtils.updateHmac(javax.crypto.Mac,java.lang.String)"
type: "class"
metadata: {}
package: "org.apache.commons.codec.digest"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
