### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.module.SimpleSerializers"
fullName: "com.fasterxml.jackson.databind.module.SimpleSerializers"
name: "SimpleSerializers"
nameWithType: "SimpleSerializers"
summary: "Simple implementation <xref uid=\"com.fasterxml.jackson.databind.ser.Serializers\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Serializers\"></xref> which allows registration of serializers based on raw (type erased class). It can work well for basic bean and scalar type serializers, but is not a good fit for handling generic types (like <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref>s and <xref uid=\"java.util.Collection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Collection\"></xref>s).\n\nType registrations are assumed to be general; meaning that registration of serializer for a super type will also be used for handling subtypes, unless an exact match is found first. As an example, handler for <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CharSequence\"></xref> would also be used serializing <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StringBuilder\"></xref> instances, unless a direct mapping was found."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.ser.Serializers.Base\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.databind.ser.Serializers.Base.findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.Serializers.Base.findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.Serializers.Base.findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.Serializers.Base.findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.Serializers.Base.findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.Serializers.Base.findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.Serializers.Base.findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class SimpleSerializers extends Serializers.Base implements Serializable"
constructors:
- "com.fasterxml.jackson.databind.module.SimpleSerializers.SimpleSerializers()"
- "com.fasterxml.jackson.databind.module.SimpleSerializers.SimpleSerializers(java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>)"
fields:
- "com.fasterxml.jackson.databind.module.SimpleSerializers._classMappings"
- "com.fasterxml.jackson.databind.module.SimpleSerializers._hasEnumSerializer"
- "com.fasterxml.jackson.databind.module.SimpleSerializers._interfaceMappings"
methods:
- "com.fasterxml.jackson.databind.module.SimpleSerializers.<T>addSerializer(java.lang.Class<? extends T>,com.fasterxml.jackson.databind.JsonSerializer<T>)"
- "com.fasterxml.jackson.databind.module.SimpleSerializers._addSerializer(java.lang.Class<?>,com.fasterxml.jackson.databind.JsonSerializer<?>)"
- "com.fasterxml.jackson.databind.module.SimpleSerializers._findInterfaceMapping(java.lang.Class<?>,com.fasterxml.jackson.databind.type.ClassKey)"
- "com.fasterxml.jackson.databind.module.SimpleSerializers.addSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)"
- "com.fasterxml.jackson.databind.module.SimpleSerializers.addSerializers(java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>)"
- "com.fasterxml.jackson.databind.module.SimpleSerializers.findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.module.SimpleSerializers.findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.module.SimpleSerializers.findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.module.SimpleSerializers.findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.module.SimpleSerializers.findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.module.SimpleSerializers.findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)"
type: "class"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.module"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
