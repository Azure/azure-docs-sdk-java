### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers
  id: SimpleSerializers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module
  children:
  - com.fasterxml.jackson.databind.module.SimpleSerializers.<T>addSerializer(java.lang.Class<? extends T>,com.fasterxml.jackson.databind.JsonSerializer<T>)
  - com.fasterxml.jackson.databind.module.SimpleSerializers.SimpleSerializers()
  - com.fasterxml.jackson.databind.module.SimpleSerializers.SimpleSerializers(java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>)
  - com.fasterxml.jackson.databind.module.SimpleSerializers._addSerializer(java.lang.Class<?>,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.module.SimpleSerializers._classMappings
  - com.fasterxml.jackson.databind.module.SimpleSerializers._findInterfaceMapping(java.lang.Class<?>,com.fasterxml.jackson.databind.type.ClassKey)
  - com.fasterxml.jackson.databind.module.SimpleSerializers._hasEnumSerializer
  - com.fasterxml.jackson.databind.module.SimpleSerializers._interfaceMappings
  - com.fasterxml.jackson.databind.module.SimpleSerializers.addSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.module.SimpleSerializers.addSerializers(java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>)
  - com.fasterxml.jackson.databind.module.SimpleSerializers.findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.module.SimpleSerializers.findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.module.SimpleSerializers.findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.module.SimpleSerializers.findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.module.SimpleSerializers.findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.module.SimpleSerializers.findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  langs:
  - java
  name: SimpleSerializers
  nameWithType: SimpleSerializers
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers
  type: Class
  package: com.fasterxml.jackson.databind.module
  summary: >-
    Simple implementation <xref uid="com.fasterxml.jackson.databind.ser.Serializers" data-throw-if-not-resolved="false">Serializers</xref> which allows registration of serializers based on raw (type erased class). It can work well for basic bean and scalar type serializers, but is not a good fit for handling generic types (like <xref uid="java.util.Map" data-throw-if-not-resolved="false">Map</xref>s and <xref uid="java.util.Collection" data-throw-if-not-resolved="false">Collection</xref>s).


    Type registrations are assumed to be general; meaning that registration of serializer for a super type will also be used for handling subtypes, unless an exact match is found first. As an example, handler for <xref uid="" data-throw-if-not-resolved="false">CharSequence</xref> would also be used serializing <xref uid="" data-throw-if-not-resolved="false">StringBuilder</xref> instances, unless a direct mapping was found.
  syntax:
    content: public class SimpleSerializers extends Serializers.Base implements Serializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.ser.Serializers.Base
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.ser.Serializers.Base.findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.Serializers.Base.findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.Serializers.Base.findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.Serializers.Base.findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.Serializers.Base.findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.Serializers.Base.findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.Serializers.Base.findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.<T>addSerializer(java.lang.Class<? extends T>,com.fasterxml.jackson.databind.JsonSerializer<T>)
  id: <T>addSerializer(java.lang.Class<? extends T>,com.fasterxml.jackson.databind.JsonSerializer<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleSerializers
  langs:
  - java
  name: <T>addSerializer(Class<? extends T> type, JsonSerializer<T> ser)
  nameWithType: SimpleSerializers.<T>addSerializer(Class<? extends T> type, JsonSerializer<T> ser)
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.<T>addSerializer(Class<? extends T> type, JsonSerializer<T> ser)
  overload: com.fasterxml.jackson.databind.module.SimpleSerializers.addSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: public void <T>addSerializer(Class<? extends T> type, JsonSerializer<T> ser)
    parameters:
    - id: type
      type: java.lang.Class<? extends T>
    - id: ser
      type: com.fasterxml.jackson.databind.JsonSerializer<T>
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.SimpleSerializers()
  id: SimpleSerializers()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleSerializers
  langs:
  - java
  name: SimpleSerializers()
  nameWithType: SimpleSerializers.SimpleSerializers()
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.SimpleSerializers()
  overload: com.fasterxml.jackson.databind.module.SimpleSerializers.SimpleSerializers*
  type: Constructor
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: public SimpleSerializers()
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.SimpleSerializers(java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>)
  id: SimpleSerializers(java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleSerializers
  langs:
  - java
  name: SimpleSerializers(List<JsonSerializer<?>> sers)
  nameWithType: SimpleSerializers.SimpleSerializers(List<JsonSerializer<?>> sers)
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.SimpleSerializers(List<JsonSerializer<?>> sers)
  overload: com.fasterxml.jackson.databind.module.SimpleSerializers.SimpleSerializers*
  type: Constructor
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: public SimpleSerializers(List<JsonSerializer<?>> sers)
    parameters:
    - id: sers
      type: java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers._addSerializer(java.lang.Class<?>,com.fasterxml.jackson.databind.JsonSerializer<?>)
  id: _addSerializer(java.lang.Class<?>,com.fasterxml.jackson.databind.JsonSerializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleSerializers
  langs:
  - java
  name: _addSerializer(Class<?> cls, JsonSerializer<?> ser)
  nameWithType: SimpleSerializers._addSerializer(Class<?> cls, JsonSerializer<?> ser)
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers._addSerializer(Class<?> cls, JsonSerializer<?> ser)
  overload: com.fasterxml.jackson.databind.module.SimpleSerializers._addSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: protected void _addSerializer(Class<?> cls, JsonSerializer<?> ser)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    - id: ser
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers._classMappings
  id: _classMappings
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleSerializers
  langs:
  - java
  name: _classMappings
  nameWithType: SimpleSerializers._classMappings
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers._classMappings
  type: Field
  package: com.fasterxml.jackson.databind.module
  summary: Class-based mappings that are used both for exact and sub-class matches.
  syntax:
    content: protected HashMap<ClassKey,JsonSerializer<?>> _classMappings
    return:
      type: java.util.HashMap<com.fasterxml.jackson.databind.type.ClassKey,com.fasterxml.jackson.databind.JsonSerializer<?>>
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers._findInterfaceMapping(java.lang.Class<?>,com.fasterxml.jackson.databind.type.ClassKey)
  id: _findInterfaceMapping(java.lang.Class<?>,com.fasterxml.jackson.databind.type.ClassKey)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleSerializers
  langs:
  - java
  name: _findInterfaceMapping(Class<?> cls, ClassKey key)
  nameWithType: SimpleSerializers._findInterfaceMapping(Class<?> cls, ClassKey key)
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers._findInterfaceMapping(Class<?> cls, ClassKey key)
  overload: com.fasterxml.jackson.databind.module.SimpleSerializers._findInterfaceMapping*
  type: Method
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: protected JsonSerializer<?> _findInterfaceMapping(Class<?> cls, ClassKey key)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    - id: key
      type: com.fasterxml.jackson.databind.type.ClassKey
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers._hasEnumSerializer
  id: _hasEnumSerializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleSerializers
  langs:
  - java
  name: _hasEnumSerializer
  nameWithType: SimpleSerializers._hasEnumSerializer
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers._hasEnumSerializer
  type: Field
  package: com.fasterxml.jackson.databind.module
  summary: Flag to help find "generic" enum serializer, if one has been registered.
  syntax:
    content: protected boolean _hasEnumSerializer
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers._interfaceMappings
  id: _interfaceMappings
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleSerializers
  langs:
  - java
  name: _interfaceMappings
  nameWithType: SimpleSerializers._interfaceMappings
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers._interfaceMappings
  type: Field
  package: com.fasterxml.jackson.databind.module
  summary: Interface-based matches.
  syntax:
    content: protected HashMap<ClassKey,JsonSerializer<?>> _interfaceMappings
    return:
      type: java.util.HashMap<com.fasterxml.jackson.databind.type.ClassKey,com.fasterxml.jackson.databind.JsonSerializer<?>>
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.addSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  id: addSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleSerializers
  langs:
  - java
  name: addSerializer(JsonSerializer<?> ser)
  nameWithType: SimpleSerializers.addSerializer(JsonSerializer<?> ser)
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.addSerializer(JsonSerializer<?> ser)
  overload: com.fasterxml.jackson.databind.module.SimpleSerializers.addSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Method for adding given serializer for type that <xref uid="com.fasterxml.jackson.databind.JsonSerializer.handledType" data-throw-if-not-resolved="false">JsonSerializer#handledType</xref> specifies (which MUST return a non-null class; and can NOT be <xref uid="java.lang.Object" data-throw-if-not-resolved="false">Object</xref>, as a sanity check). For serializers that do not declare handled type, use the variant that takes two arguments.
  syntax:
    content: public void addSerializer(JsonSerializer<?> ser)
    parameters:
    - id: ser
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.addSerializers(java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>)
  id: addSerializers(java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleSerializers
  langs:
  - java
  name: addSerializers(List<JsonSerializer<?>> sers)
  nameWithType: SimpleSerializers.addSerializers(List<JsonSerializer<?>> sers)
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.addSerializers(List<JsonSerializer<?>> sers)
  overload: com.fasterxml.jackson.databind.module.SimpleSerializers.addSerializers*
  type: Method
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: public void addSerializers(List<JsonSerializer<?>> sers)
    parameters:
    - id: sers
      type: java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  id: findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleSerializers
  langs:
  - java
  name: findArraySerializer(SerializationConfig config, ArrayType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  nameWithType: SimpleSerializers.findArraySerializer(SerializationConfig config, ArrayType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.findArraySerializer(SerializationConfig config, ArrayType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  overload: com.fasterxml.jackson.databind.module.SimpleSerializers.findArraySerializer*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Method called by serialization framework first time a serializer is needed for specified array type. Implementation should return a serializer instance if it supports specified type; or null if it does not.
  syntax:
    content: public JsonSerializer<?> findArraySerializer(SerializationConfig config, ArrayType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.type.ArrayType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: elementTypeSerializer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    - id: elementValueSerializer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  id: findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleSerializers
  langs:
  - java
  name: findCollectionLikeSerializer(SerializationConfig config, CollectionLikeType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  nameWithType: SimpleSerializers.findCollectionLikeSerializer(SerializationConfig config, CollectionLikeType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.findCollectionLikeSerializer(SerializationConfig config, CollectionLikeType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  overload: com.fasterxml.jackson.databind.module.SimpleSerializers.findCollectionLikeSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Method called by serialization framework first time a serializer is needed for specified "Collection-like" type (type that acts like <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref>, but does not implement it). Implementation should return a serializer instance if it supports specified type; or null if it does not.
  syntax:
    content: public JsonSerializer<?> findCollectionLikeSerializer(SerializationConfig config, CollectionLikeType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.type.CollectionLikeType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: elementTypeSerializer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    - id: elementValueSerializer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  id: findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleSerializers
  langs:
  - java
  name: findCollectionSerializer(SerializationConfig config, CollectionType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  nameWithType: SimpleSerializers.findCollectionSerializer(SerializationConfig config, CollectionType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.findCollectionSerializer(SerializationConfig config, CollectionType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  overload: com.fasterxml.jackson.databind.module.SimpleSerializers.findCollectionSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Method called by serialization framework first time a serializer is needed for specified <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> type. Implementation should return a serializer instance if it supports specified type; or null if it does not.
  syntax:
    content: public JsonSerializer<?> findCollectionSerializer(SerializationConfig config, CollectionType type, BeanDescription beanDesc, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.type.CollectionType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: elementTypeSerializer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    - id: elementValueSerializer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  id: findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleSerializers
  langs:
  - java
  name: findMapLikeSerializer(SerializationConfig config, MapLikeType type, BeanDescription beanDesc, JsonSerializer<Object> keySerializer, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  nameWithType: SimpleSerializers.findMapLikeSerializer(SerializationConfig config, MapLikeType type, BeanDescription beanDesc, JsonSerializer<Object> keySerializer, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.findMapLikeSerializer(SerializationConfig config, MapLikeType type, BeanDescription beanDesc, JsonSerializer<Object> keySerializer, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  overload: com.fasterxml.jackson.databind.module.SimpleSerializers.findMapLikeSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Method called by serialization framework first time a serializer is needed for specified "Map-like" type (type that acts like <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>, but does not implement it). Implementation should return a serializer instance if it supports specified type; or null if it does not.
  syntax:
    content: public JsonSerializer<?> findMapLikeSerializer(SerializationConfig config, MapLikeType type, BeanDescription beanDesc, JsonSerializer<Object> keySerializer, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.type.MapLikeType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: keySerializer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    - id: elementTypeSerializer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    - id: elementValueSerializer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  id: findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleSerializers
  langs:
  - java
  name: findMapSerializer(SerializationConfig config, MapType type, BeanDescription beanDesc, JsonSerializer<Object> keySerializer, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  nameWithType: SimpleSerializers.findMapSerializer(SerializationConfig config, MapType type, BeanDescription beanDesc, JsonSerializer<Object> keySerializer, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.findMapSerializer(SerializationConfig config, MapType type, BeanDescription beanDesc, JsonSerializer<Object> keySerializer, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
  overload: com.fasterxml.jackson.databind.module.SimpleSerializers.findMapSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Method called by serialization framework first time a serializer is needed for specified <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> type. Implementation should return a serializer instance if it supports specified type; or null if it does not.
  syntax:
    content: public JsonSerializer<?> findMapSerializer(SerializationConfig config, MapType type, BeanDescription beanDesc, JsonSerializer<Object> keySerializer, TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.type.MapType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: keySerializer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    - id: elementTypeSerializer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    - id: elementValueSerializer
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  id: findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleSerializers
  langs:
  - java
  name: findSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc)
  nameWithType: SimpleSerializers.findSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.findSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.module.SimpleSerializers.findSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Method called by serialization framework first time a serializer is needed for specified type, which is not of a container or reference type (for which other methods are called).
  syntax:
    content: public JsonSerializer<?> findSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
references:
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.SimpleSerializers*
  name: SimpleSerializers
  nameWithType: SimpleSerializers.SimpleSerializers
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.SimpleSerializers
  package: com.fasterxml.jackson.databind.module
- uid: java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.JsonSerializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.addSerializer*
  name: addSerializer
  nameWithType: SimpleSerializers.addSerializer
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.addSerializer
  package: com.fasterxml.jackson.databind.module
- uid: java.lang.Class<? extends T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '? extends T'
    name: '? extends T'
    fullName: '? extends T'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.JsonSerializer<T>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.addSerializers*
  name: addSerializers
  nameWithType: SimpleSerializers.addSerializers
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.addSerializers
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.SerializationConfig
  name: SerializationConfig
  nameWithType: SerializationConfig
  fullName: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.BeanDescription
  name: BeanDescription
  nameWithType: BeanDescription
  fullName: com.fasterxml.jackson.databind.BeanDescription
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.findSerializer*
  name: findSerializer
  nameWithType: SimpleSerializers.findSerializer
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.findSerializer
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.type.ArrayType
  name: ArrayType
  nameWithType: ArrayType
  fullName: com.fasterxml.jackson.databind.type.ArrayType
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.findArraySerializer*
  name: findArraySerializer
  nameWithType: SimpleSerializers.findArraySerializer
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.findArraySerializer
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.type.CollectionType
  name: CollectionType
  nameWithType: CollectionType
  fullName: com.fasterxml.jackson.databind.type.CollectionType
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.findCollectionSerializer*
  name: findCollectionSerializer
  nameWithType: SimpleSerializers.findCollectionSerializer
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.findCollectionSerializer
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.type.CollectionLikeType
  name: CollectionLikeType
  nameWithType: CollectionLikeType
  fullName: com.fasterxml.jackson.databind.type.CollectionLikeType
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.findCollectionLikeSerializer*
  name: findCollectionLikeSerializer
  nameWithType: SimpleSerializers.findCollectionLikeSerializer
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.findCollectionLikeSerializer
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.type.MapType
  name: MapType
  nameWithType: MapType
  fullName: com.fasterxml.jackson.databind.type.MapType
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.findMapSerializer*
  name: findMapSerializer
  nameWithType: SimpleSerializers.findMapSerializer
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.findMapSerializer
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.type.MapLikeType
  name: MapLikeType
  nameWithType: MapLikeType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers.findMapLikeSerializer*
  name: findMapLikeSerializer
  nameWithType: SimpleSerializers.findMapLikeSerializer
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers.findMapLikeSerializer
  package: com.fasterxml.jackson.databind.module
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.type.ClassKey
  name: ClassKey
  nameWithType: ClassKey
  fullName: com.fasterxml.jackson.databind.type.ClassKey
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers._findInterfaceMapping*
  name: _findInterfaceMapping
  nameWithType: SimpleSerializers._findInterfaceMapping
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers._findInterfaceMapping
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers._addSerializer*
  name: _addSerializer
  nameWithType: SimpleSerializers._addSerializer
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers._addSerializer
  package: com.fasterxml.jackson.databind.module
- uid: java.util.HashMap<com.fasterxml.jackson.databind.type.ClassKey,com.fasterxml.jackson.databind.JsonSerializer<?>>
  spec.java:
  - uid: java.util.HashMap
    name: HashMap
    fullName: java.util.HashMap
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.type.ClassKey
    name: ClassKey
    fullName: com.fasterxml.jackson.databind.type.ClassKey
  - name: ','
    fullName: ','
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.ser.Serializers.Base
  name: Serializers.Base
  nameWithType: Serializers.Base
  fullName: com.fasterxml.jackson.databind.ser.Serializers.Base
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.ser.Serializers.Base.findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  name: Serializers.Base.findCollectionSerializer(SerializationConfig,CollectionType,BeanDescription,TypeSerializer,JsonSerializer<Object>)
  nameWithType: Serializers.Base.findCollectionSerializer(SerializationConfig,CollectionType,BeanDescription,TypeSerializer,JsonSerializer<Object>)
  fullName: com.fasterxml.jackson.databind.ser.Serializers.Base.findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.ser.Serializers.Base.findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  name: Serializers.Base.findArraySerializer(SerializationConfig,ArrayType,BeanDescription,TypeSerializer,JsonSerializer<Object>)
  nameWithType: Serializers.Base.findArraySerializer(SerializationConfig,ArrayType,BeanDescription,TypeSerializer,JsonSerializer<Object>)
  fullName: com.fasterxml.jackson.databind.ser.Serializers.Base.findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.Serializers.Base.findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
  name: Serializers.Base.findSerializer(SerializationConfig,JavaType,BeanDescription)
  nameWithType: Serializers.Base.findSerializer(SerializationConfig,JavaType,BeanDescription)
  fullName: com.fasterxml.jackson.databind.ser.Serializers.Base.findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
- uid: com.fasterxml.jackson.databind.ser.Serializers.Base.findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  name: Serializers.Base.findCollectionLikeSerializer(SerializationConfig,CollectionLikeType,BeanDescription,TypeSerializer,JsonSerializer<Object>)
  nameWithType: Serializers.Base.findCollectionLikeSerializer(SerializationConfig,CollectionLikeType,BeanDescription,TypeSerializer,JsonSerializer<Object>)
  fullName: com.fasterxml.jackson.databind.ser.Serializers.Base.findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.ser.Serializers.Base.findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  name: Serializers.Base.findMapLikeSerializer(SerializationConfig,MapLikeType,BeanDescription,JsonSerializer<Object>,TypeSerializer,JsonSerializer<Object>)
  nameWithType: Serializers.Base.findMapLikeSerializer(SerializationConfig,MapLikeType,BeanDescription,JsonSerializer<Object>,TypeSerializer,JsonSerializer<Object>)
  fullName: com.fasterxml.jackson.databind.ser.Serializers.Base.findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.fasterxml.jackson.databind.ser.Serializers.Base.findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  name: Serializers.Base.findReferenceSerializer(SerializationConfig,ReferenceType,BeanDescription,TypeSerializer,JsonSerializer<Object>)
  nameWithType: Serializers.Base.findReferenceSerializer(SerializationConfig,ReferenceType,BeanDescription,TypeSerializer,JsonSerializer<Object>)
  fullName: com.fasterxml.jackson.databind.ser.Serializers.Base.findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.ser.Serializers.Base.findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  name: Serializers.Base.findMapSerializer(SerializationConfig,MapType,BeanDescription,JsonSerializer<Object>,TypeSerializer,JsonSerializer<Object>)
  nameWithType: Serializers.Base.findMapSerializer(SerializationConfig,MapType,BeanDescription,JsonSerializer<Object>,TypeSerializer,JsonSerializer<Object>)
  fullName: com.fasterxml.jackson.databind.ser.Serializers.Base.findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: '? extends T'
  name: '? extends T'
  nameWithType: '? extends T'
  fullName: '? extends T'
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: java.lang.Object
  name: Object
  nameWithType: Object
  fullName: java.lang.Object
- uid: java.util.HashMap
  name: HashMap
  nameWithType: HashMap
  fullName: java.util.HashMap
- uid: com.fasterxml.jackson.databind.type.ClassKey,com.fasterxml.jackson.databind.JsonSerializer
  name: ClassKey,JsonSerializer
  nameWithType: ClassKey,JsonSerializer
  fullName: com.fasterxml.jackson.databind.type.ClassKey,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.Serializers.Base.findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
  name: Serializers.Base.findCollectionSerializer(SerializationConfig,CollectionType,BeanDescription,TypeSerializer,JsonSerializer
  nameWithType: Serializers.Base.findCollectionSerializer(SerializationConfig,CollectionType,BeanDescription,TypeSerializer,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.Serializers.Base.findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
- uid: java.lang.Object>)
  name: Object>)
  nameWithType: Object>)
  fullName: java.lang.Object>)
- uid: com.fasterxml.jackson.databind.ser.Serializers.Base.findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
  name: Serializers.Base.findArraySerializer(SerializationConfig,ArrayType,BeanDescription,TypeSerializer,JsonSerializer
  nameWithType: Serializers.Base.findArraySerializer(SerializationConfig,ArrayType,BeanDescription,TypeSerializer,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.Serializers.Base.findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.Serializers.Base.findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
  name: Serializers.Base.findCollectionLikeSerializer(SerializationConfig,CollectionLikeType,BeanDescription,TypeSerializer,JsonSerializer
  nameWithType: Serializers.Base.findCollectionLikeSerializer(SerializationConfig,CollectionLikeType,BeanDescription,TypeSerializer,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.Serializers.Base.findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
- uid: java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
  name: Object>,TypeSerializer,JsonSerializer
  nameWithType: Object>,TypeSerializer,JsonSerializer
  fullName: java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.Serializers.Base.findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer
  name: Serializers.Base.findMapLikeSerializer(SerializationConfig,MapLikeType,BeanDescription,JsonSerializer
  nameWithType: Serializers.Base.findMapLikeSerializer(SerializationConfig,MapLikeType,BeanDescription,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.Serializers.Base.findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.Serializers.Base.findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
  name: Serializers.Base.findReferenceSerializer(SerializationConfig,ReferenceType,BeanDescription,TypeSerializer,JsonSerializer
  nameWithType: Serializers.Base.findReferenceSerializer(SerializationConfig,ReferenceType,BeanDescription,TypeSerializer,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.Serializers.Base.findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.Serializers.Base.findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer
  name: Serializers.Base.findMapSerializer(SerializationConfig,MapType,BeanDescription,JsonSerializer
  nameWithType: Serializers.Base.findMapSerializer(SerializationConfig,MapType,BeanDescription,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.Serializers.Base.findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer
