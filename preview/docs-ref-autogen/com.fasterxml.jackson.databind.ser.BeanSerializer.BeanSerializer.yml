### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer*"
fullName: "com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer"
name: "BeanSerializer"
nameWithType: "BeanSerializer.BeanSerializer"
members:
- uid: "com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])"
  fullName: "com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(JavaType type, BeanSerializerBuilder builder, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)"
  name: "BeanSerializer(JavaType type, BeanSerializerBuilder builder, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)"
  nameWithType: "BeanSerializer.BeanSerializer(JavaType type, BeanSerializerBuilder builder, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)"
  parameters:
  - name: "type"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Builder object that contains collected information\n   that may be needed for serializer"
    name: "builder"
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.BeanSerializerBuilder?alt=com.fasterxml.jackson.databind.ser.BeanSerializerBuilder&text=BeanSerializerBuilder\" data-throw-if-not-resolved=\"False\" />"
  - description: "Property writers used for actual serialization"
    name: "properties"
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.BeanPropertyWriter?alt=com.fasterxml.jackson.databind.ser.BeanPropertyWriter&text=BeanPropertyWriter\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "filteredProperties"
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.BeanPropertyWriter?alt=com.fasterxml.jackson.databind.ser.BeanPropertyWriter&text=BeanPropertyWriter\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public BeanSerializer(JavaType type, BeanSerializerBuilder builder, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)"
- uid: "com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase)"
  fullName: "com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(BeanSerializerBase src)"
  name: "BeanSerializer(BeanSerializerBase src)"
  nameWithType: "BeanSerializer.BeanSerializer(BeanSerializerBase src)"
  summary: "Alternate copy constructor that can be used to construct standard <xref uid=\"com.fasterxml.jackson.databind.ser.BeanSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BeanSerializer\"></xref> passing an instance of \"compatible enough\" source serializer."
  parameters:
  - name: "src"
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.std.BeanSerializerBase?alt=com.fasterxml.jackson.databind.ser.std.BeanSerializerBase&text=BeanSerializerBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected BeanSerializer(BeanSerializerBase src)"
- uid: "com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])"
  fullName: "com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(BeanSerializerBase src, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)"
  name: "BeanSerializer(BeanSerializerBase src, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)"
  nameWithType: "BeanSerializer.BeanSerializer(BeanSerializerBase src, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)"
  parameters:
  - name: "src"
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.std.BeanSerializerBase?alt=com.fasterxml.jackson.databind.ser.std.BeanSerializerBase&text=BeanSerializerBase\" data-throw-if-not-resolved=\"False\" />"
  - name: "properties"
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.BeanPropertyWriter?alt=com.fasterxml.jackson.databind.ser.BeanPropertyWriter&text=BeanPropertyWriter\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "filteredProperties"
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.BeanPropertyWriter?alt=com.fasterxml.jackson.databind.ser.BeanPropertyWriter&text=BeanPropertyWriter\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "protected BeanSerializer(BeanSerializerBase src, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)"
- uid: "com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)"
  fullName: "com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(BeanSerializerBase src, ObjectIdWriter objectIdWriter)"
  name: "BeanSerializer(BeanSerializerBase src, ObjectIdWriter objectIdWriter)"
  nameWithType: "BeanSerializer.BeanSerializer(BeanSerializerBase src, ObjectIdWriter objectIdWriter)"
  parameters:
  - name: "src"
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.std.BeanSerializerBase?alt=com.fasterxml.jackson.databind.ser.std.BeanSerializerBase&text=BeanSerializerBase\" data-throw-if-not-resolved=\"False\" />"
  - name: "objectIdWriter"
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter?alt=com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter&text=ObjectIdWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected BeanSerializer(BeanSerializerBase src, ObjectIdWriter objectIdWriter)"
- uid: "com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)"
  fullName: "com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(BeanSerializerBase src, ObjectIdWriter objectIdWriter, Object filterId)"
  name: "BeanSerializer(BeanSerializerBase src, ObjectIdWriter objectIdWriter, Object filterId)"
  nameWithType: "BeanSerializer.BeanSerializer(BeanSerializerBase src, ObjectIdWriter objectIdWriter, Object filterId)"
  parameters:
  - name: "src"
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.std.BeanSerializerBase?alt=com.fasterxml.jackson.databind.ser.std.BeanSerializerBase&text=BeanSerializerBase\" data-throw-if-not-resolved=\"False\" />"
  - name: "objectIdWriter"
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter?alt=com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter&text=ObjectIdWriter\" data-throw-if-not-resolved=\"False\" />"
  - name: "filterId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected BeanSerializer(BeanSerializerBase src, ObjectIdWriter objectIdWriter, Object filterId)"
- uid: "com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set<java.lang.String>)"
  fullName: "com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(BeanSerializerBase src, Set<String> toIgnore)"
  name: "BeanSerializer(BeanSerializerBase src, Set<String> toIgnore)"
  nameWithType: "BeanSerializer.BeanSerializer(BeanSerializerBase src, Set<String> toIgnore)"
  parameters:
  - name: "src"
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.std.BeanSerializerBase?alt=com.fasterxml.jackson.databind.ser.std.BeanSerializerBase&text=BeanSerializerBase\" data-throw-if-not-resolved=\"False\" />"
  - name: "toIgnore"
    type: "<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "protected BeanSerializer(BeanSerializerBase src, Set<String> toIgnore)"
type: "constructor"
metadata: {}
package: "com.fasterxml.jackson.databind.ser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
