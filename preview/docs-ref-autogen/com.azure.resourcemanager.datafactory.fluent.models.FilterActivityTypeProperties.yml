### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties"
name: "FilterActivityTypeProperties"
nameWithType: "FilterActivityTypeProperties"
summary: "Filter activity properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class FilterActivityTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties.FilterActivityTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties.FilterActivityTypeProperties()"
  name: "FilterActivityTypeProperties()"
  nameWithType: "FilterActivityTypeProperties.FilterActivityTypeProperties()"
  syntax: "public FilterActivityTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties.condition()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties.condition()"
  name: "condition()"
  nameWithType: "FilterActivityTypeProperties.condition()"
  summary: "Get the condition property: Condition to be used for filtering the input."
  syntax: "public Expression condition()"
  desc: "Get the condition property: Condition to be used for filtering the input."
  returns:
    description: "the condition value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Expression?alt=com.azure.resourcemanager.datafactory.models.Expression&text=Expression\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties.items()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties.items()"
  name: "items()"
  nameWithType: "FilterActivityTypeProperties.items()"
  summary: "Get the items property: Input array on which filter should be applied."
  syntax: "public Expression items()"
  desc: "Get the items property: Input array on which filter should be applied."
  returns:
    description: "the items value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Expression?alt=com.azure.resourcemanager.datafactory.models.Expression&text=Expression\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties.validate()"
  name: "validate()"
  nameWithType: "FilterActivityTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties.withCondition(com.azure.resourcemanager.datafactory.models.Expression)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties.withCondition(Expression condition)"
  name: "withCondition(Expression condition)"
  nameWithType: "FilterActivityTypeProperties.withCondition(Expression condition)"
  summary: "Set the condition property: Condition to be used for filtering the input."
  parameters:
  - description: "the condition value to set."
    name: "condition"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Expression?alt=com.azure.resourcemanager.datafactory.models.Expression&text=Expression\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FilterActivityTypeProperties withCondition(Expression condition)"
  desc: "Set the condition property: Condition to be used for filtering the input."
  returns:
    description: "the FilterActivityTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties&text=FilterActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties.withItems(com.azure.resourcemanager.datafactory.models.Expression)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties.withItems(Expression items)"
  name: "withItems(Expression items)"
  nameWithType: "FilterActivityTypeProperties.withItems(Expression items)"
  summary: "Set the items property: Input array on which filter should be applied."
  parameters:
  - description: "the items value to set."
    name: "items"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Expression?alt=com.azure.resourcemanager.datafactory.models.Expression&text=Expression\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FilterActivityTypeProperties withItems(Expression items)"
  desc: "Set the items property: Input array on which filter should be applied."
  returns:
    description: "the FilterActivityTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.FilterActivityTypeProperties&text=FilterActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Filter activity properties."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
