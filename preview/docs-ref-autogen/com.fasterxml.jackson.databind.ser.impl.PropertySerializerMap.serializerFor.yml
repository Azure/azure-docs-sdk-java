### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.serializerFor*"
fullName: "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.serializerFor"
name: "serializerFor"
nameWithType: "PropertySerializerMap.serializerFor"
members:
- uid: "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.serializerFor(java.lang.Class<?>)"
  fullName: "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.serializerFor(Class<?> type)"
  name: "serializerFor(Class<?> type)"
  nameWithType: "PropertySerializerMap.serializerFor(Class<?> type)"
  summary: "Main lookup method. Takes a \"raw\" type since usage is always from place where parameterization is fixed such that there cannot be type-parametric variations."
  parameters:
  - name: "type"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public abstract JsonSerializer<Object> serializerFor(Class<?> type)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser.impl"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
