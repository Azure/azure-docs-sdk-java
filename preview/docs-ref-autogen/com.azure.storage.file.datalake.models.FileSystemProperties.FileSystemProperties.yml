### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.models.FileSystemProperties.FileSystemProperties*"
fullName: "com.azure.storage.file.datalake.models.FileSystemProperties.FileSystemProperties"
name: "FileSystemProperties"
nameWithType: "FileSystemProperties.FileSystemProperties"
members:
- uid: "com.azure.storage.file.datalake.models.FileSystemProperties.FileSystemProperties(java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.time.OffsetDateTime,com.azure.storage.file.datalake.models.LeaseDurationType,com.azure.storage.file.datalake.models.LeaseStateType,com.azure.storage.file.datalake.models.LeaseStatusType,com.azure.storage.file.datalake.models.PublicAccessType,boolean,boolean)"
  fullName: "com.azure.storage.file.datalake.models.FileSystemProperties.FileSystemProperties(Map<String,String> metadata, String eTag, OffsetDateTime lastModified, LeaseDurationType leaseDuration, LeaseStateType leaseState, LeaseStatusType leaseStatus, PublicAccessType dataLakePublicAccess, boolean hasImmutabilityPolicy, boolean hasLegalHold)"
  name: "FileSystemProperties(Map<String,String> metadata, String eTag, OffsetDateTime lastModified, LeaseDurationType leaseDuration, LeaseStateType leaseState, LeaseStatusType leaseStatus, PublicAccessType dataLakePublicAccess, boolean hasImmutabilityPolicy, boolean hasLegalHold)"
  nameWithType: "FileSystemProperties.FileSystemProperties(Map<String,String> metadata, String eTag, OffsetDateTime lastModified, LeaseDurationType leaseDuration, LeaseStateType leaseState, LeaseStatusType leaseStatus, PublicAccessType dataLakePublicAccess, boolean hasImmutabilityPolicy, boolean hasLegalHold)"
  summary: "Constructs a <xref uid=\"com.azure.storage.file.datalake.models.FileSystemProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileSystemProperties\"></xref>."
  parameters:
  - description: "Metadata associated with the file system."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "ETag of the file system."
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Datetime when the file system was last modified."
    name: "lastModified"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "Type of the lease on the file system."
    name: "leaseDuration"
    type: "<xref href=\"com.azure.storage.file.datalake.models.LeaseDurationType?alt=com.azure.storage.file.datalake.models.LeaseDurationType&text=LeaseDurationType\" data-throw-if-not-resolved=\"False\" />"
  - description: "State of the lease on the file system."
    name: "leaseState"
    type: "<xref href=\"com.azure.storage.file.datalake.models.LeaseStateType?alt=com.azure.storage.file.datalake.models.LeaseStateType&text=LeaseStateType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Status of the lease on the file system."
    name: "leaseStatus"
    type: "<xref href=\"com.azure.storage.file.datalake.models.LeaseStatusType?alt=com.azure.storage.file.datalake.models.LeaseStatusType&text=LeaseStatusType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Public access status for the file system."
    name: "dataLakePublicAccess"
    type: "<xref href=\"com.azure.storage.file.datalake.models.PublicAccessType?alt=com.azure.storage.file.datalake.models.PublicAccessType&text=PublicAccessType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Flag indicating if the file system has an immutability policy set on it."
    name: "hasImmutabilityPolicy"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Flag indicating if the file system has a legal hold."
    name: "hasLegalHold"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileSystemProperties(Map<String,String> metadata, String eTag, OffsetDateTime lastModified, LeaseDurationType leaseDuration, LeaseStateType leaseState, LeaseStatusType leaseStatus, PublicAccessType dataLakePublicAccess, boolean hasImmutabilityPolicy, boolean hasLegalHold)"
type: "constructor"
metadata: {}
package: "com.azure.storage.file.datalake.models"
artifact: com.azure:azure-storage-file-datalake:12.3.0-beta.1
