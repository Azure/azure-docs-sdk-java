### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableMap.Builder.orderEntriesByValue*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableMap.Builder<K,V>.orderEntriesByValue"
name: "orderEntriesByValue"
nameWithType: "ImmutableMap.Builder<K,V>.orderEntriesByValue"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableMap.Builder.orderEntriesByValue(java.util.Comparator<? super V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableMap.Builder<K,V>.orderEntriesByValue(Comparator<? super V> valueComparator)"
  name: "orderEntriesByValue(Comparator<? super V> valueComparator)"
  nameWithType: "ImmutableMap.Builder<K,V>.orderEntriesByValue(Comparator<? super V> valueComparator)"
  summary: "Configures this `Builder` to order entries by value according to the specified comparator.\n\nThe sort order is stable, that is, if two entries have values that compare as equivalent, the entry that was inserted first will be first in the built map's iteration order."
  parameters:
  - name: "valueComparator"
    type: "<xref href=\"java.util.Comparator?alt=java.util.Comparator&text=Comparator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? super V?alt=? super V&text=? super V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ImmutableMap.Builder<K,V> orderEntriesByValue(Comparator<? super V> valueComparator)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableMap.Builder?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableMap.Builder&text=Builder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
