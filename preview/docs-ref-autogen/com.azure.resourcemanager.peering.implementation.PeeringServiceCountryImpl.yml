### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.implementation.PeeringServiceCountryImpl"
fullName: "com.azure.resourcemanager.peering.implementation.PeeringServiceCountryImpl"
name: "PeeringServiceCountryImpl"
nameWithType: "PeeringServiceCountryImpl"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PeeringServiceCountryImpl implements PeeringServiceCountry"
methods:
- "com.azure.resourcemanager.peering.implementation.PeeringServiceCountryImpl.id()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceCountryImpl.innerModel()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceCountryImpl.name()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceCountryImpl.type()"
type: "class"
implements:
- "<xref href=\"com.azure.resourcemanager.peering.models.PeeringServiceCountry?alt=com.azure.resourcemanager.peering.models.PeeringServiceCountry&text=PeeringServiceCountry\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.peering.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
