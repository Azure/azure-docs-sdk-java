### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.eventhubs
  id: eventhubs
  children:
  - com.azure.messaging.eventhubs.EventData
  - com.azure.messaging.eventhubs.EventHubAsyncClient
  - com.azure.messaging.eventhubs.EventHubClientBuilder
  - com.azure.messaging.eventhubs.EventHubConsumer
  - com.azure.messaging.eventhubs.EventHubProducer
  - com.azure.messaging.eventhubs.EventHubProperties
  - com.azure.messaging.eventhubs.EventHubSharedAccessKeyCredential
  - com.azure.messaging.eventhubs.PartitionProperties
  href: com.azure.messaging.eventhubs.yml
  langs:
  - java
  name: com.azure.messaging.eventhubs
  nameWithType: com.azure.messaging.eventhubs
  fullName: com.azure.messaging.eventhubs
  type: Namespace
  source:
    remote:
      path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
    startLine: 3
  summary: "<p>Package containing classes for creating a <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">com.azure.messaging.eventhubs.EventHubAsyncClient</xref> to perform operations on Azure Event Hubs. </p>"
  syntax:
    content: package com.azure.messaging.eventhubs
references:
- uid: com.azure.messaging.eventhubs.models
  href: com.azure.messaging.eventhubs.models.yml
  name: com.azure.messaging.eventhubs.models
  nameWithType: com.azure.messaging.eventhubs.models
  fullName: com.azure.messaging.eventhubs.models
  type: Namespace
  summary: "<p>Package containing classes used for creating and configuring events that are being sent-to and received-from Azure Event Hubs service. </p>"
  syntax:
    content: package com.azure.messaging.eventhubs.models
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventHubAsyncClient.yml
  name: EventHubAsyncClient
  nameWithType: EventHubAsyncClient
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient
  type: Class
  summary: "<p>The main point of interaction with Azure Event Hubs, the client offers a connection to a specific Event Hub within the Event Hubs namespace and offers operations for sending event data, receiving events, and inspecting the connected Event Hub.</p>\r\n<p>\r\n  <b>Creating an <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> using Event Hubs namespace connection string</b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubclientbuilder.connectionString::string-string}</p>\r\n<p>\r\n  <b>Creating an <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> using Event Hub instance connection string</b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubclientbuilder.connectionstring::string}</p>\r\n<p></p>"
  syntax:
    content: public class EventHubAsyncClient
- uid: com.azure.messaging.eventhubs.EventData
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventData.yml
  name: EventData
  nameWithType: EventData
  fullName: com.azure.messaging.eventhubs.EventData
  type: Class
  summary: "<p>The data structure encapsulating the event being sent-to and received-from Event Hubs. Each Event Hub partition can be visualized as a stream of <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>.</p>\r\n<p>Here's how AMQP message sections map to <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>. For reference, the specification can be found here: <a href=\"http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf\">AMQP 1.0 specification</a></p>\r\n<p>\r\n  <orderedlist>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"com.azure.messaging.eventhubs.EventData.properties()\" data-throw-if-not-resolved=\"false\">properties()</xref> - AMQPMessage.ApplicationProperties section </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"com.azure.messaging.eventhubs.EventData.body()\" data-throw-if-not-resolved=\"false\">body()</xref> - if AMQPMessage.Body has Data section </p>\r\n    </li>\r\n  </orderedlist>\r\n</p>\r\n<p>Serializing a received <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> with AMQP sections other than ApplicationProperties (with primitive Java types) and Data section is not supported. </p>\r\n<p></p>"
  syntax:
    content: public class EventData
- uid: com.azure.messaging.eventhubs.EventHubClientBuilder
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventHubClientBuilder.yml
  name: EventHubClientBuilder
  nameWithType: EventHubClientBuilder
  fullName: com.azure.messaging.eventhubs.EventHubClientBuilder
  type: Class
  summary: "<p>This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref>. Calling <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\">buildAsyncClient()</xref> constructs an instant of the client.</p>\r\n<p>The client requires credentials or a connection string to perform operations against Azure Event Hubs. Setting credentials by using <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder.connectionString(String)\" data-throw-if-not-resolved=\"false\">connectionString(String)</xref>, <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder.connectionString(String,String)\" data-throw-if-not-resolved=\"false\">connectionString(String, String)</xref>, or <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder.credential(String,String,TokenCredential)\" data-throw-if-not-resolved=\"false\">credential(String, String, TokenCredential)</xref>, is required in order to construct an <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref>. </p>\r\n<p>\r\n  <b>Creating an <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> using Event Hubs namespace connection string</b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubclientbuilder.connectionString::string-string}</p>\r\n<p>\r\n  <b>Creating an <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> using Event Hub instance connection string</b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubclientbuilder.connectionstring::string}</p>\r\n<p>\r\n  <b>Creating an <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> using Event Hub with no <xref uid=\"\" data-throw-if-not-resolved=\"false\">Retry</xref>, different timeout and new Scheduler</b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubclientbuilder.retry-timeout-scheduler}</p>\r\n<p></p>"
  syntax:
    content: public class EventHubClientBuilder
- uid: com.azure.messaging.eventhubs.EventHubConsumer
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventHubConsumer.yml
  name: EventHubConsumer
  nameWithType: EventHubConsumer
  fullName: com.azure.messaging.eventhubs.EventHubConsumer
  type: Class
  summary: "<p>A consumer responsible for reading <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> from a specific Event Hub partition in the context of a specific consumer group.</p>\r\n<p>\r\n  <ul>\r\n    <li>\r\n      <p>If <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumer\" data-throw-if-not-resolved=\"false\">EventHubConsumer</xref> is created where <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel()\" data-throw-if-not-resolved=\"false\">EventHubConsumerOptions#ownerLevel()</xref> has a value, then Event Hubs service will guarantee only one active consumer exists per partitionId and consumer group combination. This consumer is sometimes referred to as an \"Epoch Consumer.\" </p>\r\n    </li>\r\n    <li>\r\n      <p>Multiple consumers per partitionId and consumer group combination can be created by not setting <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel()\" data-throw-if-not-resolved=\"false\">EventHubConsumerOptions#ownerLevel()</xref> when creating consumers. This non-exclusive consumer is sometimes referred to as a \"Non-Epoch Consumer.\" </p>\r\n    </li>\r\n  </ul>\r\n</p>\r\n<p>\r\n  <b>Consuming events from Event Hub</b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubconsumer.receive}</p>\r\n<p>\r\n  <b>Rate limiting consumption of events from Event Hub</b>\r\n</p>\r\n<p>For event consumers that need to limit the number of events they receive at a given time, they can use <xref uid=\"\" data-throw-if-not-resolved=\"false\">BaseSubscriber#request(long)</xref>.</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubconsumer.receiveBackpressure}</p>\r\n<p></p>"
  syntax:
    content: public class EventHubConsumer
- uid: com.azure.messaging.eventhubs.EventHubProducer
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventHubProducer.yml
  name: EventHubProducer
  nameWithType: EventHubProducer
  fullName: com.azure.messaging.eventhubs.EventHubProducer
  type: Class
  summary: "<p>A producer responsible for transmitting <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> to a specific Event Hub, grouped together in batches. Depending on the options specified at creation, the producer may be created to allow event data to be automatically routed to an available partition or specific to a partition.</p>\r\n<p>Allowing automatic routing of partitions is recommended when: <ul><li><p>The sending of events needs to be highly available. </p></li><li><p>The event data should be evenly distributed among all available partitions. </p></li></ul></p>\r\n<p>If no partition is specified, the following rules are used for automatically selecting one: <orderedlist><li><p>Distribute the events equally amongst all available partitions using a round-robin approach. </p></li><li><p>If a partition becomes unavailable, the Event Hubs service will automatically detect it and forward the message to another available partition. </p></li></orderedlist></p>\r\n<p>\r\n  <b>Create a producer that routes events to any partition</b>\r\n</p>\r\n<p>To allow automatic routing of messages to available partition, do not specify the <xref uid=\"com.azure.messaging.eventhubs.models.EventHubProducerOptions.partitionId()\" data-throw-if-not-resolved=\"false\">partitionId</xref> when creating the <xref uid=\"com.azure.messaging.eventhubs.EventHubProducer\" data-throw-if-not-resolved=\"false\">EventHubProducer</xref>.</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubproducer.instantiate}</p>\r\n<p>\r\n  <b>Create a producer that publishes events to partition \"foo\" with a timeout of 45 seconds.</b>\r\n</p>\r\n<p>Developers can push events to a single partition by specifying the <xref uid=\"com.azure.messaging.eventhubs.models.EventHubProducerOptions.partitionId(String)\" data-throw-if-not-resolved=\"false\">partitionId</xref> when creating an <xref uid=\"com.azure.messaging.eventhubs.EventHubProducer\" data-throw-if-not-resolved=\"false\">EventHubProducer</xref>.</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubproducer.instantiatePartitionProducer}</p>\r\n<p>\r\n  <b>Publish events to the same partition, grouped together using <xref uid=\"com.azure.messaging.eventhubs.models.SendOptions.partitionKey(String)\" data-throw-if-not-resolved=\"false\">SendOptions#partitionKey(String)</xref>.</b>\r\n</p>\r\n<p>If developers want to push similar events to end up at the same partition, but do not require them to go to a specific partition, they can use <xref uid=\"com.azure.messaging.eventhubs.models.SendOptions.partitionKey(String)\" data-throw-if-not-resolved=\"false\">SendOptions#partitionKey(String)</xref>.</p>\r\n<p>In the sample below, all the \"sandwiches\" end up in the same partition, but it could end up in partition 0, 1, etc. of the available partitions. All that matters to the end user is that they are grouped together.</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubproducer.send::publisher-sendOptions}</p>\r\n<p></p>"
  syntax:
    content: public class EventHubProducer
- uid: com.azure.messaging.eventhubs.EventHubProperties
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventHubProperties.yml
  name: EventHubProperties
  nameWithType: EventHubProperties
  fullName: com.azure.messaging.eventhubs.EventHubProperties
  type: Class
  summary: "<p>Holds information about Event Hubs which can come handy while performing data-plane operations like <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient.createConsumer(String,String,EventPosition)\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient#createConsumer(String, String, EventPosition)</xref> and <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient.createConsumer(String,String,EventPosition,EventHubConsumerOptions)\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient#createConsumer(String, String, EventPosition, EventHubConsumerOptions)</xref>.</p>\r\n<p></p>"
  syntax:
    content: public class EventHubProperties
- uid: com.azure.messaging.eventhubs.EventHubSharedAccessKeyCredential
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventHubSharedAccessKeyCredential.yml
  name: EventHubSharedAccessKeyCredential
  nameWithType: EventHubSharedAccessKeyCredential
  fullName: com.azure.messaging.eventhubs.EventHubSharedAccessKeyCredential
  type: Class
  summary: "<p>Authorizes with Azure Event Hubs service using a shared access key from either an Event Hubs namespace or a specific Event Hub. </p>"
  syntax:
    content: public class EventHubSharedAccessKeyCredential
- uid: com.azure.messaging.eventhubs.PartitionProperties
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.PartitionProperties.yml
  name: PartitionProperties
  nameWithType: PartitionProperties
  fullName: com.azure.messaging.eventhubs.PartitionProperties
  type: Class
  summary: "<p>A set of information for a single partition of an Event Hub. </p>"
  syntax:
    content: public class PartitionProperties
