### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeFileAsyncClient.read*"
fullName: "com.azure.storage.file.datalake.DataLakeFileAsyncClient.read"
name: "read"
nameWithType: "DataLakeFileAsyncClient.read"
members:
- uid: "com.azure.storage.file.datalake.DataLakeFileAsyncClient.read()"
  fullName: "com.azure.storage.file.datalake.DataLakeFileAsyncClient.read()"
  name: "read()"
  nameWithType: "DataLakeFileAsyncClient.read()"
  summary: "Reads the entire file.\n\n**Code Samples**\n\n```java\nByteArrayOutputStream downloadData = new ByteArrayOutputStream();\n client.read().subscribe(piece -> {\n     try {\n         downloadData.write(piece.array());\n     } catch (IOException ex) {\n         throw new UncheckedIOException(ex);\n     }\n });\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob"
  syntax: "public Flux<ByteBuffer> read()"
  returns:
    description: "A reactive response containing the file data."
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.3.0-beta.1
