### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.http.ProtocolVersion
  id: ProtocolVersion
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http
  children:
  - org.apache.hc.core5.http.ProtocolVersion.ProtocolVersion(java.lang.String,int,int)
  - org.apache.hc.core5.http.ProtocolVersion.compareToVersion(org.apache.hc.core5.http.ProtocolVersion)
  - org.apache.hc.core5.http.ProtocolVersion.equals(int,int)
  - org.apache.hc.core5.http.ProtocolVersion.equals(java.lang.Object)
  - org.apache.hc.core5.http.ProtocolVersion.format()
  - org.apache.hc.core5.http.ProtocolVersion.getMajor()
  - org.apache.hc.core5.http.ProtocolVersion.getMinor()
  - org.apache.hc.core5.http.ProtocolVersion.getProtocol()
  - org.apache.hc.core5.http.ProtocolVersion.greaterEquals(org.apache.hc.core5.http.ProtocolVersion)
  - org.apache.hc.core5.http.ProtocolVersion.hashCode()
  - org.apache.hc.core5.http.ProtocolVersion.isComparable(org.apache.hc.core5.http.ProtocolVersion)
  - org.apache.hc.core5.http.ProtocolVersion.lessEquals(org.apache.hc.core5.http.ProtocolVersion)
  - org.apache.hc.core5.http.ProtocolVersion.toString()
  langs:
  - java
  name: ProtocolVersion
  nameWithType: ProtocolVersion
  fullName: org.apache.hc.core5.http.ProtocolVersion
  type: Class
  package: org.apache.hc.core5.http
  summary: >-
    Represents a protocol version. The "major.minor" numbering scheme is used to indicate versions of the protocol.


    This class defines a protocol version as a combination of protocol name, major version number, and minor version number. Note that <xref uid="org.apache.hc.core5.http.ProtocolVersion.equals*" data-throw-if-not-resolved="false">#equals</xref> and <xref uid="org.apache.hc.core5.http.ProtocolVersion.hashCode*" data-throw-if-not-resolved="false">#hashCode</xref> are defined as final here, they cannot be overridden in derived classes.
  syntax:
    content: public class ProtocolVersion implements Serializable
  inheritance:
  - java.lang.Object
  implements:
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.http.ProtocolVersion.ProtocolVersion(java.lang.String,int,int)
  id: ProtocolVersion(java.lang.String,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.ProtocolVersion
  langs:
  - java
  name: ProtocolVersion(String protocol, int major, int minor)
  nameWithType: ProtocolVersion.ProtocolVersion(String protocol, int major, int minor)
  fullName: org.apache.hc.core5.http.ProtocolVersion.ProtocolVersion(String protocol, int major, int minor)
  overload: org.apache.hc.core5.http.ProtocolVersion.ProtocolVersion*
  type: Constructor
  package: org.apache.hc.core5.http
  summary: Create a protocol version designator.
  syntax:
    content: public ProtocolVersion(String protocol, int major, int minor)
    parameters:
    - id: protocol
      type: java.lang.String
      description: the name of the protocol, for example "HTTP"
    - id: major
      type: int
      description: the major version number of the protocol
    - id: minor
      type: int
      description: the minor version number of the protocol
- uid: org.apache.hc.core5.http.ProtocolVersion.compareToVersion(org.apache.hc.core5.http.ProtocolVersion)
  id: compareToVersion(org.apache.hc.core5.http.ProtocolVersion)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.ProtocolVersion
  langs:
  - java
  name: compareToVersion(ProtocolVersion that)
  nameWithType: ProtocolVersion.compareToVersion(ProtocolVersion that)
  fullName: org.apache.hc.core5.http.ProtocolVersion.compareToVersion(ProtocolVersion that)
  overload: org.apache.hc.core5.http.ProtocolVersion.compareToVersion*
  type: Method
  package: org.apache.hc.core5.http
  summary: Compares this protocol version with another one. Only protocol versions with the same protocol name can be compared. This method does *not* define a total ordering, as it would be required for <xref uid="java.lang.Comparable" data-throw-if-not-resolved="false">java.lang.Comparable</xref>.
  syntax:
    content: public int compareToVersion(ProtocolVersion that)
    parameters:
    - id: that
      type: org.apache.hc.core5.http.ProtocolVersion
      description: the protocol version to compare with
    return:
      type: int
      description: >-
        a negative integer, zero, or a positive integer
                   as this version is less than, equal to, or greater than
                   the argument version.
- uid: org.apache.hc.core5.http.ProtocolVersion.equals(int,int)
  id: equals(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.ProtocolVersion
  langs:
  - java
  name: equals(int major, int minor)
  nameWithType: ProtocolVersion.equals(int major, int minor)
  fullName: org.apache.hc.core5.http.ProtocolVersion.equals(int major, int minor)
  overload: org.apache.hc.core5.http.ProtocolVersion.equals*
  type: Method
  package: org.apache.hc.core5.http
  summary: Checks whether this instance has the same major and minor version as the arguments.
  syntax:
    content: public final boolean equals(int major, int minor)
    parameters:
    - id: major
      type: int
      description: the major version to check.
    - id: minor
      type: int
      description: the minor version to check.
    return:
      type: boolean
      description: whether this instance has the same major and minor version as the arguments.
- uid: org.apache.hc.core5.http.ProtocolVersion.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.ProtocolVersion
  langs:
  - java
  name: equals(Object obj)
  nameWithType: ProtocolVersion.equals(Object obj)
  fullName: org.apache.hc.core5.http.ProtocolVersion.equals(Object obj)
  overload: org.apache.hc.core5.http.ProtocolVersion.equals*
  type: Method
  package: org.apache.hc.core5.http
  summary: Checks equality of this protocol version with an object. The object is equal if it is a protocol version with the same protocol name, major version number, and minor version number. The specific class of the object is *not* relevant, instances of derived classes with identical attributes are equal to instances of the base class and vice versa.
  syntax:
    content: public final boolean equals(Object obj)
    parameters:
    - id: obj
      type: java.lang.Object
      description: the object to compare with
    return:
      type: boolean
      description: >-
        <code>true</code> if the argument is the same protocol version,
                  <code>false</code> otherwise
- uid: org.apache.hc.core5.http.ProtocolVersion.format()
  id: format()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.ProtocolVersion
  langs:
  - java
  name: format()
  nameWithType: ProtocolVersion.format()
  fullName: org.apache.hc.core5.http.ProtocolVersion.format()
  overload: org.apache.hc.core5.http.ProtocolVersion.format*
  type: Method
  package: org.apache.hc.core5.http
  summary: Formats this protocol version as a string.
  syntax:
    content: public String format()
    return:
      type: java.lang.String
      description: a protocol version string, like "HTTP/1.1"
- uid: org.apache.hc.core5.http.ProtocolVersion.getMajor()
  id: getMajor()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.ProtocolVersion
  langs:
  - java
  name: getMajor()
  nameWithType: ProtocolVersion.getMajor()
  fullName: org.apache.hc.core5.http.ProtocolVersion.getMajor()
  overload: org.apache.hc.core5.http.ProtocolVersion.getMajor*
  type: Method
  package: org.apache.hc.core5.http
  summary: Returns the major version number of the protocol.
  syntax:
    content: public final int getMajor()
    return:
      type: int
      description: the major version number.
- uid: org.apache.hc.core5.http.ProtocolVersion.getMinor()
  id: getMinor()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.ProtocolVersion
  langs:
  - java
  name: getMinor()
  nameWithType: ProtocolVersion.getMinor()
  fullName: org.apache.hc.core5.http.ProtocolVersion.getMinor()
  overload: org.apache.hc.core5.http.ProtocolVersion.getMinor*
  type: Method
  package: org.apache.hc.core5.http
  summary: Returns the minor version number of the HTTP protocol.
  syntax:
    content: public final int getMinor()
    return:
      type: int
      description: the minor version number.
- uid: org.apache.hc.core5.http.ProtocolVersion.getProtocol()
  id: getProtocol()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.ProtocolVersion
  langs:
  - java
  name: getProtocol()
  nameWithType: ProtocolVersion.getProtocol()
  fullName: org.apache.hc.core5.http.ProtocolVersion.getProtocol()
  overload: org.apache.hc.core5.http.ProtocolVersion.getProtocol*
  type: Method
  package: org.apache.hc.core5.http
  summary: Returns the name of the protocol.
  syntax:
    content: public final String getProtocol()
    return:
      type: java.lang.String
      description: the protocol name
- uid: org.apache.hc.core5.http.ProtocolVersion.greaterEquals(org.apache.hc.core5.http.ProtocolVersion)
  id: greaterEquals(org.apache.hc.core5.http.ProtocolVersion)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.ProtocolVersion
  langs:
  - java
  name: greaterEquals(ProtocolVersion version)
  nameWithType: ProtocolVersion.greaterEquals(ProtocolVersion version)
  fullName: org.apache.hc.core5.http.ProtocolVersion.greaterEquals(ProtocolVersion version)
  overload: org.apache.hc.core5.http.ProtocolVersion.greaterEquals*
  type: Method
  package: org.apache.hc.core5.http
  summary: Tests if this protocol version is greater or equal to the given one.
  syntax:
    content: public final boolean greaterEquals(ProtocolVersion version)
    parameters:
    - id: version
      type: org.apache.hc.core5.http.ProtocolVersion
      description: the version against which to check this version
    return:
      type: boolean
      description: >-
        <code>true</code> if this protocol version is
                  <xref uid="org.apache.hc.core5.http.ProtocolVersion.isComparable*" data-throw-if-not-resolved="false">comparable</xref> to the argument
                  and <xref uid="org.apache.hc.core5.http.ProtocolVersion.compareToVersion*" data-throw-if-not-resolved="false">compares</xref> as greater or equal,
                  <code>false</code> otherwise
- uid: org.apache.hc.core5.http.ProtocolVersion.hashCode()
  id: hashCode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.ProtocolVersion
  langs:
  - java
  name: hashCode()
  nameWithType: ProtocolVersion.hashCode()
  fullName: org.apache.hc.core5.http.ProtocolVersion.hashCode()
  overload: org.apache.hc.core5.http.ProtocolVersion.hashCode*
  type: Method
  package: org.apache.hc.core5.http
  summary: Obtains a hash code consistent with <xref uid="org.apache.hc.core5.http.ProtocolVersion.equals*" data-throw-if-not-resolved="false">#equals</xref>.
  syntax:
    content: public final int hashCode()
    return:
      type: int
      description: the hashcode of this protocol version
- uid: org.apache.hc.core5.http.ProtocolVersion.isComparable(org.apache.hc.core5.http.ProtocolVersion)
  id: isComparable(org.apache.hc.core5.http.ProtocolVersion)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.ProtocolVersion
  langs:
  - java
  name: isComparable(ProtocolVersion that)
  nameWithType: ProtocolVersion.isComparable(ProtocolVersion that)
  fullName: org.apache.hc.core5.http.ProtocolVersion.isComparable(ProtocolVersion that)
  overload: org.apache.hc.core5.http.ProtocolVersion.isComparable*
  type: Method
  package: org.apache.hc.core5.http
  summary: Checks whether this protocol can be compared to another one. Only protocol versions with the same protocol name can be <xref uid="org.apache.hc.core5.http.ProtocolVersion.compareToVersion*" data-throw-if-not-resolved="false">compared</xref>.
  syntax:
    content: public boolean isComparable(ProtocolVersion that)
    parameters:
    - id: that
      type: org.apache.hc.core5.http.ProtocolVersion
      description: the protocol version to consider
    return:
      type: boolean
      description: >-
        <code>true</code> if <xref uid="org.apache.hc.core5.http.ProtocolVersion.compareToVersion*" data-throw-if-not-resolved="false">compareToVersion</xref>
                  can be called with the argument, <code>false</code> otherwise
- uid: org.apache.hc.core5.http.ProtocolVersion.lessEquals(org.apache.hc.core5.http.ProtocolVersion)
  id: lessEquals(org.apache.hc.core5.http.ProtocolVersion)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.ProtocolVersion
  langs:
  - java
  name: lessEquals(ProtocolVersion version)
  nameWithType: ProtocolVersion.lessEquals(ProtocolVersion version)
  fullName: org.apache.hc.core5.http.ProtocolVersion.lessEquals(ProtocolVersion version)
  overload: org.apache.hc.core5.http.ProtocolVersion.lessEquals*
  type: Method
  package: org.apache.hc.core5.http
  summary: Tests if this protocol version is less or equal to the given one.
  syntax:
    content: public final boolean lessEquals(ProtocolVersion version)
    parameters:
    - id: version
      type: org.apache.hc.core5.http.ProtocolVersion
      description: the version against which to check this version
    return:
      type: boolean
      description: >-
        <code>true</code> if this protocol version is
                  <xref uid="org.apache.hc.core5.http.ProtocolVersion.isComparable*" data-throw-if-not-resolved="false">comparable</xref> to the argument
                  and <xref uid="org.apache.hc.core5.http.ProtocolVersion.compareToVersion*" data-throw-if-not-resolved="false">compares</xref> as less or equal,
                  <code>false</code> otherwise
- uid: org.apache.hc.core5.http.ProtocolVersion.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.ProtocolVersion
  langs:
  - java
  name: toString()
  nameWithType: ProtocolVersion.toString()
  fullName: org.apache.hc.core5.http.ProtocolVersion.toString()
  overload: org.apache.hc.core5.http.ProtocolVersion.toString*
  type: Method
  package: org.apache.hc.core5.http
  summary: Converts this protocol version to a string.
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
      description: a protocol version string, like "HTTP/1.1"
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.core5.http.ProtocolVersion.ProtocolVersion*
  name: ProtocolVersion
  nameWithType: ProtocolVersion.ProtocolVersion
  fullName: org.apache.hc.core5.http.ProtocolVersion.ProtocolVersion
  package: org.apache.hc.core5.http
- uid: org.apache.hc.core5.http.ProtocolVersion.getProtocol*
  name: getProtocol
  nameWithType: ProtocolVersion.getProtocol
  fullName: org.apache.hc.core5.http.ProtocolVersion.getProtocol
  package: org.apache.hc.core5.http
- uid: org.apache.hc.core5.http.ProtocolVersion.getMajor*
  name: getMajor
  nameWithType: ProtocolVersion.getMajor
  fullName: org.apache.hc.core5.http.ProtocolVersion.getMajor
  package: org.apache.hc.core5.http
- uid: org.apache.hc.core5.http.ProtocolVersion.getMinor*
  name: getMinor
  nameWithType: ProtocolVersion.getMinor
  fullName: org.apache.hc.core5.http.ProtocolVersion.getMinor
  package: org.apache.hc.core5.http
- uid: org.apache.hc.core5.http.ProtocolVersion.hashCode*
  name: hashCode
  nameWithType: ProtocolVersion.hashCode
  fullName: org.apache.hc.core5.http.ProtocolVersion.hashCode
  package: org.apache.hc.core5.http
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.core5.http.ProtocolVersion.equals*
  name: equals
  nameWithType: ProtocolVersion.equals
  fullName: org.apache.hc.core5.http.ProtocolVersion.equals
  package: org.apache.hc.core5.http
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: org.apache.hc.core5.http.ProtocolVersion.format*
  name: format
  nameWithType: ProtocolVersion.format
  fullName: org.apache.hc.core5.http.ProtocolVersion.format
  package: org.apache.hc.core5.http
- uid: org.apache.hc.core5.http.ProtocolVersion.isComparable*
  name: isComparable
  nameWithType: ProtocolVersion.isComparable
  fullName: org.apache.hc.core5.http.ProtocolVersion.isComparable
  package: org.apache.hc.core5.http
- uid: org.apache.hc.core5.http.ProtocolVersion.compareToVersion*
  name: compareToVersion
  nameWithType: ProtocolVersion.compareToVersion
  fullName: org.apache.hc.core5.http.ProtocolVersion.compareToVersion
  package: org.apache.hc.core5.http
- uid: org.apache.hc.core5.http.ProtocolVersion.greaterEquals*
  name: greaterEquals
  nameWithType: ProtocolVersion.greaterEquals
  fullName: org.apache.hc.core5.http.ProtocolVersion.greaterEquals
  package: org.apache.hc.core5.http
- uid: org.apache.hc.core5.http.ProtocolVersion.lessEquals*
  name: lessEquals
  nameWithType: ProtocolVersion.lessEquals
  fullName: org.apache.hc.core5.http.ProtocolVersion.lessEquals
  package: org.apache.hc.core5.http
- uid: org.apache.hc.core5.http.ProtocolVersion.toString*
  name: toString
  nameWithType: ProtocolVersion.toString
  fullName: org.apache.hc.core5.http.ProtocolVersion.toString
  package: org.apache.hc.core5.http
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
