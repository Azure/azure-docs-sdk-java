### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableMap.computeIfAbsent*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableMap<K,V>.computeIfAbsent"
name: "computeIfAbsent"
nameWithType: "ImmutableMap<K,V>.computeIfAbsent"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableMap.computeIfAbsent(K,java.util.function.Function<? super K,? extends V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableMap<K,V>.computeIfAbsent(K key, Function<? super K,? extends V> mappingFunction)"
  name: "computeIfAbsent(K key, Function<? super K,? extends V> mappingFunction)"
  nameWithType: "ImmutableMap<K,V>.computeIfAbsent(K key, Function<? super K,? extends V> mappingFunction)"
  summary: "Guaranteed to throw an exception and leave the map unmodified."
  parameters:
  - name: "key"
    type: "<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />"
  - name: "mappingFunction"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? super K?alt=? super K&text=? super K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"? extends V?alt=? extends V&text=? extends V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public final V computeIfAbsent(K key, Function<? super K,? extends V> mappingFunction)"
  returns:
    type: "<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
