### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.JavaType.getParameterSource*"
fullName: "com.fasterxml.jackson.databind.JavaType.getParameterSource"
name: "getParameterSource"
nameWithType: "JavaType.getParameterSource"
members:
- uid: "com.fasterxml.jackson.databind.JavaType.getParameterSource()"
  fullName: "com.fasterxml.jackson.databind.JavaType.getParameterSource()"
  name: "getParameterSource()"
  nameWithType: "JavaType.getParameterSource()"
  summary: "Accessor that can be used to find out type for which parameterization is applied: this is often NOT same as what <xref uid=\"com.fasterxml.jackson.databind.JavaType.getRawClass*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getRawClass\"></xref> returns, but rather one of it supertype.\n\nFor example: for type like <xref uid=\"java.util.HashMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.HashMap\"></xref>, raw type is <xref uid=\"java.util.HashMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.HashMap\"></xref>; but this method would return <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Map\"></xref>, because relevant type parameters that are resolved (and accessible using <xref uid=\"com.fasterxml.jackson.databind.JavaType.containedType(int)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#containedType(int)\"></xref> and <xref uid=\"com.fasterxml.jackson.databind.JavaType.getKeyType()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getKeyType()\"></xref>) are parameter for <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Map\"></xref> (which may or may not be same as type parameters for subtype; in case of <xref uid=\"java.util.HashMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.HashMap\"></xref> they are, but for further subtypes they may be different parameters or possibly none at all)."
  overridden: "com.fasterxml.jackson.core.type.ResolvedType.getParameterSource()"
  syntax: "public Class<?> getParameterSource()"
  returns:
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
