### YamlMime:JavaType
uid: "com.azure.compute.batch.models.BatchJobScheduleConfiguration"
fullName: "com.azure.compute.batch.models.BatchJobScheduleConfiguration"
name: "BatchJobScheduleConfiguration"
nameWithType: "BatchJobScheduleConfiguration"
summary: "The schedule according to which Jobs will be created."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **BatchJobScheduleConfiguration**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.BatchJobScheduleConfiguration?alt=com.azure.compute.batch.models.BatchJobScheduleConfiguration&text=BatchJobScheduleConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.BatchJobScheduleConfiguration()"
  fullName: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.BatchJobScheduleConfiguration()"
  name: "BatchJobScheduleConfiguration()"
  nameWithType: "BatchJobScheduleConfiguration.BatchJobScheduleConfiguration()"
  summary: "Creates an instance of Batch<wbr>Job<wbr>Schedule<wbr>Configuration class."
  syntax: "public BatchJobScheduleConfiguration()"
  desc: "Creates an instance of BatchJobScheduleConfiguration class."
methods:
- uid: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "BatchJobScheduleConfiguration.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Batch<wbr>Job<wbr>Schedule<wbr>Configuration from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static BatchJobScheduleConfiguration fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the BatchJobScheduleConfiguration."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of BatchJobScheduleConfiguration from the JsonReader."
  returns:
    description: "An instance of BatchJobScheduleConfiguration if the JsonReader was pointing to an instance of it, or null\n if it was pointing to JSON null."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobScheduleConfiguration?alt=com.azure.compute.batch.models.BatchJobScheduleConfiguration&text=BatchJobScheduleConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.getDoNotRunAfter()"
  fullName: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.getDoNotRunAfter()"
  name: "getDoNotRunAfter()"
  nameWithType: "BatchJobScheduleConfiguration.getDoNotRunAfter()"
  summary: "Get the do<wbr>Not<wbr>Run<wbr>After property: A time after which no Job will be created under this Job Schedule."
  syntax: "public OffsetDateTime getDoNotRunAfter()"
  desc: "Get the doNotRunAfter property: A time after which no Job will be created under this Job Schedule. The schedule will move to the completed state as soon as this deadline is past and there is no active Job under this Job Schedule. If you do not specify a doNotRunAfter time, and you are creating a recurring Job Schedule, the Job Schedule will remain active until you explicitly terminate it."
  returns:
    description: "the doNotRunAfter value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.getDoNotRunUntil()"
  fullName: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.getDoNotRunUntil()"
  name: "getDoNotRunUntil()"
  nameWithType: "BatchJobScheduleConfiguration.getDoNotRunUntil()"
  summary: "Get the do<wbr>Not<wbr>Run<wbr>Until property: The earliest time at which any Job may be created under this Job Schedule."
  syntax: "public OffsetDateTime getDoNotRunUntil()"
  desc: "Get the doNotRunUntil property: The earliest time at which any Job may be created under this Job Schedule. If you do not specify a doNotRunUntil time, the schedule becomes ready to create Jobs immediately."
  returns:
    description: "the doNotRunUntil value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.getRecurrenceInterval()"
  fullName: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.getRecurrenceInterval()"
  name: "getRecurrenceInterval()"
  nameWithType: "BatchJobScheduleConfiguration.getRecurrenceInterval()"
  summary: "Get the recurrence<wbr>Interval property: The time interval between the start times of two successive Jobs under the Job Schedule."
  syntax: "public Duration getRecurrenceInterval()"
  desc: "Get the recurrenceInterval property: The time interval between the start times of two successive Jobs under the Job Schedule. A Job Schedule can have at most one active Job under it at any given time. Because a Job Schedule can have at most one active Job under it at any given time, if it is time to create a new Job under a Job Schedule, but the previous Job is still running, the Batch service will not create the new Job until the previous Job finishes. If the previous Job does not finish within the startWindow period of the new recurrenceInterval, then no new Job will be scheduled for that interval. For recurring Jobs, you should normally specify a jobManagerTask in the jobSpecification. If you do not use jobManagerTask, you will need an external process to monitor when Jobs are created, add Tasks to the Jobs and terminate the Jobs ready for the next recurrence. The default is that the schedule does not recur: one Job is created, within the startWindow after the doNotRunUntil time, and the schedule is complete as soon as that Job finishes. The minimum value is 1 minute. If you specify a lower value, the Batch service rejects the schedule with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
  returns:
    description: "the recurrenceInterval value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
- uid: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.getStartWindow()"
  fullName: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.getStartWindow()"
  name: "getStartWindow()"
  nameWithType: "BatchJobScheduleConfiguration.getStartWindow()"
  summary: "Get the start<wbr>Window property: The time interval, starting from the time at which the schedule indicates a Job should be created, within which a Job must be created."
  syntax: "public Duration getStartWindow()"
  desc: "Get the startWindow property: The time interval, starting from the time at which the schedule indicates a Job should be created, within which a Job must be created. If a Job is not created within the startWindow interval, then the 'opportunity' is lost; no Job will be created until the next recurrence of the schedule. If the schedule is recurring, and the startWindow is longer than the recurrence interval, then this is equivalent to an infinite startWindow, because the Job that is 'due' in one recurrenceInterval is not carried forward into the next recurrence interval. The default is infinite. The minimum value is 1 minute. If you specify a lower value, the Batch service rejects the schedule with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
  returns:
    description: "the startWindow value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
- uid: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.setDoNotRunAfter(java.time.OffsetDateTime)"
  fullName: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.setDoNotRunAfter(OffsetDateTime doNotRunAfter)"
  name: "setDoNotRunAfter(OffsetDateTime doNotRunAfter)"
  nameWithType: "BatchJobScheduleConfiguration.setDoNotRunAfter(OffsetDateTime doNotRunAfter)"
  summary: "Set the do<wbr>Not<wbr>Run<wbr>After property: A time after which no Job will be created under this Job Schedule."
  parameters:
  - description: "the doNotRunAfter value to set."
    name: "doNotRunAfter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  syntax: "public BatchJobScheduleConfiguration setDoNotRunAfter(OffsetDateTime doNotRunAfter)"
  desc: "Set the doNotRunAfter property: A time after which no Job will be created under this Job Schedule. The schedule will move to the completed state as soon as this deadline is past and there is no active Job under this Job Schedule. If you do not specify a doNotRunAfter time, and you are creating a recurring Job Schedule, the Job Schedule will remain active until you explicitly terminate it."
  returns:
    description: "the BatchJobScheduleConfiguration object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobScheduleConfiguration?alt=com.azure.compute.batch.models.BatchJobScheduleConfiguration&text=BatchJobScheduleConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.setDoNotRunUntil(java.time.OffsetDateTime)"
  fullName: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.setDoNotRunUntil(OffsetDateTime doNotRunUntil)"
  name: "setDoNotRunUntil(OffsetDateTime doNotRunUntil)"
  nameWithType: "BatchJobScheduleConfiguration.setDoNotRunUntil(OffsetDateTime doNotRunUntil)"
  summary: "Set the do<wbr>Not<wbr>Run<wbr>Until property: The earliest time at which any Job may be created under this Job Schedule."
  parameters:
  - description: "the doNotRunUntil value to set."
    name: "doNotRunUntil"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  syntax: "public BatchJobScheduleConfiguration setDoNotRunUntil(OffsetDateTime doNotRunUntil)"
  desc: "Set the doNotRunUntil property: The earliest time at which any Job may be created under this Job Schedule. If you do not specify a doNotRunUntil time, the schedule becomes ready to create Jobs immediately."
  returns:
    description: "the BatchJobScheduleConfiguration object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobScheduleConfiguration?alt=com.azure.compute.batch.models.BatchJobScheduleConfiguration&text=BatchJobScheduleConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.setRecurrenceInterval(java.time.Duration)"
  fullName: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.setRecurrenceInterval(Duration recurrenceInterval)"
  name: "setRecurrenceInterval(Duration recurrenceInterval)"
  nameWithType: "BatchJobScheduleConfiguration.setRecurrenceInterval(Duration recurrenceInterval)"
  summary: "Set the recurrence<wbr>Interval property: The time interval between the start times of two successive Jobs under the Job Schedule."
  parameters:
  - description: "the recurrenceInterval value to set."
    name: "recurrenceInterval"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  syntax: "public BatchJobScheduleConfiguration setRecurrenceInterval(Duration recurrenceInterval)"
  desc: "Set the recurrenceInterval property: The time interval between the start times of two successive Jobs under the Job Schedule. A Job Schedule can have at most one active Job under it at any given time. Because a Job Schedule can have at most one active Job under it at any given time, if it is time to create a new Job under a Job Schedule, but the previous Job is still running, the Batch service will not create the new Job until the previous Job finishes. If the previous Job does not finish within the startWindow period of the new recurrenceInterval, then no new Job will be scheduled for that interval. For recurring Jobs, you should normally specify a jobManagerTask in the jobSpecification. If you do not use jobManagerTask, you will need an external process to monitor when Jobs are created, add Tasks to the Jobs and terminate the Jobs ready for the next recurrence. The default is that the schedule does not recur: one Job is created, within the startWindow after the doNotRunUntil time, and the schedule is complete as soon as that Job finishes. The minimum value is 1 minute. If you specify a lower value, the Batch service rejects the schedule with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
  returns:
    description: "the BatchJobScheduleConfiguration object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobScheduleConfiguration?alt=com.azure.compute.batch.models.BatchJobScheduleConfiguration&text=BatchJobScheduleConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.setStartWindow(java.time.Duration)"
  fullName: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.setStartWindow(Duration startWindow)"
  name: "setStartWindow(Duration startWindow)"
  nameWithType: "BatchJobScheduleConfiguration.setStartWindow(Duration startWindow)"
  summary: "Set the start<wbr>Window property: The time interval, starting from the time at which the schedule indicates a Job should be created, within which a Job must be created."
  parameters:
  - description: "the startWindow value to set."
    name: "startWindow"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  syntax: "public BatchJobScheduleConfiguration setStartWindow(Duration startWindow)"
  desc: "Set the startWindow property: The time interval, starting from the time at which the schedule indicates a Job should be created, within which a Job must be created. If a Job is not created within the startWindow interval, then the 'opportunity' is lost; no Job will be created until the next recurrence of the schedule. If the schedule is recurring, and the startWindow is longer than the recurrence interval, then this is equivalent to an infinite startWindow, because the Job that is 'due' in one recurrenceInterval is not carried forward into the next recurrence interval. The default is infinite. The minimum value is 1 minute. If you specify a lower value, the Batch service rejects the schedule with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
  returns:
    description: "the BatchJobScheduleConfiguration object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobScheduleConfiguration?alt=com.azure.compute.batch.models.BatchJobScheduleConfiguration&text=BatchJobScheduleConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.compute.batch.models.BatchJobScheduleConfiguration.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "BatchJobScheduleConfiguration.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The schedule according to which Jobs will be created. All times are fixed respective to UTC and are not impacted by daylight saving time."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.BatchJobScheduleConfiguration?alt=com.azure.compute.batch.models.BatchJobScheduleConfiguration&text=BatchJobScheduleConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.compute.batch.models"
artifact: com.azure:azure-compute-batch:1.0.0-beta.1
