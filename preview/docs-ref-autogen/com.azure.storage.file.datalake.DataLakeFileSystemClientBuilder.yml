### YamlMime:JavaType
uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder"
fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder"
name: "DataLakeFileSystemClientBuilder"
nameWithType: "DataLakeFileSystemClientBuilder"
summary: "This class provides a fluent builder API to help aid the configuration and instantiation of <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileSystemClients\"></xref> and <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileSystemAsyncClients\"></xref>, call <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"buildClient\"></xref> and <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"buildAsyncClient\"></xref> respectively to construct an instance of the desired client."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DataLakeFileSystemClientBuilder implements TokenCredentialTrait<DataLakeFileSystemClientBuilder>, AzureNamedKeyCredentialTrait<DataLakeFileSystemClientBuilder>, AzureSasCredentialTrait<DataLakeFileSystemClientBuilder>, HttpTrait<DataLakeFileSystemClientBuilder>, ConfigurationTrait<DataLakeFileSystemClientBuilder>, EndpointTrait<DataLakeFileSystemClientBuilder>"
constructors:
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.DataLakeFileSystemClientBuilder()"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.DataLakeFileSystemClientBuilder()"
  name: "DataLakeFileSystemClientBuilder()"
  nameWithType: "DataLakeFileSystemClientBuilder.DataLakeFileSystemClientBuilder()"
  summary: "Creates a builder instance that is able to configure and construct <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileSystemClients\"></xref> and <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileSystemAsyncClients\"></xref>."
  syntax: "public DataLakeFileSystemClientBuilder()"
  desc: "Creates a builder instance that is able to configure and construct <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileSystemClients\"></xref> and <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileSystemAsyncClients\"></xref>."
methods:
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.addPolicy(HttpPipelinePolicy pipelinePolicy)"
  name: "addPolicy(HttpPipelinePolicy pipelinePolicy)"
  nameWithType: "DataLakeFileSystemClientBuilder.addPolicy(HttpPipelinePolicy pipelinePolicy)"
  summary: "Adds a <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"pipeline policy\"></xref> to apply on each request sent."
  parameters:
  - description: "A <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"pipeline policy\"></xref>."
    name: "pipelinePolicy"
    type: "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemClientBuilder addPolicy(HttpPipelinePolicy pipelinePolicy)"
  desc: "Adds a <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"pipeline policy\"></xref> to apply on each request sent.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications."
  returns:
    description: "the updated DataLakeFileSystemClientBuilder object"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.buildAsyncClient()"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.buildAsyncClient()"
  name: "buildAsyncClient()"
  nameWithType: "DataLakeFileSystemClientBuilder.buildAsyncClient()"
  summary: "**Code Samples**"
  syntax: "public DataLakeFileSystemAsyncClient buildAsyncClient()"
  desc: "**Code Samples**\n\n```java\nDataLakeFileSystemAsyncClient client = new DataLakeFileSystemClientBuilder()\n     .endpoint(endpoint)\n     .credential(storageSharedKeyCredential)\n     .buildAsyncClient();\n```"
  returns:
    description: "a <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeFileSystemAsyncClient\"></xref> created from the configurations in this builder."
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient?alt=com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient&text=DataLakeFileSystemAsyncClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.buildClient()"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.buildClient()"
  name: "buildClient()"
  nameWithType: "DataLakeFileSystemClientBuilder.buildClient()"
  summary: "**Code Samples**"
  syntax: "public DataLakeFileSystemClient buildClient()"
  desc: "**Code Samples**\n\n```java\nDataLakeFileSystemClient client = new DataLakeFileSystemClientBuilder()\n     .endpoint(endpoint)\n     .credential(storageSharedKeyCredential)\n     .buildClient();\n```"
  returns:
    description: "a <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeFileSystemClient\"></xref> created from the configurations in this builder."
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClient?alt=com.azure.storage.file.datalake.DataLakeFileSystemClient&text=DataLakeFileSystemClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.clientOptions(com.azure.core.util.ClientOptions)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.clientOptions(ClientOptions clientOptions)"
  name: "clientOptions(ClientOptions clientOptions)"
  nameWithType: "DataLakeFileSystemClientBuilder.clientOptions(ClientOptions clientOptions)"
  summary: "Allows for setting common properties such as application ID, headers, proxy configuration, etc."
  parameters:
  - description: "A configured instance of <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClientOptions\"></xref>."
    name: "clientOptions"
    type: "<xref href=\"com.azure.core.util.ClientOptions?alt=com.azure.core.util.ClientOptions&text=ClientOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemClientBuilder clientOptions(ClientOptions clientOptions)"
  desc: "Allows for setting common properties such as application ID, headers, proxy configuration, etc. Note that it is recommended that this method be called with an instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClientOptions\"></xref> class (a subclass of the <xref uid=\"com.azure.core.util.ClientOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions\"></xref> base class). The HttpClientOptions subclass provides more configuration options suitable for HTTP clients, which is applicable for any class that implements this HttpTrait interface.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications."
  returns:
    description: "the updated DataLakeFileSystemClientBuilder object"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.configuration(com.azure.core.util.Configuration)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.configuration(Configuration configuration)"
  name: "configuration(Configuration configuration)"
  nameWithType: "DataLakeFileSystemClientBuilder.configuration(Configuration configuration)"
  summary: "Sets the configuration object used to retrieve environment configuration values during building of the client."
  parameters:
  - description: "Configuration store used to retrieve environment configurations."
    name: "configuration"
    type: "<xref href=\"com.azure.core.util.Configuration?alt=com.azure.core.util.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemClientBuilder configuration(Configuration configuration)"
  desc: "Sets the configuration object used to retrieve environment configuration values during building of the client."
  returns:
    description: "the updated DataLakeFileSystemClientBuilder object"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.credential(com.azure.core.credential.AzureNamedKeyCredential)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.credential(AzureNamedKeyCredential credential)"
  name: "credential(AzureNamedKeyCredential credential)"
  nameWithType: "DataLakeFileSystemClientBuilder.credential(AzureNamedKeyCredential credential)"
  summary: "Sets the <xref uid=\"com.azure.core.credential.AzureNamedKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureNamedKeyCredential\"></xref> used to authorize requests sent to the service."
  parameters:
  - description: "<xref uid=\"com.azure.core.credential.AzureNamedKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureNamedKeyCredential\"></xref>."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.AzureNamedKeyCredential?alt=com.azure.core.credential.AzureNamedKeyCredential&text=AzureNamedKeyCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemClientBuilder credential(AzureNamedKeyCredential credential)"
  desc: "Sets the <xref uid=\"com.azure.core.credential.AzureNamedKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureNamedKeyCredential\"></xref> used to authorize requests sent to the service."
  returns:
    description: "the updated DataLakeFileSystemClientBuilder"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.credential(com.azure.core.credential.AzureSasCredential)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.credential(AzureSasCredential credential)"
  name: "credential(AzureSasCredential credential)"
  nameWithType: "DataLakeFileSystemClientBuilder.credential(AzureSasCredential credential)"
  summary: "Sets the <xref uid=\"com.azure.core.credential.AzureSasCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureSasCredential\"></xref> used to authorize requests sent to the service."
  parameters:
  - description: "<xref uid=\"com.azure.core.credential.AzureSasCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureSasCredential\"></xref> used to authorize requests sent to the service."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.AzureSasCredential?alt=com.azure.core.credential.AzureSasCredential&text=AzureSasCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemClientBuilder credential(AzureSasCredential credential)"
  desc: "Sets the <xref uid=\"com.azure.core.credential.AzureSasCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureSasCredential\"></xref> used to authorize requests sent to the service."
  returns:
    description: "the updated DataLakeFileSystemClientBuilder"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.credential(com.azure.core.credential.TokenCredential)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.credential(TokenCredential credential)"
  name: "credential(TokenCredential credential)"
  nameWithType: "DataLakeFileSystemClientBuilder.credential(TokenCredential credential)"
  summary: "Sets the <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> used to authorize requests sent to the service."
  parameters:
  - description: "<xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> used to authorize requests sent to the service."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemClientBuilder credential(TokenCredential credential)"
  desc: "Sets the <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> used to authorize requests sent to the service. Refer to the Azure SDK for Java [identity and authentication][] documentation for more details on proper usage of the <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> type.\n\n\n[identity and authentication]: https://aka.ms/azsdk/java/docs/identity"
  returns:
    description: "the updated DataLakeFileSystemClientBuilder"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.credential(com.azure.storage.common.StorageSharedKeyCredential)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.credential(StorageSharedKeyCredential credential)"
  name: "credential(StorageSharedKeyCredential credential)"
  nameWithType: "DataLakeFileSystemClientBuilder.credential(StorageSharedKeyCredential credential)"
  summary: "Sets the <xref uid=\"com.azure.storage.common.StorageSharedKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StorageSharedKeyCredential\"></xref> used to authorize requests sent to the service."
  parameters:
  - description: "<xref uid=\"com.azure.storage.common.StorageSharedKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StorageSharedKeyCredential\"></xref>."
    name: "credential"
    type: "<xref href=\"com.azure.storage.common.StorageSharedKeyCredential?alt=com.azure.storage.common.StorageSharedKeyCredential&text=StorageSharedKeyCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemClientBuilder credential(StorageSharedKeyCredential credential)"
  desc: "Sets the <xref uid=\"com.azure.storage.common.StorageSharedKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StorageSharedKeyCredential\"></xref> used to authorize requests sent to the service."
  returns:
    description: "the updated DataLakeFileSystemClientBuilder"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.customerProvidedKey(com.azure.storage.file.datalake.models.CustomerProvidedKey)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.customerProvidedKey(CustomerProvidedKey customerProvidedKey)"
  name: "customerProvidedKey(CustomerProvidedKey customerProvidedKey)"
  nameWithType: "DataLakeFileSystemClientBuilder.customerProvidedKey(CustomerProvidedKey customerProvidedKey)"
  summary: "Sets the <xref uid=\"com.azure.storage.file.datalake.models.CustomerProvidedKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"customer provided key\"></xref> that is used to encrypt file contents on the server."
  parameters:
  - description: "Customer provided key containing the encryption key information."
    name: "customerProvidedKey"
    type: "<xref href=\"com.azure.storage.file.datalake.models.CustomerProvidedKey?alt=com.azure.storage.file.datalake.models.CustomerProvidedKey&text=CustomerProvidedKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemClientBuilder customerProvidedKey(CustomerProvidedKey customerProvidedKey)"
  desc: "Sets the <xref uid=\"com.azure.storage.file.datalake.models.CustomerProvidedKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"customer provided key\"></xref> that is used to encrypt file contents on the server."
  returns:
    description: "the updated DataLakeFileSystemClientBuilder object"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.endpoint(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.endpoint(String endpoint)"
  name: "endpoint(String endpoint)"
  nameWithType: "DataLakeFileSystemClientBuilder.endpoint(String endpoint)"
  summary: "Sets the service endpoint, additionally parses it for information (SAS token, file system name)"
  parameters:
  - description: "URL of the service"
    name: "endpoint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemClientBuilder endpoint(String endpoint)"
  desc: "Sets the service endpoint, additionally parses it for information (SAS token, file system name)"
  returns:
    description: "the updated DataLakeFileSystemClientBuilder object"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.fileSystemName(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.fileSystemName(String fileSystemName)"
  name: "fileSystemName(String fileSystemName)"
  nameWithType: "DataLakeFileSystemClientBuilder.fileSystemName(String fileSystemName)"
  summary: "Sets the name of the file system."
  parameters:
  - description: "Name of the file system. If the value <code>null</code> or empty the root file system,\n <code>$root</code>, will be used."
    name: "fileSystemName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemClientBuilder fileSystemName(String fileSystemName)"
  desc: "Sets the name of the file system."
  returns:
    description: "the updated DataLakeFileSystemClientBuilder object"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.getDefaultHttpLogOptions()"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.getDefaultHttpLogOptions()"
  name: "getDefaultHttpLogOptions()"
  nameWithType: "DataLakeFileSystemClientBuilder.getDefaultHttpLogOptions()"
  summary: "Gets the default Storage allowlist log headers and query parameters."
  modifiers:
  - "static"
  syntax: "public static HttpLogOptions getDefaultHttpLogOptions()"
  desc: "Gets the default Storage allowlist log headers and query parameters."
  returns:
    description: "the default http log options."
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.httpClient(HttpClient httpClient)"
  name: "httpClient(HttpClient httpClient)"
  nameWithType: "DataLakeFileSystemClientBuilder.httpClient(HttpClient httpClient)"
  summary: "Sets the <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> to use for sending and receiving requests to and from the service."
  parameters:
  - description: "The <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> to use for requests."
    name: "httpClient"
    type: "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemClientBuilder httpClient(HttpClient httpClient)"
  desc: "Sets the <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> to use for sending and receiving requests to and from the service.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications."
  returns:
    description: "the updated DataLakeFileSystemClientBuilder object"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.httpLogOptions(HttpLogOptions logOptions)"
  name: "httpLogOptions(HttpLogOptions logOptions)"
  nameWithType: "DataLakeFileSystemClientBuilder.httpLogOptions(HttpLogOptions logOptions)"
  summary: "Sets the <xref uid=\"com.azure.core.http.policy.HttpLogOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"logging configuration\"></xref> to use when sending and receiving requests to and from the service."
  parameters:
  - description: "The <xref uid=\"com.azure.core.http.policy.HttpLogOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"logging configuration\"></xref> to use when sending and receiving requests to\n and from the service."
    name: "logOptions"
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemClientBuilder httpLogOptions(HttpLogOptions logOptions)"
  desc: "Sets the <xref uid=\"com.azure.core.http.policy.HttpLogOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"logging configuration\"></xref> to use when sending and receiving requests to and from the service. If a `logLevel` is not provided, default value of <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpLogDetailLevel#NONE\"></xref> is set.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications."
  returns:
    description: "the updated DataLakeFileSystemClientBuilder object"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.pipeline(HttpPipeline httpPipeline)"
  name: "pipeline(HttpPipeline httpPipeline)"
  nameWithType: "DataLakeFileSystemClientBuilder.pipeline(HttpPipeline httpPipeline)"
  summary: "Sets the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> to use for the service client."
  parameters:
  - description: "<xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> to use for sending service requests and receiving responses."
    name: "httpPipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemClientBuilder pipeline(HttpPipeline httpPipeline)"
  desc: "Sets the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> to use for the service client.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications.\n\nThe <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"endpoint\"></xref> is not ignored when `pipeline` is set."
  returns:
    description: "the updated DataLakeFileSystemClientBuilder object"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.retryOptions(com.azure.core.http.policy.RetryOptions)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.retryOptions(RetryOptions retryOptions)"
  name: "retryOptions(RetryOptions retryOptions)"
  nameWithType: "DataLakeFileSystemClientBuilder.retryOptions(RetryOptions retryOptions)"
  summary: "Sets the <xref uid=\"com.azure.core.http.policy.RetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryOptions\"></xref> for all the requests made through the client."
  parameters:
  - description: "The <xref uid=\"com.azure.core.http.policy.RetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryOptions\"></xref> to use for all the requests made through the client."
    name: "retryOptions"
    type: "<xref href=\"com.azure.core.http.policy.RetryOptions?alt=com.azure.core.http.policy.RetryOptions&text=RetryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemClientBuilder retryOptions(RetryOptions retryOptions)"
  desc: "Sets the <xref uid=\"com.azure.core.http.policy.RetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryOptions\"></xref> for all the requests made through the client.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications.\n\nSetting this is mutually exclusive with using <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#retryOptions(RequestRetryOptions)\"></xref>. Consider using <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#retryOptions(RequestRetryOptions)\"></xref> to also set storage specific options."
  returns:
    description: "the updated DataLakeFileSystemClientBuilder object"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.retryOptions(RequestRetryOptions retryOptions)"
  name: "retryOptions(RequestRetryOptions retryOptions)"
  nameWithType: "DataLakeFileSystemClientBuilder.retryOptions(RequestRetryOptions retryOptions)"
  summary: "Sets the request retry options for all the requests made through the client."
  parameters:
  - description: "<xref uid=\"com.azure.storage.common.policy.RequestRetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestRetryOptions\"></xref>."
    name: "retryOptions"
    type: "<xref href=\"com.azure.storage.common.policy.RequestRetryOptions?alt=com.azure.storage.common.policy.RequestRetryOptions&text=RequestRetryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemClientBuilder retryOptions(RequestRetryOptions retryOptions)"
  desc: "Sets the request retry options for all the requests made through the client. Setting this is mutually exclusive with using <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.retryOptions(com.azure.core.http.policy.RetryOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#retryOptions(RetryOptions)\"></xref>."
  returns:
    description: "the updated DataLakeFileSystemClientBuilder object."
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.sasToken(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.sasToken(String sasToken)"
  name: "sasToken(String sasToken)"
  nameWithType: "DataLakeFileSystemClientBuilder.sasToken(String sasToken)"
  summary: "Sets the SAS token used to authorize requests sent to the service."
  parameters:
  - description: "The SAS token to use for authenticating requests. This string should only be the query parameters\n (with or without a leading '?') and not a full url."
    name: "sasToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemClientBuilder sasToken(String sasToken)"
  desc: "Sets the SAS token used to authorize requests sent to the service."
  returns:
    description: "the updated DataLakeFileSystemClientBuilder"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.serviceVersion(com.azure.storage.file.datalake.DataLakeServiceVersion)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.serviceVersion(DataLakeServiceVersion version)"
  name: "serviceVersion(DataLakeServiceVersion version)"
  nameWithType: "DataLakeFileSystemClientBuilder.serviceVersion(DataLakeServiceVersion version)"
  summary: "Sets the <xref uid=\"com.azure.storage.file.datalake.DataLakeServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeServiceVersion\"></xref> that is used when making API requests."
  parameters:
  - description: "<xref uid=\"com.azure.storage.file.datalake.DataLakeServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeServiceVersion\"></xref> of the service to be used when making requests."
    name: "version"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeServiceVersion?alt=com.azure.storage.file.datalake.DataLakeServiceVersion&text=DataLakeServiceVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemClientBuilder serviceVersion(DataLakeServiceVersion version)"
  desc: "Sets the <xref uid=\"com.azure.storage.file.datalake.DataLakeServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeServiceVersion\"></xref> that is used when making API requests.\n\nIf a service version is not provided, the service version that will be used will be the latest known service version based on the version of the client library being used. If no service version is specified, updating to a newer version of the client library will have the result of potentially moving to a newer service version.\n\nTargeting a specific service version may also mean that the service will return an error for newer APIs."
  returns:
    description: "the updated DataLakeFileSystemClientBuilder object"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.setAnonymousAccess()"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.setAnonymousAccess()"
  name: "setAnonymousAccess()"
  nameWithType: "DataLakeFileSystemClientBuilder.setAnonymousAccess()"
  summary: "Clears the credential used to authorize the request."
  syntax: "public DataLakeFileSystemClientBuilder setAnonymousAccess()"
  desc: "Clears the credential used to authorize the request.\n\nThis is for file systems that are publicly accessible."
  returns:
    description: "the updated DataLakeFileSystemClientBuilder"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "This class provides a fluent builder API to help aid the configuration and instantiation of <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileSystemClients\"></xref> and <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileSystemAsyncClients\"></xref>, call <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"buildClient\"></xref> and <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"buildAsyncClient\"></xref> respectively to construct an instance of the desired client.\n\nThe following information must be provided on this builder:\n\n *  the endpoint through `.endpoint()`, including the file system name, in the format of `https://{accountName}.dfs.core.windows.net/{fileSystemName}`.\n *  the credential through `.credential()` or `.connectionString()` if the file system is not publicly accessible."
implements:
- "<xref href=\"com.azure.core.client.traits.AzureNamedKeyCredentialTrait?alt=com.azure.core.client.traits.AzureNamedKeyCredentialTrait&text=AzureNamedKeyCredentialTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.AzureSasCredentialTrait?alt=com.azure.core.client.traits.AzureSasCredentialTrait&text=AzureSasCredentialTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.ConfigurationTrait?alt=com.azure.core.client.traits.ConfigurationTrait&text=ConfigurationTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.EndpointTrait?alt=com.azure.core.client.traits.EndpointTrait&text=EndpointTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.HttpTrait?alt=com.azure.core.client.traits.HttpTrait&text=HttpTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.TokenCredentialTrait?alt=com.azure.core.client.traits.TokenCredentialTrait&text=TokenCredentialTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder?alt=com.azure.storage.file.datalake.DataLakeFileSystemClientBuilder&text=DataLakeFileSystemClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.11.0-beta.1
