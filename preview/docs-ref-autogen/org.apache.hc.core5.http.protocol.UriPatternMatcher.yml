### YamlMime:JavaType
uid: "org.apache.hc.core5.http.protocol.UriPatternMatcher"
fullName: "org.apache.hc.core5.http.protocol.UriPatternMatcher<T>"
name: "UriPatternMatcher<T>"
nameWithType: "UriPatternMatcher<T>"
summary: "Maintains a map of objects keyed by a request URI pattern.\n\nPatterns may have three formats:\n\n *  `*`\n *  `*`\n *  `*`\n\nThis class can be used to resolve an object matching a particular request URI."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class UriPatternMatcher<T> implements LookupRegistry<T>"
constructors:
- "org.apache.hc.core5.http.protocol.UriPatternMatcher.UriPatternMatcher()"
methods:
- "org.apache.hc.core5.http.protocol.UriPatternMatcher.entrySet()"
- "org.apache.hc.core5.http.protocol.UriPatternMatcher.lookup(java.lang.String)"
- "org.apache.hc.core5.http.protocol.UriPatternMatcher.matchUriRequestPattern(java.lang.String,java.lang.String)"
- "org.apache.hc.core5.http.protocol.UriPatternMatcher.register(java.lang.String,T)"
- "org.apache.hc.core5.http.protocol.UriPatternMatcher.toString()"
- "org.apache.hc.core5.http.protocol.UriPatternMatcher.unregister(java.lang.String)"
type: "class"
typeParameters:
- name: "T"
implements:
- "<xref href=\"org.apache.hc.core5.http.protocol.LookupRegistry?alt=org.apache.hc.core5.http.protocol.LookupRegistry&text=LookupRegistry\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "org.apache.hc.core5.http.protocol"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
