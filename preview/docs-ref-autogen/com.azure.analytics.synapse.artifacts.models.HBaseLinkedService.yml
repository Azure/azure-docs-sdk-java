### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService"
fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService"
name: "HBaseLinkedService"
nameWithType: "HBaseLinkedService"
summary: "HBase server linked service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.analytics.synapse.artifacts.models.LinkedService?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.analytics.synapse.artifacts.models.LinkedService.getAdditionalProperties()"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.getAnnotations()"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.getConnectVia()"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.getDescription()"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.getParameters()"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.setAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.setAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.setConnectVia(com.azure.analytics.synapse.artifacts.models.IntegrationRuntimeReference)"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.setDescription(java.lang.String)"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.setParameters(java.util.Map<java.lang.String,com.azure.analytics.synapse.artifacts.models.ParameterSpecification>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class HBaseLinkedService extends LinkedService"
constructors:
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.HBaseLinkedService()"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.HBaseLinkedService()"
  name: "HBaseLinkedService()"
  nameWithType: "HBaseLinkedService.HBaseLinkedService()"
  syntax: "public HBaseLinkedService()"
methods:
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getAllowHostNameCNMismatch()"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getAllowHostNameCNMismatch()"
  name: "getAllowHostNameCNMismatch()"
  nameWithType: "HBaseLinkedService.getAllowHostNameCNMismatch()"
  summary: "Get the allow<wbr>Host<wbr>Name<wbr>CNMismatch property: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL."
  syntax: "public Object getAllowHostNameCNMismatch()"
  desc: "Get the allowHostNameCNMismatch property: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
  returns:
    description: "the allowHostNameCNMismatch value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getAllowSelfSignedServerCert()"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getAllowSelfSignedServerCert()"
  name: "getAllowSelfSignedServerCert()"
  nameWithType: "HBaseLinkedService.getAllowSelfSignedServerCert()"
  summary: "Get the allow<wbr>Self<wbr>Signed<wbr>Server<wbr>Cert property: Specifies whether to allow self-signed certificates from the server."
  syntax: "public Object getAllowSelfSignedServerCert()"
  desc: "Get the allowSelfSignedServerCert property: Specifies whether to allow self-signed certificates from the server. The default value is false."
  returns:
    description: "the allowSelfSignedServerCert value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getAuthenticationType()"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getAuthenticationType()"
  name: "getAuthenticationType()"
  nameWithType: "HBaseLinkedService.getAuthenticationType()"
  summary: "Get the authentication<wbr>Type property: The authentication mechanism to use to connect to the HBase server."
  syntax: "public HBaseAuthenticationType getAuthenticationType()"
  desc: "Get the authenticationType property: The authentication mechanism to use to connect to the HBase server."
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.HBaseAuthenticationType?alt=com.azure.analytics.synapse.artifacts.models.HBaseAuthenticationType&text=HBaseAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getEnableSsl()"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getEnableSsl()"
  name: "getEnableSsl()"
  nameWithType: "HBaseLinkedService.getEnableSsl()"
  summary: "Get the enable<wbr>Ssl property: Specifies whether the connections to the server are encrypted using SSL."
  syntax: "public Object getEnableSsl()"
  desc: "Get the enableSsl property: Specifies whether the connections to the server are encrypted using SSL. The default value is false."
  returns:
    description: "the enableSsl value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getEncryptedCredential()"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getEncryptedCredential()"
  name: "getEncryptedCredential()"
  nameWithType: "HBaseLinkedService.getEncryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public Object getEncryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getHost()"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getHost()"
  name: "getHost()"
  nameWithType: "HBaseLinkedService.getHost()"
  summary: "Get the host property: The IP address or host name of the HBase server."
  syntax: "public Object getHost()"
  desc: "Get the host property: The IP address or host name of the HBase server. (i.e. 192.168.222.160)."
  returns:
    description: "the host value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getHttpPath()"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getHttpPath()"
  name: "getHttpPath()"
  nameWithType: "HBaseLinkedService.getHttpPath()"
  summary: "Get the http<wbr>Path property: The partial URL corresponding to the HBase server."
  syntax: "public Object getHttpPath()"
  desc: "Get the httpPath property: The partial URL corresponding to the HBase server. (i.e. /gateway/sandbox/hbase/version)."
  returns:
    description: "the httpPath value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getPassword()"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getPassword()"
  name: "getPassword()"
  nameWithType: "HBaseLinkedService.getPassword()"
  summary: "Get the password property: The password corresponding to the user name."
  syntax: "public SecretBase getPassword()"
  desc: "Get the password property: The password corresponding to the user name."
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SecretBase?alt=com.azure.analytics.synapse.artifacts.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getPort()"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getPort()"
  name: "getPort()"
  nameWithType: "HBaseLinkedService.getPort()"
  summary: "Get the port property: The TCP port that the HBase instance uses to listen for client connections."
  syntax: "public Object getPort()"
  desc: "Get the port property: The TCP port that the HBase instance uses to listen for client connections. The default value is 9090."
  returns:
    description: "the port value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getTrustedCertPath()"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getTrustedCertPath()"
  name: "getTrustedCertPath()"
  nameWithType: "HBaseLinkedService.getTrustedCertPath()"
  summary: "Get the trusted<wbr>Cert<wbr>Path property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL."
  syntax: "public Object getTrustedCertPath()"
  desc: "Get the trustedCertPath property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
  returns:
    description: "the trustedCertPath value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getUsername()"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.getUsername()"
  name: "getUsername()"
  nameWithType: "HBaseLinkedService.getUsername()"
  summary: "Get the username property: The user name used to connect to the HBase instance."
  syntax: "public Object getUsername()"
  desc: "Get the username property: The user name used to connect to the HBase instance."
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setAllowHostNameCNMismatch(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setAllowHostNameCNMismatch(Object allowHostNameCNMismatch)"
  name: "setAllowHostNameCNMismatch(Object allowHostNameCNMismatch)"
  nameWithType: "HBaseLinkedService.setAllowHostNameCNMismatch(Object allowHostNameCNMismatch)"
  summary: "Set the allow<wbr>Host<wbr>Name<wbr>CNMismatch property: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL."
  parameters:
  - description: "the allowHostNameCNMismatch value to set."
    name: "allowHostNameCNMismatch"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HBaseLinkedService setAllowHostNameCNMismatch(Object allowHostNameCNMismatch)"
  desc: "Set the allowHostNameCNMismatch property: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
  returns:
    description: "the HBaseLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.HBaseLinkedService?alt=com.azure.analytics.synapse.artifacts.models.HBaseLinkedService&text=HBaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setAllowSelfSignedServerCert(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  name: "setAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  nameWithType: "HBaseLinkedService.setAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  summary: "Set the allow<wbr>Self<wbr>Signed<wbr>Server<wbr>Cert property: Specifies whether to allow self-signed certificates from the server."
  parameters:
  - description: "the allowSelfSignedServerCert value to set."
    name: "allowSelfSignedServerCert"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HBaseLinkedService setAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  desc: "Set the allowSelfSignedServerCert property: Specifies whether to allow self-signed certificates from the server. The default value is false."
  returns:
    description: "the HBaseLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.HBaseLinkedService?alt=com.azure.analytics.synapse.artifacts.models.HBaseLinkedService&text=HBaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setAnnotations(List<Object> annotations)"
  name: "setAnnotations(List<Object> annotations)"
  nameWithType: "HBaseLinkedService.setAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the linked service."
  overridden: "com.azure.analytics.synapse.artifacts.models.LinkedService.setAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public HBaseLinkedService setAnnotations(List<Object> annotations)"
  desc: "Set the annotations property: List of tags that can be used for describing the linked service."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.HBaseLinkedService?alt=com.azure.analytics.synapse.artifacts.models.HBaseLinkedService&text=HBaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setAuthenticationType(com.azure.analytics.synapse.artifacts.models.HBaseAuthenticationType)"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setAuthenticationType(HBaseAuthenticationType authenticationType)"
  name: "setAuthenticationType(HBaseAuthenticationType authenticationType)"
  nameWithType: "HBaseLinkedService.setAuthenticationType(HBaseAuthenticationType authenticationType)"
  summary: "Set the authentication<wbr>Type property: The authentication mechanism to use to connect to the HBase server."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.HBaseAuthenticationType?alt=com.azure.analytics.synapse.artifacts.models.HBaseAuthenticationType&text=HBaseAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HBaseLinkedService setAuthenticationType(HBaseAuthenticationType authenticationType)"
  desc: "Set the authenticationType property: The authentication mechanism to use to connect to the HBase server."
  returns:
    description: "the HBaseLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.HBaseLinkedService?alt=com.azure.analytics.synapse.artifacts.models.HBaseLinkedService&text=HBaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setConnectVia(com.azure.analytics.synapse.artifacts.models.IntegrationRuntimeReference)"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setConnectVia(IntegrationRuntimeReference connectVia)"
  name: "setConnectVia(IntegrationRuntimeReference connectVia)"
  nameWithType: "HBaseLinkedService.setConnectVia(IntegrationRuntimeReference connectVia)"
  summary: "Set the connect<wbr>Via property: The integration runtime reference."
  overridden: "com.azure.analytics.synapse.artifacts.models.LinkedService.setConnectVia(com.azure.analytics.synapse.artifacts.models.IntegrationRuntimeReference)"
  parameters:
  - name: "connectVia"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.IntegrationRuntimeReference?alt=com.azure.analytics.synapse.artifacts.models.IntegrationRuntimeReference&text=IntegrationRuntimeReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HBaseLinkedService setConnectVia(IntegrationRuntimeReference connectVia)"
  desc: "Set the connectVia property: The integration runtime reference."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.HBaseLinkedService?alt=com.azure.analytics.synapse.artifacts.models.HBaseLinkedService&text=HBaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setDescription(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setDescription(String description)"
  name: "setDescription(String description)"
  nameWithType: "HBaseLinkedService.setDescription(String description)"
  summary: "Set the description property: Linked service description."
  overridden: "com.azure.analytics.synapse.artifacts.models.LinkedService.setDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HBaseLinkedService setDescription(String description)"
  desc: "Set the description property: Linked service description."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.HBaseLinkedService?alt=com.azure.analytics.synapse.artifacts.models.HBaseLinkedService&text=HBaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setEnableSsl(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setEnableSsl(Object enableSsl)"
  name: "setEnableSsl(Object enableSsl)"
  nameWithType: "HBaseLinkedService.setEnableSsl(Object enableSsl)"
  summary: "Set the enable<wbr>Ssl property: Specifies whether the connections to the server are encrypted using SSL."
  parameters:
  - description: "the enableSsl value to set."
    name: "enableSsl"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HBaseLinkedService setEnableSsl(Object enableSsl)"
  desc: "Set the enableSsl property: Specifies whether the connections to the server are encrypted using SSL. The default value is false."
  returns:
    description: "the HBaseLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.HBaseLinkedService?alt=com.azure.analytics.synapse.artifacts.models.HBaseLinkedService&text=HBaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setEncryptedCredential(Object encryptedCredential)"
  name: "setEncryptedCredential(Object encryptedCredential)"
  nameWithType: "HBaseLinkedService.setEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HBaseLinkedService setEncryptedCredential(Object encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the HBaseLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.HBaseLinkedService?alt=com.azure.analytics.synapse.artifacts.models.HBaseLinkedService&text=HBaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setHost(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setHost(Object host)"
  name: "setHost(Object host)"
  nameWithType: "HBaseLinkedService.setHost(Object host)"
  summary: "Set the host property: The IP address or host name of the HBase server."
  parameters:
  - description: "the host value to set."
    name: "host"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HBaseLinkedService setHost(Object host)"
  desc: "Set the host property: The IP address or host name of the HBase server. (i.e. 192.168.222.160)."
  returns:
    description: "the HBaseLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.HBaseLinkedService?alt=com.azure.analytics.synapse.artifacts.models.HBaseLinkedService&text=HBaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setHttpPath(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setHttpPath(Object httpPath)"
  name: "setHttpPath(Object httpPath)"
  nameWithType: "HBaseLinkedService.setHttpPath(Object httpPath)"
  summary: "Set the http<wbr>Path property: The partial URL corresponding to the HBase server."
  parameters:
  - description: "the httpPath value to set."
    name: "httpPath"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HBaseLinkedService setHttpPath(Object httpPath)"
  desc: "Set the httpPath property: The partial URL corresponding to the HBase server. (i.e. /gateway/sandbox/hbase/version)."
  returns:
    description: "the HBaseLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.HBaseLinkedService?alt=com.azure.analytics.synapse.artifacts.models.HBaseLinkedService&text=HBaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setParameters(java.util.Map<java.lang.String,com.azure.analytics.synapse.artifacts.models.ParameterSpecification>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setParameters(Map<String,ParameterSpecification> parameters)"
  name: "setParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "HBaseLinkedService.setParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: Parameters for linked service."
  overridden: "com.azure.analytics.synapse.artifacts.models.LinkedService.setParameters(java.util.Map<java.lang.String,com.azure.analytics.synapse.artifacts.models.ParameterSpecification>)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.analytics.synapse.artifacts.models.ParameterSpecification?alt=com.azure.analytics.synapse.artifacts.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public HBaseLinkedService setParameters(Map<String,ParameterSpecification> parameters)"
  desc: "Set the parameters property: Parameters for linked service."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.HBaseLinkedService?alt=com.azure.analytics.synapse.artifacts.models.HBaseLinkedService&text=HBaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setPassword(com.azure.analytics.synapse.artifacts.models.SecretBase)"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setPassword(SecretBase password)"
  name: "setPassword(SecretBase password)"
  nameWithType: "HBaseLinkedService.setPassword(SecretBase password)"
  summary: "Set the password property: The password corresponding to the user name."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SecretBase?alt=com.azure.analytics.synapse.artifacts.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HBaseLinkedService setPassword(SecretBase password)"
  desc: "Set the password property: The password corresponding to the user name."
  returns:
    description: "the HBaseLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.HBaseLinkedService?alt=com.azure.analytics.synapse.artifacts.models.HBaseLinkedService&text=HBaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setPort(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setPort(Object port)"
  name: "setPort(Object port)"
  nameWithType: "HBaseLinkedService.setPort(Object port)"
  summary: "Set the port property: The TCP port that the HBase instance uses to listen for client connections."
  parameters:
  - description: "the port value to set."
    name: "port"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HBaseLinkedService setPort(Object port)"
  desc: "Set the port property: The TCP port that the HBase instance uses to listen for client connections. The default value is 9090."
  returns:
    description: "the HBaseLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.HBaseLinkedService?alt=com.azure.analytics.synapse.artifacts.models.HBaseLinkedService&text=HBaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setTrustedCertPath(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setTrustedCertPath(Object trustedCertPath)"
  name: "setTrustedCertPath(Object trustedCertPath)"
  nameWithType: "HBaseLinkedService.setTrustedCertPath(Object trustedCertPath)"
  summary: "Set the trusted<wbr>Cert<wbr>Path property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL."
  parameters:
  - description: "the trustedCertPath value to set."
    name: "trustedCertPath"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HBaseLinkedService setTrustedCertPath(Object trustedCertPath)"
  desc: "Set the trustedCertPath property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
  returns:
    description: "the HBaseLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.HBaseLinkedService?alt=com.azure.analytics.synapse.artifacts.models.HBaseLinkedService&text=HBaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setUsername(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.HBaseLinkedService.setUsername(Object username)"
  name: "setUsername(Object username)"
  nameWithType: "HBaseLinkedService.setUsername(Object username)"
  summary: "Set the username property: The user name used to connect to the HBase instance."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HBaseLinkedService setUsername(Object username)"
  desc: "Set the username property: The user name used to connect to the HBase instance."
  returns:
    description: "the HBaseLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.HBaseLinkedService?alt=com.azure.analytics.synapse.artifacts.models.HBaseLinkedService&text=HBaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "HBase server linked service."
metadata: {}
package: "com.azure.analytics.synapse.artifacts.models"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
