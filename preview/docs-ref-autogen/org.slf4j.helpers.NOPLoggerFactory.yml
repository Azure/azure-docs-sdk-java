### YamlMime:ManagedReference
items:
- uid: org.slf4j.helpers.NOPLoggerFactory
  id: NOPLoggerFactory
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers
  children:
  - org.slf4j.helpers.NOPLoggerFactory.NOPLoggerFactory()
  - org.slf4j.helpers.NOPLoggerFactory.getLogger(java.lang.String)
  langs:
  - java
  name: NOPLoggerFactory
  nameWithType: NOPLoggerFactory
  fullName: org.slf4j.helpers.NOPLoggerFactory
  type: Class
  package: org.slf4j.helpers
  summary: NOPLoggerFactory is an trivial implementation of <xref uid="org.slf4j.ILoggerFactory" data-throw-if-not-resolved="false">ILoggerFactory</xref> which always returns the unique instance of NOPLogger.
  syntax:
    content: public class NOPLoggerFactory implements ILoggerFactory
  inheritance:
  - java.lang.Object
  implements:
  - org.slf4j.ILoggerFactory
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.slf4j.helpers.NOPLoggerFactory.NOPLoggerFactory()
  id: NOPLoggerFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLoggerFactory
  langs:
  - java
  name: NOPLoggerFactory()
  nameWithType: NOPLoggerFactory.NOPLoggerFactory()
  fullName: org.slf4j.helpers.NOPLoggerFactory.NOPLoggerFactory()
  overload: org.slf4j.helpers.NOPLoggerFactory.NOPLoggerFactory*
  type: Constructor
  package: org.slf4j.helpers
  syntax:
    content: public NOPLoggerFactory()
- uid: org.slf4j.helpers.NOPLoggerFactory.getLogger(java.lang.String)
  id: getLogger(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLoggerFactory
  langs:
  - java
  name: getLogger(String name)
  nameWithType: NOPLoggerFactory.getLogger(String name)
  fullName: org.slf4j.helpers.NOPLoggerFactory.getLogger(String name)
  overload: org.slf4j.helpers.NOPLoggerFactory.getLogger*
  type: Method
  package: org.slf4j.helpers
  summary: >-
    Return an appropriate <xref uid="org.slf4j.Logger" data-throw-if-not-resolved="false">Logger</xref> instance as specified by the `name` parameter.


    If the name parameter is equal to <xref uid="org.slf4j.Logger.ROOT_LOGGER_NAME" data-throw-if-not-resolved="false">Logger#ROOT_LOGGER_NAME</xref>, that is the string value "ROOT" (case insensitive), then the root logger of the underlying logging system is returned.


    Null-valued name arguments are considered invalid.


    Certain extremely simple logging systems, e.g. NOP, may always return the same logger instance regardless of the requested name.
  syntax:
    content: public Logger getLogger(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: org.slf4j.Logger
references:
- uid: org.slf4j.helpers.NOPLoggerFactory.NOPLoggerFactory*
  name: NOPLoggerFactory
  nameWithType: NOPLoggerFactory.NOPLoggerFactory
  fullName: org.slf4j.helpers.NOPLoggerFactory.NOPLoggerFactory
  package: org.slf4j.helpers
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.slf4j.Logger
  name: Logger
  nameWithType: Logger
  fullName: org.slf4j.Logger
- uid: org.slf4j.helpers.NOPLoggerFactory.getLogger*
  name: getLogger
  nameWithType: NOPLoggerFactory.getLogger
  fullName: org.slf4j.helpers.NOPLoggerFactory.getLogger
  package: org.slf4j.helpers
- uid: org.slf4j.ILoggerFactory
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: org.slf4j.ILoggerFactory
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
