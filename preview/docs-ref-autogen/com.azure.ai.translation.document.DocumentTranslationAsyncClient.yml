### YamlMime:JavaType
uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient"
fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient"
name: "DocumentTranslationAsyncClient"
nameWithType: "DocumentTranslationAsyncClient"
summary: "Initializes a new instance of the asynchronous Document<wbr>Translation<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **DocumentTranslationAsyncClient**"
methods:
- uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.beginStartTranslation(com.azure.ai.translation.document.models.StartTranslationDetails)"
  fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.beginStartTranslation(StartTranslationDetails startTranslationDetails)"
  name: "beginStartTranslation(StartTranslationDetails startTranslationDetails)"
  nameWithType: "DocumentTranslationAsyncClient.beginStartTranslation(StartTranslationDetails startTranslationDetails)"
  summary: "Submit a document translation request to the Document Translation service Use this API to submit a bulk (batch) translation request to the Document Translation service."
  parameters:
  - description: "Translation job submission batch request."
    name: "startTranslationDetails"
    type: "<xref href=\"com.azure.ai.translation.document.models.StartTranslationDetails?alt=com.azure.ai.translation.document.models.StartTranslationDetails&text=StartTranslationDetails\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<TranslationStatus,Void> beginStartTranslation(StartTranslationDetails startTranslationDetails)"
  desc: "Submit a document translation request to the Document Translation service Use this API to submit a bulk (batch) translation request to the Document Translation service. Each request can contain multiple documents and must contain a source and destination container for each document. The prefix and suffix filter (if supplied) are used to filter folders. The prefix is applied to the subpath after the container name. Glossaries / Translation memory can be included in the request and are applied by the service when the document is translated. If the glossary is invalid or unreachable during translation, an error is indicated in the document status. If a file with the same name already exists at the destination, it will be overwritten. The targetUrl for each target language must be unique."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.translation.document.models.TranslationStatus?alt=com.azure.ai.translation.document.models.TranslationStatus&text=TranslationStatus\" data-throw-if-not-resolved=\"False\" />,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.beginStartTranslation(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.beginStartTranslation(BinaryData startTranslationDetails, RequestOptions requestOptions)"
  name: "beginStartTranslation(BinaryData startTranslationDetails, RequestOptions requestOptions)"
  nameWithType: "DocumentTranslationAsyncClient.beginStartTranslation(BinaryData startTranslationDetails, RequestOptions requestOptions)"
  summary: "Submit a document translation request to the Document Translation service Use this API to submit a bulk (batch) translation request to the Document Translation service."
  parameters:
  - description: "Translation job submission batch request."
    name: "startTranslationDetails"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BinaryData,BinaryData> beginStartTranslation(BinaryData startTranslationDetails, RequestOptions requestOptions)"
  desc: "Submit a document translation request to the Document Translation service Use this API to submit a bulk (batch) translation request to the Document Translation service. Each request can contain multiple documents and must contain a source and destination container for each document. The prefix and suffix filter (if supplied) are used to filter folders. The prefix is applied to the subpath after the container name. Glossaries / Translation memory can be included in the request and are applied by the service when the document is translated. If the glossary is invalid or unreachable during translation, an error is indicated in the document status. If a file with the same name already exists at the destination, it will be overwritten. The targetUrl for each target language must be unique.\n\n**Request Body Schema**\n\n```java\n{\n     inputs (Required): [\n          (Required){\n             source (Required): {\n                 sourceUrl: String (Required)\n                 filter (Optional): {\n                     prefix: String (Optional)\n                     suffix: String (Optional)\n                 }\n                 language: String (Optional)\n                 storageSource: String(AzureBlob) (Optional)\n             }\n             targets (Required): [\n                  (Required){\n                     targetUrl: String (Required)\n                     category: String (Optional)\n                     language: String (Required)\n                     glossaries (Optional): [\n                          (Optional){\n                             glossaryUrl: String (Required)\n                             format: String (Required)\n                             version: String (Optional)\n                             storageSource: String(AzureBlob) (Optional)\n                         }\n                     ]\n                     storageSource: String(AzureBlob) (Optional)\n                 }\n             ]\n             storageType: String(Folder/File) (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.cancelTranslation(java.lang.String)"
  fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.cancelTranslation(String id)"
  name: "cancelTranslation(String id)"
  nameWithType: "DocumentTranslationAsyncClient.cancelTranslation(String id)"
  summary: "Cancel a currently processing or queued translation Cancel a currently processing or queued translation."
  parameters:
  - description: "Format - uuid. The operation-id."
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<TranslationStatus> cancelTranslation(String id)"
  desc: "Cancel a currently processing or queued translation Cancel a currently processing or queued translation. A translation will not be cancelled if it is already completed or failed or cancelling. A bad request will be returned. All documents that have completed translation will not be cancelled and will be charged. All pending documents will be cancelled if possible."
  returns:
    description: "translation job status response on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.translation.document.models.TranslationStatus?alt=com.azure.ai.translation.document.models.TranslationStatus&text=TranslationStatus\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.cancelTranslationWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.cancelTranslationWithResponse(String id, RequestOptions requestOptions)"
  name: "cancelTranslationWithResponse(String id, RequestOptions requestOptions)"
  nameWithType: "DocumentTranslationAsyncClient.cancelTranslationWithResponse(String id, RequestOptions requestOptions)"
  summary: "Cancel a currently processing or queued translation Cancel a currently processing or queued translation."
  parameters:
  - description: "Format - uuid. The operation-id."
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> cancelTranslationWithResponse(String id, RequestOptions requestOptions)"
  desc: "Cancel a currently processing or queued translation Cancel a currently processing or queued translation. A translation will not be cancelled if it is already completed or failed or cancelling. A bad request will be returned. All documents that have completed translation will not be cancelled and will be charged. All pending documents will be cancelled if possible.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     createdDateTimeUtc: OffsetDateTime (Required)\n     lastActionDateTimeUtc: OffsetDateTime (Required)\n     status: String(NotStarted/Running/Succeeded/Failed/Cancelled/Cancelling/ValidationFailed) (Required)\n     error (Optional): {\n         code: String(InvalidRequest/InvalidArgument/InternalServerError/ServiceUnavailable/ResourceNotFound/Unauthorized/RequestRateTooHigh) (Required)\n         message: String (Required)\n         target: String (Optional)\n         innerError (Optional): {\n             code: String (Required)\n             message: String (Required)\n             target: String (Optional)\n             innerError (Optional): (recursive schema, see innerError above)\n         }\n     }\n     summary (Required): {\n         total: int (Required)\n         failed: int (Required)\n         success: int (Required)\n         inProgress: int (Required)\n         notYetStarted: int (Required)\n         cancelled: int (Required)\n         totalCharacterCharged: long (Required)\n     }\n }\n```"
  returns:
    description: "translation job status response along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getDocumentStatus(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getDocumentStatus(String id, String documentId)"
  name: "getDocumentStatus(String id, String documentId)"
  nameWithType: "DocumentTranslationAsyncClient.getDocumentStatus(String id, String documentId)"
  summary: "Returns the status for a specific document Returns the translation status for a specific document based on the request Id and document Id."
  parameters:
  - description: "Format - uuid. The batch id."
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Format - uuid. The document id."
    name: "documentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<DocumentStatus> getDocumentStatus(String id, String documentId)"
  desc: "Returns the status for a specific document Returns the translation status for a specific document based on the request Id and document Id."
  returns:
    description: "document Status Response on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.translation.document.models.DocumentStatus?alt=com.azure.ai.translation.document.models.DocumentStatus&text=DocumentStatus\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getDocumentStatusWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getDocumentStatusWithResponse(String id, String documentId, RequestOptions requestOptions)"
  name: "getDocumentStatusWithResponse(String id, String documentId, RequestOptions requestOptions)"
  nameWithType: "DocumentTranslationAsyncClient.getDocumentStatusWithResponse(String id, String documentId, RequestOptions requestOptions)"
  summary: "Returns the status for a specific document Returns the translation status for a specific document based on the request Id and document Id."
  parameters:
  - description: "Format - uuid. The batch id."
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Format - uuid. The document id."
    name: "documentId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getDocumentStatusWithResponse(String id, String documentId, RequestOptions requestOptions)"
  desc: "Returns the status for a specific document Returns the translation status for a specific document based on the request Id and document Id.\n\n**Response Body Schema**\n\n```java\n{\n     path: String (Optional)\n     sourcePath: String (Required)\n     createdDateTimeUtc: OffsetDateTime (Required)\n     lastActionDateTimeUtc: OffsetDateTime (Required)\n     status: String(NotStarted/Running/Succeeded/Failed/Cancelled/Cancelling/ValidationFailed) (Required)\n     to: String (Required)\n     error (Optional): {\n         code: String(InvalidRequest/InvalidArgument/InternalServerError/ServiceUnavailable/ResourceNotFound/Unauthorized/RequestRateTooHigh) (Required)\n         message: String (Required)\n         target: String (Optional)\n         innerError (Optional): {\n             code: String (Required)\n             message: String (Required)\n             target: String (Optional)\n             innerError (Optional): (recursive schema, see innerError above)\n         }\n     }\n     progress: double (Required)\n     id: String (Required)\n     characterCharged: Integer (Optional)\n }\n```"
  returns:
    description: "document Status Response along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getDocumentsStatus(java.lang.String)"
  fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getDocumentsStatus(String id)"
  name: "getDocumentsStatus(String id)"
  nameWithType: "DocumentTranslationAsyncClient.getDocumentsStatus(String id)"
  summary: "Returns the status for all documents in a batch document translation request Returns the status for all documents in a batch document translation request."
  parameters:
  - description: "Format - uuid. The operation id."
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PagedFlux<DocumentStatus> getDocumentsStatus(String id)"
  desc: "Returns the status for all documents in a batch document translation request Returns the status for all documents in a batch document translation request. If the number of documents in the response exceeds our paging limit, server-side paging is used. Paginated responses indicate a partial result and include a continuation token in the response. The absence of a continuation token means that no additional pages are available. top, skip and maxpagesize query parameters can be used to specify a number of results to return and an offset for the collection. top indicates the total number of records the user wants to be returned across all pages. skip indicates the number of records to skip from the list of document status held by the server based on the sorting method specified. By default, we sort by descending start time. maxpagesize is the maximum items returned in a page. If more items are requested via top (or top is not specified and there are more items to be returned), @nextLink will contain the link to the next page. orderby query parameter can be used to sort the returned list (ex \"orderby=createdDateTimeUtc asc\" or \"orderby=createdDateTimeUtc desc\"). The default sorting is descending by createdDateTimeUtc. Some query parameters can be used to filter the returned list (ex: \"status=Succeeded,Cancelled\") will only return succeeded and cancelled documents. createdDateTimeUtcStart and createdDateTimeUtcEnd can be used combined or separately to specify a range of datetime to filter the returned list by. The supported filtering query parameters are (status, ids, createdDateTimeUtcStart, createdDateTimeUtcEnd). When both top and skip are included, the server should first apply skip and then top on the collection. Note: If the server can't honor top and/or skip, the server must return an error to the client informing about it instead of just ignoring the query options. This reduces the risk of the client making assumptions about the data returned."
  returns:
    description: "documents Status Response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.translation.document.models.DocumentStatus?alt=com.azure.ai.translation.document.models.DocumentStatus&text=DocumentStatus\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getDocumentsStatus(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getDocumentsStatus(String id, RequestOptions requestOptions)"
  name: "getDocumentsStatus(String id, RequestOptions requestOptions)"
  nameWithType: "DocumentTranslationAsyncClient.getDocumentsStatus(String id, RequestOptions requestOptions)"
  summary: "Returns the status for all documents in a batch document translation request Returns the status for all documents in a batch document translation request."
  parameters:
  - description: "Format - uuid. The operation id."
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> getDocumentsStatus(String id, RequestOptions requestOptions)"
  desc: "Returns the status for all documents in a batch document translation request Returns the status for all documents in a batch document translation request. If the number of documents in the response exceeds our paging limit, server-side paging is used. Paginated responses indicate a partial result and include a continuation token in the response. The absence of a continuation token means that no additional pages are available. top, skip and maxpagesize query parameters can be used to specify a number of results to return and an offset for the collection. top indicates the total number of records the user wants to be returned across all pages. skip indicates the number of records to skip from the list of document status held by the server based on the sorting method specified. By default, we sort by descending start time. maxpagesize is the maximum items returned in a page. If more items are requested via top (or top is not specified and there are more items to be returned), @nextLink will contain the link to the next page. orderby query parameter can be used to sort the returned list (ex \"orderby=createdDateTimeUtc asc\" or \"orderby=createdDateTimeUtc desc\"). The default sorting is descending by createdDateTimeUtc. Some query parameters can be used to filter the returned list (ex: \"status=Succeeded,Cancelled\") will only return succeeded and cancelled documents. createdDateTimeUtcStart and createdDateTimeUtcEnd can be used combined or separately to specify a range of datetime to filter the returned list by. The supported filtering query parameters are (status, ids, createdDateTimeUtcStart, createdDateTimeUtcEnd). When both top and skip are included, the server should first apply skip and then top on the collection. Note: If the server can't honor top and/or skip, the server must return an error to the client informing about it instead of just ignoring the query options. This reduces the risk of the client making assumptions about the data returned.\n\n**Query Parameters**\n\n    | ----------------------- | -------------- | -------- ||\n    | Name                    | Type           | Required | Description|\n    | top                     | Integer        | No       | top indicates the total number of records the user wants to be returned across all pages. Clients MAY use top and skip query parameters to specify a number of results to return and an offset into the collection. When both top and skip are given by a client, the server SHOULD first apply skip and then top on the collection. Note: If the server can't honor top and/or skip, the server MUST return an error to the client informing about it instead of just ignoring the query options.                                                                                     |\n    | skip                    | Integer        | No       | skip indicates the number of records to skip from the list of records held by the server based on the sorting method specified. By default, we sort by descending start time. Clients MAY use top and skip query parameters to specify a number of results to return and an offset into the collection. When both top and skip are given by a client, the server SHOULD first apply skip and then top on the collection. Note: If the server can't honor top and/or skip, the server MUST return an error to the client informing about it instead of just ignoring the query options. |\n    | maxpagesize             | Integer        | No       | maxpagesize is the maximum items returned in a page. If more items are requested via top (or top is not specified and there are more items to be returned), @nextLink will contain the link to the next page. Clients MAY request server-driven paging with a specific page size by specifying a maxpagesize preference. The server SHOULD honor this preference if the specified page size is smaller than the server's default page size.                                                                                                                                            |\n    | ids                     | List<String>   | No       | Ids to use in filtering. In the form of \",\" separated string|\n    | statuses                | List<String>   | No       | Statuses to use in filtering. In the form of \",\" separated string|\n    | createdDateTimeUtcStart | OffsetDateTime | No       | the start datetime to get items after|\n    | createdDateTimeUtcEnd   | OffsetDateTime | No       | the end datetime to get items before|\n    | orderby                 | List<String>   | No       | the sorting query for the collection (ex: 'CreatedDateTimeUtc asc','CreatedDateTimeUtc desc'). In the form of \",\" separated string.                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     path: String (Optional)\n     sourcePath: String (Required)\n     createdDateTimeUtc: OffsetDateTime (Required)\n     lastActionDateTimeUtc: OffsetDateTime (Required)\n     status: String(NotStarted/Running/Succeeded/Failed/Cancelled/Cancelling/ValidationFailed) (Required)\n     to: String (Required)\n     error (Optional): {\n         code: String(InvalidRequest/InvalidArgument/InternalServerError/ServiceUnavailable/ResourceNotFound/Unauthorized/RequestRateTooHigh) (Required)\n         message: String (Required)\n         target: String (Optional)\n         innerError (Optional): {\n             code: String (Required)\n             message: String (Required)\n             target: String (Optional)\n             innerError (Optional): (recursive schema, see innerError above)\n         }\n     }\n     progress: double (Required)\n     id: String (Required)\n     characterCharged: Integer (Optional)\n }\n```"
  returns:
    description: "documents Status Response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getDocumentsStatus(java.lang.String,java.lang.Integer,java.lang.Integer,java.util.List<java.lang.String>,java.util.List<java.lang.String>,java.time.OffsetDateTime,java.time.OffsetDateTime,java.util.List<java.lang.String>)"
  fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getDocumentsStatus(String id, Integer top, Integer skip, List<String> ids, List<String> statuses, OffsetDateTime createdDateTimeUtcStart, OffsetDateTime createdDateTimeUtcEnd, List<String> orderBy)"
  name: "getDocumentsStatus(String id, Integer top, Integer skip, List<String> ids, List<String> statuses, OffsetDateTime createdDateTimeUtcStart, OffsetDateTime createdDateTimeUtcEnd, List<String> orderBy)"
  nameWithType: "DocumentTranslationAsyncClient.getDocumentsStatus(String id, Integer top, Integer skip, List<String> ids, List<String> statuses, OffsetDateTime createdDateTimeUtcStart, OffsetDateTime createdDateTimeUtcEnd, List<String> orderBy)"
  summary: "Returns the status for all documents in a batch document translation request Returns the status for all documents in a batch document translation request."
  parameters:
  - description: "Format - uuid. The operation id."
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "top indicates the total number of records the user wants to be returned across\n all pages.\n\n Clients MAY use top and skip query parameters to\n specify a number of results to return and an offset into the collection.\n When\n both top and skip are given by a client, the server SHOULD first apply skip\n and then top on the collection.\n\n Note: If the server can't honor\n top and/or skip, the server MUST return an error to the client informing\n about it instead of just ignoring the query options."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "skip indicates the number of records to skip from the list of records held by\n the server based on the sorting method specified. By default, we sort by\n descending start time.\n\n Clients MAY use top and skip query\n parameters to specify a number of results to return and an offset into the\n collection.\n When both top and skip are given by a client, the server SHOULD\n first apply skip and then top on the collection.\n\n Note: If the\n server can't honor top and/or skip, the server MUST return an error to the\n client informing about it instead of just ignoring the query options."
    name: "skip"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "Ids to use in filtering."
    name: "ids"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  - description: "Statuses to use in filtering."
    name: "statuses"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  - description: "the start datetime to get items after."
    name: "createdDateTimeUtcStart"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  - description: "the end datetime to get items before."
    name: "createdDateTimeUtcEnd"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  - description: "the sorting query for the collection (ex: 'CreatedDateTimeUtc asc','CreatedDateTimeUtc desc')."
    name: "orderBy"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public PagedFlux<DocumentStatus> getDocumentsStatus(String id, Integer top, Integer skip, List<String> ids, List<String> statuses, OffsetDateTime createdDateTimeUtcStart, OffsetDateTime createdDateTimeUtcEnd, List<String> orderBy)"
  desc: "Returns the status for all documents in a batch document translation request Returns the status for all documents in a batch document translation request. If the number of documents in the response exceeds our paging limit, server-side paging is used. Paginated responses indicate a partial result and include a continuation token in the response. The absence of a continuation token means that no additional pages are available. top, skip and maxpagesize query parameters can be used to specify a number of results to return and an offset for the collection. top indicates the total number of records the user wants to be returned across all pages. skip indicates the number of records to skip from the list of document status held by the server based on the sorting method specified. By default, we sort by descending start time. maxpagesize is the maximum items returned in a page. If more items are requested via top (or top is not specified and there are more items to be returned), @nextLink will contain the link to the next page. orderby query parameter can be used to sort the returned list (ex \"orderby=createdDateTimeUtc asc\" or \"orderby=createdDateTimeUtc desc\"). The default sorting is descending by createdDateTimeUtc. Some query parameters can be used to filter the returned list (ex: \"status=Succeeded,Cancelled\") will only return succeeded and cancelled documents. createdDateTimeUtcStart and createdDateTimeUtcEnd can be used combined or separately to specify a range of datetime to filter the returned list by. The supported filtering query parameters are (status, ids, createdDateTimeUtcStart, createdDateTimeUtcEnd). When both top and skip are included, the server should first apply skip and then top on the collection. Note: If the server can't honor top and/or skip, the server must return an error to the client informing about it instead of just ignoring the query options. This reduces the risk of the client making assumptions about the data returned."
  returns:
    description: "documents Status Response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.translation.document.models.DocumentStatus?alt=com.azure.ai.translation.document.models.DocumentStatus&text=DocumentStatus\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getSupportedFormats()"
  fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getSupportedFormats()"
  name: "getSupportedFormats()"
  nameWithType: "DocumentTranslationAsyncClient.getSupportedFormats()"
  summary: "Returns a list of supported document formats The list of supported formats supported by the Document Translation service."
  syntax: "public Mono<SupportedFileFormats> getSupportedFormats()"
  desc: "Returns a list of supported document formats The list of supported formats supported by the Document Translation service. The list includes the common file extension, as well as the content-type if using the upload API."
  returns:
    description: "list of supported file formats on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.translation.document.models.SupportedFileFormats?alt=com.azure.ai.translation.document.models.SupportedFileFormats&text=SupportedFileFormats\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getSupportedFormats(com.azure.ai.translation.document.models.FileFormatType)"
  fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getSupportedFormats(FileFormatType type)"
  name: "getSupportedFormats(FileFormatType type)"
  nameWithType: "DocumentTranslationAsyncClient.getSupportedFormats(FileFormatType type)"
  summary: "Returns a list of supported document formats The list of supported formats supported by the Document Translation service."
  parameters:
  - description: "the type of format like document or glossary."
    name: "type"
    type: "<xref href=\"com.azure.ai.translation.document.models.FileFormatType?alt=com.azure.ai.translation.document.models.FileFormatType&text=FileFormatType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SupportedFileFormats> getSupportedFormats(FileFormatType type)"
  desc: "Returns a list of supported document formats The list of supported formats supported by the Document Translation service. The list includes the common file extension, as well as the content-type if using the upload API."
  returns:
    description: "list of supported file formats on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.translation.document.models.SupportedFileFormats?alt=com.azure.ai.translation.document.models.SupportedFileFormats&text=SupportedFileFormats\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getSupportedFormatsWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getSupportedFormatsWithResponse(RequestOptions requestOptions)"
  name: "getSupportedFormatsWithResponse(RequestOptions requestOptions)"
  nameWithType: "DocumentTranslationAsyncClient.getSupportedFormatsWithResponse(RequestOptions requestOptions)"
  summary: "Returns a list of supported document formats The list of supported formats supported by the Document Translation service."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getSupportedFormatsWithResponse(RequestOptions requestOptions)"
  desc: "Returns a list of supported document formats The list of supported formats supported by the Document Translation service. The list includes the common file extension, as well as the content-type if using the upload API.\n\n**Query Parameters**\n\n    | ---- | ------ | -------- | -------------------------------------------------------------------------------------- |\n    | Name | Type   | Required | Description                                                                            |\n    | type | String | No       | the type of format like document or glossary . Allowed values: \"document\", \"glossary\". |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     value (Required): [\n          (Required){\n             format: String (Required)\n             fileExtensions (Required): [\n                 String (Required)\n             ]\n             contentTypes (Required): [\n                 String (Required)\n             ]\n             defaultVersion: String (Optional)\n             versions (Optional): [\n                 String (Optional)\n             ]\n             type: String (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "list of supported file formats along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getTranslationStatus(java.lang.String)"
  fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getTranslationStatus(String id)"
  name: "getTranslationStatus(String id)"
  nameWithType: "DocumentTranslationAsyncClient.getTranslationStatus(String id)"
  summary: "Returns the status for a document translation request Returns the status for a document translation request."
  parameters:
  - description: "Format - uuid. The operation id."
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<TranslationStatus> getTranslationStatus(String id)"
  desc: "Returns the status for a document translation request Returns the status for a document translation request. The status includes the overall request status, as well as the status for documents that are being translated as part of that request."
  returns:
    description: "translation job status response on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.translation.document.models.TranslationStatus?alt=com.azure.ai.translation.document.models.TranslationStatus&text=TranslationStatus\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getTranslationStatusWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getTranslationStatusWithResponse(String id, RequestOptions requestOptions)"
  name: "getTranslationStatusWithResponse(String id, RequestOptions requestOptions)"
  nameWithType: "DocumentTranslationAsyncClient.getTranslationStatusWithResponse(String id, RequestOptions requestOptions)"
  summary: "Returns the status for a document translation request Returns the status for a document translation request."
  parameters:
  - description: "Format - uuid. The operation id."
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getTranslationStatusWithResponse(String id, RequestOptions requestOptions)"
  desc: "Returns the status for a document translation request Returns the status for a document translation request. The status includes the overall request status, as well as the status for documents that are being translated as part of that request.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     createdDateTimeUtc: OffsetDateTime (Required)\n     lastActionDateTimeUtc: OffsetDateTime (Required)\n     status: String(NotStarted/Running/Succeeded/Failed/Cancelled/Cancelling/ValidationFailed) (Required)\n     error (Optional): {\n         code: String(InvalidRequest/InvalidArgument/InternalServerError/ServiceUnavailable/ResourceNotFound/Unauthorized/RequestRateTooHigh) (Required)\n         message: String (Required)\n         target: String (Optional)\n         innerError (Optional): {\n             code: String (Required)\n             message: String (Required)\n             target: String (Optional)\n             innerError (Optional): (recursive schema, see innerError above)\n         }\n     }\n     summary (Required): {\n         total: int (Required)\n         failed: int (Required)\n         success: int (Required)\n         inProgress: int (Required)\n         notYetStarted: int (Required)\n         cancelled: int (Required)\n         totalCharacterCharged: long (Required)\n     }\n }\n```"
  returns:
    description: "translation job status response along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getTranslationsStatus()"
  fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getTranslationsStatus()"
  name: "getTranslationsStatus()"
  nameWithType: "DocumentTranslationAsyncClient.getTranslationsStatus()"
  summary: "Returns a list of batch requests submitted and the status for each request Returns a list of batch requests submitted and the status for each request."
  syntax: "public PagedFlux<TranslationStatus> getTranslationsStatus()"
  desc: "Returns a list of batch requests submitted and the status for each request Returns a list of batch requests submitted and the status for each request. This list only contains batch requests submitted by the user (based on the resource). If the number of requests exceeds our paging limit, server-side paging is used. Paginated responses indicate a partial result and include a continuation token in the response. The absence of a continuation token means that no additional pages are available. top, skip and maxpagesize query parameters can be used to specify a number of results to return and an offset for the collection. top indicates the total number of records the user wants to be returned across all pages. skip indicates the number of records to skip from the list of batches based on the sorting method specified. By default, we sort by descending start time. maxpagesize is the maximum items returned in a page. If more items are requested via top (or top is not specified and there are more items to be returned), @nextLink will contain the link to the next page. orderby query parameter can be used to sort the returned list (ex \"orderby=createdDateTimeUtc asc\" or \"orderby=createdDateTimeUtc desc\"). The default sorting is descending by createdDateTimeUtc. Some query parameters can be used to filter the returned list (ex: \"status=Succeeded,Cancelled\") will only return succeeded and cancelled operations. createdDateTimeUtcStart and createdDateTimeUtcEnd can be used combined or separately to specify a range of datetime to filter the returned list by. The supported filtering query parameters are (status, ids, createdDateTimeUtcStart, createdDateTimeUtcEnd). The server honors the values specified by the client. However, clients must be prepared to handle responses that contain a different page size or contain a continuation token. When both top and skip are included, the server should first apply skip and then top on the collection. Note: If the server can't honor top and/or skip, the server must return an error to the client informing about it instead of just ignoring the query options. This reduces the risk of the client making assumptions about the data returned."
  returns:
    description: "translation job Status Response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.translation.document.models.TranslationStatus?alt=com.azure.ai.translation.document.models.TranslationStatus&text=TranslationStatus\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getTranslationsStatus(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getTranslationsStatus(RequestOptions requestOptions)"
  name: "getTranslationsStatus(RequestOptions requestOptions)"
  nameWithType: "DocumentTranslationAsyncClient.getTranslationsStatus(RequestOptions requestOptions)"
  summary: "Returns a list of batch requests submitted and the status for each request Returns a list of batch requests submitted and the status for each request."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> getTranslationsStatus(RequestOptions requestOptions)"
  desc: "Returns a list of batch requests submitted and the status for each request Returns a list of batch requests submitted and the status for each request. This list only contains batch requests submitted by the user (based on the resource). If the number of requests exceeds our paging limit, server-side paging is used. Paginated responses indicate a partial result and include a continuation token in the response. The absence of a continuation token means that no additional pages are available. top, skip and maxpagesize query parameters can be used to specify a number of results to return and an offset for the collection. top indicates the total number of records the user wants to be returned across all pages. skip indicates the number of records to skip from the list of batches based on the sorting method specified. By default, we sort by descending start time. maxpagesize is the maximum items returned in a page. If more items are requested via top (or top is not specified and there are more items to be returned), @nextLink will contain the link to the next page. orderby query parameter can be used to sort the returned list (ex \"orderby=createdDateTimeUtc asc\" or \"orderby=createdDateTimeUtc desc\"). The default sorting is descending by createdDateTimeUtc. Some query parameters can be used to filter the returned list (ex: \"status=Succeeded,Cancelled\") will only return succeeded and cancelled operations. createdDateTimeUtcStart and createdDateTimeUtcEnd can be used combined or separately to specify a range of datetime to filter the returned list by. The supported filtering query parameters are (status, ids, createdDateTimeUtcStart, createdDateTimeUtcEnd). The server honors the values specified by the client. However, clients must be prepared to handle responses that contain a different page size or contain a continuation token. When both top and skip are included, the server should first apply skip and then top on the collection. Note: If the server can't honor top and/or skip, the server must return an error to the client informing about it instead of just ignoring the query options. This reduces the risk of the client making assumptions about the data returned.\n\n**Query Parameters**\n\n    | ----------------------- | -------------- | -------- ||\n    | Name                    | Type           | Required | Description|\n    | top                     | Integer        | No       | top indicates the total number of records the user wants to be returned across all pages. Clients MAY use top and skip query parameters to specify a number of results to return and an offset into the collection. When both top and skip are given by a client, the server SHOULD first apply skip and then top on the collection. Note: If the server can't honor top and/or skip, the server MUST return an error to the client informing about it instead of just ignoring the query options.                                                                                     |\n    | skip                    | Integer        | No       | skip indicates the number of records to skip from the list of records held by the server based on the sorting method specified. By default, we sort by descending start time. Clients MAY use top and skip query parameters to specify a number of results to return and an offset into the collection. When both top and skip are given by a client, the server SHOULD first apply skip and then top on the collection. Note: If the server can't honor top and/or skip, the server MUST return an error to the client informing about it instead of just ignoring the query options. |\n    | maxpagesize             | Integer        | No       | maxpagesize is the maximum items returned in a page. If more items are requested via top (or top is not specified and there are more items to be returned), @nextLink will contain the link to the next page. Clients MAY request server-driven paging with a specific page size by specifying a maxpagesize preference. The server SHOULD honor this preference if the specified page size is smaller than the server's default page size.                                                                                                                                            |\n    | ids                     | List<String>   | No       | Ids to use in filtering. In the form of \",\" separated string|\n    | statuses                | List<String>   | No       | Statuses to use in filtering. In the form of \",\" separated string|\n    | createdDateTimeUtcStart | OffsetDateTime | No       | the start datetime to get items after|\n    | createdDateTimeUtcEnd   | OffsetDateTime | No       | the end datetime to get items before|\n    | orderby                 | List<String>   | No       | the sorting query for the collection (ex: 'CreatedDateTimeUtc asc','CreatedDateTimeUtc desc'). In the form of \",\" separated string.                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     createdDateTimeUtc: OffsetDateTime (Required)\n     lastActionDateTimeUtc: OffsetDateTime (Required)\n     status: String(NotStarted/Running/Succeeded/Failed/Cancelled/Cancelling/ValidationFailed) (Required)\n     error (Optional): {\n         code: String(InvalidRequest/InvalidArgument/InternalServerError/ServiceUnavailable/ResourceNotFound/Unauthorized/RequestRateTooHigh) (Required)\n         message: String (Required)\n         target: String (Optional)\n         innerError (Optional): {\n             code: String (Required)\n             message: String (Required)\n             target: String (Optional)\n             innerError (Optional): (recursive schema, see innerError above)\n         }\n     }\n     summary (Required): {\n         total: int (Required)\n         failed: int (Required)\n         success: int (Required)\n         inProgress: int (Required)\n         notYetStarted: int (Required)\n         cancelled: int (Required)\n         totalCharacterCharged: long (Required)\n     }\n }\n```"
  returns:
    description: "translation job Status Response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getTranslationsStatus(java.lang.Integer,java.lang.Integer,java.util.List<java.lang.String>,java.util.List<java.lang.String>,java.time.OffsetDateTime,java.time.OffsetDateTime,java.util.List<java.lang.String>)"
  fullName: "com.azure.ai.translation.document.DocumentTranslationAsyncClient.getTranslationsStatus(Integer top, Integer skip, List<String> ids, List<String> statuses, OffsetDateTime createdDateTimeUtcStart, OffsetDateTime createdDateTimeUtcEnd, List<String> orderBy)"
  name: "getTranslationsStatus(Integer top, Integer skip, List<String> ids, List<String> statuses, OffsetDateTime createdDateTimeUtcStart, OffsetDateTime createdDateTimeUtcEnd, List<String> orderBy)"
  nameWithType: "DocumentTranslationAsyncClient.getTranslationsStatus(Integer top, Integer skip, List<String> ids, List<String> statuses, OffsetDateTime createdDateTimeUtcStart, OffsetDateTime createdDateTimeUtcEnd, List<String> orderBy)"
  summary: "Returns a list of batch requests submitted and the status for each request Returns a list of batch requests submitted and the status for each request."
  parameters:
  - description: "top indicates the total number of records the user wants to be returned across\n all pages.\n\n Clients MAY use top and skip query parameters to\n specify a number of results to return and an offset into the collection.\n When\n both top and skip are given by a client, the server SHOULD first apply skip\n and then top on the collection.\n\n Note: If the server can't honor\n top and/or skip, the server MUST return an error to the client informing\n about it instead of just ignoring the query options."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "skip indicates the number of records to skip from the list of records held by\n the server based on the sorting method specified. By default, we sort by\n descending start time.\n\n Clients MAY use top and skip query\n parameters to specify a number of results to return and an offset into the\n collection.\n When both top and skip are given by a client, the server SHOULD\n first apply skip and then top on the collection.\n\n Note: If the\n server can't honor top and/or skip, the server MUST return an error to the\n client informing about it instead of just ignoring the query options."
    name: "skip"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "Ids to use in filtering."
    name: "ids"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  - description: "Statuses to use in filtering."
    name: "statuses"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  - description: "the start datetime to get items after."
    name: "createdDateTimeUtcStart"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  - description: "the end datetime to get items before."
    name: "createdDateTimeUtcEnd"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  - description: "the sorting query for the collection (ex: 'CreatedDateTimeUtc asc','CreatedDateTimeUtc desc')."
    name: "orderBy"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public PagedFlux<TranslationStatus> getTranslationsStatus(Integer top, Integer skip, List<String> ids, List<String> statuses, OffsetDateTime createdDateTimeUtcStart, OffsetDateTime createdDateTimeUtcEnd, List<String> orderBy)"
  desc: "Returns a list of batch requests submitted and the status for each request Returns a list of batch requests submitted and the status for each request. This list only contains batch requests submitted by the user (based on the resource). If the number of requests exceeds our paging limit, server-side paging is used. Paginated responses indicate a partial result and include a continuation token in the response. The absence of a continuation token means that no additional pages are available. top, skip and maxpagesize query parameters can be used to specify a number of results to return and an offset for the collection. top indicates the total number of records the user wants to be returned across all pages. skip indicates the number of records to skip from the list of batches based on the sorting method specified. By default, we sort by descending start time. maxpagesize is the maximum items returned in a page. If more items are requested via top (or top is not specified and there are more items to be returned), @nextLink will contain the link to the next page. orderby query parameter can be used to sort the returned list (ex \"orderby=createdDateTimeUtc asc\" or \"orderby=createdDateTimeUtc desc\"). The default sorting is descending by createdDateTimeUtc. Some query parameters can be used to filter the returned list (ex: \"status=Succeeded,Cancelled\") will only return succeeded and cancelled operations. createdDateTimeUtcStart and createdDateTimeUtcEnd can be used combined or separately to specify a range of datetime to filter the returned list by. The supported filtering query parameters are (status, ids, createdDateTimeUtcStart, createdDateTimeUtcEnd). The server honors the values specified by the client. However, clients must be prepared to handle responses that contain a different page size or contain a continuation token. When both top and skip are included, the server should first apply skip and then top on the collection. Note: If the server can't honor top and/or skip, the server must return an error to the client informing about it instead of just ignoring the query options. This reduces the risk of the client making assumptions about the data returned."
  returns:
    description: "translation job Status Response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.translation.document.models.TranslationStatus?alt=com.azure.ai.translation.document.models.TranslationStatus&text=TranslationStatus\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous DocumentTranslationClient type."
metadata: {}
package: "com.azure.ai.translation.document"
artifact: com.azure:azure-ai-translation-document:1.0.0-beta.2
