### YamlMime:JavaMember
uid: "com.azure.resourcemanager.apimanagement.implementation.ApiReleaseContractImpl.withExistingApi*"
fullName: "com.azure.resourcemanager.apimanagement.implementation.ApiReleaseContractImpl.withExistingApi"
name: "withExistingApi"
nameWithType: "ApiReleaseContractImpl.withExistingApi"
members:
- uid: "com.azure.resourcemanager.apimanagement.implementation.ApiReleaseContractImpl.withExistingApi(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.implementation.ApiReleaseContractImpl.withExistingApi(String resourceGroupName, String serviceName, String apiId)"
  name: "withExistingApi(String resourceGroupName, String serviceName, String apiId)"
  nameWithType: "ApiReleaseContractImpl.withExistingApi(String resourceGroupName, String serviceName, String apiId)"
  summary: "Specifies resourceGroupName, serviceName, apiId."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "apiId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApiReleaseContractImpl withExistingApi(String resourceGroupName, String serviceName, String apiId)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.implementation.ApiReleaseContractImpl?alt=com.azure.resourcemanager.apimanagement.implementation.ApiReleaseContractImpl&text=ApiReleaseContractImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.apimanagement.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.1
