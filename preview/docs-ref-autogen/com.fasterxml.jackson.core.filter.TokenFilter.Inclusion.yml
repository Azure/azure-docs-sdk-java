### YamlMime:JavaEnum
uid: "com.fasterxml.jackson.core.filter.TokenFilter.Inclusion"
fullName: "com.fasterxml.jackson.core.filter.TokenFilter.Inclusion"
name: "TokenFilter.Inclusion"
nameWithType: "TokenFilter.Inclusion"
summary: "Enumeration that controls how TokenFilter return values are interpreted."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum TokenFilter.Inclusion extends Enum<TokenFilter.Inclusion>"
fields:
- uid: "com.fasterxml.jackson.core.filter.TokenFilter.Inclusion.INCLUDE_ALL_AND_PATH"
  fullName: "com.fasterxml.jackson.core.filter.TokenFilter.Inclusion.INCLUDE_ALL_AND_PATH"
  name: "INCLUDE_ALL_AND_PATH"
  nameWithType: "TokenFilter.Inclusion.INCLUDE_ALL_AND_PATH"
  summary: "When TokenFilter.INCLUDE\\_ALL is returned, the corresponding token will be included as well as enclosing tokens up to the root"
- uid: "com.fasterxml.jackson.core.filter.TokenFilter.Inclusion.INCLUDE_NON_NULL"
  fullName: "com.fasterxml.jackson.core.filter.TokenFilter.Inclusion.INCLUDE_NON_NULL"
  name: "INCLUDE_NON_NULL"
  nameWithType: "TokenFilter.Inclusion.INCLUDE_NON_NULL"
  summary: "Tokens will be included if any non-null filter is returned. The exception is if a field name returns a non-null filter, but the field value returns a null filter. In this case the field name and value will both be omitted."
- uid: "com.fasterxml.jackson.core.filter.TokenFilter.Inclusion.ONLY_INCLUDE_ALL"
  fullName: "com.fasterxml.jackson.core.filter.TokenFilter.Inclusion.ONLY_INCLUDE_ALL"
  name: "ONLY_INCLUDE_ALL"
  nameWithType: "TokenFilter.Inclusion.ONLY_INCLUDE_ALL"
  summary: "Tokens will only be included if the filter returns TokenFilter.INCLUDE\\_ALL"
methods:
- uid: "com.fasterxml.jackson.core.filter.TokenFilter.Inclusion.valueOf(java.lang.String)"
  fullName: "com.fasterxml.jackson.core.filter.TokenFilter.Inclusion.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "TokenFilter.Inclusion.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static TokenFilter.Inclusion valueOf(String name)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.filter.TokenFilter.Inclusion?alt=com.fasterxml.jackson.core.filter.TokenFilter.Inclusion&text=Inclusion\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.filter.TokenFilter.Inclusion.values()"
  fullName: "com.fasterxml.jackson.core.filter.TokenFilter.Inclusion.values()"
  name: "values()"
  nameWithType: "TokenFilter.Inclusion.values()"
  syntax: "public static TokenFilter.Inclusion[] values()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.filter.TokenFilter.Inclusion?alt=com.fasterxml.jackson.core.filter.TokenFilter.Inclusion&text=Inclusion\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.fasterxml.jackson.core.filter"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.5
