### YamlMime:JavaType
uid: "com.azure.analytics.synapse.spark.SparkBatchClient"
fullName: "com.azure.analytics.synapse.spark.SparkBatchClient"
name: "SparkBatchClient"
nameWithType: "SparkBatchClient"
summary: "Initializes a new instance of the synchronous Spark<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SparkBatchClient"
methods:
- uid: "com.azure.analytics.synapse.spark.SparkBatchClient.cancelSparkBatchJob(int)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchClient.cancelSparkBatchJob(int batchId)"
  name: "cancelSparkBatchJob(int batchId)"
  nameWithType: "SparkBatchClient.cancelSparkBatchJob(int batchId)"
  summary: "Cancels a running spark batch job."
  parameters:
  - description: "Identifier for the batch job."
    name: "batchId"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void cancelSparkBatchJob(int batchId)"
  desc: "Cancels a running spark batch job."
- uid: "com.azure.analytics.synapse.spark.SparkBatchClient.cancelSparkBatchJobWithResponse(int,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchClient.cancelSparkBatchJobWithResponse(int batchId, Context context)"
  name: "cancelSparkBatchJobWithResponse(int batchId, Context context)"
  nameWithType: "SparkBatchClient.cancelSparkBatchJobWithResponse(int batchId, Context context)"
  summary: "Cancels a running spark batch job."
  parameters:
  - description: "Identifier for the batch job."
    name: "batchId"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> cancelSparkBatchJobWithResponse(int batchId, Context context)"
  desc: "Cancels a running spark batch job."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.spark.SparkBatchClient.createSparkBatchJob(com.azure.analytics.synapse.spark.models.SparkBatchJobOptions)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchClient.createSparkBatchJob(SparkBatchJobOptions sparkBatchJobOptions)"
  name: "createSparkBatchJob(SparkBatchJobOptions sparkBatchJobOptions)"
  nameWithType: "SparkBatchClient.createSparkBatchJob(SparkBatchJobOptions sparkBatchJobOptions)"
  summary: "Create new spark batch job."
  parameters:
  - description: "Livy compatible batch job request payload."
    name: "sparkBatchJobOptions"
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobOptions?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobOptions&text=SparkBatchJobOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkBatchJob createSparkBatchJob(SparkBatchJobOptions sparkBatchJobOptions)"
  desc: "Create new spark batch job."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJob?alt=com.azure.analytics.synapse.spark.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.SparkBatchClient.createSparkBatchJob(com.azure.analytics.synapse.spark.models.SparkBatchJobOptions,java.lang.Boolean)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchClient.createSparkBatchJob(SparkBatchJobOptions sparkBatchJobOptions, Boolean detailed)"
  name: "createSparkBatchJob(SparkBatchJobOptions sparkBatchJobOptions, Boolean detailed)"
  nameWithType: "SparkBatchClient.createSparkBatchJob(SparkBatchJobOptions sparkBatchJobOptions, Boolean detailed)"
  summary: "Create new spark batch job."
  parameters:
  - description: "Livy compatible batch job request payload."
    name: "sparkBatchJobOptions"
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobOptions?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobOptions&text=SparkBatchJobOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional query param specifying whether detailed response is returned beyond plain livy."
    name: "detailed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkBatchJob createSparkBatchJob(SparkBatchJobOptions sparkBatchJobOptions, Boolean detailed)"
  desc: "Create new spark batch job."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJob?alt=com.azure.analytics.synapse.spark.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.SparkBatchClient.createSparkBatchJobWithResponse(com.azure.analytics.synapse.spark.models.SparkBatchJobOptions,java.lang.Boolean,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchClient.createSparkBatchJobWithResponse(SparkBatchJobOptions sparkBatchJobOptions, Boolean detailed, Context context)"
  name: "createSparkBatchJobWithResponse(SparkBatchJobOptions sparkBatchJobOptions, Boolean detailed, Context context)"
  nameWithType: "SparkBatchClient.createSparkBatchJobWithResponse(SparkBatchJobOptions sparkBatchJobOptions, Boolean detailed, Context context)"
  summary: "Create new spark batch job."
  parameters:
  - description: "Livy compatible batch job request payload."
    name: "sparkBatchJobOptions"
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobOptions?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobOptions&text=SparkBatchJobOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional query param specifying whether detailed response is returned beyond plain livy."
    name: "detailed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SparkBatchJob> createSparkBatchJobWithResponse(SparkBatchJobOptions sparkBatchJobOptions, Boolean detailed, Context context)"
  desc: "Create new spark batch job."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJob?alt=com.azure.analytics.synapse.spark.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.spark.SparkBatchClient.getSparkBatchJob(int)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchClient.getSparkBatchJob(int batchId)"
  name: "getSparkBatchJob(int batchId)"
  nameWithType: "SparkBatchClient.getSparkBatchJob(int batchId)"
  summary: "Gets a single spark batch job."
  parameters:
  - description: "Identifier for the batch job."
    name: "batchId"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkBatchJob getSparkBatchJob(int batchId)"
  desc: "Gets a single spark batch job."
  returns:
    description: "a single spark batch job."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJob?alt=com.azure.analytics.synapse.spark.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.SparkBatchClient.getSparkBatchJob(int,java.lang.Boolean)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchClient.getSparkBatchJob(int batchId, Boolean detailed)"
  name: "getSparkBatchJob(int batchId, Boolean detailed)"
  nameWithType: "SparkBatchClient.getSparkBatchJob(int batchId, Boolean detailed)"
  summary: "Gets a single spark batch job."
  parameters:
  - description: "Identifier for the batch job."
    name: "batchId"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional query param specifying whether detailed response is returned beyond plain livy."
    name: "detailed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkBatchJob getSparkBatchJob(int batchId, Boolean detailed)"
  desc: "Gets a single spark batch job."
  returns:
    description: "a single spark batch job."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJob?alt=com.azure.analytics.synapse.spark.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.SparkBatchClient.getSparkBatchJobWithResponse(int,java.lang.Boolean,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchClient.getSparkBatchJobWithResponse(int batchId, Boolean detailed, Context context)"
  name: "getSparkBatchJobWithResponse(int batchId, Boolean detailed, Context context)"
  nameWithType: "SparkBatchClient.getSparkBatchJobWithResponse(int batchId, Boolean detailed, Context context)"
  summary: "Gets a single spark batch job."
  parameters:
  - description: "Identifier for the batch job."
    name: "batchId"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional query param specifying whether detailed response is returned beyond plain livy."
    name: "detailed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SparkBatchJob> getSparkBatchJobWithResponse(int batchId, Boolean detailed, Context context)"
  desc: "Gets a single spark batch job."
  returns:
    description: "a single spark batch job."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJob?alt=com.azure.analytics.synapse.spark.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.spark.SparkBatchClient.getSparkBatchJobs()"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchClient.getSparkBatchJobs()"
  name: "getSparkBatchJobs()"
  nameWithType: "SparkBatchClient.getSparkBatchJobs()"
  summary: "List all spark batch jobs which are running under a particular spark pool."
  syntax: "public SparkBatchJobCollection getSparkBatchJobs()"
  desc: "List all spark batch jobs which are running under a particular spark pool."
  returns:
    description: "response for batch list operation."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobCollection?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobCollection&text=SparkBatchJobCollection\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.SparkBatchClient.getSparkBatchJobs(java.lang.Integer,java.lang.Integer,java.lang.Boolean)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchClient.getSparkBatchJobs(Integer from, Integer size, Boolean detailed)"
  name: "getSparkBatchJobs(Integer from, Integer size, Boolean detailed)"
  nameWithType: "SparkBatchClient.getSparkBatchJobs(Integer from, Integer size, Boolean detailed)"
  summary: "List all spark batch jobs which are running under a particular spark pool."
  parameters:
  - description: "Optional param specifying which index the list should begin from."
    name: "from"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional param specifying the size of the returned list. By default it is 20 and that is the maximum."
    name: "size"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional query param specifying whether detailed response is returned beyond plain livy."
    name: "detailed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkBatchJobCollection getSparkBatchJobs(Integer from, Integer size, Boolean detailed)"
  desc: "List all spark batch jobs which are running under a particular spark pool."
  returns:
    description: "response for batch list operation."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobCollection?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobCollection&text=SparkBatchJobCollection\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.SparkBatchClient.getSparkBatchJobsWithResponse(java.lang.Integer,java.lang.Integer,java.lang.Boolean,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.synapse.spark.SparkBatchClient.getSparkBatchJobsWithResponse(Integer from, Integer size, Boolean detailed, Context context)"
  name: "getSparkBatchJobsWithResponse(Integer from, Integer size, Boolean detailed, Context context)"
  nameWithType: "SparkBatchClient.getSparkBatchJobsWithResponse(Integer from, Integer size, Boolean detailed, Context context)"
  summary: "List all spark batch jobs which are running under a particular spark pool."
  parameters:
  - description: "Optional param specifying which index the list should begin from."
    name: "from"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional param specifying the size of the returned list. By default it is 20 and that is the maximum."
    name: "size"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional query param specifying whether detailed response is returned beyond plain livy."
    name: "detailed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SparkBatchJobCollection> getSparkBatchJobsWithResponse(Integer from, Integer size, Boolean detailed, Context context)"
  desc: "List all spark batch jobs which are running under a particular spark pool."
  returns:
    description: "response for batch list operation."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobCollection?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobCollection&text=SparkBatchJobCollection\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the synchronous SparkClient type."
metadata: {}
package: "com.azure.analytics.synapse.spark"
artifact: com.azure:azure-analytics-synapse-spark:1.0.0-beta.5
