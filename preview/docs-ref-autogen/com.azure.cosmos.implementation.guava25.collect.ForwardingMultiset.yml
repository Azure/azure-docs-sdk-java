### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  id: ForwardingMultiset
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.ForwardingMultiset()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.StandardElementSet
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.add(E,int)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.count(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.elementSet()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.equals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.hashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.remove(java.lang.Object,int)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount(E,int)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount(E,int,int)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardAdd(E)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardAddAll(java.util.Collection<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardClear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardContains(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardCount(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardEquals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardHashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardIterator()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRemove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRemoveAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRetainAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSetCount(E,int)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSetCount(E,int,int)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSize()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardToString()
  langs:
  - java
  name: ForwardingMultiset<E>
  nameWithType: ForwardingMultiset<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A multiset which forwards all its method calls to another multiset. Subclasses should override one or more methods to modify the behavior of the backing multiset as desired per the [decorator pattern][].


    **Warning:** The methods of `ForwardingMultiset` forward **indiscriminately** to the methods of the delegate. For example, overriding <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.add*" data-throw-if-not-resolved="false">#add(Object, int)</xref> alone **will not** change the behavior of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.add*" data-throw-if-not-resolved="false">#add(Object)</xref>, which can lead to unexpected behavior. In this case, you should override `add(Object)` as well, either providing your own implementation, or delegating to the provided `standardAdd` method.


    **`default` method warning:** This class does *not* forward calls to `default` methods. Instead, it inherits their default implementations. When those implementations invoke methods, they invoke methods on the `ForwardingMultiset`.


    The `standard` methods and any collection views they return are not guaranteed to be thread-safe, even when all of the methods that they depend on are thread-safe.



    [decorator pattern]: http://en.wikipedia.org/wiki/Decorator_pattern
  syntax:
    content: public abstract class ForwardingMultiset<E> extends ForwardingCollection<E> implements Multiset<E>
    typeParameters:
    - id: E
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  implements:
  - com.azure.cosmos.implementation.guava25.collect.Multiset<E>
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.ForwardingMultiset()
  id: ForwardingMultiset()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: ForwardingMultiset()
  nameWithType: ForwardingMultiset<E>.ForwardingMultiset()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.ForwardingMultiset()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.ForwardingMultiset*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Constructor for use by subclasses.
  syntax:
    content: protected ForwardingMultiset()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.add(E,int)
  id: add(E,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: add(E element, int occurrences)
  nameWithType: ForwardingMultiset<E>.add(E element, int occurrences)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.add(E element, int occurrences)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.add*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Adds a number of occurrences of an element to this multiset. Note that if `occurrences == 1`, this method has the identical effect to <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.add*" data-throw-if-not-resolved="false">#add(Object)</xref>. This method is functionally equivalent (except in the case of overflow) to the call `addAll(Collections.nCopies(element, occurrences))`, which would presumably perform much more poorly.
  syntax:
    content: public int add(E element, int occurrences)
    parameters:
    - id: element
      type: E
    - id: occurrences
      type: int
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.count(java.lang.Object)
  id: count(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: count(Object element)
  nameWithType: ForwardingMultiset<E>.count(Object element)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.count(Object element)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.count*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns the number of occurrences of an element in this multiset (the *count* of the element). Note that for an <xref uid="java.lang.Object.equals" data-throw-if-not-resolved="false">Object#equals</xref>\-based multiset, this gives the same result as <xref uid="" data-throw-if-not-resolved="false">Collections#frequency</xref> (which would presumably perform more poorly).


    **Note:** the utility method <xref uid="com.azure.cosmos.implementation.guava25.collect.Iterables.frequency*" data-throw-if-not-resolved="false">Iterables#frequency</xref> generalizes this operation; it correctly delegates to this method when dealing with a multiset, but it can also accept any other iterable type.
  syntax:
    content: public int count(Object element)
    parameters:
    - id: element
      type: java.lang.Object
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.delegate()
  id: delegate()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: delegate()
  nameWithType: ForwardingMultiset<E>.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.delegate()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.delegate*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the backing delegate instance that methods are forwarded to. Abstract subclasses generally override this method with an abstract method that has a more specific return type, such as <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate" data-throw-if-not-resolved="false">ForwardingSet#delegate</xref>. Concrete subclasses override this method to supply the instance being decorated.
  syntax:
    content: protected abstract Multiset<E> delegate()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.Multiset<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.elementSet()
  id: elementSet()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: elementSet()
  nameWithType: ForwardingMultiset<E>.elementSet()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.elementSet()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.elementSet*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns the set of distinct elements contained in this multiset. The element set is backed by the same data as the multiset, so any change to either is immediately reflected in the other. The order of the elements in the element set is unspecified.


    If the element set supports any removal operations, these necessarily cause **all** occurrences of the removed element(s) to be removed from the multiset. Implementations are not expected to support the add operations, although this is possible.


    A common use for the element set is to find the number of distinct elements in the multiset: `elementSet().size()`.
  syntax:
    content: public Set<E> elementSet()
    return:
      type: java.util.Set<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet()
  id: entrySet()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: entrySet()
  nameWithType: ForwardingMultiset<E>.entrySet()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.entrySet()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns a view of the contents of this multiset, grouped into `Multiset.Entry` instances, each providing an element of the multiset and the count of that element. This set contains exactly one entry for each distinct element in the multiset (thus it always has the same size as the <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.elementSet" data-throw-if-not-resolved="false">#elementSet</xref>). The order of the elements in the element set is unspecified.


    The entry set is backed by the same data as the multiset, so any change to either is immediately reflected in the other. However, multiset changes may or may not be reflected in any `Entry` instances already retrieved from the entry set (this is implementation-dependent). Furthermore, implementations are not required to support modifications to the entry set at all, and the `Entry` instances themselves don't even have methods for modification. See the specific implementation class for more details on how its entry set handles modifications.
  syntax:
    content: public Set<Multiset.Entry<E>> entrySet()
    return:
      type: java.util.Set<com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: equals(Object object)
  nameWithType: ForwardingMultiset<E>.equals(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.equals(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.equals*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Compares the specified object with this multiset for equality. Returns `true` if the given object is also a multiset and contains equal elements with equal counts, regardless of order.
  syntax:
    content: public boolean equals(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.hashCode()
  id: hashCode()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: hashCode()
  nameWithType: ForwardingMultiset<E>.hashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.hashCode()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.hashCode*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns the hash code for this multiset. This is defined as the sum of


    ```java

    ((element == null) ? 0 : element.hashCode()) ^ count(element)

    ```


    over all distinct elements in the multiset. It follows that a multiset and its entry set always have the same hash code.
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.remove(java.lang.Object,int)
  id: remove(java.lang.Object,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: remove(Object element, int occurrences)
  nameWithType: ForwardingMultiset<E>.remove(Object element, int occurrences)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.remove(Object element, int occurrences)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.remove*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Removes a number of occurrences of the specified element from this multiset. If the multiset contains fewer than this number of occurrences to begin with, all occurrences will be removed. Note that if `occurrences == 1`, this is functionally equivalent to the call `remove(element)`.
  syntax:
    content: public int remove(Object element, int occurrences)
    parameters:
    - id: element
      type: java.lang.Object
    - id: occurrences
      type: int
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount(E,int)
  id: setCount(E,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: setCount(E element, int count)
  nameWithType: ForwardingMultiset<E>.setCount(E element, int count)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.setCount(E element, int count)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Adds or removes the necessary occurrences of an element such that the element attains the desired count.
  syntax:
    content: public int setCount(E element, int count)
    parameters:
    - id: element
      type: E
    - id: count
      type: int
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount(E,int,int)
  id: setCount(E,int,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: setCount(E element, int oldCount, int newCount)
  nameWithType: ForwardingMultiset<E>.setCount(E element, int oldCount, int newCount)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.setCount(E element, int oldCount, int newCount)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Conditionally sets the count of an element to a new value, as described in <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount*" data-throw-if-not-resolved="false">#setCount(Object, int)</xref>, provided that the element has the expected current count. If the current count is not `oldCount`, no change is made.
  syntax:
    content: public boolean setCount(E element, int oldCount, int newCount)
    parameters:
    - id: element
      type: E
    - id: oldCount
      type: int
    - id: newCount
      type: int
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardAdd(E)
  id: standardAdd(E)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: standardAdd(E element)
  nameWithType: ForwardingMultiset<E>.standardAdd(E element)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardAdd(E element)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardAdd*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.add*" data-throw-if-not-resolved="false">#add(Object)</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.add*" data-throw-if-not-resolved="false">#add(Object, int)</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.add*" data-throw-if-not-resolved="false">#add(Object, int)</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.add*" data-throw-if-not-resolved="false">#add(Object)</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardAdd(E element)
    parameters:
    - id: element
      type: E
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardAddAll(java.util.Collection<? extends E>)
  id: standardAddAll(java.util.Collection<? extends E>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: standardAddAll(Collection<? extends E> elementsToAdd)
  nameWithType: ForwardingMultiset<E>.standardAddAll(Collection<? extends E> elementsToAdd)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardAddAll(Collection<? extends E> elementsToAdd)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardAddAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.addAll*" data-throw-if-not-resolved="false">#addAll(Collection)</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.add*" data-throw-if-not-resolved="false">#add(Object)</xref> and <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.add*" data-throw-if-not-resolved="false">#add(Object, int)</xref>. If you override either of these methods, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.addAll*" data-throw-if-not-resolved="false">#addAll(Collection)</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardAddAll(Collection<? extends E> elementsToAdd)
    parameters:
    - id: elementsToAdd
      type: java.util.Collection<? extends E>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardClear()
  id: standardClear()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: standardClear()
  nameWithType: ForwardingMultiset<E>.standardClear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardClear()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardClear*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.clear" data-throw-if-not-resolved="false">#clear</xref> in terms of the `iterator` method of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.clear" data-throw-if-not-resolved="false">#clear</xref> to forward to this implementation.
  syntax:
    content: protected void standardClear()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardContains(java.lang.Object)
  id: standardContains(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: standardContains(Object object)
  nameWithType: ForwardingMultiset<E>.standardContains(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardContains(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardContains*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.contains" data-throw-if-not-resolved="false">#contains</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.count" data-throw-if-not-resolved="false">#count</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.count" data-throw-if-not-resolved="false">#count</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.contains" data-throw-if-not-resolved="false">#contains</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardContains(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardCount(java.lang.Object)
  id: standardCount(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: standardCount(Object object)
  nameWithType: ForwardingMultiset<E>.standardCount(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardCount(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardCount*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible, albeit inefficient, definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.count" data-throw-if-not-resolved="false">#count</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.count" data-throw-if-not-resolved="false">#count</xref> to forward to this implementation.
  syntax:
    content: protected int standardCount(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardEquals(java.lang.Object)
  id: standardEquals(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: standardEquals(Object object)
  nameWithType: ForwardingMultiset<E>.standardEquals(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardEquals(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardEquals*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible, albeit inefficient, definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.equals" data-throw-if-not-resolved="false">#equals</xref> in terms of `entrySet().size()` and <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.count" data-throw-if-not-resolved="false">#count</xref>. If you override either of these methods, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.equals" data-throw-if-not-resolved="false">#equals</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardEquals(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardHashCode()
  id: standardHashCode()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: standardHashCode()
  nameWithType: ForwardingMultiset<E>.standardHashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardHashCode()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardHashCode*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.hashCode" data-throw-if-not-resolved="false">#hashCode</xref> as `entrySet().hashCode()` . If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.hashCode" data-throw-if-not-resolved="false">#hashCode</xref> to forward to this implementation.
  syntax:
    content: protected int standardHashCode()
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardIterator()
  id: standardIterator()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: standardIterator()
  nameWithType: ForwardingMultiset<E>.standardIterator()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardIterator()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardIterator*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.iterator" data-throw-if-not-resolved="false">#iterator</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet" data-throw-if-not-resolved="false">#entrySet</xref> and <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.remove*" data-throw-if-not-resolved="false">#remove(Object)</xref>. If you override either of these methods, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.iterator" data-throw-if-not-resolved="false">#iterator</xref> to forward to this implementation.
  syntax:
    content: protected Iterator<E> standardIterator()
    return:
      type: java.util.Iterator<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRemove(java.lang.Object)
  id: standardRemove(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: standardRemove(Object element)
  nameWithType: ForwardingMultiset<E>.standardRemove(Object element)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardRemove(Object element)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRemove*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.remove*" data-throw-if-not-resolved="false">#remove(Object)</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.remove(java.lang.Object,int)" data-throw-if-not-resolved="false">#remove(Object, int)</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.remove(java.lang.Object,int)" data-throw-if-not-resolved="false">#remove(Object, int)</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.remove*" data-throw-if-not-resolved="false">#remove(Object)</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardRemove(Object element)
    parameters:
    - id: element
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRemoveAll(java.util.Collection<?>)
  id: standardRemoveAll(java.util.Collection<?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: standardRemoveAll(Collection<?> elementsToRemove)
  nameWithType: ForwardingMultiset<E>.standardRemoveAll(Collection<?> elementsToRemove)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardRemoveAll(Collection<?> elementsToRemove)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRemoveAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.removeAll" data-throw-if-not-resolved="false">#removeAll</xref> in terms of the `removeAll` method of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.elementSet" data-throw-if-not-resolved="false">#elementSet</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.elementSet" data-throw-if-not-resolved="false">#elementSet</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.removeAll" data-throw-if-not-resolved="false">#removeAll</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardRemoveAll(Collection<?> elementsToRemove)
    parameters:
    - id: elementsToRemove
      type: java.util.Collection<?>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRetainAll(java.util.Collection<?>)
  id: standardRetainAll(java.util.Collection<?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: standardRetainAll(Collection<?> elementsToRetain)
  nameWithType: ForwardingMultiset<E>.standardRetainAll(Collection<?> elementsToRetain)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardRetainAll(Collection<?> elementsToRetain)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRetainAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.retainAll" data-throw-if-not-resolved="false">#retainAll</xref> in terms of the `retainAll` method of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.elementSet" data-throw-if-not-resolved="false">#elementSet</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.elementSet" data-throw-if-not-resolved="false">#elementSet</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.retainAll" data-throw-if-not-resolved="false">#retainAll</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardRetainAll(Collection<?> elementsToRetain)
    parameters:
    - id: elementsToRetain
      type: java.util.Collection<?>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSetCount(E,int)
  id: standardSetCount(E,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: standardSetCount(E element, int count)
  nameWithType: ForwardingMultiset<E>.standardSetCount(E element, int count)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardSetCount(E element, int count)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSetCount*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount*" data-throw-if-not-resolved="false">#setCount(Object, int)</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.count(java.lang.Object)" data-throw-if-not-resolved="false">#count(Object)</xref>, <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.add*" data-throw-if-not-resolved="false">#add(Object, int)</xref>, and <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.remove(java.lang.Object,int)" data-throw-if-not-resolved="false">#remove(Object, int)</xref>. <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet()" data-throw-if-not-resolved="false">#entrySet()</xref>. If you override any of these methods, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount*" data-throw-if-not-resolved="false">#setCount(Object, int)</xref> to forward to this implementation.
  syntax:
    content: protected int standardSetCount(E element, int count)
    parameters:
    - id: element
      type: E
    - id: count
      type: int
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSetCount(E,int,int)
  id: standardSetCount(E,int,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: standardSetCount(E element, int oldCount, int newCount)
  nameWithType: ForwardingMultiset<E>.standardSetCount(E element, int oldCount, int newCount)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardSetCount(E element, int oldCount, int newCount)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSetCount*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount*" data-throw-if-not-resolved="false">#setCount(Object, int, int)</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.count(java.lang.Object)" data-throw-if-not-resolved="false">#count(Object)</xref> and <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount*" data-throw-if-not-resolved="false">#setCount(Object, int)</xref>. If you override either of these methods, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount*" data-throw-if-not-resolved="false">#setCount(Object, int, int)</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardSetCount(E element, int oldCount, int newCount)
    parameters:
    - id: element
      type: E
    - id: oldCount
      type: int
    - id: newCount
      type: int
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSize()
  id: standardSize()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: standardSize()
  nameWithType: ForwardingMultiset<E>.standardSize()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardSize()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSize*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible, albeit inefficient, definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.size" data-throw-if-not-resolved="false">#size</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.size" data-throw-if-not-resolved="false">#size</xref> to forward to this implementation.
  syntax:
    content: protected int standardSize()
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardToString()
  id: standardToString()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset
  langs:
  - java
  name: standardToString()
  nameWithType: ForwardingMultiset<E>.standardToString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardToString()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardToString*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.toString" data-throw-if-not-resolved="false">#toString</xref> as `entrySet().toString()` . If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet" data-throw-if-not-resolved="false">#entrySet</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.toString" data-throw-if-not-resolved="false">#toString</xref> to forward to this implementation.
  syntax:
    content: protected String standardToString()
    return:
      type: java.lang.String
references:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.ForwardingMultiset*
  name: ForwardingMultiset
  nameWithType: ForwardingMultiset<E>.ForwardingMultiset
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.ForwardingMultiset
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.Multiset<E>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.Multiset
    name: Multiset
    fullName: com.azure.cosmos.implementation.guava25.collect.Multiset
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.delegate*
  name: delegate
  nameWithType: ForwardingMultiset<E>.delegate
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.delegate
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.count*
  name: count
  nameWithType: ForwardingMultiset<E>.count
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.count
  package: com.azure.cosmos.implementation.guava25.collect
- uid: E
  spec.java:
  - uid: E
    name: E
    fullName: E
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.add*
  name: add
  nameWithType: ForwardingMultiset<E>.add
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.add
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.remove*
  name: remove
  nameWithType: ForwardingMultiset<E>.remove
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.remove
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Set<E>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.elementSet*
  name: elementSet
  nameWithType: ForwardingMultiset<E>.elementSet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.elementSet
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Set<com.azure.cosmos.implementation.guava25.collect.Multiset.Entry<E>>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry
    name: Entry
    fullName: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet*
  name: entrySet
  nameWithType: ForwardingMultiset<E>.entrySet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.entrySet
  package: com.azure.cosmos.implementation.guava25.collect
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.equals*
  name: equals
  nameWithType: ForwardingMultiset<E>.equals
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.equals
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.hashCode*
  name: hashCode
  nameWithType: ForwardingMultiset<E>.hashCode
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.hashCode
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.setCount*
  name: setCount
  nameWithType: ForwardingMultiset<E>.setCount
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.setCount
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardContains*
  name: standardContains
  nameWithType: ForwardingMultiset<E>.standardContains
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardContains
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardClear*
  name: standardClear
  nameWithType: ForwardingMultiset<E>.standardClear
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardClear
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardCount*
  name: standardCount
  nameWithType: ForwardingMultiset<E>.standardCount
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardCount
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardAdd*
  name: standardAdd
  nameWithType: ForwardingMultiset<E>.standardAdd
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardAdd
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Collection<? extends E>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: '? extends E'
    name: '? extends E'
    fullName: '? extends E'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardAddAll*
  name: standardAddAll
  nameWithType: ForwardingMultiset<E>.standardAddAll
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardAddAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRemove*
  name: standardRemove
  nameWithType: ForwardingMultiset<E>.standardRemove
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardRemove
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Collection<?>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRemoveAll*
  name: standardRemoveAll
  nameWithType: ForwardingMultiset<E>.standardRemoveAll
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardRemoveAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardRetainAll*
  name: standardRetainAll
  nameWithType: ForwardingMultiset<E>.standardRetainAll
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardRetainAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSetCount*
  name: standardSetCount
  nameWithType: ForwardingMultiset<E>.standardSetCount
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardSetCount
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Iterator<E>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardIterator*
  name: standardIterator
  nameWithType: ForwardingMultiset<E>.standardIterator
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardIterator
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardSize*
  name: standardSize
  nameWithType: ForwardingMultiset<E>.standardSize
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardSize
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardEquals*
  name: standardEquals
  nameWithType: ForwardingMultiset<E>.standardEquals
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardEquals
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardHashCode*
  name: standardHashCode
  nameWithType: ForwardingMultiset<E>.standardHashCode
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardHashCode
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.standardToString*
  name: standardToString
  nameWithType: ForwardingMultiset<E>.standardToString
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.standardToString
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>
  name: ForwardingCollection<E>
  nameWithType: ForwardingCollection<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)
  name: ForwardingCollection.addAll(Collection<? extends E>)
  nameWithType: ForwardingCollection.addAll(Collection<? extends E>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)
  name: ForwardingCollection.remove(Object)
  nameWithType: ForwardingCollection.remove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString()
  name: ForwardingCollection.standardToString()
  nameWithType: ForwardingCollection.standardToString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)
  name: ForwardingCollection.standardContainsAll(Collection<?>)
  nameWithType: ForwardingCollection.standardContainsAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.delegate()
  name: ForwardingCollection.delegate()
  nameWithType: ForwardingCollection.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.delegate()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)
  name: ForwardingCollection.add(E)
  nameWithType: ForwardingCollection.add(E)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear()
  name: ForwardingCollection.standardClear()
  nameWithType: ForwardingCollection.standardClear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)
  name: ForwardingCollection.contains(Object)
  nameWithType: ForwardingCollection.contains(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)
  name: ForwardingCollection.retainAll(Collection<?>)
  nameWithType: ForwardingCollection.retainAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()
  name: ForwardingCollection.standardToArray()
  nameWithType: ForwardingCollection.standardToArray()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)
  name: ForwardingCollection.containsAll(Collection<?>)
  nameWithType: ForwardingCollection.containsAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)
  name: ForwardingCollection.standardRetainAll(Collection<?>)
  nameWithType: ForwardingCollection.standardRetainAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()
  name: ForwardingCollection.isEmpty()
  nameWithType: ForwardingCollection.isEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()
  name: ForwardingCollection.clear()
  nameWithType: ForwardingCollection.clear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])
  name: ForwardingCollection.<T>toArray(T[])
  nameWithType: ForwardingCollection.<T>toArray(T[])
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection<? extends E>)
  name: ForwardingCollection.standardAddAll(Collection<? extends E>)
  nameWithType: ForwardingCollection.standardAddAll(Collection<? extends E>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection<? extends E>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()
  name: ForwardingCollection.size()
  nameWithType: ForwardingCollection.size()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()
  name: ForwardingCollection.toArray()
  nameWithType: ForwardingCollection.toArray()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove(java.lang.Object)
  name: ForwardingCollection.standardRemove(Object)
  nameWithType: ForwardingCollection.standardRemove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)
  name: ForwardingCollection.removeAll(Collection<?>)
  nameWithType: ForwardingCollection.removeAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection<?>)
  name: ForwardingCollection.standardRemoveAll(Collection<?>)
  nameWithType: ForwardingCollection.standardRemoveAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()
  name: ForwardingCollection.standardIsEmpty()
  nameWithType: ForwardingCollection.standardIsEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()
  name: ForwardingCollection.iterator()
  nameWithType: ForwardingCollection.iterator()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  name: ForwardingObject.toString()
  nameWithType: ForwardingObject.toString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains(java.lang.Object)
  name: ForwardingCollection.standardContains(Object)
  nameWithType: ForwardingCollection.standardContains(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])
  name: ForwardingCollection.<T>standardToArray(T[])
  nameWithType: ForwardingCollection.<T>standardToArray(T[])
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.StandardElementSet
  name: ForwardingMultiset<E>.StandardElementSet
  nameWithType: ForwardingMultiset<E>.StandardElementSet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.StandardElementSet
- uid: com.azure.cosmos.implementation.guava25.collect.Multiset
  name: Multiset
  nameWithType: Multiset
  fullName: com.azure.cosmos.implementation.guava25.collect.Multiset
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry
  name: Multiset.Entry
  nameWithType: Multiset.Entry
  fullName: com.azure.cosmos.implementation.guava25.collect.Multiset.Entry
- uid: '? extends E'
  name: '? extends E'
  nameWithType: '? extends E'
  fullName: '? extends E'
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  name: ForwardingCollection
  nameWithType: ForwardingCollection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
- uid: '? extends E>)'
  name: '? extends E>)'
  nameWithType: '? extends E>)'
  fullName: '? extends E>)'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection
  name: ForwardingCollection.addAll(Collection
  nameWithType: ForwardingCollection.addAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection
  name: ForwardingCollection.standardContainsAll(Collection
  nameWithType: ForwardingCollection.standardContainsAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection
  name: ForwardingCollection.retainAll(Collection
  nameWithType: ForwardingCollection.retainAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection
  name: ForwardingCollection.containsAll(Collection
  nameWithType: ForwardingCollection.containsAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection
  name: ForwardingCollection.standardRetainAll(Collection
  nameWithType: ForwardingCollection.standardRetainAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection
- uid: T>toArray(T[])
  name: T>toArray(T[])
  nameWithType: T>toArray(T[])
  fullName: T>toArray(T[])
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.
  name: ForwardingCollection.
  nameWithType: ForwardingCollection.
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection
  name: ForwardingCollection.standardAddAll(Collection
  nameWithType: ForwardingCollection.standardAddAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection
  name: ForwardingCollection.removeAll(Collection
  nameWithType: ForwardingCollection.removeAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection
  name: ForwardingCollection.standardRemoveAll(Collection
  nameWithType: ForwardingCollection.standardRemoveAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection
- uid: T>standardToArray(T[])
  name: T>standardToArray(T[])
  nameWithType: T>standardToArray(T[])
  fullName: T>standardToArray(T[])
