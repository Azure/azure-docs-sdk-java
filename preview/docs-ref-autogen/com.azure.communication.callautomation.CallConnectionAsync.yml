### YamlMime:JavaType
uid: "com.azure.communication.callautomation.CallConnectionAsync"
fullName: "com.azure.communication.callautomation.CallConnectionAsync"
name: "CallConnectionAsync"
nameWithType: "CallConnectionAsync"
summary: "Call<wbr>Connection<wbr>Async for mid-call actions"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **CallConnectionAsync**"
methods:
- uid: "com.azure.communication.callautomation.CallConnectionAsync.addParticipant(com.azure.communication.callautomation.models.CallInvite)"
  fullName: "com.azure.communication.callautomation.CallConnectionAsync.addParticipant(CallInvite participant)"
  name: "addParticipant(CallInvite participant)"
  nameWithType: "CallConnectionAsync.addParticipant(CallInvite participant)"
  summary: "Add a participant to the call."
  parameters:
  - description: "participant to invite."
    name: "participant"
    type: "<xref href=\"com.azure.communication.callautomation.models.CallInvite?alt=com.azure.communication.callautomation.models.CallInvite&text=CallInvite\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<AddParticipantResult> addParticipant(CallInvite participant)"
  desc: "Add a participant to the call."
  returns:
    description: "Result of adding a participant to the call."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.communication.callautomation.models.AddParticipantResult?alt=com.azure.communication.callautomation.models.AddParticipantResult&text=AddParticipantResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.callautomation.CallConnectionAsync.addParticipantWithResponse(com.azure.communication.callautomation.models.AddParticipantOptions)"
  fullName: "com.azure.communication.callautomation.CallConnectionAsync.addParticipantWithResponse(AddParticipantOptions addParticipantOptions)"
  name: "addParticipantWithResponse(AddParticipantOptions addParticipantOptions)"
  nameWithType: "CallConnectionAsync.addParticipantWithResponse(AddParticipantOptions addParticipantOptions)"
  summary: "Add a participant to the call."
  parameters:
  - description: "Options bag for addParticipant"
    name: "addParticipantOptions"
    type: "<xref href=\"com.azure.communication.callautomation.models.AddParticipantOptions?alt=com.azure.communication.callautomation.models.AddParticipantOptions&text=AddParticipantOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<AddParticipantResult>> addParticipantWithResponse(AddParticipantOptions addParticipantOptions)"
  desc: "Add a participant to the call."
  returns:
    description: "Response with result of adding a participant to the call."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callautomation.models.AddParticipantResult?alt=com.azure.communication.callautomation.models.AddParticipantResult&text=AddParticipantResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.callautomation.CallConnectionAsync.getCallMediaAsync()"
  fullName: "com.azure.communication.callautomation.CallConnectionAsync.getCallMediaAsync()"
  name: "getCallMediaAsync()"
  nameWithType: "CallConnectionAsync.getCallMediaAsync()"
  summary: "Returns an object of Call<wbr>Content<wbr>Async"
  syntax: "public CallMediaAsync getCallMediaAsync()"
  desc: "Returns an object of CallContentAsync"
  returns:
    description: "a CallContentAsync."
    type: "<xref href=\"com.azure.communication.callautomation.CallMediaAsync?alt=com.azure.communication.callautomation.CallMediaAsync&text=CallMediaAsync\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.callautomation.CallConnectionAsync.getCallProperties()"
  fullName: "com.azure.communication.callautomation.CallConnectionAsync.getCallProperties()"
  name: "getCallProperties()"
  nameWithType: "CallConnectionAsync.getCallProperties()"
  summary: "Get call connection properties."
  syntax: "public Mono<CallConnectionProperties> getCallProperties()"
  desc: "Get call connection properties."
  returns:
    description: "Response payload for a successful get call connection request."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.communication.callautomation.models.CallConnectionProperties?alt=com.azure.communication.callautomation.models.CallConnectionProperties&text=CallConnectionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.callautomation.CallConnectionAsync.getCallPropertiesWithResponse()"
  fullName: "com.azure.communication.callautomation.CallConnectionAsync.getCallPropertiesWithResponse()"
  name: "getCallPropertiesWithResponse()"
  nameWithType: "CallConnectionAsync.getCallPropertiesWithResponse()"
  summary: "Get call connection properties."
  syntax: "public Mono<Response<CallConnectionProperties>> getCallPropertiesWithResponse()"
  desc: "Get call connection properties."
  returns:
    description: "Response payload for a successful get call connection request."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callautomation.models.CallConnectionProperties?alt=com.azure.communication.callautomation.models.CallConnectionProperties&text=CallConnectionProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.callautomation.CallConnectionAsync.getParticipant(com.azure.communication.common.CommunicationIdentifier)"
  fullName: "com.azure.communication.callautomation.CallConnectionAsync.getParticipant(CommunicationIdentifier targetParticipant)"
  name: "getParticipant(CommunicationIdentifier targetParticipant)"
  nameWithType: "CallConnectionAsync.getParticipant(CommunicationIdentifier targetParticipant)"
  summary: "Get a specific participant."
  parameters:
  - description: "The participant to retrieve."
    name: "targetParticipant"
    type: "<xref href=\"com.azure.communication.common.CommunicationIdentifier?alt=com.azure.communication.common.CommunicationIdentifier&text=CommunicationIdentifier\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CallParticipant> getParticipant(CommunicationIdentifier targetParticipant)"
  desc: "Get a specific participant."
  returns:
    description: "Result of getting a desired participant in the call."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.communication.callautomation.models.CallParticipant?alt=com.azure.communication.callautomation.models.CallParticipant&text=CallParticipant\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.callautomation.CallConnectionAsync.getParticipantWithResponse(com.azure.communication.common.CommunicationIdentifier)"
  fullName: "com.azure.communication.callautomation.CallConnectionAsync.getParticipantWithResponse(CommunicationIdentifier targetParticipant)"
  name: "getParticipantWithResponse(CommunicationIdentifier targetParticipant)"
  nameWithType: "CallConnectionAsync.getParticipantWithResponse(CommunicationIdentifier targetParticipant)"
  summary: "Get a specific participant."
  parameters:
  - description: "The participant to retrieve."
    name: "targetParticipant"
    type: "<xref href=\"com.azure.communication.common.CommunicationIdentifier?alt=com.azure.communication.common.CommunicationIdentifier&text=CommunicationIdentifier\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<CallParticipant>> getParticipantWithResponse(CommunicationIdentifier targetParticipant)"
  desc: "Get a specific participant."
  returns:
    description: "Response with the result of getting a desired participant in the call."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callautomation.models.CallParticipant?alt=com.azure.communication.callautomation.models.CallParticipant&text=CallParticipant\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.callautomation.CallConnectionAsync.hangUp(boolean)"
  fullName: "com.azure.communication.callautomation.CallConnectionAsync.hangUp(boolean isForEveryone)"
  name: "hangUp(boolean isForEveryone)"
  nameWithType: "CallConnectionAsync.hangUp(boolean isForEveryone)"
  summary: "Hangup a call."
  parameters:
  - description: "determine if the call is handed up for all participants."
    name: "isForEveryone"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> hangUp(boolean isForEveryone)"
  desc: "Hangup a call."
  returns:
    description: "Void."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.callautomation.CallConnectionAsync.hangUpWithResponse(boolean)"
  fullName: "com.azure.communication.callautomation.CallConnectionAsync.hangUpWithResponse(boolean isForEveryone)"
  name: "hangUpWithResponse(boolean isForEveryone)"
  nameWithType: "CallConnectionAsync.hangUpWithResponse(boolean isForEveryone)"
  summary: "Hangup a call."
  parameters:
  - description: "determine if the call is handed up for all participants."
    name: "isForEveryone"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> hangUpWithResponse(boolean isForEveryone)"
  desc: "Hangup a call."
  returns:
    description: "Response with Void."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.communication.callautomation.CallConnectionAsync.listParticipants()"
  fullName: "com.azure.communication.callautomation.CallConnectionAsync.listParticipants()"
  name: "listParticipants()"
  nameWithType: "CallConnectionAsync.listParticipants()"
  summary: "Get all participants."
  syntax: "public PagedFlux<CallParticipant> listParticipants()"
  desc: "Get all participants."
  returns:
    description: "Response with result of getting all participants in the call."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callautomation.models.CallParticipant?alt=com.azure.communication.callautomation.models.CallParticipant&text=CallParticipant\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.callautomation.CallConnectionAsync.muteParticipant(com.azure.communication.common.CommunicationIdentifier)"
  fullName: "com.azure.communication.callautomation.CallConnectionAsync.muteParticipant(CommunicationIdentifier targetParticipant)"
  name: "muteParticipant(CommunicationIdentifier targetParticipant)"
  nameWithType: "CallConnectionAsync.muteParticipant(CommunicationIdentifier targetParticipant)"
  summary: "Mutes a participant in the call."
  parameters:
  - description: "- Participant to be muted. Only ACS Users are currently supported."
    name: "targetParticipant"
    type: "<xref href=\"com.azure.communication.common.CommunicationIdentifier?alt=com.azure.communication.common.CommunicationIdentifier&text=CommunicationIdentifier\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<MuteParticipantResult> muteParticipant(CommunicationIdentifier targetParticipant)"
  desc: "Mutes a participant in the call."
  returns:
    description: "A MuteParticipantResult object."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.communication.callautomation.models.MuteParticipantResult?alt=com.azure.communication.callautomation.models.MuteParticipantResult&text=MuteParticipantResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.callautomation.CallConnectionAsync.muteParticipantWithResponse(com.azure.communication.common.CommunicationIdentifier,java.lang.String)"
  fullName: "com.azure.communication.callautomation.CallConnectionAsync.muteParticipantWithResponse(CommunicationIdentifier targetParticipant, String operationContext)"
  name: "muteParticipantWithResponse(CommunicationIdentifier targetParticipant, String operationContext)"
  nameWithType: "CallConnectionAsync.muteParticipantWithResponse(CommunicationIdentifier targetParticipant, String operationContext)"
  summary: "Mutes a participant in the call."
  parameters:
  - description: "- Participant to be muted. Only ACS Users are currently supported."
    name: "targetParticipant"
    type: "<xref href=\"com.azure.communication.common.CommunicationIdentifier?alt=com.azure.communication.common.CommunicationIdentifier&text=CommunicationIdentifier\" data-throw-if-not-resolved=\"False\" />"
  - description: "operationContext (pass null if not applicable)"
    name: "operationContext"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<MuteParticipantResult>> muteParticipantWithResponse(CommunicationIdentifier targetParticipant, String operationContext)"
  desc: "Mutes a participant in the call."
  returns:
    description: "Response with result of muting a participant from the call."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callautomation.models.MuteParticipantResult?alt=com.azure.communication.callautomation.models.MuteParticipantResult&text=MuteParticipantResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.callautomation.CallConnectionAsync.removeParticipant(com.azure.communication.common.CommunicationIdentifier)"
  fullName: "com.azure.communication.callautomation.CallConnectionAsync.removeParticipant(CommunicationIdentifier participantToRemove)"
  name: "removeParticipant(CommunicationIdentifier participantToRemove)"
  nameWithType: "CallConnectionAsync.removeParticipant(CommunicationIdentifier participantToRemove)"
  summary: "Remove a participant from the call."
  parameters:
  - description: "participant to remove."
    name: "participantToRemove"
    type: "<xref href=\"com.azure.communication.common.CommunicationIdentifier?alt=com.azure.communication.common.CommunicationIdentifier&text=CommunicationIdentifier\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<RemoveParticipantResult> removeParticipant(CommunicationIdentifier participantToRemove)"
  desc: "Remove a participant from the call."
  returns:
    description: "Result of removing a participant from the call."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.communication.callautomation.models.RemoveParticipantResult?alt=com.azure.communication.callautomation.models.RemoveParticipantResult&text=RemoveParticipantResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.callautomation.CallConnectionAsync.removeParticipantWithResponse(com.azure.communication.callautomation.models.RemoveParticipantOptions)"
  fullName: "com.azure.communication.callautomation.CallConnectionAsync.removeParticipantWithResponse(RemoveParticipantOptions removeParticipantOptions)"
  name: "removeParticipantWithResponse(RemoveParticipantOptions removeParticipantOptions)"
  nameWithType: "CallConnectionAsync.removeParticipantWithResponse(RemoveParticipantOptions removeParticipantOptions)"
  summary: "Remove a participant from the call."
  parameters:
  - description: "Options bag for removeParticipant"
    name: "removeParticipantOptions"
    type: "<xref href=\"com.azure.communication.callautomation.models.RemoveParticipantOptions?alt=com.azure.communication.callautomation.models.RemoveParticipantOptions&text=RemoveParticipantOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<RemoveParticipantResult>> removeParticipantWithResponse(RemoveParticipantOptions removeParticipantOptions)"
  desc: "Remove a participant from the call."
  returns:
    description: "Response with result of removing a participant from the call."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callautomation.models.RemoveParticipantResult?alt=com.azure.communication.callautomation.models.RemoveParticipantResult&text=RemoveParticipantResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.callautomation.CallConnectionAsync.transferCallToParticipant(com.azure.communication.common.CommunicationIdentifier)"
  fullName: "com.azure.communication.callautomation.CallConnectionAsync.transferCallToParticipant(CommunicationIdentifier targetParticipant)"
  name: "transferCallToParticipant(CommunicationIdentifier targetParticipant)"
  nameWithType: "CallConnectionAsync.transferCallToParticipant(CommunicationIdentifier targetParticipant)"
  summary: "Transfer the call to a participant."
  parameters:
  - description: "A <xref uid=\"com.azure.communication.common.CommunicationIdentifier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CommunicationIdentifier\"></xref> representing the targetParticipant participant of this transfer."
    name: "targetParticipant"
    type: "<xref href=\"com.azure.communication.common.CommunicationIdentifier?alt=com.azure.communication.common.CommunicationIdentifier&text=CommunicationIdentifier\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<TransferCallResult> transferCallToParticipant(CommunicationIdentifier targetParticipant)"
  desc: "Transfer the call to a participant."
  returns:
    description: "Result of transferring the call to a designated participant."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.communication.callautomation.models.TransferCallResult?alt=com.azure.communication.callautomation.models.TransferCallResult&text=TransferCallResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.callautomation.CallConnectionAsync.transferCallToParticipantWithResponse(com.azure.communication.callautomation.models.TransferCallToParticipantOptions)"
  fullName: "com.azure.communication.callautomation.CallConnectionAsync.transferCallToParticipantWithResponse(TransferCallToParticipantOptions transferCallToParticipantOptions)"
  name: "transferCallToParticipantWithResponse(TransferCallToParticipantOptions transferCallToParticipantOptions)"
  nameWithType: "CallConnectionAsync.transferCallToParticipantWithResponse(TransferCallToParticipantOptions transferCallToParticipantOptions)"
  summary: "Transfer the call to a participant."
  parameters:
  - description: "Options bag for transferToParticipantCall"
    name: "transferCallToParticipantOptions"
    type: "<xref href=\"com.azure.communication.callautomation.models.TransferCallToParticipantOptions?alt=com.azure.communication.callautomation.models.TransferCallToParticipantOptions&text=TransferCallToParticipantOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<TransferCallResult>> transferCallToParticipantWithResponse(TransferCallToParticipantOptions transferCallToParticipantOptions)"
  desc: "Transfer the call to a participant."
  returns:
    description: "Response with result of transferring the call to a designated participant."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callautomation.models.TransferCallResult?alt=com.azure.communication.callautomation.models.TransferCallResult&text=TransferCallResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "CallConnectionAsync for mid-call actions"
metadata: {}
package: "com.azure.communication.callautomation"
artifact: com.azure:azure-communication-callautomation:1.1.0-beta.1
