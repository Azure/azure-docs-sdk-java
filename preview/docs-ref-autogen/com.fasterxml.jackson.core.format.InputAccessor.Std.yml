### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std
  id: Std
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.format
  children:
  - com.fasterxml.jackson.core.format.InputAccessor.Std.Std(byte[])
  - com.fasterxml.jackson.core.format.InputAccessor.Std.Std(byte[],int,int)
  - com.fasterxml.jackson.core.format.InputAccessor.Std.Std(java.io.InputStream,byte[])
  - com.fasterxml.jackson.core.format.InputAccessor.Std._buffer
  - com.fasterxml.jackson.core.format.InputAccessor.Std._bufferedEnd
  - com.fasterxml.jackson.core.format.InputAccessor.Std._bufferedStart
  - com.fasterxml.jackson.core.format.InputAccessor.Std._in
  - com.fasterxml.jackson.core.format.InputAccessor.Std._ptr
  - com.fasterxml.jackson.core.format.InputAccessor.Std.createMatcher(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.format.MatchStrength)
  - com.fasterxml.jackson.core.format.InputAccessor.Std.hasMoreBytes()
  - com.fasterxml.jackson.core.format.InputAccessor.Std.nextByte()
  - com.fasterxml.jackson.core.format.InputAccessor.Std.reset()
  langs:
  - java
  name: InputAccessor.Std
  nameWithType: InputAccessor.Std
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std
  type: Class
  package: com.fasterxml.jackson.core.format
  summary: Basic implementation that reads data from given <xref uid="java.io.InputStream" data-throw-if-not-resolved="false">InputStream</xref> and buffers it as necessary.
  syntax:
    content: public static class InputAccessor.Std implements InputAccessor
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.core.format.InputAccessor
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std.Std(byte[])
  id: Std(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.format.InputAccessor.Std
  langs:
  - java
  name: Std(byte[] inputDocument)
  nameWithType: InputAccessor.Std.Std(byte[] inputDocument)
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std.Std(byte[] inputDocument)
  overload: com.fasterxml.jackson.core.format.InputAccessor.Std.Std*
  type: Constructor
  package: com.fasterxml.jackson.core.format
  summary: Constructor used when the full input (or at least enough leading bytes of full input) is available.
  syntax:
    content: public Std(byte[] inputDocument)
    parameters:
    - id: inputDocument
      type: byte[]
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std.Std(byte[],int,int)
  id: Std(byte[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.format.InputAccessor.Std
  langs:
  - java
  name: Std(byte[] inputDocument, int start, int len)
  nameWithType: InputAccessor.Std.Std(byte[] inputDocument, int start, int len)
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std.Std(byte[] inputDocument, int start, int len)
  overload: com.fasterxml.jackson.core.format.InputAccessor.Std.Std*
  type: Constructor
  package: com.fasterxml.jackson.core.format
  summary: Constructor used when the full input (or at least enough leading bytes of full input) is available.
  syntax:
    content: public Std(byte[] inputDocument, int start, int len)
    parameters:
    - id: inputDocument
      type: byte[]
    - id: start
      type: int
    - id: len
      type: int
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std.Std(java.io.InputStream,byte[])
  id: Std(java.io.InputStream,byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.format.InputAccessor.Std
  langs:
  - java
  name: Std(InputStream in, byte[] buffer)
  nameWithType: InputAccessor.Std.Std(InputStream in, byte[] buffer)
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std.Std(InputStream in, byte[] buffer)
  overload: com.fasterxml.jackson.core.format.InputAccessor.Std.Std*
  type: Constructor
  package: com.fasterxml.jackson.core.format
  summary: Constructor used when content to check is available via input stream and must be read.
  syntax:
    content: public Std(InputStream in, byte[] buffer)
    parameters:
    - id: in
      type: java.io.InputStream
    - id: buffer
      type: byte[]
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std._buffer
  id: _buffer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.format.InputAccessor.Std
  langs:
  - java
  name: _buffer
  nameWithType: InputAccessor.Std._buffer
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std._buffer
  type: Field
  package: com.fasterxml.jackson.core.format
  syntax:
    content: protected final byte[] _buffer
    return:
      type: byte[]
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std._bufferedEnd
  id: _bufferedEnd
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.format.InputAccessor.Std
  langs:
  - java
  name: _bufferedEnd
  nameWithType: InputAccessor.Std._bufferedEnd
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std._bufferedEnd
  type: Field
  package: com.fasterxml.jackson.core.format
  summary: End of valid bytes in the buffer (points to one past last valid)
  syntax:
    content: protected int _bufferedEnd
    return:
      type: int
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std._bufferedStart
  id: _bufferedStart
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.format.InputAccessor.Std
  langs:
  - java
  name: _bufferedStart
  nameWithType: InputAccessor.Std._bufferedStart
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std._bufferedStart
  type: Field
  package: com.fasterxml.jackson.core.format
  syntax:
    content: protected final int _bufferedStart
    return:
      type: int
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std._in
  id: _in
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.format.InputAccessor.Std
  langs:
  - java
  name: _in
  nameWithType: InputAccessor.Std._in
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std._in
  type: Field
  package: com.fasterxml.jackson.core.format
  syntax:
    content: protected final InputStream _in
    return:
      type: java.io.InputStream
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std._ptr
  id: _ptr
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.format.InputAccessor.Std
  langs:
  - java
  name: _ptr
  nameWithType: InputAccessor.Std._ptr
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std._ptr
  type: Field
  package: com.fasterxml.jackson.core.format
  summary: Pointer to next available buffered byte in <xref uid="com.fasterxml.jackson.core.format.InputAccessor.Std._buffer" data-throw-if-not-resolved="false">#_buffer</xref>.
  syntax:
    content: protected int _ptr
    return:
      type: int
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std.createMatcher(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.format.MatchStrength)
  id: createMatcher(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.format.MatchStrength)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.format.InputAccessor.Std
  langs:
  - java
  name: createMatcher(JsonFactory match, MatchStrength matchStrength)
  nameWithType: InputAccessor.Std.createMatcher(JsonFactory match, MatchStrength matchStrength)
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std.createMatcher(JsonFactory match, MatchStrength matchStrength)
  overload: com.fasterxml.jackson.core.format.InputAccessor.Std.createMatcher*
  type: Method
  package: com.fasterxml.jackson.core.format
  syntax:
    content: public DataFormatMatcher createMatcher(JsonFactory match, MatchStrength matchStrength)
    parameters:
    - id: match
      type: com.fasterxml.jackson.core.JsonFactory
    - id: matchStrength
      type: com.fasterxml.jackson.core.format.MatchStrength
    return:
      type: com.fasterxml.jackson.core.format.DataFormatMatcher
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std.hasMoreBytes()
  id: hasMoreBytes()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.format.InputAccessor.Std
  langs:
  - java
  name: hasMoreBytes()
  nameWithType: InputAccessor.Std.hasMoreBytes()
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std.hasMoreBytes()
  overload: com.fasterxml.jackson.core.format.InputAccessor.Std.hasMoreBytes*
  type: Method
  package: com.fasterxml.jackson.core.format
  summary: Method to call to check if more input is available. Since this may result in more content to be read (at least one more byte), a <xref uid="java.io.IOException" data-throw-if-not-resolved="false">IOException</xref> may get thrown.
  syntax:
    content: public boolean hasMoreBytes()
    return:
      type: boolean
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std.nextByte()
  id: nextByte()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.format.InputAccessor.Std
  langs:
  - java
  name: nextByte()
  nameWithType: InputAccessor.Std.nextByte()
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std.nextByte()
  overload: com.fasterxml.jackson.core.format.InputAccessor.Std.nextByte*
  type: Method
  package: com.fasterxml.jackson.core.format
  summary: Returns next byte available, if any; if no more bytes are available, will throw <xref uid="" data-throw-if-not-resolved="false">java.io.EOFException</xref>.
  syntax:
    content: public byte nextByte()
    return:
      type: byte
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std.reset()
  id: reset()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.format.InputAccessor.Std
  langs:
  - java
  name: reset()
  nameWithType: InputAccessor.Std.reset()
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std.reset()
  overload: com.fasterxml.jackson.core.format.InputAccessor.Std.reset*
  type: Method
  package: com.fasterxml.jackson.core.format
  summary: Method that can be called to reset accessor to read from beginning of input.
  syntax:
    content: public void reset()
references:
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std.Std*
  name: Std
  nameWithType: InputAccessor.Std.Std
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std.Std
  package: com.fasterxml.jackson.core.format
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std.hasMoreBytes*
  name: hasMoreBytes
  nameWithType: InputAccessor.Std.hasMoreBytes
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std.hasMoreBytes
  package: com.fasterxml.jackson.core.format
- uid: byte
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std.nextByte*
  name: nextByte
  nameWithType: InputAccessor.Std.nextByte
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std.nextByte
  package: com.fasterxml.jackson.core.format
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std.reset*
  name: reset
  nameWithType: InputAccessor.Std.reset
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std.reset
  package: com.fasterxml.jackson.core.format
- uid: com.fasterxml.jackson.core.JsonFactory
  name: JsonFactory
  nameWithType: JsonFactory
  fullName: com.fasterxml.jackson.core.JsonFactory
- uid: com.fasterxml.jackson.core.format.MatchStrength
  name: MatchStrength
  nameWithType: MatchStrength
  fullName: com.fasterxml.jackson.core.format.MatchStrength
- uid: com.fasterxml.jackson.core.format.DataFormatMatcher
  name: DataFormatMatcher
  nameWithType: DataFormatMatcher
  fullName: com.fasterxml.jackson.core.format.DataFormatMatcher
- uid: com.fasterxml.jackson.core.format.InputAccessor.Std.createMatcher*
  name: createMatcher
  nameWithType: InputAccessor.Std.createMatcher
  fullName: com.fasterxml.jackson.core.format.InputAccessor.Std.createMatcher
  package: com.fasterxml.jackson.core.format
- uid: com.fasterxml.jackson.core.format.InputAccessor
  name: InputAccessor
  nameWithType: InputAccessor
  fullName: com.fasterxml.jackson.core.format.InputAccessor
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
