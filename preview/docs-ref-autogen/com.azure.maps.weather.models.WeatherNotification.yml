### YamlMime:JavaType
uid: "com.azure.maps.weather.models.WeatherNotification"
fullName: "com.azure.maps.weather.models.WeatherNotification"
name: "WeatherNotification"
nameWithType: "WeatherNotification"
summary: "The Weather<wbr>Notification model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **WeatherNotification**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.models.WeatherNotification?alt=com.azure.maps.weather.models.WeatherNotification&text=WeatherNotification\" data-throw-if-not-resolved=\"False\" />&gt;"
methods:
- uid: "com.azure.maps.weather.models.WeatherNotification.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.maps.weather.models.WeatherNotification.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "WeatherNotification.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Weather<wbr>Notification from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static WeatherNotification fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the WeatherNotification."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of WeatherNotification from the JsonReader."
  returns:
    description: "An instance of WeatherNotification if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.maps.weather.models.WeatherNotification?alt=com.azure.maps.weather.models.WeatherNotification&text=WeatherNotification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.WeatherNotification.getHazardCode()"
  fullName: "com.azure.maps.weather.models.WeatherNotification.getHazardCode()"
  name: "getHazardCode()"
  nameWithType: "WeatherNotification.getHazardCode()"
  summary: "Get the hazard<wbr>Code property: A unique identifier (non-displayable) for each type of hazard: Light<wbr>Rain, Moderate<wbr>Rain, Heavy<wbr>Rain, Light<wbr>Mix, Moderate<wbr>Mix, Heavy<wbr>Mix, Light<wbr>Snow, Moderate<wbr>Snow, Heavy<wbr>Snow, Light<wbr>Ice, Moderate<wbr>Ice, Heavy<wbr>Ice, Hail, Large<wbr>Hail, Sun<wbr>Glare, Sun<wbr>Glare<wbr>High, Lightning, Severe<wbr>Lightning, Wind<wbr>Moderate, Wind<wbr>High, Wind<wbr>Extreme, Flood<wbr>Warning, Flash<wbr>Flood<wbr>Warning, Tornado<wbr>Warning, Tsunami<wbr>Warning, Severe<wbr>Thunderstorm<wbr>Warning."
  syntax: "public String getHazardCode()"
  desc: "Get the hazardCode property: A unique identifier (non-displayable) for each type of hazard: LightRain, ModerateRain, HeavyRain, LightMix, ModerateMix, HeavyMix, LightSnow, ModerateSnow, HeavySnow, LightIce, ModerateIce, HeavyIce, Hail, LargeHail, SunGlare, SunGlareHigh, Lightning, SevereLightning, WindModerate, WindHigh, WindExtreme, FloodWarning, FlashFloodWarning, TornadoWarning, TsunamiWarning, SevereThunderstormWarning."
  returns:
    description: "the hazardCode value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.maps.weather.models.WeatherNotification.getHazardIndex()"
  fullName: "com.azure.maps.weather.models.WeatherNotification.getHazardIndex()"
  name: "getHazardIndex()"
  nameWithType: "WeatherNotification.getHazardIndex()"
  summary: "Get the hazard<wbr>Index property: A severity/hazard index."
  syntax: "public HazardIndex getHazardIndex()"
  desc: "Get the hazardIndex property: A severity/hazard index. \\* \\`0\\` - No hazard. \\* \\`1\\` - Be informed, be aware. \\* \\`2\\` - Pay attention, be prepared. \\* \\`3\\` - Take action. \\* \\`4\\` - Life threatening, emergency."
  returns:
    description: "the hazardIndex value."
    type: "<xref href=\"com.azure.maps.weather.models.HazardIndex?alt=com.azure.maps.weather.models.HazardIndex&text=HazardIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.WeatherNotification.getShortDescription()"
  fullName: "com.azure.maps.weather.models.WeatherNotification.getShortDescription()"
  name: "getShortDescription()"
  nameWithType: "WeatherNotification.getShortDescription()"
  summary: "Get the short<wbr>Description property: A displayable short phrase describing the forecasted conditions and precipitation intensity/type."
  syntax: "public String getShortDescription()"
  desc: "Get the shortDescription property: A displayable short phrase describing the forecasted conditions and precipitation intensity/type."
  returns:
    description: "the shortDescription value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.maps.weather.models.WeatherNotification.getType()"
  fullName: "com.azure.maps.weather.models.WeatherNotification.getType()"
  name: "getType()"
  nameWithType: "WeatherNotification.getType()"
  summary: "Get the type property: A type of notification generated to warn drivers of the onset of a hazard, or increase in intensity of a hazard."
  syntax: "public String getType()"
  desc: "Get the type property: A type of notification generated to warn drivers of the onset of a hazard, or increase in intensity of a hazard."
  returns:
    description: "the type value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.maps.weather.models.WeatherNotification.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.maps.weather.models.WeatherNotification.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "WeatherNotification.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The WeatherNotification model."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.models.WeatherNotification?alt=com.azure.maps.weather.models.WeatherNotification&text=WeatherNotification\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.maps.weather.models"
artifact: com.azure:azure-maps-weather:1.0.0-beta.2
