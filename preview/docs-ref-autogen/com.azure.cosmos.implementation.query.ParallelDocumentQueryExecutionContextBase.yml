### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.query.ParallelDocumentQueryExecutionContextBase"
fullName: "com.azure.cosmos.implementation.query.ParallelDocumentQueryExecutionContextBase<T>"
name: "ParallelDocumentQueryExecutionContextBase<T>"
nameWithType: "ParallelDocumentQueryExecutionContextBase<T>"
summary: "While this class is public, but it is not part of our published public APIs. This is meant to be internally used only by our sdk."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.createCommonHeadersAsync(com.azure.cosmos.models.CosmosQueryRequestOptions)"
- "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.createDocumentServiceRequest(java.util.Map<java.lang.String,java.lang.String>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.implementation.routing.PartitionKeyInternal)"
- "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.createDocumentServiceRequest(java.util.Map<java.lang.String,java.lang.String>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.implementation.routing.PartitionKeyInternal,com.azure.cosmos.implementation.PartitionKeyRange,java.lang.String)"
- "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeAsync()"
- "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeQueryRequestAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)"
- "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeReadFeedRequestAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)"
- "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeRequestAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)"
- "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.getFeedOptions(java.lang.String,java.lang.Integer)"
- "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.getFeedResponse(reactor.core.publisher.Mono<com.azure.cosmos.implementation.RxDocumentServiceResponse>)"
- "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.populatePartitionKeyRangeInfo(com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.implementation.PartitionKeyRange,java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class ParallelDocumentQueryExecutionContextBase<T> extends DocumentQueryExecutionContextBase<T> implements IDocumentQueryExecutionComponent<T>"
constructors:
- "com.azure.cosmos.implementation.query.ParallelDocumentQueryExecutionContextBase.ParallelDocumentQueryExecutionContextBase(com.azure.cosmos.implementation.query.IDocumentQueryClient,java.util.List<com.azure.cosmos.implementation.PartitionKeyRange>,com.azure.cosmos.implementation.ResourceType,java.lang.Class<T>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.String,java.lang.String,boolean,boolean,java.util.UUID)"
fields:
- "com.azure.cosmos.implementation.query.ParallelDocumentQueryExecutionContextBase.documentProducers"
- "com.azure.cosmos.implementation.query.ParallelDocumentQueryExecutionContextBase.logger"
- "com.azure.cosmos.implementation.query.ParallelDocumentQueryExecutionContextBase.pageSize"
- "com.azure.cosmos.implementation.query.ParallelDocumentQueryExecutionContextBase.partitionKeyRanges"
- "com.azure.cosmos.implementation.query.ParallelDocumentQueryExecutionContextBase.querySpec"
- "com.azure.cosmos.implementation.query.ParallelDocumentQueryExecutionContextBase.top"
methods:
- "com.azure.cosmos.implementation.query.ParallelDocumentQueryExecutionContextBase.<TContinuationToken>findTargetRangeAndExtractContinuationTokens(java.util.List<com.azure.cosmos.implementation.PartitionKeyRange>,com.azure.cosmos.implementation.routing.Range<java.lang.String>)"
- "com.azure.cosmos.implementation.query.ParallelDocumentQueryExecutionContextBase.createDocumentProducer(java.lang.String,com.azure.cosmos.implementation.PartitionKeyRange,java.lang.String,int,com.azure.cosmos.models.CosmosQueryRequestOptions,com.azure.cosmos.models.SqlQuerySpec,java.util.Map<java.lang.String,java.lang.String>,com.azure.cosmos.implementation.query.TriFunction<com.azure.cosmos.implementation.PartitionKeyRange,java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>,java.util.concurrent.Callable<com.azure.cosmos.implementation.DocumentClientRetryPolicy>)"
- "com.azure.cosmos.implementation.query.ParallelDocumentQueryExecutionContextBase.drainAsync(int)"
- "com.azure.cosmos.implementation.query.ParallelDocumentQueryExecutionContextBase.initialize(java.lang.String,java.util.Map<com.azure.cosmos.implementation.PartitionKeyRange,java.lang.String>,int,com.azure.cosmos.models.SqlQuerySpec)"
- "com.azure.cosmos.implementation.query.ParallelDocumentQueryExecutionContextBase.initializeReadMany(com.azure.cosmos.implementation.query.IDocumentQueryClient,java.lang.String,com.azure.cosmos.models.SqlQuerySpec,java.util.Map<com.azure.cosmos.implementation.PartitionKeyRange,com.azure.cosmos.models.SqlQuerySpec>,com.azure.cosmos.models.CosmosQueryRequestOptions,java.util.UUID,java.lang.String)"
- "com.azure.cosmos.implementation.query.ParallelDocumentQueryExecutionContextBase.setTop(int)"
type: "class"
typeParameters:
- name: "T"
implements:
- "<xref href=\"com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent?alt=com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent&text=IDocumentQueryExecutionComponent\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.cosmos.implementation.query"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
