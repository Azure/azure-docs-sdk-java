### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.io.JsonEOFException
  id: JsonEOFException
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io
  children:
  - com.fasterxml.jackson.core.io.JsonEOFException.JsonEOFException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
  - com.fasterxml.jackson.core.io.JsonEOFException._token
  - com.fasterxml.jackson.core.io.JsonEOFException.getTokenBeingDecoded()
  langs:
  - java
  name: JsonEOFException
  nameWithType: JsonEOFException
  fullName: com.fasterxml.jackson.core.io.JsonEOFException
  type: Class
  package: com.fasterxml.jackson.core.io
  summary: Specialized <xref uid="com.fasterxml.jackson.core.JsonParseException" data-throw-if-not-resolved="false">JsonParseException</xref> that is thrown when end-of-input is reached unexpectedly, either within token being decoded, or during skipping of intervening white-space that is not between root-level tokens (that is, is within JSON Object or JSON Array construct).
  syntax:
    content: public class JsonEOFException extends JsonParseException
  inheritance:
  - java.lang.Object
  - java.lang.Throwable
  - java.lang.Exception
  - java.io.IOException
  - com.fasterxml.jackson.core.JsonProcessingException
  - com.fasterxml.jackson.core.exc.StreamReadException
  - com.fasterxml.jackson.core.JsonParseException
  inheritedMembers:
  - com.fasterxml.jackson.core.JsonParseException.getMessage()
  - com.fasterxml.jackson.core.JsonParseException.getProcessor()
  - com.fasterxml.jackson.core.JsonParseException.getRequestPayload()
  - com.fasterxml.jackson.core.JsonParseException.getRequestPayloadAsString()
  - com.fasterxml.jackson.core.JsonParseException.withParser(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.core.JsonParseException.withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload)
  - com.fasterxml.jackson.core.JsonProcessingException.clearLocation()
  - com.fasterxml.jackson.core.JsonProcessingException.getLocation()
  - com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix()
  - com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage()
  - com.fasterxml.jackson.core.JsonProcessingException.toString()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - java.lang.Throwable.addSuppressed(java.lang.Throwable)
  - java.lang.Throwable.fillInStackTrace()
  - java.lang.Throwable.getCause()
  - java.lang.Throwable.getLocalizedMessage()
  - java.lang.Throwable.getStackTrace()
  - java.lang.Throwable.getSuppressed()
  - java.lang.Throwable.initCause(java.lang.Throwable)
  - java.lang.Throwable.printStackTrace()
  - java.lang.Throwable.printStackTrace(java.io.PrintStream)
  - java.lang.Throwable.printStackTrace(java.io.PrintWriter)
  - java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
- uid: com.fasterxml.jackson.core.io.JsonEOFException.JsonEOFException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
  id: JsonEOFException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.JsonEOFException
  langs:
  - java
  name: JsonEOFException(JsonParser p, JsonToken token, String msg)
  nameWithType: JsonEOFException.JsonEOFException(JsonParser p, JsonToken token, String msg)
  fullName: com.fasterxml.jackson.core.io.JsonEOFException.JsonEOFException(JsonParser p, JsonToken token, String msg)
  overload: com.fasterxml.jackson.core.io.JsonEOFException.JsonEOFException*
  type: Constructor
  package: com.fasterxml.jackson.core.io
  syntax:
    content: public JsonEOFException(JsonParser p, JsonToken token, String msg)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: token
      type: com.fasterxml.jackson.core.JsonToken
    - id: msg
      type: java.lang.String
- uid: com.fasterxml.jackson.core.io.JsonEOFException._token
  id: _token
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.JsonEOFException
  langs:
  - java
  name: _token
  nameWithType: JsonEOFException._token
  fullName: com.fasterxml.jackson.core.io.JsonEOFException._token
  type: Field
  package: com.fasterxml.jackson.core.io
  summary: Type of token that was being decoded, if parser had enough information to recognize type (such as starting double-quote for Strings)
  syntax:
    content: protected final JsonToken _token
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.io.JsonEOFException.getTokenBeingDecoded()
  id: getTokenBeingDecoded()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.JsonEOFException
  langs:
  - java
  name: getTokenBeingDecoded()
  nameWithType: JsonEOFException.getTokenBeingDecoded()
  fullName: com.fasterxml.jackson.core.io.JsonEOFException.getTokenBeingDecoded()
  overload: com.fasterxml.jackson.core.io.JsonEOFException.getTokenBeingDecoded*
  type: Method
  package: com.fasterxml.jackson.core.io
  summary: Accessor for possibly available information about token that was being decoded while encountering end of input.
  syntax:
    content: public JsonToken getTokenBeingDecoded()
    return:
      type: com.fasterxml.jackson.core.JsonToken
references:
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.core.JsonToken
  name: JsonToken
  nameWithType: JsonToken
  fullName: com.fasterxml.jackson.core.JsonToken
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.io.JsonEOFException.JsonEOFException*
  name: JsonEOFException
  nameWithType: JsonEOFException.JsonEOFException
  fullName: com.fasterxml.jackson.core.io.JsonEOFException.JsonEOFException
  package: com.fasterxml.jackson.core.io
- uid: com.fasterxml.jackson.core.io.JsonEOFException.getTokenBeingDecoded*
  name: getTokenBeingDecoded
  nameWithType: JsonEOFException.getTokenBeingDecoded
  fullName: com.fasterxml.jackson.core.io.JsonEOFException.getTokenBeingDecoded
  package: com.fasterxml.jackson.core.io
- uid: com.fasterxml.jackson.core.JsonParseException
  name: JsonParseException
  nameWithType: JsonParseException
  fullName: com.fasterxml.jackson.core.JsonParseException
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.core.JsonParseException.withParser(com.fasterxml.jackson.core.JsonParser)
  name: JsonParseException.withParser(JsonParser)
  nameWithType: JsonParseException.withParser(JsonParser)
  fullName: com.fasterxml.jackson.core.JsonParseException.withParser(com.fasterxml.jackson.core.JsonParser)
- uid: java.lang.Throwable.getCause()
  name: Throwable.getCause()
  nameWithType: Throwable.getCause()
  fullName: java.lang.Throwable.getCause()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.core.JsonProcessingException.toString()
  name: JsonProcessingException.toString()
  nameWithType: JsonProcessingException.toString()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.toString()
- uid: java.lang.Throwable.fillInStackTrace()
  name: Throwable.fillInStackTrace()
  nameWithType: Throwable.fillInStackTrace()
  fullName: java.lang.Throwable.fillInStackTrace()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Throwable.initCause(java.lang.Throwable)
  name: Throwable.initCause(Throwable)
  nameWithType: Throwable.initCause(Throwable)
  fullName: java.lang.Throwable.initCause(java.lang.Throwable)
- uid: com.fasterxml.jackson.core.JsonProcessingException.getLocation()
  name: JsonProcessingException.getLocation()
  nameWithType: JsonProcessingException.getLocation()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getLocation()
- uid: com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix()
  name: JsonProcessingException.getMessageSuffix()
  nameWithType: JsonProcessingException.getMessageSuffix()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix()
- uid: java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
  name: Throwable.setStackTrace(StackTraceElement[])
  nameWithType: Throwable.setStackTrace(StackTraceElement[])
  fullName: java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
- uid: com.fasterxml.jackson.core.JsonParseException.getMessage()
  name: JsonParseException.getMessage()
  nameWithType: JsonParseException.getMessage()
  fullName: com.fasterxml.jackson.core.JsonParseException.getMessage()
- uid: java.lang.Throwable.getSuppressed()
  name: Throwable.getSuppressed()
  nameWithType: Throwable.getSuppressed()
  fullName: java.lang.Throwable.getSuppressed()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Throwable.getStackTrace()
  name: Throwable.getStackTrace()
  nameWithType: Throwable.getStackTrace()
  fullName: java.lang.Throwable.getStackTrace()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Throwable.getLocalizedMessage()
  name: Throwable.getLocalizedMessage()
  nameWithType: Throwable.getLocalizedMessage()
  fullName: java.lang.Throwable.getLocalizedMessage()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Throwable.printStackTrace(java.io.PrintWriter)
  name: Throwable.printStackTrace(PrintWriter)
  nameWithType: Throwable.printStackTrace(PrintWriter)
  fullName: java.lang.Throwable.printStackTrace(java.io.PrintWriter)
- uid: java.lang.Throwable.addSuppressed(java.lang.Throwable)
  name: Throwable.addSuppressed(Throwable)
  nameWithType: Throwable.addSuppressed(Throwable)
  fullName: java.lang.Throwable.addSuppressed(java.lang.Throwable)
- uid: com.fasterxml.jackson.core.JsonParseException.getRequestPayloadAsString()
  name: JsonParseException.getRequestPayloadAsString()
  nameWithType: JsonParseException.getRequestPayloadAsString()
  fullName: com.fasterxml.jackson.core.JsonParseException.getRequestPayloadAsString()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage()
  name: JsonProcessingException.getOriginalMessage()
  nameWithType: JsonProcessingException.getOriginalMessage()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage()
- uid: com.fasterxml.jackson.core.JsonProcessingException.clearLocation()
  name: JsonProcessingException.clearLocation()
  nameWithType: JsonProcessingException.clearLocation()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.clearLocation()
- uid: com.fasterxml.jackson.core.JsonParseException.getRequestPayload()
  name: JsonParseException.getRequestPayload()
  nameWithType: JsonParseException.getRequestPayload()
  fullName: com.fasterxml.jackson.core.JsonParseException.getRequestPayload()
- uid: java.lang.Throwable.printStackTrace(java.io.PrintStream)
  name: Throwable.printStackTrace(PrintStream)
  nameWithType: Throwable.printStackTrace(PrintStream)
  fullName: java.lang.Throwable.printStackTrace(java.io.PrintStream)
- uid: com.fasterxml.jackson.core.JsonParseException.getProcessor()
  name: JsonParseException.getProcessor()
  nameWithType: JsonParseException.getProcessor()
  fullName: com.fasterxml.jackson.core.JsonParseException.getProcessor()
- uid: com.fasterxml.jackson.core.JsonParseException.withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload)
  name: JsonParseException.withRequestPayload(RequestPayload)
  nameWithType: JsonParseException.withRequestPayload(RequestPayload)
  fullName: com.fasterxml.jackson.core.JsonParseException.withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload)
- uid: java.lang.Throwable.printStackTrace()
  name: Throwable.printStackTrace()
  nameWithType: Throwable.printStackTrace()
  fullName: java.lang.Throwable.printStackTrace()
