### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator
  id: PropertyBasedObjectIdGenerator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl
  children:
  - com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.PropertyBasedObjectIdGenerator(com.fasterxml.jackson.databind.introspect.ObjectIdInfo,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
  - com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.PropertyBasedObjectIdGenerator(java.lang.Class<?>,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
  - com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator._property
  - com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator<?>)
  - com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.forScope(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.generateId(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.key(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.newForSerialization(java.lang.Object)
  langs:
  - java
  name: PropertyBasedObjectIdGenerator
  nameWithType: PropertyBasedObjectIdGenerator
  fullName: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator
  type: Class
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: public class PropertyBasedObjectIdGenerator extends ObjectIdGenerators.PropertyGenerator
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.annotation.ObjectIdGenerator
  - com.fasterxml.jackson.annotation.ObjectIdGenerators.Base
  - com.fasterxml.jackson.annotation.ObjectIdGenerators.PropertyGenerator
  inheritedMembers:
  - com.fasterxml.jackson.annotation.ObjectIdGenerator.forScope(java.lang.Class<?>)
  - com.fasterxml.jackson.annotation.ObjectIdGenerator.isValidReferencePropertyName(java.lang.String,java.lang.Object)
  - com.fasterxml.jackson.annotation.ObjectIdGenerator.key(java.lang.Object)
  - com.fasterxml.jackson.annotation.ObjectIdGenerator.maySerializeAsObject()
  - com.fasterxml.jackson.annotation.ObjectIdGenerator.newForSerialization(java.lang.Object)
  - com.fasterxml.jackson.annotation.ObjectIdGenerators.Base.canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator<?>)
  - com.fasterxml.jackson.annotation.ObjectIdGenerators.Base.generateId(java.lang.Object)
  - com.fasterxml.jackson.annotation.ObjectIdGenerators.Base.getScope()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.PropertyBasedObjectIdGenerator(com.fasterxml.jackson.databind.introspect.ObjectIdInfo,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
  id: PropertyBasedObjectIdGenerator(com.fasterxml.jackson.databind.introspect.ObjectIdInfo,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator
  langs:
  - java
  name: PropertyBasedObjectIdGenerator(ObjectIdInfo oid, BeanPropertyWriter prop)
  nameWithType: PropertyBasedObjectIdGenerator.PropertyBasedObjectIdGenerator(ObjectIdInfo oid, BeanPropertyWriter prop)
  fullName: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.PropertyBasedObjectIdGenerator(ObjectIdInfo oid, BeanPropertyWriter prop)
  overload: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.PropertyBasedObjectIdGenerator*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: public PropertyBasedObjectIdGenerator(ObjectIdInfo oid, BeanPropertyWriter prop)
    parameters:
    - id: oid
      type: com.fasterxml.jackson.databind.introspect.ObjectIdInfo
    - id: prop
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
- uid: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.PropertyBasedObjectIdGenerator(java.lang.Class<?>,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
  id: PropertyBasedObjectIdGenerator(java.lang.Class<?>,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator
  langs:
  - java
  name: PropertyBasedObjectIdGenerator(Class<?> scope, BeanPropertyWriter prop)
  nameWithType: PropertyBasedObjectIdGenerator.PropertyBasedObjectIdGenerator(Class<?> scope, BeanPropertyWriter prop)
  fullName: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.PropertyBasedObjectIdGenerator(Class<?> scope, BeanPropertyWriter prop)
  overload: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.PropertyBasedObjectIdGenerator*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: protected PropertyBasedObjectIdGenerator(Class<?> scope, BeanPropertyWriter prop)
    parameters:
    - id: scope
      type: java.lang.Class<?>
    - id: prop
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
- uid: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator._property
  id: _property
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator
  langs:
  - java
  name: _property
  nameWithType: PropertyBasedObjectIdGenerator._property
  fullName: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator._property
  type: Field
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: protected final BeanPropertyWriter _property
    return:
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
- uid: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator<?>)
  id: canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator
  langs:
  - java
  name: canUseFor(ObjectIdGenerator<?> gen)
  nameWithType: PropertyBasedObjectIdGenerator.canUseFor(ObjectIdGenerator<?> gen)
  fullName: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.canUseFor(ObjectIdGenerator<?> gen)
  overload: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.canUseFor*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: We must override this method, to prevent errors when scopes are the same, but underlying class (on which to access property) is different.
  syntax:
    content: public boolean canUseFor(ObjectIdGenerator<?> gen)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.annotation.ObjectIdGenerator<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.forScope(java.lang.Class<?>)
  id: forScope(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator
  langs:
  - java
  name: forScope(Class<?> scope)
  nameWithType: PropertyBasedObjectIdGenerator.forScope(Class<?> scope)
  fullName: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.forScope(Class<?> scope)
  overload: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.forScope*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Factory method to create a blueprint instance for specified scope. Generators that do not use scope may return 'this'.
  syntax:
    content: public ObjectIdGenerator<Object> forScope(Class<?> scope)
    parameters:
    - id: scope
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.annotation.ObjectIdGenerator<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.generateId(java.lang.Object)
  id: generateId(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator
  langs:
  - java
  name: generateId(Object forPojo)
  nameWithType: PropertyBasedObjectIdGenerator.generateId(Object forPojo)
  fullName: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.generateId(Object forPojo)
  overload: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.generateId*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Method used for generating a new Object Identifier to serialize for given POJO.
  syntax:
    content: public Object generateId(Object forPojo)
    parameters:
    - id: forPojo
      type: java.lang.Object
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.key(java.lang.Object)
  id: key(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator
  langs:
  - java
  name: key(Object key)
  nameWithType: PropertyBasedObjectIdGenerator.key(Object key)
  fullName: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.key(Object key)
  overload: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.key*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Method for constructing key to use for ObjectId-to-POJO maps.
  syntax:
    content: public ObjectIdGenerator.IdKey key(Object key)
    parameters:
    - id: key
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey
- uid: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.newForSerialization(java.lang.Object)
  id: newForSerialization(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator
  langs:
  - java
  name: newForSerialization(Object context)
  nameWithType: PropertyBasedObjectIdGenerator.newForSerialization(Object context)
  fullName: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.newForSerialization(Object context)
  overload: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.newForSerialization*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: >-
    Factory method called to create a new instance to use for serialization: needed since generators may have state (next id to produce).


    Note that actual type of 'context' is `com.fasterxml.jackson.databind.SerializerProvider`, but can not be declared here as type itself (as well as call to this object) comes from databind package.
  syntax:
    content: public ObjectIdGenerator<Object> newForSerialization(Object context)
    parameters:
    - id: context
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.annotation.ObjectIdGenerator<java.lang.Object>
references:
- uid: com.fasterxml.jackson.databind.introspect.ObjectIdInfo
  name: ObjectIdInfo
  nameWithType: ObjectIdInfo
  fullName: com.fasterxml.jackson.databind.introspect.ObjectIdInfo
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  name: BeanPropertyWriter
  nameWithType: BeanPropertyWriter
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
- uid: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.PropertyBasedObjectIdGenerator*
  name: PropertyBasedObjectIdGenerator
  nameWithType: PropertyBasedObjectIdGenerator.PropertyBasedObjectIdGenerator
  fullName: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.PropertyBasedObjectIdGenerator
  package: com.fasterxml.jackson.databind.ser.impl
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator<?>
  spec.java:
  - uid: com.fasterxml.jackson.annotation.ObjectIdGenerator
    name: ObjectIdGenerator
    fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.canUseFor*
  name: canUseFor
  nameWithType: PropertyBasedObjectIdGenerator.canUseFor
  fullName: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.canUseFor
  package: com.fasterxml.jackson.databind.ser.impl
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.generateId*
  name: generateId
  nameWithType: PropertyBasedObjectIdGenerator.generateId
  fullName: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.generateId
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.annotation.ObjectIdGenerator
    name: ObjectIdGenerator
    fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.forScope*
  name: forScope
  nameWithType: PropertyBasedObjectIdGenerator.forScope
  fullName: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.forScope
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.newForSerialization*
  name: newForSerialization
  nameWithType: PropertyBasedObjectIdGenerator.newForSerialization
  fullName: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.newForSerialization
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey
  name: ObjectIdGenerator.IdKey
  nameWithType: ObjectIdGenerator.IdKey
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey
- uid: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.key*
  name: key
  nameWithType: PropertyBasedObjectIdGenerator.key
  fullName: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.key
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerators.PropertyGenerator
  name: ObjectIdGenerators.PropertyGenerator
  nameWithType: ObjectIdGenerators.PropertyGenerator
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerators.PropertyGenerator
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerators.Base.canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator<?>)
  name: ObjectIdGenerators.Base.canUseFor(ObjectIdGenerator<?>)
  nameWithType: ObjectIdGenerators.Base.canUseFor(ObjectIdGenerator<?>)
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerators.Base.canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator<?>)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerators.Base.generateId(java.lang.Object)
  name: ObjectIdGenerators.Base.generateId(Object)
  nameWithType: ObjectIdGenerators.Base.generateId(Object)
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerators.Base.generateId(java.lang.Object)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator.isValidReferencePropertyName(java.lang.String,java.lang.Object)
  name: ObjectIdGenerator.isValidReferencePropertyName(String,Object)
  nameWithType: ObjectIdGenerator.isValidReferencePropertyName(String,Object)
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator.isValidReferencePropertyName(java.lang.String,java.lang.Object)
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerators.Base.getScope()
  name: ObjectIdGenerators.Base.getScope()
  nameWithType: ObjectIdGenerators.Base.getScope()
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerators.Base.getScope()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator.forScope(java.lang.Class<?>)
  name: ObjectIdGenerator.forScope(Class<?>)
  nameWithType: ObjectIdGenerator.forScope(Class<?>)
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator.forScope(java.lang.Class<?>)
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator.key(java.lang.Object)
  name: ObjectIdGenerator.key(Object)
  nameWithType: ObjectIdGenerator.key(Object)
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator.key(java.lang.Object)
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator.maySerializeAsObject()
  name: ObjectIdGenerator.maySerializeAsObject()
  nameWithType: ObjectIdGenerator.maySerializeAsObject()
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator.maySerializeAsObject()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator.newForSerialization(java.lang.Object)
  name: ObjectIdGenerator.newForSerialization(Object)
  nameWithType: ObjectIdGenerator.newForSerialization(Object)
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator.newForSerialization(java.lang.Object)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator
  name: ObjectIdGenerator
  nameWithType: ObjectIdGenerator
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerators.Base.canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator
  name: ObjectIdGenerators.Base.canUseFor(ObjectIdGenerator
  nameWithType: ObjectIdGenerators.Base.canUseFor(ObjectIdGenerator
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerators.Base.canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator.forScope(java.lang.Class
  name: ObjectIdGenerator.forScope(Class
  nameWithType: ObjectIdGenerator.forScope(Class
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator.forScope(java.lang.Class
