### YamlMime:JavaType
uid: "com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder"
fullName: "com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder"
name: "FaultInjectionConditionBuilder"
nameWithType: "FaultInjectionConditionBuilder"
summary: "Fault injection condition builder."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **FaultInjectionConditionBuilder**"
constructors:
- uid: "com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder.FaultInjectionConditionBuilder()"
  fullName: "com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder.FaultInjectionConditionBuilder()"
  name: "FaultInjectionConditionBuilder()"
  nameWithType: "FaultInjectionConditionBuilder.FaultInjectionConditionBuilder()"
  syntax: "public FaultInjectionConditionBuilder()"
methods:
- uid: "com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder.build()"
  fullName: "com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder.build()"
  name: "build()"
  nameWithType: "FaultInjectionConditionBuilder.build()"
  summary: "Create new fault injection condition."
  syntax: "public FaultInjectionCondition build()"
  desc: "Create new fault injection condition."
  returns:
    description: "the <xref uid=\"com.azure.cosmos.test.faultinjection.FaultInjectionCondition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FaultInjectionCondition\"></xref>."
    type: "<xref href=\"com.azure.cosmos.test.faultinjection.FaultInjectionCondition?alt=com.azure.cosmos.test.faultinjection.FaultInjectionCondition&text=FaultInjectionCondition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder.connectionType(com.azure.cosmos.test.faultinjection.FaultInjectionConnectionType)"
  fullName: "com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder.connectionType(FaultInjectionConnectionType connectionType)"
  name: "connectionType(FaultInjectionConnectionType connectionType)"
  nameWithType: "FaultInjectionConditionBuilder.connectionType(FaultInjectionConnectionType connectionType)"
  summary: "Set the connection type of the rule."
  parameters:
  - description: "the connection type."
    name: "connectionType"
    type: "<xref href=\"com.azure.cosmos.test.faultinjection.FaultInjectionConnectionType?alt=com.azure.cosmos.test.faultinjection.FaultInjectionConnectionType&text=FaultInjectionConnectionType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FaultInjectionConditionBuilder connectionType(FaultInjectionConnectionType connectionType)"
  desc: "Set the connection type of the rule. The rule will not be applicable if the request is targeting a different connection type. By default, it is direct."
  returns:
    description: "the builder."
    type: "<xref href=\"com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder?alt=com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder&text=FaultInjectionConditionBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder.endpoints(com.azure.cosmos.test.faultinjection.FaultInjectionEndpoints)"
  fullName: "com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder.endpoints(FaultInjectionEndpoints endpoints)"
  name: "endpoints(FaultInjectionEndpoints endpoints)"
  nameWithType: "FaultInjectionConditionBuilder.endpoints(FaultInjectionEndpoints endpoints)"
  summary: "Set the physical endpoints of the rule."
  parameters:
  - description: "the physical endpoints."
    name: "endpoints"
    type: "<xref href=\"com.azure.cosmos.test.faultinjection.FaultInjectionEndpoints?alt=com.azure.cosmos.test.faultinjection.FaultInjectionEndpoints&text=FaultInjectionEndpoints\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FaultInjectionConditionBuilder endpoints(FaultInjectionEndpoints endpoints)"
  desc: "Set the physical endpoints of the rule. Only applicable in direct connection type."
  returns:
    description: "the builder."
    type: "<xref href=\"com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder?alt=com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder&text=FaultInjectionConditionBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder.operationType(com.azure.cosmos.test.faultinjection.FaultInjectionOperationType)"
  fullName: "com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder.operationType(FaultInjectionOperationType operationType)"
  name: "operationType(FaultInjectionOperationType operationType)"
  nameWithType: "FaultInjectionConditionBuilder.operationType(FaultInjectionOperationType operationType)"
  summary: "Set the operation type of the rule."
  parameters:
  - description: "the operation type."
    name: "operationType"
    type: "<xref href=\"com.azure.cosmos.test.faultinjection.FaultInjectionOperationType?alt=com.azure.cosmos.test.faultinjection.FaultInjectionOperationType&text=FaultInjectionOperationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FaultInjectionConditionBuilder operationType(FaultInjectionOperationType operationType)"
  desc: "Set the operation type of the rule. The rule will not be applicable if the request is targeting a different operation type. By default, it is null which means the rule can be applied to any operation type."
  returns:
    description: "the builder."
    type: "<xref href=\"com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder?alt=com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder&text=FaultInjectionConditionBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder.region(java.lang.String)"
  fullName: "com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder.region(String region)"
  name: "region(String region)"
  nameWithType: "FaultInjectionConditionBuilder.region(String region)"
  summary: "Set the region of the rule."
  parameters:
  - description: "the region of the rule."
    name: "region"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public FaultInjectionConditionBuilder region(String region)"
  desc: "Set the region of the rule. The rule will not be applicable if the request is targeting a different region. By default, it is null which means the rule can be applied in any region."
  returns:
    description: "the builder."
    type: "<xref href=\"com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder?alt=com.azure.cosmos.test.faultinjection.FaultInjectionConditionBuilder&text=FaultInjectionConditionBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Fault injection condition builder."
metadata: {}
package: "com.azure.cosmos.test.faultinjection"
artifact: com.azure:azure-cosmos-test:1.0.0-beta.9
