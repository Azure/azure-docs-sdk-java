### YamlMime:JavaEnum
uid: "com.fasterxml.jackson.annotation.JsonCreator.Mode"
fullName: "com.fasterxml.jackson.annotation.JsonCreator.Mode"
name: "JsonCreator.Mode"
nameWithType: "JsonCreator.Mode"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum JsonCreator.Mode extends Enum<JsonCreator.Mode>"
fields:
- uid: "com.fasterxml.jackson.annotation.JsonCreator.Mode.DEFAULT"
  fullName: "com.fasterxml.jackson.annotation.JsonCreator.Mode.DEFAULT"
  name: "DEFAULT"
  nameWithType: "JsonCreator.Mode.DEFAULT"
  summary: "Pseudo-mode that indicates that caller is to use default heuristics for choosing mode to use. This typically favors use of delegating mode for single-argument creators that take structured types."
- uid: "com.fasterxml.jackson.annotation.JsonCreator.Mode.DELEGATING"
  fullName: "com.fasterxml.jackson.annotation.JsonCreator.Mode.DELEGATING"
  name: "DELEGATING"
  nameWithType: "JsonCreator.Mode.DELEGATING"
  summary: "Mode that indicates that if creator takes a single argument, the whole incoming data value is to be bound into declared type of that argument; this \"delegate\" value is then passed as the argument to creator."
- uid: "com.fasterxml.jackson.annotation.JsonCreator.Mode.DISABLED"
  fullName: "com.fasterxml.jackson.annotation.JsonCreator.Mode.DISABLED"
  name: "DISABLED"
  nameWithType: "JsonCreator.Mode.DISABLED"
  summary: "Pseudo-mode that indicates that creator is not to be used. This can be used as a result value for explicit disabling, usually either by custom annotation introspector, or by annotation mix-ins (for example when choosing different creator)."
- uid: "com.fasterxml.jackson.annotation.JsonCreator.Mode.PROPERTIES"
  fullName: "com.fasterxml.jackson.annotation.JsonCreator.Mode.PROPERTIES"
  name: "PROPERTIES"
  nameWithType: "JsonCreator.Mode.PROPERTIES"
  summary: "Mode that indicates that the argument(s) for creator are to be bound from matching properties of incoming Object value, using creator argument names (explicit or implicit) to match incoming Object properties to arguments.\n\nNote that this mode is currently (2.5) always used for multiple-argument creators; the only ambiguous case is that of a single-argument creator."
methods:
- uid: "com.fasterxml.jackson.annotation.JsonCreator.Mode.valueOf(java.lang.String)"
  fullName: "com.fasterxml.jackson.annotation.JsonCreator.Mode.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "JsonCreator.Mode.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static JsonCreator.Mode valueOf(String name)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.JsonCreator.Mode?alt=com.fasterxml.jackson.annotation.JsonCreator.Mode&text=Mode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.JsonCreator.Mode.values()"
  fullName: "com.fasterxml.jackson.annotation.JsonCreator.Mode.values()"
  name: "values()"
  nameWithType: "JsonCreator.Mode.values()"
  syntax: "public static JsonCreator.Mode[] values()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.JsonCreator.Mode?alt=com.fasterxml.jackson.annotation.JsonCreator.Mode&text=Mode\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
