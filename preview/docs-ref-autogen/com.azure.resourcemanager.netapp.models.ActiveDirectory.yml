### YamlMime:JavaType
uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory"
fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory"
name: "ActiveDirectory"
nameWithType: "ActiveDirectory"
summary: "Active Directory."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ActiveDirectory"
constructors:
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.ActiveDirectory()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.ActiveDirectory()"
  name: "ActiveDirectory()"
  nameWithType: "ActiveDirectory.ActiveDirectory()"
  syntax: "public ActiveDirectory()"
methods:
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.activeDirectoryId()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.activeDirectoryId()"
  name: "activeDirectoryId()"
  nameWithType: "ActiveDirectory.activeDirectoryId()"
  summary: "Get the active<wbr>Directory<wbr>Id property: Id of the Active Directory."
  syntax: "public String activeDirectoryId()"
  desc: "Get the activeDirectoryId property: Id of the Active Directory."
  returns:
    description: "the activeDirectoryId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.adName()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.adName()"
  name: "adName()"
  nameWithType: "ActiveDirectory.adName()"
  summary: "Get the ad<wbr>Name property: Name of the active directory machine."
  syntax: "public String adName()"
  desc: "Get the adName property: Name of the active directory machine. This optional parameter is used only while creating kerberos volume."
  returns:
    description: "the adName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.administrators()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.administrators()"
  name: "administrators()"
  nameWithType: "ActiveDirectory.administrators()"
  summary: "Get the administrators property: Users to be added to the Built-in Administrators active directory group."
  syntax: "public List<String> administrators()"
  desc: "Get the administrators property: Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier."
  returns:
    description: "the administrators value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.aesEncryption()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.aesEncryption()"
  name: "aesEncryption()"
  nameWithType: "ActiveDirectory.aesEncryption()"
  summary: "Get the aes<wbr>Encryption property: If enabled, AES encryption will be enabled for SMB communication."
  syntax: "public Boolean aesEncryption()"
  desc: "Get the aesEncryption property: If enabled, AES encryption will be enabled for SMB communication."
  returns:
    description: "the aesEncryption value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.allowLocalNfsUsersWithLdap()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.allowLocalNfsUsersWithLdap()"
  name: "allowLocalNfsUsersWithLdap()"
  nameWithType: "ActiveDirectory.allowLocalNfsUsersWithLdap()"
  summary: "Get the allow<wbr>Local<wbr>Nfs<wbr>Users<wbr>With<wbr>Ldap property: If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
  syntax: "public Boolean allowLocalNfsUsersWithLdap()"
  desc: "Get the allowLocalNfsUsersWithLdap property: If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
  returns:
    description: "the allowLocalNfsUsersWithLdap value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.backupOperators()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.backupOperators()"
  name: "backupOperators()"
  nameWithType: "ActiveDirectory.backupOperators()"
  summary: "Get the backup<wbr>Operators property: Users to be added to the Built-in Backup Operator active directory group."
  syntax: "public List<String> backupOperators()"
  desc: "Get the backupOperators property: Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier."
  returns:
    description: "the backupOperators value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.dns()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.dns()"
  name: "dns()"
  nameWithType: "ActiveDirectory.dns()"
  summary: "Get the dns property: Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain."
  syntax: "public String dns()"
  desc: "Get the dns property: Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain."
  returns:
    description: "the dns value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.domain()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.domain()"
  name: "domain()"
  nameWithType: "ActiveDirectory.domain()"
  summary: "Get the domain property: Name of the Active Directory domain."
  syntax: "public String domain()"
  desc: "Get the domain property: Name of the Active Directory domain."
  returns:
    description: "the domain value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.encryptDCConnections()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.encryptDCConnections()"
  name: "encryptDCConnections()"
  nameWithType: "ActiveDirectory.encryptDCConnections()"
  summary: "Get the encrypt<wbr>DCConnections property: If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
  syntax: "public Boolean encryptDCConnections()"
  desc: "Get the encryptDCConnections property: If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
  returns:
    description: "the encryptDCConnections value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.kdcIp()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.kdcIp()"
  name: "kdcIp()"
  nameWithType: "ActiveDirectory.kdcIp()"
  summary: "Get the kdc<wbr>Ip property: kdc server IP addresses for the active directory machine."
  syntax: "public String kdcIp()"
  desc: "Get the kdcIp property: kdc server IP addresses for the active directory machine. This optional parameter is used only while creating kerberos volume."
  returns:
    description: "the kdcIp value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.ldapOverTls()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.ldapOverTls()"
  name: "ldapOverTls()"
  nameWithType: "ActiveDirectory.ldapOverTls()"
  summary: "Get the ldap<wbr>Over<wbr>Tls property: Specifies whether or not the LDAP traffic needs to be secured via TLS."
  syntax: "public Boolean ldapOverTls()"
  desc: "Get the ldapOverTls property: Specifies whether or not the LDAP traffic needs to be secured via TLS."
  returns:
    description: "the ldapOverTls value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.ldapSearchScope()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.ldapSearchScope()"
  name: "ldapSearchScope()"
  nameWithType: "ActiveDirectory.ldapSearchScope()"
  summary: "Get the ldap<wbr>Search<wbr>Scope property: LDAP Search scope options."
  syntax: "public LdapSearchScopeOpt ldapSearchScope()"
  desc: "Get the ldapSearchScope property: LDAP Search scope options."
  returns:
    description: "the ldapSearchScope value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.LdapSearchScopeOpt?alt=com.azure.resourcemanager.netapp.models.LdapSearchScopeOpt&text=LdapSearchScopeOpt\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.ldapSigning()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.ldapSigning()"
  name: "ldapSigning()"
  nameWithType: "ActiveDirectory.ldapSigning()"
  summary: "Get the ldap<wbr>Signing property: Specifies whether or not the LDAP traffic needs to be signed."
  syntax: "public Boolean ldapSigning()"
  desc: "Get the ldapSigning property: Specifies whether or not the LDAP traffic needs to be signed."
  returns:
    description: "the ldapSigning value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.organizationalUnit()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.organizationalUnit()"
  name: "organizationalUnit()"
  nameWithType: "ActiveDirectory.organizationalUnit()"
  summary: "Get the organizational<wbr>Unit property: The Organizational Unit (OU) within the Windows Active Directory."
  syntax: "public String organizationalUnit()"
  desc: "Get the organizationalUnit property: The Organizational Unit (OU) within the Windows Active Directory."
  returns:
    description: "the organizationalUnit value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.password()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.password()"
  name: "password()"
  nameWithType: "ActiveDirectory.password()"
  summary: "Get the password property: Plain text password of Active Directory domain administrator, value is masked in the response."
  syntax: "public String password()"
  desc: "Get the password property: Plain text password of Active Directory domain administrator, value is masked in the response."
  returns:
    description: "the password value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.securityOperators()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.securityOperators()"
  name: "securityOperators()"
  nameWithType: "ActiveDirectory.securityOperators()"
  summary: "Get the security<wbr>Operators property: Domain Users in the Active directory to be given Se<wbr>Security<wbr>Privilege privilege (Needed for SMB Continuously available shares for SQL)."
  syntax: "public List<String> securityOperators()"
  desc: "Get the securityOperators property: Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier."
  returns:
    description: "the securityOperators value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.serverRootCACertificate()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.serverRootCACertificate()"
  name: "serverRootCACertificate()"
  nameWithType: "ActiveDirectory.serverRootCACertificate()"
  summary: "Get the server<wbr>Root<wbr>CACertificate property: When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes."
  syntax: "public String serverRootCACertificate()"
  desc: "Get the serverRootCACertificate property: When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes."
  returns:
    description: "the serverRootCACertificate value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.site()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.site()"
  name: "site()"
  nameWithType: "ActiveDirectory.site()"
  summary: "Get the site property: The Active Directory site the service will limit Domain Controller discovery to."
  syntax: "public String site()"
  desc: "Get the site property: The Active Directory site the service will limit Domain Controller discovery to."
  returns:
    description: "the site value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.smbServerName()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.smbServerName()"
  name: "smbServerName()"
  nameWithType: "ActiveDirectory.smbServerName()"
  summary: "Get the smb<wbr>Server<wbr>Name property: NetBIOS name of the SMB server."
  syntax: "public String smbServerName()"
  desc: "Get the smbServerName property: NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes."
  returns:
    description: "the smbServerName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.status()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.status()"
  name: "status()"
  nameWithType: "ActiveDirectory.status()"
  summary: "Get the status property: Status of the Active Directory."
  syntax: "public ActiveDirectoryStatus status()"
  desc: "Get the status property: Status of the Active Directory."
  returns:
    description: "the status value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectoryStatus?alt=com.azure.resourcemanager.netapp.models.ActiveDirectoryStatus&text=ActiveDirectoryStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.statusDetails()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.statusDetails()"
  name: "statusDetails()"
  nameWithType: "ActiveDirectory.statusDetails()"
  summary: "Get the status<wbr>Details property: Any details in regards to the Status of the Active Directory."
  syntax: "public String statusDetails()"
  desc: "Get the statusDetails property: Any details in regards to the Status of the Active Directory."
  returns:
    description: "the statusDetails value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.username()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.username()"
  name: "username()"
  nameWithType: "ActiveDirectory.username()"
  summary: "Get the username property: Username of Active Directory domain administrator."
  syntax: "public String username()"
  desc: "Get the username property: Username of Active Directory domain administrator."
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.validate()"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.validate()"
  name: "validate()"
  nameWithType: "ActiveDirectory.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withActiveDirectoryId(java.lang.String)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withActiveDirectoryId(String activeDirectoryId)"
  name: "withActiveDirectoryId(String activeDirectoryId)"
  nameWithType: "ActiveDirectory.withActiveDirectoryId(String activeDirectoryId)"
  summary: "Set the active<wbr>Directory<wbr>Id property: Id of the Active Directory."
  parameters:
  - description: "the activeDirectoryId value to set."
    name: "activeDirectoryId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActiveDirectory withActiveDirectoryId(String activeDirectoryId)"
  desc: "Set the activeDirectoryId property: Id of the Active Directory."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withAdName(java.lang.String)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withAdName(String adName)"
  name: "withAdName(String adName)"
  nameWithType: "ActiveDirectory.withAdName(String adName)"
  summary: "Set the ad<wbr>Name property: Name of the active directory machine."
  parameters:
  - description: "the adName value to set."
    name: "adName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActiveDirectory withAdName(String adName)"
  desc: "Set the adName property: Name of the active directory machine. This optional parameter is used only while creating kerberos volume."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withAdministrators(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withAdministrators(List<String> administrators)"
  name: "withAdministrators(List<String> administrators)"
  nameWithType: "ActiveDirectory.withAdministrators(List<String> administrators)"
  summary: "Set the administrators property: Users to be added to the Built-in Administrators active directory group."
  parameters:
  - description: "the administrators value to set."
    name: "administrators"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ActiveDirectory withAdministrators(List<String> administrators)"
  desc: "Set the administrators property: Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withAesEncryption(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withAesEncryption(Boolean aesEncryption)"
  name: "withAesEncryption(Boolean aesEncryption)"
  nameWithType: "ActiveDirectory.withAesEncryption(Boolean aesEncryption)"
  summary: "Set the aes<wbr>Encryption property: If enabled, AES encryption will be enabled for SMB communication."
  parameters:
  - description: "the aesEncryption value to set."
    name: "aesEncryption"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActiveDirectory withAesEncryption(Boolean aesEncryption)"
  desc: "Set the aesEncryption property: If enabled, AES encryption will be enabled for SMB communication."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withAllowLocalNfsUsersWithLdap(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withAllowLocalNfsUsersWithLdap(Boolean allowLocalNfsUsersWithLdap)"
  name: "withAllowLocalNfsUsersWithLdap(Boolean allowLocalNfsUsersWithLdap)"
  nameWithType: "ActiveDirectory.withAllowLocalNfsUsersWithLdap(Boolean allowLocalNfsUsersWithLdap)"
  summary: "Set the allow<wbr>Local<wbr>Nfs<wbr>Users<wbr>With<wbr>Ldap property: If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
  parameters:
  - description: "the allowLocalNfsUsersWithLdap value to set."
    name: "allowLocalNfsUsersWithLdap"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActiveDirectory withAllowLocalNfsUsersWithLdap(Boolean allowLocalNfsUsersWithLdap)"
  desc: "Set the allowLocalNfsUsersWithLdap property: If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withBackupOperators(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withBackupOperators(List<String> backupOperators)"
  name: "withBackupOperators(List<String> backupOperators)"
  nameWithType: "ActiveDirectory.withBackupOperators(List<String> backupOperators)"
  summary: "Set the backup<wbr>Operators property: Users to be added to the Built-in Backup Operator active directory group."
  parameters:
  - description: "the backupOperators value to set."
    name: "backupOperators"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ActiveDirectory withBackupOperators(List<String> backupOperators)"
  desc: "Set the backupOperators property: Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withDns(java.lang.String)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withDns(String dns)"
  name: "withDns(String dns)"
  nameWithType: "ActiveDirectory.withDns(String dns)"
  summary: "Set the dns property: Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain."
  parameters:
  - description: "the dns value to set."
    name: "dns"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActiveDirectory withDns(String dns)"
  desc: "Set the dns property: Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withDomain(java.lang.String)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withDomain(String domain)"
  name: "withDomain(String domain)"
  nameWithType: "ActiveDirectory.withDomain(String domain)"
  summary: "Set the domain property: Name of the Active Directory domain."
  parameters:
  - description: "the domain value to set."
    name: "domain"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActiveDirectory withDomain(String domain)"
  desc: "Set the domain property: Name of the Active Directory domain."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withEncryptDCConnections(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withEncryptDCConnections(Boolean encryptDCConnections)"
  name: "withEncryptDCConnections(Boolean encryptDCConnections)"
  nameWithType: "ActiveDirectory.withEncryptDCConnections(Boolean encryptDCConnections)"
  summary: "Set the encrypt<wbr>DCConnections property: If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
  parameters:
  - description: "the encryptDCConnections value to set."
    name: "encryptDCConnections"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActiveDirectory withEncryptDCConnections(Boolean encryptDCConnections)"
  desc: "Set the encryptDCConnections property: If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withKdcIp(java.lang.String)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withKdcIp(String kdcIp)"
  name: "withKdcIp(String kdcIp)"
  nameWithType: "ActiveDirectory.withKdcIp(String kdcIp)"
  summary: "Set the kdc<wbr>Ip property: kdc server IP addresses for the active directory machine."
  parameters:
  - description: "the kdcIp value to set."
    name: "kdcIp"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActiveDirectory withKdcIp(String kdcIp)"
  desc: "Set the kdcIp property: kdc server IP addresses for the active directory machine. This optional parameter is used only while creating kerberos volume."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withLdapOverTls(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withLdapOverTls(Boolean ldapOverTls)"
  name: "withLdapOverTls(Boolean ldapOverTls)"
  nameWithType: "ActiveDirectory.withLdapOverTls(Boolean ldapOverTls)"
  summary: "Set the ldap<wbr>Over<wbr>Tls property: Specifies whether or not the LDAP traffic needs to be secured via TLS."
  parameters:
  - description: "the ldapOverTls value to set."
    name: "ldapOverTls"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActiveDirectory withLdapOverTls(Boolean ldapOverTls)"
  desc: "Set the ldapOverTls property: Specifies whether or not the LDAP traffic needs to be secured via TLS."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withLdapSearchScope(com.azure.resourcemanager.netapp.models.LdapSearchScopeOpt)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withLdapSearchScope(LdapSearchScopeOpt ldapSearchScope)"
  name: "withLdapSearchScope(LdapSearchScopeOpt ldapSearchScope)"
  nameWithType: "ActiveDirectory.withLdapSearchScope(LdapSearchScopeOpt ldapSearchScope)"
  summary: "Set the ldap<wbr>Search<wbr>Scope property: LDAP Search scope options."
  parameters:
  - description: "the ldapSearchScope value to set."
    name: "ldapSearchScope"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.LdapSearchScopeOpt?alt=com.azure.resourcemanager.netapp.models.LdapSearchScopeOpt&text=LdapSearchScopeOpt\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActiveDirectory withLdapSearchScope(LdapSearchScopeOpt ldapSearchScope)"
  desc: "Set the ldapSearchScope property: LDAP Search scope options."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withLdapSigning(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withLdapSigning(Boolean ldapSigning)"
  name: "withLdapSigning(Boolean ldapSigning)"
  nameWithType: "ActiveDirectory.withLdapSigning(Boolean ldapSigning)"
  summary: "Set the ldap<wbr>Signing property: Specifies whether or not the LDAP traffic needs to be signed."
  parameters:
  - description: "the ldapSigning value to set."
    name: "ldapSigning"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActiveDirectory withLdapSigning(Boolean ldapSigning)"
  desc: "Set the ldapSigning property: Specifies whether or not the LDAP traffic needs to be signed."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withOrganizationalUnit(java.lang.String)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withOrganizationalUnit(String organizationalUnit)"
  name: "withOrganizationalUnit(String organizationalUnit)"
  nameWithType: "ActiveDirectory.withOrganizationalUnit(String organizationalUnit)"
  summary: "Set the organizational<wbr>Unit property: The Organizational Unit (OU) within the Windows Active Directory."
  parameters:
  - description: "the organizationalUnit value to set."
    name: "organizationalUnit"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActiveDirectory withOrganizationalUnit(String organizationalUnit)"
  desc: "Set the organizationalUnit property: The Organizational Unit (OU) within the Windows Active Directory."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withPassword(java.lang.String)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withPassword(String password)"
  name: "withPassword(String password)"
  nameWithType: "ActiveDirectory.withPassword(String password)"
  summary: "Set the password property: Plain text password of Active Directory domain administrator, value is masked in the response."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActiveDirectory withPassword(String password)"
  desc: "Set the password property: Plain text password of Active Directory domain administrator, value is masked in the response."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withSecurityOperators(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withSecurityOperators(List<String> securityOperators)"
  name: "withSecurityOperators(List<String> securityOperators)"
  nameWithType: "ActiveDirectory.withSecurityOperators(List<String> securityOperators)"
  summary: "Set the security<wbr>Operators property: Domain Users in the Active directory to be given Se<wbr>Security<wbr>Privilege privilege (Needed for SMB Continuously available shares for SQL)."
  parameters:
  - description: "the securityOperators value to set."
    name: "securityOperators"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ActiveDirectory withSecurityOperators(List<String> securityOperators)"
  desc: "Set the securityOperators property: Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withServerRootCACertificate(java.lang.String)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withServerRootCACertificate(String serverRootCACertificate)"
  name: "withServerRootCACertificate(String serverRootCACertificate)"
  nameWithType: "ActiveDirectory.withServerRootCACertificate(String serverRootCACertificate)"
  summary: "Set the server<wbr>Root<wbr>CACertificate property: When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes."
  parameters:
  - description: "the serverRootCACertificate value to set."
    name: "serverRootCACertificate"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActiveDirectory withServerRootCACertificate(String serverRootCACertificate)"
  desc: "Set the serverRootCACertificate property: When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withSite(java.lang.String)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withSite(String site)"
  name: "withSite(String site)"
  nameWithType: "ActiveDirectory.withSite(String site)"
  summary: "Set the site property: The Active Directory site the service will limit Domain Controller discovery to."
  parameters:
  - description: "the site value to set."
    name: "site"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActiveDirectory withSite(String site)"
  desc: "Set the site property: The Active Directory site the service will limit Domain Controller discovery to."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withSmbServerName(java.lang.String)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withSmbServerName(String smbServerName)"
  name: "withSmbServerName(String smbServerName)"
  nameWithType: "ActiveDirectory.withSmbServerName(String smbServerName)"
  summary: "Set the smb<wbr>Server<wbr>Name property: NetBIOS name of the SMB server."
  parameters:
  - description: "the smbServerName value to set."
    name: "smbServerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActiveDirectory withSmbServerName(String smbServerName)"
  desc: "Set the smbServerName property: NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withUsername(java.lang.String)"
  fullName: "com.azure.resourcemanager.netapp.models.ActiveDirectory.withUsername(String username)"
  name: "withUsername(String username)"
  nameWithType: "ActiveDirectory.withUsername(String username)"
  summary: "Set the username property: Username of Active Directory domain administrator."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ActiveDirectory withUsername(String username)"
  desc: "Set the username property: Username of Active Directory domain administrator."
  returns:
    description: "the ActiveDirectory object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ActiveDirectory?alt=com.azure.resourcemanager.netapp.models.ActiveDirectory&text=ActiveDirectory\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Active Directory."
metadata: {}
package: "com.azure.resourcemanager.netapp.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-netapp:1.0.0-beta.10
