### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties"
name: "RestServiceLinkedServiceTypeProperties"
nameWithType: "RestServiceLinkedServiceTypeProperties"
summary: "Rest Service linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RestServiceLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.RestServiceLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.RestServiceLinkedServiceTypeProperties()"
  name: "RestServiceLinkedServiceTypeProperties()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.RestServiceLinkedServiceTypeProperties()"
  syntax: "public RestServiceLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.aadResourceId()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.aadResourceId()"
  name: "aadResourceId()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.aadResourceId()"
  summary: "Get the aadResourceId property: The resource you are requesting authorization to use."
  syntax: "public Object aadResourceId()"
  returns:
    description: "the aadResourceId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.authHeaders()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.authHeaders()"
  name: "authHeaders()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.authHeaders()"
  summary: "Get the authHeaders property: The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object)."
  syntax: "public Object authHeaders()"
  returns:
    description: "the authHeaders value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.authenticationType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.authenticationType()"
  name: "authenticationType()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.authenticationType()"
  summary: "Get the authenticationType property: Type of authentication used to connect to the REST service."
  syntax: "public RestServiceAuthenticationType authenticationType()"
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.RestServiceAuthenticationType&text=RestServiceAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.azureCloudType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.azureCloudType()"
  name: "azureCloudType()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.azureCloudType()"
  summary: "Get the azureCloudType property: Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions\\\\u2019 cloud type. Type: string (or Expression with resultType string)."
  syntax: "public Object azureCloudType()"
  returns:
    description: "the azureCloudType value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.clientId()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.clientId()"
  name: "clientId()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.clientId()"
  summary: "Get the clientId property: The client ID associated with your application. Type: string (or Expression with resultType string)."
  syntax: "public Object clientId()"
  returns:
    description: "the clientId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.clientSecret()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.clientSecret()"
  name: "clientSecret()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.clientSecret()"
  summary: "Get the clientSecret property: The client secret associated with your application."
  syntax: "public SecretBase clientSecret()"
  returns:
    description: "the clientSecret value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.credential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.credential()"
  name: "credential()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.credential()"
  summary: "Get the credential property: The credential reference containing authentication information."
  syntax: "public CredentialReference credential()"
  returns:
    description: "the credential value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.enableServerCertificateValidation()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.enableServerCertificateValidation()"
  name: "enableServerCertificateValidation()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.enableServerCertificateValidation()"
  summary: "Get the enableServerCertificateValidation property: Whether to validate server side SSL certificate when connecting to the endpoint.The default value is true. Type: boolean (or Expression with resultType boolean)."
  syntax: "public Object enableServerCertificateValidation()"
  returns:
    description: "the enableServerCertificateValidation value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  syntax: "public Object encryptedCredential()"
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.password()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.password()"
  name: "password()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.password()"
  summary: "Get the password property: The password used in Basic authentication type."
  syntax: "public SecretBase password()"
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.resource()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.resource()"
  name: "resource()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.resource()"
  summary: "Get the resource property: The target service or resource to which the access will be requested. Type: string (or Expression with resultType string)."
  syntax: "public Object resource()"
  returns:
    description: "the resource value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.scope()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.scope()"
  name: "scope()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.scope()"
  summary: "Get the scope property: The scope of the access required. It describes what kind of access will be requested. Type: string (or Expression with resultType string)."
  syntax: "public Object scope()"
  returns:
    description: "the scope value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.servicePrincipalId()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.servicePrincipalId()"
  name: "servicePrincipalId()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.servicePrincipalId()"
  summary: "Get the servicePrincipalId property: The application's client ID used in AadServicePrincipal authentication type."
  syntax: "public Object servicePrincipalId()"
  returns:
    description: "the servicePrincipalId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.servicePrincipalKey()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.servicePrincipalKey()"
  name: "servicePrincipalKey()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.servicePrincipalKey()"
  summary: "Get the servicePrincipalKey property: The application's key used in AadServicePrincipal authentication type."
  syntax: "public SecretBase servicePrincipalKey()"
  returns:
    description: "the servicePrincipalKey value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.tenant()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.tenant()"
  name: "tenant()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.tenant()"
  summary: "Get the tenant property: The tenant information (domain name or tenant ID) used in AadServicePrincipal authentication type under which your application resides."
  syntax: "public Object tenant()"
  returns:
    description: "the tenant value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.tokenEndpoint()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.tokenEndpoint()"
  name: "tokenEndpoint()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.tokenEndpoint()"
  summary: "Get the tokenEndpoint property: The token endpoint of the authorization server to acquire access token. Type: string (or Expression with resultType string)."
  syntax: "public Object tokenEndpoint()"
  returns:
    description: "the tokenEndpoint value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.url()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.url()"
  name: "url()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.url()"
  summary: "Get the url property: The base URL of the REST service."
  syntax: "public Object url()"
  returns:
    description: "the url value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.username()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.username()"
  name: "username()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.username()"
  summary: "Get the username property: The user name used in Basic authentication type."
  syntax: "public Object username()"
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "RestServiceLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withAadResourceId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withAadResourceId(Object aadResourceId)"
  name: "withAadResourceId(Object aadResourceId)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withAadResourceId(Object aadResourceId)"
  summary: "Set the aadResourceId property: The resource you are requesting authorization to use."
  parameters:
  - description: "the aadResourceId value to set."
    name: "aadResourceId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withAadResourceId(Object aadResourceId)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withAuthHeaders(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withAuthHeaders(Object authHeaders)"
  name: "withAuthHeaders(Object authHeaders)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withAuthHeaders(Object authHeaders)"
  summary: "Set the authHeaders property: The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object)."
  parameters:
  - description: "the authHeaders value to set."
    name: "authHeaders"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withAuthHeaders(Object authHeaders)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withAuthenticationType(com.azure.resourcemanager.datafactory.models.RestServiceAuthenticationType)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withAuthenticationType(RestServiceAuthenticationType authenticationType)"
  name: "withAuthenticationType(RestServiceAuthenticationType authenticationType)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withAuthenticationType(RestServiceAuthenticationType authenticationType)"
  summary: "Set the authenticationType property: Type of authentication used to connect to the REST service."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.RestServiceAuthenticationType&text=RestServiceAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withAuthenticationType(RestServiceAuthenticationType authenticationType)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withAzureCloudType(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withAzureCloudType(Object azureCloudType)"
  name: "withAzureCloudType(Object azureCloudType)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withAzureCloudType(Object azureCloudType)"
  summary: "Set the azureCloudType property: Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions\\\\u2019 cloud type. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the azureCloudType value to set."
    name: "azureCloudType"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withAzureCloudType(Object azureCloudType)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withClientId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withClientId(Object clientId)"
  name: "withClientId(Object clientId)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withClientId(Object clientId)"
  summary: "Set the clientId property: The client ID associated with your application. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the clientId value to set."
    name: "clientId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withClientId(Object clientId)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withClientSecret(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withClientSecret(SecretBase clientSecret)"
  name: "withClientSecret(SecretBase clientSecret)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withClientSecret(SecretBase clientSecret)"
  summary: "Set the clientSecret property: The client secret associated with your application."
  parameters:
  - description: "the clientSecret value to set."
    name: "clientSecret"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withClientSecret(SecretBase clientSecret)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withCredential(com.azure.resourcemanager.datafactory.models.CredentialReference)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withCredential(CredentialReference credential)"
  name: "withCredential(CredentialReference credential)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withCredential(CredentialReference credential)"
  summary: "Set the credential property: The credential reference containing authentication information."
  parameters:
  - description: "the credential value to set."
    name: "credential"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withCredential(CredentialReference credential)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withEnableServerCertificateValidation(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withEnableServerCertificateValidation(Object enableServerCertificateValidation)"
  name: "withEnableServerCertificateValidation(Object enableServerCertificateValidation)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withEnableServerCertificateValidation(Object enableServerCertificateValidation)"
  summary: "Set the enableServerCertificateValidation property: Whether to validate server side SSL certificate when connecting to the endpoint.The default value is true. Type: boolean (or Expression with resultType boolean)."
  parameters:
  - description: "the enableServerCertificateValidation value to set."
    name: "enableServerCertificateValidation"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withEnableServerCertificateValidation(Object enableServerCertificateValidation)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withPassword(SecretBase password)"
  summary: "Set the password property: The password used in Basic authentication type."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withPassword(SecretBase password)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withResource(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withResource(Object resource)"
  name: "withResource(Object resource)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withResource(Object resource)"
  summary: "Set the resource property: The target service or resource to which the access will be requested. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the resource value to set."
    name: "resource"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withResource(Object resource)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withScope(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withScope(Object scope)"
  name: "withScope(Object scope)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withScope(Object scope)"
  summary: "Set the scope property: The scope of the access required. It describes what kind of access will be requested. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the scope value to set."
    name: "scope"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withScope(Object scope)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withServicePrincipalId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withServicePrincipalId(Object servicePrincipalId)"
  name: "withServicePrincipalId(Object servicePrincipalId)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withServicePrincipalId(Object servicePrincipalId)"
  summary: "Set the servicePrincipalId property: The application's client ID used in AadServicePrincipal authentication type."
  parameters:
  - description: "the servicePrincipalId value to set."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withServicePrincipalId(Object servicePrincipalId)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withServicePrincipalKey(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withServicePrincipalKey(SecretBase servicePrincipalKey)"
  name: "withServicePrincipalKey(SecretBase servicePrincipalKey)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withServicePrincipalKey(SecretBase servicePrincipalKey)"
  summary: "Set the servicePrincipalKey property: The application's key used in AadServicePrincipal authentication type."
  parameters:
  - description: "the servicePrincipalKey value to set."
    name: "servicePrincipalKey"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withServicePrincipalKey(SecretBase servicePrincipalKey)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withTenant(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withTenant(Object tenant)"
  name: "withTenant(Object tenant)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withTenant(Object tenant)"
  summary: "Set the tenant property: The tenant information (domain name or tenant ID) used in AadServicePrincipal authentication type under which your application resides."
  parameters:
  - description: "the tenant value to set."
    name: "tenant"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withTenant(Object tenant)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withTokenEndpoint(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withTokenEndpoint(Object tokenEndpoint)"
  name: "withTokenEndpoint(Object tokenEndpoint)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withTokenEndpoint(Object tokenEndpoint)"
  summary: "Set the tokenEndpoint property: The token endpoint of the authorization server to acquire access token. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the tokenEndpoint value to set."
    name: "tokenEndpoint"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withTokenEndpoint(Object tokenEndpoint)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withUrl(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withUrl(Object url)"
  name: "withUrl(Object url)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withUrl(Object url)"
  summary: "Set the url property: The base URL of the REST service."
  parameters:
  - description: "the url value to set."
    name: "url"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withUrl(Object url)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "RestServiceLinkedServiceTypeProperties.withUsername(Object username)"
  summary: "Set the username property: The user name used in Basic authentication type."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedServiceTypeProperties withUsername(Object username)"
  returns:
    description: "the RestServiceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.RestServiceLinkedServiceTypeProperties&text=RestServiceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
