### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Maps.fromProperties*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Maps.fromProperties"
name: "fromProperties"
nameWithType: "Maps.fromProperties"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Maps.fromProperties(java.util.Properties)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Maps.fromProperties(Properties properties)"
  name: "fromProperties(Properties properties)"
  nameWithType: "Maps.fromProperties(Properties properties)"
  summary: "Creates an `ImmutableMap` from a `Properties` instance. Properties normally derive from `Map`, but they typically contain strings, which is awkward. This method lets you get a plain-old-`Map` out of a `Properties`."
  parameters:
  - description: "a <code>Properties</code> object to be converted"
    name: "properties"
    type: "<xref href=\"java.util.Properties?alt=java.util.Properties&text=Properties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ImmutableMap<String,String> fromProperties(Properties properties)"
  returns:
    description: "an immutable map containing all the entries in <code>properties</code>"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableMap?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableMap&text=ImmutableMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
