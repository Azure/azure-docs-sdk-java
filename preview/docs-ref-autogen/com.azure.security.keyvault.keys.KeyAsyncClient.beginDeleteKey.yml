### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.KeyAsyncClient.beginDeleteKey*"
fullName: "com.azure.security.keyvault.keys.KeyAsyncClient.beginDeleteKey"
name: "beginDeleteKey"
nameWithType: "KeyAsyncClient.beginDeleteKey"
members:
- uid: "com.azure.security.keyvault.keys.KeyAsyncClient.beginDeleteKey(java.lang.String)"
  fullName: "com.azure.security.keyvault.keys.KeyAsyncClient.beginDeleteKey(String name)"
  name: "beginDeleteKey(String name)"
  nameWithType: "KeyAsyncClient.beginDeleteKey(String name)"
  summary: "Deletes a key of any type from the key vault. If soft-delete is enabled on the key vault then the key is placed in the deleted state and requires to be purged for permanent deletion else the key is permanently deleted. The delete operation applies to any key stored in Azure Key Vault but it cannot be applied to an individual version of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations. This operation requires the `keys/delete` permission.\n\n**Code Samples**\n\nDeletes the key in the Azure Key Vault. Subscribes to the call asynchronously and prints out the deleted key details when a response has been received.\n\n```java\nkeyAsyncClient.beginDeleteKey(\"keyName\")\n     .subscribe(pollResponse -> {\n         System.out.println(\"Delete Status: \" + pollResponse.getStatus().toString());\n         System.out.println(\"Delete Key Name: \" + pollResponse.getValue().getName());\n         System.out.println(\"Key Delete Date: \" + pollResponse.getValue().getDeletedOn().toString());\n     });\n```"
  parameters:
  - description: "The name of the key to be deleted."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<DeletedKey,Void> beginDeleteKey(String name)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> to poll on the <xref uid=\"com.azure.security.keyvault.keys.models.DeletedKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"deleted key\"></xref> status."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.keys.models.DeletedKey?alt=com.azure.security.keyvault.keys.models.DeletedKey&text=DeletedKey\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.keys.KeyAsyncClient.beginDeleteKey(java.lang.String,java.time.Duration)"
  fullName: "com.azure.security.keyvault.keys.KeyAsyncClient.beginDeleteKey(String name, Duration pollingInterval)"
  name: "beginDeleteKey(String name, Duration pollingInterval)"
  nameWithType: "KeyAsyncClient.beginDeleteKey(String name, Duration pollingInterval)"
  summary: "Deletes a key of any type from the key vault. If soft-delete is enabled on the key vault then the key is placed in the deleted state and requires to be purged for permanent deletion else the key is permanently deleted. The delete operation applies to any key stored in Azure Key Vault but it cannot be applied to an individual version of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations. This operation requires the `keys/delete` permission.\n\n**Code Samples**\n\nDeletes the key in the Azure Key Vault. Subscribes to the call asynchronously and prints out the deleted key details when a response has been received.\n\n```java\nkeyAsyncClient.beginDeleteKey(\"keyName\", Duration.ofSeconds(1))\n     .subscribe(pollResponse -> {\n         System.out.println(\"Delete Status: \" + pollResponse.getStatus().toString());\n         System.out.println(\"Delete Key Name: \" + pollResponse.getValue().getName());\n         System.out.println(\"Key Delete Date: \" + pollResponse.getValue().getDeletedOn().toString());\n     });\n```"
  parameters:
  - description: "The name of the key to be deleted."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The interval at which the operation status will be polled for."
    name: "pollingInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<DeletedKey,Void> beginDeleteKey(String name, Duration pollingInterval)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> to poll on the <xref uid=\"com.azure.security.keyvault.keys.models.DeletedKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"deleted key\"></xref> status."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.keys.models.DeletedKey?alt=com.azure.security.keyvault.keys.models.DeletedKey&text=DeletedKey\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys"
artifact: com.azure:azure-security-keyvault-keys:4.3.0-beta.3
