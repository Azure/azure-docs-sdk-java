### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.module.SimpleModule
  id: SimpleModule
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module
  children:
  - com.fasterxml.jackson.databind.module.SimpleModule.<T>addAbstractTypeMapping(java.lang.Class<T>,java.lang.Class<? extends T>)
  - com.fasterxml.jackson.databind.module.SimpleModule.<T>addDeserializer(java.lang.Class<T>,com.fasterxml.jackson.databind.JsonDeserializer<? extends T>)
  - com.fasterxml.jackson.databind.module.SimpleModule.<T>addKeySerializer(java.lang.Class<? extends T>,com.fasterxml.jackson.databind.JsonSerializer<T>)
  - com.fasterxml.jackson.databind.module.SimpleModule.<T>addSerializer(java.lang.Class<? extends T>,com.fasterxml.jackson.databind.JsonSerializer<T>)
  - com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule()
  - com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(com.fasterxml.jackson.core.Version)
  - com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(java.lang.String)
  - com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(java.lang.String,com.fasterxml.jackson.core.Version)
  - com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(java.lang.String,com.fasterxml.jackson.core.Version,java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>)
  - com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(java.lang.String,com.fasterxml.jackson.core.Version,java.util.Map<java.lang.Class<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>>)
  - com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(java.lang.String,com.fasterxml.jackson.core.Version,java.util.Map<java.lang.Class<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>>,java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>)
  - com.fasterxml.jackson.databind.module.SimpleModule._abstractTypes
  - com.fasterxml.jackson.databind.module.SimpleModule._checkNotNull(java.lang.Object,java.lang.String)
  - com.fasterxml.jackson.databind.module.SimpleModule._deserializerModifier
  - com.fasterxml.jackson.databind.module.SimpleModule._deserializers
  - com.fasterxml.jackson.databind.module.SimpleModule._keyDeserializers
  - com.fasterxml.jackson.databind.module.SimpleModule._keySerializers
  - com.fasterxml.jackson.databind.module.SimpleModule._mixins
  - com.fasterxml.jackson.databind.module.SimpleModule._name
  - com.fasterxml.jackson.databind.module.SimpleModule._namingStrategy
  - com.fasterxml.jackson.databind.module.SimpleModule._serializerModifier
  - com.fasterxml.jackson.databind.module.SimpleModule._serializers
  - com.fasterxml.jackson.databind.module.SimpleModule._subtypes
  - com.fasterxml.jackson.databind.module.SimpleModule._valueInstantiators
  - com.fasterxml.jackson.databind.module.SimpleModule._version
  - com.fasterxml.jackson.databind.module.SimpleModule.addKeyDeserializer(java.lang.Class<?>,com.fasterxml.jackson.databind.KeyDeserializer)
  - com.fasterxml.jackson.databind.module.SimpleModule.addSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.module.SimpleModule.addValueInstantiator(java.lang.Class<?>,com.fasterxml.jackson.databind.deser.ValueInstantiator)
  - com.fasterxml.jackson.databind.module.SimpleModule.getModuleName()
  - com.fasterxml.jackson.databind.module.SimpleModule.getTypeId()
  - com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType...)
  - com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(java.lang.Class<?>...)
  - com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(java.util.Collection<java.lang.Class<?>>)
  - com.fasterxml.jackson.databind.module.SimpleModule.setAbstractTypes(com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver)
  - com.fasterxml.jackson.databind.module.SimpleModule.setDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier)
  - com.fasterxml.jackson.databind.module.SimpleModule.setDeserializers(com.fasterxml.jackson.databind.module.SimpleDeserializers)
  - com.fasterxml.jackson.databind.module.SimpleModule.setKeyDeserializers(com.fasterxml.jackson.databind.module.SimpleKeyDeserializers)
  - com.fasterxml.jackson.databind.module.SimpleModule.setKeySerializers(com.fasterxml.jackson.databind.module.SimpleSerializers)
  - com.fasterxml.jackson.databind.module.SimpleModule.setMixInAnnotation(java.lang.Class<?>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.module.SimpleModule.setNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy)
  - com.fasterxml.jackson.databind.module.SimpleModule.setSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier)
  - com.fasterxml.jackson.databind.module.SimpleModule.setSerializers(com.fasterxml.jackson.databind.module.SimpleSerializers)
  - com.fasterxml.jackson.databind.module.SimpleModule.setValueInstantiators(com.fasterxml.jackson.databind.module.SimpleValueInstantiators)
  - com.fasterxml.jackson.databind.module.SimpleModule.setupModule(com.fasterxml.jackson.databind.Module.SetupContext)
  - com.fasterxml.jackson.databind.module.SimpleModule.version()
  langs:
  - java
  name: SimpleModule
  nameWithType: SimpleModule
  fullName: com.fasterxml.jackson.databind.module.SimpleModule
  type: Class
  package: com.fasterxml.jackson.databind.module
  summary: >-
    Vanilla <xref uid="com.fasterxml.jackson.databind.Module" data-throw-if-not-resolved="false">Module</xref> implementation that allows registration of serializers and deserializers, bean serializer and deserializer modifiers, registration of subtypes and mix-ins as well as some other commonly needed aspects (addition of custom <xref uid="com.fasterxml.jackson.databind.AbstractTypeResolver" data-throw-if-not-resolved="false">AbstractTypeResolver</xref>s, <xref uid="com.fasterxml.jackson.databind.deser.ValueInstantiator" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.deser.ValueInstantiator</xref>s).


    NOTE: although it is not expected that sub-types should need to override <xref uid="com.fasterxml.jackson.databind.module.SimpleModule.setupModule*" data-throw-if-not-resolved="false">#setupModule(SetupContext)</xref> method, if they choose to do so they MUST call `super.setupModule(context);` to ensure that registration works as expected.


    WARNING: when registering <xref uid="com.fasterxml.jackson.databind.JsonSerializer" data-throw-if-not-resolved="false">JsonSerializer</xref>s and <xref uid="com.fasterxml.jackson.databind.JsonDeserializer" data-throw-if-not-resolved="false">JsonDeserializer</xref>s, only type erased `Class` is compared: this means that usually you should NOT use this implementation for registering structured types such as <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref>s or <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>s: this because parametric type information will not be considered and you may end up having "wrong" handler for your type. What you need to do, instead, is to implement <xref uid="com.fasterxml.jackson.databind.deser.Deserializers" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.deser.Deserializers</xref> and/or <xref uid="com.fasterxml.jackson.databind.ser.Serializers" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.ser.Serializers</xref> callbacks to match full type signatures (with <xref uid="com.fasterxml.jackson.databind.JavaType" data-throw-if-not-resolved="false">JavaType</xref>).
  syntax:
    content: public class SimpleModule extends Module implements Serializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.Module
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.Module.getDependencies()
  - com.fasterxml.jackson.databind.Module.getModuleName()
  - com.fasterxml.jackson.databind.Module.getTypeId()
  - com.fasterxml.jackson.databind.Module.setupModule(com.fasterxml.jackson.databind.Module.SetupContext)
  - com.fasterxml.jackson.databind.Module.version()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.module.SimpleModule.<T>addAbstractTypeMapping(java.lang.Class<T>,java.lang.Class<? extends T>)
  id: <T>addAbstractTypeMapping(java.lang.Class<T>,java.lang.Class<? extends T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: <T>addAbstractTypeMapping(Class<T> superType, Class<? extends T> subType)
  nameWithType: SimpleModule.<T>addAbstractTypeMapping(Class<T> superType, Class<? extends T> subType)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.<T>addAbstractTypeMapping(Class<T> superType, Class<? extends T> subType)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.addAbstractTypeMapping*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Lazily-constructed resolver used for storing mappings from abstract classes to more specific implementing classes (which may be abstract or concrete)
  syntax:
    content: public SimpleModule <T>addAbstractTypeMapping(Class<T> superType, Class<? extends T> subType)
    parameters:
    - id: superType
      type: java.lang.Class<T>
    - id: subType
      type: java.lang.Class<? extends T>
    return:
      type: com.fasterxml.jackson.databind.module.SimpleModule
- uid: com.fasterxml.jackson.databind.module.SimpleModule.<T>addDeserializer(java.lang.Class<T>,com.fasterxml.jackson.databind.JsonDeserializer<? extends T>)
  id: <T>addDeserializer(java.lang.Class<T>,com.fasterxml.jackson.databind.JsonDeserializer<? extends T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: <T>addDeserializer(Class<T> type, JsonDeserializer<? extends T> deser)
  nameWithType: SimpleModule.<T>addDeserializer(Class<T> type, JsonDeserializer<? extends T> deser)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.<T>addDeserializer(Class<T> type, JsonDeserializer<? extends T> deser)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.addDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: >-
    Method for adding deserializer to handle specified type.


    WARNING! Type matching only uses type-erased `Class` and should NOT be used when registering serializers for generic types like <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> and <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>.
  syntax:
    content: public SimpleModule <T>addDeserializer(Class<T> type, JsonDeserializer<? extends T> deser)
    parameters:
    - id: type
      type: java.lang.Class<T>
    - id: deser
      type: com.fasterxml.jackson.databind.JsonDeserializer<? extends T>
    return:
      type: com.fasterxml.jackson.databind.module.SimpleModule
- uid: com.fasterxml.jackson.databind.module.SimpleModule.<T>addKeySerializer(java.lang.Class<? extends T>,com.fasterxml.jackson.databind.JsonSerializer<T>)
  id: <T>addKeySerializer(java.lang.Class<? extends T>,com.fasterxml.jackson.databind.JsonSerializer<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: <T>addKeySerializer(Class<? extends T> type, JsonSerializer<T> ser)
  nameWithType: SimpleModule.<T>addKeySerializer(Class<? extends T> type, JsonSerializer<T> ser)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.<T>addKeySerializer(Class<? extends T> type, JsonSerializer<T> ser)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.addKeySerializer*
  type: Method
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: public SimpleModule <T>addKeySerializer(Class<? extends T> type, JsonSerializer<T> ser)
    parameters:
    - id: type
      type: java.lang.Class<? extends T>
    - id: ser
      type: com.fasterxml.jackson.databind.JsonSerializer<T>
    return:
      type: com.fasterxml.jackson.databind.module.SimpleModule
- uid: com.fasterxml.jackson.databind.module.SimpleModule.<T>addSerializer(java.lang.Class<? extends T>,com.fasterxml.jackson.databind.JsonSerializer<T>)
  id: <T>addSerializer(java.lang.Class<? extends T>,com.fasterxml.jackson.databind.JsonSerializer<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: <T>addSerializer(Class<? extends T> type, JsonSerializer<T> ser)
  nameWithType: SimpleModule.<T>addSerializer(Class<? extends T> type, JsonSerializer<T> ser)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.<T>addSerializer(Class<? extends T> type, JsonSerializer<T> ser)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.addSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: >-
    Method for adding serializer to handle values of specific type.


    WARNING! Type matching only uses type-erased `Class` and should NOT be used when registering serializers for generic types like <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> and <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>.
  syntax:
    content: public SimpleModule <T>addSerializer(Class<? extends T> type, JsonSerializer<T> ser)
    parameters:
    - id: type
      type: java.lang.Class<? extends T>
    - id: ser
      type: com.fasterxml.jackson.databind.JsonSerializer<T>
    return:
      type: com.fasterxml.jackson.databind.module.SimpleModule
- uid: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule()
  id: SimpleModule()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: SimpleModule()
  nameWithType: SimpleModule.SimpleModule()
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule()
  overload: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule*
  type: Constructor
  package: com.fasterxml.jackson.databind.module
  summary: 'Constructors that should only be used for non-reusable convenience modules used by app code: "real" modules should use actual name and version number information.'
  syntax:
    content: public SimpleModule()
- uid: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(com.fasterxml.jackson.core.Version)
  id: SimpleModule(com.fasterxml.jackson.core.Version)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: SimpleModule(Version version)
  nameWithType: SimpleModule.SimpleModule(Version version)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(Version version)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule*
  type: Constructor
  package: com.fasterxml.jackson.databind.module
  summary: Convenience constructor that will use specified Version, including name from <xref uid="com.fasterxml.jackson.core.Version.getArtifactId()" data-throw-if-not-resolved="false">Version#getArtifactId()</xref>
  syntax:
    content: public SimpleModule(Version version)
    parameters:
    - id: version
      type: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(java.lang.String)
  id: SimpleModule(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: SimpleModule(String name)
  nameWithType: SimpleModule.SimpleModule(String name)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(String name)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule*
  type: Constructor
  package: com.fasterxml.jackson.databind.module
  summary: Convenience constructor that will default version to <xref uid="com.fasterxml.jackson.core.Version.unknownVersion()" data-throw-if-not-resolved="false">Version#unknownVersion()</xref>.
  syntax:
    content: public SimpleModule(String name)
    parameters:
    - id: name
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(java.lang.String,com.fasterxml.jackson.core.Version)
  id: SimpleModule(java.lang.String,com.fasterxml.jackson.core.Version)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: SimpleModule(String name, Version version)
  nameWithType: SimpleModule.SimpleModule(String name, Version version)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(String name, Version version)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule*
  type: Constructor
  package: com.fasterxml.jackson.databind.module
  summary: Constructor to use for actual reusable modules. ObjectMapper may use name as identifier to notice attempts for multiple registrations of the same module (although it does not have to).
  syntax:
    content: public SimpleModule(String name, Version version)
    parameters:
    - id: name
      type: java.lang.String
      description: Unique name of the module
    - id: version
      type: com.fasterxml.jackson.core.Version
      description: Version of the module
- uid: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(java.lang.String,com.fasterxml.jackson.core.Version,java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>)
  id: SimpleModule(java.lang.String,com.fasterxml.jackson.core.Version,java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: SimpleModule(String name, Version version, List<JsonSerializer<?>> serializers)
  nameWithType: SimpleModule.SimpleModule(String name, Version version, List<JsonSerializer<?>> serializers)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(String name, Version version, List<JsonSerializer<?>> serializers)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule*
  type: Constructor
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: public SimpleModule(String name, Version version, List<JsonSerializer<?>> serializers)
    parameters:
    - id: name
      type: java.lang.String
    - id: version
      type: com.fasterxml.jackson.core.Version
    - id: serializers
      type: java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>
- uid: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(java.lang.String,com.fasterxml.jackson.core.Version,java.util.Map<java.lang.Class<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>>)
  id: SimpleModule(java.lang.String,com.fasterxml.jackson.core.Version,java.util.Map<java.lang.Class<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: SimpleModule(String name, Version version, Map<Class<?>,JsonDeserializer<?>> deserializers)
  nameWithType: SimpleModule.SimpleModule(String name, Version version, Map<Class<?>,JsonDeserializer<?>> deserializers)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(String name, Version version, Map<Class<?>,JsonDeserializer<?>> deserializers)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule*
  type: Constructor
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: public SimpleModule(String name, Version version, Map<Class<?>,JsonDeserializer<?>> deserializers)
    parameters:
    - id: name
      type: java.lang.String
    - id: version
      type: com.fasterxml.jackson.core.Version
    - id: deserializers
      type: java.util.Map<java.lang.Class<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>>
- uid: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(java.lang.String,com.fasterxml.jackson.core.Version,java.util.Map<java.lang.Class<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>>,java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>)
  id: SimpleModule(java.lang.String,com.fasterxml.jackson.core.Version,java.util.Map<java.lang.Class<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>>,java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: SimpleModule(String name, Version version, Map<Class<?>,JsonDeserializer<?>> deserializers, List<JsonSerializer<?>> serializers)
  nameWithType: SimpleModule.SimpleModule(String name, Version version, Map<Class<?>,JsonDeserializer<?>> deserializers, List<JsonSerializer<?>> serializers)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(String name, Version version, Map<Class<?>,JsonDeserializer<?>> deserializers, List<JsonSerializer<?>> serializers)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule*
  type: Constructor
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: public SimpleModule(String name, Version version, Map<Class<?>,JsonDeserializer<?>> deserializers, List<JsonSerializer<?>> serializers)
    parameters:
    - id: name
      type: java.lang.String
    - id: version
      type: com.fasterxml.jackson.core.Version
    - id: deserializers
      type: java.util.Map<java.lang.Class<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>>
    - id: serializers
      type: java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>
- uid: com.fasterxml.jackson.databind.module.SimpleModule._abstractTypes
  id: _abstractTypes
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: _abstractTypes
  nameWithType: SimpleModule._abstractTypes
  fullName: com.fasterxml.jackson.databind.module.SimpleModule._abstractTypes
  type: Field
  package: com.fasterxml.jackson.databind.module
  summary: Lazily-constructed resolver used for storing mappings from abstract classes to more specific implementing classes (which may be abstract or concrete)
  syntax:
    content: protected SimpleAbstractTypeResolver _abstractTypes
    return:
      type: com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver
- uid: com.fasterxml.jackson.databind.module.SimpleModule._checkNotNull(java.lang.Object,java.lang.String)
  id: _checkNotNull(java.lang.Object,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: _checkNotNull(Object thingy, String type)
  nameWithType: SimpleModule._checkNotNull(Object thingy, String type)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule._checkNotNull(Object thingy, String type)
  overload: com.fasterxml.jackson.databind.module.SimpleModule._checkNotNull*
  type: Method
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: protected void _checkNotNull(Object thingy, String type)
    parameters:
    - id: thingy
      type: java.lang.Object
    - id: type
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.module.SimpleModule._deserializerModifier
  id: _deserializerModifier
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: _deserializerModifier
  nameWithType: SimpleModule._deserializerModifier
  fullName: com.fasterxml.jackson.databind.module.SimpleModule._deserializerModifier
  type: Field
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: protected BeanDeserializerModifier _deserializerModifier
    return:
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
- uid: com.fasterxml.jackson.databind.module.SimpleModule._deserializers
  id: _deserializers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: _deserializers
  nameWithType: SimpleModule._deserializers
  fullName: com.fasterxml.jackson.databind.module.SimpleModule._deserializers
  type: Field
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: protected SimpleDeserializers _deserializers
    return:
      type: com.fasterxml.jackson.databind.module.SimpleDeserializers
- uid: com.fasterxml.jackson.databind.module.SimpleModule._keyDeserializers
  id: _keyDeserializers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: _keyDeserializers
  nameWithType: SimpleModule._keyDeserializers
  fullName: com.fasterxml.jackson.databind.module.SimpleModule._keyDeserializers
  type: Field
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: protected SimpleKeyDeserializers _keyDeserializers
    return:
      type: com.fasterxml.jackson.databind.module.SimpleKeyDeserializers
- uid: com.fasterxml.jackson.databind.module.SimpleModule._keySerializers
  id: _keySerializers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: _keySerializers
  nameWithType: SimpleModule._keySerializers
  fullName: com.fasterxml.jackson.databind.module.SimpleModule._keySerializers
  type: Field
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: protected SimpleSerializers _keySerializers
    return:
      type: com.fasterxml.jackson.databind.module.SimpleSerializers
- uid: com.fasterxml.jackson.databind.module.SimpleModule._mixins
  id: _mixins
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: _mixins
  nameWithType: SimpleModule._mixins
  fullName: com.fasterxml.jackson.databind.module.SimpleModule._mixins
  type: Field
  package: com.fasterxml.jackson.databind.module
  summary: Lazily-constructed map that contains mix-in definitions, indexed by target class, value being mix-in to apply.
  syntax:
    content: protected HashMap<Class<?>,Class<?>> _mixins
    return:
      type: java.util.HashMap<java.lang.Class<?>,java.lang.Class<?>>
- uid: com.fasterxml.jackson.databind.module.SimpleModule._name
  id: _name
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: _name
  nameWithType: SimpleModule._name
  fullName: com.fasterxml.jackson.databind.module.SimpleModule._name
  type: Field
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: protected final String _name
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.module.SimpleModule._namingStrategy
  id: _namingStrategy
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: _namingStrategy
  nameWithType: SimpleModule._namingStrategy
  fullName: com.fasterxml.jackson.databind.module.SimpleModule._namingStrategy
  type: Field
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: protected PropertyNamingStrategy _namingStrategy
    return:
      type: com.fasterxml.jackson.databind.PropertyNamingStrategy
- uid: com.fasterxml.jackson.databind.module.SimpleModule._serializerModifier
  id: _serializerModifier
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: _serializerModifier
  nameWithType: SimpleModule._serializerModifier
  fullName: com.fasterxml.jackson.databind.module.SimpleModule._serializerModifier
  type: Field
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: protected BeanSerializerModifier _serializerModifier
    return:
      type: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
- uid: com.fasterxml.jackson.databind.module.SimpleModule._serializers
  id: _serializers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: _serializers
  nameWithType: SimpleModule._serializers
  fullName: com.fasterxml.jackson.databind.module.SimpleModule._serializers
  type: Field
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: protected SimpleSerializers _serializers
    return:
      type: com.fasterxml.jackson.databind.module.SimpleSerializers
- uid: com.fasterxml.jackson.databind.module.SimpleModule._subtypes
  id: _subtypes
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: _subtypes
  nameWithType: SimpleModule._subtypes
  fullName: com.fasterxml.jackson.databind.module.SimpleModule._subtypes
  type: Field
  package: com.fasterxml.jackson.databind.module
  summary: Set of subtypes to register, if any.
  syntax:
    content: protected LinkedHashSet<NamedType> _subtypes
    return:
      type: java.util.LinkedHashSet<com.fasterxml.jackson.databind.jsontype.NamedType>
- uid: com.fasterxml.jackson.databind.module.SimpleModule._valueInstantiators
  id: _valueInstantiators
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: _valueInstantiators
  nameWithType: SimpleModule._valueInstantiators
  fullName: com.fasterxml.jackson.databind.module.SimpleModule._valueInstantiators
  type: Field
  package: com.fasterxml.jackson.databind.module
  summary: Lazily-constructed resolver used for storing mappings from abstract classes to more specific implementing classes (which may be abstract or concrete)
  syntax:
    content: protected SimpleValueInstantiators _valueInstantiators
    return:
      type: com.fasterxml.jackson.databind.module.SimpleValueInstantiators
- uid: com.fasterxml.jackson.databind.module.SimpleModule._version
  id: _version
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: _version
  nameWithType: SimpleModule._version
  fullName: com.fasterxml.jackson.databind.module.SimpleModule._version
  type: Field
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: protected final Version _version
    return:
      type: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.databind.module.SimpleModule.addKeyDeserializer(java.lang.Class<?>,com.fasterxml.jackson.databind.KeyDeserializer)
  id: addKeyDeserializer(java.lang.Class<?>,com.fasterxml.jackson.databind.KeyDeserializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: addKeyDeserializer(Class<?> type, KeyDeserializer deser)
  nameWithType: SimpleModule.addKeyDeserializer(Class<?> type, KeyDeserializer deser)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.addKeyDeserializer(Class<?> type, KeyDeserializer deser)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.addKeyDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: public SimpleModule addKeyDeserializer(Class<?> type, KeyDeserializer deser)
    parameters:
    - id: type
      type: java.lang.Class<?>
    - id: deser
      type: com.fasterxml.jackson.databind.KeyDeserializer
    return:
      type: com.fasterxml.jackson.databind.module.SimpleModule
- uid: com.fasterxml.jackson.databind.module.SimpleModule.addSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  id: addSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: addSerializer(JsonSerializer<?> ser)
  nameWithType: SimpleModule.addSerializer(JsonSerializer<?> ser)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.addSerializer(JsonSerializer<?> ser)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.addSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: >-
    Method for adding serializer to handle type that the serializer claims to handle (see <xref uid="com.fasterxml.jackson.databind.JsonSerializer.handledType()" data-throw-if-not-resolved="false">JsonSerializer#handledType()</xref>).


    WARNING! Type matching only uses type-erased `Class` and should NOT be used when registering serializers for generic types like <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> and <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>.
  syntax:
    content: public SimpleModule addSerializer(JsonSerializer<?> ser)
    parameters:
    - id: ser
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
    return:
      type: com.fasterxml.jackson.databind.module.SimpleModule
- uid: com.fasterxml.jackson.databind.module.SimpleModule.addValueInstantiator(java.lang.Class<?>,com.fasterxml.jackson.databind.deser.ValueInstantiator)
  id: addValueInstantiator(java.lang.Class<?>,com.fasterxml.jackson.databind.deser.ValueInstantiator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: addValueInstantiator(Class<?> beanType, ValueInstantiator inst)
  nameWithType: SimpleModule.addValueInstantiator(Class<?> beanType, ValueInstantiator inst)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.addValueInstantiator(Class<?> beanType, ValueInstantiator inst)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.addValueInstantiator*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: >-
    Method for registering <xref uid="com.fasterxml.jackson.databind.deser.ValueInstantiator" data-throw-if-not-resolved="false">ValueInstantiator</xref> to use when deserializing instances of type `beanType`.


    Instantiator is registered when module is registered for `ObjectMapper`.
  syntax:
    content: public SimpleModule addValueInstantiator(Class<?> beanType, ValueInstantiator inst)
    parameters:
    - id: beanType
      type: java.lang.Class<?>
    - id: inst
      type: com.fasterxml.jackson.databind.deser.ValueInstantiator
    return:
      type: com.fasterxml.jackson.databind.module.SimpleModule
- uid: com.fasterxml.jackson.databind.module.SimpleModule.getModuleName()
  id: getModuleName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: getModuleName()
  nameWithType: SimpleModule.getModuleName()
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.getModuleName()
  overload: com.fasterxml.jackson.databind.module.SimpleModule.getModuleName*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Method that returns a display that can be used by Jackson for informational purposes, as well as in associating extensions with module that provides them.
  syntax:
    content: public String getModuleName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.module.SimpleModule.getTypeId()
  id: getTypeId()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: getTypeId()
  nameWithType: SimpleModule.getTypeId()
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.getTypeId()
  overload: com.fasterxml.jackson.databind.module.SimpleModule.getTypeId*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Since instances are likely to be custom, implementation returns `null` if (but only if!) this class is directly instantiated; but class name (default impl) for sub-classes.
  syntax:
    content: public Object getTypeId()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType...)
  id: registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: registerSubtypes(NamedType[] subtypes)
  nameWithType: SimpleModule.registerSubtypes(NamedType[] subtypes)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(NamedType[] subtypes)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Method for adding set of subtypes (along with type name to use) to be registered with <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref> this is an alternative to using annotations in super type to indicate subtypes.
  syntax:
    content: public SimpleModule registerSubtypes(NamedType[] subtypes)
    parameters:
    - id: subtypes
      type: com.fasterxml.jackson.databind.jsontype.NamedType[]
    return:
      type: com.fasterxml.jackson.databind.module.SimpleModule
- uid: com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(java.lang.Class<?>...)
  id: registerSubtypes(java.lang.Class<?>...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: registerSubtypes(Class<?>[] subtypes)
  nameWithType: SimpleModule.registerSubtypes(Class<?>[] subtypes)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(Class<?>[] subtypes)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Method for adding set of subtypes to be registered with <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref> this is an alternative to using annotations in super type to indicate subtypes.
  syntax:
    content: public SimpleModule registerSubtypes(Class<?>[] subtypes)
    parameters:
    - id: subtypes
      type: java.lang.Class<?>[]
    return:
      type: com.fasterxml.jackson.databind.module.SimpleModule
- uid: com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(java.util.Collection<java.lang.Class<?>>)
  id: registerSubtypes(java.util.Collection<java.lang.Class<?>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: registerSubtypes(Collection<Class<?>> subtypes)
  nameWithType: SimpleModule.registerSubtypes(Collection<Class<?>> subtypes)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(Collection<Class<?>> subtypes)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Method for adding set of subtypes (along with type name to use) to be registered with <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref> this is an alternative to using annotations in super type to indicate subtypes.
  syntax:
    content: public SimpleModule registerSubtypes(Collection<Class<?>> subtypes)
    parameters:
    - id: subtypes
      type: java.util.Collection<java.lang.Class<?>>
    return:
      type: com.fasterxml.jackson.databind.module.SimpleModule
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setAbstractTypes(com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver)
  id: setAbstractTypes(com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: setAbstractTypes(SimpleAbstractTypeResolver atr)
  nameWithType: SimpleModule.setAbstractTypes(SimpleAbstractTypeResolver atr)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setAbstractTypes(SimpleAbstractTypeResolver atr)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.setAbstractTypes*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Resets currently configured abstract type mappings
  syntax:
    content: public void setAbstractTypes(SimpleAbstractTypeResolver atr)
    parameters:
    - id: atr
      type: com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier)
  id: setDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: setDeserializerModifier(BeanDeserializerModifier mod)
  nameWithType: SimpleModule.setDeserializerModifier(BeanDeserializerModifier mod)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setDeserializerModifier(BeanDeserializerModifier mod)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.setDeserializerModifier*
  type: Method
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: public SimpleModule setDeserializerModifier(BeanDeserializerModifier mod)
    parameters:
    - id: mod
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
    return:
      type: com.fasterxml.jackson.databind.module.SimpleModule
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setDeserializers(com.fasterxml.jackson.databind.module.SimpleDeserializers)
  id: setDeserializers(com.fasterxml.jackson.databind.module.SimpleDeserializers)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: setDeserializers(SimpleDeserializers d)
  nameWithType: SimpleModule.setDeserializers(SimpleDeserializers d)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setDeserializers(SimpleDeserializers d)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.setDeserializers*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Resets all currently configured deserializers.
  syntax:
    content: public void setDeserializers(SimpleDeserializers d)
    parameters:
    - id: d
      type: com.fasterxml.jackson.databind.module.SimpleDeserializers
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setKeyDeserializers(com.fasterxml.jackson.databind.module.SimpleKeyDeserializers)
  id: setKeyDeserializers(com.fasterxml.jackson.databind.module.SimpleKeyDeserializers)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: setKeyDeserializers(SimpleKeyDeserializers kd)
  nameWithType: SimpleModule.setKeyDeserializers(SimpleKeyDeserializers kd)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setKeyDeserializers(SimpleKeyDeserializers kd)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.setKeyDeserializers*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Resets all currently configured key deserializers.
  syntax:
    content: public void setKeyDeserializers(SimpleKeyDeserializers kd)
    parameters:
    - id: kd
      type: com.fasterxml.jackson.databind.module.SimpleKeyDeserializers
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setKeySerializers(com.fasterxml.jackson.databind.module.SimpleSerializers)
  id: setKeySerializers(com.fasterxml.jackson.databind.module.SimpleSerializers)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: setKeySerializers(SimpleSerializers ks)
  nameWithType: SimpleModule.setKeySerializers(SimpleSerializers ks)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setKeySerializers(SimpleSerializers ks)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.setKeySerializers*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Resets all currently configured key serializers.
  syntax:
    content: public void setKeySerializers(SimpleSerializers ks)
    parameters:
    - id: ks
      type: com.fasterxml.jackson.databind.module.SimpleSerializers
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setMixInAnnotation(java.lang.Class<?>,java.lang.Class<?>)
  id: setMixInAnnotation(java.lang.Class<?>,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: setMixInAnnotation(Class<?> targetType, Class<?> mixinClass)
  nameWithType: SimpleModule.setMixInAnnotation(Class<?> targetType, Class<?> mixinClass)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setMixInAnnotation(Class<?> targetType, Class<?> mixinClass)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.setMixInAnnotation*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: >-
    Method for specifying that annotations define by `mixinClass` should be "mixed in" with annotations that `targetType` has (as if they were directly included on it!).


    Mix-in annotations are registered when module is registered for `ObjectMapper`.
  syntax:
    content: public SimpleModule setMixInAnnotation(Class<?> targetType, Class<?> mixinClass)
    parameters:
    - id: targetType
      type: java.lang.Class<?>
    - id: mixinClass
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.module.SimpleModule
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy)
  id: setNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: setNamingStrategy(PropertyNamingStrategy naming)
  nameWithType: SimpleModule.setNamingStrategy(PropertyNamingStrategy naming)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setNamingStrategy(PropertyNamingStrategy naming)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.setNamingStrategy*
  type: Method
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: protected SimpleModule setNamingStrategy(PropertyNamingStrategy naming)
    parameters:
    - id: naming
      type: com.fasterxml.jackson.databind.PropertyNamingStrategy
    return:
      type: com.fasterxml.jackson.databind.module.SimpleModule
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier)
  id: setSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: setSerializerModifier(BeanSerializerModifier mod)
  nameWithType: SimpleModule.setSerializerModifier(BeanSerializerModifier mod)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setSerializerModifier(BeanSerializerModifier mod)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.setSerializerModifier*
  type: Method
  package: com.fasterxml.jackson.databind.module
  syntax:
    content: public SimpleModule setSerializerModifier(BeanSerializerModifier mod)
    parameters:
    - id: mod
      type: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
    return:
      type: com.fasterxml.jackson.databind.module.SimpleModule
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setSerializers(com.fasterxml.jackson.databind.module.SimpleSerializers)
  id: setSerializers(com.fasterxml.jackson.databind.module.SimpleSerializers)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: setSerializers(SimpleSerializers s)
  nameWithType: SimpleModule.setSerializers(SimpleSerializers s)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setSerializers(SimpleSerializers s)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.setSerializers*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Resets all currently configured serializers.
  syntax:
    content: public void setSerializers(SimpleSerializers s)
    parameters:
    - id: s
      type: com.fasterxml.jackson.databind.module.SimpleSerializers
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setValueInstantiators(com.fasterxml.jackson.databind.module.SimpleValueInstantiators)
  id: setValueInstantiators(com.fasterxml.jackson.databind.module.SimpleValueInstantiators)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: setValueInstantiators(SimpleValueInstantiators svi)
  nameWithType: SimpleModule.setValueInstantiators(SimpleValueInstantiators svi)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setValueInstantiators(SimpleValueInstantiators svi)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.setValueInstantiators*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Resets all currently configured value instantiators
  syntax:
    content: public void setValueInstantiators(SimpleValueInstantiators svi)
    parameters:
    - id: svi
      type: com.fasterxml.jackson.databind.module.SimpleValueInstantiators
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setupModule(com.fasterxml.jackson.databind.Module.SetupContext)
  id: setupModule(com.fasterxml.jackson.databind.Module.SetupContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: setupModule(Module.SetupContext context)
  nameWithType: SimpleModule.setupModule(Module.SetupContext context)
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setupModule(Module.SetupContext context)
  overload: com.fasterxml.jackson.databind.module.SimpleModule.setupModule*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: 'Standard implementation handles registration of all configured customizations: it is important that sub-classes call this implementation (usually before additional custom logic) if they choose to override it; otherwise customizations will not be registered.'
  syntax:
    content: public void setupModule(Module.SetupContext context)
    parameters:
    - id: context
      type: com.fasterxml.jackson.databind.Module.SetupContext
- uid: com.fasterxml.jackson.databind.module.SimpleModule.version()
  id: version()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.module.SimpleModule
  langs:
  - java
  name: version()
  nameWithType: SimpleModule.version()
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.version()
  overload: com.fasterxml.jackson.databind.module.SimpleModule.version*
  type: Method
  package: com.fasterxml.jackson.databind.module
  summary: Method that returns version of this module. Can be used by Jackson for informational purposes.
  syntax:
    content: public Version version()
    return:
      type: com.fasterxml.jackson.core.Version
references:
- uid: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule*
  name: SimpleModule
  nameWithType: SimpleModule.SimpleModule
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule
  package: com.fasterxml.jackson.databind.module
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.Version
  name: Version
  nameWithType: Version
  fullName: com.fasterxml.jackson.core.Version
- uid: java.util.Map<java.lang.Class<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.module.SimpleModule.getTypeId*
  name: getTypeId
  nameWithType: SimpleModule.getTypeId
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.getTypeId
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.module.SimpleSerializers
  name: SimpleSerializers
  nameWithType: SimpleSerializers
  fullName: com.fasterxml.jackson.databind.module.SimpleSerializers
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setSerializers*
  name: setSerializers
  nameWithType: SimpleModule.setSerializers
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setSerializers
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.module.SimpleDeserializers
  name: SimpleDeserializers
  nameWithType: SimpleDeserializers
  fullName: com.fasterxml.jackson.databind.module.SimpleDeserializers
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setDeserializers*
  name: setDeserializers
  nameWithType: SimpleModule.setDeserializers
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setDeserializers
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setKeySerializers*
  name: setKeySerializers
  nameWithType: SimpleModule.setKeySerializers
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setKeySerializers
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.module.SimpleKeyDeserializers
  name: SimpleKeyDeserializers
  nameWithType: SimpleKeyDeserializers
  fullName: com.fasterxml.jackson.databind.module.SimpleKeyDeserializers
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setKeyDeserializers*
  name: setKeyDeserializers
  nameWithType: SimpleModule.setKeyDeserializers
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setKeyDeserializers
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver
  name: SimpleAbstractTypeResolver
  nameWithType: SimpleAbstractTypeResolver
  fullName: com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setAbstractTypes*
  name: setAbstractTypes
  nameWithType: SimpleModule.setAbstractTypes
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setAbstractTypes
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.module.SimpleValueInstantiators
  name: SimpleValueInstantiators
  nameWithType: SimpleValueInstantiators
  fullName: com.fasterxml.jackson.databind.module.SimpleValueInstantiators
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setValueInstantiators*
  name: setValueInstantiators
  nameWithType: SimpleModule.setValueInstantiators
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setValueInstantiators
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
  name: BeanDeserializerModifier
  nameWithType: BeanDeserializerModifier
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setDeserializerModifier*
  name: setDeserializerModifier
  nameWithType: SimpleModule.setDeserializerModifier
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setDeserializerModifier
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
  name: BeanSerializerModifier
  nameWithType: BeanSerializerModifier
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setSerializerModifier*
  name: setSerializerModifier
  nameWithType: SimpleModule.setSerializerModifier
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setSerializerModifier
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy
  name: PropertyNamingStrategy
  nameWithType: PropertyNamingStrategy
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setNamingStrategy*
  name: setNamingStrategy
  nameWithType: SimpleModule.setNamingStrategy
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setNamingStrategy
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.JsonSerializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.module.SimpleModule.addSerializer*
  name: addSerializer
  nameWithType: SimpleModule.addSerializer
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.addSerializer
  package: com.fasterxml.jackson.databind.module
- uid: java.lang.Class<? extends T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '? extends T'
    name: '? extends T'
    fullName: '? extends T'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.JsonSerializer<T>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.module.SimpleModule.addKeySerializer*
  name: <T>addKeySerializer
  nameWithType: SimpleModule.<T>addKeySerializer
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.<T>addKeySerializer
  package: com.fasterxml.jackson.databind.module
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.JsonDeserializer<? extends T>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: '? extends T'
    name: '? extends T'
    fullName: '? extends T'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.module.SimpleModule.addDeserializer*
  name: <T>addDeserializer
  nameWithType: SimpleModule.<T>addDeserializer
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.<T>addDeserializer
  package: com.fasterxml.jackson.databind.module
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.KeyDeserializer
  name: KeyDeserializer
  nameWithType: KeyDeserializer
  fullName: com.fasterxml.jackson.databind.KeyDeserializer
- uid: com.fasterxml.jackson.databind.module.SimpleModule.addKeyDeserializer*
  name: addKeyDeserializer
  nameWithType: SimpleModule.addKeyDeserializer
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.addKeyDeserializer
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.module.SimpleModule.addAbstractTypeMapping*
  name: <T>addAbstractTypeMapping
  nameWithType: SimpleModule.<T>addAbstractTypeMapping
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.<T>addAbstractTypeMapping
  package: com.fasterxml.jackson.databind.module
- uid: java.lang.Class<?>[]
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes*
  name: registerSubtypes
  nameWithType: SimpleModule.registerSubtypes
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.jsontype.NamedType[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.jsontype.NamedType
    name: NamedType
    fullName: com.fasterxml.jackson.databind.jsontype.NamedType
  - name: '[]'
    fullName: '[]'
- uid: java.util.Collection<java.lang.Class<?>>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.ValueInstantiator
  name: ValueInstantiator
  nameWithType: ValueInstantiator
  fullName: com.fasterxml.jackson.databind.deser.ValueInstantiator
- uid: com.fasterxml.jackson.databind.module.SimpleModule.addValueInstantiator*
  name: addValueInstantiator
  nameWithType: SimpleModule.addValueInstantiator
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.addValueInstantiator
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setMixInAnnotation*
  name: setMixInAnnotation
  nameWithType: SimpleModule.setMixInAnnotation
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setMixInAnnotation
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.module.SimpleModule.getModuleName*
  name: getModuleName
  nameWithType: SimpleModule.getModuleName
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.getModuleName
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.Module.SetupContext
  name: Module.SetupContext
  nameWithType: Module.SetupContext
  fullName: com.fasterxml.jackson.databind.Module.SetupContext
- uid: com.fasterxml.jackson.databind.module.SimpleModule.setupModule*
  name: setupModule
  nameWithType: SimpleModule.setupModule
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.setupModule
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.module.SimpleModule.version*
  name: version
  nameWithType: SimpleModule.version
  fullName: com.fasterxml.jackson.databind.module.SimpleModule.version
  package: com.fasterxml.jackson.databind.module
- uid: com.fasterxml.jackson.databind.module.SimpleModule._checkNotNull*
  name: _checkNotNull
  nameWithType: SimpleModule._checkNotNull
  fullName: com.fasterxml.jackson.databind.module.SimpleModule._checkNotNull
  package: com.fasterxml.jackson.databind.module
- uid: java.util.HashMap<java.lang.Class<?>,java.lang.Class<?>>
  spec.java:
  - uid: java.util.HashMap
    name: HashMap
    fullName: java.util.HashMap
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: java.util.LinkedHashSet<com.fasterxml.jackson.databind.jsontype.NamedType>
  spec.java:
  - uid: java.util.LinkedHashSet
    name: LinkedHashSet
    fullName: java.util.LinkedHashSet
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.jsontype.NamedType
    name: NamedType
    fullName: com.fasterxml.jackson.databind.jsontype.NamedType
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.Module
  name: Module
  nameWithType: Module
  fullName: com.fasterxml.jackson.databind.Module
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.Module.version()
  name: Module.version()
  nameWithType: Module.version()
  fullName: com.fasterxml.jackson.databind.Module.version()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.Module.getDependencies()
  name: Module.getDependencies()
  nameWithType: Module.getDependencies()
  fullName: com.fasterxml.jackson.databind.Module.getDependencies()
- uid: com.fasterxml.jackson.databind.Module.getModuleName()
  name: Module.getModuleName()
  nameWithType: Module.getModuleName()
  fullName: com.fasterxml.jackson.databind.Module.getModuleName()
- uid: com.fasterxml.jackson.databind.Module.getTypeId()
  name: Module.getTypeId()
  nameWithType: Module.getTypeId()
  fullName: com.fasterxml.jackson.databind.Module.getTypeId()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.Module.setupModule(com.fasterxml.jackson.databind.Module.SetupContext)
  name: Module.setupModule(Module.SetupContext)
  nameWithType: Module.setupModule(Module.SetupContext)
  fullName: com.fasterxml.jackson.databind.Module.setupModule(com.fasterxml.jackson.databind.Module.SetupContext)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: ?>,com.fasterxml.jackson.databind.JsonDeserializer
  name: ?>,JsonDeserializer
  nameWithType: ?>,JsonDeserializer
  fullName: ?>,com.fasterxml.jackson.databind.JsonDeserializer
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: '? extends T'
  name: '? extends T'
  nameWithType: '? extends T'
  fullName: '? extends T'
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer
- uid: ?>[]
  name: ?>[]
  nameWithType: ?>[]
  fullName: ?>[]
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: java.util.HashMap
  name: HashMap
  nameWithType: HashMap
  fullName: java.util.HashMap
- uid: ?>,java.lang.Class
  name: ?>,Class
  nameWithType: ?>,Class
  fullName: ?>,java.lang.Class
- uid: com.fasterxml.jackson.databind.jsontype.NamedType
  name: NamedType
  nameWithType: NamedType
  fullName: com.fasterxml.jackson.databind.jsontype.NamedType
- uid: java.util.LinkedHashSet
  name: LinkedHashSet
  nameWithType: LinkedHashSet
  fullName: java.util.LinkedHashSet
