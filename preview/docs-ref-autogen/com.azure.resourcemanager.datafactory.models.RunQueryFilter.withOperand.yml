### YamlMime:JavaMember
uid: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.withOperand*"
fullName: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.withOperand"
name: "withOperand"
nameWithType: "RunQueryFilter.withOperand"
members:
- uid: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.withOperand(com.azure.resourcemanager.datafactory.models.RunQueryFilterOperand)"
  fullName: "com.azure.resourcemanager.datafactory.models.RunQueryFilter.withOperand(RunQueryFilterOperand operand)"
  name: "withOperand(RunQueryFilterOperand operand)"
  nameWithType: "RunQueryFilter.withOperand(RunQueryFilterOperand operand)"
  summary: "Set the operand property: Parameter name to be used for filter. The allowed operands to query pipeline runs are PipelineName, RunStart, RunEnd and Status; to query activity runs are ActivityName, ActivityRunStart, ActivityRunEnd, ActivityType and Status, and to query trigger runs are TriggerName, TriggerRunTimestamp and Status."
  parameters:
  - description: "the operand value to set."
    name: "operand"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RunQueryFilterOperand?alt=com.azure.resourcemanager.datafactory.models.RunQueryFilterOperand&text=RunQueryFilterOperand\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RunQueryFilter withOperand(RunQueryFilterOperand operand)"
  returns:
    description: "the RunQueryFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RunQueryFilter?alt=com.azure.resourcemanager.datafactory.models.RunQueryFilter&text=RunQueryFilter\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.1
