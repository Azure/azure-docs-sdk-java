### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.CharMatcher.forPredicate*"
fullName: "com.azure.cosmos.implementation.guava25.base.CharMatcher.forPredicate"
name: "forPredicate"
nameWithType: "CharMatcher.forPredicate"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.CharMatcher.forPredicate(com.azure.cosmos.implementation.guava25.base.Predicate<? super java.lang.Character>)"
  fullName: "com.azure.cosmos.implementation.guava25.base.CharMatcher.forPredicate(Predicate<? super Character> predicate)"
  name: "forPredicate(Predicate<? super Character> predicate)"
  nameWithType: "CharMatcher.forPredicate(Predicate<? super Character> predicate)"
  summary: "Returns a matcher with identical behavior to the given <xref uid=\"java.lang.Character\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Character\"></xref>\\-based predicate, but which operates on primitive `char` instances instead."
  parameters:
  - name: "predicate"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Predicate?alt=com.azure.cosmos.implementation.guava25.base.Predicate&text=Predicate\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? super java.lang.Character?alt=? super java.lang.Character&text=Character\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static CharMatcher forPredicate(Predicate<? super Character> predicate)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.CharMatcher?alt=com.azure.cosmos.implementation.guava25.base.CharMatcher&text=CharMatcher\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
