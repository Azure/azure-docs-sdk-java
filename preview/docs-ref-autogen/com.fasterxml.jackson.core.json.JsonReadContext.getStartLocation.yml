### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.json.JsonReadContext.getStartLocation*"
fullName: "com.fasterxml.jackson.core.json.JsonReadContext.getStartLocation"
name: "getStartLocation"
nameWithType: "JsonReadContext.getStartLocation"
members:
- uid: "com.fasterxml.jackson.core.json.JsonReadContext.getStartLocation(java.lang.Object)"
  fullName: "com.fasterxml.jackson.core.json.JsonReadContext.getStartLocation(Object srcRef)"
  name: "getStartLocation(Object srcRef)"
  nameWithType: "JsonReadContext.getStartLocation(Object srcRef)"
  summary: "Optional method that may be used to access starting location of this context: for example, in case of JSON \\`Object\\` context, offset at which \\`\\[\\` token was read or written. Often used for error reporting purposes. Implementations that do not keep track of such location are expected to return <xref uid=\"com.fasterxml.jackson.core.JsonLocation.NA\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonLocation#NA\"></xref>; this is what the default implementation does."
  overridden: "com.fasterxml.jackson.core.JsonStreamContext.getStartLocation(java.lang.Object)"
  parameters:
  - name: "srcRef"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonLocation getStartLocation(Object srcRef)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonLocation?alt=com.fasterxml.jackson.core.JsonLocation&text=JsonLocation\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.json"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
