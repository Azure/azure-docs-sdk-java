### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.implementation.DocumentsImpl
  id: DocumentsImpl
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.implementation
  children:
  - com.azure.search.documents.implementation.DocumentsImpl.autocompleteGetWithResponseAsync(java.lang.String,java.lang.String,com.azure.search.documents.implementation.models.RequestOptions,com.azure.search.documents.implementation.models.AutocompleteOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.DocumentsImpl.autocompletePostWithResponseAsync(com.azure.search.documents.implementation.models.AutocompleteRequest,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.DocumentsImpl.countWithResponseAsync(com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.DocumentsImpl.getWithResponseAsync(java.lang.String,java.util.List<java.lang.String>,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.DocumentsImpl.indexWithResponseAsync(com.azure.search.documents.implementation.models.IndexBatch,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.DocumentsImpl.searchGetWithResponseAsync(java.lang.String,com.azure.search.documents.implementation.models.SearchOptions,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.DocumentsImpl.searchPostWithResponseAsync(com.azure.search.documents.implementation.models.SearchRequest,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.DocumentsImpl.suggestGetWithResponseAsync(java.lang.String,java.lang.String,com.azure.search.documents.implementation.models.SuggestOptions,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.implementation.DocumentsImpl.suggestPostWithResponseAsync(com.azure.search.documents.implementation.models.SuggestRequest,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  langs:
  - java
  name: DocumentsImpl
  nameWithType: DocumentsImpl
  fullName: com.azure.search.documents.implementation.DocumentsImpl
  type: Class
  package: com.azure.search.documents.implementation
  summary: An instance of this class provides access to all the operations defined in Documents.
  syntax:
    content: public final class DocumentsImpl
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.implementation.DocumentsImpl.DocumentsImpl(com.azure.search.documents.implementation.SearchIndexClientImpl)
  id: DocumentsImpl(com.azure.search.documents.implementation.SearchIndexClientImpl)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.implementation.DocumentsImpl
  langs:
  - java
  name: DocumentsImpl(SearchIndexClientImpl client)
  nameWithType: DocumentsImpl.DocumentsImpl(SearchIndexClientImpl client)
  fullName: com.azure.search.documents.implementation.DocumentsImpl.DocumentsImpl(SearchIndexClientImpl client)
  overload: com.azure.search.documents.implementation.DocumentsImpl.DocumentsImpl*
  type: Constructor
  package: com.azure.search.documents.implementation
  summary: Initializes an instance of DocumentsImpl.
  syntax:
    content: " DocumentsImpl(SearchIndexClientImpl client)"
    parameters:
    - id: client
      type: com.azure.search.documents.implementation.SearchIndexClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.search.documents.implementation.DocumentsImpl.autocompleteGetWithResponseAsync(java.lang.String,java.lang.String,com.azure.search.documents.implementation.models.RequestOptions,com.azure.search.documents.implementation.models.AutocompleteOptions,com.azure.core.util.Context)
  id: autocompleteGetWithResponseAsync(java.lang.String,java.lang.String,com.azure.search.documents.implementation.models.RequestOptions,com.azure.search.documents.implementation.models.AutocompleteOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.implementation.DocumentsImpl
  langs:
  - java
  name: autocompleteGetWithResponseAsync(String searchText, String suggesterName, RequestOptions requestOptions, AutocompleteOptions autocompleteOptions, Context context)
  nameWithType: DocumentsImpl.autocompleteGetWithResponseAsync(String searchText, String suggesterName, RequestOptions requestOptions, AutocompleteOptions autocompleteOptions, Context context)
  fullName: com.azure.search.documents.implementation.DocumentsImpl.autocompleteGetWithResponseAsync(String searchText, String suggesterName, RequestOptions requestOptions, AutocompleteOptions autocompleteOptions, Context context)
  overload: com.azure.search.documents.implementation.DocumentsImpl.autocompleteGetWithResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Autocompletes incomplete query terms based on input text and matching terms in the index.
  syntax:
    content: public Mono<Response<AutocompleteResult>> autocompleteGetWithResponseAsync(String searchText, String suggesterName, RequestOptions requestOptions, AutocompleteOptions autocompleteOptions, Context context)
    parameters:
    - id: searchText
      type: java.lang.String
      description: The incomplete term which should be auto-completed.
    - id: suggesterName
      type: java.lang.String
      description: >-
        The name of the suggester as specified in the suggesters collection that's part of the index
             definition.
    - id: requestOptions
      type: com.azure.search.documents.implementation.models.RequestOptions
      description: Parameter group.
    - id: autocompleteOptions
      type: com.azure.search.documents.implementation.models.AutocompleteOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.implementation.models.AutocompleteResult>>
      description: the result of Autocomplete query.
- uid: com.azure.search.documents.implementation.DocumentsImpl.autocompletePostWithResponseAsync(com.azure.search.documents.implementation.models.AutocompleteRequest,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: autocompletePostWithResponseAsync(com.azure.search.documents.implementation.models.AutocompleteRequest,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.implementation.DocumentsImpl
  langs:
  - java
  name: autocompletePostWithResponseAsync(AutocompleteRequest autocompleteRequest, RequestOptions requestOptions, Context context)
  nameWithType: DocumentsImpl.autocompletePostWithResponseAsync(AutocompleteRequest autocompleteRequest, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.DocumentsImpl.autocompletePostWithResponseAsync(AutocompleteRequest autocompleteRequest, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.DocumentsImpl.autocompletePostWithResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Autocompletes incomplete query terms based on input text and matching terms in the index.
  syntax:
    content: public Mono<Response<AutocompleteResult>> autocompletePostWithResponseAsync(AutocompleteRequest autocompleteRequest, RequestOptions requestOptions, Context context)
    parameters:
    - id: autocompleteRequest
      type: com.azure.search.documents.implementation.models.AutocompleteRequest
      description: Parameters for fuzzy matching, and other autocomplete query behaviors.
    - id: requestOptions
      type: com.azure.search.documents.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.implementation.models.AutocompleteResult>>
      description: the result of Autocomplete query.
- uid: com.azure.search.documents.implementation.DocumentsImpl.countWithResponseAsync(com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: countWithResponseAsync(com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.implementation.DocumentsImpl
  langs:
  - java
  name: countWithResponseAsync(RequestOptions requestOptions, Context context)
  nameWithType: DocumentsImpl.countWithResponseAsync(RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.DocumentsImpl.countWithResponseAsync(RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.DocumentsImpl.countWithResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Queries the number of documents in the index.
  syntax:
    content: public Mono<Response<Long>> countWithResponseAsync(RequestOptions requestOptions, Context context)
    parameters:
    - id: requestOptions
      type: com.azure.search.documents.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Long>>
      description: the response.
- uid: com.azure.search.documents.implementation.DocumentsImpl.getWithResponseAsync(java.lang.String,java.util.List<java.lang.String>,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: getWithResponseAsync(java.lang.String,java.util.List<java.lang.String>,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.implementation.DocumentsImpl
  langs:
  - java
  name: getWithResponseAsync(String key, List<String> selectedFields, RequestOptions requestOptions, Context context)
  nameWithType: DocumentsImpl.getWithResponseAsync(String key, List<String> selectedFields, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.DocumentsImpl.getWithResponseAsync(String key, List<String> selectedFields, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.DocumentsImpl.getWithResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Retrieves a document from the index.
  syntax:
    content: public Mono<Response<Object>> getWithResponseAsync(String key, List<String> selectedFields, RequestOptions requestOptions, Context context)
    parameters:
    - id: key
      type: java.lang.String
      description: The key of the document to retrieve.
    - id: selectedFields
      type: java.util.List<java.lang.String>
      description: Array of Get1ItemsItem.
    - id: requestOptions
      type: com.azure.search.documents.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Object>>
      description: any object.
- uid: com.azure.search.documents.implementation.DocumentsImpl.indexWithResponseAsync(com.azure.search.documents.implementation.models.IndexBatch,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: indexWithResponseAsync(com.azure.search.documents.implementation.models.IndexBatch,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.implementation.DocumentsImpl
  langs:
  - java
  name: indexWithResponseAsync(IndexBatch batch, RequestOptions requestOptions, Context context)
  nameWithType: DocumentsImpl.indexWithResponseAsync(IndexBatch batch, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.DocumentsImpl.indexWithResponseAsync(IndexBatch batch, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.DocumentsImpl.indexWithResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Sends a batch of document write actions to the index.
  syntax:
    content: public Mono<Response<IndexDocumentsResult>> indexWithResponseAsync(IndexBatch batch, RequestOptions requestOptions, Context context)
    parameters:
    - id: batch
      type: com.azure.search.documents.implementation.models.IndexBatch
      description: Contains a batch of document write actions to send to the index.
    - id: requestOptions
      type: com.azure.search.documents.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.implementation.models.IndexDocumentsResult>>
      description: response containing the status of operations for all documents in the indexing request.
- uid: com.azure.search.documents.implementation.DocumentsImpl.searchGetWithResponseAsync(java.lang.String,com.azure.search.documents.implementation.models.SearchOptions,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: searchGetWithResponseAsync(java.lang.String,com.azure.search.documents.implementation.models.SearchOptions,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.implementation.DocumentsImpl
  langs:
  - java
  name: searchGetWithResponseAsync(String searchText, SearchOptions searchOptions, RequestOptions requestOptions, Context context)
  nameWithType: DocumentsImpl.searchGetWithResponseAsync(String searchText, SearchOptions searchOptions, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.DocumentsImpl.searchGetWithResponseAsync(String searchText, SearchOptions searchOptions, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.DocumentsImpl.searchGetWithResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Searches for documents in the index.
  syntax:
    content: public Mono<Response<SearchDocumentsResult>> searchGetWithResponseAsync(String searchText, SearchOptions searchOptions, RequestOptions requestOptions, Context context)
    parameters:
    - id: searchText
      type: java.lang.String
      description: A full-text search query expression; Use "*" or omit this parameter to match all documents.
    - id: searchOptions
      type: com.azure.search.documents.implementation.models.SearchOptions
      description: Parameter group.
    - id: requestOptions
      type: com.azure.search.documents.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.implementation.models.SearchDocumentsResult>>
      description: response containing search results from an index.
- uid: com.azure.search.documents.implementation.DocumentsImpl.searchPostWithResponseAsync(com.azure.search.documents.implementation.models.SearchRequest,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: searchPostWithResponseAsync(com.azure.search.documents.implementation.models.SearchRequest,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.implementation.DocumentsImpl
  langs:
  - java
  name: searchPostWithResponseAsync(SearchRequest searchRequest, RequestOptions requestOptions, Context context)
  nameWithType: DocumentsImpl.searchPostWithResponseAsync(SearchRequest searchRequest, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.DocumentsImpl.searchPostWithResponseAsync(SearchRequest searchRequest, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.DocumentsImpl.searchPostWithResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Searches for documents in the index.
  syntax:
    content: public Mono<Response<SearchDocumentsResult>> searchPostWithResponseAsync(SearchRequest searchRequest, RequestOptions requestOptions, Context context)
    parameters:
    - id: searchRequest
      type: com.azure.search.documents.implementation.models.SearchRequest
      description: Parameters for filtering, sorting, faceting, paging, and other search query behaviors.
    - id: requestOptions
      type: com.azure.search.documents.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.implementation.models.SearchDocumentsResult>>
      description: response containing search results from an index.
- uid: com.azure.search.documents.implementation.DocumentsImpl.suggestGetWithResponseAsync(java.lang.String,java.lang.String,com.azure.search.documents.implementation.models.SuggestOptions,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: suggestGetWithResponseAsync(java.lang.String,java.lang.String,com.azure.search.documents.implementation.models.SuggestOptions,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.implementation.DocumentsImpl
  langs:
  - java
  name: suggestGetWithResponseAsync(String searchText, String suggesterName, SuggestOptions suggestOptions, RequestOptions requestOptions, Context context)
  nameWithType: DocumentsImpl.suggestGetWithResponseAsync(String searchText, String suggesterName, SuggestOptions suggestOptions, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.DocumentsImpl.suggestGetWithResponseAsync(String searchText, String suggesterName, SuggestOptions suggestOptions, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.DocumentsImpl.suggestGetWithResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Suggests documents in the index that match the given partial query text.
  syntax:
    content: public Mono<Response<SuggestDocumentsResult>> suggestGetWithResponseAsync(String searchText, String suggesterName, SuggestOptions suggestOptions, RequestOptions requestOptions, Context context)
    parameters:
    - id: searchText
      type: java.lang.String
      description: >-
        The search text to use to suggest documents. Must be at least 1 character, and no more than 100
             characters.
    - id: suggesterName
      type: java.lang.String
      description: >-
        The name of the suggester as specified in the suggesters collection that's part of the index
             definition.
    - id: suggestOptions
      type: com.azure.search.documents.implementation.models.SuggestOptions
      description: Parameter group.
    - id: requestOptions
      type: com.azure.search.documents.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.implementation.models.SuggestDocumentsResult>>
      description: response containing suggestion query results from an index.
- uid: com.azure.search.documents.implementation.DocumentsImpl.suggestPostWithResponseAsync(com.azure.search.documents.implementation.models.SuggestRequest,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: suggestPostWithResponseAsync(com.azure.search.documents.implementation.models.SuggestRequest,com.azure.search.documents.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.implementation.DocumentsImpl
  langs:
  - java
  name: suggestPostWithResponseAsync(SuggestRequest suggestRequest, RequestOptions requestOptions, Context context)
  nameWithType: DocumentsImpl.suggestPostWithResponseAsync(SuggestRequest suggestRequest, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.implementation.DocumentsImpl.suggestPostWithResponseAsync(SuggestRequest suggestRequest, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.implementation.DocumentsImpl.suggestPostWithResponseAsync*
  type: Method
  package: com.azure.search.documents.implementation
  summary: Suggests documents in the index that match the given partial query text.
  syntax:
    content: public Mono<Response<SuggestDocumentsResult>> suggestPostWithResponseAsync(SuggestRequest suggestRequest, RequestOptions requestOptions, Context context)
    parameters:
    - id: suggestRequest
      type: com.azure.search.documents.implementation.models.SuggestRequest
      description: Parameters for filtering, sorting, fuzzy matching, and other suggestions query behaviors.
    - id: requestOptions
      type: com.azure.search.documents.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.implementation.models.SuggestDocumentsResult>>
      description: response containing suggestion query results from an index.
references:
- uid: com.azure.search.documents.implementation.SearchIndexClientImpl
  name: SearchIndexClientImpl
  nameWithType: SearchIndexClientImpl
  fullName: com.azure.search.documents.implementation.SearchIndexClientImpl
- uid: com.azure.search.documents.implementation.DocumentsImpl.DocumentsImpl*
  name: DocumentsImpl
  nameWithType: DocumentsImpl.DocumentsImpl
  fullName: com.azure.search.documents.implementation.DocumentsImpl.DocumentsImpl
  package: com.azure.search.documents.implementation
- uid: com.azure.search.documents.implementation.models.RequestOptions
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: com.azure.search.documents.implementation.models.RequestOptions
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Long>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Long
    name: Long
    fullName: java.lang.Long
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.implementation.DocumentsImpl.countWithResponseAsync*
  name: countWithResponseAsync
  nameWithType: DocumentsImpl.countWithResponseAsync
  fullName: com.azure.search.documents.implementation.DocumentsImpl.countWithResponseAsync
  package: com.azure.search.documents.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.search.documents.implementation.models.SearchOptions
  name: SearchOptions
  nameWithType: SearchOptions
  fullName: com.azure.search.documents.implementation.models.SearchOptions
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.implementation.models.SearchDocumentsResult>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.search.documents.implementation.models.SearchDocumentsResult
    name: SearchDocumentsResult
    fullName: com.azure.search.documents.implementation.models.SearchDocumentsResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.implementation.DocumentsImpl.searchGetWithResponseAsync*
  name: searchGetWithResponseAsync
  nameWithType: DocumentsImpl.searchGetWithResponseAsync
  fullName: com.azure.search.documents.implementation.DocumentsImpl.searchGetWithResponseAsync
  package: com.azure.search.documents.implementation
- uid: com.azure.search.documents.implementation.models.SearchRequest
  name: SearchRequest
  nameWithType: SearchRequest
  fullName: com.azure.search.documents.implementation.models.SearchRequest
- uid: com.azure.search.documents.implementation.DocumentsImpl.searchPostWithResponseAsync*
  name: searchPostWithResponseAsync
  nameWithType: DocumentsImpl.searchPostWithResponseAsync
  fullName: com.azure.search.documents.implementation.DocumentsImpl.searchPostWithResponseAsync
  package: com.azure.search.documents.implementation
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Object>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.implementation.DocumentsImpl.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: DocumentsImpl.getWithResponseAsync
  fullName: com.azure.search.documents.implementation.DocumentsImpl.getWithResponseAsync
  package: com.azure.search.documents.implementation
- uid: com.azure.search.documents.implementation.models.SuggestOptions
  name: SuggestOptions
  nameWithType: SuggestOptions
  fullName: com.azure.search.documents.implementation.models.SuggestOptions
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.implementation.models.SuggestDocumentsResult>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.search.documents.implementation.models.SuggestDocumentsResult
    name: SuggestDocumentsResult
    fullName: com.azure.search.documents.implementation.models.SuggestDocumentsResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.implementation.DocumentsImpl.suggestGetWithResponseAsync*
  name: suggestGetWithResponseAsync
  nameWithType: DocumentsImpl.suggestGetWithResponseAsync
  fullName: com.azure.search.documents.implementation.DocumentsImpl.suggestGetWithResponseAsync
  package: com.azure.search.documents.implementation
- uid: com.azure.search.documents.implementation.models.SuggestRequest
  name: SuggestRequest
  nameWithType: SuggestRequest
  fullName: com.azure.search.documents.implementation.models.SuggestRequest
- uid: com.azure.search.documents.implementation.DocumentsImpl.suggestPostWithResponseAsync*
  name: suggestPostWithResponseAsync
  nameWithType: DocumentsImpl.suggestPostWithResponseAsync
  fullName: com.azure.search.documents.implementation.DocumentsImpl.suggestPostWithResponseAsync
  package: com.azure.search.documents.implementation
- uid: com.azure.search.documents.implementation.models.IndexBatch
  name: IndexBatch
  nameWithType: IndexBatch
  fullName: com.azure.search.documents.implementation.models.IndexBatch
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.implementation.models.IndexDocumentsResult>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.search.documents.implementation.models.IndexDocumentsResult
    name: IndexDocumentsResult
    fullName: com.azure.search.documents.implementation.models.IndexDocumentsResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.implementation.DocumentsImpl.indexWithResponseAsync*
  name: indexWithResponseAsync
  nameWithType: DocumentsImpl.indexWithResponseAsync
  fullName: com.azure.search.documents.implementation.DocumentsImpl.indexWithResponseAsync
  package: com.azure.search.documents.implementation
- uid: com.azure.search.documents.implementation.models.AutocompleteOptions
  name: AutocompleteOptions
  nameWithType: AutocompleteOptions
  fullName: com.azure.search.documents.implementation.models.AutocompleteOptions
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.implementation.models.AutocompleteResult>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.search.documents.implementation.models.AutocompleteResult
    name: AutocompleteResult
    fullName: com.azure.search.documents.implementation.models.AutocompleteResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.implementation.DocumentsImpl.autocompleteGetWithResponseAsync*
  name: autocompleteGetWithResponseAsync
  nameWithType: DocumentsImpl.autocompleteGetWithResponseAsync
  fullName: com.azure.search.documents.implementation.DocumentsImpl.autocompleteGetWithResponseAsync
  package: com.azure.search.documents.implementation
- uid: com.azure.search.documents.implementation.models.AutocompleteRequest
  name: AutocompleteRequest
  nameWithType: AutocompleteRequest
  fullName: com.azure.search.documents.implementation.models.AutocompleteRequest
- uid: com.azure.search.documents.implementation.DocumentsImpl.autocompletePostWithResponseAsync*
  name: autocompletePostWithResponseAsync
  nameWithType: DocumentsImpl.autocompletePostWithResponseAsync
  fullName: com.azure.search.documents.implementation.DocumentsImpl.autocompletePostWithResponseAsync
  package: com.azure.search.documents.implementation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Long
  name: Long
  nameWithType: Long
  fullName: java.lang.Long
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.search.documents.implementation.models.SearchDocumentsResult
  name: SearchDocumentsResult
  nameWithType: SearchDocumentsResult
  fullName: com.azure.search.documents.implementation.models.SearchDocumentsResult
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.lang.Object
  name: Object
  nameWithType: Object
  fullName: java.lang.Object
- uid: com.azure.search.documents.implementation.models.SuggestDocumentsResult
  name: SuggestDocumentsResult
  nameWithType: SuggestDocumentsResult
  fullName: com.azure.search.documents.implementation.models.SuggestDocumentsResult
- uid: com.azure.search.documents.implementation.models.IndexDocumentsResult
  name: IndexDocumentsResult
  nameWithType: IndexDocumentsResult
  fullName: com.azure.search.documents.implementation.models.IndexDocumentsResult
- uid: com.azure.search.documents.implementation.models.AutocompleteResult
  name: AutocompleteResult
  nameWithType: AutocompleteResult
  fullName: com.azure.search.documents.implementation.models.AutocompleteResult
