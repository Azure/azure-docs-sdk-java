### YamlMime:ManagedReference
items:
- uid: com.azure.data.tables.TableBatch
  id: TableBatch
  artifact: com.azure:azure-data-tables:12.0.0-beta.3
  parent: com.azure.data.tables
  children:
  - com.azure.data.tables.TableBatch.createEntity(com.azure.data.tables.models.TableEntity)
  - com.azure.data.tables.TableBatch.deleteEntity(java.lang.String)
  - com.azure.data.tables.TableBatch.deleteEntity(java.lang.String,java.lang.String)
  - com.azure.data.tables.TableBatch.getOperations()
  - com.azure.data.tables.TableBatch.submitTransaction()
  - com.azure.data.tables.TableBatch.submitTransaction(java.time.Duration)
  - com.azure.data.tables.TableBatch.submitTransactionWithResponse(java.time.Duration,com.azure.core.util.Context)
  - com.azure.data.tables.TableBatch.updateEntity(com.azure.data.tables.models.TableEntity)
  - com.azure.data.tables.TableBatch.updateEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode)
  - com.azure.data.tables.TableBatch.updateEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode,boolean)
  - com.azure.data.tables.TableBatch.upsertEntity(com.azure.data.tables.models.TableEntity)
  - com.azure.data.tables.TableBatch.upsertEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode)
  langs:
  - java
  name: TableBatch
  nameWithType: TableBatch
  fullName: com.azure.data.tables.TableBatch
  type: Class
  package: com.azure.data.tables
  summary: Provides a batch object for asynchronously executing a transaction containing one or more operations on entities within a table in the Azure Tables service. The batch object represents a collection of one or more create, update, upsert, and/or delete operations on entities that share the same partition key within the table. When the batch is executed, all of the operations will be performed as part of a single transaction. As a result, either all operations in the batch will succeed, or if a failure occurs, all operations in the batch will be rolled back. Each operation in a batch must operate on a distinct row key. Attempting to add multiple operations to a batch that share the same row key will cause an exception to be thrown. Instances of this object are obtained by calling the <xref uid="com.azure.data.tables.TableClient.createBatch(java.lang.String)" data-throw-if-not-resolved="false">TableClient#createBatch(String)</xref> method on a <xref uid="com.azure.data.tables.TableClient" data-throw-if-not-resolved="false">TableClient</xref> object.
  syntax:
    content: public final class TableBatch
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.data.tables.TableBatch.TableBatch(com.azure.data.tables.TableAsyncBatch)
  id: TableBatch(com.azure.data.tables.TableAsyncBatch)
  artifact: com.azure:azure-data-tables:12.0.0-beta.3
  parent: com.azure.data.tables.TableBatch
  langs:
  - java
  name: TableBatch(TableAsyncBatch batch)
  nameWithType: TableBatch.TableBatch(TableAsyncBatch batch)
  fullName: com.azure.data.tables.TableBatch.TableBatch(TableAsyncBatch batch)
  overload: com.azure.data.tables.TableBatch.TableBatch*
  type: Constructor
  package: com.azure.data.tables
  syntax:
    content: " TableBatch(TableAsyncBatch batch)"
    parameters:
    - id: batch
      type: com.azure.data.tables.TableAsyncBatch
- uid: com.azure.data.tables.TableBatch.createEntity(com.azure.data.tables.models.TableEntity)
  id: createEntity(com.azure.data.tables.models.TableEntity)
  artifact: com.azure:azure-data-tables:12.0.0-beta.3
  parent: com.azure.data.tables.TableBatch
  langs:
  - java
  name: createEntity(TableEntity entity)
  nameWithType: TableBatch.createEntity(TableEntity entity)
  fullName: com.azure.data.tables.TableBatch.createEntity(TableEntity entity)
  overload: com.azure.data.tables.TableBatch.createEntity*
  type: Method
  package: com.azure.data.tables
  summary: Inserts an entity into the table.
  syntax:
    content: public TableBatch createEntity(TableEntity entity)
    parameters:
    - id: entity
      type: com.azure.data.tables.models.TableEntity
      description: The entity to insert.
    return:
      type: com.azure.data.tables.TableBatch
      description: The updated <xref uid="com.azure.data.tables.TableBatch" data-throw-if-not-resolved="false">TableBatch</xref>.
- uid: com.azure.data.tables.TableBatch.deleteEntity(java.lang.String)
  id: deleteEntity(java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.3
  parent: com.azure.data.tables.TableBatch
  langs:
  - java
  name: deleteEntity(String rowKey)
  nameWithType: TableBatch.deleteEntity(String rowKey)
  fullName: com.azure.data.tables.TableBatch.deleteEntity(String rowKey)
  overload: com.azure.data.tables.TableBatch.deleteEntity*
  type: Method
  package: com.azure.data.tables
  summary: Deletes an entity from the table.
  syntax:
    content: public TableBatch deleteEntity(String rowKey)
    parameters:
    - id: rowKey
      type: java.lang.String
      description: The row key of the entity.
    return:
      type: com.azure.data.tables.TableBatch
      description: The updated <xref uid="com.azure.data.tables.TableBatch" data-throw-if-not-resolved="false">TableBatch</xref>.
- uid: com.azure.data.tables.TableBatch.deleteEntity(java.lang.String,java.lang.String)
  id: deleteEntity(java.lang.String,java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.3
  parent: com.azure.data.tables.TableBatch
  langs:
  - java
  name: deleteEntity(String rowKey, String eTag)
  nameWithType: TableBatch.deleteEntity(String rowKey, String eTag)
  fullName: com.azure.data.tables.TableBatch.deleteEntity(String rowKey, String eTag)
  overload: com.azure.data.tables.TableBatch.deleteEntity*
  type: Method
  package: com.azure.data.tables
  summary: Deletes an entity from the table.
  syntax:
    content: public TableBatch deleteEntity(String rowKey, String eTag)
    parameters:
    - id: rowKey
      type: java.lang.String
      description: The row key of the entity.
    - id: eTag
      type: java.lang.String
      description: >-
        The value to compare with the eTag of the entity in the Tables service. If the values do not match,
         the delete will not occur and an exception will be thrown.
    return:
      type: com.azure.data.tables.TableBatch
      description: The updated <xref uid="com.azure.data.tables.TableBatch" data-throw-if-not-resolved="false">TableBatch</xref>.
- uid: com.azure.data.tables.TableBatch.getOperations()
  id: getOperations()
  artifact: com.azure:azure-data-tables:12.0.0-beta.3
  parent: com.azure.data.tables.TableBatch
  langs:
  - java
  name: getOperations()
  nameWithType: TableBatch.getOperations()
  fullName: com.azure.data.tables.TableBatch.getOperations()
  overload: com.azure.data.tables.TableBatch.getOperations*
  type: Method
  package: com.azure.data.tables
  summary: Gets an immutable list containing all operations added to this batch.
  syntax:
    content: public List<BatchOperation> getOperations()
    return:
      type: java.util.List<com.azure.data.tables.implementation.models.BatchOperation>
      description: An immutable list containing all operations added to this batch.
- uid: com.azure.data.tables.TableBatch.submitTransaction()
  id: submitTransaction()
  artifact: com.azure:azure-data-tables:12.0.0-beta.3
  parent: com.azure.data.tables.TableBatch
  langs:
  - java
  name: submitTransaction()
  nameWithType: TableBatch.submitTransaction()
  fullName: com.azure.data.tables.TableBatch.submitTransaction()
  overload: com.azure.data.tables.TableBatch.submitTransaction*
  type: Method
  package: com.azure.data.tables
  summary: Executes all operations within The batch inside a transaction. When the call completes, either all operations in the batch will succeed, or if a failure occurs, all operations in the batch will be rolled back.
  syntax:
    content: public List<BatchOperationResponse> submitTransaction()
    return:
      type: java.util.List<com.azure.data.tables.models.BatchOperationResponse>
      description: A list of sub-responses for each operation in the batch.
- uid: com.azure.data.tables.TableBatch.submitTransaction(java.time.Duration)
  id: submitTransaction(java.time.Duration)
  artifact: com.azure:azure-data-tables:12.0.0-beta.3
  parent: com.azure.data.tables.TableBatch
  langs:
  - java
  name: submitTransaction(Duration timeout)
  nameWithType: TableBatch.submitTransaction(Duration timeout)
  fullName: com.azure.data.tables.TableBatch.submitTransaction(Duration timeout)
  overload: com.azure.data.tables.TableBatch.submitTransaction*
  type: Method
  package: com.azure.data.tables
  summary: Executes all operations within The batch inside a transaction. When the call completes, either all operations in the batch will succeed, or if a failure occurs, all operations in the batch will be rolled back.
  syntax:
    content: public List<BatchOperationResponse> submitTransaction(Duration timeout)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: Duration to wait for the operation to complete.
    return:
      type: java.util.List<com.azure.data.tables.models.BatchOperationResponse>
      description: A list of sub-responses for each operation in the batch.
- uid: com.azure.data.tables.TableBatch.submitTransactionWithResponse(java.time.Duration,com.azure.core.util.Context)
  id: submitTransactionWithResponse(java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.3
  parent: com.azure.data.tables.TableBatch
  langs:
  - java
  name: submitTransactionWithResponse(Duration timeout, Context context)
  nameWithType: TableBatch.submitTransactionWithResponse(Duration timeout, Context context)
  fullName: com.azure.data.tables.TableBatch.submitTransactionWithResponse(Duration timeout, Context context)
  overload: com.azure.data.tables.TableBatch.submitTransactionWithResponse*
  type: Method
  package: com.azure.data.tables
  summary: Executes all operations within The batch inside a transaction. When the call completes, either all operations in the batch will succeed, or if a failure occurs, all operations in the batch will be rolled back.
  syntax:
    content: public Response<List<BatchOperationResponse>> submitTransactionWithResponse(Duration timeout, Context context)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: Duration to wait for the operation to complete.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.util.List<com.azure.data.tables.models.BatchOperationResponse>>
      description: >-
        The HTTP response produced for the batch itself. The response's value will contain a list of
         sub-responses for each operation in the batch.
- uid: com.azure.data.tables.TableBatch.updateEntity(com.azure.data.tables.models.TableEntity)
  id: updateEntity(com.azure.data.tables.models.TableEntity)
  artifact: com.azure:azure-data-tables:12.0.0-beta.3
  parent: com.azure.data.tables.TableBatch
  langs:
  - java
  name: updateEntity(TableEntity entity)
  nameWithType: TableBatch.updateEntity(TableEntity entity)
  fullName: com.azure.data.tables.TableBatch.updateEntity(TableEntity entity)
  overload: com.azure.data.tables.TableBatch.updateEntity*
  type: Method
  package: com.azure.data.tables
  summary: Updates an existing entity by merging the provided entity with the existing entity.
  syntax:
    content: public TableBatch updateEntity(TableEntity entity)
    parameters:
    - id: entity
      type: com.azure.data.tables.models.TableEntity
      description: The entity to update.
    return:
      type: com.azure.data.tables.TableBatch
      description: The updated <xref uid="com.azure.data.tables.TableBatch" data-throw-if-not-resolved="false">TableBatch</xref>.
- uid: com.azure.data.tables.TableBatch.updateEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode)
  id: updateEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode)
  artifact: com.azure:azure-data-tables:12.0.0-beta.3
  parent: com.azure.data.tables.TableBatch
  langs:
  - java
  name: updateEntity(TableEntity entity, UpdateMode updateMode)
  nameWithType: TableBatch.updateEntity(TableEntity entity, UpdateMode updateMode)
  fullName: com.azure.data.tables.TableBatch.updateEntity(TableEntity entity, UpdateMode updateMode)
  overload: com.azure.data.tables.TableBatch.updateEntity*
  type: Method
  package: com.azure.data.tables
  summary: Updates an existing entity using the specified update mode. When the update mode is 'MERGE', the provided entity's properties will be merged into the existing entity. When the update mode is 'REPLACE', the provided entity's properties will completely replace those in the existing entity.
  syntax:
    content: public TableBatch updateEntity(TableEntity entity, UpdateMode updateMode)
    parameters:
    - id: entity
      type: com.azure.data.tables.models.TableEntity
      description: The entity to update.
    - id: updateMode
      type: com.azure.data.tables.models.UpdateMode
      description: The type of update to perform.
    return:
      type: com.azure.data.tables.TableBatch
      description: The updated <xref uid="com.azure.data.tables.TableBatch" data-throw-if-not-resolved="false">TableBatch</xref>.
- uid: com.azure.data.tables.TableBatch.updateEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode,boolean)
  id: updateEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode,boolean)
  artifact: com.azure:azure-data-tables:12.0.0-beta.3
  parent: com.azure.data.tables.TableBatch
  langs:
  - java
  name: updateEntity(TableEntity entity, UpdateMode updateMode, boolean ifUnchanged)
  nameWithType: TableBatch.updateEntity(TableEntity entity, UpdateMode updateMode, boolean ifUnchanged)
  fullName: com.azure.data.tables.TableBatch.updateEntity(TableEntity entity, UpdateMode updateMode, boolean ifUnchanged)
  overload: com.azure.data.tables.TableBatch.updateEntity*
  type: Method
  package: com.azure.data.tables
  summary: Updates an existing entity using the specified update mode. When the update mode is 'MERGE', the provided entity's properties will be merged into the existing entity. When the update mode is 'REPLACE', the provided entity's properties will completely replace those in the existing entity.
  syntax:
    content: public TableBatch updateEntity(TableEntity entity, UpdateMode updateMode, boolean ifUnchanged)
    parameters:
    - id: entity
      type: com.azure.data.tables.models.TableEntity
      description: The entity to update.
    - id: updateMode
      type: com.azure.data.tables.models.UpdateMode
      description: The type of update to perform.
    - id: ifUnchanged
      type: boolean
      description: >-
        When true, the eTag of the provided entity must match the eTag of the entity in the Table
         service. If the values do not match, the update will not occur and an exception will be thrown.
    return:
      type: com.azure.data.tables.TableBatch
      description: The updated <xref uid="com.azure.data.tables.TableBatch" data-throw-if-not-resolved="false">TableBatch</xref>.
- uid: com.azure.data.tables.TableBatch.upsertEntity(com.azure.data.tables.models.TableEntity)
  id: upsertEntity(com.azure.data.tables.models.TableEntity)
  artifact: com.azure:azure-data-tables:12.0.0-beta.3
  parent: com.azure.data.tables.TableBatch
  langs:
  - java
  name: upsertEntity(TableEntity entity)
  nameWithType: TableBatch.upsertEntity(TableEntity entity)
  fullName: com.azure.data.tables.TableBatch.upsertEntity(TableEntity entity)
  overload: com.azure.data.tables.TableBatch.upsertEntity*
  type: Method
  package: com.azure.data.tables
  summary: Inserts an entity into the table if it does not exist, or merges the entity with the existing entity otherwise. If no entity exists within the table having the same partition key and row key as the provided entity, it will be inserted. Otherwise, the provided entity's properties will be merged into the existing entity.
  syntax:
    content: public TableBatch upsertEntity(TableEntity entity)
    parameters:
    - id: entity
      type: com.azure.data.tables.models.TableEntity
      description: The entity to upsert.
    return:
      type: com.azure.data.tables.TableBatch
      description: The updated <xref uid="com.azure.data.tables.TableBatch" data-throw-if-not-resolved="false">TableBatch</xref>.
- uid: com.azure.data.tables.TableBatch.upsertEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode)
  id: upsertEntity(com.azure.data.tables.models.TableEntity,com.azure.data.tables.models.UpdateMode)
  artifact: com.azure:azure-data-tables:12.0.0-beta.3
  parent: com.azure.data.tables.TableBatch
  langs:
  - java
  name: upsertEntity(TableEntity entity, UpdateMode updateMode)
  nameWithType: TableBatch.upsertEntity(TableEntity entity, UpdateMode updateMode)
  fullName: com.azure.data.tables.TableBatch.upsertEntity(TableEntity entity, UpdateMode updateMode)
  overload: com.azure.data.tables.TableBatch.upsertEntity*
  type: Method
  package: com.azure.data.tables
  summary: Inserts an entity into the table if it does not exist, or updates the existing entity using the specified update mode otherwise. If no entity exists within the table having the same partition key and row key as the provided entity, it will be inserted. Otherwise, the existing entity will be updated according to the specified update mode. When the update mode is 'MERGE', the provided entity's properties will be merged into the existing entity. When the update mode is 'REPLACE', the provided entity's properties will completely replace those in the existing entity.
  syntax:
    content: public TableBatch upsertEntity(TableEntity entity, UpdateMode updateMode)
    parameters:
    - id: entity
      type: com.azure.data.tables.models.TableEntity
      description: The entity to upsert.
    - id: updateMode
      type: com.azure.data.tables.models.UpdateMode
      description: The type of update to perform if the entity already exits.
    return:
      type: com.azure.data.tables.TableBatch
      description: The updated <xref uid="com.azure.data.tables.TableBatch" data-throw-if-not-resolved="false">TableBatch</xref>.
references:
- uid: com.azure.data.tables.TableAsyncBatch
  name: TableAsyncBatch
  nameWithType: TableAsyncBatch
  fullName: com.azure.data.tables.TableAsyncBatch
- uid: com.azure.data.tables.TableBatch.TableBatch*
  name: TableBatch
  nameWithType: TableBatch.TableBatch
  fullName: com.azure.data.tables.TableBatch.TableBatch
  package: com.azure.data.tables
- uid: com.azure.data.tables.models.TableEntity
  name: TableEntity
  nameWithType: TableEntity
  fullName: com.azure.data.tables.models.TableEntity
- uid: com.azure.data.tables.TableBatch.createEntity*
  name: createEntity
  nameWithType: TableBatch.createEntity
  fullName: com.azure.data.tables.TableBatch.createEntity
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableBatch.upsertEntity*
  name: upsertEntity
  nameWithType: TableBatch.upsertEntity
  fullName: com.azure.data.tables.TableBatch.upsertEntity
  package: com.azure.data.tables
- uid: com.azure.data.tables.models.UpdateMode
  name: UpdateMode
  nameWithType: UpdateMode
  fullName: com.azure.data.tables.models.UpdateMode
- uid: com.azure.data.tables.TableBatch.updateEntity*
  name: updateEntity
  nameWithType: TableBatch.updateEntity
  fullName: com.azure.data.tables.TableBatch.updateEntity
  package: com.azure.data.tables
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.data.tables.TableBatch.deleteEntity*
  name: deleteEntity
  nameWithType: TableBatch.deleteEntity
  fullName: com.azure.data.tables.TableBatch.deleteEntity
  package: com.azure.data.tables
- uid: java.util.List<com.azure.data.tables.implementation.models.BatchOperation>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.data.tables.implementation.models.BatchOperation
    name: BatchOperation
    fullName: com.azure.data.tables.implementation.models.BatchOperation
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.TableBatch.getOperations*
  name: getOperations
  nameWithType: TableBatch.getOperations
  fullName: com.azure.data.tables.TableBatch.getOperations
  package: com.azure.data.tables
- uid: java.util.List<com.azure.data.tables.models.BatchOperationResponse>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.data.tables.models.BatchOperationResponse
    name: BatchOperationResponse
    fullName: com.azure.data.tables.models.BatchOperationResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.TableBatch.submitTransaction*
  name: submitTransaction
  nameWithType: TableBatch.submitTransaction
  fullName: com.azure.data.tables.TableBatch.submitTransaction
  package: com.azure.data.tables
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<java.util.List<com.azure.data.tables.models.BatchOperationResponse>>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.data.tables.models.BatchOperationResponse
    name: BatchOperationResponse
    fullName: com.azure.data.tables.models.BatchOperationResponse
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.TableBatch.submitTransactionWithResponse*
  name: submitTransactionWithResponse
  nameWithType: TableBatch.submitTransactionWithResponse
  fullName: com.azure.data.tables.TableBatch.submitTransactionWithResponse
  package: com.azure.data.tables
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.data.tables.implementation.models.BatchOperation
  name: BatchOperation
  nameWithType: BatchOperation
  fullName: com.azure.data.tables.implementation.models.BatchOperation
- uid: com.azure.data.tables.models.BatchOperationResponse
  name: BatchOperationResponse
  nameWithType: BatchOperationResponse
  fullName: com.azure.data.tables.models.BatchOperationResponse
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
