### YamlMime:JavaType
uid: "com.azure.compute.batch.models.BatchNodeCounts"
fullName: "com.azure.compute.batch.models.BatchNodeCounts"
name: "BatchNodeCounts"
nameWithType: "BatchNodeCounts"
summary: "The number of Compute Nodes in each Compute Node state."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **BatchNodeCounts**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.BatchNodeCounts?alt=com.azure.compute.batch.models.BatchNodeCounts&text=BatchNodeCounts\" data-throw-if-not-resolved=\"False\" />&gt;"
methods:
- uid: "com.azure.compute.batch.models.BatchNodeCounts.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.compute.batch.models.BatchNodeCounts.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "BatchNodeCounts.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Batch<wbr>Node<wbr>Counts from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static BatchNodeCounts fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of BatchNodeCounts from the JsonReader."
  returns:
    description: "An instance of BatchNodeCounts if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.compute.batch.models.BatchNodeCounts?alt=com.azure.compute.batch.models.BatchNodeCounts&text=BatchNodeCounts\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchNodeCounts.getCreating()"
  fullName: "com.azure.compute.batch.models.BatchNodeCounts.getCreating()"
  name: "getCreating()"
  nameWithType: "BatchNodeCounts.getCreating()"
  summary: "Get the creating property: The number of Compute Nodes in the creating state."
  syntax: "public int getCreating()"
  desc: "Get the creating property: The number of Compute Nodes in the creating state."
  returns:
    description: "the creating value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchNodeCounts.getIdle()"
  fullName: "com.azure.compute.batch.models.BatchNodeCounts.getIdle()"
  name: "getIdle()"
  nameWithType: "BatchNodeCounts.getIdle()"
  summary: "Get the idle property: The number of Compute Nodes in the idle state."
  syntax: "public int getIdle()"
  desc: "Get the idle property: The number of Compute Nodes in the idle state."
  returns:
    description: "the idle value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchNodeCounts.getLeavingPool()"
  fullName: "com.azure.compute.batch.models.BatchNodeCounts.getLeavingPool()"
  name: "getLeavingPool()"
  nameWithType: "BatchNodeCounts.getLeavingPool()"
  summary: "Get the leaving<wbr>Pool property: The number of Compute Nodes in the leaving<wbr>Pool state."
  syntax: "public int getLeavingPool()"
  desc: "Get the leavingPool property: The number of Compute Nodes in the leavingPool state."
  returns:
    description: "the leavingPool value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchNodeCounts.getOffline()"
  fullName: "com.azure.compute.batch.models.BatchNodeCounts.getOffline()"
  name: "getOffline()"
  nameWithType: "BatchNodeCounts.getOffline()"
  summary: "Get the offline property: The number of Compute Nodes in the offline state."
  syntax: "public int getOffline()"
  desc: "Get the offline property: The number of Compute Nodes in the offline state."
  returns:
    description: "the offline value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchNodeCounts.getPreempted()"
  fullName: "com.azure.compute.batch.models.BatchNodeCounts.getPreempted()"
  name: "getPreempted()"
  nameWithType: "BatchNodeCounts.getPreempted()"
  summary: "Get the preempted property: The number of Compute Nodes in the preempted state."
  syntax: "public int getPreempted()"
  desc: "Get the preempted property: The number of Compute Nodes in the preempted state."
  returns:
    description: "the preempted value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchNodeCounts.getRebooting()"
  fullName: "com.azure.compute.batch.models.BatchNodeCounts.getRebooting()"
  name: "getRebooting()"
  nameWithType: "BatchNodeCounts.getRebooting()"
  summary: "Get the rebooting property: The count of Compute Nodes in the rebooting state."
  syntax: "public int getRebooting()"
  desc: "Get the rebooting property: The count of Compute Nodes in the rebooting state."
  returns:
    description: "the rebooting value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchNodeCounts.getReimaging()"
  fullName: "com.azure.compute.batch.models.BatchNodeCounts.getReimaging()"
  name: "getReimaging()"
  nameWithType: "BatchNodeCounts.getReimaging()"
  summary: "Get the reimaging property: The number of Compute Nodes in the reimaging state."
  syntax: "public int getReimaging()"
  desc: "Get the reimaging property: The number of Compute Nodes in the reimaging state."
  returns:
    description: "the reimaging value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchNodeCounts.getRunning()"
  fullName: "com.azure.compute.batch.models.BatchNodeCounts.getRunning()"
  name: "getRunning()"
  nameWithType: "BatchNodeCounts.getRunning()"
  summary: "Get the running property: The number of Compute Nodes in the running state."
  syntax: "public int getRunning()"
  desc: "Get the running property: The number of Compute Nodes in the running state."
  returns:
    description: "the running value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchNodeCounts.getStartTaskFailed()"
  fullName: "com.azure.compute.batch.models.BatchNodeCounts.getStartTaskFailed()"
  name: "getStartTaskFailed()"
  nameWithType: "BatchNodeCounts.getStartTaskFailed()"
  summary: "Get the start<wbr>Task<wbr>Failed property: The number of Compute Nodes in the start<wbr>Task<wbr>Failed state."
  syntax: "public int getStartTaskFailed()"
  desc: "Get the startTaskFailed property: The number of Compute Nodes in the startTaskFailed state."
  returns:
    description: "the startTaskFailed value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchNodeCounts.getStarting()"
  fullName: "com.azure.compute.batch.models.BatchNodeCounts.getStarting()"
  name: "getStarting()"
  nameWithType: "BatchNodeCounts.getStarting()"
  summary: "Get the starting property: The number of Compute Nodes in the starting state."
  syntax: "public int getStarting()"
  desc: "Get the starting property: The number of Compute Nodes in the starting state."
  returns:
    description: "the starting value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchNodeCounts.getTotal()"
  fullName: "com.azure.compute.batch.models.BatchNodeCounts.getTotal()"
  name: "getTotal()"
  nameWithType: "BatchNodeCounts.getTotal()"
  summary: "Get the total property: The total number of Compute Nodes."
  syntax: "public int getTotal()"
  desc: "Get the total property: The total number of Compute Nodes."
  returns:
    description: "the total value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchNodeCounts.getUnknown()"
  fullName: "com.azure.compute.batch.models.BatchNodeCounts.getUnknown()"
  name: "getUnknown()"
  nameWithType: "BatchNodeCounts.getUnknown()"
  summary: "Get the unknown property: The number of Compute Nodes in the unknown state."
  syntax: "public int getUnknown()"
  desc: "Get the unknown property: The number of Compute Nodes in the unknown state."
  returns:
    description: "the unknown value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchNodeCounts.getUnusable()"
  fullName: "com.azure.compute.batch.models.BatchNodeCounts.getUnusable()"
  name: "getUnusable()"
  nameWithType: "BatchNodeCounts.getUnusable()"
  summary: "Get the unusable property: The number of Compute Nodes in the unusable state."
  syntax: "public int getUnusable()"
  desc: "Get the unusable property: The number of Compute Nodes in the unusable state."
  returns:
    description: "the unusable value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchNodeCounts.getUpgradingOs()"
  fullName: "com.azure.compute.batch.models.BatchNodeCounts.getUpgradingOs()"
  name: "getUpgradingOs()"
  nameWithType: "BatchNodeCounts.getUpgradingOs()"
  summary: "Get the upgrading<wbr>Os property: The number of Compute Nodes in the upgradingOS state."
  syntax: "public int getUpgradingOs()"
  desc: "Get the upgradingOs property: The number of Compute Nodes in the upgradingOS state."
  returns:
    description: "the upgradingOs value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchNodeCounts.getWaitingForStartTask()"
  fullName: "com.azure.compute.batch.models.BatchNodeCounts.getWaitingForStartTask()"
  name: "getWaitingForStartTask()"
  nameWithType: "BatchNodeCounts.getWaitingForStartTask()"
  summary: "Get the waiting<wbr>For<wbr>Start<wbr>Task property: The number of Compute Nodes in the waiting<wbr>For<wbr>Start<wbr>Task state."
  syntax: "public int getWaitingForStartTask()"
  desc: "Get the waitingForStartTask property: The number of Compute Nodes in the waitingForStartTask state."
  returns:
    description: "the waitingForStartTask value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchNodeCounts.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.compute.batch.models.BatchNodeCounts.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "BatchNodeCounts.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The number of Compute Nodes in each Compute Node state."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.BatchNodeCounts?alt=com.azure.compute.batch.models.BatchNodeCounts&text=BatchNodeCounts\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.compute.batch.models"
artifact: com.azure:azure-compute-batch:1.0.0-beta.2
