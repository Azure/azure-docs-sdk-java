### YamlMime:ManagedReference
items:
- uid: org.apache.commons.codec.binary.Hex
  id: Hex
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary
  children:
  - org.apache.commons.codec.binary.Hex.DEFAULT_CHARSET
  - org.apache.commons.codec.binary.Hex.DEFAULT_CHARSET_NAME
  - org.apache.commons.codec.binary.Hex.Hex()
  - org.apache.commons.codec.binary.Hex.Hex(java.lang.String)
  - org.apache.commons.codec.binary.Hex.Hex(java.nio.charset.Charset)
  - org.apache.commons.codec.binary.Hex.decode(byte[])
  - org.apache.commons.codec.binary.Hex.decode(java.lang.Object)
  - org.apache.commons.codec.binary.Hex.decode(java.nio.ByteBuffer)
  - org.apache.commons.codec.binary.Hex.decodeHex(char[])
  - org.apache.commons.codec.binary.Hex.decodeHex(java.lang.String)
  - org.apache.commons.codec.binary.Hex.encode(byte[])
  - org.apache.commons.codec.binary.Hex.encode(java.lang.Object)
  - org.apache.commons.codec.binary.Hex.encode(java.nio.ByteBuffer)
  - org.apache.commons.codec.binary.Hex.encodeHex(byte[])
  - org.apache.commons.codec.binary.Hex.encodeHex(byte[],boolean)
  - org.apache.commons.codec.binary.Hex.encodeHex(byte[],char[])
  - org.apache.commons.codec.binary.Hex.encodeHex(java.nio.ByteBuffer)
  - org.apache.commons.codec.binary.Hex.encodeHex(java.nio.ByteBuffer,boolean)
  - org.apache.commons.codec.binary.Hex.encodeHex(java.nio.ByteBuffer,char[])
  - org.apache.commons.codec.binary.Hex.encodeHexString(byte[])
  - org.apache.commons.codec.binary.Hex.encodeHexString(byte[],boolean)
  - org.apache.commons.codec.binary.Hex.encodeHexString(java.nio.ByteBuffer)
  - org.apache.commons.codec.binary.Hex.encodeHexString(java.nio.ByteBuffer,boolean)
  - org.apache.commons.codec.binary.Hex.getCharset()
  - org.apache.commons.codec.binary.Hex.getCharsetName()
  - org.apache.commons.codec.binary.Hex.toDigit(char,int)
  - org.apache.commons.codec.binary.Hex.toString()
  langs:
  - java
  name: Hex
  nameWithType: Hex
  fullName: org.apache.commons.codec.binary.Hex
  type: Class
  package: org.apache.commons.codec.binary
  summary: Converts hexadecimal Strings. The charset used for certain operation can be set, the default is set in <xref uid="org.apache.commons.codec.binary.Hex.DEFAULT_CHARSET_NAME" data-throw-if-not-resolved="false">#DEFAULT_CHARSET_NAME</xref> This class is thread-safe.
  syntax:
    content: public class Hex implements BinaryEncoder, BinaryDecoder
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.commons.codec.BinaryEncoder
  - org.apache.commons.codec.BinaryDecoder
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.commons.codec.binary.Hex.DEFAULT_CHARSET
  id: DEFAULT_CHARSET
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: DEFAULT_CHARSET
  nameWithType: Hex.DEFAULT_CHARSET
  fullName: org.apache.commons.codec.binary.Hex.DEFAULT_CHARSET
  type: Field
  package: org.apache.commons.codec.binary
  summary: Default charset is <xref uid="org.apache.commons.codec.Charsets.UTF_8" data-throw-if-not-resolved="false">Charsets#UTF_8</xref>
  syntax:
    content: public static final Charset DEFAULT_CHARSET
    return:
      type: java.nio.charset.Charset
- uid: org.apache.commons.codec.binary.Hex.DEFAULT_CHARSET_NAME
  id: DEFAULT_CHARSET_NAME
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: DEFAULT_CHARSET_NAME
  nameWithType: Hex.DEFAULT_CHARSET_NAME
  fullName: org.apache.commons.codec.binary.Hex.DEFAULT_CHARSET_NAME
  type: Field
  package: org.apache.commons.codec.binary
  summary: Default charset name is <xref uid="org.apache.commons.codec.CharEncoding.UTF_8" data-throw-if-not-resolved="false">CharEncoding#UTF_8</xref>
  syntax:
    content: public static final String DEFAULT_CHARSET_NAME
    return:
      type: java.lang.String
- uid: org.apache.commons.codec.binary.Hex.Hex()
  id: Hex()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: Hex()
  nameWithType: Hex.Hex()
  fullName: org.apache.commons.codec.binary.Hex.Hex()
  overload: org.apache.commons.codec.binary.Hex.Hex*
  type: Constructor
  package: org.apache.commons.codec.binary
  summary: Creates a new codec with the default charset name <xref uid="org.apache.commons.codec.binary.Hex.DEFAULT_CHARSET" data-throw-if-not-resolved="false">#DEFAULT_CHARSET</xref>
  syntax:
    content: public Hex()
- uid: org.apache.commons.codec.binary.Hex.Hex(java.lang.String)
  id: Hex(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: Hex(String charsetName)
  nameWithType: Hex.Hex(String charsetName)
  fullName: org.apache.commons.codec.binary.Hex.Hex(String charsetName)
  overload: org.apache.commons.codec.binary.Hex.Hex*
  type: Constructor
  package: org.apache.commons.codec.binary
  summary: Creates a new codec with the given charset name.
  syntax:
    content: public Hex(String charsetName)
    parameters:
    - id: charsetName
      type: java.lang.String
      description: the charset name.
- uid: org.apache.commons.codec.binary.Hex.Hex(java.nio.charset.Charset)
  id: Hex(java.nio.charset.Charset)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: Hex(Charset charset)
  nameWithType: Hex.Hex(Charset charset)
  fullName: org.apache.commons.codec.binary.Hex.Hex(Charset charset)
  overload: org.apache.commons.codec.binary.Hex.Hex*
  type: Constructor
  package: org.apache.commons.codec.binary
  summary: Creates a new codec with the given Charset.
  syntax:
    content: public Hex(Charset charset)
    parameters:
    - id: charset
      type: java.nio.charset.Charset
      description: the charset.
- uid: org.apache.commons.codec.binary.Hex.decode(byte[])
  id: decode(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: decode(byte[] array)
  nameWithType: Hex.decode(byte[] array)
  fullName: org.apache.commons.codec.binary.Hex.decode(byte[] array)
  overload: org.apache.commons.codec.binary.Hex.decode*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Converts an array of character bytes representing hexadecimal values into an array of bytes of those same values. The returned array will be half the length of the passed array, as it takes two characters to represent any given byte. An exception is thrown if the passed char array has an odd number of elements.
  syntax:
    content: public byte[] decode(byte[] array)
    parameters:
    - id: array
      type: byte[]
      description: An array of character bytes containing hexadecimal digits
    return:
      type: byte[]
      description: A byte array containing binary data decoded from the supplied byte array (representing characters).
  exceptions:
  - type: org.apache.commons.codec.DecoderException
    description: Thrown if an odd number of characters is supplied to this function
- uid: org.apache.commons.codec.binary.Hex.decode(java.lang.Object)
  id: decode(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: decode(Object object)
  nameWithType: Hex.decode(Object object)
  fullName: org.apache.commons.codec.binary.Hex.decode(Object object)
  overload: org.apache.commons.codec.binary.Hex.decode*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Converts a String or an array of character bytes representing hexadecimal values into an array of bytes of those same values. The returned array will be half the length of the passed String or array, as it takes two characters to represent any given byte. An exception is thrown if the passed char array has an odd number of elements.
  syntax:
    content: public Object decode(Object object)
    parameters:
    - id: object
      type: java.lang.Object
      description: A String, ByteBuffer, byte[], or an array of character bytes containing hexadecimal digits
    return:
      type: java.lang.Object
      description: A byte array containing binary data decoded from the supplied byte array (representing characters).
  exceptions:
  - type: org.apache.commons.codec.DecoderException
    description: >-
      Thrown if an odd number of characters is supplied to this function or the object is not
                                a String or char[]
- uid: org.apache.commons.codec.binary.Hex.decode(java.nio.ByteBuffer)
  id: decode(java.nio.ByteBuffer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: decode(ByteBuffer buffer)
  nameWithType: Hex.decode(ByteBuffer buffer)
  fullName: org.apache.commons.codec.binary.Hex.decode(ByteBuffer buffer)
  overload: org.apache.commons.codec.binary.Hex.decode*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Converts a buffer of character bytes representing hexadecimal values into an array of bytes of those same values. The returned array will be half the length of the passed array, as it takes two characters to represent any given byte. An exception is thrown if the passed char array has an odd number of elements.
  syntax:
    content: public byte[] decode(ByteBuffer buffer)
    parameters:
    - id: buffer
      type: java.nio.ByteBuffer
      description: An array of character bytes containing hexadecimal digits
    return:
      type: byte[]
      description: A byte array containing binary data decoded from the supplied byte array (representing characters).
  exceptions:
  - type: org.apache.commons.codec.DecoderException
    description: Thrown if an odd number of characters is supplied to this function
- uid: org.apache.commons.codec.binary.Hex.decodeHex(char[])
  id: decodeHex(char[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: decodeHex(char[] data)
  nameWithType: Hex.decodeHex(char[] data)
  fullName: org.apache.commons.codec.binary.Hex.decodeHex(char[] data)
  overload: org.apache.commons.codec.binary.Hex.decodeHex*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Converts an array of characters representing hexadecimal values into an array of bytes of those same values. The returned array will be half the length of the passed array, as it takes two characters to represent any given byte. An exception is thrown if the passed char array has an odd number of elements.
  syntax:
    content: public static byte[] decodeHex(char[] data)
    parameters:
    - id: data
      type: char[]
      description: An array of characters containing hexadecimal digits
    return:
      type: byte[]
      description: A byte array containing binary data decoded from the supplied char array.
  exceptions:
  - type: org.apache.commons.codec.DecoderException
    description: Thrown if an odd number or illegal of characters is supplied
- uid: org.apache.commons.codec.binary.Hex.decodeHex(java.lang.String)
  id: decodeHex(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: decodeHex(String data)
  nameWithType: Hex.decodeHex(String data)
  fullName: org.apache.commons.codec.binary.Hex.decodeHex(String data)
  overload: org.apache.commons.codec.binary.Hex.decodeHex*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Converts a String representing hexadecimal values into an array of bytes of those same values. The returned array will be half the length of the passed String, as it takes two characters to represent any given byte. An exception is thrown if the passed String has an odd number of elements.
  syntax:
    content: public static byte[] decodeHex(String data)
    parameters:
    - id: data
      type: java.lang.String
      description: A String containing hexadecimal digits
    return:
      type: byte[]
      description: A byte array containing binary data decoded from the supplied char array.
  exceptions:
  - type: org.apache.commons.codec.DecoderException
    description: Thrown if an odd number or illegal of characters is supplied
- uid: org.apache.commons.codec.binary.Hex.encode(byte[])
  id: encode(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: encode(byte[] array)
  nameWithType: Hex.encode(byte[] array)
  fullName: org.apache.commons.codec.binary.Hex.encode(byte[] array)
  overload: org.apache.commons.codec.binary.Hex.encode*
  type: Method
  package: org.apache.commons.codec.binary
  summary: >-
    Converts an array of bytes into an array of bytes for the characters representing the hexadecimal values of each byte in order. The returned array will be double the length of the passed array, as it takes two characters to represent any given byte.


    The conversion from hexadecimal characters to the returned bytes is performed with the charset named by <xref uid="org.apache.commons.codec.binary.Hex.getCharset()" data-throw-if-not-resolved="false">#getCharset()</xref>.
  syntax:
    content: public byte[] encode(byte[] array)
    parameters:
    - id: array
      type: byte[]
      description: a byte[] to convert to Hex characters
    return:
      type: byte[]
      description: A byte[] containing the bytes of the lower-case hexadecimal characters
- uid: org.apache.commons.codec.binary.Hex.encode(java.lang.Object)
  id: encode(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: encode(Object object)
  nameWithType: Hex.encode(Object object)
  fullName: org.apache.commons.codec.binary.Hex.encode(Object object)
  overload: org.apache.commons.codec.binary.Hex.encode*
  type: Method
  package: org.apache.commons.codec.binary
  summary: >-
    Converts a String or an array of bytes into an array of characters representing the hexadecimal values of each byte in order. The returned array will be double the length of the passed String or array, as it takes two characters to represent any given byte.


    The conversion from hexadecimal characters to bytes to be encoded to performed with the charset named by <xref uid="org.apache.commons.codec.binary.Hex.getCharset()" data-throw-if-not-resolved="false">#getCharset()</xref>.
  syntax:
    content: public Object encode(Object object)
    parameters:
    - id: object
      type: java.lang.Object
      description: a String, ByteBuffer, or byte[] to convert to Hex characters
    return:
      type: java.lang.Object
      description: A char[] containing lower-case hexadecimal characters
  exceptions:
  - type: org.apache.commons.codec.EncoderException
    description: Thrown if the given object is not a String or byte[]
- uid: org.apache.commons.codec.binary.Hex.encode(java.nio.ByteBuffer)
  id: encode(java.nio.ByteBuffer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: encode(ByteBuffer array)
  nameWithType: Hex.encode(ByteBuffer array)
  fullName: org.apache.commons.codec.binary.Hex.encode(ByteBuffer array)
  overload: org.apache.commons.codec.binary.Hex.encode*
  type: Method
  package: org.apache.commons.codec.binary
  summary: >-
    Converts byte buffer into an array of bytes for the characters representing the hexadecimal values of each byte in order. The returned array will be double the length of the passed array, as it takes two characters to represent any given byte.


    The conversion from hexadecimal characters to the returned bytes is performed with the charset named by <xref uid="org.apache.commons.codec.binary.Hex.getCharset()" data-throw-if-not-resolved="false">#getCharset()</xref>.
  syntax:
    content: public byte[] encode(ByteBuffer array)
    parameters:
    - id: array
      type: java.nio.ByteBuffer
      description: a byte buffer to convert to Hex characters
    return:
      type: byte[]
      description: A byte[] containing the bytes of the lower-case hexadecimal characters
- uid: org.apache.commons.codec.binary.Hex.encodeHex(byte[])
  id: encodeHex(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: encodeHex(byte[] data)
  nameWithType: Hex.encodeHex(byte[] data)
  fullName: org.apache.commons.codec.binary.Hex.encodeHex(byte[] data)
  overload: org.apache.commons.codec.binary.Hex.encodeHex*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Converts an array of bytes into an array of characters representing the hexadecimal values of each byte in order. The returned array will be double the length of the passed array, as it takes two characters to represent any given byte.
  syntax:
    content: public static char[] encodeHex(byte[] data)
    parameters:
    - id: data
      type: byte[]
      description: a byte[] to convert to Hex characters
    return:
      type: char[]
      description: A char[] containing lower-case hexadecimal characters
- uid: org.apache.commons.codec.binary.Hex.encodeHex(byte[],boolean)
  id: encodeHex(byte[],boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: encodeHex(byte[] data, boolean toLowerCase)
  nameWithType: Hex.encodeHex(byte[] data, boolean toLowerCase)
  fullName: org.apache.commons.codec.binary.Hex.encodeHex(byte[] data, boolean toLowerCase)
  overload: org.apache.commons.codec.binary.Hex.encodeHex*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Converts an array of bytes into an array of characters representing the hexadecimal values of each byte in order. The returned array will be double the length of the passed array, as it takes two characters to represent any given byte.
  syntax:
    content: public static char[] encodeHex(byte[] data, boolean toLowerCase)
    parameters:
    - id: data
      type: byte[]
      description: a byte[] to convert to Hex characters
    - id: toLowerCase
      type: boolean
      description: <code>true</code> converts to lowercase, <code>false</code> to uppercase
    return:
      type: char[]
      description: A char[] containing hexadecimal characters in the selected case
- uid: org.apache.commons.codec.binary.Hex.encodeHex(byte[],char[])
  id: encodeHex(byte[],char[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: encodeHex(byte[] data, char[] toDigits)
  nameWithType: Hex.encodeHex(byte[] data, char[] toDigits)
  fullName: org.apache.commons.codec.binary.Hex.encodeHex(byte[] data, char[] toDigits)
  overload: org.apache.commons.codec.binary.Hex.encodeHex*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Converts an array of bytes into an array of characters representing the hexadecimal values of each byte in order. The returned array will be double the length of the passed array, as it takes two characters to represent any given byte.
  syntax:
    content: protected static char[] encodeHex(byte[] data, char[] toDigits)
    parameters:
    - id: data
      type: byte[]
      description: a byte[] to convert to Hex characters
    - id: toDigits
      type: char[]
      description: the output alphabet (must contain at least 16 chars)
    return:
      type: char[]
      description: >-
        A char[] containing the appropriate characters from the alphabet For best results, this should be either
                 upper- or lower-case hex.
- uid: org.apache.commons.codec.binary.Hex.encodeHex(java.nio.ByteBuffer)
  id: encodeHex(java.nio.ByteBuffer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: encodeHex(ByteBuffer data)
  nameWithType: Hex.encodeHex(ByteBuffer data)
  fullName: org.apache.commons.codec.binary.Hex.encodeHex(ByteBuffer data)
  overload: org.apache.commons.codec.binary.Hex.encodeHex*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Converts a byte buffer into an array of characters representing the hexadecimal values of each byte in order. The returned array will be double the length of the passed array, as it takes two characters to represent any given byte.
  syntax:
    content: public static char[] encodeHex(ByteBuffer data)
    parameters:
    - id: data
      type: java.nio.ByteBuffer
      description: a byte buffer to convert to Hex characters
    return:
      type: char[]
      description: A char[] containing lower-case hexadecimal characters
- uid: org.apache.commons.codec.binary.Hex.encodeHex(java.nio.ByteBuffer,boolean)
  id: encodeHex(java.nio.ByteBuffer,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: encodeHex(ByteBuffer data, boolean toLowerCase)
  nameWithType: Hex.encodeHex(ByteBuffer data, boolean toLowerCase)
  fullName: org.apache.commons.codec.binary.Hex.encodeHex(ByteBuffer data, boolean toLowerCase)
  overload: org.apache.commons.codec.binary.Hex.encodeHex*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Converts a byte buffer into an array of characters representing the hexadecimal values of each byte in order. The returned array will be double the length of the passed array, as it takes two characters to represent any given byte.
  syntax:
    content: public static char[] encodeHex(ByteBuffer data, boolean toLowerCase)
    parameters:
    - id: data
      type: java.nio.ByteBuffer
      description: a byte buffer to convert to Hex characters
    - id: toLowerCase
      type: boolean
      description: <code>true</code> converts to lowercase, <code>false</code> to uppercase
    return:
      type: char[]
      description: A char[] containing hexadecimal characters in the selected case
- uid: org.apache.commons.codec.binary.Hex.encodeHex(java.nio.ByteBuffer,char[])
  id: encodeHex(java.nio.ByteBuffer,char[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: encodeHex(ByteBuffer byteBuffer, char[] toDigits)
  nameWithType: Hex.encodeHex(ByteBuffer byteBuffer, char[] toDigits)
  fullName: org.apache.commons.codec.binary.Hex.encodeHex(ByteBuffer byteBuffer, char[] toDigits)
  overload: org.apache.commons.codec.binary.Hex.encodeHex*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Converts a byte buffer into an array of characters representing the hexadecimal values of each byte in order. The returned array will be double the length of the passed array, as it takes two characters to represent any given byte.
  syntax:
    content: protected static char[] encodeHex(ByteBuffer byteBuffer, char[] toDigits)
    parameters:
    - id: byteBuffer
      type: java.nio.ByteBuffer
      description: a byte buffer to convert to Hex characters
    - id: toDigits
      type: char[]
      description: the output alphabet (must be at least 16 characters)
    return:
      type: char[]
      description: >-
        A char[] containing the appropriate characters from the alphabet For best results, this should be either
                 upper- or lower-case hex.
- uid: org.apache.commons.codec.binary.Hex.encodeHexString(byte[])
  id: encodeHexString(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: encodeHexString(byte[] data)
  nameWithType: Hex.encodeHexString(byte[] data)
  fullName: org.apache.commons.codec.binary.Hex.encodeHexString(byte[] data)
  overload: org.apache.commons.codec.binary.Hex.encodeHexString*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Converts an array of bytes into a String representing the hexadecimal values of each byte in order. The returned String will be double the length of the passed array, as it takes two characters to represent any given byte.
  syntax:
    content: public static String encodeHexString(byte[] data)
    parameters:
    - id: data
      type: byte[]
      description: a byte[] to convert to Hex characters
    return:
      type: java.lang.String
      description: A String containing lower-case hexadecimal characters
- uid: org.apache.commons.codec.binary.Hex.encodeHexString(byte[],boolean)
  id: encodeHexString(byte[],boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: encodeHexString(byte[] data, boolean toLowerCase)
  nameWithType: Hex.encodeHexString(byte[] data, boolean toLowerCase)
  fullName: org.apache.commons.codec.binary.Hex.encodeHexString(byte[] data, boolean toLowerCase)
  overload: org.apache.commons.codec.binary.Hex.encodeHexString*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Converts an array of bytes into a String representing the hexadecimal values of each byte in order. The returned String will be double the length of the passed array, as it takes two characters to represent any given byte.
  syntax:
    content: public static String encodeHexString(byte[] data, boolean toLowerCase)
    parameters:
    - id: data
      type: byte[]
      description: a byte[] to convert to Hex characters
    - id: toLowerCase
      type: boolean
      description: <code>true</code> converts to lowercase, <code>false</code> to uppercase
    return:
      type: java.lang.String
      description: A String containing lower-case hexadecimal characters
- uid: org.apache.commons.codec.binary.Hex.encodeHexString(java.nio.ByteBuffer)
  id: encodeHexString(java.nio.ByteBuffer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: encodeHexString(ByteBuffer data)
  nameWithType: Hex.encodeHexString(ByteBuffer data)
  fullName: org.apache.commons.codec.binary.Hex.encodeHexString(ByteBuffer data)
  overload: org.apache.commons.codec.binary.Hex.encodeHexString*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Converts a byte buffer into a String representing the hexadecimal values of each byte in order. The returned String will be double the length of the passed array, as it takes two characters to represent any given byte.
  syntax:
    content: public static String encodeHexString(ByteBuffer data)
    parameters:
    - id: data
      type: java.nio.ByteBuffer
      description: a byte buffer to convert to Hex characters
    return:
      type: java.lang.String
      description: A String containing lower-case hexadecimal characters
- uid: org.apache.commons.codec.binary.Hex.encodeHexString(java.nio.ByteBuffer,boolean)
  id: encodeHexString(java.nio.ByteBuffer,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: encodeHexString(ByteBuffer data, boolean toLowerCase)
  nameWithType: Hex.encodeHexString(ByteBuffer data, boolean toLowerCase)
  fullName: org.apache.commons.codec.binary.Hex.encodeHexString(ByteBuffer data, boolean toLowerCase)
  overload: org.apache.commons.codec.binary.Hex.encodeHexString*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Converts a byte buffer into a String representing the hexadecimal values of each byte in order. The returned String will be double the length of the passed array, as it takes two characters to represent any given byte.
  syntax:
    content: public static String encodeHexString(ByteBuffer data, boolean toLowerCase)
    parameters:
    - id: data
      type: java.nio.ByteBuffer
      description: a byte buffer to convert to Hex characters
    - id: toLowerCase
      type: boolean
      description: <code>true</code> converts to lowercase, <code>false</code> to uppercase
    return:
      type: java.lang.String
      description: A String containing lower-case hexadecimal characters
- uid: org.apache.commons.codec.binary.Hex.getCharset()
  id: getCharset()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: getCharset()
  nameWithType: Hex.getCharset()
  fullName: org.apache.commons.codec.binary.Hex.getCharset()
  overload: org.apache.commons.codec.binary.Hex.getCharset*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Gets the charset.
  syntax:
    content: public Charset getCharset()
    return:
      type: java.nio.charset.Charset
      description: the charset.
- uid: org.apache.commons.codec.binary.Hex.getCharsetName()
  id: getCharsetName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: getCharsetName()
  nameWithType: Hex.getCharsetName()
  fullName: org.apache.commons.codec.binary.Hex.getCharsetName()
  overload: org.apache.commons.codec.binary.Hex.getCharsetName*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Gets the charset name.
  syntax:
    content: public String getCharsetName()
    return:
      type: java.lang.String
      description: the charset name.
- uid: org.apache.commons.codec.binary.Hex.toDigit(char,int)
  id: toDigit(char,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: toDigit(char ch, int index)
  nameWithType: Hex.toDigit(char ch, int index)
  fullName: org.apache.commons.codec.binary.Hex.toDigit(char ch, int index)
  overload: org.apache.commons.codec.binary.Hex.toDigit*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Converts a hexadecimal character to an integer.
  syntax:
    content: protected static int toDigit(char ch, int index)
    parameters:
    - id: ch
      type: char
      description: A character to convert to an integer digit
    - id: index
      type: int
      description: The index of the character in the source
    return:
      type: int
      description: An integer
  exceptions:
  - type: org.apache.commons.codec.DecoderException
    description: Thrown if ch is an illegal hex character
- uid: org.apache.commons.codec.binary.Hex.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.Hex
  langs:
  - java
  name: toString()
  nameWithType: Hex.toString()
  fullName: org.apache.commons.codec.binary.Hex.toString()
  overload: org.apache.commons.codec.binary.Hex.toString*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Returns a string representation of the object, which includes the charset name.
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
      description: a string representation of the object.
references:
- uid: org.apache.commons.codec.binary.Hex.Hex*
  name: Hex
  nameWithType: Hex.Hex
  fullName: org.apache.commons.codec.binary.Hex.Hex
  package: org.apache.commons.codec.binary
- uid: java.nio.charset.Charset
  spec.java:
  - uid: java.nio.charset.Charset
    name: Charset
    fullName: java.nio.charset.Charset
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.commons.codec.DecoderException
  name: DecoderException
  nameWithType: DecoderException
  fullName: org.apache.commons.codec.DecoderException
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: org.apache.commons.codec.binary.Hex.decodeHex*
  name: decodeHex
  nameWithType: Hex.decodeHex
  fullName: org.apache.commons.codec.binary.Hex.decodeHex
  package: org.apache.commons.codec.binary
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: org.apache.commons.codec.binary.Hex.encodeHex*
  name: encodeHex
  nameWithType: Hex.encodeHex
  fullName: org.apache.commons.codec.binary.Hex.encodeHex
  package: org.apache.commons.codec.binary
- uid: java.nio.ByteBuffer
  spec.java:
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.commons.codec.binary.Hex.encodeHexString*
  name: encodeHexString
  nameWithType: Hex.encodeHexString
  fullName: org.apache.commons.codec.binary.Hex.encodeHexString
  package: org.apache.commons.codec.binary
- uid: char
  spec.java:
  - uid: char
    name: char
    fullName: char
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.commons.codec.binary.Hex.toDigit*
  name: toDigit
  nameWithType: Hex.toDigit
  fullName: org.apache.commons.codec.binary.Hex.toDigit
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.binary.Hex.decode*
  name: decode
  nameWithType: Hex.decode
  fullName: org.apache.commons.codec.binary.Hex.decode
  package: org.apache.commons.codec.binary
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: org.apache.commons.codec.binary.Hex.encode*
  name: encode
  nameWithType: Hex.encode
  fullName: org.apache.commons.codec.binary.Hex.encode
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.EncoderException
  name: EncoderException
  nameWithType: EncoderException
  fullName: org.apache.commons.codec.EncoderException
- uid: org.apache.commons.codec.binary.Hex.getCharset*
  name: getCharset
  nameWithType: Hex.getCharset
  fullName: org.apache.commons.codec.binary.Hex.getCharset
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.binary.Hex.getCharsetName*
  name: getCharsetName
  nameWithType: Hex.getCharsetName
  fullName: org.apache.commons.codec.binary.Hex.getCharsetName
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.binary.Hex.toString*
  name: toString
  nameWithType: Hex.toString
  fullName: org.apache.commons.codec.binary.Hex.toString
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.BinaryEncoder
  name: BinaryEncoder
  nameWithType: BinaryEncoder
  fullName: org.apache.commons.codec.BinaryEncoder
- uid: org.apache.commons.codec.BinaryDecoder
  name: BinaryDecoder
  nameWithType: BinaryDecoder
  fullName: org.apache.commons.codec.BinaryDecoder
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
