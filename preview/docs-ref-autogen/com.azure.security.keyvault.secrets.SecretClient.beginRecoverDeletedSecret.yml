### YamlMime:JavaMember
uid: "com.azure.security.keyvault.secrets.SecretClient.beginRecoverDeletedSecret*"
fullName: "com.azure.security.keyvault.secrets.SecretClient.beginRecoverDeletedSecret"
name: "beginRecoverDeletedSecret"
nameWithType: "SecretClient.beginRecoverDeletedSecret"
members:
- uid: "com.azure.security.keyvault.secrets.SecretClient.beginRecoverDeletedSecret(java.lang.String)"
  fullName: "com.azure.security.keyvault.secrets.SecretClient.beginRecoverDeletedSecret(String name)"
  name: "beginRecoverDeletedSecret(String name)"
  nameWithType: "SecretClient.beginRecoverDeletedSecret(String name)"
  summary: "Recovers the deleted secret in the key vault to its latest version. Can only be performed on a **soft-delete enabled** vault. This operation requires the `secrets/recover` permission.\n\n**Code sample**\n\nRecovers the deleted secret from the key vault enabled for **soft-delete**. Prints out the details of the recovered secret returned in the response.\n\n```java\nSyncPoller<KeyVaultSecret, Void> recoverSecretPoller =\n     secretClient.beginRecoverDeletedSecret(\"deletedSecretName\");\n \n // Deleted Secret can be accessed as soon as polling is in progress.\n PollResponse<KeyVaultSecret> recoveredSecretPollResponse = recoverSecretPoller.poll();\n System.out.println(\"Recovered Key Name %s\" + recoveredSecretPollResponse.getValue().getName());\n System.out.printf(\"Recovered Key's Id %s\", recoveredSecretPollResponse.getValue().getId());\n \n // Key is being recovered on server.\n recoverSecretPoller.waitForCompletion();\n```"
  parameters:
  - description: "The name of the deleted secret to be recovered."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<KeyVaultSecret,Void> beginRecoverDeletedSecret(String name)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll on and retrieve the <xref uid=\"com.azure.security.keyvault.secrets.models.KeyVaultSecret\" data-throw-if-not-resolved=\"false\" data-raw-source=\"recovered secret\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.secrets.models.KeyVaultSecret?alt=com.azure.security.keyvault.secrets.models.KeyVaultSecret&text=KeyVaultSecret\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.secrets.SecretClient.beginRecoverDeletedSecret(java.lang.String,java.time.Duration)"
  fullName: "com.azure.security.keyvault.secrets.SecretClient.beginRecoverDeletedSecret(String name, Duration pollingInterval)"
  name: "beginRecoverDeletedSecret(String name, Duration pollingInterval)"
  nameWithType: "SecretClient.beginRecoverDeletedSecret(String name, Duration pollingInterval)"
  summary: "Recovers the deleted secret in the key vault to its latest version. Can only be performed on a **soft-delete enabled** vault. This operation requires the `secrets/recover` permission.\n\n**Code sample**\n\nRecovers the deleted secret from the key vault enabled for **soft-delete**. Prints out the details of the recovered secret returned in the response.\n\n```java\nSyncPoller<KeyVaultSecret, Void> recoverDeletedSecretPoller =\n     secretClient.beginRecoverDeletedSecret(\"deletedSecretName\", Duration.ofSeconds(1));\n \n // Deleted Secret can be accessed as soon as polling is in progress.\n PollResponse<KeyVaultSecret> recoveredDeletedSecretPollResponse = recoverDeletedSecretPoller.poll();\n System.out.println(\"Recovered Key Name %s\" + recoveredDeletedSecretPollResponse.getValue().getName());\n System.out.printf(\"Recovered Key's Id %s\", recoveredDeletedSecretPollResponse.getValue().getId());\n \n // Key is being recovered on server.\n recoverDeletedSecretPoller.waitForCompletion();\n```"
  parameters:
  - description: "The name of the deleted secret to be recovered."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The interval at which the operation status will be polled for."
    name: "pollingInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<KeyVaultSecret,Void> beginRecoverDeletedSecret(String name, Duration pollingInterval)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll on and retrieve the <xref uid=\"com.azure.security.keyvault.secrets.models.KeyVaultSecret\" data-throw-if-not-resolved=\"false\" data-raw-source=\"recovered secret\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.secrets.models.KeyVaultSecret?alt=com.azure.security.keyvault.secrets.models.KeyVaultSecret&text=KeyVaultSecret\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.secrets"
artifact: com.azure:azure-security-keyvault-secrets:4.3.0-beta.2
