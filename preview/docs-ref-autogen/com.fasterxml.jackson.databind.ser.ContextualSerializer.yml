### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ser.ContextualSerializer
  id: ContextualSerializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser
  children:
  - com.fasterxml.jackson.databind.ser.ContextualSerializer.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  langs:
  - java
  name: ContextualSerializer
  nameWithType: ContextualSerializer
  fullName: com.fasterxml.jackson.databind.ser.ContextualSerializer
  type: Interface
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Add-on interface that <xref uid="com.fasterxml.jackson.databind.JsonSerializer" data-throw-if-not-resolved="false">JsonSerializer</xref>s can implement to get a callback that can be used to create contextual instances of serializer to use for handling properties of supported type. This can be useful for serializers that can be configured by annotations, or should otherwise have differing behavior depending on what kind of property is being serialized.


    Note that in cases where serializer needs both contextualization and resolution -- that is, implements both this interface and <xref uid="com.fasterxml.jackson.databind.ser.ResolvableSerializer" data-throw-if-not-resolved="false">ResolvableSerializer</xref> \-- resolution via <xref uid="com.fasterxml.jackson.databind.ser.ResolvableSerializer" data-throw-if-not-resolved="false">ResolvableSerializer</xref> occurs first, and contextual resolution (via this interface) later on.
  syntax:
    content: public interface ContextualSerializer
- uid: com.fasterxml.jackson.databind.ser.ContextualSerializer.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  id: createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.ContextualSerializer
  langs:
  - java
  name: createContextual(SerializerProvider prov, BeanProperty property)
  nameWithType: ContextualSerializer.createContextual(SerializerProvider prov, BeanProperty property)
  fullName: com.fasterxml.jackson.databind.ser.ContextualSerializer.createContextual(SerializerProvider prov, BeanProperty property)
  overload: com.fasterxml.jackson.databind.ser.ContextualSerializer.createContextual*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called to see if a different (or differently configured) serializer is needed to serialize values of specified property. Note that instance that this method is called on is typically shared one and as a result method should **NOT** modify this instance but rather construct and return a new instance. This instance should only be returned as-is, in case it is already suitable for use.
  syntax:
    content: public abstract JsonSerializer<?> createContextual(SerializerProvider prov, BeanProperty property)
    parameters:
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
      description: Serializer provider to use for accessing config, other serializers
    - id: property
      type: com.fasterxml.jackson.databind.BeanProperty
      description: >-
        Method or field that represents the property
           (and is used to access value to serialize).
           Should be available; but there may be cases where caller cannot provide it and
           null is passed instead (in which case impls usually pass 'this' serializer as is)
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
      description: >-
        Serializer to use for serializing values of specified property;
           may be this instance or a new instance.
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
references:
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.BeanProperty
  name: BeanProperty
  nameWithType: BeanProperty
  fullName: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.JsonSerializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.ContextualSerializer.createContextual*
  name: createContextual
  nameWithType: ContextualSerializer.createContextual
  fullName: com.fasterxml.jackson.databind.ser.ContextualSerializer.createContextual
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
