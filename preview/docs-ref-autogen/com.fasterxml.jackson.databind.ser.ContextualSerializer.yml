### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.ser.ContextualSerializer"
fullName: "com.fasterxml.jackson.databind.ser.ContextualSerializer"
name: "ContextualSerializer"
nameWithType: "ContextualSerializer"
summary: "Add-on interface that <xref uid=\"com.fasterxml.jackson.databind.JsonSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonSerializer\"></xref>s can implement to get a callback that can be used to create contextual instances of serializer to use for handling properties of supported type. This can be useful for serializers that can be configured by annotations, or should otherwise have differing behavior depending on what kind of property is being serialized.\n\nNote that in cases where serializer needs both contextualization and resolution -- that is, implements both this interface and <xref uid=\"com.fasterxml.jackson.databind.ser.ResolvableSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ResolvableSerializer\"></xref> \\-- resolution via <xref uid=\"com.fasterxml.jackson.databind.ser.ResolvableSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ResolvableSerializer\"></xref> occurs first, and contextual resolution (via this interface) later on."
syntax: "public interface ContextualSerializer"
methods:
- "com.fasterxml.jackson.databind.ser.ContextualSerializer.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)"
type: "interface"
metadata: {}
package: "com.fasterxml.jackson.databind.ser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
