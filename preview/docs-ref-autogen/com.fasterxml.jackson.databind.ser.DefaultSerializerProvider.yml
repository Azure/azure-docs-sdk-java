### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"
fullName: "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"
name: "DefaultSerializerProvider"
nameWithType: "DefaultSerializerProvider"
summary: "Standard implementation used by <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectMapper\"></xref>: adds methods only exposed to <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectMapper\"></xref>, as well as constructors.\n\nNote that class is abstract just because it does not define <xref uid=\"com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.createInstance*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createInstance\"></xref> method.\n\nAlso note that all custom <xref uid=\"com.fasterxml.jackson.databind.SerializerProvider\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SerializerProvider\"></xref> implementations must sub-class this class: <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectMapper\"></xref> requires this type, not basic provider type."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.DatabindContext\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.SerializerProvider\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.databind.DatabindContext.<T>_throwNotASubtype(com.fasterxml.jackson.databind.JavaType,java.lang.String)"
- "com.fasterxml.jackson.databind.DatabindContext.<T>_throwSubtypeClassNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)"
- "com.fasterxml.jackson.databind.DatabindContext.<T>_throwSubtypeNameNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)"
- "com.fasterxml.jackson.databind.DatabindContext.<T>reportBadDefinition(java.lang.Class<?>,java.lang.String)"
- "com.fasterxml.jackson.databind.DatabindContext._colonConcat(java.lang.String,java.lang.String)"
- "com.fasterxml.jackson.databind.DatabindContext._desc(java.lang.String)"
- "com.fasterxml.jackson.databind.DatabindContext._format(java.lang.String,java.lang.Object...)"
- "com.fasterxml.jackson.databind.DatabindContext._quotedString(java.lang.String)"
- "com.fasterxml.jackson.databind.DatabindContext._truncate(java.lang.String)"
- "com.fasterxml.jackson.databind.DatabindContext.constructType(java.lang.reflect.Type)"
- "com.fasterxml.jackson.databind.DatabindContext.converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)"
- "com.fasterxml.jackson.databind.DatabindContext.objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)"
- "com.fasterxml.jackson.databind.DatabindContext.objectIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)"
- "com.fasterxml.jackson.databind.DatabindContext.resolveAndValidateSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)"
- "com.fasterxml.jackson.databind.DatabindContext.resolveSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String)"
- "com.fasterxml.jackson.databind.SerializerProvider.<T>reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)"
- "com.fasterxml.jackson.databind.SerializerProvider.<T>reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.Throwable)"
- "com.fasterxml.jackson.databind.SerializerProvider.<T>reportBadDefinition(java.lang.Class<?>,java.lang.String,java.lang.Throwable)"
- "com.fasterxml.jackson.databind.SerializerProvider.<T>reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.String,java.lang.Object...)"
- "com.fasterxml.jackson.databind.SerializerProvider.<T>reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription,java.lang.String,java.lang.Object...)"
- "com.fasterxml.jackson.databind.SerializerProvider._createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.SerializerProvider._createAndCacheUntypedSerializer(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.SerializerProvider._createUntypedSerializer(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.SerializerProvider._dateFormat()"
- "com.fasterxml.jackson.databind.SerializerProvider._findExplicitUntypedSerializer(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.SerializerProvider._handleContextualResolvable(com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.SerializerProvider._handleResolvable(com.fasterxml.jackson.databind.JsonSerializer<?>)"
- "com.fasterxml.jackson.databind.SerializerProvider._reportIncompatibleRootType(java.lang.Object,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.SerializerProvider.canOverrideAccessModifiers()"
- "com.fasterxml.jackson.databind.SerializerProvider.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeDateKey(java.util.Date,com.fasterxml.jackson.core.JsonGenerator)"
- "com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeDateKey(long,com.fasterxml.jackson.core.JsonGenerator)"
- "com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeDateValue(java.util.Date,com.fasterxml.jackson.core.JsonGenerator)"
- "com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeDateValue(long,com.fasterxml.jackson.core.JsonGenerator)"
- "com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeField(java.lang.String,java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)"
- "com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)"
- "com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeValue(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)"
- "com.fasterxml.jackson.databind.SerializerProvider.findContentValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.SerializerProvider.findContentValueSerializer(java.lang.Class<?>,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.SerializerProvider.findKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.SerializerProvider.findKeySerializer(java.lang.Class<?>,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.SerializerProvider.findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.SerializerProvider.findNullValueSerializer(com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.SerializerProvider.findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator<?>)"
- "com.fasterxml.jackson.databind.SerializerProvider.findPrimaryPropertySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.SerializerProvider.findPrimaryPropertySerializer(java.lang.Class<?>,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.SerializerProvider.findTypeSerializer(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.SerializerProvider.findTypedValueSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.SerializerProvider.findTypedValueSerializer(java.lang.Class<?>,boolean,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.SerializerProvider.findValueSerializer(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.SerializerProvider.findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.SerializerProvider.findValueSerializer(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.SerializerProvider.findValueSerializer(java.lang.Class<?>,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.SerializerProvider.getActiveView()"
- "com.fasterxml.jackson.databind.SerializerProvider.getAnnotationIntrospector()"
- "com.fasterxml.jackson.databind.SerializerProvider.getAttribute(java.lang.Object)"
- "com.fasterxml.jackson.databind.SerializerProvider.getConfig()"
- "com.fasterxml.jackson.databind.SerializerProvider.getDefaultNullKeySerializer()"
- "com.fasterxml.jackson.databind.SerializerProvider.getDefaultNullValueSerializer()"
- "com.fasterxml.jackson.databind.SerializerProvider.getDefaultPropertyFormat(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.SerializerProvider.getDefaultPropertyInclusion(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.SerializerProvider.getFilterProvider()"
- "com.fasterxml.jackson.databind.SerializerProvider.getGenerator()"
- "com.fasterxml.jackson.databind.SerializerProvider.getLocale()"
- "com.fasterxml.jackson.databind.SerializerProvider.getSerializationView()"
- "com.fasterxml.jackson.databind.SerializerProvider.getTimeZone()"
- "com.fasterxml.jackson.databind.SerializerProvider.getTypeFactory()"
- "com.fasterxml.jackson.databind.SerializerProvider.getUnknownTypeSerializer(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.SerializerProvider.handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.SerializerProvider.handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.SerializerProvider.hasSerializationFeatures(int)"
- "com.fasterxml.jackson.databind.SerializerProvider.includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.SerializerProvider.includeFilterSuppressNulls(java.lang.Object)"
- "com.fasterxml.jackson.databind.SerializerProvider.invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)"
- "com.fasterxml.jackson.databind.SerializerProvider.isEnabled(com.fasterxml.jackson.databind.MapperFeature)"
- "com.fasterxml.jackson.databind.SerializerProvider.isEnabled(com.fasterxml.jackson.databind.SerializationFeature)"
- "com.fasterxml.jackson.databind.SerializerProvider.isUnknownTypeSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)"
- "com.fasterxml.jackson.databind.SerializerProvider.mappingException(java.lang.String,java.lang.Object...)"
- "com.fasterxml.jackson.databind.SerializerProvider.mappingException(java.lang.Throwable,java.lang.String,java.lang.Object...)"
- "com.fasterxml.jackson.databind.SerializerProvider.reportMappingProblem(java.lang.String,java.lang.Object...)"
- "com.fasterxml.jackson.databind.SerializerProvider.reportMappingProblem(java.lang.Throwable,java.lang.String,java.lang.Object...)"
- "com.fasterxml.jackson.databind.SerializerProvider.serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)"
- "com.fasterxml.jackson.databind.SerializerProvider.setAttribute(java.lang.Object,java.lang.Object)"
- "com.fasterxml.jackson.databind.SerializerProvider.setDefaultKeySerializer(com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.SerializerProvider.setNullKeySerializer(com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.SerializerProvider.setNullValueSerializer(com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class DefaultSerializerProvider extends SerializerProvider implements Serializable"
constructors:
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.DefaultSerializerProvider()"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.DefaultSerializerProvider(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.DefaultSerializerProvider(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider)"
fields:
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._generator"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._objectIdGenerators"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._seenObjectIds"
methods:
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._createObjectIdMap()"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serializeNull(com.fasterxml.jackson.core.JsonGenerator)"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper)"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.cachedSerializersCount()"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.copy()"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator<?>)"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.flushCachedSerializers()"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.generateJsonSchema(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.getGenerator()"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.hasSerializerFor(java.lang.Class<?>,java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>)"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.includeFilterSuppressNulls(java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializePolymorphic(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)"
type: "class"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.ser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
