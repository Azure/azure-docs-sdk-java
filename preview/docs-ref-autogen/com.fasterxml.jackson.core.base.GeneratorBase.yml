### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.base.GeneratorBase
  id: GeneratorBase
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base
  children:
  - com.fasterxml.jackson.core.base.GeneratorBase.DERIVED_FEATURES_MASK
  - com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int,com.fasterxml.jackson.core.ObjectCodec)
  - com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.json.JsonWriteContext)
  - com.fasterxml.jackson.core.base.GeneratorBase.MAX_BIG_DECIMAL_SCALE
  - com.fasterxml.jackson.core.base.GeneratorBase.SURR1_FIRST
  - com.fasterxml.jackson.core.base.GeneratorBase.SURR1_LAST
  - com.fasterxml.jackson.core.base.GeneratorBase.SURR2_FIRST
  - com.fasterxml.jackson.core.base.GeneratorBase.SURR2_LAST
  - com.fasterxml.jackson.core.base.GeneratorBase.WRITE_BINARY
  - com.fasterxml.jackson.core.base.GeneratorBase.WRITE_BOOLEAN
  - com.fasterxml.jackson.core.base.GeneratorBase.WRITE_NULL
  - com.fasterxml.jackson.core.base.GeneratorBase.WRITE_NUMBER
  - com.fasterxml.jackson.core.base.GeneratorBase.WRITE_RAW
  - com.fasterxml.jackson.core.base.GeneratorBase.WRITE_STRING
  - com.fasterxml.jackson.core.base.GeneratorBase._asString(java.math.BigDecimal)
  - com.fasterxml.jackson.core.base.GeneratorBase._cfgNumbersAsStrings
  - com.fasterxml.jackson.core.base.GeneratorBase._checkStdFeatureChanges(int,int)
  - com.fasterxml.jackson.core.base.GeneratorBase._closed
  - com.fasterxml.jackson.core.base.GeneratorBase._constructDefaultPrettyPrinter()
  - com.fasterxml.jackson.core.base.GeneratorBase._decodeSurrogate(int,int)
  - com.fasterxml.jackson.core.base.GeneratorBase._features
  - com.fasterxml.jackson.core.base.GeneratorBase._objectCodec
  - com.fasterxml.jackson.core.base.GeneratorBase._releaseBuffers()
  - com.fasterxml.jackson.core.base.GeneratorBase._verifyValueWrite(java.lang.String)
  - com.fasterxml.jackson.core.base.GeneratorBase._writeContext
  - com.fasterxml.jackson.core.base.GeneratorBase.close()
  - com.fasterxml.jackson.core.base.GeneratorBase.disable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  - com.fasterxml.jackson.core.base.GeneratorBase.enable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  - com.fasterxml.jackson.core.base.GeneratorBase.flush()
  - com.fasterxml.jackson.core.base.GeneratorBase.getCodec()
  - com.fasterxml.jackson.core.base.GeneratorBase.getCurrentValue()
  - com.fasterxml.jackson.core.base.GeneratorBase.getFeatureMask()
  - com.fasterxml.jackson.core.base.GeneratorBase.getOutputContext()
  - com.fasterxml.jackson.core.base.GeneratorBase.isClosed()
  - com.fasterxml.jackson.core.base.GeneratorBase.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  - com.fasterxml.jackson.core.base.GeneratorBase.overrideStdFeatures(int,int)
  - com.fasterxml.jackson.core.base.GeneratorBase.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  - com.fasterxml.jackson.core.base.GeneratorBase.setCurrentValue(java.lang.Object)
  - com.fasterxml.jackson.core.base.GeneratorBase.setFeatureMask(int)
  - com.fasterxml.jackson.core.base.GeneratorBase.useDefaultPrettyPrinter()
  - com.fasterxml.jackson.core.base.GeneratorBase.version()
  - com.fasterxml.jackson.core.base.GeneratorBase.writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeObject(java.lang.Object)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(char[],int,int)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String,int,int)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeStartObject(java.lang.Object)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeString(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeTree(com.fasterxml.jackson.core.TreeNode)
  langs:
  - java
  name: GeneratorBase
  nameWithType: GeneratorBase
  fullName: com.fasterxml.jackson.core.base.GeneratorBase
  type: Class
  package: com.fasterxml.jackson.core.base
  summary: This base class implements part of API that a JSON generator exposes to applications, adds shared internal methods that sub-classes can use and adds some abstract methods sub-classes must implement.
  syntax:
    content: public abstract class GeneratorBase extends JsonGenerator
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.core.JsonGenerator
  inheritedMembers:
  - com.fasterxml.jackson.core.JsonGenerator._copyCurrentContents(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.core.JsonGenerator._reportError(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator._reportUnsupportedOperation()
  - com.fasterxml.jackson.core.JsonGenerator._throwInternal()
  - com.fasterxml.jackson.core.JsonGenerator._verifyOffsets(int,int,int)
  - com.fasterxml.jackson.core.JsonGenerator._writeSimpleObject(java.lang.Object)
  - com.fasterxml.jackson.core.JsonGenerator.canOmitFields()
  - com.fasterxml.jackson.core.JsonGenerator.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.core.JsonGenerator.canWriteBinaryNatively()
  - com.fasterxml.jackson.core.JsonGenerator.canWriteFormattedNumbers()
  - com.fasterxml.jackson.core.JsonGenerator.canWriteObjectId()
  - com.fasterxml.jackson.core.JsonGenerator.canWriteTypeId()
  - com.fasterxml.jackson.core.JsonGenerator.close()
  - com.fasterxml.jackson.core.JsonGenerator.configure(com.fasterxml.jackson.core.JsonGenerator.Feature,boolean)
  - com.fasterxml.jackson.core.JsonGenerator.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.core.JsonGenerator.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.core.JsonGenerator.disable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  - com.fasterxml.jackson.core.JsonGenerator.enable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  - com.fasterxml.jackson.core.JsonGenerator.flush()
  - com.fasterxml.jackson.core.JsonGenerator.getCharacterEscapes()
  - com.fasterxml.jackson.core.JsonGenerator.getCodec()
  - com.fasterxml.jackson.core.JsonGenerator.getCurrentValue()
  - com.fasterxml.jackson.core.JsonGenerator.getFeatureMask()
  - com.fasterxml.jackson.core.JsonGenerator.getFormatFeatures()
  - com.fasterxml.jackson.core.JsonGenerator.getHighestEscapedChar()
  - com.fasterxml.jackson.core.JsonGenerator.getOutputBuffered()
  - com.fasterxml.jackson.core.JsonGenerator.getOutputContext()
  - com.fasterxml.jackson.core.JsonGenerator.getOutputTarget()
  - com.fasterxml.jackson.core.JsonGenerator.getPrettyPrinter()
  - com.fasterxml.jackson.core.JsonGenerator.getSchema()
  - com.fasterxml.jackson.core.JsonGenerator.isClosed()
  - com.fasterxml.jackson.core.JsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  - com.fasterxml.jackson.core.JsonGenerator.isEnabled(com.fasterxml.jackson.core.StreamWriteFeature)
  - com.fasterxml.jackson.core.JsonGenerator.overrideFormatFeatures(int,int)
  - com.fasterxml.jackson.core.JsonGenerator.overrideStdFeatures(int,int)
  - com.fasterxml.jackson.core.JsonGenerator.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)
  - com.fasterxml.jackson.core.JsonGenerator.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  - com.fasterxml.jackson.core.JsonGenerator.setCurrentValue(java.lang.Object)
  - com.fasterxml.jackson.core.JsonGenerator.setFeatureMask(int)
  - com.fasterxml.jackson.core.JsonGenerator.setHighestNonEscapedChar(int)
  - com.fasterxml.jackson.core.JsonGenerator.setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)
  - com.fasterxml.jackson.core.JsonGenerator.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.core.JsonGenerator.useDefaultPrettyPrinter()
  - com.fasterxml.jackson.core.JsonGenerator.version()
  - com.fasterxml.jackson.core.JsonGenerator.writeArray(double[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeArray(int[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeArray(java.lang.String[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeArray(long[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeArrayFieldStart(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[])
  - com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeBinary(java.io.InputStream,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeBinaryField(java.lang.String,byte[])
  - com.fasterxml.jackson.core.JsonGenerator.writeBoolean(boolean)
  - com.fasterxml.jackson.core.JsonGenerator.writeBooleanField(java.lang.String,boolean)
  - com.fasterxml.jackson.core.JsonGenerator.writeEmbeddedObject(java.lang.Object)
  - com.fasterxml.jackson.core.JsonGenerator.writeEndArray()
  - com.fasterxml.jackson.core.JsonGenerator.writeEndObject()
  - com.fasterxml.jackson.core.JsonGenerator.writeFieldId(long)
  - com.fasterxml.jackson.core.JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeNull()
  - com.fasterxml.jackson.core.JsonGenerator.writeNullField(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(char[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(double)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(float)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(int)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigDecimal)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigInteger)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(long)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(short)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,double)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,float)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,java.math.BigDecimal)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,java.math.BigInteger)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,long)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,short)
  - com.fasterxml.jackson.core.JsonGenerator.writeObject(java.lang.Object)
  - com.fasterxml.jackson.core.JsonGenerator.writeObjectField(java.lang.String,java.lang.Object)
  - com.fasterxml.jackson.core.JsonGenerator.writeObjectFieldStart(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeObjectId(java.lang.Object)
  - com.fasterxml.jackson.core.JsonGenerator.writeObjectRef(java.lang.Object)
  - com.fasterxml.jackson.core.JsonGenerator.writeOmittedField(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)
  - com.fasterxml.jackson.core.JsonGenerator.writeRaw(char[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String,int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeRawUTF8String(byte[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeRawValue(char[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeRawValue(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.JsonGenerator.writeRawValue(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeRawValue(java.lang.String,int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeStartArray()
  - com.fasterxml.jackson.core.JsonGenerator.writeStartArray(int)
  - com.fasterxml.jackson.core.JsonGenerator.writeStartArray(java.lang.Object)
  - com.fasterxml.jackson.core.JsonGenerator.writeStartArray(java.lang.Object,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeStartObject()
  - com.fasterxml.jackson.core.JsonGenerator.writeStartObject(java.lang.Object)
  - com.fasterxml.jackson.core.JsonGenerator.writeStartObject(java.lang.Object,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeString(char[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.JsonGenerator.writeString(java.io.Reader,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeString(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeStringField(java.lang.String,java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeTree(com.fasterxml.jackson.core.TreeNode)
  - com.fasterxml.jackson.core.JsonGenerator.writeTypeId(java.lang.Object)
  - com.fasterxml.jackson.core.JsonGenerator.writeTypePrefix(com.fasterxml.jackson.core.type.WritableTypeId)
  - com.fasterxml.jackson.core.JsonGenerator.writeTypeSuffix(com.fasterxml.jackson.core.type.WritableTypeId)
  - com.fasterxml.jackson.core.JsonGenerator.writeUTF8String(byte[],int,int)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.DERIVED_FEATURES_MASK
  id: DERIVED_FEATURES_MASK
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: DERIVED_FEATURES_MASK
  nameWithType: GeneratorBase.DERIVED_FEATURES_MASK
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.DERIVED_FEATURES_MASK
  type: Field
  package: com.fasterxml.jackson.core.base
  summary: Set of feature masks related to features that need updates of other local configuration or state.
  syntax:
    content: protected static final int DERIVED_FEATURES_MASK
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int,com.fasterxml.jackson.core.ObjectCodec)
  id: GeneratorBase(int,com.fasterxml.jackson.core.ObjectCodec)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: GeneratorBase(int features, ObjectCodec codec)
  nameWithType: GeneratorBase.GeneratorBase(int features, ObjectCodec codec)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int features, ObjectCodec codec)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase*
  type: Constructor
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected GeneratorBase(int features, ObjectCodec codec)
    parameters:
    - id: features
      type: int
    - id: codec
      type: com.fasterxml.jackson.core.ObjectCodec
- uid: com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.json.JsonWriteContext)
  id: GeneratorBase(int,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.json.JsonWriteContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: GeneratorBase(int features, ObjectCodec codec, JsonWriteContext ctxt)
  nameWithType: GeneratorBase.GeneratorBase(int features, ObjectCodec codec, JsonWriteContext ctxt)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase(int features, ObjectCodec codec, JsonWriteContext ctxt)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase*
  type: Constructor
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected GeneratorBase(int features, ObjectCodec codec, JsonWriteContext ctxt)
    parameters:
    - id: features
      type: int
    - id: codec
      type: com.fasterxml.jackson.core.ObjectCodec
    - id: ctxt
      type: com.fasterxml.jackson.core.json.JsonWriteContext
- uid: com.fasterxml.jackson.core.base.GeneratorBase.MAX_BIG_DECIMAL_SCALE
  id: MAX_BIG_DECIMAL_SCALE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: MAX_BIG_DECIMAL_SCALE
  nameWithType: GeneratorBase.MAX_BIG_DECIMAL_SCALE
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.MAX_BIG_DECIMAL_SCALE
  type: Field
  package: com.fasterxml.jackson.core.base
  summary: This value is the limit of scale allowed for serializing <xref uid="java.math.BigDecimal" data-throw-if-not-resolved="false">BigDecimal</xref> in "plain" (non-engineering) notation; intent is to prevent asymmetric attack whereupon simple eng-notation with big scale is used to generate huge "plain" serialization. See \[core\#315\] for details.
  syntax:
    content: protected static final int MAX_BIG_DECIMAL_SCALE
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.GeneratorBase.SURR1_FIRST
  id: SURR1_FIRST
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: SURR1_FIRST
  nameWithType: GeneratorBase.SURR1_FIRST
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.SURR1_FIRST
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: public static final int SURR1_FIRST
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.GeneratorBase.SURR1_LAST
  id: SURR1_LAST
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: SURR1_LAST
  nameWithType: GeneratorBase.SURR1_LAST
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.SURR1_LAST
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: public static final int SURR1_LAST
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.GeneratorBase.SURR2_FIRST
  id: SURR2_FIRST
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: SURR2_FIRST
  nameWithType: GeneratorBase.SURR2_FIRST
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.SURR2_FIRST
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: public static final int SURR2_FIRST
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.GeneratorBase.SURR2_LAST
  id: SURR2_LAST
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: SURR2_LAST
  nameWithType: GeneratorBase.SURR2_LAST
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.SURR2_LAST
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: public static final int SURR2_LAST
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.GeneratorBase.WRITE_BINARY
  id: WRITE_BINARY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: WRITE_BINARY
  nameWithType: GeneratorBase.WRITE_BINARY
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.WRITE_BINARY
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final String WRITE_BINARY
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.base.GeneratorBase.WRITE_BOOLEAN
  id: WRITE_BOOLEAN
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: WRITE_BOOLEAN
  nameWithType: GeneratorBase.WRITE_BOOLEAN
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.WRITE_BOOLEAN
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final String WRITE_BOOLEAN
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.base.GeneratorBase.WRITE_NULL
  id: WRITE_NULL
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: WRITE_NULL
  nameWithType: GeneratorBase.WRITE_NULL
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.WRITE_NULL
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final String WRITE_NULL
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.base.GeneratorBase.WRITE_NUMBER
  id: WRITE_NUMBER
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: WRITE_NUMBER
  nameWithType: GeneratorBase.WRITE_NUMBER
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.WRITE_NUMBER
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final String WRITE_NUMBER
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.base.GeneratorBase.WRITE_RAW
  id: WRITE_RAW
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: WRITE_RAW
  nameWithType: GeneratorBase.WRITE_RAW
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.WRITE_RAW
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final String WRITE_RAW
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.base.GeneratorBase.WRITE_STRING
  id: WRITE_STRING
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: WRITE_STRING
  nameWithType: GeneratorBase.WRITE_STRING
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.WRITE_STRING
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final String WRITE_STRING
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.base.GeneratorBase._asString(java.math.BigDecimal)
  id: _asString(java.math.BigDecimal)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: _asString(BigDecimal value)
  nameWithType: GeneratorBase._asString(BigDecimal value)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._asString(BigDecimal value)
  overload: com.fasterxml.jackson.core.base.GeneratorBase._asString*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Helper method used to serialize a <xref uid="java.math.BigDecimal" data-throw-if-not-resolved="false">java.math.BigDecimal</xref> as a String, for serialization, taking into account configuration settings
  syntax:
    content: protected String _asString(BigDecimal value)
    parameters:
    - id: value
      type: java.math.BigDecimal
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.GeneratorBase._cfgNumbersAsStrings
  id: _cfgNumbersAsStrings
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: _cfgNumbersAsStrings
  nameWithType: GeneratorBase._cfgNumbersAsStrings
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._cfgNumbersAsStrings
  type: Field
  package: com.fasterxml.jackson.core.base
  summary: Flag set to indicate that implicit conversion from number to JSON String is needed (as per <xref uid="com.fasterxml.jackson.core.JsonGenerator.Feature.WRITE_NUMBERS_AS_STRINGS" data-throw-if-not-resolved="false">com.fasterxml.jackson.core.JsonGenerator.Feature#WRITE_NUMBERS_AS_STRINGS</xref>).
  syntax:
    content: protected boolean _cfgNumbersAsStrings
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.base.GeneratorBase._checkStdFeatureChanges(int,int)
  id: _checkStdFeatureChanges(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: _checkStdFeatureChanges(int newFeatureFlags, int changedFeatures)
  nameWithType: GeneratorBase._checkStdFeatureChanges(int newFeatureFlags, int changedFeatures)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._checkStdFeatureChanges(int newFeatureFlags, int changedFeatures)
  overload: com.fasterxml.jackson.core.base.GeneratorBase._checkStdFeatureChanges*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Helper method called to verify changes to standard features.
  syntax:
    content: protected void _checkStdFeatureChanges(int newFeatureFlags, int changedFeatures)
    parameters:
    - id: newFeatureFlags
      type: int
      description: Bitflag of standard features after they were changed
    - id: changedFeatures
      type: int
      description: >-
        Bitflag of standard features for which setting
            did change
- uid: com.fasterxml.jackson.core.base.GeneratorBase._closed
  id: _closed
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: _closed
  nameWithType: GeneratorBase._closed
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._closed
  type: Field
  package: com.fasterxml.jackson.core.base
  summary: Flag that indicates whether generator is closed or not. Gets set when it is closed by an explicit call (<xref uid="com.fasterxml.jackson.core.base.GeneratorBase.close*" data-throw-if-not-resolved="false">#close</xref>).
  syntax:
    content: protected boolean _closed
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.base.GeneratorBase._constructDefaultPrettyPrinter()
  id: _constructDefaultPrettyPrinter()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: _constructDefaultPrettyPrinter()
  nameWithType: GeneratorBase._constructDefaultPrettyPrinter()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._constructDefaultPrettyPrinter()
  overload: com.fasterxml.jackson.core.base.GeneratorBase._constructDefaultPrettyPrinter*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Overridable factory method called to instantiate an appropriate <xref uid="com.fasterxml.jackson.core.PrettyPrinter" data-throw-if-not-resolved="false">PrettyPrinter</xref> for case of "just use the default one", when <xref uid="com.fasterxml.jackson.core.base.GeneratorBase.useDefaultPrettyPrinter()" data-throw-if-not-resolved="false">#useDefaultPrettyPrinter()</xref> is called.
  syntax:
    content: protected PrettyPrinter _constructDefaultPrettyPrinter()
    return:
      type: com.fasterxml.jackson.core.PrettyPrinter
- uid: com.fasterxml.jackson.core.base.GeneratorBase._decodeSurrogate(int,int)
  id: _decodeSurrogate(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: _decodeSurrogate(int surr1, int surr2)
  nameWithType: GeneratorBase._decodeSurrogate(int surr1, int surr2)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._decodeSurrogate(int surr1, int surr2)
  overload: com.fasterxml.jackson.core.base.GeneratorBase._decodeSurrogate*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected final int _decodeSurrogate(int surr1, int surr2)
    parameters:
    - id: surr1
      type: int
    - id: surr2
      type: int
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.GeneratorBase._features
  id: _features
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: _features
  nameWithType: GeneratorBase._features
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._features
  type: Field
  package: com.fasterxml.jackson.core.base
  summary: Bit flag composed of bits that indicate which <xref uid="com.fasterxml.jackson.core.JsonGenerator.Feature" data-throw-if-not-resolved="false">com.fasterxml.jackson.core.JsonGenerator.Feature</xref>s are enabled.
  syntax:
    content: protected int _features
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.GeneratorBase._objectCodec
  id: _objectCodec
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: _objectCodec
  nameWithType: GeneratorBase._objectCodec
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._objectCodec
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected ObjectCodec _objectCodec
    return:
      type: com.fasterxml.jackson.core.ObjectCodec
- uid: com.fasterxml.jackson.core.base.GeneratorBase._releaseBuffers()
  id: _releaseBuffers()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: _releaseBuffers()
  nameWithType: GeneratorBase._releaseBuffers()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._releaseBuffers()
  overload: com.fasterxml.jackson.core.base.GeneratorBase._releaseBuffers*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method called to release any buffers generator may be holding, once generator is being closed.
  syntax:
    content: protected abstract void _releaseBuffers()
- uid: com.fasterxml.jackson.core.base.GeneratorBase._verifyValueWrite(java.lang.String)
  id: _verifyValueWrite(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: _verifyValueWrite(String typeMsg)
  nameWithType: GeneratorBase._verifyValueWrite(String typeMsg)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._verifyValueWrite(String typeMsg)
  overload: com.fasterxml.jackson.core.base.GeneratorBase._verifyValueWrite*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method called before trying to write a value (scalar or structured), to verify that this is legal in current output state, as well as to output separators if and as necessary.
  syntax:
    content: protected abstract void _verifyValueWrite(String typeMsg)
    parameters:
    - id: typeMsg
      type: java.lang.String
      description: >-
        Additional message used for generating exception message
           if value output is NOT legal in current generator output state.
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.GeneratorBase._writeContext
  id: _writeContext
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: _writeContext
  nameWithType: GeneratorBase._writeContext
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._writeContext
  type: Field
  package: com.fasterxml.jackson.core.base
  summary: Object that keeps track of the current contextual state of the generator.
  syntax:
    content: protected JsonWriteContext _writeContext
    return:
      type: com.fasterxml.jackson.core.json.JsonWriteContext
- uid: com.fasterxml.jackson.core.base.GeneratorBase.close()
  id: close()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: close()
  nameWithType: GeneratorBase.close()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.close()
  overload: com.fasterxml.jackson.core.base.GeneratorBase.close*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method called to close this generator, so that no more content can be written.


    Whether the underlying target (stream, writer) gets closed depends on whether this generator either manages the target (i.e. is the only one with access to the target -- case if caller passes a reference to the resource such as File, but not stream); or has feature <xref uid="" data-throw-if-not-resolved="false">Feature#AUTO_CLOSE_TARGET</xref> enabled. If either of above is true, the target is also closed. Otherwise (not managing, feature not enabled), target is not closed.
  syntax:
    content: public void close()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.GeneratorBase.disable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  id: disable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: disable(JsonGenerator.Feature f)
  nameWithType: GeneratorBase.disable(JsonGenerator.Feature f)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.disable(JsonGenerator.Feature f)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.disable*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method for disabling specified features (check <xref uid="" data-throw-if-not-resolved="false">Feature</xref> for list of features)
  syntax:
    content: public JsonGenerator disable(JsonGenerator.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.JsonGenerator.Feature
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.core.base.GeneratorBase.enable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  id: enable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: enable(JsonGenerator.Feature f)
  nameWithType: GeneratorBase.enable(JsonGenerator.Feature f)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.enable(JsonGenerator.Feature f)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.enable*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: 'Method for enabling specified parser features: check <xref uid="" data-throw-if-not-resolved="false">Feature</xref> for list of available features.'
  syntax:
    content: public JsonGenerator enable(JsonGenerator.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.JsonGenerator.Feature
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.core.base.GeneratorBase.flush()
  id: flush()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: flush()
  nameWithType: GeneratorBase.flush()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.flush()
  overload: com.fasterxml.jackson.core.base.GeneratorBase.flush*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method called to flush any buffered content to the underlying target (output stream, writer), and to flush the target itself as well.
  syntax:
    content: public abstract void flush()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.GeneratorBase.getCodec()
  id: getCodec()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: getCodec()
  nameWithType: GeneratorBase.getCodec()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.getCodec()
  overload: com.fasterxml.jackson.core.base.GeneratorBase.getCodec*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method for accessing the object used for writing Java object as JSON content (using method <xref uid="com.fasterxml.jackson.core.base.GeneratorBase.writeObject*" data-throw-if-not-resolved="false">#writeObject</xref>).
  syntax:
    content: public ObjectCodec getCodec()
    return:
      type: com.fasterxml.jackson.core.ObjectCodec
- uid: com.fasterxml.jackson.core.base.GeneratorBase.getCurrentValue()
  id: getCurrentValue()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: getCurrentValue()
  nameWithType: GeneratorBase.getCurrentValue()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.getCurrentValue()
  overload: com.fasterxml.jackson.core.base.GeneratorBase.getCurrentValue*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Helper method, usually equivalent to: `getOutputContext().getCurrentValue();`


    Note that "current value" is NOT populated (or used) by Streaming parser; it is only used by higher-level data-binding functionality. The reason it is included here is that it can be stored and accessed hierarchically, and gets passed through data-binding.
  syntax:
    content: public Object getCurrentValue()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.core.base.GeneratorBase.getFeatureMask()
  id: getFeatureMask()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: getFeatureMask()
  nameWithType: GeneratorBase.getFeatureMask()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.getFeatureMask()
  overload: com.fasterxml.jackson.core.base.GeneratorBase.getFeatureMask*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Bulk access method for getting state of all standard (non-dataformat-specific) <xref uid="com.fasterxml.jackson.core.JsonGenerator.Feature" data-throw-if-not-resolved="false">JsonGenerator.Feature</xref>s.
  syntax:
    content: public int getFeatureMask()
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.GeneratorBase.getOutputContext()
  id: getOutputContext()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: getOutputContext()
  nameWithType: GeneratorBase.getOutputContext()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.getOutputContext()
  overload: com.fasterxml.jackson.core.base.GeneratorBase.getOutputContext*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: 'Note: type was co-variant until Jackson 2.7; reverted back to base type in 2.8 to allow for overriding by subtypes that use custom context type.'
  syntax:
    content: public JsonStreamContext getOutputContext()
    return:
      type: com.fasterxml.jackson.core.JsonStreamContext
- uid: com.fasterxml.jackson.core.base.GeneratorBase.isClosed()
  id: isClosed()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: isClosed()
  nameWithType: GeneratorBase.isClosed()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.isClosed()
  overload: com.fasterxml.jackson.core.base.GeneratorBase.isClosed*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method that can be called to determine whether this generator is closed or not. If it is closed, no more output can be done.
  syntax:
    content: public boolean isClosed()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.base.GeneratorBase.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  id: isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: isEnabled(JsonGenerator.Feature f)
  nameWithType: GeneratorBase.isEnabled(JsonGenerator.Feature f)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.isEnabled(JsonGenerator.Feature f)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.isEnabled*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method for checking whether given feature is enabled. Check <xref uid="" data-throw-if-not-resolved="false">Feature</xref> for list of available features.
  syntax:
    content: public final boolean isEnabled(JsonGenerator.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.JsonGenerator.Feature
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.base.GeneratorBase.overrideStdFeatures(int,int)
  id: overrideStdFeatures(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: overrideStdFeatures(int values, int mask)
  nameWithType: GeneratorBase.overrideStdFeatures(int values, int mask)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.overrideStdFeatures(int values, int mask)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.overrideStdFeatures*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Bulk set method for (re)setting states of features specified by `mask`. Functionally equivalent to `int oldState = getFeatureMask(); int newState = (oldState & ~mask) | (values & mask); setFeatureMask(newState);` but preferred as this lets caller more efficiently specify actual changes made.
  syntax:
    content: public JsonGenerator overrideStdFeatures(int values, int mask)
    parameters:
    - id: values
      type: int
    - id: mask
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.core.base.GeneratorBase.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  id: setCodec(com.fasterxml.jackson.core.ObjectCodec)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: setCodec(ObjectCodec oc)
  nameWithType: GeneratorBase.setCodec(ObjectCodec oc)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.setCodec(ObjectCodec oc)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.setCodec*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method that can be called to set or reset the object to use for writing Java objects as JsonContent (using method <xref uid="com.fasterxml.jackson.core.base.GeneratorBase.writeObject*" data-throw-if-not-resolved="false">#writeObject</xref>).
  syntax:
    content: public JsonGenerator setCodec(ObjectCodec oc)
    parameters:
    - id: oc
      type: com.fasterxml.jackson.core.ObjectCodec
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.core.base.GeneratorBase.setCurrentValue(java.lang.Object)
  id: setCurrentValue(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: setCurrentValue(Object v)
  nameWithType: GeneratorBase.setCurrentValue(Object v)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.setCurrentValue(Object v)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.setCurrentValue*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: 'Helper method, usually equivalent to: `getOutputContext().setCurrentValue(v);`'
  syntax:
    content: public void setCurrentValue(Object v)
    parameters:
    - id: v
      type: java.lang.Object
- uid: com.fasterxml.jackson.core.base.GeneratorBase.setFeatureMask(int)
  id: setFeatureMask(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: setFeatureMask(int newMask)
  nameWithType: GeneratorBase.setFeatureMask(int newMask)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.setFeatureMask(int newMask)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.setFeatureMask*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Bulk set method for (re)setting states of all standard <xref uid="" data-throw-if-not-resolved="false">Feature</xref>s
  syntax:
    content: public JsonGenerator setFeatureMask(int newMask)
    parameters:
    - id: newMask
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.core.base.GeneratorBase.useDefaultPrettyPrinter()
  id: useDefaultPrettyPrinter()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: useDefaultPrettyPrinter()
  nameWithType: GeneratorBase.useDefaultPrettyPrinter()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.useDefaultPrettyPrinter()
  overload: com.fasterxml.jackson.core.base.GeneratorBase.useDefaultPrettyPrinter*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Convenience method for enabling pretty-printing using the default pretty printer (<xref uid="com.fasterxml.jackson.core.util.DefaultPrettyPrinter" data-throw-if-not-resolved="false">com.fasterxml.jackson.core.util.DefaultPrettyPrinter</xref>).
  syntax:
    content: public JsonGenerator useDefaultPrettyPrinter()
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.core.base.GeneratorBase.version()
  id: version()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: version()
  nameWithType: GeneratorBase.version()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.version()
  overload: com.fasterxml.jackson.core.base.GeneratorBase.version*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Implemented with standard version number detection algorithm, typically using a simple generated class, with information extracted from Maven project file during build.
  syntax:
    content: public Version version()
    return:
      type: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int)
  id: writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: writeBinary(Base64Variant b64variant, InputStream data, int dataLength)
  nameWithType: GeneratorBase.writeBinary(Base64Variant b64variant, InputStream data, int dataLength)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeBinary(Base64Variant b64variant, InputStream data, int dataLength)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.writeBinary*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method similar to <xref uid="com.fasterxml.jackson.core.base.GeneratorBase.writeBinary*" data-throw-if-not-resolved="false">#writeBinary(Base64Variant,byte[],int,int)</xref>, but where input is provided through a stream, allowing for incremental writes without holding the whole input in memory.
  syntax:
    content: public int writeBinary(Base64Variant b64variant, InputStream data, int dataLength)
    parameters:
    - id: b64variant
      type: com.fasterxml.jackson.core.Base64Variant
    - id: data
      type: java.io.InputStream
    - id: dataLength
      type: int
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(com.fasterxml.jackson.core.SerializableString)
  id: writeFieldName(com.fasterxml.jackson.core.SerializableString)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: writeFieldName(SerializableString name)
  nameWithType: GeneratorBase.writeFieldName(SerializableString name)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(SerializableString name)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method similar to <xref uid="com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName*" data-throw-if-not-resolved="false">#writeFieldName(String)</xref>, main difference being that it may perform better as some of processing (such as quoting of certain characters, or encoding into external encoding if supported by generator) can be done just once and reused for later calls.


    Default implementation simple uses unprocessed name container in serialized String; implementations are strongly encouraged to make use of more efficient methods argument object has.
  syntax:
    content: public void writeFieldName(SerializableString name)
    parameters:
    - id: name
      type: com.fasterxml.jackson.core.SerializableString
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeObject(java.lang.Object)
  id: writeObject(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: writeObject(Object value)
  nameWithType: GeneratorBase.writeObject(Object value)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeObject(Object value)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.writeObject*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: 'Method for writing given Java object (POJO) as Json. Exactly how the object gets written depends on object in question (ad on codec, its configuration); for most beans it will result in JSON Object, but for others JSON Array, or String or numeric value (and for nulls, JSON null literal. **NOTE**: generator must have its **object codec** set to non-null value; for generators created by a mapping factory this is the case, for others not.'
  syntax:
    content: public void writeObject(Object value)
    parameters:
    - id: value
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(char[],int,int)
  id: writeRawValue(char[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: writeRawValue(char[] text, int offset, int len)
  nameWithType: GeneratorBase.writeRawValue(char[] text, int offset, int len)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(char[] text, int offset, int len)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: public void writeRawValue(char[] text, int offset, int len)
    parameters:
    - id: text
      type: char[]
    - id: offset
      type: int
    - id: len
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(com.fasterxml.jackson.core.SerializableString)
  id: writeRawValue(com.fasterxml.jackson.core.SerializableString)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: writeRawValue(SerializableString text)
  nameWithType: GeneratorBase.writeRawValue(SerializableString text)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(SerializableString text)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method similar to <xref uid="com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String)" data-throw-if-not-resolved="false">#writeRawValue(String)</xref>, but potentially more efficient as it may be able to use pre-encoded content (similar to <xref uid="com.fasterxml.jackson.core.base.GeneratorBase.writeRaw*" data-throw-if-not-resolved="false">#writeRaw(SerializableString)</xref>.
  syntax:
    content: public void writeRawValue(SerializableString text)
    parameters:
    - id: text
      type: com.fasterxml.jackson.core.SerializableString
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String)
  id: writeRawValue(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: writeRawValue(String text)
  nameWithType: GeneratorBase.writeRawValue(String text)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(String text)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method that will force generator to copy input text verbatim without any modifications, but assuming it must constitute a single legal JSON value (number, string, boolean, null, Array or List). Assuming this, proper separators are added if and as needed (comma or colon), and generator state updated to reflect this.
  syntax:
    content: public void writeRawValue(String text)
    parameters:
    - id: text
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String,int,int)
  id: writeRawValue(java.lang.String,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: writeRawValue(String text, int offset, int len)
  nameWithType: GeneratorBase.writeRawValue(String text, int offset, int len)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(String text, int offset, int len)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: public void writeRawValue(String text, int offset, int len)
    parameters:
    - id: text
      type: java.lang.String
    - id: offset
      type: int
    - id: len
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeStartObject(java.lang.Object)
  id: writeStartObject(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: writeStartObject(Object forValue)
  nameWithType: GeneratorBase.writeStartObject(Object forValue)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeStartObject(Object forValue)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.writeStartObject*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method for writing starting marker of an Object value to represent the given Java Object value. Argument is offered as metadata, but more importantly it should be assigned as the "current value" for the Object content that gets constructed and initialized.


    Object values can be written in any context where values are allowed: meaning everywhere except for when a field name is expected.
  syntax:
    content: public void writeStartObject(Object forValue)
    parameters:
    - id: forValue
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeString(com.fasterxml.jackson.core.SerializableString)
  id: writeString(com.fasterxml.jackson.core.SerializableString)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: writeString(SerializableString text)
  nameWithType: GeneratorBase.writeString(SerializableString text)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeString(SerializableString text)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.writeString*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method similar to <xref uid="com.fasterxml.jackson.core.base.GeneratorBase.writeString*" data-throw-if-not-resolved="false">#writeString(String)</xref>, but that takes <xref uid="com.fasterxml.jackson.core.SerializableString" data-throw-if-not-resolved="false">SerializableString</xref> which can make this potentially more efficient to call as generator may be able to reuse quoted and/or encoded representation.


    Default implementation just calls <xref uid="com.fasterxml.jackson.core.base.GeneratorBase.writeString*" data-throw-if-not-resolved="false">#writeString(String)</xref>; sub-classes should override it with more efficient implementation if possible.
  syntax:
    content: public void writeString(SerializableString text)
    parameters:
    - id: text
      type: com.fasterxml.jackson.core.SerializableString
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeTree(com.fasterxml.jackson.core.TreeNode)
  id: writeTree(com.fasterxml.jackson.core.TreeNode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.GeneratorBase
  langs:
  - java
  name: writeTree(TreeNode rootNode)
  nameWithType: GeneratorBase.writeTree(TreeNode rootNode)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeTree(TreeNode rootNode)
  overload: com.fasterxml.jackson.core.base.GeneratorBase.writeTree*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method for writing given JSON tree (expressed as a tree where given JsonNode is the root) using this generator. This will generally just call <xref uid="com.fasterxml.jackson.core.base.GeneratorBase.writeObject*" data-throw-if-not-resolved="false">#writeObject</xref> with given node, but is added for convenience and to make code more explicit in cases where it deals specifically with trees.
  syntax:
    content: public void writeTree(TreeNode rootNode)
    parameters:
    - id: rootNode
      type: com.fasterxml.jackson.core.TreeNode
  exceptions:
  - type: java.io.IOException
references:
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.ObjectCodec
  name: ObjectCodec
  nameWithType: ObjectCodec
  fullName: com.fasterxml.jackson.core.ObjectCodec
- uid: com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase*
  name: GeneratorBase
  nameWithType: GeneratorBase.GeneratorBase
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.GeneratorBase
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.json.JsonWriteContext
  name: JsonWriteContext
  nameWithType: JsonWriteContext
  fullName: com.fasterxml.jackson.core.json.JsonWriteContext
- uid: com.fasterxml.jackson.core.Version
  name: Version
  nameWithType: Version
  fullName: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.core.base.GeneratorBase.version*
  name: version
  nameWithType: GeneratorBase.version
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.version
  package: com.fasterxml.jackson.core.base
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.core.base.GeneratorBase.getCurrentValue*
  name: getCurrentValue
  nameWithType: GeneratorBase.getCurrentValue
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.getCurrentValue
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.GeneratorBase.setCurrentValue*
  name: setCurrentValue
  nameWithType: GeneratorBase.setCurrentValue
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.setCurrentValue
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.JsonGenerator.Feature
  name: JsonGenerator.Feature
  nameWithType: JsonGenerator.Feature
  fullName: com.fasterxml.jackson.core.JsonGenerator.Feature
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.base.GeneratorBase.isEnabled*
  name: isEnabled
  nameWithType: GeneratorBase.isEnabled
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.isEnabled
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.GeneratorBase.getFeatureMask*
  name: getFeatureMask
  nameWithType: GeneratorBase.getFeatureMask
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.getFeatureMask
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.core.base.GeneratorBase.enable*
  name: enable
  nameWithType: GeneratorBase.enable
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.enable
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.GeneratorBase.disable*
  name: disable
  nameWithType: GeneratorBase.disable
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.disable
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.GeneratorBase.setFeatureMask*
  name: setFeatureMask
  nameWithType: GeneratorBase.setFeatureMask
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.setFeatureMask
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.GeneratorBase.overrideStdFeatures*
  name: overrideStdFeatures
  nameWithType: GeneratorBase.overrideStdFeatures
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.overrideStdFeatures
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.GeneratorBase._checkStdFeatureChanges*
  name: _checkStdFeatureChanges
  nameWithType: GeneratorBase._checkStdFeatureChanges
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._checkStdFeatureChanges
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.GeneratorBase.useDefaultPrettyPrinter*
  name: useDefaultPrettyPrinter
  nameWithType: GeneratorBase.useDefaultPrettyPrinter
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.useDefaultPrettyPrinter
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.GeneratorBase.setCodec*
  name: setCodec
  nameWithType: GeneratorBase.setCodec
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.setCodec
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.GeneratorBase.getCodec*
  name: getCodec
  nameWithType: GeneratorBase.getCodec
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.getCodec
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.JsonStreamContext
  name: JsonStreamContext
  nameWithType: JsonStreamContext
  fullName: com.fasterxml.jackson.core.JsonStreamContext
- uid: com.fasterxml.jackson.core.base.GeneratorBase.getOutputContext*
  name: getOutputContext
  nameWithType: GeneratorBase.getOutputContext
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.getOutputContext
  package: com.fasterxml.jackson.core.base
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeStartObject*
  name: writeStartObject
  nameWithType: GeneratorBase.writeStartObject
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeStartObject
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.SerializableString
  name: SerializableString
  nameWithType: SerializableString
  fullName: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName*
  name: writeFieldName
  nameWithType: GeneratorBase.writeFieldName
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeString*
  name: writeString
  nameWithType: GeneratorBase.writeString
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeString
  package: com.fasterxml.jackson.core.base
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue*
  name: writeRawValue
  nameWithType: GeneratorBase.writeRawValue
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue
  package: com.fasterxml.jackson.core.base
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.Base64Variant
  name: Base64Variant
  nameWithType: Base64Variant
  fullName: com.fasterxml.jackson.core.Base64Variant
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeBinary*
  name: writeBinary
  nameWithType: GeneratorBase.writeBinary
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeBinary
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeObject*
  name: writeObject
  nameWithType: GeneratorBase.writeObject
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeObject
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.TreeNode
  name: TreeNode
  nameWithType: TreeNode
  fullName: com.fasterxml.jackson.core.TreeNode
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeTree*
  name: writeTree
  nameWithType: GeneratorBase.writeTree
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeTree
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.GeneratorBase.flush*
  name: flush
  nameWithType: GeneratorBase.flush
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.flush
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.GeneratorBase.close*
  name: close
  nameWithType: GeneratorBase.close
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.close
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.GeneratorBase.isClosed*
  name: isClosed
  nameWithType: GeneratorBase.isClosed
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.isClosed
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.GeneratorBase._releaseBuffers*
  name: _releaseBuffers
  nameWithType: GeneratorBase._releaseBuffers
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._releaseBuffers
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.GeneratorBase._verifyValueWrite*
  name: _verifyValueWrite
  nameWithType: GeneratorBase._verifyValueWrite
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._verifyValueWrite
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.PrettyPrinter
  name: PrettyPrinter
  nameWithType: PrettyPrinter
  fullName: com.fasterxml.jackson.core.PrettyPrinter
- uid: com.fasterxml.jackson.core.base.GeneratorBase._constructDefaultPrettyPrinter*
  name: _constructDefaultPrettyPrinter
  nameWithType: GeneratorBase._constructDefaultPrettyPrinter
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._constructDefaultPrettyPrinter
  package: com.fasterxml.jackson.core.base
- uid: java.math.BigDecimal
  spec.java:
  - uid: java.math.BigDecimal
    name: BigDecimal
    fullName: java.math.BigDecimal
- uid: com.fasterxml.jackson.core.base.GeneratorBase._asString*
  name: _asString
  nameWithType: GeneratorBase._asString
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._asString
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.GeneratorBase._decodeSurrogate*
  name: _decodeSurrogate
  nameWithType: GeneratorBase._decodeSurrogate
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._decodeSurrogate
  package: com.fasterxml.jackson.core.base
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeObjectField(java.lang.String,java.lang.Object)
  name: JsonGenerator.writeObjectField(String,Object)
  nameWithType: JsonGenerator.writeObjectField(String,Object)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeObjectField(java.lang.String,java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonGenerator.getFeatureMask()
  name: JsonGenerator.getFeatureMask()
  nameWithType: JsonGenerator.getFeatureMask()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getFeatureMask()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeArray(double[],int,int)
  name: JsonGenerator.writeArray(double[],int,int)
  nameWithType: JsonGenerator.writeArray(double[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeArray(double[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[])
  name: JsonGenerator.writeBinary(byte[])
  nameWithType: JsonGenerator.writeBinary(byte[])
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[])
- uid: com.fasterxml.jackson.core.JsonGenerator.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)
  name: JsonGenerator.copyCurrentEvent(JsonParser)
  nameWithType: JsonGenerator.copyCurrentEvent(JsonParser)
  fullName: com.fasterxml.jackson.core.JsonGenerator.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)
- uid: com.fasterxml.jackson.core.JsonGenerator.setFeatureMask(int)
  name: JsonGenerator.setFeatureMask(int)
  nameWithType: JsonGenerator.setFeatureMask(int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.setFeatureMask(int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeStartObject()
  name: JsonGenerator.writeStartObject()
  nameWithType: JsonGenerator.writeStartObject()
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeStartObject()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeArrayFieldStart(java.lang.String)
  name: JsonGenerator.writeArrayFieldStart(String)
  nameWithType: JsonGenerator.writeArrayFieldStart(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeArrayFieldStart(java.lang.String)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(double)
  name: JsonGenerator.writeNumber(double)
  nameWithType: JsonGenerator.writeNumber(double)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(double)
- uid: com.fasterxml.jackson.core.JsonGenerator.isEnabled(com.fasterxml.jackson.core.StreamWriteFeature)
  name: JsonGenerator.isEnabled(StreamWriteFeature)
  nameWithType: JsonGenerator.isEnabled(StreamWriteFeature)
  fullName: com.fasterxml.jackson.core.JsonGenerator.isEnabled(com.fasterxml.jackson.core.StreamWriteFeature)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeEndObject()
  name: JsonGenerator.writeEndObject()
  nameWithType: JsonGenerator.writeEndObject()
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeEndObject()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.core.JsonGenerator.getSchema()
  name: JsonGenerator.getSchema()
  nameWithType: JsonGenerator.getSchema()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getSchema()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNull()
  name: JsonGenerator.writeNull()
  nameWithType: JsonGenerator.writeNull()
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNull()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeRawValue(java.lang.String,int,int)
  name: JsonGenerator.writeRawValue(String,int,int)
  nameWithType: JsonGenerator.writeRawValue(String,int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeRawValue(java.lang.String,int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeStartObject(java.lang.Object,int)
  name: JsonGenerator.writeStartObject(Object,int)
  nameWithType: JsonGenerator.writeStartObject(Object,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeStartObject(java.lang.Object,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.getPrettyPrinter()
  name: JsonGenerator.getPrettyPrinter()
  nameWithType: JsonGenerator.getPrettyPrinter()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getPrettyPrinter()
- uid: com.fasterxml.jackson.core.JsonGenerator._reportUnsupportedOperation()
  name: JsonGenerator._reportUnsupportedOperation()
  nameWithType: JsonGenerator._reportUnsupportedOperation()
  fullName: com.fasterxml.jackson.core.JsonGenerator._reportUnsupportedOperation()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeStartArray(int)
  name: JsonGenerator.writeStartArray(int)
  nameWithType: JsonGenerator.writeStartArray(int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeStartArray(int)
- uid: com.fasterxml.jackson.core.JsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  name: JsonGenerator.isEnabled(JsonGenerator.Feature)
  nameWithType: JsonGenerator.isEnabled(JsonGenerator.Feature)
  fullName: com.fasterxml.jackson.core.JsonGenerator.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeRawValue(java.lang.String)
  name: JsonGenerator.writeRawValue(String)
  nameWithType: JsonGenerator.writeRawValue(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeRawValue(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator.canWriteTypeId()
  name: JsonGenerator.canWriteTypeId()
  nameWithType: JsonGenerator.canWriteTypeId()
  fullName: com.fasterxml.jackson.core.JsonGenerator.canWriteTypeId()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigDecimal)
  name: JsonGenerator.writeNumber(BigDecimal)
  nameWithType: JsonGenerator.writeNumber(BigDecimal)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigDecimal)
- uid: com.fasterxml.jackson.core.JsonGenerator.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
  name: JsonGenerator.copyCurrentStructure(JsonParser)
  nameWithType: JsonGenerator.copyCurrentStructure(JsonParser)
  fullName: com.fasterxml.jackson.core.JsonGenerator.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeStartObject(java.lang.Object)
  name: JsonGenerator.writeStartObject(Object)
  nameWithType: JsonGenerator.writeStartObject(Object)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeStartObject(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonGenerator.canWriteObjectId()
  name: JsonGenerator.canWriteObjectId()
  nameWithType: JsonGenerator.canWriteObjectId()
  fullName: com.fasterxml.jackson.core.JsonGenerator.canWriteObjectId()
- uid: com.fasterxml.jackson.core.JsonGenerator.getOutputBuffered()
  name: JsonGenerator.getOutputBuffered()
  nameWithType: JsonGenerator.getOutputBuffered()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getOutputBuffered()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeObjectRef(java.lang.Object)
  name: JsonGenerator.writeObjectRef(Object)
  nameWithType: JsonGenerator.writeObjectRef(Object)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeObjectRef(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonGenerator.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)
  name: JsonGenerator.setRootValueSeparator(SerializableString)
  nameWithType: JsonGenerator.setRootValueSeparator(SerializableString)
  fullName: com.fasterxml.jackson.core.JsonGenerator.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeObjectId(java.lang.Object)
  name: JsonGenerator.writeObjectId(Object)
  nameWithType: JsonGenerator.writeObjectId(Object)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeObjectId(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonGenerator.getCodec()
  name: JsonGenerator.getCodec()
  nameWithType: JsonGenerator.getCodec()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getCodec()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeArray(int[],int,int)
  name: JsonGenerator.writeArray(int[],int,int)
  nameWithType: JsonGenerator.writeArray(int[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeArray(int[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.configure(com.fasterxml.jackson.core.JsonGenerator.Feature,boolean)
  name: JsonGenerator.configure(JsonGenerator.Feature,boolean)
  nameWithType: JsonGenerator.configure(JsonGenerator.Feature,boolean)
  fullName: com.fasterxml.jackson.core.JsonGenerator.configure(com.fasterxml.jackson.core.JsonGenerator.Feature,boolean)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeEndArray()
  name: JsonGenerator.writeEndArray()
  nameWithType: JsonGenerator.writeEndArray()
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeEndArray()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeUTF8String(byte[],int,int)
  name: JsonGenerator.writeUTF8String(byte[],int,int)
  nameWithType: JsonGenerator.writeUTF8String(byte[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeUTF8String(byte[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeBoolean(boolean)
  name: JsonGenerator.writeBoolean(boolean)
  nameWithType: JsonGenerator.writeBoolean(boolean)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeBoolean(boolean)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)
  name: JsonGenerator.writeRaw(SerializableString)
  nameWithType: JsonGenerator.writeRaw(SerializableString)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)
- uid: com.fasterxml.jackson.core.JsonGenerator.getCurrentValue()
  name: JsonGenerator.getCurrentValue()
  nameWithType: JsonGenerator.getCurrentValue()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getCurrentValue()
- uid: com.fasterxml.jackson.core.JsonGenerator.disable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  name: JsonGenerator.disable(JsonGenerator.Feature)
  nameWithType: JsonGenerator.disable(JsonGenerator.Feature)
  fullName: com.fasterxml.jackson.core.JsonGenerator.disable(com.fasterxml.jackson.core.JsonGenerator.Feature)
- uid: com.fasterxml.jackson.core.JsonGenerator.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  name: JsonGenerator.setCodec(ObjectCodec)
  nameWithType: JsonGenerator.setCodec(ObjectCodec)
  fullName: com.fasterxml.jackson.core.JsonGenerator.setCodec(com.fasterxml.jackson.core.ObjectCodec)
- uid: com.fasterxml.jackson.core.JsonGenerator.close()
  name: JsonGenerator.close()
  nameWithType: JsonGenerator.close()
  fullName: com.fasterxml.jackson.core.JsonGenerator.close()
- uid: com.fasterxml.jackson.core.JsonGenerator.flush()
  name: JsonGenerator.flush()
  nameWithType: JsonGenerator.flush()
  fullName: com.fasterxml.jackson.core.JsonGenerator.flush()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeTypeId(java.lang.Object)
  name: JsonGenerator.writeTypeId(Object)
  nameWithType: JsonGenerator.writeTypeId(Object)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeTypeId(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonGenerator.getHighestEscapedChar()
  name: JsonGenerator.getHighestEscapedChar()
  nameWithType: JsonGenerator.getHighestEscapedChar()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getHighestEscapedChar()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeRawValue(char[],int,int)
  name: JsonGenerator.writeRawValue(char[],int,int)
  nameWithType: JsonGenerator.writeRawValue(char[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeRawValue(char[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[],int,int)
  name: JsonGenerator.writeBinary(byte[],int,int)
  nameWithType: JsonGenerator.writeBinary(byte[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeObjectFieldStart(java.lang.String)
  name: JsonGenerator.writeObjectFieldStart(String)
  nameWithType: JsonGenerator.writeObjectFieldStart(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeObjectFieldStart(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator._throwInternal()
  name: JsonGenerator._throwInternal()
  nameWithType: JsonGenerator._throwInternal()
  fullName: com.fasterxml.jackson.core.JsonGenerator._throwInternal()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeRaw(char[],int,int)
  name: JsonGenerator.writeRaw(char[],int,int)
  nameWithType: JsonGenerator.writeRaw(char[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeRaw(char[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.getCharacterEscapes()
  name: JsonGenerator.getCharacterEscapes()
  nameWithType: JsonGenerator.getCharacterEscapes()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getCharacterEscapes()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeStartArray()
  name: JsonGenerator.writeStartArray()
  nameWithType: JsonGenerator.writeStartArray()
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeStartArray()
- uid: com.fasterxml.jackson.core.JsonGenerator.getOutputTarget()
  name: JsonGenerator.getOutputTarget()
  nameWithType: JsonGenerator.getOutputTarget()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getOutputTarget()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)
  name: JsonGenerator.writeFieldName(SerializableString)
  nameWithType: JsonGenerator.writeFieldName(SerializableString)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeBinaryField(java.lang.String,byte[])
  name: JsonGenerator.writeBinaryField(String,byte[])
  nameWithType: JsonGenerator.writeBinaryField(String,byte[])
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeBinaryField(java.lang.String,byte[])
- uid: com.fasterxml.jackson.core.JsonGenerator.writeStartArray(java.lang.Object,int)
  name: JsonGenerator.writeStartArray(Object,int)
  nameWithType: JsonGenerator.writeStartArray(Object,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeStartArray(java.lang.Object,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.setCurrentValue(java.lang.Object)
  name: JsonGenerator.setCurrentValue(Object)
  nameWithType: JsonGenerator.setCurrentValue(Object)
  fullName: com.fasterxml.jackson.core.JsonGenerator.setCurrentValue(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.lang.String)
  name: JsonGenerator.writeNumber(String)
  nameWithType: JsonGenerator.writeNumber(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(char[],int,int)
  name: JsonGenerator.writeNumber(char[],int,int)
  nameWithType: JsonGenerator.writeNumber(char[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(char[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)
  name: JsonGenerator.writeRaw(char)
  nameWithType: JsonGenerator.writeRaw(char)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)
- uid: com.fasterxml.jackson.core.JsonGenerator.enable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  name: JsonGenerator.enable(JsonGenerator.Feature)
  nameWithType: JsonGenerator.enable(JsonGenerator.Feature)
  fullName: com.fasterxml.jackson.core.JsonGenerator.enable(com.fasterxml.jackson.core.JsonGenerator.Feature)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(long)
  name: JsonGenerator.writeNumber(long)
  nameWithType: JsonGenerator.writeNumber(long)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(long)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(float)
  name: JsonGenerator.writeNumber(float)
  nameWithType: JsonGenerator.writeNumber(float)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(float)
- uid: com.fasterxml.jackson.core.JsonGenerator.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)
  name: JsonGenerator.setCharacterEscapes(CharacterEscapes)
  nameWithType: JsonGenerator.setCharacterEscapes(CharacterEscapes)
  fullName: com.fasterxml.jackson.core.JsonGenerator.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)
- uid: com.fasterxml.jackson.core.JsonGenerator.overrideStdFeatures(int,int)
  name: JsonGenerator.overrideStdFeatures(int,int)
  nameWithType: JsonGenerator.overrideStdFeatures(int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.overrideStdFeatures(int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigInteger)
  name: JsonGenerator.writeNumber(BigInteger)
  nameWithType: JsonGenerator.writeNumber(BigInteger)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigInteger)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String)
  name: JsonGenerator.writeRaw(String)
  nameWithType: JsonGenerator.writeRaw(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeRawUTF8String(byte[],int,int)
  name: JsonGenerator.writeRawUTF8String(byte[],int,int)
  nameWithType: JsonGenerator.writeRawUTF8String(byte[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeRawUTF8String(byte[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.canWriteFormattedNumbers()
  name: JsonGenerator.canWriteFormattedNumbers()
  nameWithType: JsonGenerator.canWriteFormattedNumbers()
  fullName: com.fasterxml.jackson.core.JsonGenerator.canWriteFormattedNumbers()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int)
  name: JsonGenerator.writeBinary(Base64Variant,InputStream,int)
  nameWithType: JsonGenerator.writeBinary(Base64Variant,InputStream,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeArray(long[],int,int)
  name: JsonGenerator.writeArray(long[],int,int)
  nameWithType: JsonGenerator.writeArray(long[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeArray(long[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator._reportError(java.lang.String)
  name: JsonGenerator._reportError(String)
  nameWithType: JsonGenerator._reportError(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator._reportError(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeStringField(java.lang.String,java.lang.String)
  name: JsonGenerator.writeStringField(String,String)
  nameWithType: JsonGenerator.writeStringField(String,String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeStringField(java.lang.String,java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeTypePrefix(com.fasterxml.jackson.core.type.WritableTypeId)
  name: JsonGenerator.writeTypePrefix(WritableTypeId)
  nameWithType: JsonGenerator.writeTypePrefix(WritableTypeId)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeTypePrefix(com.fasterxml.jackson.core.type.WritableTypeId)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(short)
  name: JsonGenerator.writeNumber(short)
  nameWithType: JsonGenerator.writeNumber(short)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(short)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeTypeSuffix(com.fasterxml.jackson.core.type.WritableTypeId)
  name: JsonGenerator.writeTypeSuffix(WritableTypeId)
  nameWithType: JsonGenerator.writeTypeSuffix(WritableTypeId)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeTypeSuffix(com.fasterxml.jackson.core.type.WritableTypeId)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeString(java.lang.String)
  name: JsonGenerator.writeString(String)
  nameWithType: JsonGenerator.writeString(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeString(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
  name: JsonGenerator.canUseSchema(FormatSchema)
  nameWithType: JsonGenerator.canUseSchema(FormatSchema)
  fullName: com.fasterxml.jackson.core.JsonGenerator.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeBooleanField(java.lang.String,boolean)
  name: JsonGenerator.writeBooleanField(String,boolean)
  nameWithType: JsonGenerator.writeBooleanField(String,boolean)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeBooleanField(java.lang.String,boolean)
- uid: com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)
  name: JsonGenerator.setSchema(FormatSchema)
  nameWithType: JsonGenerator.setSchema(FormatSchema)
  fullName: com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeArray(java.lang.String[],int,int)
  name: JsonGenerator.writeArray(String[],int,int)
  nameWithType: JsonGenerator.writeArray(String[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeArray(java.lang.String[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.version()
  name: JsonGenerator.version()
  nameWithType: JsonGenerator.version()
  fullName: com.fasterxml.jackson.core.JsonGenerator.version()
- uid: com.fasterxml.jackson.core.JsonGenerator.useDefaultPrettyPrinter()
  name: JsonGenerator.useDefaultPrettyPrinter()
  nameWithType: JsonGenerator.useDefaultPrettyPrinter()
  fullName: com.fasterxml.jackson.core.JsonGenerator.useDefaultPrettyPrinter()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,long)
  name: JsonGenerator.writeNumberField(String,long)
  nameWithType: JsonGenerator.writeNumberField(String,long)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,long)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNullField(java.lang.String)
  name: JsonGenerator.writeNullField(String)
  nameWithType: JsonGenerator.writeNullField(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNullField(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator.setHighestNonEscapedChar(int)
  name: JsonGenerator.setHighestNonEscapedChar(int)
  nameWithType: JsonGenerator.setHighestNonEscapedChar(int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.setHighestNonEscapedChar(int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeStartArray(java.lang.Object)
  name: JsonGenerator.writeStartArray(Object)
  nameWithType: JsonGenerator.writeStartArray(Object)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeStartArray(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonGenerator.isClosed()
  name: JsonGenerator.isClosed()
  nameWithType: JsonGenerator.isClosed()
  fullName: com.fasterxml.jackson.core.JsonGenerator.isClosed()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeObject(java.lang.Object)
  name: JsonGenerator.writeObject(Object)
  nameWithType: JsonGenerator.writeObject(Object)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeObject(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String,int,int)
  name: JsonGenerator.writeRaw(String,int,int)
  nameWithType: JsonGenerator.writeRaw(String,int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String,int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator._verifyOffsets(int,int,int)
  name: JsonGenerator._verifyOffsets(int,int,int)
  nameWithType: JsonGenerator._verifyOffsets(int,int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator._verifyOffsets(int,int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeEmbeddedObject(java.lang.Object)
  name: JsonGenerator.writeEmbeddedObject(Object)
  nameWithType: JsonGenerator.writeEmbeddedObject(Object)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeEmbeddedObject(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,float)
  name: JsonGenerator.writeNumberField(String,float)
  nameWithType: JsonGenerator.writeNumberField(String,float)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,float)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeString(java.io.Reader,int)
  name: JsonGenerator.writeString(Reader,int)
  nameWithType: JsonGenerator.writeString(Reader,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeString(java.io.Reader,int)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.core.JsonGenerator.canOmitFields()
  name: JsonGenerator.canOmitFields()
  nameWithType: JsonGenerator.canOmitFields()
  fullName: com.fasterxml.jackson.core.JsonGenerator.canOmitFields()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)
  name: JsonGenerator.writeBinary(Base64Variant,byte[],int,int)
  nameWithType: JsonGenerator.writeBinary(Base64Variant,byte[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)
  name: JsonGenerator.writeString(SerializableString)
  nameWithType: JsonGenerator.writeString(SerializableString)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeString(com.fasterxml.jackson.core.SerializableString)
- uid: com.fasterxml.jackson.core.JsonGenerator.canWriteBinaryNatively()
  name: JsonGenerator.canWriteBinaryNatively()
  nameWithType: JsonGenerator.canWriteBinaryNatively()
  fullName: com.fasterxml.jackson.core.JsonGenerator.canWriteBinaryNatively()
- uid: com.fasterxml.jackson.core.JsonGenerator.getFormatFeatures()
  name: JsonGenerator.getFormatFeatures()
  nameWithType: JsonGenerator.getFormatFeatures()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getFormatFeatures()
- uid: com.fasterxml.jackson.core.JsonGenerator.overrideFormatFeatures(int,int)
  name: JsonGenerator.overrideFormatFeatures(int,int)
  nameWithType: JsonGenerator.overrideFormatFeatures(int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.overrideFormatFeatures(int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)
  name: JsonGenerator.setPrettyPrinter(PrettyPrinter)
  nameWithType: JsonGenerator.setPrettyPrinter(PrettyPrinter)
  fullName: com.fasterxml.jackson.core.JsonGenerator.setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)
- uid: com.fasterxml.jackson.core.JsonGenerator._writeSimpleObject(java.lang.Object)
  name: JsonGenerator._writeSimpleObject(Object)
  nameWithType: JsonGenerator._writeSimpleObject(Object)
  fullName: com.fasterxml.jackson.core.JsonGenerator._writeSimpleObject(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonGenerator.getOutputContext()
  name: JsonGenerator.getOutputContext()
  nameWithType: JsonGenerator.getOutputContext()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getOutputContext()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,int)
  name: JsonGenerator.writeNumberField(String,int)
  nameWithType: JsonGenerator.writeNumberField(String,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(int)
  name: JsonGenerator.writeNumber(int)
  nameWithType: JsonGenerator.writeNumber(int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(int)
- uid: com.fasterxml.jackson.core.JsonGenerator._copyCurrentContents(com.fasterxml.jackson.core.JsonParser)
  name: JsonGenerator._copyCurrentContents(JsonParser)
  nameWithType: JsonGenerator._copyCurrentContents(JsonParser)
  fullName: com.fasterxml.jackson.core.JsonGenerator._copyCurrentContents(com.fasterxml.jackson.core.JsonParser)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeOmittedField(java.lang.String)
  name: JsonGenerator.writeOmittedField(String)
  nameWithType: JsonGenerator.writeOmittedField(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeOmittedField(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeFieldId(long)
  name: JsonGenerator.writeFieldId(long)
  nameWithType: JsonGenerator.writeFieldId(long)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeFieldId(long)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeBinary(java.io.InputStream,int)
  name: JsonGenerator.writeBinary(InputStream,int)
  nameWithType: JsonGenerator.writeBinary(InputStream,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeBinary(java.io.InputStream,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,java.math.BigInteger)
  name: JsonGenerator.writeNumberField(String,BigInteger)
  nameWithType: JsonGenerator.writeNumberField(String,BigInteger)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,java.math.BigInteger)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,java.math.BigDecimal)
  name: JsonGenerator.writeNumberField(String,BigDecimal)
  nameWithType: JsonGenerator.writeNumberField(String,BigDecimal)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,java.math.BigDecimal)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,double)
  name: JsonGenerator.writeNumberField(String,double)
  nameWithType: JsonGenerator.writeNumberField(String,double)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,double)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,short)
  name: JsonGenerator.writeNumberField(String,short)
  nameWithType: JsonGenerator.writeNumberField(String,short)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,short)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)
  name: JsonGenerator.writeFieldName(String)
  nameWithType: JsonGenerator.writeFieldName(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeRawValue(com.fasterxml.jackson.core.SerializableString)
  name: JsonGenerator.writeRawValue(SerializableString)
  nameWithType: JsonGenerator.writeRawValue(SerializableString)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeRawValue(com.fasterxml.jackson.core.SerializableString)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeString(char[],int,int)
  name: JsonGenerator.writeString(char[],int,int)
  nameWithType: JsonGenerator.writeString(char[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeString(char[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeTree(com.fasterxml.jackson.core.TreeNode)
  name: JsonGenerator.writeTree(TreeNode)
  nameWithType: JsonGenerator.writeTree(TreeNode)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeTree(com.fasterxml.jackson.core.TreeNode)
