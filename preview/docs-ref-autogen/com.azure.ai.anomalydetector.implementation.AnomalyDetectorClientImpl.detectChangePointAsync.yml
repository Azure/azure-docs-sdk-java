### YamlMime:JavaMember
uid: "com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointAsync*"
fullName: "com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointAsync"
name: "detectChangePointAsync"
nameWithType: "AnomalyDetectorClientImpl.detectChangePointAsync"
members:
- uid: "com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointAsync(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)"
  fullName: "com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointAsync(ChangePointDetectRequest body)"
  name: "detectChangePointAsync(ChangePointDetectRequest body)"
  nameWithType: "AnomalyDetectorClientImpl.detectChangePointAsync(ChangePointDetectRequest body)"
  summary: "Evaluate change point score of every series point."
  parameters:
  - description: "Time series points and granularity is needed. Advanced model parameters can also be set in the\n     request if needed."
    name: "body"
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ChangePointDetectRequest?alt=com.azure.ai.anomalydetector.models.ChangePointDetectRequest&text=ChangePointDetectRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<ChangePointDetectResponse> detectChangePointAsync(ChangePointDetectRequest body)"
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.anomalydetector.models.ChangePointDetectResponse?alt=com.azure.ai.anomalydetector.models.ChangePointDetectResponse&text=ChangePointDetectResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointAsync(com.azure.ai.anomalydetector.models.ChangePointDetectRequest,com.azure.core.util.Context)"
  fullName: "com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl.detectChangePointAsync(ChangePointDetectRequest body, Context context)"
  name: "detectChangePointAsync(ChangePointDetectRequest body, Context context)"
  nameWithType: "AnomalyDetectorClientImpl.detectChangePointAsync(ChangePointDetectRequest body, Context context)"
  summary: "Evaluate change point score of every series point."
  parameters:
  - description: "Time series points and granularity is needed. Advanced model parameters can also be set in the\n     request if needed."
    name: "body"
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ChangePointDetectRequest?alt=com.azure.ai.anomalydetector.models.ChangePointDetectRequest&text=ChangePointDetectRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<ChangePointDetectResponse> detectChangePointAsync(ChangePointDetectRequest body, Context context)"
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.anomalydetector.models.ChangePointDetectResponse?alt=com.azure.ai.anomalydetector.models.ChangePointDetectResponse&text=ChangePointDetectResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.anomalydetector.implementation"
artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
