### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties"
fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties"
name: "MediaServiceProperties"
nameWithType: "MediaServiceProperties"
summary: "Properties of the Media Services account."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class MediaServiceProperties"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.MediaServiceProperties()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.MediaServiceProperties()"
  name: "MediaServiceProperties()"
  nameWithType: "MediaServiceProperties.MediaServiceProperties()"
  syntax: "public MediaServiceProperties()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.encryption()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.encryption()"
  name: "encryption()"
  nameWithType: "MediaServiceProperties.encryption()"
  summary: "Get the encryption property: The account encryption properties."
  syntax: "public AccountEncryption encryption()"
  desc: "Get the encryption property: The account encryption properties."
  returns:
    description: "the encryption value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.AccountEncryption?alt=com.azure.resourcemanager.mediaservices.models.AccountEncryption&text=AccountEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.keyDelivery()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.keyDelivery()"
  name: "keyDelivery()"
  nameWithType: "MediaServiceProperties.keyDelivery()"
  summary: "Get the key<wbr>Delivery property: The Key Delivery properties for Media Services account."
  syntax: "public KeyDelivery keyDelivery()"
  desc: "Get the keyDelivery property: The Key Delivery properties for Media Services account."
  returns:
    description: "the keyDelivery value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.KeyDelivery?alt=com.azure.resourcemanager.mediaservices.models.KeyDelivery&text=KeyDelivery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.mediaServiceId()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.mediaServiceId()"
  name: "mediaServiceId()"
  nameWithType: "MediaServiceProperties.mediaServiceId()"
  summary: "Get the media<wbr>Service<wbr>Id property: The Media Services account ID."
  syntax: "public UUID mediaServiceId()"
  desc: "Get the mediaServiceId property: The Media Services account ID."
  returns:
    description: "the mediaServiceId value."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.privateEndpointConnections()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.privateEndpointConnections()"
  name: "privateEndpointConnections()"
  nameWithType: "MediaServiceProperties.privateEndpointConnections()"
  summary: "Get the private<wbr>Endpoint<wbr>Connections property: The Private Endpoint Connections created for the Media Service account."
  syntax: "public List<PrivateEndpointConnectionInner> privateEndpointConnections()"
  desc: "Get the privateEndpointConnections property: The Private Endpoint Connections created for the Media Service account."
  returns:
    description: "the privateEndpointConnections value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.PrivateEndpointConnectionInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "MediaServiceProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Provisioning state of the Media Services account."
  syntax: "public ProvisioningState provisioningState()"
  desc: "Get the provisioningState property: Provisioning state of the Media Services account."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ProvisioningState?alt=com.azure.resourcemanager.mediaservices.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "MediaServiceProperties.publicNetworkAccess()"
  summary: "Get the public<wbr>Network<wbr>Access property: Whether or not public network access is allowed for resources under the Media Services account."
  syntax: "public PublicNetworkAccess publicNetworkAccess()"
  desc: "Get the publicNetworkAccess property: Whether or not public network access is allowed for resources under the Media Services account."
  returns:
    description: "the publicNetworkAccess value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.PublicNetworkAccess?alt=com.azure.resourcemanager.mediaservices.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.storageAccounts()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.storageAccounts()"
  name: "storageAccounts()"
  nameWithType: "MediaServiceProperties.storageAccounts()"
  summary: "Get the storage<wbr>Accounts property: The storage accounts for this resource."
  syntax: "public List<StorageAccount> storageAccounts()"
  desc: "Get the storageAccounts property: The storage accounts for this resource."
  returns:
    description: "the storageAccounts value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.StorageAccount?alt=com.azure.resourcemanager.mediaservices.models.StorageAccount&text=StorageAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.storageAuthentication()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.storageAuthentication()"
  name: "storageAuthentication()"
  nameWithType: "MediaServiceProperties.storageAuthentication()"
  summary: "Get the storage<wbr>Authentication property: The storage<wbr>Authentication property."
  syntax: "public StorageAuthentication storageAuthentication()"
  desc: "Get the storageAuthentication property: The storageAuthentication property."
  returns:
    description: "the storageAuthentication value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StorageAuthentication?alt=com.azure.resourcemanager.mediaservices.models.StorageAuthentication&text=StorageAuthentication\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.validate()"
  name: "validate()"
  nameWithType: "MediaServiceProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.withEncryption(com.azure.resourcemanager.mediaservices.models.AccountEncryption)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.withEncryption(AccountEncryption encryption)"
  name: "withEncryption(AccountEncryption encryption)"
  nameWithType: "MediaServiceProperties.withEncryption(AccountEncryption encryption)"
  summary: "Set the encryption property: The account encryption properties."
  parameters:
  - description: "the encryption value to set."
    name: "encryption"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.AccountEncryption?alt=com.azure.resourcemanager.mediaservices.models.AccountEncryption&text=AccountEncryption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MediaServiceProperties withEncryption(AccountEncryption encryption)"
  desc: "Set the encryption property: The account encryption properties."
  returns:
    description: "the MediaServiceProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties&text=MediaServiceProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.withKeyDelivery(com.azure.resourcemanager.mediaservices.models.KeyDelivery)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.withKeyDelivery(KeyDelivery keyDelivery)"
  name: "withKeyDelivery(KeyDelivery keyDelivery)"
  nameWithType: "MediaServiceProperties.withKeyDelivery(KeyDelivery keyDelivery)"
  summary: "Set the key<wbr>Delivery property: The Key Delivery properties for Media Services account."
  parameters:
  - description: "the keyDelivery value to set."
    name: "keyDelivery"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.KeyDelivery?alt=com.azure.resourcemanager.mediaservices.models.KeyDelivery&text=KeyDelivery\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MediaServiceProperties withKeyDelivery(KeyDelivery keyDelivery)"
  desc: "Set the keyDelivery property: The Key Delivery properties for Media Services account."
  returns:
    description: "the MediaServiceProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties&text=MediaServiceProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.withPublicNetworkAccess(com.azure.resourcemanager.mediaservices.models.PublicNetworkAccess)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  name: "withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  nameWithType: "MediaServiceProperties.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  summary: "Set the public<wbr>Network<wbr>Access property: Whether or not public network access is allowed for resources under the Media Services account."
  parameters:
  - description: "the publicNetworkAccess value to set."
    name: "publicNetworkAccess"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.PublicNetworkAccess?alt=com.azure.resourcemanager.mediaservices.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MediaServiceProperties withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  desc: "Set the publicNetworkAccess property: Whether or not public network access is allowed for resources under the Media Services account."
  returns:
    description: "the MediaServiceProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties&text=MediaServiceProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.withStorageAccounts(java.util.List<com.azure.resourcemanager.mediaservices.models.StorageAccount>)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.withStorageAccounts(List<StorageAccount> storageAccounts)"
  name: "withStorageAccounts(List<StorageAccount> storageAccounts)"
  nameWithType: "MediaServiceProperties.withStorageAccounts(List<StorageAccount> storageAccounts)"
  summary: "Set the storage<wbr>Accounts property: The storage accounts for this resource."
  parameters:
  - description: "the storageAccounts value to set."
    name: "storageAccounts"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.StorageAccount?alt=com.azure.resourcemanager.mediaservices.models.StorageAccount&text=StorageAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public MediaServiceProperties withStorageAccounts(List<StorageAccount> storageAccounts)"
  desc: "Set the storageAccounts property: The storage accounts for this resource."
  returns:
    description: "the MediaServiceProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties&text=MediaServiceProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.withStorageAuthentication(com.azure.resourcemanager.mediaservices.models.StorageAuthentication)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties.withStorageAuthentication(StorageAuthentication storageAuthentication)"
  name: "withStorageAuthentication(StorageAuthentication storageAuthentication)"
  nameWithType: "MediaServiceProperties.withStorageAuthentication(StorageAuthentication storageAuthentication)"
  summary: "Set the storage<wbr>Authentication property: The storage<wbr>Authentication property."
  parameters:
  - description: "the storageAuthentication value to set."
    name: "storageAuthentication"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StorageAuthentication?alt=com.azure.resourcemanager.mediaservices.models.StorageAuthentication&text=StorageAuthentication\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MediaServiceProperties withStorageAuthentication(StorageAuthentication storageAuthentication)"
  desc: "Set the storageAuthentication property: The storageAuthentication property."
  returns:
    description: "the MediaServiceProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceProperties&text=MediaServiceProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Properties of the Media Services account."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0-beta.1
