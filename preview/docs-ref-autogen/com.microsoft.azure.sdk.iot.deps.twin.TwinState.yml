### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState
  id: TwinState
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin
  children:
  - com.microsoft.azure.sdk.iot.deps.twin.TwinState.TwinState(com.microsoft.azure.sdk.iot.deps.twin.TwinCollection,com.microsoft.azure.sdk.iot.deps.twin.TwinCollection,com.microsoft.azure.sdk.iot.deps.twin.TwinCollection)
  - com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromDesiredPropertyJson(java.lang.String)
  - com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromPropertiesJson(java.lang.String)
  - com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromReportedPropertyJson(java.lang.String)
  - com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromTwinJson(java.lang.String)
  - com.microsoft.azure.sdk.iot.deps.twin.TwinState.getConfigurations()
  - com.microsoft.azure.sdk.iot.deps.twin.TwinState.getConnectionState()
  - com.microsoft.azure.sdk.iot.deps.twin.TwinState.getDesiredProperty()
  - com.microsoft.azure.sdk.iot.deps.twin.TwinState.getReportedProperty()
  - com.microsoft.azure.sdk.iot.deps.twin.TwinState.getTags()
  - com.microsoft.azure.sdk.iot.deps.twin.TwinState.toJsonElement()
  - com.microsoft.azure.sdk.iot.deps.twin.TwinState.toString()
  langs:
  - java
  name: TwinState
  nameWithType: TwinState
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState
  type: Class
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: >-
    Representation of a single Twin.


    The TwinState can contain one <xref uid="com.microsoft.azure.sdk.iot.deps.twin.TwinCollection" data-throw-if-not-resolved="false">TwinCollection</xref> of **Tags**, and one <xref uid="com.microsoft.azure.sdk.iot.deps.twin.TwinCollection" data-throw-if-not-resolved="false">TwinCollection</xref> of **properties.desired**.


    Each entity in the collections can contain a associated <xref uid="com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata" data-throw-if-not-resolved="false">TwinMetadata</xref>.


    These metadata are provided by the Service and contains information about the last updated date time, and version.


    For instance, the following is a valid TwinState, represented as `initialTwin` in the rest API.


    ```java

    {
              "initialTwin": {
                  "tags":{
                      "SpeedUnity":"MPH",
                      "$metadata":{
                          "$lastUpdated":"2017-09-21T02:07:44.238Z",
                          "$lastUpdatedVersion":4,
                          "SpeedUnity":{
                              "$lastUpdated":"2017-09-21T02:07:44.238Z",
                              "$lastUpdatedVersion":4
                          }
                      },
                      "$version":4
                  },
                  "properties":{
                      "desired": {
                          "MaxSpeed":{
                              "Value":500,
                              "NewValue":300
                          },
                          "$metadata":{
                              "$lastUpdated":"2017-09-21T02:07:44.238Z",
                              "$lastUpdatedVersion":4,
                              "MaxSpeed":{
                                  "$lastUpdated":"2017-09-21T02:07:44.238Z",
                                  "$lastUpdatedVersion":4,
                                  "Value":{
                                      "$lastUpdated":"2017-09-21T02:07:44.238Z",
                                      "$lastUpdatedVersion":4
                                  },
                                  "NewValue":{
                                      "$lastUpdated":"2017-09-21T02:07:44.238Z",
                                      "$lastUpdatedVersion":4
                                  }
                              }
                          },
                          "$version":4
                      },
                      "reported": {
                          "MaxSpeed":{
                              "Value":500,
                              "NewValue":300
                          },
                          "$metadata":{
                              "$lastUpdated":"2017-09-21T02:07:44.238Z",
                              "$lastUpdatedVersion":5,
                              "MaxSpeed":{
                                  "$lastUpdated":"2017-09-21T02:07:44.238Z",
                                  "$lastUpdatedVersion":4,
                                  "Value":{
                                      "$lastUpdated":"2017-09-21T02:07:44.238Z",
                                      "$lastUpdatedVersion":5
                                  },
                                  "NewValue":{
                                      "$lastUpdated":"2017-09-21T02:07:44.238Z",
                                      "$lastUpdatedVersion":4
                                  }
                              }
                          },
                          "$version":6
                      }
                  }
              }
          }
    ```
  syntax:
    content: public class TwinState extends RegisterManager
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.sdk.iot.deps.twin.RegisterManager
  inheritedMembers:
  - com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.getCapabilities()
  - com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.getDeviceId()
  - com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.getETag()
  - com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.getModuleId()
  - com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.getVersion()
  - com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.setCapabilities(com.microsoft.azure.sdk.iot.deps.twin.DeviceCapabilities)
  - com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.setDeviceId(java.lang.String)
  - com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.setETag(java.lang.String)
  - com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.setModuleId(java.lang.String)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.TwinState()
  id: TwinState()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinState
  langs:
  - java
  name: TwinState()
  nameWithType: TwinState.TwinState()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.TwinState()
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinState.TwinState*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: >-
    Empty constructor


    Used only by the tools that will deserialize this class.
  syntax:
    content: " TwinState()"
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.TwinState(com.microsoft.azure.sdk.iot.deps.twin.TwinCollection,com.microsoft.azure.sdk.iot.deps.twin.TwinCollection,com.microsoft.azure.sdk.iot.deps.twin.TwinCollection)
  id: TwinState(com.microsoft.azure.sdk.iot.deps.twin.TwinCollection,com.microsoft.azure.sdk.iot.deps.twin.TwinCollection,com.microsoft.azure.sdk.iot.deps.twin.TwinCollection)
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinState
  langs:
  - java
  name: TwinState(TwinCollection tags, TwinCollection desiredProperty, TwinCollection reportedProperty)
  nameWithType: TwinState.TwinState(TwinCollection tags, TwinCollection desiredProperty, TwinCollection reportedProperty)
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.TwinState(TwinCollection tags, TwinCollection desiredProperty, TwinCollection reportedProperty)
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinState.TwinState*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: "CONSTRUCTOR\n\nThis constructor creates an instance of the TwinState with the provided <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> tags and desired properties.\n\nWhen serialized, this class will looks like the following example:\n\n```java\n\"initialTwin\": {\n              \"tags\":{\n                  \"SpeedUnity\":\"MPH\",\n                  \"$version\":4\n              }\n              \"properties\":{\n                  \"desired\":{\n                      \"MaxSpeed\":{\n                          \"Value\":500,\n                          \"NewValue\":300\n                      },\n                      \"$version\":4\n                  }\n              }\n          }\n      \n     }\n```"
  syntax:
    content: public TwinState(TwinCollection tags, TwinCollection desiredProperty, TwinCollection reportedProperty)
    parameters:
    - id: tags
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
      description: the <xref uid="com.microsoft.azure.sdk.iot.deps.twin.TwinCollection" data-throw-if-not-resolved="false">TwinCollection</xref> with the initial tags state. It can be <code>null</code>.
    - id: desiredProperty
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
      description: the <xref uid="com.microsoft.azure.sdk.iot.deps.twin.TwinCollection" data-throw-if-not-resolved="false">TwinCollection</xref> with the desired properties. It can be <code>null</code>.
    - id: reportedProperty
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
      description: the <xref uid="com.microsoft.azure.sdk.iot.deps.twin.TwinCollection" data-throw-if-not-resolved="false">TwinCollection</xref> with the reported properties. It can be <code>null</code>.
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromDesiredPropertyJson(java.lang.String)
  id: createFromDesiredPropertyJson(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinState
  langs:
  - java
  name: createFromDesiredPropertyJson(String json)
  nameWithType: TwinState.createFromDesiredPropertyJson(String json)
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromDesiredPropertyJson(String json)
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromDesiredPropertyJson*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: >-
    Factory


    Create a new instance of the TwinState parsing the provided string as a JSON with only desired properties information.
  syntax:
    content: public static TwinState createFromDesiredPropertyJson(String json)
    parameters:
    - id: json
      type: java.lang.String
      description: the <code>String</code> with the JSON received from the service. It cannot be <code>null</code> or empty.
    return:
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinState
      description: The new instance of the <code>TwinState</code>.
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromPropertiesJson(java.lang.String)
  id: createFromPropertiesJson(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinState
  langs:
  - java
  name: createFromPropertiesJson(String json)
  nameWithType: TwinState.createFromPropertiesJson(String json)
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromPropertiesJson(String json)
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromPropertiesJson*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: >-
    Factory


    Create a new instance of the TwinState parsing the provided string as a JSON with only desired properties information.
  syntax:
    content: public static TwinState createFromPropertiesJson(String json)
    parameters:
    - id: json
      type: java.lang.String
      description: the <code>String</code> with the JSON received from the service. It cannot be <code>null</code> or empty.
    return:
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinState
      description: The new instance of the <code>TwinState</code>.
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromReportedPropertyJson(java.lang.String)
  id: createFromReportedPropertyJson(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinState
  langs:
  - java
  name: createFromReportedPropertyJson(String json)
  nameWithType: TwinState.createFromReportedPropertyJson(String json)
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromReportedPropertyJson(String json)
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromReportedPropertyJson*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: >-
    Factory


    Create a new instance of the TwinState parsing the provided string as a JSON with only reported properties information.
  syntax:
    content: public static TwinState createFromReportedPropertyJson(String json)
    parameters:
    - id: json
      type: java.lang.String
      description: the <code>String</code> with the JSON received from the service. It cannot be <code>null</code> or empty.
    return:
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinState
      description: The new instance of the <code>TwinState</code>.
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromTwinJson(java.lang.String)
  id: createFromTwinJson(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinState
  langs:
  - java
  name: createFromTwinJson(String json)
  nameWithType: TwinState.createFromTwinJson(String json)
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromTwinJson(String json)
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromTwinJson*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: >-
    Factory


    Create a new instance of the TwinState parsing the provided string as a JSON with the full Twin information.
  syntax:
    content: public static TwinState createFromTwinJson(String json)
    parameters:
    - id: json
      type: java.lang.String
      description: the <code>String</code> with the JSON received from the service. It cannot be <code>null</code> or empty.
    return:
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinState
      description: The new instance of the <code>TwinState</code>.
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getConfigurations()
  id: getConfigurations()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinState
  langs:
  - java
  name: getConfigurations()
  nameWithType: TwinState.getConfigurations()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getConfigurations()
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getConfigurations*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: Getter for the configurations
  syntax:
    content: public Map<String,ConfigurationInfo> getConfigurations()
    return:
      type: java.util.Map<java.lang.String,com.microsoft.azure.sdk.iot.deps.twin.ConfigurationInfo>
      description: The configurations. It can be <code>null</code>.
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getConnectionState()
  id: getConnectionState()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinState
  langs:
  - java
  name: getConnectionState()
  nameWithType: TwinState.getConnectionState()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getConnectionState()
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getConnectionState*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: Get the connection state
  syntax:
    content: public String getConnectionState()
    return:
      type: java.lang.String
      description: the connection state
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getDesiredProperty()
  id: getDesiredProperty()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinState
  langs:
  - java
  name: getDesiredProperty()
  nameWithType: TwinState.getDesiredProperty()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getDesiredProperty()
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getDesiredProperty*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: Getter for the desired property.
  syntax:
    content: public TwinCollection getDesiredProperty()
    return:
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
      description: The <code>TwinCollection</code> with the desired property content. It can be <code>null</code>.
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getReportedProperty()
  id: getReportedProperty()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinState
  langs:
  - java
  name: getReportedProperty()
  nameWithType: TwinState.getReportedProperty()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getReportedProperty()
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getReportedProperty*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: Getter for the reported property.
  syntax:
    content: public TwinCollection getReportedProperty()
    return:
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
      description: The <code>TwinCollection</code> with the reported property content. It can be <code>null</code>.
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getTags()
  id: getTags()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinState
  langs:
  - java
  name: getTags()
  nameWithType: TwinState.getTags()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getTags()
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getTags*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: Getter for the tags.
  syntax:
    content: public TwinCollection getTags()
    return:
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
      description: The <code>TwinCollection</code> with the tags content. It can be <code>null</code>.
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.toJsonElement()
  id: toJsonElement()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinState
  langs:
  - java
  name: toJsonElement()
  nameWithType: TwinState.toJsonElement()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.toJsonElement()
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinState.toJsonElement*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: >-
    Serializer


    Creates a `JsonElement`, which the content represents the information in this class and its subclasses in a JSON format. This is useful if the caller will integrate this JSON with JSON from other classes to generate a consolidated JSON.
  syntax:
    content: public JsonElement toJsonElement()
    return:
      type: com.google.gson.JsonElement
      description: The <code>JsonElement</code> with the content of this class.
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.toString()
  id: toString()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinState
  langs:
  - java
  name: toString()
  nameWithType: TwinState.toString()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.toString()
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinState.toString*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: Creates a pretty print JSON with the content of this class and subclasses.
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
      description: The <code>String</code> with the pretty print JSON.
references:
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
  name: TwinCollection
  nameWithType: TwinCollection
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.TwinState*
  name: TwinState
  nameWithType: TwinState.TwinState
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.TwinState
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: com.google.gson.JsonElement
  spec.java:
  - uid: com.google.gson.JsonElement
    name: JsonElement
    fullName: com.google.gson.JsonElement
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.toJsonElement*
  name: toJsonElement
  nameWithType: TwinState.toJsonElement
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.toJsonElement
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getTags*
  name: getTags
  nameWithType: TwinState.getTags
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getTags
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getDesiredProperty*
  name: getDesiredProperty
  nameWithType: TwinState.getDesiredProperty
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getDesiredProperty
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getReportedProperty*
  name: getReportedProperty
  nameWithType: TwinState.getReportedProperty
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getReportedProperty
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: java.util.Map<java.lang.String,com.microsoft.azure.sdk.iot.deps.twin.ConfigurationInfo>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.sdk.iot.deps.twin.ConfigurationInfo
    name: ConfigurationInfo
    fullName: com.microsoft.azure.sdk.iot.deps.twin.ConfigurationInfo
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getConfigurations*
  name: getConfigurations
  nameWithType: TwinState.getConfigurations
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getConfigurations
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.toString*
  name: toString
  nameWithType: TwinState.toString
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.toString
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromTwinJson*
  name: createFromTwinJson
  nameWithType: TwinState.createFromTwinJson
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromTwinJson
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromDesiredPropertyJson*
  name: createFromDesiredPropertyJson
  nameWithType: TwinState.createFromDesiredPropertyJson
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromDesiredPropertyJson
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromReportedPropertyJson*
  name: createFromReportedPropertyJson
  nameWithType: TwinState.createFromReportedPropertyJson
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromReportedPropertyJson
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromPropertiesJson*
  name: createFromPropertiesJson
  nameWithType: TwinState.createFromPropertiesJson
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromPropertiesJson
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getConnectionState*
  name: getConnectionState
  nameWithType: TwinState.getConnectionState
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState.getConnectionState
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager
  name: RegisterManager
  nameWithType: RegisterManager
  fullName: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.setModuleId(java.lang.String)
  name: RegisterManager.setModuleId(String)
  nameWithType: RegisterManager.setModuleId(String)
  fullName: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.setModuleId(java.lang.String)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.getVersion()
  name: RegisterManager.getVersion()
  nameWithType: RegisterManager.getVersion()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.getVersion()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.setCapabilities(com.microsoft.azure.sdk.iot.deps.twin.DeviceCapabilities)
  name: RegisterManager.setCapabilities(DeviceCapabilities)
  nameWithType: RegisterManager.setCapabilities(DeviceCapabilities)
  fullName: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.setCapabilities(com.microsoft.azure.sdk.iot.deps.twin.DeviceCapabilities)
- uid: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.setETag(java.lang.String)
  name: RegisterManager.setETag(String)
  nameWithType: RegisterManager.setETag(String)
  fullName: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.setETag(java.lang.String)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.getETag()
  name: RegisterManager.getETag()
  nameWithType: RegisterManager.getETag()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.getETag()
- uid: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.getDeviceId()
  name: RegisterManager.getDeviceId()
  nameWithType: RegisterManager.getDeviceId()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.getDeviceId()
- uid: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.getCapabilities()
  name: RegisterManager.getCapabilities()
  nameWithType: RegisterManager.getCapabilities()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.getCapabilities()
- uid: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.getModuleId()
  name: RegisterManager.getModuleId()
  nameWithType: RegisterManager.getModuleId()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.getModuleId()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.setDeviceId(java.lang.String)
  name: RegisterManager.setDeviceId(String)
  nameWithType: RegisterManager.setDeviceId(String)
  fullName: com.microsoft.azure.sdk.iot.deps.twin.RegisterManager.setDeviceId(java.lang.String)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,com.microsoft.azure.sdk.iot.deps.twin.ConfigurationInfo
  name: String,ConfigurationInfo
  nameWithType: String,ConfigurationInfo
  fullName: java.lang.String,com.microsoft.azure.sdk.iot.deps.twin.ConfigurationInfo
