### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.util.LRUMap"
fullName: "com.fasterxml.jackson.databind.util.LRUMap<K,V>"
name: "LRUMap<K,V>"
nameWithType: "LRUMap<K,V>"
summary: "Helper for simple bounded maps used for reusing lookup values.\n\nNote that serialization behavior is such that contents are NOT serialized, on assumption that all use cases are for caching where persistence does not make sense. The only thing serialized is the cache size of Map.\n\nNOTE: since version 2.4.2, this is **NOT** an LRU-based at all; reason being that it is not possible to use JDK components that do LRU \\_AND\\_ perform well wrt synchronization on multi-core systems. So we choose efficient synchronization over potentially more efficient handling of entries.\n\nAnd yes, there are efficient LRU implementations such as [concurrentlinkedhashmap][]; but at this point we really try to keep external deps to minimum. But perhaps a shaded variant may be used one day.\n\n\n[concurrentlinkedhashmap]: https://code.google.com/p/concurrentlinkedhashmap/"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class LRUMap<K,V> implements Serializable"
constructors:
- "com.fasterxml.jackson.databind.util.LRUMap.LRUMap(int,int)"
fields:
- "com.fasterxml.jackson.databind.util.LRUMap._jdkSerializeMaxEntries"
- "com.fasterxml.jackson.databind.util.LRUMap._map"
- "com.fasterxml.jackson.databind.util.LRUMap._maxEntries"
methods:
- "com.fasterxml.jackson.databind.util.LRUMap.clear()"
- "com.fasterxml.jackson.databind.util.LRUMap.get(java.lang.Object)"
- "com.fasterxml.jackson.databind.util.LRUMap.put(K,V)"
- "com.fasterxml.jackson.databind.util.LRUMap.putIfAbsent(K,V)"
- "com.fasterxml.jackson.databind.util.LRUMap.readResolve()"
- "com.fasterxml.jackson.databind.util.LRUMap.size()"
type: "class"
typeParameters:
- name: "K"
- name: "V"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.util"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
