### YamlMime:JavaType
uid: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments"
fullName: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments"
name: "ManagedEnvironments"
nameWithType: "ManagedEnvironments"
summary: "Resource collection API of Managed<wbr>Environments."
syntax: "public interface ManagedEnvironments"
methods:
- uid: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.define(String name)"
  name: "define(String name)"
  nameWithType: "ManagedEnvironments.define(String name)"
  summary: "Begins definition for a new Managed<wbr>Environment resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ManagedEnvironment.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new ManagedEnvironment resource."
  returns:
    description: "the first stage of the new ManagedEnvironment definition."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.ManagedEnvironment.DefinitionStages.Blank?alt=com.azure.resourcemanager.appcontainers.models.ManagedEnvironment.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.delete(String resourceGroupName, String environmentName, Context context)"
  name: "delete(String resourceGroupName, String environmentName, Context context)"
  nameWithType: "ManagedEnvironments.delete(String resourceGroupName, String environmentName, Context context)"
  summary: "Delete a Managed Environment if it does not have any container apps."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Environment."
    name: "environmentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String environmentName, Context context)"
  desc: "Delete a Managed Environment if it does not have any container apps."
- uid: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "ManagedEnvironments.deleteById(String id)"
  summary: "Delete a Managed Environment if it does not have any container apps."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Delete a Managed Environment if it does not have any container apps."
- uid: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "ManagedEnvironments.deleteByIdWithResponse(String id, Context context)"
  summary: "Delete a Managed Environment if it does not have any container apps."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByIdWithResponse(String id, Context context)"
  desc: "Delete a Managed Environment if it does not have any container apps."
- uid: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.deleteByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.deleteByResourceGroup(String resourceGroupName, String environmentName)"
  name: "deleteByResourceGroup(String resourceGroupName, String environmentName)"
  nameWithType: "ManagedEnvironments.deleteByResourceGroup(String resourceGroupName, String environmentName)"
  summary: "Delete a Managed Environment if it does not have any container apps."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Environment."
    name: "environmentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByResourceGroup(String resourceGroupName, String environmentName)"
  desc: "Delete a Managed Environment if it does not have any container apps."
- uid: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.getById(String id)"
  name: "getById(String id)"
  nameWithType: "ManagedEnvironments.getById(String id)"
  summary: "Get the properties of a Managed Environment used to host container apps."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ManagedEnvironment getById(String id)"
  desc: "Get the properties of a Managed Environment used to host container apps."
  returns:
    description: "the properties of a Managed Environment used to host container apps along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.ManagedEnvironment?alt=com.azure.resourcemanager.appcontainers.models.ManagedEnvironment&text=ManagedEnvironment\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "ManagedEnvironments.getByIdWithResponse(String id, Context context)"
  summary: "Get the properties of a Managed Environment used to host container apps."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ManagedEnvironment> getByIdWithResponse(String id, Context context)"
  desc: "Get the properties of a Managed Environment used to host container apps."
  returns:
    description: "the properties of a Managed Environment used to host container apps along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.ManagedEnvironment?alt=com.azure.resourcemanager.appcontainers.models.ManagedEnvironment&text=ManagedEnvironment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.getByResourceGroup(String resourceGroupName, String environmentName)"
  name: "getByResourceGroup(String resourceGroupName, String environmentName)"
  nameWithType: "ManagedEnvironments.getByResourceGroup(String resourceGroupName, String environmentName)"
  summary: "Get the properties of a Managed Environment used to host container apps."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Environment."
    name: "environmentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ManagedEnvironment getByResourceGroup(String resourceGroupName, String environmentName)"
  desc: "Get the properties of a Managed Environment used to host container apps."
  returns:
    description: "the properties of a Managed Environment used to host container apps."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.ManagedEnvironment?alt=com.azure.resourcemanager.appcontainers.models.ManagedEnvironment&text=ManagedEnvironment\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.getByResourceGroupWithResponse(String resourceGroupName, String environmentName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String environmentName, Context context)"
  nameWithType: "ManagedEnvironments.getByResourceGroupWithResponse(String resourceGroupName, String environmentName, Context context)"
  summary: "Get the properties of a Managed Environment used to host container apps."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Environment."
    name: "environmentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ManagedEnvironment> getByResourceGroupWithResponse(String resourceGroupName, String environmentName, Context context)"
  desc: "Get the properties of a Managed Environment used to host container apps."
  returns:
    description: "the properties of a Managed Environment used to host container apps along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.ManagedEnvironment?alt=com.azure.resourcemanager.appcontainers.models.ManagedEnvironment&text=ManagedEnvironment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.list()"
  fullName: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.list()"
  name: "list()"
  nameWithType: "ManagedEnvironments.list()"
  summary: "Get all Managed Environments for a subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<ManagedEnvironment> list()"
  desc: "Get all Managed Environments for a subscription."
  returns:
    description: "all Managed Environments for a subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.ManagedEnvironment?alt=com.azure.resourcemanager.appcontainers.models.ManagedEnvironment&text=ManagedEnvironment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.list(Context context)"
  name: "list(Context context)"
  nameWithType: "ManagedEnvironments.list(Context context)"
  summary: "Get all Managed Environments for a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ManagedEnvironment> list(Context context)"
  desc: "Get all Managed Environments for a subscription."
  returns:
    description: "all Managed Environments for a subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.ManagedEnvironment?alt=com.azure.resourcemanager.appcontainers.models.ManagedEnvironment&text=ManagedEnvironment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "ManagedEnvironments.listByResourceGroup(String resourceGroupName)"
  summary: "Get all the Managed Environments in a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ManagedEnvironment> listByResourceGroup(String resourceGroupName)"
  desc: "Get all the Managed Environments in a resource group."
  returns:
    description: "all the Managed Environments in a resource group as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.ManagedEnvironment?alt=com.azure.resourcemanager.appcontainers.models.ManagedEnvironment&text=ManagedEnvironment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "ManagedEnvironments.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "Get all the Managed Environments in a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ManagedEnvironment> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "Get all the Managed Environments in a resource group."
  returns:
    description: "all the Managed Environments in a resource group as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.ManagedEnvironment?alt=com.azure.resourcemanager.appcontainers.models.ManagedEnvironment&text=ManagedEnvironment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.update(java.lang.String,java.lang.String,com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.update(String resourceGroupName, String environmentName, ManagedEnvironmentInner environmentEnvelope)"
  name: "update(String resourceGroupName, String environmentName, ManagedEnvironmentInner environmentEnvelope)"
  nameWithType: "ManagedEnvironments.update(String resourceGroupName, String environmentName, ManagedEnvironmentInner environmentEnvelope)"
  summary: "Patches a Managed Environment using JSON Merge Patch."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Environment."
    name: "environmentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Configuration details of the Environment."
    name: "environmentEnvelope"
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner?alt=com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner&text=ManagedEnvironmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void update(String resourceGroupName, String environmentName, ManagedEnvironmentInner environmentEnvelope)"
  desc: "Patches a Managed Environment using JSON Merge Patch."
- uid: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.update(java.lang.String,java.lang.String,com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ManagedEnvironments.update(String resourceGroupName, String environmentName, ManagedEnvironmentInner environmentEnvelope, Context context)"
  name: "update(String resourceGroupName, String environmentName, ManagedEnvironmentInner environmentEnvelope, Context context)"
  nameWithType: "ManagedEnvironments.update(String resourceGroupName, String environmentName, ManagedEnvironmentInner environmentEnvelope, Context context)"
  summary: "Patches a Managed Environment using JSON Merge Patch."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the Environment."
    name: "environmentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Configuration details of the Environment."
    name: "environmentEnvelope"
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner?alt=com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner&text=ManagedEnvironmentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void update(String resourceGroupName, String environmentName, ManagedEnvironmentInner environmentEnvelope, Context context)"
  desc: "Patches a Managed Environment using JSON Merge Patch."
type: "interface"
desc: "Resource collection API of ManagedEnvironments."
metadata: {}
package: "com.azure.resourcemanager.appcontainers.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appcontainers:1.0.0-beta.3
