### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw*"
fullName: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw"
name: "writeRaw"
nameWithType: "UTF8JsonGenerator.writeRaw"
members:
- uid: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char)"
  fullName: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char ch)"
  name: "writeRaw(char ch)"
  nameWithType: "UTF8JsonGenerator.writeRaw(char ch)"
  summary: "Method that will force generator to copy input text verbatim with **no** modifications (including that no escaping is done and no separators are added even if context \\[array, object\\] would otherwise require such). If such separators are desired, use <xref uid=\"com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRawValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeRawValue(String)\"></xref> instead.\n\nNote that not all generator implementations necessarily support such by-pass methods: those that do not will throw <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UnsupportedOperationException\"></xref>."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)"
  parameters:
  - name: "ch"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeRaw(char ch)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char[],int,int)"
  fullName: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char[] cbuf, int offset, int len)"
  name: "writeRaw(char[] cbuf, int offset, int len)"
  nameWithType: "UTF8JsonGenerator.writeRaw(char[] cbuf, int offset, int len)"
  summary: "Method that will force generator to copy input text verbatim with **no** modifications (including that no escaping is done and no separators are added even if context \\[array, object\\] would otherwise require such). If such separators are desired, use <xref uid=\"com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRawValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeRawValue(String)\"></xref> instead.\n\nNote that not all generator implementations necessarily support such by-pass methods: those that do not will throw <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UnsupportedOperationException\"></xref>."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeRaw(char[],int,int)"
  parameters:
  - name: "cbuf"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "offset"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "len"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final void writeRaw(char[] cbuf, int offset, int len)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)"
  fullName: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(SerializableString text)"
  name: "writeRaw(SerializableString text)"
  nameWithType: "UTF8JsonGenerator.writeRaw(SerializableString text)"
  summary: "Method that will force generator to copy input text verbatim with **no** modifications (including that no escaping is done and no separators are added even if context \\[array, object\\] would otherwise require such). If such separators are desired, use <xref uid=\"com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRawValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeRawValue(String)\"></xref> instead.\n\nNote that not all generator implementations necessarily support such by-pass methods: those that do not will throw <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UnsupportedOperationException\"></xref>.\n\nThe default implementation delegates to <xref uid=\"com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeRaw(String)\"></xref>; other backends that support raw inclusion of text are encouraged to implement it in more efficient manner (especially if they use UTF-8 encoding)."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)"
  parameters:
  - name: "text"
    type: "<xref href=\"com.fasterxml.jackson.core.SerializableString?alt=com.fasterxml.jackson.core.SerializableString&text=SerializableString\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeRaw(SerializableString text)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String)"
  fullName: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(String text)"
  name: "writeRaw(String text)"
  nameWithType: "UTF8JsonGenerator.writeRaw(String text)"
  summary: "Method that will force generator to copy input text verbatim with **no** modifications (including that no escaping is done and no separators are added even if context \\[array, object\\] would otherwise require such). If such separators are desired, use <xref uid=\"com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRawValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeRawValue(String)\"></xref> instead.\n\nNote that not all generator implementations necessarily support such by-pass methods: those that do not will throw <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UnsupportedOperationException\"></xref>."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String)"
  parameters:
  - name: "text"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeRaw(String text)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(java.lang.String,int,int)"
  fullName: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(String text, int offset, int len)"
  name: "writeRaw(String text, int offset, int len)"
  nameWithType: "UTF8JsonGenerator.writeRaw(String text, int offset, int len)"
  summary: "Method that will force generator to copy input text verbatim with **no** modifications (including that no escaping is done and no separators are added even if context \\[array, object\\] would otherwise require such). If such separators are desired, use <xref uid=\"com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRawValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeRawValue(String)\"></xref> instead.\n\nNote that not all generator implementations necessarily support such by-pass methods: those that do not will throw <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UnsupportedOperationException\"></xref>."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String,int,int)"
  parameters:
  - name: "text"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "offset"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "len"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeRaw(String text, int offset, int len)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.json"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
