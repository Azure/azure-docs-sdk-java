### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Sets.immutableEnumSet*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>immutableEnumSet"
name: "<E>immutableEnumSet"
nameWithType: "Sets.<E>immutableEnumSet"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>immutableEnumSet(E,E...)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>immutableEnumSet(E anElement, E[] otherElements)"
  name: "<E>immutableEnumSet(E anElement, E[] otherElements)"
  nameWithType: "Sets.<E>immutableEnumSet(E anElement, E[] otherElements)"
  summary: "Returns an immutable set instance containing the given enum elements. Internally, the returned set will be backed by an <xref uid=\"java.util.EnumSet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnumSet\"></xref>.\n\nThe iteration order of the returned set follows the enum's iteration order, not the order in which the elements are provided to the method."
  parameters:
  - description: "one of the elements the set should contain"
    name: "anElement"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - description: "the rest of the elements the set should contain"
    name: "otherElements"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static ImmutableSet<E> <E>immutableEnumSet(E anElement, E[] otherElements)"
  returns:
    description: "an immutable set containing those elements, minus duplicates"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSet&text=ImmutableSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>immutableEnumSet(java.lang.Iterable<E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>immutableEnumSet(Iterable<E> elements)"
  name: "<E>immutableEnumSet(Iterable<E> elements)"
  nameWithType: "Sets.<E>immutableEnumSet(Iterable<E> elements)"
  summary: "Returns an immutable set instance containing the given enum elements. Internally, the returned set will be backed by an <xref uid=\"java.util.EnumSet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnumSet\"></xref>.\n\nThe iteration order of the returned set follows the enum's iteration order, not the order in which the elements appear in the given collection."
  parameters:
  - description: "the elements, all of the same <code>enum</code> type, that the set should contain"
    name: "elements"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableSet<E> <E>immutableEnumSet(Iterable<E> elements)"
  returns:
    description: "an immutable set containing those elements, minus duplicates"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSet&text=ImmutableSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
