### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider
  id: NullsAsEmptyProvider
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl
  children:
  - com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.NullsAsEmptyProvider(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider._deserializer
  - com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.getNullAccessPattern()
  - com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.getNullValue(com.fasterxml.jackson.databind.DeserializationContext)
  langs:
  - java
  name: NullsAsEmptyProvider
  nameWithType: NullsAsEmptyProvider
  fullName: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider
  type: Class
  package: com.fasterxml.jackson.databind.deser.impl
  summary: Simple <xref uid="com.fasterxml.jackson.databind.deser.NullValueProvider" data-throw-if-not-resolved="false">NullValueProvider</xref> that will always throw a <xref uid="com.fasterxml.jackson.databind.exc.InvalidNullException" data-throw-if-not-resolved="false">InvalidNullException</xref> when a null is encountered.
  syntax:
    content: public class NullsAsEmptyProvider implements NullValueProvider, Serializable
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.databind.deser.NullValueProvider
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.NullsAsEmptyProvider(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: NullsAsEmptyProvider(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider
  langs:
  - java
  name: NullsAsEmptyProvider(JsonDeserializer<?> deser)
  nameWithType: NullsAsEmptyProvider.NullsAsEmptyProvider(JsonDeserializer<?> deser)
  fullName: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.NullsAsEmptyProvider(JsonDeserializer<?> deser)
  overload: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.NullsAsEmptyProvider*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: public NullsAsEmptyProvider(JsonDeserializer<?> deser)
    parameters:
    - id: deser
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
- uid: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider._deserializer
  id: _deserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider
  langs:
  - java
  name: _deserializer
  nameWithType: NullsAsEmptyProvider._deserializer
  fullName: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider._deserializer
  type: Field
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: protected final JsonDeserializer<?> _deserializer
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
- uid: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.getNullAccessPattern()
  id: getNullAccessPattern()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider
  langs:
  - java
  name: getNullAccessPattern()
  nameWithType: NullsAsEmptyProvider.getNullAccessPattern()
  fullName: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.getNullAccessPattern()
  overload: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.getNullAccessPattern*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  summary: Accessor that may be used to determine if and when provider must be called to access null replacement value.
  syntax:
    content: public AccessPattern getNullAccessPattern()
    return:
      type: com.fasterxml.jackson.databind.util.AccessPattern
- uid: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.getNullValue(com.fasterxml.jackson.databind.DeserializationContext)
  id: getNullValue(com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider
  langs:
  - java
  name: getNullValue(DeserializationContext ctxt)
  nameWithType: NullsAsEmptyProvider.getNullValue(DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.getNullValue(DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.getNullValue*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  summary: >-
    Method called to possibly convert incoming \`null\` token (read via underlying streaming input source) into other value of type accessor supports. May return \`null\`, or value compatible with type binding.


    NOTE: if <xref uid="com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.getNullAccessPattern()" data-throw-if-not-resolved="false">#getNullAccessPattern()</xref> returns \`ALWAYS\_NULL\` or \`CONSTANT\`, this method WILL NOT use provided \`ctxt\` and it may thus be passed as \`null\`.
  syntax:
    content: public Object getNullValue(DeserializationContext ctxt)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
references:
- uid: com.fasterxml.jackson.databind.JsonDeserializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.NullsAsEmptyProvider*
  name: NullsAsEmptyProvider
  nameWithType: NullsAsEmptyProvider.NullsAsEmptyProvider
  fullName: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.NullsAsEmptyProvider
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.util.AccessPattern
  name: AccessPattern
  nameWithType: AccessPattern
  fullName: com.fasterxml.jackson.databind.util.AccessPattern
- uid: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.getNullAccessPattern*
  name: getNullAccessPattern
  nameWithType: NullsAsEmptyProvider.getNullAccessPattern
  fullName: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.getNullAccessPattern
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.getNullValue*
  name: getNullValue
  nameWithType: NullsAsEmptyProvider.getNullValue
  fullName: com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.getNullValue
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.NullValueProvider
  name: NullValueProvider
  nameWithType: NullValueProvider
  fullName: com.fasterxml.jackson.databind.deser.NullValueProvider
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
