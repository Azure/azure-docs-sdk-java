### YamlMime:JavaType
uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithCreate"
fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithCreate"
name: "DataLakeStoreAccount.DefinitionStages.WithCreate"
nameWithType: "DataLakeStoreAccount.DefinitionStages.WithCreate"
summary: "The stage of the DataLakeStoreAccount definition which contains all the minimum required properties for the resource to be created, but also allows for any other optional properties to be specified."
syntax: "public static interface DataLakeStoreAccount.DefinitionStages.WithCreate extends DataLakeStoreAccount.DefinitionStages.WithTags, DataLakeStoreAccount.DefinitionStages.WithIdentity, DataLakeStoreAccount.DefinitionStages.WithDefaultGroup, DataLakeStoreAccount.DefinitionStages.WithEncryptionConfig, DataLakeStoreAccount.DefinitionStages.WithEncryptionState, DataLakeStoreAccount.DefinitionStages.WithFirewallRules, DataLakeStoreAccount.DefinitionStages.WithVirtualNetworkRules, DataLakeStoreAccount.DefinitionStages.WithFirewallState, DataLakeStoreAccount.DefinitionStages.WithFirewallAllowAzureIps, DataLakeStoreAccount.DefinitionStages.WithTrustedIdProviders, DataLakeStoreAccount.DefinitionStages.WithTrustedIdProviderState, DataLakeStoreAccount.DefinitionStages.WithNewTier"
methods:
- "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithCreate.create()"
- "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithCreate.create(com.azure.core.util.Context)"
type: "interface"
implements:
- "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithDefaultGroup?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithDefaultGroup&text=WithDefaultGroup\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithEncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithEncryptionConfig&text=WithEncryptionConfig\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithEncryptionState?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithEncryptionState&text=WithEncryptionState\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithFirewallAllowAzureIps?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithFirewallAllowAzureIps&text=WithFirewallAllowAzureIps\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithFirewallRules?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithFirewallRules&text=WithFirewallRules\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithFirewallState?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithFirewallState&text=WithFirewallState\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithIdentity?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithIdentity&text=WithIdentity\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithNewTier?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithNewTier&text=WithNewTier\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithTags?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithTags&text=WithTags\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithTrustedIdProviderState?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithTrustedIdProviderState&text=WithTrustedIdProviderState\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithTrustedIdProviders?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithTrustedIdProviders&text=WithTrustedIdProviders\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithVirtualNetworkRules?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.DefinitionStages.WithVirtualNetworkRules&text=WithVirtualNetworkRules\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.datalakestore.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datalakestore:1.0.0-beta.1
