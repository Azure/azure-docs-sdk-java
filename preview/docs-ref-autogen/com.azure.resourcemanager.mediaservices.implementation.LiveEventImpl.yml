### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl"
fullName: "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl"
name: "LiveEventImpl"
nameWithType: "LiveEventImpl"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LiveEventImpl implements LiveEvent, LiveEvent.Definition, LiveEvent.Update"
methods:
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.apply()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.apply(com.azure.core.util.Context)"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.create()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.create(com.azure.core.util.Context)"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.created()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.crossSiteAccessPolicies()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.description()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.encoding()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.hostnamePrefix()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.id()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.innerModel()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.input()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.lastModified()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.location()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.name()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.preview()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.provisioningState()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.refresh()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.refresh(com.azure.core.util.Context)"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.region()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.regionName()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.resourceState()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.streamOptions()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.tags()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.transcriptions()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.type()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.update()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.useStaticHostname()"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.withAutoStart(java.lang.Boolean)"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.withCrossSiteAccessPolicies(com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies)"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.withDescription(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.withEncoding(com.azure.resourcemanager.mediaservices.models.LiveEventEncoding)"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.withExistingMediaservice(java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.withHostnamePrefix(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.withInput(com.azure.resourcemanager.mediaservices.models.LiveEventInput)"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.withPreview(com.azure.resourcemanager.mediaservices.models.LiveEventPreview)"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.withRegion(com.azure.core.management.Region)"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.withRegion(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.withStreamOptions(java.util.List<com.azure.resourcemanager.mediaservices.models.StreamOptionsFlag>)"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.withTranscriptions(java.util.List<com.azure.resourcemanager.mediaservices.models.LiveEventTranscription>)"
- "com.azure.resourcemanager.mediaservices.implementation.LiveEventImpl.withUseStaticHostname(java.lang.Boolean)"
type: "class"
implements:
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEvent.Definition?alt=com.azure.resourcemanager.mediaservices.models.LiveEvent.Definition&text=Definition\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEvent.Update?alt=com.azure.resourcemanager.mediaservices.models.LiveEvent.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEvent?alt=com.azure.resourcemanager.mediaservices.models.LiveEvent&text=LiveEvent\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.mediaservices.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:1.0.0-beta.1
