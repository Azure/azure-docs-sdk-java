### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.ForwardingConcurrentMap"
fullName: "com.azure.cosmos.implementation.guava25.collect.ForwardingConcurrentMap<K,V>"
name: "ForwardingConcurrentMap<K,V>"
nameWithType: "ForwardingConcurrentMap<K,V>"
summary: "A concurrent map which forwards all its method calls to another concurrent map. Subclasses should override one or more methods to modify the behavior of the backing map as desired per the [decorator pattern][].\n\n**`default` method warning:** This class forwards calls to *only some* `default` methods. Specifically, it forwards calls only for methods that existed [before `default` methods were introduced][before _default_ methods were introduced]. For newer methods, like `forEach`, it inherits their default implementations. When those implementations invoke methods, they invoke methods on the `ForwardingConcurrentMap`.\n\n\n[decorator pattern]: http://en.wikipedia.org/wiki/Decorator_pattern\n[before _default_ methods were introduced]: https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ConcurrentMap.html"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ForwardingObject\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ForwardingMap\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.clear()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsValue(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.delegate()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.get(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.keySet()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.put(K,V)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll(java.util.Map<? extends K,? extends V>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.remove(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardClear()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsKey(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardEquals(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardHashCode()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardIsEmpty()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map<? extends K,? extends V>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardRemove(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardToString()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.values()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()"
- "java.lang.Object.clone()"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class ForwardingConcurrentMap<K,V> extends ForwardingMap<K,V> implements ConcurrentMap<K,V>"
constructors:
- "com.azure.cosmos.implementation.guava25.collect.ForwardingConcurrentMap.ForwardingConcurrentMap()"
methods:
- "com.azure.cosmos.implementation.guava25.collect.ForwardingConcurrentMap.delegate()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingConcurrentMap.putIfAbsent(K,V)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingConcurrentMap.remove(java.lang.Object,java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingConcurrentMap.replace(K,V)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingConcurrentMap.replace(K,V,V)"
type: "class"
typeParameters:
- name: "K"
- name: "V"
implements:
- "<xref href=\"java.util.concurrent.ConcurrentMap?alt=java.util.concurrent.ConcurrentMap&text=ConcurrentMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
