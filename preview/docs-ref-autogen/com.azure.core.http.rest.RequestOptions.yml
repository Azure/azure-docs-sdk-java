### YamlMime:JavaType
uid: "com.azure.core.http.rest.RequestOptions"
fullName: "com.azure.core.http.rest.RequestOptions"
name: "RequestOptions"
nameWithType: "RequestOptions"
summary: "This class contains the options to customize an HTTP request. <xref uid=\"com.azure.core.http.rest.RequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions\"></xref> can be used to configure the request headers, query params, the request body, or add a callback to modify all aspects of the HTTP request.\n\nAn instance of fully configured <xref uid=\"com.azure.core.http.rest.RequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions\"></xref> can be passed to a service method that preconfigures known components of the request like URL, path params etc, further modifying both un-configured, or preconfigured components.\n\nTo demonstrate how this class can be used to construct a request, let's use a Pet Store service as an example. The list of APIs available on this service are [documented in the swagger definition.][]\n\n**Creating an instance of RequestOptions**\n\n```java\nRequestOptions options = new RequestOptions()\n     .setBody(BinaryData.fromString(\"{\\\"name\\\":\\\"Fluffy\\\"}\"))\n     .addHeader(\"x-ms-pet-version\", \"2021-06-01\");\n```\n\n**Configuring the request with JSON body and making a HTTP POST request**\n\nTo [add a new pet to the pet store][], an HTTP POST call should be made to the service with the details of the pet that is to be added. The details of the pet are included as the request body in JSON format. The JSON structure for the request is defined as follows:\n\n```java\n{\n   \"id\": 0,\n   \"category\": {\n     \"id\": 0,\n     \"name\": \"string\"\n   },\n   \"name\": \"doggie\",\n   \"photoUrls\": [\n     \"string\"\n   ],\n   \"tags\": [\n     {\n       \"id\": 0,\n       \"name\": \"string\"\n     }\n   ],\n   \"status\": \"available\"\n }\n```\n\nTo create a concrete request, Json builder provided in javax package is used here for demonstration. However, any other Json building library can be used to achieve similar results.\n\n```java\nJsonArray photoUrls = Json.createArrayBuilder()\n     .add(\"https://imgur.com/pet1\")\n     .add(\"https://imgur.com/pet2\")\n     .build();\n\n JsonArray tags = Json.createArrayBuilder()\n     .add(Json.createObjectBuilder()\n         .add(\"id\", 0)\n         .add(\"name\", \"Labrador\")\n         .build())\n     .add(Json.createObjectBuilder()\n         .add(\"id\", 1)\n         .add(\"name\", \"2021\")\n         .build())\n     .build();\n\n JsonObject requestBody = Json.createObjectBuilder()\n     .add(\"id\", 0)\n     .add(\"name\", \"foo\")\n     .add(\"status\", \"available\")\n     .add(\"category\", Json.createObjectBuilder().add(\"id\", 0).add(\"name\", \"dog\"))\n     .add(\"photoUrls\", photoUrls)\n     .add(\"tags\", tags)\n     .build();\n\n String requestBodyStr = requestBody.toString();\n```\n\nNow, this string representation of the JSON request can be set as body of RequestOptions\n\n```java\nRequestOptions options = new RequestOptions()\n     .addRequestCallback(request -> request\n         // may already be set if request is created from a client\n         .setUrl(\"https://petstore.example.com/pet\")\n         .setHttpMethod(HttpMethod.POST)\n         .setBody(requestBodyStr)\n         .setHeader(\"Content-Type\", \"application/json\"));\n```\n\n\n[documented in the swagger definition.]: https://petstore.swagger.io/#/pet\n[add a new pet to the pet store]: https://petstore.swagger.io/#/pet/addPet"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RequestOptions"
constructors:
- "com.azure.core.http.rest.RequestOptions.RequestOptions()"
methods:
- "com.azure.core.http.rest.RequestOptions.addHeader(java.lang.String,java.lang.String)"
- "com.azure.core.http.rest.RequestOptions.addQueryParam(java.lang.String,java.lang.String)"
- "com.azure.core.http.rest.RequestOptions.addQueryParam(java.lang.String,java.lang.String,boolean)"
- "com.azure.core.http.rest.RequestOptions.addRequestCallback(java.util.function.Consumer<com.azure.core.http.HttpRequest>)"
- "com.azure.core.http.rest.RequestOptions.setBody(com.azure.core.util.BinaryData)"
- "com.azure.core.http.rest.RequestOptions.setHeader(java.lang.String,java.lang.String)"
- "com.azure.core.http.rest.RequestOptions.setThrowOnError(boolean)"
type: "class"
metadata: {}
package: "com.azure.core.http.rest"
artifact: com.azure:azure-core:1.22.0-beta.1
