### YamlMime:JavaMember
uid: "org.slf4j.ILoggerFactory.getLogger*"
fullName: "org.slf4j.ILoggerFactory.getLogger"
name: "getLogger"
nameWithType: "ILoggerFactory.getLogger"
members:
- uid: "org.slf4j.ILoggerFactory.getLogger(java.lang.String)"
  fullName: "org.slf4j.ILoggerFactory.getLogger(String name)"
  name: "getLogger(String name)"
  nameWithType: "ILoggerFactory.getLogger(String name)"
  summary: "Return an appropriate <xref uid=\"org.slf4j.Logger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Logger\"></xref> instance as specified by the `name` parameter.\n\nIf the name parameter is equal to <xref uid=\"org.slf4j.Logger.ROOT_LOGGER_NAME\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Logger#ROOT_LOGGER_NAME\"></xref>, that is the string value \"ROOT\" (case insensitive), then the root logger of the underlying logging system is returned.\n\nNull-valued name arguments are considered invalid.\n\nCertain extremely simple logging systems, e.g. NOP, may always return the same logger instance regardless of the requested name."
  parameters:
  - description: "the name of the Logger to return"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Logger getLogger(String name)"
  returns:
    description: "a Logger instance"
    type: "<xref href=\"org.slf4j.Logger?alt=org.slf4j.Logger&text=Logger\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "org.slf4j"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
