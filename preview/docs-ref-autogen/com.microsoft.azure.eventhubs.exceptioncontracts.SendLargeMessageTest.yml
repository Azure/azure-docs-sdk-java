### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest
  id: SendLargeMessageTest
  parent: com.microsoft.azure.eventhubs.exceptioncontracts
  children:
  - com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.cleanup()
  - com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.initialize()
  - com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.initializeEventHubClients(ConnectionStringBuilder)
  - com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan1024K()
  - com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan128k()
  - com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan64k()
  href: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.yml
  langs:
  - java
  name: SendLargeMessageTest
  nameWithType: SendLargeMessageTest
  fullName: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest
  type: Class
  source:
    remote: &o0
      path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/exceptioncontracts/SendLargeMessageTest.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/exceptioncontracts/SendLargeMessageTest.java
    startLine: 23
  package: com.microsoft.azure.eventhubs.exceptioncontracts
  syntax:
    content: public class SendLargeMessageTest extends ApiTestBase
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.eventhubs.lib.TestBase
  - com.microsoft.azure.eventhubs.lib.ApiTestBase
  inheritedMembers:
  - com.microsoft.azure.eventhubs.lib.TestBase.logger
  - com.microsoft.azure.eventhubs.lib.TestBase.pushEventsToPartition(final EventHubClient,final String,final int)
  - com.microsoft.azure.eventhubs.lib.ApiTestBase.skipIfNotConfigured()
  - com.microsoft.azure.eventhubs.lib.TestBase.TestBase()
  - com.microsoft.azure.eventhubs.lib.TestBase.TestBase(Logger)
- uid: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.cleanup()
  id: cleanup()
  parent: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest
  href: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.yml
  langs:
  - java
  name: cleanup()
  nameWithType: SendLargeMessageTest.cleanup()
  fullName: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.cleanup()
  overload: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.cleanup*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/exceptioncontracts/SendLargeMessageTest.java
    startLine: 46
  package: com.microsoft.azure.eventhubs.exceptioncontracts
  syntax:
    content: public static void cleanup()
- uid: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.initialize()
  id: initialize()
  parent: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest
  href: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.yml
  langs:
  - java
  name: initialize()
  nameWithType: SendLargeMessageTest.initialize()
  fullName: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.initialize()
  overload: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.initialize*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/exceptioncontracts/SendLargeMessageTest.java
    startLine: 33
  package: com.microsoft.azure.eventhubs.exceptioncontracts
  syntax:
    content: public static void initialize()
- uid: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.initializeEventHubClients(ConnectionStringBuilder)
  id: initializeEventHubClients(ConnectionStringBuilder)
  parent: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest
  href: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.yml
  langs:
  - java
  name: initializeEventHubClients(ConnectionStringBuilder connStr)
  nameWithType: SendLargeMessageTest.initializeEventHubClients(ConnectionStringBuilder connStr)
  fullName: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.initializeEventHubClients(ConnectionStringBuilder connStr)
  overload: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.initializeEventHubClients*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/exceptioncontracts/SendLargeMessageTest.java
    startLine: 37
  package: com.microsoft.azure.eventhubs.exceptioncontracts
  syntax:
    content: public static void initializeEventHubClients(ConnectionStringBuilder connStr)
    parameters:
    - id: connStr
      type: com.microsoft.azure.eventhubs.ConnectionStringBuilder
- uid: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan1024K()
  id: sendMsgLargerThan1024K()
  parent: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest
  href: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.yml
  langs:
  - java
  name: sendMsgLargerThan1024K()
  nameWithType: SendLargeMessageTest.sendMsgLargerThan1024K()
  fullName: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan1024K()
  overload: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan1024K*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/exceptioncontracts/SendLargeMessageTest.java
    startLine: 70
  package: com.microsoft.azure.eventhubs.exceptioncontracts
  syntax:
    content: public void sendMsgLargerThan1024K()
- uid: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan128k()
  id: sendMsgLargerThan128k()
  parent: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest
  href: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.yml
  langs:
  - java
  name: sendMsgLargerThan128k()
  nameWithType: SendLargeMessageTest.sendMsgLargerThan128k()
  fullName: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan128k()
  overload: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan128k*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/exceptioncontracts/SendLargeMessageTest.java
    startLine: 82
  package: com.microsoft.azure.eventhubs.exceptioncontracts
  syntax:
    content: public void sendMsgLargerThan128k()
- uid: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan64k()
  id: sendMsgLargerThan64k()
  parent: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest
  href: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.yml
  langs:
  - java
  name: sendMsgLargerThan64k()
  nameWithType: SendLargeMessageTest.sendMsgLargerThan64k()
  fullName: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan64k()
  overload: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan64k*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/test/java/com/microsoft/azure/eventhubs/exceptioncontracts/SendLargeMessageTest.java
    startLine: 65
  package: com.microsoft.azure.eventhubs.exceptioncontracts
  syntax:
    content: public void sendMsgLargerThan64k()
references:
- uid: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.initialize*
  name: initialize
  nameWithType: SendLargeMessageTest.initialize
  fullName: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.initialize
  package: com.microsoft.azure.eventhubs.exceptioncontracts
- uid: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.initializeEventHubClients*
  name: initializeEventHubClients
  nameWithType: SendLargeMessageTest.initializeEventHubClients
  fullName: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.initializeEventHubClients
  package: com.microsoft.azure.eventhubs.exceptioncontracts
- uid: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.cleanup*
  name: cleanup
  nameWithType: SendLargeMessageTest.cleanup
  fullName: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.cleanup
  package: com.microsoft.azure.eventhubs.exceptioncontracts
- uid: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan64k*
  name: sendMsgLargerThan64k
  nameWithType: SendLargeMessageTest.sendMsgLargerThan64k
  fullName: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan64k
  package: com.microsoft.azure.eventhubs.exceptioncontracts
- uid: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan1024K*
  name: sendMsgLargerThan1024K
  nameWithType: SendLargeMessageTest.sendMsgLargerThan1024K
  fullName: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan1024K
  package: com.microsoft.azure.eventhubs.exceptioncontracts
- uid: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan128k*
  name: sendMsgLargerThan128k
  nameWithType: SendLargeMessageTest.sendMsgLargerThan128k
  fullName: com.microsoft.azure.eventhubs.exceptioncontracts.SendLargeMessageTest.sendMsgLargerThan128k
  package: com.microsoft.azure.eventhubs.exceptioncontracts
- uid: com.microsoft.azure.eventhubs.lib.TestBase.logger
  parent: com.microsoft.azure.eventhubs.lib.TestBase
  href: com.microsoft.azure.eventhubs.lib.TestBase.yml
  name: logger
  nameWithType: TestBase.logger
  fullName: com.microsoft.azure.eventhubs.lib.TestBase.logger
  type: Field
  syntax:
    content: protected final Logger logger
    return:
      type: 524922b1
- uid: com.microsoft.azure.eventhubs.lib.TestBase.pushEventsToPartition(final EventHubClient,final String,final int)
  parent: com.microsoft.azure.eventhubs.lib.TestBase
  href: com.microsoft.azure.eventhubs.lib.TestBase.yml
  name: pushEventsToPartition(final EventHubClient ehClient, final String partitionId, final int noOfEvents)
  nameWithType: TestBase.pushEventsToPartition(final EventHubClient ehClient, final String partitionId, final int noOfEvents)
  fullName: com.microsoft.azure.eventhubs.lib.TestBase.pushEventsToPartition(final EventHubClient ehClient, final String partitionId, final int noOfEvents)
  type: Method
  syntax:
    content: public static CompletableFuture<Void> pushEventsToPartition(final EventHubClient ehClient, final String partitionId, final int noOfEvents)
    parameters:
    - id: ehClient
      type: 93de0ef9com.microsoft.azure.eventhubs.EventHubClient
    - id: partitionId
      type: 3d93591e
    - id: noOfEvents
      type: cd225469
    return:
      type: db03ee24
- uid: com.microsoft.azure.eventhubs.lib.ApiTestBase.skipIfNotConfigured()
  parent: com.microsoft.azure.eventhubs.lib.ApiTestBase
  href: com.microsoft.azure.eventhubs.lib.ApiTestBase.yml
  name: skipIfNotConfigured()
  nameWithType: ApiTestBase.skipIfNotConfigured()
  fullName: com.microsoft.azure.eventhubs.lib.ApiTestBase.skipIfNotConfigured()
  type: Method
  syntax:
    content: public static void skipIfNotConfigured()
- uid: com.microsoft.azure.eventhubs.lib.TestBase.TestBase()
  parent: com.microsoft.azure.eventhubs.lib.TestBase
  href: com.microsoft.azure.eventhubs.lib.TestBase.yml
  name: TestBase()
  nameWithType: TestBase.TestBase()
  fullName: com.microsoft.azure.eventhubs.lib.TestBase.TestBase()
  type: Constructor
  syntax:
    content: protected TestBase()
- uid: com.microsoft.azure.eventhubs.lib.TestBase.TestBase(Logger)
  parent: com.microsoft.azure.eventhubs.lib.TestBase
  href: com.microsoft.azure.eventhubs.lib.TestBase.yml
  name: TestBase(Logger logger)
  nameWithType: TestBase.TestBase(Logger logger)
  fullName: com.microsoft.azure.eventhubs.lib.TestBase.TestBase(Logger logger)
  type: Constructor
  syntax:
    content: protected TestBase(Logger logger)
    parameters:
    - id: logger
      type: ef129195
- uid: com.microsoft.azure.eventhubs.lib.ApiTestBase
  parent: com.microsoft.azure.eventhubs.lib
  href: com.microsoft.azure.eventhubs.lib.ApiTestBase.yml
  name: ApiTestBase
  nameWithType: ApiTestBase
  fullName: com.microsoft.azure.eventhubs.lib.ApiTestBase
  type: Class
  syntax:
    content: public class ApiTestBase extends TestBase
- uid: com.microsoft.azure.eventhubs.EventHubClient
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs.EventHubClient.yml
  name: EventHubClient
  nameWithType: EventHubClient
  fullName: com.microsoft.azure.eventhubs.EventHubClient
  type: Interface
  summary: "<p>Anchor class - all EventHub client operations STARTS here.</p>\r\n<p></p>"
  syntax:
    content: public interface EventHubClient
- uid: com.microsoft.azure.eventhubs.PartitionSender
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs.PartitionSender.yml
  name: PartitionSender
  nameWithType: PartitionSender
  fullName: com.microsoft.azure.eventhubs.PartitionSender
  type: Interface
  summary: "<p>This sender class is a logical representation of sending events to a specific EventHub partition. Do not use this class if you do not care about sending events to specific partitions. Instead, use <xref uid=\"com.microsoft.azure.eventhubs.EventHubClient.send(EventData)\" data-throw-if-not-resolved=\"false\">EventHubClient#send</xref> method.</p>\r\n<p></p>"
  syntax:
    content: public interface PartitionSender
- uid: com.microsoft.azure.eventhubs.PartitionReceiver
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs.PartitionReceiver.yml
  name: PartitionReceiver
  nameWithType: PartitionReceiver
  fullName: com.microsoft.azure.eventhubs.PartitionReceiver
  type: Interface
  summary: "<p>This is a logical representation of receiving from a EventHub partition. </p>\r\n<p>A <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver\" data-throw-if-not-resolved=\"false\">PartitionReceiver</xref> is tied to a ConsumerGroup + EventHub Partition combination. <ul><li><p>If an epoch based <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver\" data-throw-if-not-resolved=\"false\">PartitionReceiver</xref> (i.e., PartitionReceiver.getEpoch != 0) is created, EventHubs service will guarantee only 1 active receiver exists per ConsumerGroup + Partition combo. This is the recommended approach to create a <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver\" data-throw-if-not-resolved=\"false\">PartitionReceiver</xref>. </p></li><li><p>Multiple receivers per ConsumerGroup + Partition combo can be created using non-epoch receivers. </p></li></ul></p>\r\n<p></p>"
  syntax:
    content: public interface PartitionReceiver
- uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs.ConnectionStringBuilder.yml
  name: ConnectionStringBuilder
  nameWithType: ConnectionStringBuilder
  fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder
  type: Class
  summary: "<p>\r\n  <xref uid=\"com.microsoft.azure.eventhubs.ConnectionStringBuilder\" data-throw-if-not-resolved=\"false\">ConnectionStringBuilder</xref> can be used to construct a connection string which can establish communication with Event Hub instances. In addition to constructing a connection string, the <xref uid=\"com.microsoft.azure.eventhubs.ConnectionStringBuilder\" data-throw-if-not-resolved=\"false\">ConnectionStringBuilder</xref> can be used to modify an existing connection string. </p>\r\n<p>Sample Code: <pre><code>// Construct a new connection string\r\n    ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder()\r\n        .setNamespaceName(\"EventHubsNamespaceName\")\r\n        .setEventHubName(\"EventHubsEntityName\")\r\n        .setSasKeyName(\"SharedAccessSignatureKeyName\")\r\n        .setSasKey(\"SharedAccessSignatureKey\")\r\n    \r\n    string connString = connectionStringBuilder.build();\r\n    \r\n    // Modify an existing connection string\r\n    ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder(existingConnectionString)\r\n        .setEventHubName(\"SomeOtherEventHubsName\")\r\n        .setOperationTimeout(Duration.ofSeconds(30)\r\n    \r\n    string connString = connectionStringBuilder.build();\r\n    </code></pre></p>\r\n<p>A connection string is basically a string consisting of key-value pairs separated by \";\". The basic format is {{ &lt;}key{&gt;}={ &lt;}value{&gt;}[;{ &lt;}key{&gt;}={ &lt;}value{&gt;}]} where supported key name are as follow: <ul><li><p>Endpoint - the URL that contains the EventHubs namespace </p></li><li><p>EntityPath - the EventHub name which you are connecting to </p></li><li><p>SharedAccessKeyName - the key name to the corresponding shared access policy rule for the namespace, or entity. </p></li><li><p>SharedAccessKey - the key for the corresponding shared access policy rule of the namespace or entity. </p></li></ul></p>"
  syntax:
    content: public class ConnectionStringBuilder
- uid: com.microsoft.azure.eventhubs.EventHubException
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs.EventHubException.yml
  name: EventHubException
  nameWithType: EventHubException
  fullName: com.microsoft.azure.eventhubs.EventHubException
  type: Class
  summary: "<p>This is the base exception that service bus will produce for all error cases. </p>"
  syntax:
    content: public class EventHubException
