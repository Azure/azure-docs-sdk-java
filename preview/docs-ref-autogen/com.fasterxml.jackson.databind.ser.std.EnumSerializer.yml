### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer
  id: EnumSerializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std
  children:
  - com.fasterxml.jackson.databind.ser.std.EnumSerializer.EnumSerializer(com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean)
  - com.fasterxml.jackson.databind.ser.std.EnumSerializer._isShapeWrittenUsingIndex(java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Value,boolean,java.lang.Boolean)
  - com.fasterxml.jackson.databind.ser.std.EnumSerializer._serializeAsIndex
  - com.fasterxml.jackson.databind.ser.std.EnumSerializer._serializeAsIndex(com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.EnumSerializer._values
  - com.fasterxml.jackson.databind.ser.std.EnumSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.std.EnumSerializer.construct(java.lang.Class<?>,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.annotation.JsonFormat.Value)
  - com.fasterxml.jackson.databind.ser.std.EnumSerializer.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.ser.std.EnumSerializer.getEnumValues()
  - com.fasterxml.jackson.databind.ser.std.EnumSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
  - com.fasterxml.jackson.databind.ser.std.EnumSerializer.serialize(java.lang.Enum<?>,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  langs:
  - java
  name: EnumSerializer
  nameWithType: EnumSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer
  type: Class
  package: com.fasterxml.jackson.databind.ser.std
  summary: >-
    Standard serializer used for <xref uid="java.lang.Enum" data-throw-if-not-resolved="false">java.lang.Enum</xref> types.


    Based on <xref uid="com.fasterxml.jackson.databind.ser.std.StdScalarSerializer" data-throw-if-not-resolved="false">StdScalarSerializer</xref> since the JSON value is scalar (String).
  syntax:
    content: public class EnumSerializer extends StdScalarSerializer<Enum<?>> implements ContextualSerializer
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.JsonSerializer
  - com.fasterxml.jackson.databind.ser.std.StdSerializer
  - com.fasterxml.jackson.databind.ser.std.StdScalarSerializer
  implements:
  - com.fasterxml.jackson.databind.ser.ContextualSerializer
  inheritedMembers:
  - com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  - com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  - com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  - com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  - com.fasterxml.jackson.databind.JsonSerializer.properties()
  - com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
  - com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
  - com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer.EnumSerializer(com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean)
  id: EnumSerializer(com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.EnumSerializer
  langs:
  - java
  name: EnumSerializer(EnumValues v, Boolean serializeAsIndex)
  nameWithType: EnumSerializer.EnumSerializer(EnumValues v, Boolean serializeAsIndex)
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer.EnumSerializer(EnumValues v, Boolean serializeAsIndex)
  overload: com.fasterxml.jackson.databind.ser.std.EnumSerializer.EnumSerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: public EnumSerializer(EnumValues v, Boolean serializeAsIndex)
    parameters:
    - id: v
      type: com.fasterxml.jackson.databind.util.EnumValues
    - id: serializeAsIndex
      type: java.lang.Boolean
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer._isShapeWrittenUsingIndex(java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Value,boolean,java.lang.Boolean)
  id: _isShapeWrittenUsingIndex(java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Value,boolean,java.lang.Boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.EnumSerializer
  langs:
  - java
  name: _isShapeWrittenUsingIndex(Class<?> enumClass, JsonFormat.Value format, boolean fromClass, Boolean defaultValue)
  nameWithType: EnumSerializer._isShapeWrittenUsingIndex(Class<?> enumClass, JsonFormat.Value format, boolean fromClass, Boolean defaultValue)
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer._isShapeWrittenUsingIndex(Class<?> enumClass, JsonFormat.Value format, boolean fromClass, Boolean defaultValue)
  overload: com.fasterxml.jackson.databind.ser.std.EnumSerializer._isShapeWrittenUsingIndex*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  summary: Helper method called to check whether serialization should be done using index (number) or not.
  syntax:
    content: protected static Boolean _isShapeWrittenUsingIndex(Class<?> enumClass, JsonFormat.Value format, boolean fromClass, Boolean defaultValue)
    parameters:
    - id: enumClass
      type: java.lang.Class<?>
    - id: format
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
    - id: fromClass
      type: boolean
    - id: defaultValue
      type: java.lang.Boolean
    return:
      type: java.lang.Boolean
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer._serializeAsIndex
  id: _serializeAsIndex
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.EnumSerializer
  langs:
  - java
  name: _serializeAsIndex
  nameWithType: EnumSerializer._serializeAsIndex
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer._serializeAsIndex
  type: Field
  package: com.fasterxml.jackson.databind.ser.std
  summary: Flag that is set if we statically know serialization choice between index and textual format (null if it needs to be dynamically checked).
  syntax:
    content: protected final Boolean _serializeAsIndex
    return:
      type: java.lang.Boolean
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer._serializeAsIndex(com.fasterxml.jackson.databind.SerializerProvider)
  id: _serializeAsIndex(com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.EnumSerializer
  langs:
  - java
  name: _serializeAsIndex(SerializerProvider serializers)
  nameWithType: EnumSerializer._serializeAsIndex(SerializerProvider serializers)
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer._serializeAsIndex(SerializerProvider serializers)
  overload: com.fasterxml.jackson.databind.ser.std.EnumSerializer._serializeAsIndex*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: protected final boolean _serializeAsIndex(SerializerProvider serializers)
    parameters:
    - id: serializers
      type: com.fasterxml.jackson.databind.SerializerProvider
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer._values
  id: _values
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.EnumSerializer
  langs:
  - java
  name: _values
  nameWithType: EnumSerializer._values
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer._values
  type: Field
  package: com.fasterxml.jackson.databind.ser.std
  summary: This map contains pre-resolved values (since there are ways to customize actual String constants to use) to use as serializations.
  syntax:
    content: protected final EnumValues _values
    return:
      type: com.fasterxml.jackson.databind.util.EnumValues
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  id: acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.EnumSerializer
  langs:
  - java
  name: acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper visitor, JavaType typeHint)
  nameWithType: EnumSerializer.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper visitor, JavaType typeHint)
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper visitor, JavaType typeHint)
  overload: com.fasterxml.jackson.databind.ser.std.EnumSerializer.acceptJsonFormatVisitor*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  summary: Default implementation specifies no format. This behavior is usually overriden by custom serializers.
  syntax:
    content: public void acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper visitor, JavaType typeHint)
    parameters:
    - id: visitor
      type: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper
    - id: typeHint
      type: com.fasterxml.jackson.databind.JavaType
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer.construct(java.lang.Class<?>,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.annotation.JsonFormat.Value)
  id: construct(java.lang.Class<?>,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.annotation.JsonFormat.Value)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.EnumSerializer
  langs:
  - java
  name: construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format)
  nameWithType: EnumSerializer.construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format)
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer.construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format)
  overload: com.fasterxml.jackson.databind.ser.std.EnumSerializer.construct*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  summary: Factory method used by <xref uid="com.fasterxml.jackson.databind.ser.BasicSerializerFactory" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.ser.BasicSerializerFactory</xref> for constructing serializer instance of Enum types.
  syntax:
    content: public static EnumSerializer construct(Class<?> enumClass, SerializationConfig config, BeanDescription beanDesc, JsonFormat.Value format)
    parameters:
    - id: enumClass
      type: java.lang.Class<?>
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: format
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
    return:
      type: com.fasterxml.jackson.databind.ser.std.EnumSerializer
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  id: createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.EnumSerializer
  langs:
  - java
  name: createContextual(SerializerProvider serializers, BeanProperty property)
  nameWithType: EnumSerializer.createContextual(SerializerProvider serializers, BeanProperty property)
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer.createContextual(SerializerProvider serializers, BeanProperty property)
  overload: com.fasterxml.jackson.databind.ser.std.EnumSerializer.createContextual*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  summary: To support some level of per-property configuration, we will need to make things contextual. We are limited to "textual vs index" choice here, however.
  syntax:
    content: public JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property)
    parameters:
    - id: serializers
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: property
      type: com.fasterxml.jackson.databind.BeanProperty
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer.getEnumValues()
  id: getEnumValues()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.EnumSerializer
  langs:
  - java
  name: getEnumValues()
  nameWithType: EnumSerializer.getEnumValues()
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer.getEnumValues()
  overload: com.fasterxml.jackson.databind.ser.std.EnumSerializer.getEnumValues*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  syntax:
    content: public EnumValues getEnumValues()
    return:
      type: com.fasterxml.jackson.databind.util.EnumValues
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
  id: getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.EnumSerializer
  langs:
  - java
  name: getSchema(SerializerProvider provider, Type typeHint)
  nameWithType: EnumSerializer.getSchema(SerializerProvider provider, Type typeHint)
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer.getSchema(SerializerProvider provider, Type typeHint)
  overload: com.fasterxml.jackson.databind.ser.std.EnumSerializer.getSchema*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  summary: Default implementation simply claims type is "string"; usually overriden by custom serializers.
  syntax:
    content: public JsonNode getSchema(SerializerProvider provider, Type typeHint)
    parameters:
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: typeHint
      type: java.lang.reflect.Type
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer.serialize(java.lang.Enum<?>,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serialize(java.lang.Enum<?>,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.std.EnumSerializer
  langs:
  - java
  name: serialize(Enum<?> en, JsonGenerator gen, SerializerProvider serializers)
  nameWithType: EnumSerializer.serialize(Enum<?> en, JsonGenerator gen, SerializerProvider serializers)
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer.serialize(Enum<?> en, JsonGenerator gen, SerializerProvider serializers)
  overload: com.fasterxml.jackson.databind.ser.std.EnumSerializer.serialize*
  type: Method
  package: com.fasterxml.jackson.databind.ser.std
  summary: Method that can be called to ask implementation to serialize values of type this serializer handles.
  syntax:
    content: public final void serialize(Enum<?> en, JsonGenerator gen, SerializerProvider serializers)
    parameters:
    - id: en
      type: java.lang.Enum<?>
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: serializers
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.io.IOException
references:
- uid: com.fasterxml.jackson.databind.util.EnumValues
  name: EnumValues
  nameWithType: EnumValues
  fullName: com.fasterxml.jackson.databind.util.EnumValues
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer.EnumSerializer*
  name: EnumSerializer
  nameWithType: EnumSerializer.EnumSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer.EnumSerializer
  package: com.fasterxml.jackson.databind.ser.std
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.SerializationConfig
  name: SerializationConfig
  nameWithType: SerializationConfig
  fullName: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.BeanDescription
  name: BeanDescription
  nameWithType: BeanDescription
  fullName: com.fasterxml.jackson.databind.BeanDescription
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value
  name: JsonFormat.Value
  nameWithType: JsonFormat.Value
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer.construct*
  name: construct
  nameWithType: EnumSerializer.construct
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer.construct
  package: com.fasterxml.jackson.databind.ser.std
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.BeanProperty
  name: BeanProperty
  nameWithType: BeanProperty
  fullName: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.JsonSerializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer.createContextual*
  name: createContextual
  nameWithType: EnumSerializer.createContextual
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer.createContextual
  package: com.fasterxml.jackson.databind.ser.std
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer.getEnumValues*
  name: getEnumValues
  nameWithType: EnumSerializer.getEnumValues
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer.getEnumValues
  package: com.fasterxml.jackson.databind.ser.std
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.lang.Enum<?>
  spec.java:
  - uid: java.lang.Enum
    name: Enum
    fullName: java.lang.Enum
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer.serialize*
  name: serialize
  nameWithType: EnumSerializer.serialize
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer.serialize
  package: com.fasterxml.jackson.databind.ser.std
- uid: java.lang.reflect.Type
  spec.java:
  - uid: java.lang.reflect.Type
    name: Type
    fullName: java.lang.reflect.Type
- uid: com.fasterxml.jackson.databind.JsonNode
  name: JsonNode
  nameWithType: JsonNode
  fullName: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer.getSchema*
  name: getSchema
  nameWithType: EnumSerializer.getSchema
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer.getSchema
  package: com.fasterxml.jackson.databind.ser.std
- uid: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper
  name: jsonFormatVisitors.JsonFormatVisitorWrapper
  nameWithType: jsonFormatVisitors.JsonFormatVisitorWrapper
  fullName: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer.acceptJsonFormatVisitor*
  name: acceptJsonFormatVisitor
  nameWithType: EnumSerializer.acceptJsonFormatVisitor
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer.acceptJsonFormatVisitor
  package: com.fasterxml.jackson.databind.ser.std
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer._serializeAsIndex*
  name: _serializeAsIndex
  nameWithType: EnumSerializer._serializeAsIndex
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer._serializeAsIndex
  package: com.fasterxml.jackson.databind.ser.std
- uid: com.fasterxml.jackson.databind.ser.std.EnumSerializer._isShapeWrittenUsingIndex*
  name: _isShapeWrittenUsingIndex
  nameWithType: EnumSerializer._isShapeWrittenUsingIndex
  fullName: com.fasterxml.jackson.databind.ser.std.EnumSerializer._isShapeWrittenUsingIndex
  package: com.fasterxml.jackson.databind.ser.std
- uid: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer<java.lang.Enum<?>>
  name: StdScalarSerializer<Enum<?>>
  nameWithType: StdScalarSerializer<Enum<?>>
  fullName: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer<java.lang.Enum<?>>
- uid: com.fasterxml.jackson.databind.ser.ContextualSerializer
  name: ContextualSerializer
  nameWithType: ContextualSerializer
  fullName: com.fasterxml.jackson.databind.ser.ContextualSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  name: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class<?>,JsonFormat.Feature)
  nameWithType: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class<?>,JsonFormat.Feature)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  name: JsonSerializer.isEmpty(SerializerProvider,T)
  nameWithType: JsonSerializer.isEmpty(SerializerProvider,T)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.JsonSerializer.properties()
  name: JsonSerializer.properties()
  nameWithType: JsonSerializer.properties()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.properties()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  name: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class<?>)
  nameWithType: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
  name: StdSerializer.findPropertyFilter(SerializerProvider,Object,Object)
  nameWithType: StdSerializer.findPropertyFilter(SerializerProvider,Object,Object)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  name: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  nameWithType: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: StdSerializer.serialize(T,JsonGenerator,SerializerProvider)
  nameWithType: StdSerializer.serialize(T,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  nameWithType: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  name: JsonSerializer.getDelegatee()
  nameWithType: JsonSerializer.getDelegatee()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  name: StdSerializer.visitFloatFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  nameWithType: StdSerializer.visitFloatFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
- uid: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  name: JsonSerializer.unwrappingSerializer(NameTransformer)
  nameWithType: JsonSerializer.unwrappingSerializer(NameTransformer)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
  name: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,int)
  nameWithType: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,int)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  name: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  nameWithType: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  name: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonValueFormat)
  nameWithType: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonValueFormat)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)
  name: StdSerializer.getSchema(SerializerProvider,Type,boolean)
  nameWithType: StdSerializer.getSchema(SerializerProvider,Type,boolean)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)
- uid: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  name: JsonSerializer.isUnwrappingSerializer()
  nameWithType: JsonSerializer.isUnwrappingSerializer()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)
  name: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonFormatTypes)
  nameWithType: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonFormatTypes)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)
  name: StdSerializer._nonEmpty(Collection<?>)
  nameWithType: StdSerializer._nonEmpty(Collection<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
  name: StdScalarSerializer.getSchema(SerializerProvider,Type)
  nameWithType: StdScalarSerializer.getSchema(SerializerProvider,Type)
  fullName: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  name: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType,jsonFormatVisitors.JsonValueFormat)
  nameWithType: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType,jsonFormatVisitors.JsonValueFormat)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: StdSerializer.isDefaultSerializer(JsonSerializer<?>)
  nameWithType: StdSerializer.isDefaultSerializer(JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()
  name: StdSerializer.handledType()
  nameWithType: StdSerializer.handledType()
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)
  name: StdSerializer.createSchemaNode(String,boolean)
  nameWithType: StdSerializer.createSchemaNode(String,boolean)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)
- uid: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: StdScalarSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: StdScalarSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)
  name: StdSerializer.createSchemaNode(String)
  nameWithType: StdSerializer.createSchemaNode(String)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
  name: JsonSerializer.withFilterId(Object)
  nameWithType: JsonSerializer.withFilterId(Object)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  name: StdScalarSerializer.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  nameWithType: StdScalarSerializer.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)
  name: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer<?>,JavaType)
  nameWithType: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer<?>,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  name: StdSerializer.findAnnotatedContentSerializer(SerializerProvider,BeanProperty)
  nameWithType: StdSerializer.findAnnotatedContentSerializer(SerializerProvider,BeanProperty)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  name: JsonSerializer.isEmpty(T)
  nameWithType: JsonSerializer.isEmpty(T)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
- uid: com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
  name: JsonSerializer.usesObjectId()
  nameWithType: JsonSerializer.usesObjectId()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  name: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class<?>)
  nameWithType: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  nameWithType: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)
  name: StdSerializer._neitherNull(Object,Object)
  nameWithType: StdSerializer._neitherNull(Object,Object)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
  name: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,String)
  nameWithType: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,String)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer
  name: StdScalarSerializer
  nameWithType: StdScalarSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer
- uid: ?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  name: ?>,JsonFormat.Feature)
  nameWithType: ?>,JsonFormat.Feature)
  fullName: ?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class
  nameWithType: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class
  nameWithType: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer
  nameWithType: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection
  name: StdSerializer._nonEmpty(Collection
  nameWithType: StdSerializer._nonEmpty(Collection
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.isDefaultSerializer(JsonSerializer
  nameWithType: StdSerializer.isDefaultSerializer(JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer
  nameWithType: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer
- uid: ?>,com.fasterxml.jackson.databind.JavaType)
  name: ?>,JavaType)
  nameWithType: ?>,JavaType)
  fullName: ?>,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class
  nameWithType: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer.replaceDelegatee(JsonSerializer
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer
  nameWithType: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
