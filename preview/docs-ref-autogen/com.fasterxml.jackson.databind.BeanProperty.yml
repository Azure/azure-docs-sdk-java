### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.BeanProperty"
fullName: "com.fasterxml.jackson.databind.BeanProperty"
name: "BeanProperty"
nameWithType: "BeanProperty"
summary: "Bean properties are logical entities that represent data that Java objects (POJOs (Plain Old Java Objects), sometimes also called \"beans\") contain; and that are accessed using accessors (methods like getters and setters, fields, constructor parameters). Instances allow access to annotations directly associated to property (via field or method), as well as contextual annotations (annotations for class that contains properties).\n\nInstances are not typically passed when constructing serializers and deserializers, but rather only passed when context is known when <xref uid=\"com.fasterxml.jackson.databind.ser.ContextualSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.databind.ser.ContextualSerializer\"></xref> and <xref uid=\"com.fasterxml.jackson.databind.deser.ContextualDeserializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.databind.deser.ContextualDeserializer\"></xref> resolution occurs (`createContextual(...)` method is called). References may (need to) be retained by serializers and deserializers, especially when further resolving dependent handlers like value serializers/deserializers or structured types."
syntax: "public interface BeanProperty extends Named"
fields:
- "com.fasterxml.jackson.databind.BeanProperty.EMPTY_FORMAT"
- "com.fasterxml.jackson.databind.BeanProperty.EMPTY_INCLUDE"
methods:
- "com.fasterxml.jackson.databind.BeanProperty.<A>getAnnotation(java.lang.Class<A>)"
- "com.fasterxml.jackson.databind.BeanProperty.<A>getContextAnnotation(java.lang.Class<A>)"
- "com.fasterxml.jackson.databind.BeanProperty.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.BeanProperty.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)"
- "com.fasterxml.jackson.databind.BeanProperty.findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector)"
- "com.fasterxml.jackson.databind.BeanProperty.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.BeanProperty.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.BeanProperty.getFullName()"
- "com.fasterxml.jackson.databind.BeanProperty.getMember()"
- "com.fasterxml.jackson.databind.BeanProperty.getMetadata()"
- "com.fasterxml.jackson.databind.BeanProperty.getName()"
- "com.fasterxml.jackson.databind.BeanProperty.getType()"
- "com.fasterxml.jackson.databind.BeanProperty.getWrapperName()"
- "com.fasterxml.jackson.databind.BeanProperty.isRequired()"
- "com.fasterxml.jackson.databind.BeanProperty.isVirtual()"
type: "interface"
implements:
- "<xref href=\"com.fasterxml.jackson.databind.util.Named?alt=com.fasterxml.jackson.databind.util.Named&text=Named\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
