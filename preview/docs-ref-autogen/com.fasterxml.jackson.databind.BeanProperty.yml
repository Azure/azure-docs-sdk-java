### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.BeanProperty
  id: BeanProperty
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind
  children:
  - com.fasterxml.jackson.databind.BeanProperty.<A>getAnnotation(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.BeanProperty.<A>getContextAnnotation(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.BeanProperty.Bogus
  - com.fasterxml.jackson.databind.BeanProperty.EMPTY_FORMAT
  - com.fasterxml.jackson.databind.BeanProperty.EMPTY_INCLUDE
  - com.fasterxml.jackson.databind.BeanProperty.Std
  - com.fasterxml.jackson.databind.BeanProperty.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.BeanProperty.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  - com.fasterxml.jackson.databind.BeanProperty.findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector)
  - com.fasterxml.jackson.databind.BeanProperty.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.BeanProperty.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.BeanProperty.getFullName()
  - com.fasterxml.jackson.databind.BeanProperty.getMember()
  - com.fasterxml.jackson.databind.BeanProperty.getMetadata()
  - com.fasterxml.jackson.databind.BeanProperty.getName()
  - com.fasterxml.jackson.databind.BeanProperty.getType()
  - com.fasterxml.jackson.databind.BeanProperty.getWrapperName()
  - com.fasterxml.jackson.databind.BeanProperty.isRequired()
  - com.fasterxml.jackson.databind.BeanProperty.isVirtual()
  langs:
  - java
  name: BeanProperty
  nameWithType: BeanProperty
  fullName: com.fasterxml.jackson.databind.BeanProperty
  type: Interface
  package: com.fasterxml.jackson.databind
  summary: >-
    Bean properties are logical entities that represent data that Java objects (POJOs (Plain Old Java Objects), sometimes also called "beans") contain; and that are accessed using accessors (methods like getters and setters, fields, constructor parameters). Instances allow access to annotations directly associated to property (via field or method), as well as contextual annotations (annotations for class that contains properties).


    Instances are not typically passed when constructing serializers and deserializers, but rather only passed when context is known when <xref uid="com.fasterxml.jackson.databind.ser.ContextualSerializer" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.ser.ContextualSerializer</xref> and <xref uid="com.fasterxml.jackson.databind.deser.ContextualDeserializer" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.deser.ContextualDeserializer</xref> resolution occurs (`createContextual(...)` method is called). References may (need to) be retained by serializers and deserializers, especially when further resolving dependent handlers like value serializers/deserializers or structured types.
  syntax:
    content: public interface BeanProperty extends Named
  implements:
  - com.fasterxml.jackson.databind.util.Named
- uid: com.fasterxml.jackson.databind.BeanProperty.<A>getAnnotation(java.lang.Class<A>)
  id: <A>getAnnotation(java.lang.Class<A>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.BeanProperty
  langs:
  - java
  name: <A>getAnnotation(Class<A> acls)
  nameWithType: BeanProperty.<A>getAnnotation(Class<A> acls)
  fullName: com.fasterxml.jackson.databind.BeanProperty.<A>getAnnotation(Class<A> acls)
  overload: com.fasterxml.jackson.databind.BeanProperty.getAnnotation*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for finding annotation associated with this property; meaning annotation associated with one of entities used to access property.


    Note that this method should only be called for custom annotations; access to standard Jackson annotations (or ones supported by alternate <xref uid="com.fasterxml.jackson.databind.AnnotationIntrospector" data-throw-if-not-resolved="false">AnnotationIntrospector</xref>s) should be accessed through <xref uid="com.fasterxml.jackson.databind.AnnotationIntrospector" data-throw-if-not-resolved="false">AnnotationIntrospector</xref>.
  syntax:
    content: public abstract A <A>getAnnotation(Class<A> acls)
    parameters:
    - id: acls
      type: java.lang.Class<A>
    return:
      type: A
- uid: com.fasterxml.jackson.databind.BeanProperty.<A>getContextAnnotation(java.lang.Class<A>)
  id: <A>getContextAnnotation(java.lang.Class<A>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.BeanProperty
  langs:
  - java
  name: <A>getContextAnnotation(Class<A> acls)
  nameWithType: BeanProperty.<A>getContextAnnotation(Class<A> acls)
  fullName: com.fasterxml.jackson.databind.BeanProperty.<A>getContextAnnotation(Class<A> acls)
  overload: com.fasterxml.jackson.databind.BeanProperty.getContextAnnotation*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for finding annotation associated with context of this property; usually class in which member is declared (or its subtype if processing subtype).


    Note that this method should only be called for custom annotations; access to standard Jackson annotations (or ones supported by alternate <xref uid="com.fasterxml.jackson.databind.AnnotationIntrospector" data-throw-if-not-resolved="false">AnnotationIntrospector</xref>s) should be accessed through <xref uid="com.fasterxml.jackson.databind.AnnotationIntrospector" data-throw-if-not-resolved="false">AnnotationIntrospector</xref>.
  syntax:
    content: public abstract A <A>getContextAnnotation(Class<A> acls)
    parameters:
    - id: acls
      type: java.lang.Class<A>
    return:
      type: A
- uid: com.fasterxml.jackson.databind.BeanProperty.EMPTY_FORMAT
  id: EMPTY_FORMAT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.BeanProperty
  langs:
  - java
  name: EMPTY_FORMAT
  nameWithType: BeanProperty.EMPTY_FORMAT
  fullName: com.fasterxml.jackson.databind.BeanProperty.EMPTY_FORMAT
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: public static final JsonFormat.Value EMPTY_FORMAT
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.databind.BeanProperty.EMPTY_INCLUDE
  id: EMPTY_INCLUDE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.BeanProperty
  langs:
  - java
  name: EMPTY_INCLUDE
  nameWithType: BeanProperty.EMPTY_INCLUDE
  fullName: com.fasterxml.jackson.databind.BeanProperty.EMPTY_INCLUDE
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: public static final JsonInclude.Value EMPTY_INCLUDE
    return:
      type: com.fasterxml.jackson.annotation.JsonInclude.Value
- uid: com.fasterxml.jackson.databind.BeanProperty.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  id: depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.BeanProperty
  langs:
  - java
  name: depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor objectVisitor, SerializerProvider provider)
  nameWithType: BeanProperty.depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor objectVisitor, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.BeanProperty.depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor objectVisitor, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.BeanProperty.depositSchemaProperty*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method that can be called to visit the type structure that this property is part of. Note that not all implementations support traversal with this method; those that do not should throw <xref uid="" data-throw-if-not-resolved="false">UnsupportedOperationException</xref>.


    NOTE: Starting with 2.7, takes explicit <xref uid="com.fasterxml.jackson.databind.SerializerProvider" data-throw-if-not-resolved="false">SerializerProvider</xref> argument to reduce the need to rely on provider visitor may or may not have assigned.
  syntax:
    content: public abstract void depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor objectVisitor, SerializerProvider provider)
    parameters:
    - id: objectVisitor
      type: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor
      description: Visitor to used as the callback handler
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.BeanProperty.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  id: findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.BeanProperty
  langs:
  - java
  name: findAliases(MapperConfig<?> config)
  nameWithType: BeanProperty.findAliases(MapperConfig<?> config)
  fullName: com.fasterxml.jackson.databind.BeanProperty.findAliases(MapperConfig<?> config)
  overload: com.fasterxml.jackson.databind.BeanProperty.findAliases*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for accessing set of possible alternate names that are accepted during deserialization.
  syntax:
    content: public abstract List<PropertyName> findAliases(MapperConfig<?> config)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    return:
      type: java.util.List<com.fasterxml.jackson.databind.PropertyName>
      description: List (possibly empty) of alternate names; never null
- uid: com.fasterxml.jackson.databind.BeanProperty.findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector)
  id: findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.BeanProperty
  langs:
  - java
  name: findFormatOverrides(AnnotationIntrospector intr)
  nameWithType: BeanProperty.findFormatOverrides(AnnotationIntrospector intr)
  fullName: com.fasterxml.jackson.databind.BeanProperty.findFormatOverrides(AnnotationIntrospector intr)
  overload: com.fasterxml.jackson.databind.BeanProperty.findFormatOverrides*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Convenience method that is roughly equivalent to


    ```java

    return intr.findFormat(getMember());

    ```


    and specifically does NOT try to find per-type format defaults to merge; use <xref uid="com.fasterxml.jackson.databind.BeanProperty.findPropertyFormat*" data-throw-if-not-resolved="false">#findPropertyFormat</xref> if such defaults would be useful.
  syntax:
    content: public abstract JsonFormat.Value findFormatOverrides(AnnotationIntrospector intr)
    parameters:
    - id: intr
      type: com.fasterxml.jackson.databind.AnnotationIntrospector
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.databind.BeanProperty.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  id: findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.BeanProperty
  langs:
  - java
  name: findPropertyFormat(MapperConfig<?> config, Class<?> baseType)
  nameWithType: BeanProperty.findPropertyFormat(MapperConfig<?> config, Class<?> baseType)
  fullName: com.fasterxml.jackson.databind.BeanProperty.findPropertyFormat(MapperConfig<?> config, Class<?> baseType)
  overload: com.fasterxml.jackson.databind.BeanProperty.findPropertyFormat*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Helper method used to look up format settings applicable to this property, considering both possible per-type configuration settings
  syntax:
    content: public abstract JsonFormat.Value findPropertyFormat(MapperConfig<?> config, Class<?> baseType)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: baseType
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.databind.BeanProperty.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  id: findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.BeanProperty
  langs:
  - java
  name: findPropertyInclusion(MapperConfig<?> config, Class<?> baseType)
  nameWithType: BeanProperty.findPropertyInclusion(MapperConfig<?> config, Class<?> baseType)
  fullName: com.fasterxml.jackson.databind.BeanProperty.findPropertyInclusion(MapperConfig<?> config, Class<?> baseType)
  overload: com.fasterxml.jackson.databind.BeanProperty.findPropertyInclusion*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Convenience method that is roughly equivalent to


    ```java

    return config.getAnnotationIntrospector().findPropertyInclusion(getMember());

    ```


    but also considers global default settings for inclusion
  syntax:
    content: public abstract JsonInclude.Value findPropertyInclusion(MapperConfig<?> config, Class<?> baseType)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: baseType
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.annotation.JsonInclude.Value
- uid: com.fasterxml.jackson.databind.BeanProperty.getFullName()
  id: getFullName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.BeanProperty
  langs:
  - java
  name: getFullName()
  nameWithType: BeanProperty.getFullName()
  fullName: com.fasterxml.jackson.databind.BeanProperty.getFullName()
  overload: com.fasterxml.jackson.databind.BeanProperty.getFullName*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for getting full name definition, including possible format-specific additional properties (such as namespace when using XML backend).
  syntax:
    content: public abstract PropertyName getFullName()
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.BeanProperty.getMember()
  id: getMember()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.BeanProperty
  langs:
  - java
  name: getMember()
  nameWithType: BeanProperty.getMember()
  fullName: com.fasterxml.jackson.databind.BeanProperty.getMember()
  overload: com.fasterxml.jackson.databind.BeanProperty.getMember*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for accessing primary physical entity that represents the property; annotated field, method or constructor property.
  syntax:
    content: public abstract AnnotatedMember getMember()
    return:
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMember
- uid: com.fasterxml.jackson.databind.BeanProperty.getMetadata()
  id: getMetadata()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.BeanProperty
  langs:
  - java
  name: getMetadata()
  nameWithType: BeanProperty.getMetadata()
  fullName: com.fasterxml.jackson.databind.BeanProperty.getMetadata()
  overload: com.fasterxml.jackson.databind.BeanProperty.getMetadata*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Accessor for additional optional information about property.
  syntax:
    content: public abstract PropertyMetadata getMetadata()
    return:
      type: com.fasterxml.jackson.databind.PropertyMetadata
      description: Metadata about property; never null.
- uid: com.fasterxml.jackson.databind.BeanProperty.getName()
  id: getName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.BeanProperty
  langs:
  - java
  name: getName()
  nameWithType: BeanProperty.getName()
  fullName: com.fasterxml.jackson.databind.BeanProperty.getName()
  overload: com.fasterxml.jackson.databind.BeanProperty.getName*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method to get logical name of the property
  syntax:
    content: public abstract String getName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.BeanProperty.getType()
  id: getType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.BeanProperty
  langs:
  - java
  name: getType()
  nameWithType: BeanProperty.getType()
  fullName: com.fasterxml.jackson.databind.BeanProperty.getType()
  overload: com.fasterxml.jackson.databind.BeanProperty.getType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method to get declared type of the property.
  syntax:
    content: public abstract JavaType getType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.BeanProperty.getWrapperName()
  id: getWrapperName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.BeanProperty
  langs:
  - java
  name: getWrapperName()
  nameWithType: BeanProperty.getWrapperName()
  fullName: com.fasterxml.jackson.databind.BeanProperty.getWrapperName()
  overload: com.fasterxml.jackson.databind.BeanProperty.getWrapperName*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: If property is indicated to be wrapped, name of wrapper element to use.
  syntax:
    content: public abstract PropertyName getWrapperName()
    return:
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.BeanProperty.isRequired()
  id: isRequired()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.BeanProperty
  langs:
  - java
  name: isRequired()
  nameWithType: BeanProperty.isRequired()
  fullName: com.fasterxml.jackson.databind.BeanProperty.isRequired()
  overload: com.fasterxml.jackson.databind.BeanProperty.isRequired*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Whether value for property is marked as required using annotations or associated schema. Equivalent to: `getMetadata().isRequired()`'
  syntax:
    content: public abstract boolean isRequired()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.BeanProperty.isVirtual()
  id: isVirtual()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.BeanProperty
  langs:
  - java
  name: isVirtual()
  nameWithType: BeanProperty.isVirtual()
  fullName: com.fasterxml.jackson.databind.BeanProperty.isVirtual()
  overload: com.fasterxml.jackson.databind.BeanProperty.isVirtual*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Accessor for checking whether there is an actual physical property behind this property abstraction or not.
  syntax:
    content: public abstract boolean isVirtual()
    return:
      type: boolean
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.BeanProperty.getName*
  name: getName
  nameWithType: BeanProperty.getName
  fullName: com.fasterxml.jackson.databind.BeanProperty.getName
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.PropertyName
  name: PropertyName
  nameWithType: PropertyName
  fullName: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.BeanProperty.getFullName*
  name: getFullName
  nameWithType: BeanProperty.getFullName
  fullName: com.fasterxml.jackson.databind.BeanProperty.getFullName
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.BeanProperty.getType*
  name: getType
  nameWithType: BeanProperty.getType
  fullName: com.fasterxml.jackson.databind.BeanProperty.getType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.BeanProperty.getWrapperName*
  name: getWrapperName
  nameWithType: BeanProperty.getWrapperName
  fullName: com.fasterxml.jackson.databind.BeanProperty.getWrapperName
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.PropertyMetadata
  name: PropertyMetadata
  nameWithType: PropertyMetadata
  fullName: com.fasterxml.jackson.databind.PropertyMetadata
- uid: com.fasterxml.jackson.databind.BeanProperty.getMetadata*
  name: getMetadata
  nameWithType: BeanProperty.getMetadata
  fullName: com.fasterxml.jackson.databind.BeanProperty.getMetadata
  package: com.fasterxml.jackson.databind
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.BeanProperty.isRequired*
  name: isRequired
  nameWithType: BeanProperty.isRequired
  fullName: com.fasterxml.jackson.databind.BeanProperty.isRequired
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.BeanProperty.isVirtual*
  name: isVirtual
  nameWithType: BeanProperty.isVirtual
  fullName: com.fasterxml.jackson.databind.BeanProperty.isVirtual
  package: com.fasterxml.jackson.databind
- uid: java.lang.Class<A>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: A
    name: A
    fullName: A
  - name: '>'
    fullName: '>'
- uid: A
  spec.java:
  - uid: A
    name: A
    fullName: A
- uid: com.fasterxml.jackson.databind.BeanProperty.getAnnotation*
  name: <A>getAnnotation
  nameWithType: BeanProperty.<A>getAnnotation
  fullName: com.fasterxml.jackson.databind.BeanProperty.<A>getAnnotation
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.BeanProperty.getContextAnnotation*
  name: <A>getContextAnnotation
  nameWithType: BeanProperty.<A>getContextAnnotation
  fullName: com.fasterxml.jackson.databind.BeanProperty.<A>getContextAnnotation
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedMember
  name: AnnotatedMember
  nameWithType: AnnotatedMember
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedMember
- uid: com.fasterxml.jackson.databind.BeanProperty.getMember*
  name: getMember
  nameWithType: BeanProperty.getMember
  fullName: com.fasterxml.jackson.databind.BeanProperty.getMember
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.AnnotationIntrospector
  name: AnnotationIntrospector
  nameWithType: AnnotationIntrospector
  fullName: com.fasterxml.jackson.databind.AnnotationIntrospector
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value
  name: JsonFormat.Value
  nameWithType: JsonFormat.Value
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.databind.BeanProperty.findFormatOverrides*
  name: findFormatOverrides
  nameWithType: BeanProperty.findFormatOverrides
  fullName: com.fasterxml.jackson.databind.BeanProperty.findFormatOverrides
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.cfg.MapperConfig
    name: MapperConfig
    fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.BeanProperty.findPropertyFormat*
  name: findPropertyFormat
  nameWithType: BeanProperty.findPropertyFormat
  fullName: com.fasterxml.jackson.databind.BeanProperty.findPropertyFormat
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.annotation.JsonInclude.Value
  name: JsonInclude.Value
  nameWithType: JsonInclude.Value
  fullName: com.fasterxml.jackson.annotation.JsonInclude.Value
- uid: com.fasterxml.jackson.databind.BeanProperty.findPropertyInclusion*
  name: findPropertyInclusion
  nameWithType: BeanProperty.findPropertyInclusion
  fullName: com.fasterxml.jackson.databind.BeanProperty.findPropertyInclusion
  package: com.fasterxml.jackson.databind
- uid: java.util.List<com.fasterxml.jackson.databind.PropertyName>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.PropertyName
    name: PropertyName
    fullName: com.fasterxml.jackson.databind.PropertyName
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.BeanProperty.findAliases*
  name: findAliases
  nameWithType: BeanProperty.findAliases
  fullName: com.fasterxml.jackson.databind.BeanProperty.findAliases
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor
  name: jsonFormatVisitors.JsonObjectFormatVisitor
  nameWithType: jsonFormatVisitors.JsonObjectFormatVisitor
  fullName: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.BeanProperty.depositSchemaProperty*
  name: depositSchemaProperty
  nameWithType: BeanProperty.depositSchemaProperty
  fullName: com.fasterxml.jackson.databind.BeanProperty.depositSchemaProperty
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.util.Named
  name: Named
  nameWithType: Named
  fullName: com.fasterxml.jackson.databind.util.Named
- uid: com.fasterxml.jackson.databind.BeanProperty.Bogus
  name: BeanProperty.Bogus
  nameWithType: BeanProperty.Bogus
  fullName: com.fasterxml.jackson.databind.BeanProperty.Bogus
- uid: com.fasterxml.jackson.databind.BeanProperty.Std
  name: BeanProperty.Std
  nameWithType: BeanProperty.Std
  fullName: com.fasterxml.jackson.databind.BeanProperty.Std
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig
  name: MapperConfig
  nameWithType: MapperConfig
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
