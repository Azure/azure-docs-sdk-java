### YamlMime:JavaMember
uid: "com.azure.search.documents.SearchAsyncClient.suggest*"
fullName: "com.azure.search.documents.SearchAsyncClient.suggest"
name: "suggest"
nameWithType: "SearchAsyncClient.suggest"
members:
- uid: "com.azure.search.documents.SearchAsyncClient.suggest(java.lang.String,java.lang.String)"
  fullName: "com.azure.search.documents.SearchAsyncClient.suggest(String searchText, String suggesterName)"
  name: "suggest(String searchText, String suggesterName)"
  nameWithType: "SearchAsyncClient.suggest(String searchText, String suggesterName)"
  summary: "Suggests documents in the index that match the given partial query.\n\n**Code Sample**\n\nSuggest text from documents in service.\n\n```java\nsearchAsyncClient.suggest(\"searchText\", \"sg\")\n     .subscribe(results -> {\n         for (Map.Entry<String, Object> keyValuePair: results.getDocument(SearchDocument.class).entrySet()) {\n             System.out.printf(\"Document key %s, document value %s\", keyValuePair.getKey(),\n                 keyValuePair.getValue());\n         }\n     });\n```"
  parameters:
  - description: "The search text on which to base suggestions"
    name: "searchText"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the suggester as specified in the suggesters collection that's part of the index\n definition"
    name: "suggesterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SuggestPagedFlux suggest(String searchText, String suggesterName)"
  returns:
    description: "A <xref uid=\"com.azure.search.documents.util.SuggestPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SuggestPagedFlux\"></xref> that iterates over <xref uid=\"com.azure.search.documents.models.SuggestResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SuggestResult\"></xref> objects and provides access to the\n <xref uid=\"com.azure.search.documents.util.SuggestPagedResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SuggestPagedResponse\"></xref> object for each page containing HTTP response and coverage information."
    type: "<xref href=\"com.azure.search.documents.util.SuggestPagedFlux?alt=com.azure.search.documents.util.SuggestPagedFlux&text=SuggestPagedFlux\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.SearchAsyncClient.suggest(java.lang.String,java.lang.String,com.azure.search.documents.models.SuggestOptions)"
  fullName: "com.azure.search.documents.SearchAsyncClient.suggest(String searchText, String suggesterName, SuggestOptions suggestOptions)"
  name: "suggest(String searchText, String suggesterName, SuggestOptions suggestOptions)"
  nameWithType: "SearchAsyncClient.suggest(String searchText, String suggesterName, SuggestOptions suggestOptions)"
  summary: "Suggests documents in the index that match the given partial query.\n\n**Code Sample**\n\nSuggest text from documents in service with option.\n\n```java\nsearchAsyncClient.suggest(\"searchText\", \"sg\",\n     new SuggestOptions().setOrderBy(\"hotelId desc\"))\n     .subscribe(results -> {\n         for (Map.Entry<String, Object> keyValuePair: results.getDocument(SearchDocument.class).entrySet()) {\n             System.out.printf(\"Document key %s, document value %s\", keyValuePair.getKey(),\n                 keyValuePair.getValue());\n         }\n     });\n```"
  parameters:
  - description: "The search text on which to base suggestions"
    name: "searchText"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the suggester as specified in the suggesters collection that's part of the index\n definition"
    name: "suggesterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters to further refine the suggestion query."
    name: "suggestOptions"
    type: "<xref href=\"com.azure.search.documents.models.SuggestOptions?alt=com.azure.search.documents.models.SuggestOptions&text=SuggestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SuggestPagedFlux suggest(String searchText, String suggesterName, SuggestOptions suggestOptions)"
  returns:
    description: "A <xref uid=\"com.azure.search.documents.util.SuggestPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SuggestPagedFlux\"></xref> that iterates over <xref uid=\"com.azure.search.documents.models.SuggestResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SuggestResult\"></xref> objects and provides access to the\n <xref uid=\"com.azure.search.documents.util.SuggestPagedResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SuggestPagedResponse\"></xref> object for each page containing HTTP response and coverage information."
    type: "<xref href=\"com.azure.search.documents.util.SuggestPagedFlux?alt=com.azure.search.documents.util.SuggestPagedFlux&text=SuggestPagedFlux\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.search.documents"
artifact: com.azure:azure-search-documents:11.2.0-beta.3
