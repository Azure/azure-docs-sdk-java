### YamlMime:JavaMember
uid: "com.azure.resourcemanager.quota.implementation.QuotasClientImpl.beginUpdate*"
fullName: "com.azure.resourcemanager.quota.implementation.QuotasClientImpl.beginUpdate"
name: "beginUpdate"
nameWithType: "QuotasClientImpl.beginUpdate"
members:
- uid: "com.azure.resourcemanager.quota.implementation.QuotasClientImpl.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner)"
  fullName: "com.azure.resourcemanager.quota.implementation.QuotasClientImpl.beginUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  name: "beginUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  nameWithType: "QuotasClientImpl.beginUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  summary: "Update the quota limit for a specific resource to the specified value: 1. Use the Usages-GET and Quota-GET operations to determine the remaining quota for the specific resource and to calculate the new quota limit. These steps are detailed in \\[this example\\](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670). 2. Use this PUT operation to update the quota limit. Please check the URI in location header for the detailed status of the request."
  parameters:
  - description: "Resource name for a given resource provider. For example: - SKU name for Microsoft.Compute -\n     SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices For Microsoft.Network PublicIPAddresses."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Quota requests payload."
    name: "createQuotaRequest"
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<PollResult<CurrentQuotaLimitBaseInner>,CurrentQuotaLimitBaseInner> beginUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  returns:
    description: "quota limit."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.implementation.QuotasClientImpl.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.implementation.QuotasClientImpl.beginUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  name: "beginUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  nameWithType: "QuotasClientImpl.beginUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  summary: "Update the quota limit for a specific resource to the specified value: 1. Use the Usages-GET and Quota-GET operations to determine the remaining quota for the specific resource and to calculate the new quota limit. These steps are detailed in \\[this example\\](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670). 2. Use this PUT operation to update the quota limit. Please check the URI in location header for the detailed status of the request."
  parameters:
  - description: "Resource name for a given resource provider. For example: - SKU name for Microsoft.Compute -\n     SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices For Microsoft.Network PublicIPAddresses."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Quota requests payload."
    name: "createQuotaRequest"
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<PollResult<CurrentQuotaLimitBaseInner>,CurrentQuotaLimitBaseInner> beginUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  returns:
    description: "quota limit."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.quota.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-quota:1.0.0-beta.2
