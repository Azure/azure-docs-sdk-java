### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  id: CompareToBuilder
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder
  children:
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.CompareToBuilder()
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(boolean,boolean)
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(boolean[],boolean[])
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(byte,byte)
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(byte[],byte[])
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(char,char)
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(char[],char[])
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(double,double)
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(double[],double[])
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(float,float)
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(float[],float[])
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(int,int)
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(int[],int[])
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator<?>)
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[])
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator<?>)
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(long,long)
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(long[],long[])
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(short,short)
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(short[],short[])
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.build()
  - com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.toComparison()
  langs:
  - java
  name: CompareToBuilder
  nameWithType: CompareToBuilder
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  type: Class
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  syntax:
    content: public class CompareToBuilder implements Builder<Integer>
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.cosmos.implementation.apachecommons.lang.builder.Builder<java.lang.Integer>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.CompareToBuilder()
  id: CompareToBuilder()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: CompareToBuilder()
  nameWithType: CompareToBuilder.CompareToBuilder()
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.CompareToBuilder()
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.CompareToBuilder*
  type: Constructor
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: >-
    Constructor for CompareToBuilder.


    Starts off assuming that the objects are equal. Multiple calls are then made to the various append methods, followed by a call to <xref uid="com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.toComparison*" data-throw-if-not-resolved="false">#toComparison</xref> to get the result.
  syntax:
    content: public CompareToBuilder()
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(boolean,boolean)
  id: append(boolean,boolean)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(boolean lhs, boolean rhs)
  nameWithType: CompareToBuilder.append(boolean lhs, boolean rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(boolean lhs, boolean rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: Appends to the `builder` the comparison of two `booleans`s.
  syntax:
    content: public CompareToBuilder append(boolean lhs, boolean rhs)
    parameters:
    - id: lhs
      type: boolean
      description: left-hand value
    - id: rhs
      type: boolean
      description: right-hand value
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(boolean[],boolean[])
  id: append(boolean[],boolean[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(boolean[] lhs, boolean[] rhs)
  nameWithType: CompareToBuilder.append(boolean[] lhs, boolean[] rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(boolean[] lhs, boolean[] rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: >-
    Appends to the `builder` the deep comparison of two `boolean` arrays.


    1.  Check if arrays are the same using `==`

    2.  Check if for `null`, `null` is less than non-`null`

    3.  Check array length, a shorter length array is less than a longer length array

    4.  Check array contents element by element using <xref uid="com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(boolean,boolean)" data-throw-if-not-resolved="false">#append(boolean, boolean)</xref>
  syntax:
    content: public CompareToBuilder append(boolean[] lhs, boolean[] rhs)
    parameters:
    - id: lhs
      type: boolean[]
      description: left-hand array
    - id: rhs
      type: boolean[]
      description: right-hand array
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(byte,byte)
  id: append(byte,byte)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(byte lhs, byte rhs)
  nameWithType: CompareToBuilder.append(byte lhs, byte rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(byte lhs, byte rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: Appends to the `builder` the comparison of two `byte`s.
  syntax:
    content: public CompareToBuilder append(byte lhs, byte rhs)
    parameters:
    - id: lhs
      type: byte
      description: left-hand value
    - id: rhs
      type: byte
      description: right-hand value
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(byte[],byte[])
  id: append(byte[],byte[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(byte[] lhs, byte[] rhs)
  nameWithType: CompareToBuilder.append(byte[] lhs, byte[] rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(byte[] lhs, byte[] rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: >-
    Appends to the `builder` the deep comparison of two `byte` arrays.


    1.  Check if arrays are the same using `==`

    2.  Check if for `null`, `null` is less than non-`null`

    3.  Check array length, a shorter length array is less than a longer length array

    4.  Check array contents element by element using <xref uid="com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(byte,byte)" data-throw-if-not-resolved="false">#append(byte, byte)</xref>
  syntax:
    content: public CompareToBuilder append(byte[] lhs, byte[] rhs)
    parameters:
    - id: lhs
      type: byte[]
      description: left-hand array
    - id: rhs
      type: byte[]
      description: right-hand array
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(char,char)
  id: append(char,char)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(char lhs, char rhs)
  nameWithType: CompareToBuilder.append(char lhs, char rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(char lhs, char rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: Appends to the `builder` the comparison of two `char`s.
  syntax:
    content: public CompareToBuilder append(char lhs, char rhs)
    parameters:
    - id: lhs
      type: char
      description: left-hand value
    - id: rhs
      type: char
      description: right-hand value
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(char[],char[])
  id: append(char[],char[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(char[] lhs, char[] rhs)
  nameWithType: CompareToBuilder.append(char[] lhs, char[] rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(char[] lhs, char[] rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: >-
    Appends to the `builder` the deep comparison of two `char` arrays.


    1.  Check if arrays are the same using `==`

    2.  Check if for `null`, `null` is less than non-`null`

    3.  Check array length, a shorter length array is less than a longer length array

    4.  Check array contents element by element using <xref uid="com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(char,char)" data-throw-if-not-resolved="false">#append(char, char)</xref>
  syntax:
    content: public CompareToBuilder append(char[] lhs, char[] rhs)
    parameters:
    - id: lhs
      type: char[]
      description: left-hand array
    - id: rhs
      type: char[]
      description: right-hand array
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(double,double)
  id: append(double,double)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(double lhs, double rhs)
  nameWithType: CompareToBuilder.append(double lhs, double rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(double lhs, double rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: >-
    Appends to the `builder` the comparison of two `double`s.


    This handles NaNs, Infinities, and `-0.0`.


    It is compatible with the hash code generated by `HashCodeBuilder`.
  syntax:
    content: public CompareToBuilder append(double lhs, double rhs)
    parameters:
    - id: lhs
      type: double
      description: left-hand value
    - id: rhs
      type: double
      description: right-hand value
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(double[],double[])
  id: append(double[],double[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(double[] lhs, double[] rhs)
  nameWithType: CompareToBuilder.append(double[] lhs, double[] rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(double[] lhs, double[] rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: >-
    Appends to the `builder` the deep comparison of two `double` arrays.


    1.  Check if arrays are the same using `==`

    2.  Check if for `null`, `null` is less than non-`null`

    3.  Check array length, a shorter length array is less than a longer length array

    4.  Check array contents element by element using <xref uid="com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(double,double)" data-throw-if-not-resolved="false">#append(double, double)</xref>
  syntax:
    content: public CompareToBuilder append(double[] lhs, double[] rhs)
    parameters:
    - id: lhs
      type: double[]
      description: left-hand array
    - id: rhs
      type: double[]
      description: right-hand array
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(float,float)
  id: append(float,float)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(float lhs, float rhs)
  nameWithType: CompareToBuilder.append(float lhs, float rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(float lhs, float rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: >-
    Appends to the `builder` the comparison of two `float`s.


    This handles NaNs, Infinities, and `-0.0`.


    It is compatible with the hash code generated by `HashCodeBuilder`.
  syntax:
    content: public CompareToBuilder append(float lhs, float rhs)
    parameters:
    - id: lhs
      type: float
      description: left-hand value
    - id: rhs
      type: float
      description: right-hand value
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(float[],float[])
  id: append(float[],float[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(float[] lhs, float[] rhs)
  nameWithType: CompareToBuilder.append(float[] lhs, float[] rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(float[] lhs, float[] rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: >-
    Appends to the `builder` the deep comparison of two `float` arrays.


    1.  Check if arrays are the same using `==`

    2.  Check if for `null`, `null` is less than non-`null`

    3.  Check array length, a shorter length array is less than a longer length array

    4.  Check array contents element by element using <xref uid="com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(float,float)" data-throw-if-not-resolved="false">#append(float, float)</xref>
  syntax:
    content: public CompareToBuilder append(float[] lhs, float[] rhs)
    parameters:
    - id: lhs
      type: float[]
      description: left-hand array
    - id: rhs
      type: float[]
      description: right-hand array
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(int,int)
  id: append(int,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(int lhs, int rhs)
  nameWithType: CompareToBuilder.append(int lhs, int rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(int lhs, int rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: Appends to the `builder` the comparison of two `int`s.
  syntax:
    content: public CompareToBuilder append(int lhs, int rhs)
    parameters:
    - id: lhs
      type: int
      description: left-hand value
    - id: rhs
      type: int
      description: right-hand value
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(int[],int[])
  id: append(int[],int[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(int[] lhs, int[] rhs)
  nameWithType: CompareToBuilder.append(int[] lhs, int[] rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(int[] lhs, int[] rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: >-
    Appends to the `builder` the deep comparison of two `int` arrays.


    1.  Check if arrays are the same using `==`

    2.  Check if for `null`, `null` is less than non-`null`

    3.  Check array length, a shorter length array is less than a longer length array

    4.  Check array contents element by element using <xref uid="com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(int,int)" data-throw-if-not-resolved="false">#append(int, int)</xref>
  syntax:
    content: public CompareToBuilder append(int[] lhs, int[] rhs)
    parameters:
    - id: lhs
      type: int[]
      description: left-hand array
    - id: rhs
      type: int[]
      description: right-hand array
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object)
  id: append(java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(Object lhs, Object rhs)
  nameWithType: CompareToBuilder.append(Object lhs, Object rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(Object lhs, Object rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: >-
    Appends to the `builder` the comparison of two `Object`s.


    1.  Check if `lhs == rhs`

    2.  Check if either `lhs` or `rhs` is `null`, a `null` object is less than a non-`null` object

    3.  Check the object contents


    `lhs` must either be an array or implement <xref uid="java.lang.Comparable" data-throw-if-not-resolved="false">Comparable</xref>.
  syntax:
    content: public CompareToBuilder append(Object lhs, Object rhs)
    parameters:
    - id: lhs
      type: java.lang.Object
      description: left-hand object
    - id: rhs
      type: java.lang.Object
      description: right-hand object
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator<?>)
  id: append(java.lang.Object,java.lang.Object,java.util.Comparator<?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(Object lhs, Object rhs, Comparator<?> comparator)
  nameWithType: CompareToBuilder.append(Object lhs, Object rhs, Comparator<?> comparator)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(Object lhs, Object rhs, Comparator<?> comparator)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: >-
    Appends to the `builder` the comparison of two `Object`s.


    1.  Check if `lhs == rhs`

    2.  Check if either `lhs` or `rhs` is `null`, a `null` object is less than a non-`null` object

    3.  Check the object contents


    If `lhs` is an array, array comparison methods will be used. Otherwise `comparator` will be used to compare the objects. If `comparator` is `null`, `lhs` must implement <xref uid="java.lang.Comparable" data-throw-if-not-resolved="false">Comparable</xref> instead.
  syntax:
    content: public CompareToBuilder append(Object lhs, Object rhs, Comparator<?> comparator)
    parameters:
    - id: lhs
      type: java.lang.Object
      description: left-hand object
    - id: rhs
      type: java.lang.Object
      description: right-hand object
    - id: comparator
      type: java.util.Comparator<?>
      description: >-
        <code>Comparator</code> used to compare the objects,
          <code>null</code> means treat lhs as <code>Comparable</code>
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[])
  id: append(java.lang.Object[],java.lang.Object[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(Object[] lhs, Object[] rhs)
  nameWithType: CompareToBuilder.append(Object[] lhs, Object[] rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(Object[] lhs, Object[] rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: >-
    Appends to the `builder` the deep comparison of two `Object` arrays.


    1.  Check if arrays are the same using `==`

    2.  Check if for `null`, `null` is less than non-`null`

    3.  Check array length, a short length array is less than a long length array

    4.  Check array contents element by element using <xref uid="com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator&lt;?&gt;)" data-throw-if-not-resolved="false">#append(Object, Object, Comparator)</xref>


    This method will also will be called for the top level of multi-dimensional, ragged, and multi-typed arrays.
  syntax:
    content: public CompareToBuilder append(Object[] lhs, Object[] rhs)
    parameters:
    - id: lhs
      type: java.lang.Object[]
      description: left-hand array
    - id: rhs
      type: java.lang.Object[]
      description: right-hand array
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator<?>)
  id: append(java.lang.Object[],java.lang.Object[],java.util.Comparator<?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(Object[] lhs, Object[] rhs, Comparator<?> comparator)
  nameWithType: CompareToBuilder.append(Object[] lhs, Object[] rhs, Comparator<?> comparator)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(Object[] lhs, Object[] rhs, Comparator<?> comparator)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: >-
    Appends to the `builder` the deep comparison of two `Object` arrays.


    1.  Check if arrays are the same using `==`

    2.  Check if for `null`, `null` is less than non-`null`

    3.  Check array length, a short length array is less than a long length array

    4.  Check array contents element by element using <xref uid="com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator&lt;?&gt;)" data-throw-if-not-resolved="false">#append(Object, Object, Comparator)</xref>


    This method will also will be called for the top level of multi-dimensional, ragged, and multi-typed arrays.
  syntax:
    content: public CompareToBuilder append(Object[] lhs, Object[] rhs, Comparator<?> comparator)
    parameters:
    - id: lhs
      type: java.lang.Object[]
      description: left-hand array
    - id: rhs
      type: java.lang.Object[]
      description: right-hand array
    - id: comparator
      type: java.util.Comparator<?>
      description: >-
        <code>Comparator</code> to use to compare the array elements,
          <code>null</code> means to treat <code>lhs</code> elements as <code>Comparable</code>.
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(long,long)
  id: append(long,long)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(long lhs, long rhs)
  nameWithType: CompareToBuilder.append(long lhs, long rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(long lhs, long rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: Appends to the `builder` the comparison of two `long`s.
  syntax:
    content: public CompareToBuilder append(long lhs, long rhs)
    parameters:
    - id: lhs
      type: long
      description: left-hand value
    - id: rhs
      type: long
      description: right-hand value
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(long[],long[])
  id: append(long[],long[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(long[] lhs, long[] rhs)
  nameWithType: CompareToBuilder.append(long[] lhs, long[] rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(long[] lhs, long[] rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: >-
    Appends to the `builder` the deep comparison of two `long` arrays.


    1.  Check if arrays are the same using `==`

    2.  Check if for `null`, `null` is less than non-`null`

    3.  Check array length, a shorter length array is less than a longer length array

    4.  Check array contents element by element using <xref uid="com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(long,long)" data-throw-if-not-resolved="false">#append(long, long)</xref>
  syntax:
    content: public CompareToBuilder append(long[] lhs, long[] rhs)
    parameters:
    - id: lhs
      type: long[]
      description: left-hand array
    - id: rhs
      type: long[]
      description: right-hand array
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(short,short)
  id: append(short,short)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(short lhs, short rhs)
  nameWithType: CompareToBuilder.append(short lhs, short rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(short lhs, short rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: Appends to the `builder` the comparison of two `short`s.
  syntax:
    content: public CompareToBuilder append(short lhs, short rhs)
    parameters:
    - id: lhs
      type: short
      description: left-hand value
    - id: rhs
      type: short
      description: right-hand value
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(short[],short[])
  id: append(short[],short[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: append(short[] lhs, short[] rhs)
  nameWithType: CompareToBuilder.append(short[] lhs, short[] rhs)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(short[] lhs, short[] rhs)
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: >-
    Appends to the `builder` the deep comparison of two `short` arrays.


    1.  Check if arrays are the same using `==`

    2.  Check if for `null`, `null` is less than non-`null`

    3.  Check array length, a shorter length array is less than a longer length array

    4.  Check array contents element by element using <xref uid="com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append(short,short)" data-throw-if-not-resolved="false">#append(short, short)</xref>
  syntax:
    content: public CompareToBuilder append(short[] lhs, short[] rhs)
    parameters:
    - id: lhs
      type: short[]
      description: left-hand array
    - id: rhs
      type: short[]
      description: right-hand array
    return:
      type: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
      description: this - used to chain append calls
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.build()
  id: build()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: build()
  nameWithType: CompareToBuilder.build()
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.build()
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.build*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: Returns a negative Integer, a positive Integer, or zero as the `builder` has judged the "left-hand" side as less than, greater than, or equal to the "right-hand" side.
  syntax:
    content: public Integer build()
    return:
      type: java.lang.Integer
      description: final comparison result as an Integer
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.toComparison()
  id: toComparison()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder
  langs:
  - java
  name: toComparison()
  nameWithType: CompareToBuilder.toComparison()
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.toComparison()
  overload: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.toComparison*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
  summary: Returns a negative integer, a positive integer, or zero as the `builder` has judged the "left-hand" side as less than, greater than, or equal to the "right-hand" side.
  syntax:
    content: public int toComparison()
    return:
      type: int
      description: final comparison result
references:
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.CompareToBuilder*
  name: CompareToBuilder
  nameWithType: CompareToBuilder.CompareToBuilder
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.CompareToBuilder
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append*
  name: append
  nameWithType: CompareToBuilder.append
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.append
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
- uid: java.util.Comparator<?>
  spec.java:
  - uid: java.util.Comparator
    name: Comparator
    fullName: java.util.Comparator
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: short
  spec.java:
  - uid: short
    name: short
    fullName: short
- uid: char
  spec.java:
  - uid: char
    name: char
    fullName: char
- uid: byte
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
- uid: double
  spec.java:
  - uid: double
    name: double
    fullName: double
- uid: float
  spec.java:
  - uid: float
    name: float
    fullName: float
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: java.lang.Object[]
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '[]'
    fullName: '[]'
- uid: long[]
  spec.java:
  - uid: long
    name: long
    fullName: long
  - name: '[]'
    fullName: '[]'
- uid: int[]
  spec.java:
  - uid: int
    name: int
    fullName: int
  - name: '[]'
    fullName: '[]'
- uid: short[]
  spec.java:
  - uid: short
    name: short
    fullName: short
  - name: '[]'
    fullName: '[]'
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: double[]
  spec.java:
  - uid: double
    name: double
    fullName: double
  - name: '[]'
    fullName: '[]'
- uid: float[]
  spec.java:
  - uid: float
    name: float
    fullName: float
  - name: '[]'
    fullName: '[]'
- uid: boolean[]
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
  - name: '[]'
    fullName: '[]'
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.toComparison*
  name: toComparison
  nameWithType: CompareToBuilder.toComparison
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.toComparison
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.build*
  name: build
  nameWithType: CompareToBuilder.build
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.CompareToBuilder.build
  package: com.azure.cosmos.implementation.apachecommons.lang.builder
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.Builder<java.lang.Integer>
  name: Builder<Integer>
  nameWithType: Builder<Integer>
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.Builder<java.lang.Integer>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Comparator
  name: Comparator
  nameWithType: Comparator
  fullName: java.util.Comparator
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.azure.cosmos.implementation.apachecommons.lang.builder.Builder
  name: Builder
  nameWithType: Builder
  fullName: com.azure.cosmos.implementation.apachecommons.lang.builder.Builder
