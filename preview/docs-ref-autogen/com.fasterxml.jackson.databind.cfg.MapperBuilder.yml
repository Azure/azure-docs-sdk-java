### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder
  id: MapperBuilder
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg
  children:
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.MapperBuilder(M)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder._mapper
  - com.fasterxml.jackson.databind.cfg.MapperBuilder._this()
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,com.fasterxml.jackson.annotation.JsonTypeInfo.As)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.activateDefaultTypingAsProperty(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,java.lang.String)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.addHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.addMixIn(java.lang.Class<?>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.addModule(com.fasterxml.jackson.databind.Module)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.addModules(com.fasterxml.jackson.databind.Module...)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.addModules(java.lang.Iterable<? extends com.fasterxml.jackson.databind.Module>)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.annotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.build()
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.clearProblemHandlers()
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.configure(com.fasterxml.jackson.core.JsonGenerator.Feature,boolean)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.configure(com.fasterxml.jackson.core.StreamReadFeature,boolean)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.configure(com.fasterxml.jackson.core.StreamWriteFeature,boolean)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.configure(com.fasterxml.jackson.databind.MapperFeature,boolean)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.configure(com.fasterxml.jackson.databind.SerializationFeature,boolean)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.deactivateDefaultTyping()
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultBase64Variant(com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultDateFormat(java.text.DateFormat)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultLeniency(java.lang.Boolean)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultLocale(java.util.Locale)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultMergeable(java.lang.Boolean)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude.Value)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultSetterInfo(com.fasterxml.jackson.annotation.JsonSetter.Value)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultTimeZone(java.util.TimeZone)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(com.fasterxml.jackson.core.JsonGenerator.Feature...)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(com.fasterxml.jackson.core.JsonParser.Feature...)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(com.fasterxml.jackson.core.StreamReadFeature...)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(com.fasterxml.jackson.core.StreamWriteFeature...)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(com.fasterxml.jackson.databind.DeserializationFeature...)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(com.fasterxml.jackson.databind.MapperFeature...)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(com.fasterxml.jackson.databind.SerializationFeature...)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(com.fasterxml.jackson.core.JsonGenerator.Feature...)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(com.fasterxml.jackson.core.JsonParser.Feature...)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(com.fasterxml.jackson.core.StreamReadFeature...)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(com.fasterxml.jackson.core.StreamWriteFeature...)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(com.fasterxml.jackson.databind.DeserializationFeature...)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(com.fasterxml.jackson.databind.MapperFeature...)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(com.fasterxml.jackson.databind.SerializationFeature...)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.filterProvider(com.fasterxml.jackson.databind.ser.FilterProvider)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.findAndAddModules()
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.findModules()
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.findModules(java.lang.ClassLoader)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.handlerInstantiator(com.fasterxml.jackson.databind.cfg.HandlerInstantiator)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.injectableValues(com.fasterxml.jackson.databind.InjectableValues)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.nodeFactory(com.fasterxml.jackson.databind.node.JsonNodeFactory)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.polymorphicTypeValidator(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.propertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType...)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.registerSubtypes(java.lang.Class<?>...)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.registerSubtypes(java.util.Collection<java.lang.Class<?>>)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.serializationInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.serializerFactory(com.fasterxml.jackson.databind.ser.SerializerFactory)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.setDefaultTyping(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?>)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.streamFactory()
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.subtypeResolver(com.fasterxml.jackson.databind.jsontype.SubtypeResolver)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.typeFactory(com.fasterxml.jackson.databind.type.TypeFactory)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.visibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  - com.fasterxml.jackson.databind.cfg.MapperBuilder.visibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker<?>)
  langs:
  - java
  name: MapperBuilder<M,B>
  nameWithType: MapperBuilder<M,B>
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>
  type: Class
  package: com.fasterxml.jackson.databind.cfg
  summary: Jackson 3 will introduce fully immutable, builder-based system for constructing <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref>s. Same can not be done with 2.10 for backwards-compatibility reasons; but we can offer sort of "fake" builder, which simply encapsulates configuration calls. The main (and only) point is to allow gradual upgrade.
  syntax:
    content: public abstract class MapperBuilder<M,B>
    typeParameters:
    - id: M
    - id: B
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.MapperBuilder(M)
  id: MapperBuilder(M)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: MapperBuilder(M mapper)
  nameWithType: MapperBuilder<M,B>.MapperBuilder(M mapper)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.MapperBuilder(M mapper)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.MapperBuilder*
  type: Constructor
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: protected MapperBuilder(M mapper)
    parameters:
    - id: mapper
      type: M
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder._mapper
  id: _mapper
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: _mapper
  nameWithType: MapperBuilder<M,B>._mapper
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>._mapper
  type: Field
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: protected final M _mapper
    return:
      type: M
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder._this()
  id: _this()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: _this()
  nameWithType: MapperBuilder<M,B>._this()
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>._this()
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder._this*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: protected final B _this()
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  id: activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: activateDefaultTyping(PolymorphicTypeValidator subtypeValidator)
  nameWithType: MapperBuilder<M,B>.activateDefaultTyping(PolymorphicTypeValidator subtypeValidator)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.activateDefaultTyping(PolymorphicTypeValidator subtypeValidator)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.activateDefaultTyping*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Convenience method that is equivalent to calling


    ```java

    activateDefaultTyping(subtypeValidator, DefaultTyping.OBJECT_AND_NON_CONCRETE);

    ```


    NOTE: choice of <xref uid="com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator" data-throw-if-not-resolved="false">PolymorphicTypeValidator</xref> to pass is critical for security as allowing all subtypes can be risky for untrusted content.
  syntax:
    content: public B activateDefaultTyping(PolymorphicTypeValidator subtypeValidator)
    parameters:
    - id: subtypeValidator
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping)
  id: activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: activateDefaultTyping(PolymorphicTypeValidator subtypeValidator, ObjectMapper.DefaultTyping dti)
  nameWithType: MapperBuilder<M,B>.activateDefaultTyping(PolymorphicTypeValidator subtypeValidator, ObjectMapper.DefaultTyping dti)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.activateDefaultTyping(PolymorphicTypeValidator subtypeValidator, ObjectMapper.DefaultTyping dti)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.activateDefaultTyping*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Convenience method that is equivalent to calling


    ```java

    activateDefaultTyping(subtypeValidator, dti, JsonTypeInfo.As.WRAPPER_ARRAY);

    ```


    NOTE: choice of <xref uid="com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator" data-throw-if-not-resolved="false">PolymorphicTypeValidator</xref> to pass is critical for security as allowing all subtypes can be risky for untrusted content.
  syntax:
    content: public B activateDefaultTyping(PolymorphicTypeValidator subtypeValidator, ObjectMapper.DefaultTyping dti)
    parameters:
    - id: subtypeValidator
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
    - id: dti
      type: com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,com.fasterxml.jackson.annotation.JsonTypeInfo.As)
  id: activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,com.fasterxml.jackson.annotation.JsonTypeInfo.As)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: activateDefaultTyping(PolymorphicTypeValidator subtypeValidator, ObjectMapper.DefaultTyping applicability, JsonTypeInfo.As includeAs)
  nameWithType: MapperBuilder<M,B>.activateDefaultTyping(PolymorphicTypeValidator subtypeValidator, ObjectMapper.DefaultTyping applicability, JsonTypeInfo.As includeAs)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.activateDefaultTyping(PolymorphicTypeValidator subtypeValidator, ObjectMapper.DefaultTyping applicability, JsonTypeInfo.As includeAs)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.activateDefaultTyping*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Method for enabling automatic inclusion of type information, needed for proper deserialization of polymorphic types (unless types have been annotated with <xref uid="com.fasterxml.jackson.annotation.JsonTypeInfo" data-throw-if-not-resolved="false">com.fasterxml.jackson.annotation.JsonTypeInfo</xref>).


    NOTE: use of `JsonTypeInfo.As#EXTERNAL_PROPERTY` **NOT SUPPORTED**; and attempts of do so will throw an <xref uid="" data-throw-if-not-resolved="false">IllegalArgumentException</xref> to make this limitation explicit.


    NOTE: choice of <xref uid="com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator" data-throw-if-not-resolved="false">PolymorphicTypeValidator</xref> to pass is critical for security as allowing all subtypes can be risky for untrusted content.
  syntax:
    content: public B activateDefaultTyping(PolymorphicTypeValidator subtypeValidator, ObjectMapper.DefaultTyping applicability, JsonTypeInfo.As includeAs)
    parameters:
    - id: subtypeValidator
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
    - id: applicability
      type: com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping
      description: >-
        Defines kinds of types for which additional type information
            is added; see <xref uid="" data-throw-if-not-resolved="false">DefaultTyping</xref> for more information.
    - id: includeAs
      type: com.fasterxml.jackson.annotation.JsonTypeInfo.As
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.activateDefaultTypingAsProperty(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,java.lang.String)
  id: activateDefaultTypingAsProperty(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: activateDefaultTypingAsProperty(PolymorphicTypeValidator subtypeValidator, ObjectMapper.DefaultTyping applicability, String propertyName)
  nameWithType: MapperBuilder<M,B>.activateDefaultTypingAsProperty(PolymorphicTypeValidator subtypeValidator, ObjectMapper.DefaultTyping applicability, String propertyName)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.activateDefaultTypingAsProperty(PolymorphicTypeValidator subtypeValidator, ObjectMapper.DefaultTyping applicability, String propertyName)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.activateDefaultTypingAsProperty*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Method for enabling automatic inclusion of type information -- needed for proper deserialization of polymorphic types (unless types have been annotated with <xref uid="com.fasterxml.jackson.annotation.JsonTypeInfo" data-throw-if-not-resolved="false">com.fasterxml.jackson.annotation.JsonTypeInfo</xref>) -- using "As.PROPERTY" inclusion mechanism and specified property name to use for inclusion (default being "@class" since default type information always uses class name as type identifier)


    NOTE: choice of <xref uid="com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator" data-throw-if-not-resolved="false">PolymorphicTypeValidator</xref> to pass is critical for security as allowing all subtypes can be risky for untrusted content.
  syntax:
    content: public B activateDefaultTypingAsProperty(PolymorphicTypeValidator subtypeValidator, ObjectMapper.DefaultTyping applicability, String propertyName)
    parameters:
    - id: subtypeValidator
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
    - id: applicability
      type: com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping
    - id: propertyName
      type: java.lang.String
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.addHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler)
  id: addHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: addHandler(DeserializationProblemHandler h)
  nameWithType: MapperBuilder<M,B>.addHandler(DeserializationProblemHandler h)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.addHandler(DeserializationProblemHandler h)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.addHandler*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method used for adding a <xref uid="com.fasterxml.jackson.databind.deser.DeserializationProblemHandler" data-throw-if-not-resolved="false">DeserializationProblemHandler</xref> for this builder, at the head of the list (meaning it has priority over handler registered earlier).
  syntax:
    content: public B addHandler(DeserializationProblemHandler h)
    parameters:
    - id: h
      type: com.fasterxml.jackson.databind.deser.DeserializationProblemHandler
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.addMixIn(java.lang.Class<?>,java.lang.Class<?>)
  id: addMixIn(java.lang.Class<?>,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: addMixIn(Class<?> target, Class<?> mixinSource)
  nameWithType: MapperBuilder<M,B>.addMixIn(Class<?> target, Class<?> mixinSource)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.addMixIn(Class<?> target, Class<?> mixinSource)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.addMixIn*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Method to use for defining mix-in annotations to use for augmenting annotations that classes have, for purpose of configuration serialization and/or deserialization processing. Mixing in is done when introspecting class annotations and properties. Annotations from "mixin" class (and its supertypes) will **override** annotations that target classes (and their super-types) have.


    Note that standard mixin handler implementations will only allow a single mix-in source class per target, so if there was a previous mix-in defined target it will be cleared. This also means that you can remove mix-in definition by specifying `mixinSource` of `null`
  syntax:
    content: public B addMixIn(Class<?> target, Class<?> mixinSource)
    parameters:
    - id: target
      type: java.lang.Class<?>
    - id: mixinSource
      type: java.lang.Class<?>
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.addModule(com.fasterxml.jackson.databind.Module)
  id: addModule(com.fasterxml.jackson.databind.Module)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: addModule(Module module)
  nameWithType: MapperBuilder<M,B>.addModule(Module module)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.addModule(Module module)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.addModule*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B addModule(Module module)
    parameters:
    - id: module
      type: com.fasterxml.jackson.databind.Module
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.addModules(com.fasterxml.jackson.databind.Module...)
  id: addModules(com.fasterxml.jackson.databind.Module...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: addModules(Module[] modules)
  nameWithType: MapperBuilder<M,B>.addModules(Module[] modules)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.addModules(Module[] modules)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.addModules*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B addModules(Module[] modules)
    parameters:
    - id: modules
      type: com.fasterxml.jackson.databind.Module[]
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.addModules(java.lang.Iterable<? extends com.fasterxml.jackson.databind.Module>)
  id: addModules(java.lang.Iterable<? extends com.fasterxml.jackson.databind.Module>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: addModules(Iterable<? extends Module> modules)
  nameWithType: MapperBuilder<M,B>.addModules(Iterable<? extends Module> modules)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.addModules(Iterable<? extends Module> modules)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.addModules*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B addModules(Iterable<? extends Module> modules)
    parameters:
    - id: modules
      type: java.lang.Iterable<? extends com.fasterxml.jackson.databind.Module>
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.annotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)
  id: annotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: annotationIntrospector(AnnotationIntrospector intr)
  nameWithType: MapperBuilder<M,B>.annotationIntrospector(AnnotationIntrospector intr)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.annotationIntrospector(AnnotationIntrospector intr)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.annotationIntrospector*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for replacing <xref uid="com.fasterxml.jackson.databind.AnnotationIntrospector" data-throw-if-not-resolved="false">AnnotationIntrospector</xref> used by the mapper instance to be built. Note that doing this will replace the current introspector, which may lead to unavailability of core Jackson annotations. If you want to combine handling of multiple introspectors, have a look at <xref uid="com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair</xref>.
  syntax:
    content: public B annotationIntrospector(AnnotationIntrospector intr)
    parameters:
    - id: intr
      type: com.fasterxml.jackson.databind.AnnotationIntrospector
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.build()
  id: build()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: build()
  nameWithType: MapperBuilder<M,B>.build()
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.build()
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.build*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Method to call to create actual mapper instance.


    Implementation detail: in 2.10 (but not 3.x) underlying mapper is eagerly constructed when builder is constructed, and method simply returns that instance.
  syntax:
    content: public M build()
    return:
      type: M
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.clearProblemHandlers()
  id: clearProblemHandlers()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: clearProblemHandlers()
  nameWithType: MapperBuilder<M,B>.clearProblemHandlers()
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.clearProblemHandlers()
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.clearProblemHandlers*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method that may be used to remove all <xref uid="com.fasterxml.jackson.databind.deser.DeserializationProblemHandler" data-throw-if-not-resolved="false">DeserializationProblemHandler</xref>s added to this builder (if any).
  syntax:
    content: public B clearProblemHandlers()
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.configure(com.fasterxml.jackson.core.JsonGenerator.Feature,boolean)
  id: configure(com.fasterxml.jackson.core.JsonGenerator.Feature,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: configure(JsonGenerator.Feature feature, boolean state)
  nameWithType: MapperBuilder<M,B>.configure(JsonGenerator.Feature feature, boolean state)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.configure(JsonGenerator.Feature feature, boolean state)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.configure*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B configure(JsonGenerator.Feature feature, boolean state)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.core.JsonGenerator.Feature
    - id: state
      type: boolean
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
  id: configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: configure(JsonParser.Feature feature, boolean state)
  nameWithType: MapperBuilder<M,B>.configure(JsonParser.Feature feature, boolean state)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.configure(JsonParser.Feature feature, boolean state)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.configure*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B configure(JsonParser.Feature feature, boolean state)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.core.JsonParser.Feature
    - id: state
      type: boolean
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.configure(com.fasterxml.jackson.core.StreamReadFeature,boolean)
  id: configure(com.fasterxml.jackson.core.StreamReadFeature,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: configure(StreamReadFeature feature, boolean state)
  nameWithType: MapperBuilder<M,B>.configure(StreamReadFeature feature, boolean state)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.configure(StreamReadFeature feature, boolean state)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.configure*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B configure(StreamReadFeature feature, boolean state)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.core.StreamReadFeature
    - id: state
      type: boolean
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.configure(com.fasterxml.jackson.core.StreamWriteFeature,boolean)
  id: configure(com.fasterxml.jackson.core.StreamWriteFeature,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: configure(StreamWriteFeature feature, boolean state)
  nameWithType: MapperBuilder<M,B>.configure(StreamWriteFeature feature, boolean state)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.configure(StreamWriteFeature feature, boolean state)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.configure*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B configure(StreamWriteFeature feature, boolean state)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.core.StreamWriteFeature
    - id: state
      type: boolean
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean)
  id: configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: configure(DeserializationFeature feature, boolean state)
  nameWithType: MapperBuilder<M,B>.configure(DeserializationFeature feature, boolean state)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.configure(DeserializationFeature feature, boolean state)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.configure*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B configure(DeserializationFeature feature, boolean state)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.databind.DeserializationFeature
    - id: state
      type: boolean
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.configure(com.fasterxml.jackson.databind.MapperFeature,boolean)
  id: configure(com.fasterxml.jackson.databind.MapperFeature,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: configure(MapperFeature feature, boolean state)
  nameWithType: MapperBuilder<M,B>.configure(MapperFeature feature, boolean state)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.configure(MapperFeature feature, boolean state)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.configure*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B configure(MapperFeature feature, boolean state)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.databind.MapperFeature
    - id: state
      type: boolean
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.configure(com.fasterxml.jackson.databind.SerializationFeature,boolean)
  id: configure(com.fasterxml.jackson.databind.SerializationFeature,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: configure(SerializationFeature feature, boolean state)
  nameWithType: MapperBuilder<M,B>.configure(SerializationFeature feature, boolean state)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.configure(SerializationFeature feature, boolean state)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.configure*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B configure(SerializationFeature feature, boolean state)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.databind.SerializationFeature
    - id: state
      type: boolean
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.deactivateDefaultTyping()
  id: deactivateDefaultTyping()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: deactivateDefaultTyping()
  nameWithType: MapperBuilder<M,B>.deactivateDefaultTyping()
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.deactivateDefaultTyping()
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.deactivateDefaultTyping*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for disabling automatic inclusion of type information; if so, only explicitly annotated types (ones with <xref uid="com.fasterxml.jackson.annotation.JsonTypeInfo" data-throw-if-not-resolved="false">com.fasterxml.jackson.annotation.JsonTypeInfo</xref>) will have additional embedded type information.
  syntax:
    content: public B deactivateDefaultTyping()
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultBase64Variant(com.fasterxml.jackson.core.Base64Variant)
  id: defaultBase64Variant(com.fasterxml.jackson.core.Base64Variant)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: defaultBase64Variant(Base64Variant v)
  nameWithType: MapperBuilder<M,B>.defaultBase64Variant(Base64Variant v)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultBase64Variant(Base64Variant v)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultBase64Variant*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method that will configure default <xref uid="com.fasterxml.jackson.core.Base64Variant" data-throw-if-not-resolved="false">Base64Variant</xref> that `byte[]` serializers and deserializers will use.
  syntax:
    content: public B defaultBase64Variant(Base64Variant v)
    parameters:
    - id: v
      type: com.fasterxml.jackson.core.Base64Variant
      description: Base64 variant to use
    return:
      type: B
      description: This builder instance to allow call chaining
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultDateFormat(java.text.DateFormat)
  id: defaultDateFormat(java.text.DateFormat)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: defaultDateFormat(DateFormat df)
  nameWithType: MapperBuilder<M,B>.defaultDateFormat(DateFormat df)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultDateFormat(DateFormat df)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultDateFormat*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for configuring the default <xref uid="java.text.DateFormat" data-throw-if-not-resolved="false">DateFormat</xref> to use when serializing time values as Strings, and deserializing from JSON Strings. If you need per-request configuration, factory methods in <xref uid="com.fasterxml.jackson.databind.ObjectReader" data-throw-if-not-resolved="false">ObjectReader</xref> and <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref> instead.
  syntax:
    content: public B defaultDateFormat(DateFormat df)
    parameters:
    - id: df
      type: java.text.DateFormat
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultLeniency(java.lang.Boolean)
  id: defaultLeniency(java.lang.Boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: defaultLeniency(Boolean b)
  nameWithType: MapperBuilder<M,B>.defaultLeniency(Boolean b)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultLeniency(Boolean b)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultLeniency*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for setting default Setter configuration, regarding things like merging, null-handling; used for properties for which there are no per-type or per-property overrides (via annotations or config overrides).
  syntax:
    content: public B defaultLeniency(Boolean b)
    parameters:
    - id: b
      type: java.lang.Boolean
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultLocale(java.util.Locale)
  id: defaultLocale(java.util.Locale)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: defaultLocale(Locale locale)
  nameWithType: MapperBuilder<M,B>.defaultLocale(Locale locale)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultLocale(Locale locale)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultLocale*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for overriding default locale to use for formatting. Default value used is <xref uid="java.util.Locale.getDefault*" data-throw-if-not-resolved="false">Locale#getDefault()</xref>.
  syntax:
    content: public B defaultLocale(Locale locale)
    parameters:
    - id: locale
      type: java.util.Locale
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultMergeable(java.lang.Boolean)
  id: defaultMergeable(java.lang.Boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: defaultMergeable(Boolean b)
  nameWithType: MapperBuilder<M,B>.defaultMergeable(Boolean b)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultMergeable(Boolean b)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultMergeable*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for setting default Setter configuration, regarding things like merging, null-handling; used for properties for which there are no per-type or per-property overrides (via annotations or config overrides).
  syntax:
    content: public B defaultMergeable(Boolean b)
    parameters:
    - id: b
      type: java.lang.Boolean
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)
  id: defaultPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: defaultPrettyPrinter(PrettyPrinter pp)
  nameWithType: MapperBuilder<M,B>.defaultPrettyPrinter(PrettyPrinter pp)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultPrettyPrinter(PrettyPrinter pp)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultPrettyPrinter*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B defaultPrettyPrinter(PrettyPrinter pp)
    parameters:
    - id: pp
      type: com.fasterxml.jackson.core.PrettyPrinter
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude.Value)
  id: defaultPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude.Value)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: defaultPropertyInclusion(JsonInclude.Value incl)
  nameWithType: MapperBuilder<M,B>.defaultPropertyInclusion(JsonInclude.Value incl)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultPropertyInclusion(JsonInclude.Value incl)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultPropertyInclusion*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for configured default property inclusion to use for serialization.
  syntax:
    content: public B defaultPropertyInclusion(JsonInclude.Value incl)
    parameters:
    - id: incl
      type: com.fasterxml.jackson.annotation.JsonInclude.Value
      description: Default property inclusion to set
    return:
      type: B
      description: This builder instance to allow call chaining
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultSetterInfo(com.fasterxml.jackson.annotation.JsonSetter.Value)
  id: defaultSetterInfo(com.fasterxml.jackson.annotation.JsonSetter.Value)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: defaultSetterInfo(JsonSetter.Value v)
  nameWithType: MapperBuilder<M,B>.defaultSetterInfo(JsonSetter.Value v)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultSetterInfo(JsonSetter.Value v)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultSetterInfo*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B defaultSetterInfo(JsonSetter.Value v)
    parameters:
    - id: v
      type: com.fasterxml.jackson.annotation.JsonSetter.Value
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultTimeZone(java.util.TimeZone)
  id: defaultTimeZone(java.util.TimeZone)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: defaultTimeZone(TimeZone tz)
  nameWithType: MapperBuilder<M,B>.defaultTimeZone(TimeZone tz)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultTimeZone(TimeZone tz)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultTimeZone*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for overriding default TimeZone to use for formatting. Default value used is UTC (NOT default TimeZone of JVM).
  syntax:
    content: public B defaultTimeZone(TimeZone tz)
    parameters:
    - id: tz
      type: java.util.TimeZone
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(com.fasterxml.jackson.core.JsonGenerator.Feature...)
  id: disable(com.fasterxml.jackson.core.JsonGenerator.Feature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: disable(JsonGenerator.Feature[] features)
  nameWithType: MapperBuilder<M,B>.disable(JsonGenerator.Feature[] features)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.disable(JsonGenerator.Feature[] features)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.disable*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B disable(JsonGenerator.Feature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.core.JsonGenerator.Feature[]
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(com.fasterxml.jackson.core.JsonParser.Feature...)
  id: disable(com.fasterxml.jackson.core.JsonParser.Feature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: disable(JsonParser.Feature[] features)
  nameWithType: MapperBuilder<M,B>.disable(JsonParser.Feature[] features)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.disable(JsonParser.Feature[] features)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.disable*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B disable(JsonParser.Feature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.core.JsonParser.Feature[]
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(com.fasterxml.jackson.core.StreamReadFeature...)
  id: disable(com.fasterxml.jackson.core.StreamReadFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: disable(StreamReadFeature[] features)
  nameWithType: MapperBuilder<M,B>.disable(StreamReadFeature[] features)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.disable(StreamReadFeature[] features)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.disable*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B disable(StreamReadFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.core.StreamReadFeature[]
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(com.fasterxml.jackson.core.StreamWriteFeature...)
  id: disable(com.fasterxml.jackson.core.StreamWriteFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: disable(StreamWriteFeature[] features)
  nameWithType: MapperBuilder<M,B>.disable(StreamWriteFeature[] features)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.disable(StreamWriteFeature[] features)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.disable*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B disable(StreamWriteFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.core.StreamWriteFeature[]
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(com.fasterxml.jackson.databind.DeserializationFeature...)
  id: disable(com.fasterxml.jackson.databind.DeserializationFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: disable(DeserializationFeature[] features)
  nameWithType: MapperBuilder<M,B>.disable(DeserializationFeature[] features)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.disable(DeserializationFeature[] features)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.disable*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B disable(DeserializationFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.databind.DeserializationFeature[]
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(com.fasterxml.jackson.databind.MapperFeature...)
  id: disable(com.fasterxml.jackson.databind.MapperFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: disable(MapperFeature[] features)
  nameWithType: MapperBuilder<M,B>.disable(MapperFeature[] features)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.disable(MapperFeature[] features)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.disable*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B disable(MapperFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.databind.MapperFeature[]
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(com.fasterxml.jackson.databind.SerializationFeature...)
  id: disable(com.fasterxml.jackson.databind.SerializationFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: disable(SerializationFeature[] features)
  nameWithType: MapperBuilder<M,B>.disable(SerializationFeature[] features)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.disable(SerializationFeature[] features)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.disable*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B disable(SerializationFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.databind.SerializationFeature[]
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(com.fasterxml.jackson.core.JsonGenerator.Feature...)
  id: enable(com.fasterxml.jackson.core.JsonGenerator.Feature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: enable(JsonGenerator.Feature[] features)
  nameWithType: MapperBuilder<M,B>.enable(JsonGenerator.Feature[] features)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.enable(JsonGenerator.Feature[] features)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.enable*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B enable(JsonGenerator.Feature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.core.JsonGenerator.Feature[]
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(com.fasterxml.jackson.core.JsonParser.Feature...)
  id: enable(com.fasterxml.jackson.core.JsonParser.Feature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: enable(JsonParser.Feature[] features)
  nameWithType: MapperBuilder<M,B>.enable(JsonParser.Feature[] features)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.enable(JsonParser.Feature[] features)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.enable*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B enable(JsonParser.Feature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.core.JsonParser.Feature[]
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(com.fasterxml.jackson.core.StreamReadFeature...)
  id: enable(com.fasterxml.jackson.core.StreamReadFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: enable(StreamReadFeature[] features)
  nameWithType: MapperBuilder<M,B>.enable(StreamReadFeature[] features)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.enable(StreamReadFeature[] features)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.enable*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B enable(StreamReadFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.core.StreamReadFeature[]
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(com.fasterxml.jackson.core.StreamWriteFeature...)
  id: enable(com.fasterxml.jackson.core.StreamWriteFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: enable(StreamWriteFeature[] features)
  nameWithType: MapperBuilder<M,B>.enable(StreamWriteFeature[] features)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.enable(StreamWriteFeature[] features)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.enable*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B enable(StreamWriteFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.core.StreamWriteFeature[]
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(com.fasterxml.jackson.databind.DeserializationFeature...)
  id: enable(com.fasterxml.jackson.databind.DeserializationFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: enable(DeserializationFeature[] features)
  nameWithType: MapperBuilder<M,B>.enable(DeserializationFeature[] features)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.enable(DeserializationFeature[] features)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.enable*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B enable(DeserializationFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.databind.DeserializationFeature[]
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(com.fasterxml.jackson.databind.MapperFeature...)
  id: enable(com.fasterxml.jackson.databind.MapperFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: enable(MapperFeature[] features)
  nameWithType: MapperBuilder<M,B>.enable(MapperFeature[] features)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.enable(MapperFeature[] features)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.enable*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B enable(MapperFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.databind.MapperFeature[]
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(com.fasterxml.jackson.databind.SerializationFeature...)
  id: enable(com.fasterxml.jackson.databind.SerializationFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: enable(SerializationFeature[] features)
  nameWithType: MapperBuilder<M,B>.enable(SerializationFeature[] features)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.enable(SerializationFeature[] features)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.enable*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B enable(SerializationFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.databind.SerializationFeature[]
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.filterProvider(com.fasterxml.jackson.databind.ser.FilterProvider)
  id: filterProvider(com.fasterxml.jackson.databind.ser.FilterProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: filterProvider(FilterProvider prov)
  nameWithType: MapperBuilder<M,B>.filterProvider(FilterProvider prov)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.filterProvider(FilterProvider prov)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.filterProvider*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Method for configuring this mapper to use specified <xref uid="com.fasterxml.jackson.databind.ser.FilterProvider" data-throw-if-not-resolved="false">FilterProvider</xref> for mapping Filter Ids to actual filter instances.


    Note that usually it is better to use method in <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref>, but sometimes this method is more convenient. For example, some frameworks only allow configuring of ObjectMapper instances and not <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref>s.
  syntax:
    content: public B filterProvider(FilterProvider prov)
    parameters:
    - id: prov
      type: com.fasterxml.jackson.databind.ser.FilterProvider
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.findAndAddModules()
  id: findAndAddModules()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: findAndAddModules()
  nameWithType: MapperBuilder<M,B>.findAndAddModules()
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.findAndAddModules()
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.findAndAddModules*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Convenience method that is functionally equivalent to: `addModules(builder.findModules());`


    As with <xref uid="com.fasterxml.jackson.databind.cfg.MapperBuilder.findModules()" data-throw-if-not-resolved="false">#findModules()</xref>, no caching is done for modules, so care needs to be taken to either create and share a single mapper instance; or to cache introspected set of modules.
  syntax:
    content: public B findAndAddModules()
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.findModules()
  id: findModules()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: findModules()
  nameWithType: MapperBuilder<M,B>.findModules()
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.findModules()
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.findModules*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Method for locating available methods, using JDK <xref uid="" data-throw-if-not-resolved="false">ServiceLoader</xref> facility, along with module-provided SPI.


    Note that method does not do any caching, so calls should be considered potentially expensive.
  syntax:
    content: public static List<Module> findModules()
    return:
      type: java.util.List<com.fasterxml.jackson.databind.Module>
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.findModules(java.lang.ClassLoader)
  id: findModules(java.lang.ClassLoader)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: findModules(ClassLoader classLoader)
  nameWithType: MapperBuilder<M,B>.findModules(ClassLoader classLoader)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.findModules(ClassLoader classLoader)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.findModules*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Method for locating available methods, using JDK <xref uid="" data-throw-if-not-resolved="false">ServiceLoader</xref> facility, along with module-provided SPI.


    Note that method does not do any caching, so calls should be considered potentially expensive.
  syntax:
    content: public static List<Module> findModules(ClassLoader classLoader)
    parameters:
    - id: classLoader
      type: java.lang.ClassLoader
    return:
      type: java.util.List<com.fasterxml.jackson.databind.Module>
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.handlerInstantiator(com.fasterxml.jackson.databind.cfg.HandlerInstantiator)
  id: handlerInstantiator(com.fasterxml.jackson.databind.cfg.HandlerInstantiator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: handlerInstantiator(HandlerInstantiator hi)
  nameWithType: MapperBuilder<M,B>.handlerInstantiator(HandlerInstantiator hi)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.handlerInstantiator(HandlerInstantiator hi)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.handlerInstantiator*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for configuring <xref uid="com.fasterxml.jackson.databind.cfg.HandlerInstantiator" data-throw-if-not-resolved="false">HandlerInstantiator</xref> to use for creating instances of handlers (such as serializers, deserializers, type and type id resolvers), given a class.
  syntax:
    content: public B handlerInstantiator(HandlerInstantiator hi)
    parameters:
    - id: hi
      type: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
      description: Instantiator to use; if null, use the default implementation
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.injectableValues(com.fasterxml.jackson.databind.InjectableValues)
  id: injectableValues(com.fasterxml.jackson.databind.InjectableValues)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: injectableValues(InjectableValues v)
  nameWithType: MapperBuilder<M,B>.injectableValues(InjectableValues v)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.injectableValues(InjectableValues v)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.injectableValues*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B injectableValues(InjectableValues v)
    parameters:
    - id: v
      type: com.fasterxml.jackson.databind.InjectableValues
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  id: isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: isEnabled(JsonGenerator.Feature f)
  nameWithType: MapperBuilder<M,B>.isEnabled(JsonGenerator.Feature f)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.isEnabled(JsonGenerator.Feature f)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public boolean isEnabled(JsonGenerator.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.JsonGenerator.Feature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  id: isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: isEnabled(JsonParser.Feature f)
  nameWithType: MapperBuilder<M,B>.isEnabled(JsonParser.Feature f)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.isEnabled(JsonParser.Feature f)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public boolean isEnabled(JsonParser.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.JsonParser.Feature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
  id: isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: isEnabled(DeserializationFeature f)
  nameWithType: MapperBuilder<M,B>.isEnabled(DeserializationFeature f)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.isEnabled(DeserializationFeature f)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public boolean isEnabled(DeserializationFeature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.databind.DeserializationFeature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  id: isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: isEnabled(MapperFeature f)
  nameWithType: MapperBuilder<M,B>.isEnabled(MapperFeature f)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.isEnabled(MapperFeature f)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public boolean isEnabled(MapperFeature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.databind.MapperFeature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
  id: isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: isEnabled(SerializationFeature f)
  nameWithType: MapperBuilder<M,B>.isEnabled(SerializationFeature f)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.isEnabled(SerializationFeature f)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public boolean isEnabled(SerializationFeature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.databind.SerializationFeature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.nodeFactory(com.fasterxml.jackson.databind.node.JsonNodeFactory)
  id: nodeFactory(com.fasterxml.jackson.databind.node.JsonNodeFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: nodeFactory(JsonNodeFactory f)
  nameWithType: MapperBuilder<M,B>.nodeFactory(JsonNodeFactory f)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.nodeFactory(JsonNodeFactory f)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.nodeFactory*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B nodeFactory(JsonNodeFactory f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.databind.node.JsonNodeFactory
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.polymorphicTypeValidator(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  id: polymorphicTypeValidator(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: polymorphicTypeValidator(PolymorphicTypeValidator ptv)
  nameWithType: MapperBuilder<M,B>.polymorphicTypeValidator(PolymorphicTypeValidator ptv)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.polymorphicTypeValidator(PolymorphicTypeValidator ptv)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.polymorphicTypeValidator*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Method for assigning <xref uid="com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator" data-throw-if-not-resolved="false">PolymorphicTypeValidator</xref> to use for validating subtypes when using Class name - based polymorphic deserialization using annotations (validator used with "Default Typing" is specified by passing in <xref uid="com.fasterxml.jackson.databind.cfg.MapperBuilder.activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)" data-throw-if-not-resolved="false">#activateDefaultTyping(PolymorphicTypeValidator)</xref> instead).


    Validator will be called on validating types for which no default databind deserializer, or module-provided deserializer is found: typically this includes "POJO" (aka Bean) types, but not (for example) most container types.
  syntax:
    content: public B polymorphicTypeValidator(PolymorphicTypeValidator ptv)
    parameters:
    - id: ptv
      type: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.propertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy)
  id: propertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: propertyNamingStrategy(PropertyNamingStrategy s)
  nameWithType: MapperBuilder<M,B>.propertyNamingStrategy(PropertyNamingStrategy s)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.propertyNamingStrategy(PropertyNamingStrategy s)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.propertyNamingStrategy*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B propertyNamingStrategy(PropertyNamingStrategy s)
    parameters:
    - id: s
      type: com.fasterxml.jackson.databind.PropertyNamingStrategy
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType...)
  id: registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: registerSubtypes(NamedType[] subtypes)
  nameWithType: MapperBuilder<M,B>.registerSubtypes(NamedType[] subtypes)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.registerSubtypes(NamedType[] subtypes)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.registerSubtypes*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B registerSubtypes(NamedType[] subtypes)
    parameters:
    - id: subtypes
      type: com.fasterxml.jackson.databind.jsontype.NamedType[]
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.registerSubtypes(java.lang.Class<?>...)
  id: registerSubtypes(java.lang.Class<?>...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: registerSubtypes(Class<?>[] subtypes)
  nameWithType: MapperBuilder<M,B>.registerSubtypes(Class<?>[] subtypes)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.registerSubtypes(Class<?>[] subtypes)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.registerSubtypes*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B registerSubtypes(Class<?>[] subtypes)
    parameters:
    - id: subtypes
      type: java.lang.Class<?>[]
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.registerSubtypes(java.util.Collection<java.lang.Class<?>>)
  id: registerSubtypes(java.util.Collection<java.lang.Class<?>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: registerSubtypes(Collection<Class<?>> subtypes)
  nameWithType: MapperBuilder<M,B>.registerSubtypes(Collection<Class<?>> subtypes)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.registerSubtypes(Collection<Class<?>> subtypes)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.registerSubtypes*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B registerSubtypes(Collection<Class<?>> subtypes)
    parameters:
    - id: subtypes
      type: java.util.Collection<java.lang.Class<?>>
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.serializationInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include)
  id: serializationInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: serializationInclusion(JsonInclude.Include incl)
  nameWithType: MapperBuilder<M,B>.serializationInclusion(JsonInclude.Include incl)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.serializationInclusion(JsonInclude.Include incl)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.serializationInclusion*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method for configured default property inclusion to use for serialization.
  syntax:
    content: public B serializationInclusion(JsonInclude.Include incl)
    parameters:
    - id: incl
      type: com.fasterxml.jackson.annotation.JsonInclude.Include
      description: Default property inclusion to set
    return:
      type: B
      description: This builder instance to allow call chaining
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.serializerFactory(com.fasterxml.jackson.databind.ser.SerializerFactory)
  id: serializerFactory(com.fasterxml.jackson.databind.ser.SerializerFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: serializerFactory(SerializerFactory f)
  nameWithType: MapperBuilder<M,B>.serializerFactory(SerializerFactory f)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.serializerFactory(SerializerFactory f)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.serializerFactory*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B serializerFactory(SerializerFactory f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.databind.ser.SerializerFactory
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.setDefaultTyping(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?>)
  id: setDefaultTyping(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: setDefaultTyping(TypeResolverBuilder<?> typer)
  nameWithType: MapperBuilder<M,B>.setDefaultTyping(TypeResolverBuilder<?> typer)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.setDefaultTyping(TypeResolverBuilder<?> typer)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.setDefaultTyping*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Method for enabling automatic inclusion of type information, using specified handler object for determining which types this affects, as well as details of how information is embedded.


    NOTE: use of Default Typing can be a potential security risk if incoming content comes from untrusted sources, so care should be taken to use a <xref uid="com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder" data-throw-if-not-resolved="false">TypeResolverBuilder</xref> that can limit allowed classes to deserialize. Note in particular that <xref uid="com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder</xref> DOES NOT limit applicability but creates type (de)serializers for all types.
  syntax:
    content: public B setDefaultTyping(TypeResolverBuilder<?> typer)
    parameters:
    - id: typer
      type: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?>
      description: Type information inclusion handler
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.streamFactory()
  id: streamFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: streamFactory()
  nameWithType: MapperBuilder<M,B>.streamFactory()
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.streamFactory()
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.streamFactory*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public TokenStreamFactory streamFactory()
    return:
      type: com.fasterxml.jackson.core.TokenStreamFactory
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.subtypeResolver(com.fasterxml.jackson.databind.jsontype.SubtypeResolver)
  id: subtypeResolver(com.fasterxml.jackson.databind.jsontype.SubtypeResolver)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: subtypeResolver(SubtypeResolver r)
  nameWithType: MapperBuilder<M,B>.subtypeResolver(SubtypeResolver r)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.subtypeResolver(SubtypeResolver r)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.subtypeResolver*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B subtypeResolver(SubtypeResolver r)
    parameters:
    - id: r
      type: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.typeFactory(com.fasterxml.jackson.databind.type.TypeFactory)
  id: typeFactory(com.fasterxml.jackson.databind.type.TypeFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: typeFactory(TypeFactory f)
  nameWithType: MapperBuilder<M,B>.typeFactory(TypeFactory f)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.typeFactory(TypeFactory f)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.typeFactory*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B typeFactory(TypeFactory f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.databind.type.TypeFactory
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.visibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  id: visibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: visibility(PropertyAccessor forMethod, JsonAutoDetect.Visibility visibility)
  nameWithType: MapperBuilder<M,B>.visibility(PropertyAccessor forMethod, JsonAutoDetect.Visibility visibility)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.visibility(PropertyAccessor forMethod, JsonAutoDetect.Visibility visibility)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.visibility*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B visibility(PropertyAccessor forMethod, JsonAutoDetect.Visibility visibility)
    parameters:
    - id: forMethod
      type: com.fasterxml.jackson.annotation.PropertyAccessor
    - id: visibility
      type: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
    return:
      type: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.visibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker<?>)
  id: visibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.MapperBuilder
  langs:
  - java
  name: visibility(VisibilityChecker<?> vc)
  nameWithType: MapperBuilder<M,B>.visibility(VisibilityChecker<?> vc)
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.visibility(VisibilityChecker<?> vc)
  overload: com.fasterxml.jackson.databind.cfg.MapperBuilder.visibility*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public B visibility(VisibilityChecker<?> vc)
    parameters:
    - id: vc
      type: com.fasterxml.jackson.databind.introspect.VisibilityChecker<?>
    return:
      type: B
references:
- uid: M
  spec.java:
  - uid: M
    name: M
    fullName: M
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.MapperBuilder*
  name: MapperBuilder
  nameWithType: MapperBuilder<M,B>.MapperBuilder
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.MapperBuilder
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.build*
  name: build
  nameWithType: MapperBuilder<M,B>.build
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.build
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.MapperFeature
  name: MapperFeature
  nameWithType: MapperFeature
  fullName: com.fasterxml.jackson.databind.MapperFeature
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.isEnabled*
  name: isEnabled
  nameWithType: MapperBuilder<M,B>.isEnabled
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.isEnabled
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.DeserializationFeature
  name: DeserializationFeature
  nameWithType: DeserializationFeature
  fullName: com.fasterxml.jackson.databind.DeserializationFeature
- uid: com.fasterxml.jackson.databind.SerializationFeature
  name: SerializationFeature
  nameWithType: SerializationFeature
  fullName: com.fasterxml.jackson.databind.SerializationFeature
- uid: com.fasterxml.jackson.core.JsonParser.Feature
  name: JsonParser.Feature
  nameWithType: JsonParser.Feature
  fullName: com.fasterxml.jackson.core.JsonParser.Feature
- uid: com.fasterxml.jackson.core.JsonGenerator.Feature
  name: JsonGenerator.Feature
  nameWithType: JsonGenerator.Feature
  fullName: com.fasterxml.jackson.core.JsonGenerator.Feature
- uid: com.fasterxml.jackson.core.TokenStreamFactory
  name: TokenStreamFactory
  nameWithType: TokenStreamFactory
  fullName: com.fasterxml.jackson.core.TokenStreamFactory
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.streamFactory*
  name: streamFactory
  nameWithType: MapperBuilder<M,B>.streamFactory
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.streamFactory
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.MapperFeature[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.MapperFeature
    name: MapperFeature
    fullName: com.fasterxml.jackson.databind.MapperFeature
  - name: '[]'
    fullName: '[]'
- uid: B
  spec.java:
  - uid: B
    name: B
    fullName: B
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.enable*
  name: enable
  nameWithType: MapperBuilder<M,B>.enable
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.enable
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.disable*
  name: disable
  nameWithType: MapperBuilder<M,B>.disable
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.disable
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.configure*
  name: configure
  nameWithType: MapperBuilder<M,B>.configure
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.configure
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.SerializationFeature[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.SerializationFeature
    name: SerializationFeature
    fullName: com.fasterxml.jackson.databind.SerializationFeature
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.DeserializationFeature[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.DeserializationFeature
    name: DeserializationFeature
    fullName: com.fasterxml.jackson.databind.DeserializationFeature
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.JsonParser.Feature[]
  spec.java:
  - uid: com.fasterxml.jackson.core.JsonParser.Feature
    name: Feature
    fullName: com.fasterxml.jackson.core.JsonParser.Feature
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.JsonGenerator.Feature[]
  spec.java:
  - uid: com.fasterxml.jackson.core.JsonGenerator.Feature
    name: Feature
    fullName: com.fasterxml.jackson.core.JsonGenerator.Feature
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.StreamReadFeature[]
  spec.java:
  - uid: com.fasterxml.jackson.core.StreamReadFeature
    name: StreamReadFeature
    fullName: com.fasterxml.jackson.core.StreamReadFeature
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.StreamReadFeature
  name: StreamReadFeature
  nameWithType: StreamReadFeature
  fullName: com.fasterxml.jackson.core.StreamReadFeature
- uid: com.fasterxml.jackson.core.StreamWriteFeature[]
  spec.java:
  - uid: com.fasterxml.jackson.core.StreamWriteFeature
    name: StreamWriteFeature
    fullName: com.fasterxml.jackson.core.StreamWriteFeature
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.StreamWriteFeature
  name: StreamWriteFeature
  nameWithType: StreamWriteFeature
  fullName: com.fasterxml.jackson.core.StreamWriteFeature
- uid: com.fasterxml.jackson.databind.Module
  name: Module
  nameWithType: Module
  fullName: com.fasterxml.jackson.databind.Module
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.addModule*
  name: addModule
  nameWithType: MapperBuilder<M,B>.addModule
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.addModule
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.Module[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.Module
    name: Module
    fullName: com.fasterxml.jackson.databind.Module
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.addModules*
  name: addModules
  nameWithType: MapperBuilder<M,B>.addModules
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.addModules
  package: com.fasterxml.jackson.databind.cfg
- uid: java.lang.Iterable<? extends com.fasterxml.jackson.databind.Module>
  spec.java:
  - uid: java.lang.Iterable
    name: Iterable
    fullName: java.lang.Iterable
  - name: <
    fullName: <
  - uid: '? extends com.fasterxml.jackson.databind.Module'
    name: Module
    fullName: '? extends com.fasterxml.jackson.databind.Module'
  - name: '>'
    fullName: '>'
- uid: java.util.List<com.fasterxml.jackson.databind.Module>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.Module
    name: Module
    fullName: com.fasterxml.jackson.databind.Module
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.findModules*
  name: findModules
  nameWithType: MapperBuilder<M,B>.findModules
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.findModules
  package: com.fasterxml.jackson.databind.cfg
- uid: java.lang.ClassLoader
  spec.java:
  - uid: java.lang.ClassLoader
    name: ClassLoader
    fullName: java.lang.ClassLoader
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.findAndAddModules*
  name: findAndAddModules
  nameWithType: MapperBuilder<M,B>.findAndAddModules
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.findAndAddModules
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.AnnotationIntrospector
  name: AnnotationIntrospector
  nameWithType: AnnotationIntrospector
  fullName: com.fasterxml.jackson.databind.AnnotationIntrospector
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.annotationIntrospector*
  name: annotationIntrospector
  nameWithType: MapperBuilder<M,B>.annotationIntrospector
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.annotationIntrospector
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.node.JsonNodeFactory
  name: JsonNodeFactory
  nameWithType: JsonNodeFactory
  fullName: com.fasterxml.jackson.databind.node.JsonNodeFactory
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.nodeFactory*
  name: nodeFactory
  nameWithType: MapperBuilder<M,B>.nodeFactory
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.nodeFactory
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.type.TypeFactory
  name: TypeFactory
  nameWithType: TypeFactory
  fullName: com.fasterxml.jackson.databind.type.TypeFactory
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.typeFactory*
  name: typeFactory
  nameWithType: MapperBuilder<M,B>.typeFactory
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.typeFactory
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
  name: SubtypeResolver
  nameWithType: SubtypeResolver
  fullName: com.fasterxml.jackson.databind.jsontype.SubtypeResolver
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.subtypeResolver*
  name: subtypeResolver
  nameWithType: MapperBuilder<M,B>.subtypeResolver
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.subtypeResolver
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker
    name: VisibilityChecker
    fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.visibility*
  name: visibility
  nameWithType: MapperBuilder<M,B>.visibility
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.visibility
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.annotation.PropertyAccessor
  name: PropertyAccessor
  nameWithType: PropertyAccessor
  fullName: com.fasterxml.jackson.annotation.PropertyAccessor
- uid: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
  name: JsonAutoDetect.Visibility
  nameWithType: JsonAutoDetect.Visibility
  fullName: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
  name: HandlerInstantiator
  nameWithType: HandlerInstantiator
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.handlerInstantiator*
  name: handlerInstantiator
  nameWithType: MapperBuilder<M,B>.handlerInstantiator
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.handlerInstantiator
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy
  name: PropertyNamingStrategy
  nameWithType: PropertyNamingStrategy
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.propertyNamingStrategy*
  name: propertyNamingStrategy
  nameWithType: MapperBuilder<M,B>.propertyNamingStrategy
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.propertyNamingStrategy
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.ser.SerializerFactory
  name: SerializerFactory
  nameWithType: SerializerFactory
  fullName: com.fasterxml.jackson.databind.ser.SerializerFactory
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.serializerFactory*
  name: serializerFactory
  nameWithType: MapperBuilder<M,B>.serializerFactory
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.serializerFactory
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.ser.FilterProvider
  name: FilterProvider
  nameWithType: FilterProvider
  fullName: com.fasterxml.jackson.databind.ser.FilterProvider
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.filterProvider*
  name: filterProvider
  nameWithType: MapperBuilder<M,B>.filterProvider
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.filterProvider
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.core.PrettyPrinter
  name: PrettyPrinter
  nameWithType: PrettyPrinter
  fullName: com.fasterxml.jackson.core.PrettyPrinter
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultPrettyPrinter*
  name: defaultPrettyPrinter
  nameWithType: MapperBuilder<M,B>.defaultPrettyPrinter
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultPrettyPrinter
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.InjectableValues
  name: InjectableValues
  nameWithType: InjectableValues
  fullName: com.fasterxml.jackson.databind.InjectableValues
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.injectableValues*
  name: injectableValues
  nameWithType: MapperBuilder<M,B>.injectableValues
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.injectableValues
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.deser.DeserializationProblemHandler
  name: DeserializationProblemHandler
  nameWithType: DeserializationProblemHandler
  fullName: com.fasterxml.jackson.databind.deser.DeserializationProblemHandler
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.addHandler*
  name: addHandler
  nameWithType: MapperBuilder<M,B>.addHandler
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.addHandler
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.clearProblemHandlers*
  name: clearProblemHandlers
  nameWithType: MapperBuilder<M,B>.clearProblemHandlers
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.clearProblemHandlers
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value
  name: JsonSetter.Value
  nameWithType: JsonSetter.Value
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultSetterInfo*
  name: defaultSetterInfo
  nameWithType: MapperBuilder<M,B>.defaultSetterInfo
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultSetterInfo
  package: com.fasterxml.jackson.databind.cfg
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultMergeable*
  name: defaultMergeable
  nameWithType: MapperBuilder<M,B>.defaultMergeable
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultMergeable
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultLeniency*
  name: defaultLeniency
  nameWithType: MapperBuilder<M,B>.defaultLeniency
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultLeniency
  package: com.fasterxml.jackson.databind.cfg
- uid: java.text.DateFormat
  spec.java:
  - uid: java.text.DateFormat
    name: DateFormat
    fullName: java.text.DateFormat
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultDateFormat*
  name: defaultDateFormat
  nameWithType: MapperBuilder<M,B>.defaultDateFormat
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultDateFormat
  package: com.fasterxml.jackson.databind.cfg
- uid: java.util.TimeZone
  spec.java:
  - uid: java.util.TimeZone
    name: TimeZone
    fullName: java.util.TimeZone
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultTimeZone*
  name: defaultTimeZone
  nameWithType: MapperBuilder<M,B>.defaultTimeZone
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultTimeZone
  package: com.fasterxml.jackson.databind.cfg
- uid: java.util.Locale
  spec.java:
  - uid: java.util.Locale
    name: Locale
    fullName: java.util.Locale
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultLocale*
  name: defaultLocale
  nameWithType: MapperBuilder<M,B>.defaultLocale
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultLocale
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.core.Base64Variant
  name: Base64Variant
  nameWithType: Base64Variant
  fullName: com.fasterxml.jackson.core.Base64Variant
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultBase64Variant*
  name: defaultBase64Variant
  nameWithType: MapperBuilder<M,B>.defaultBase64Variant
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultBase64Variant
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.annotation.JsonInclude.Include
  name: JsonInclude.Include
  nameWithType: JsonInclude.Include
  fullName: com.fasterxml.jackson.annotation.JsonInclude.Include
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.serializationInclusion*
  name: serializationInclusion
  nameWithType: MapperBuilder<M,B>.serializationInclusion
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.serializationInclusion
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.annotation.JsonInclude.Value
  name: JsonInclude.Value
  nameWithType: JsonInclude.Value
  fullName: com.fasterxml.jackson.annotation.JsonInclude.Value
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.defaultPropertyInclusion*
  name: defaultPropertyInclusion
  nameWithType: MapperBuilder<M,B>.defaultPropertyInclusion
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.defaultPropertyInclusion
  package: com.fasterxml.jackson.databind.cfg
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.addMixIn*
  name: addMixIn
  nameWithType: MapperBuilder<M,B>.addMixIn
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.addMixIn
  package: com.fasterxml.jackson.databind.cfg
- uid: java.lang.Class<?>[]
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.registerSubtypes*
  name: registerSubtypes
  nameWithType: MapperBuilder<M,B>.registerSubtypes
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.registerSubtypes
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.jsontype.NamedType[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.jsontype.NamedType
    name: NamedType
    fullName: com.fasterxml.jackson.databind.jsontype.NamedType
  - name: '[]'
    fullName: '[]'
- uid: java.util.Collection<java.lang.Class<?>>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
  name: PolymorphicTypeValidator
  nameWithType: PolymorphicTypeValidator
  fullName: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.polymorphicTypeValidator*
  name: polymorphicTypeValidator
  nameWithType: MapperBuilder<M,B>.polymorphicTypeValidator
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.polymorphicTypeValidator
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.activateDefaultTyping*
  name: activateDefaultTyping
  nameWithType: MapperBuilder<M,B>.activateDefaultTyping
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.activateDefaultTyping
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping
  name: ObjectMapper.DefaultTyping
  nameWithType: ObjectMapper.DefaultTyping
  fullName: com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping
- uid: com.fasterxml.jackson.annotation.JsonTypeInfo.As
  name: JsonTypeInfo.As
  nameWithType: JsonTypeInfo.As
  fullName: com.fasterxml.jackson.annotation.JsonTypeInfo.As
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.activateDefaultTypingAsProperty*
  name: activateDefaultTypingAsProperty
  nameWithType: MapperBuilder<M,B>.activateDefaultTypingAsProperty
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.activateDefaultTypingAsProperty
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.deactivateDefaultTyping*
  name: deactivateDefaultTyping
  nameWithType: MapperBuilder<M,B>.deactivateDefaultTyping
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.deactivateDefaultTyping
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder
    name: TypeResolverBuilder
    fullName: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder.setDefaultTyping*
  name: setDefaultTyping
  nameWithType: MapperBuilder<M,B>.setDefaultTyping
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.setDefaultTyping
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperBuilder._this*
  name: _this
  nameWithType: MapperBuilder<M,B>._this
  fullName: com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>._this
  package: com.fasterxml.jackson.databind.cfg
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: '? extends com.fasterxml.jackson.databind.Module'
  name: '? extends Module'
  nameWithType: '? extends Module'
  fullName: '? extends com.fasterxml.jackson.databind.Module'
- uid: java.lang.Iterable
  name: Iterable
  nameWithType: Iterable
  fullName: java.lang.Iterable
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.fasterxml.jackson.databind.introspect.VisibilityChecker
  name: VisibilityChecker
  nameWithType: VisibilityChecker
  fullName: com.fasterxml.jackson.databind.introspect.VisibilityChecker
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: ?>[]
  name: ?>[]
  nameWithType: ?>[]
  fullName: ?>[]
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder
  name: TypeResolverBuilder
  nameWithType: TypeResolverBuilder
  fullName: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder
