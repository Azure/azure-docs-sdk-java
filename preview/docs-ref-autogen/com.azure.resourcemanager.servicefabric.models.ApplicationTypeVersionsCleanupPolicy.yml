### YamlMime:JavaType
uid: "com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy"
fullName: "com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy"
name: "ApplicationTypeVersionsCleanupPolicy"
nameWithType: "ApplicationTypeVersionsCleanupPolicy"
summary: "The Application<wbr>Type<wbr>Versions<wbr>Cleanup<wbr>Policy model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ApplicationTypeVersionsCleanupPolicy"
constructors:
- uid: "com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy.ApplicationTypeVersionsCleanupPolicy()"
  fullName: "com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy.ApplicationTypeVersionsCleanupPolicy()"
  name: "ApplicationTypeVersionsCleanupPolicy()"
  nameWithType: "ApplicationTypeVersionsCleanupPolicy.ApplicationTypeVersionsCleanupPolicy()"
  syntax: "public ApplicationTypeVersionsCleanupPolicy()"
methods:
- uid: "com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy.maxUnusedVersionsToKeep()"
  fullName: "com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy.maxUnusedVersionsToKeep()"
  name: "maxUnusedVersionsToKeep()"
  nameWithType: "ApplicationTypeVersionsCleanupPolicy.maxUnusedVersionsToKeep()"
  summary: "Get the max<wbr>Unused<wbr>Versions<wbr>ToKeep property: Number of unused versions per application type to keep."
  syntax: "public long maxUnusedVersionsToKeep()"
  desc: "Get the maxUnusedVersionsToKeep property: Number of unused versions per application type to keep."
  returns:
    description: "the maxUnusedVersionsToKeep value."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy.validate()"
  fullName: "com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy.validate()"
  name: "validate()"
  nameWithType: "ApplicationTypeVersionsCleanupPolicy.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy.withMaxUnusedVersionsToKeep(long)"
  fullName: "com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy.withMaxUnusedVersionsToKeep(long maxUnusedVersionsToKeep)"
  name: "withMaxUnusedVersionsToKeep(long maxUnusedVersionsToKeep)"
  nameWithType: "ApplicationTypeVersionsCleanupPolicy.withMaxUnusedVersionsToKeep(long maxUnusedVersionsToKeep)"
  summary: "Set the max<wbr>Unused<wbr>Versions<wbr>ToKeep property: Number of unused versions per application type to keep."
  parameters:
  - description: "the maxUnusedVersionsToKeep value to set."
    name: "maxUnusedVersionsToKeep"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationTypeVersionsCleanupPolicy withMaxUnusedVersionsToKeep(long maxUnusedVersionsToKeep)"
  desc: "Set the maxUnusedVersionsToKeep property: Number of unused versions per application type to keep."
  returns:
    description: "the ApplicationTypeVersionsCleanupPolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy?alt=com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersionsCleanupPolicy&text=ApplicationTypeVersionsCleanupPolicy\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The ApplicationTypeVersionsCleanupPolicy model."
metadata: {}
package: "com.azure.resourcemanager.servicefabric.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicefabric:1.0.0-beta.2
