### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties"
name: "FactoryProperties"
nameWithType: "FactoryProperties"
summary: "Factory resource properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class FactoryProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.FactoryProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.FactoryProperties()"
  name: "FactoryProperties()"
  nameWithType: "FactoryProperties.FactoryProperties()"
  syntax: "public FactoryProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.createTime()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.createTime()"
  name: "createTime()"
  nameWithType: "FactoryProperties.createTime()"
  summary: "Get the create<wbr>Time property: Time the factory was created in ISO8601 format."
  syntax: "public OffsetDateTime createTime()"
  desc: "Get the createTime property: Time the factory was created in ISO8601 format."
  returns:
    description: "the createTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.encryption()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.encryption()"
  name: "encryption()"
  nameWithType: "FactoryProperties.encryption()"
  summary: "Get the encryption property: Properties to enable Customer Managed Key for the factory."
  syntax: "public EncryptionConfiguration encryption()"
  desc: "Get the encryption property: Properties to enable Customer Managed Key for the factory."
  returns:
    description: "the encryption value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.EncryptionConfiguration?alt=com.azure.resourcemanager.datafactory.models.EncryptionConfiguration&text=EncryptionConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.globalParameters()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.globalParameters()"
  name: "globalParameters()"
  nameWithType: "FactoryProperties.globalParameters()"
  summary: "Get the global<wbr>Parameters property: List of parameters for factory."
  syntax: "public Map<String,GlobalParameterSpecification> globalParameters()"
  desc: "Get the globalParameters property: List of parameters for factory."
  returns:
    description: "the globalParameters value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.GlobalParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.GlobalParameterSpecification&text=GlobalParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "FactoryProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Factory provisioning state, example Succeeded."
  syntax: "public String provisioningState()"
  desc: "Get the provisioningState property: Factory provisioning state, example Succeeded."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "FactoryProperties.publicNetworkAccess()"
  summary: "Get the public<wbr>Network<wbr>Access property: Whether or not public network access is allowed for the data factory."
  syntax: "public PublicNetworkAccess publicNetworkAccess()"
  desc: "Get the publicNetworkAccess property: Whether or not public network access is allowed for the data factory."
  returns:
    description: "the publicNetworkAccess value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PublicNetworkAccess?alt=com.azure.resourcemanager.datafactory.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.purviewConfiguration()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.purviewConfiguration()"
  name: "purviewConfiguration()"
  nameWithType: "FactoryProperties.purviewConfiguration()"
  summary: "Get the purview<wbr>Configuration property: Purview information of the factory."
  syntax: "public PurviewConfiguration purviewConfiguration()"
  desc: "Get the purviewConfiguration property: Purview information of the factory."
  returns:
    description: "the purviewConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PurviewConfiguration?alt=com.azure.resourcemanager.datafactory.models.PurviewConfiguration&text=PurviewConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.repoConfiguration()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.repoConfiguration()"
  name: "repoConfiguration()"
  nameWithType: "FactoryProperties.repoConfiguration()"
  summary: "Get the repo<wbr>Configuration property: Git repo information of the factory."
  syntax: "public FactoryRepoConfiguration repoConfiguration()"
  desc: "Get the repoConfiguration property: Git repo information of the factory."
  returns:
    description: "the repoConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.FactoryRepoConfiguration?alt=com.azure.resourcemanager.datafactory.models.FactoryRepoConfiguration&text=FactoryRepoConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.validate()"
  name: "validate()"
  nameWithType: "FactoryProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.version()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.version()"
  name: "version()"
  nameWithType: "FactoryProperties.version()"
  summary: "Get the version property: Version of the factory."
  syntax: "public String version()"
  desc: "Get the version property: Version of the factory."
  returns:
    description: "the version value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.withEncryption(com.azure.resourcemanager.datafactory.models.EncryptionConfiguration)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.withEncryption(EncryptionConfiguration encryption)"
  name: "withEncryption(EncryptionConfiguration encryption)"
  nameWithType: "FactoryProperties.withEncryption(EncryptionConfiguration encryption)"
  summary: "Set the encryption property: Properties to enable Customer Managed Key for the factory."
  parameters:
  - description: "the encryption value to set."
    name: "encryption"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.EncryptionConfiguration?alt=com.azure.resourcemanager.datafactory.models.EncryptionConfiguration&text=EncryptionConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FactoryProperties withEncryption(EncryptionConfiguration encryption)"
  desc: "Set the encryption property: Properties to enable Customer Managed Key for the factory."
  returns:
    description: "the FactoryProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties&text=FactoryProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.withGlobalParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.GlobalParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.withGlobalParameters(Map<String,GlobalParameterSpecification> globalParameters)"
  name: "withGlobalParameters(Map<String,GlobalParameterSpecification> globalParameters)"
  nameWithType: "FactoryProperties.withGlobalParameters(Map<String,GlobalParameterSpecification> globalParameters)"
  summary: "Set the global<wbr>Parameters property: List of parameters for factory."
  parameters:
  - description: "the globalParameters value to set."
    name: "globalParameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.GlobalParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.GlobalParameterSpecification&text=GlobalParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public FactoryProperties withGlobalParameters(Map<String,GlobalParameterSpecification> globalParameters)"
  desc: "Set the globalParameters property: List of parameters for factory."
  returns:
    description: "the FactoryProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties&text=FactoryProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.withPublicNetworkAccess(com.azure.resourcemanager.datafactory.models.PublicNetworkAccess)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  name: "withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  nameWithType: "FactoryProperties.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  summary: "Set the public<wbr>Network<wbr>Access property: Whether or not public network access is allowed for the data factory."
  parameters:
  - description: "the publicNetworkAccess value to set."
    name: "publicNetworkAccess"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PublicNetworkAccess?alt=com.azure.resourcemanager.datafactory.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FactoryProperties withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  desc: "Set the publicNetworkAccess property: Whether or not public network access is allowed for the data factory."
  returns:
    description: "the FactoryProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties&text=FactoryProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.withPurviewConfiguration(com.azure.resourcemanager.datafactory.models.PurviewConfiguration)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.withPurviewConfiguration(PurviewConfiguration purviewConfiguration)"
  name: "withPurviewConfiguration(PurviewConfiguration purviewConfiguration)"
  nameWithType: "FactoryProperties.withPurviewConfiguration(PurviewConfiguration purviewConfiguration)"
  summary: "Set the purview<wbr>Configuration property: Purview information of the factory."
  parameters:
  - description: "the purviewConfiguration value to set."
    name: "purviewConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PurviewConfiguration?alt=com.azure.resourcemanager.datafactory.models.PurviewConfiguration&text=PurviewConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FactoryProperties withPurviewConfiguration(PurviewConfiguration purviewConfiguration)"
  desc: "Set the purviewConfiguration property: Purview information of the factory."
  returns:
    description: "the FactoryProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties&text=FactoryProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.withRepoConfiguration(com.azure.resourcemanager.datafactory.models.FactoryRepoConfiguration)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties.withRepoConfiguration(FactoryRepoConfiguration repoConfiguration)"
  name: "withRepoConfiguration(FactoryRepoConfiguration repoConfiguration)"
  nameWithType: "FactoryProperties.withRepoConfiguration(FactoryRepoConfiguration repoConfiguration)"
  summary: "Set the repo<wbr>Configuration property: Git repo information of the factory."
  parameters:
  - description: "the repoConfiguration value to set."
    name: "repoConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.FactoryRepoConfiguration?alt=com.azure.resourcemanager.datafactory.models.FactoryRepoConfiguration&text=FactoryRepoConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FactoryProperties withRepoConfiguration(FactoryRepoConfiguration repoConfiguration)"
  desc: "Set the repoConfiguration property: Git repo information of the factory."
  returns:
    description: "the FactoryProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.FactoryProperties&text=FactoryProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Factory resource properties."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
