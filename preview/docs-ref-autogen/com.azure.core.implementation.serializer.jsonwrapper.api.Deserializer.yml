### YamlMime:ManagedReference
items:
- uid: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer"
  id: "Deserializer"
  parent: "com.azure.core.implementation.serializer.jsonwrapper.api"
  children:
  - "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer.Deserializer(java.lang.Class<T>)"
  - "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer.deserialize(com.azure.core.implementation.serializer.jsonwrapper.api.Node)"
  - "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer.getRawType()"
  langs:
  - "java"
  name: "Deserializer<T>"
  nameWithType: "Deserializer<T>"
  fullName: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer<T>"
  type: "Class"
  package: "com.azure.core.implementation.serializer.jsonwrapper.api"
  summary: "A custom deserialization API for JSON content that will return a specific Java type. A Deserializer is registered on a specific instance of a <xref uid=\"com.azure.core.implementation.serializer.jsonwrapper.api.JsonApi\" data-throw-if-not-resolved=\"false\">JsonApi</xref> after it is retrieved from the <xref uid=\"com.azure.core.implementation.serializer.jsonwrapper.JsonWrapper\" data-throw-if-not-resolved=\"false\">JsonWrapper</xref> root class. For example, here is a custom deserializer that converts the JSON string `{\"valueInt\":7,\"valueString\":\"seven\"}` into an instance of 'Foo':\n\n```java\njsonDeserializer.registerCustomDeserializer(new Deserializer<Foo>(Foo.class) {\n     @Override public Foo deserialize(Node node) {\n         int intValue = node.get(\"valueInt\").asInt();\n         String stringValue = node.get(\"valueString\").asString();\n         return new Foo(intValue, stringValue);\n     }\n });\n Foo targetObject = jsonDeserializer.readString(json, Foo.class);\n```"
  syntax:
    content: "public abstract class Deserializer<T>"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer.Deserializer(java.lang.Class<T>)"
  id: "Deserializer(java.lang.Class<T>)"
  parent: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer"
  langs:
  - "java"
  name: "Deserializer(Class<T> rawType)"
  nameWithType: "Deserializer<T>.Deserializer(Class<T> rawType)"
  fullName: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer<T>.Deserializer(Class<T> rawType)"
  overload: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer.Deserializer*"
  type: "Constructor"
  package: "com.azure.core.implementation.serializer.jsonwrapper.api"
  summary: "Constructor"
  syntax:
    content: "protected Deserializer(Class<T> rawType)"
    parameters:
    - id: "rawType"
      type: "java.lang.Class<T>"
      description: "class type"
- uid: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer.deserialize(com.azure.core.implementation.serializer.jsonwrapper.api.Node)"
  id: "deserialize(com.azure.core.implementation.serializer.jsonwrapper.api.Node)"
  parent: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer"
  langs:
  - "java"
  name: "deserialize(Node node)"
  nameWithType: "Deserializer<T>.deserialize(Node node)"
  fullName: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer<T>.deserialize(Node node)"
  overload: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer.deserialize*"
  type: "Method"
  package: "com.azure.core.implementation.serializer.jsonwrapper.api"
  summary: "Deserialize body into object of type T"
  syntax:
    content: "public abstract T deserialize(Node node)"
    parameters:
    - id: "node"
      type: "com.azure.core.implementation.serializer.jsonwrapper.api.Node"
      description: "node"
    return:
      type: "T"
      description: "object of type T"
- uid: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer.getRawType()"
  id: "getRawType()"
  parent: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer"
  langs:
  - "java"
  name: "getRawType()"
  nameWithType: "Deserializer<T>.getRawType()"
  fullName: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer<T>.getRawType()"
  overload: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer.getRawType*"
  type: "Method"
  package: "com.azure.core.implementation.serializer.jsonwrapper.api"
  summary: "Get raw type"
  syntax:
    content: "public Class<T> getRawType()"
    return:
      type: "java.lang.Class<T>"
      description: "class type"
references:
- uid: "java.lang.Class<T>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer.Deserializer*"
  name: "Deserializer"
  nameWithType: "Deserializer<T>.Deserializer"
  fullName: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer<T>.Deserializer"
  package: "com.azure.core.implementation.serializer.jsonwrapper.api"
- uid: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer.getRawType*"
  name: "getRawType"
  nameWithType: "Deserializer<T>.getRawType"
  fullName: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer<T>.getRawType"
  package: "com.azure.core.implementation.serializer.jsonwrapper.api"
- uid: "com.azure.core.implementation.serializer.jsonwrapper.api.Node"
  name: "Node"
  nameWithType: "Node"
  fullName: "com.azure.core.implementation.serializer.jsonwrapper.api.Node"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer.deserialize*"
  name: "deserialize"
  nameWithType: "Deserializer<T>.deserialize"
  fullName: "com.azure.core.implementation.serializer.jsonwrapper.api.Deserializer<T>.deserialize"
  package: "com.azure.core.implementation.serializer.jsonwrapper.api"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
