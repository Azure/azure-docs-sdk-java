### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Range.isConnected*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Range<C>.isConnected"
name: "isConnected"
nameWithType: "Range<C>.isConnected"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Range.isConnected(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Range<C>.isConnected(Range<C> other)"
  name: "isConnected(Range<C> other)"
  nameWithType: "Range<C>.isConnected(Range<C> other)"
  summary: "Returns `true` if there exists a (possibly empty) range which is <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Range.encloses\" data-throw-if-not-resolved=\"false\" data-raw-source=\"enclosed\"></xref> by both this range and `other`.\n\nFor example,\n\n *  `[2, 4)` and `[5, 7)` are not connected\n *  `[2, 4)` and `[3, 5)` are connected, because both enclose `[3, 4)`\n *  `[2, 4)` and `[4, 6)` are connected, because both enclose the empty range `[4, 4)`\n\nNote that this range and `other` have a well-defined <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Range.span\" data-throw-if-not-resolved=\"false\" data-raw-source=\"union\"></xref> and <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Range.intersection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"intersection\"></xref> (as a single, possibly-empty range) if and only if this method returns `true`.\n\nThe connectedness relation is both reflexive and symmetric, but does not form an <xref uid=\"com.azure.cosmos.implementation.guava25.base.Equivalence\" data-throw-if-not-resolved=\"false\" data-raw-source=\"equivalence relation\"></xref> as it is not transitive.\n\nNote that certain discrete ranges are not considered connected, even though there are no elements \"between them.\" For example, `[3, 5]` is not considered connected to `[6, 10]`. In these cases, it may be desirable for both input ranges to be preprocessed with <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Range.canonical(com.azure.cosmos.implementation.guava25.collect.DiscreteDomain&lt;C&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#canonical(DiscreteDomain)\"></xref> before testing for connectedness."
  parameters:
  - name: "other"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Range?alt=com.azure.cosmos.implementation.guava25.collect.Range&text=Range\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public boolean isConnected(Range<C> other)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
