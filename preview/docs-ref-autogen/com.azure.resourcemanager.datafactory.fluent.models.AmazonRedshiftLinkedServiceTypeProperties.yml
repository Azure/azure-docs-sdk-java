### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties"
name: "AmazonRedshiftLinkedServiceTypeProperties"
nameWithType: "AmazonRedshiftLinkedServiceTypeProperties"
summary: "Amazon Redshift linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AmazonRedshiftLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.AmazonRedshiftLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.AmazonRedshiftLinkedServiceTypeProperties()"
  name: "AmazonRedshiftLinkedServiceTypeProperties()"
  nameWithType: "AmazonRedshiftLinkedServiceTypeProperties.AmazonRedshiftLinkedServiceTypeProperties()"
  syntax: "public AmazonRedshiftLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.database()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.database()"
  name: "database()"
  nameWithType: "AmazonRedshiftLinkedServiceTypeProperties.database()"
  summary: "Get the database property: The database name of the Amazon Redshift source."
  syntax: "public Object database()"
  desc: "Get the database property: The database name of the Amazon Redshift source. Type: string (or Expression with resultType string)."
  returns:
    description: "the database value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "AmazonRedshiftLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public Object encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.password()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.password()"
  name: "password()"
  nameWithType: "AmazonRedshiftLinkedServiceTypeProperties.password()"
  summary: "Get the password property: The password of the Amazon Redshift source."
  syntax: "public SecretBase password()"
  desc: "Get the password property: The password of the Amazon Redshift source."
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.port()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.port()"
  name: "port()"
  nameWithType: "AmazonRedshiftLinkedServiceTypeProperties.port()"
  summary: "Get the port property: The TCP port number that the Amazon Redshift server uses to listen for client connections."
  syntax: "public Object port()"
  desc: "Get the port property: The TCP port number that the Amazon Redshift server uses to listen for client connections. The default value is 5439. Type: integer (or Expression with resultType integer)."
  returns:
    description: "the port value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.server()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.server()"
  name: "server()"
  nameWithType: "AmazonRedshiftLinkedServiceTypeProperties.server()"
  summary: "Get the server property: The name of the Amazon Redshift server."
  syntax: "public Object server()"
  desc: "Get the server property: The name of the Amazon Redshift server. Type: string (or Expression with resultType string)."
  returns:
    description: "the server value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.username()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.username()"
  name: "username()"
  nameWithType: "AmazonRedshiftLinkedServiceTypeProperties.username()"
  summary: "Get the username property: The username of the Amazon Redshift source."
  syntax: "public Object username()"
  desc: "Get the username property: The username of the Amazon Redshift source. Type: string (or Expression with resultType string)."
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "AmazonRedshiftLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.withDatabase(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.withDatabase(Object database)"
  name: "withDatabase(Object database)"
  nameWithType: "AmazonRedshiftLinkedServiceTypeProperties.withDatabase(Object database)"
  summary: "Set the database property: The database name of the Amazon Redshift source."
  parameters:
  - description: "the database value to set."
    name: "database"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonRedshiftLinkedServiceTypeProperties withDatabase(Object database)"
  desc: "Set the database property: The database name of the Amazon Redshift source. Type: string (or Expression with resultType string)."
  returns:
    description: "the AmazonRedshiftLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties&text=AmazonRedshiftLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "AmazonRedshiftLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonRedshiftLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the AmazonRedshiftLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties&text=AmazonRedshiftLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "AmazonRedshiftLinkedServiceTypeProperties.withPassword(SecretBase password)"
  summary: "Set the password property: The password of the Amazon Redshift source."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonRedshiftLinkedServiceTypeProperties withPassword(SecretBase password)"
  desc: "Set the password property: The password of the Amazon Redshift source."
  returns:
    description: "the AmazonRedshiftLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties&text=AmazonRedshiftLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.withPort(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.withPort(Object port)"
  name: "withPort(Object port)"
  nameWithType: "AmazonRedshiftLinkedServiceTypeProperties.withPort(Object port)"
  summary: "Set the port property: The TCP port number that the Amazon Redshift server uses to listen for client connections."
  parameters:
  - description: "the port value to set."
    name: "port"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonRedshiftLinkedServiceTypeProperties withPort(Object port)"
  desc: "Set the port property: The TCP port number that the Amazon Redshift server uses to listen for client connections. The default value is 5439. Type: integer (or Expression with resultType integer)."
  returns:
    description: "the AmazonRedshiftLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties&text=AmazonRedshiftLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.withServer(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.withServer(Object server)"
  name: "withServer(Object server)"
  nameWithType: "AmazonRedshiftLinkedServiceTypeProperties.withServer(Object server)"
  summary: "Set the server property: The name of the Amazon Redshift server."
  parameters:
  - description: "the server value to set."
    name: "server"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonRedshiftLinkedServiceTypeProperties withServer(Object server)"
  desc: "Set the server property: The name of the Amazon Redshift server. Type: string (or Expression with resultType string)."
  returns:
    description: "the AmazonRedshiftLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties&text=AmazonRedshiftLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "AmazonRedshiftLinkedServiceTypeProperties.withUsername(Object username)"
  summary: "Set the username property: The username of the Amazon Redshift source."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonRedshiftLinkedServiceTypeProperties withUsername(Object username)"
  desc: "Set the username property: The username of the Amazon Redshift source. Type: string (or Expression with resultType string)."
  returns:
    description: "the AmazonRedshiftLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AmazonRedshiftLinkedServiceTypeProperties&text=AmazonRedshiftLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Amazon Redshift linked service properties."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
