### YamlMime:JavaMember
uid: "com.azure.search.documents.indexes.SearchIndexClient.createOrUpdateAliasWithResponse*"
fullName: "com.azure.search.documents.indexes.SearchIndexClient.createOrUpdateAliasWithResponse"
name: "createOrUpdateAliasWithResponse"
nameWithType: "SearchIndexClient.createOrUpdateAliasWithResponse"
members:
- uid: "com.azure.search.documents.indexes.SearchIndexClient.createOrUpdateAliasWithResponse(com.azure.search.documents.indexes.models.SearchAlias,boolean,com.azure.core.util.Context)"
  fullName: "com.azure.search.documents.indexes.SearchIndexClient.createOrUpdateAliasWithResponse(SearchAlias alias, boolean onlyIfUnchanged, Context context)"
  name: "createOrUpdateAliasWithResponse(SearchAlias alias, boolean onlyIfUnchanged, Context context)"
  nameWithType: "SearchIndexClient.createOrUpdateAliasWithResponse(SearchAlias alias, boolean onlyIfUnchanged, Context context)"
  summary: "Creates or updates an Azure Cognitive Search alias.\n\n**Code Sample**\n\nCreate then update the search alias named \"my-alias\".\n\n```java\nResponse<SearchAlias> response = searchIndexClient.createOrUpdateAliasWithResponse(\n     new SearchAlias(\"my-alias\", Collections.singletonList(\"index-to-alias\")), false, new Context(key1, value1));\n\n System.out.printf(\"Response status code %d. Created alias '%s' that aliases index '%s'.\",\n     response.getStatusCode(), response.getValue().getName(), response.getValue().getIndexes().get(0));\n\n response = searchIndexClient.createOrUpdateAliasWithResponse(\n     new SearchAlias(response.getValue().getName(), Collections.singletonList(\"new-index-to-alias\"))\n         .setETag(response.getValue().getETag()), true, new Context(key1, value1));\n\n System.out.printf(\"Response status code %d. Updated alias '%s' that aliases index '%s'.\",\n     response.getStatusCode(), response.getValue().getName(), response.getValue().getIndexes().get(0));\n```"
  parameters:
  - description: "definition of the alias to create or update."
    name: "alias"
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchAlias?alt=com.azure.search.documents.indexes.models.SearchAlias&text=SearchAlias\" data-throw-if-not-resolved=\"False\" />"
  - description: "only update the alias if the eTag matches the alias on the service."
    name: "onlyIfUnchanged"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SearchAlias> createOrUpdateAliasWithResponse(SearchAlias alias, boolean onlyIfUnchanged, Context context)"
  returns:
    description: "the created or updated alias."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.SearchAlias?alt=com.azure.search.documents.indexes.models.SearchAlias&text=SearchAlias\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.search.documents.indexes"
artifact: com.azure:azure-search-documents:11.5.0-beta.7
