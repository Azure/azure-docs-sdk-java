### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner"
fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner"
name: "IdentityProviderContractInner"
nameWithType: "IdentityProviderContractInner"
summary: "Identity Provider details."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class IdentityProviderContractInner extends ProxyResource"
constructors:
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.IdentityProviderContractInner()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.IdentityProviderContractInner()"
  name: "IdentityProviderContractInner()"
  nameWithType: "IdentityProviderContractInner.IdentityProviderContractInner()"
  syntax: "public IdentityProviderContractInner()"
methods:
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.allowedTenants()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.allowedTenants()"
  name: "allowedTenants()"
  nameWithType: "IdentityProviderContractInner.allowedTenants()"
  summary: "Get the allowedTenants property: List of Allowed Tenants when configuring Azure Active Directory login."
  syntax: "public List<String> allowedTenants()"
  returns:
    description: "the allowedTenants value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.authority()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.authority()"
  name: "authority()"
  nameWithType: "IdentityProviderContractInner.authority()"
  summary: "Get the authority property: OpenID Connect discovery endpoint hostname for AAD or AAD B2C."
  syntax: "public String authority()"
  returns:
    description: "the authority value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.clientId()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.clientId()"
  name: "clientId()"
  nameWithType: "IdentityProviderContractInner.clientId()"
  summary: "Get the clientId property: Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft."
  syntax: "public String clientId()"
  returns:
    description: "the clientId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.clientSecret()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.clientSecret()"
  name: "clientSecret()"
  nameWithType: "IdentityProviderContractInner.clientSecret()"
  summary: "Get the clientSecret property: Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
  syntax: "public String clientSecret()"
  returns:
    description: "the clientSecret value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.passwordResetPolicyName()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.passwordResetPolicyName()"
  name: "passwordResetPolicyName()"
  nameWithType: "IdentityProviderContractInner.passwordResetPolicyName()"
  summary: "Get the passwordResetPolicyName property: Password Reset Policy Name. Only applies to AAD B2C Identity Provider."
  syntax: "public String passwordResetPolicyName()"
  returns:
    description: "the passwordResetPolicyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.profileEditingPolicyName()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.profileEditingPolicyName()"
  name: "profileEditingPolicyName()"
  nameWithType: "IdentityProviderContractInner.profileEditingPolicyName()"
  summary: "Get the profileEditingPolicyName property: Profile Editing Policy Name. Only applies to AAD B2C Identity Provider."
  syntax: "public String profileEditingPolicyName()"
  returns:
    description: "the profileEditingPolicyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.signinPolicyName()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.signinPolicyName()"
  name: "signinPolicyName()"
  nameWithType: "IdentityProviderContractInner.signinPolicyName()"
  summary: "Get the signinPolicyName property: Signin Policy Name. Only applies to AAD B2C Identity Provider."
  syntax: "public String signinPolicyName()"
  returns:
    description: "the signinPolicyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.signinTenant()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.signinTenant()"
  name: "signinTenant()"
  nameWithType: "IdentityProviderContractInner.signinTenant()"
  summary: "Get the signinTenant property: The TenantId to use instead of Common when logging into Active Directory."
  syntax: "public String signinTenant()"
  returns:
    description: "the signinTenant value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.signupPolicyName()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.signupPolicyName()"
  name: "signupPolicyName()"
  nameWithType: "IdentityProviderContractInner.signupPolicyName()"
  summary: "Get the signupPolicyName property: Signup Policy Name. Only applies to AAD B2C Identity Provider."
  syntax: "public String signupPolicyName()"
  returns:
    description: "the signupPolicyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.typePropertiesType()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.typePropertiesType()"
  name: "typePropertiesType()"
  nameWithType: "IdentityProviderContractInner.typePropertiesType()"
  summary: "Get the type property: Identity Provider Type identifier."
  syntax: "public IdentityProviderType typePropertiesType()"
  returns:
    description: "the type value."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.IdentityProviderType?alt=com.azure.resourcemanager.apimanagement.models.IdentityProviderType&text=IdentityProviderType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.validate()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.validate()"
  name: "validate()"
  nameWithType: "IdentityProviderContractInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withAllowedTenants(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withAllowedTenants(List<String> allowedTenants)"
  name: "withAllowedTenants(List<String> allowedTenants)"
  nameWithType: "IdentityProviderContractInner.withAllowedTenants(List<String> allowedTenants)"
  summary: "Set the allowedTenants property: List of Allowed Tenants when configuring Azure Active Directory login."
  parameters:
  - description: "the allowedTenants value to set."
    name: "allowedTenants"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public IdentityProviderContractInner withAllowedTenants(List<String> allowedTenants)"
  returns:
    description: "the IdentityProviderContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner&text=IdentityProviderContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withAuthority(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withAuthority(String authority)"
  name: "withAuthority(String authority)"
  nameWithType: "IdentityProviderContractInner.withAuthority(String authority)"
  summary: "Set the authority property: OpenID Connect discovery endpoint hostname for AAD or AAD B2C."
  parameters:
  - description: "the authority value to set."
    name: "authority"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderContractInner withAuthority(String authority)"
  returns:
    description: "the IdentityProviderContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner&text=IdentityProviderContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withClientId(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withClientId(String clientId)"
  name: "withClientId(String clientId)"
  nameWithType: "IdentityProviderContractInner.withClientId(String clientId)"
  summary: "Set the clientId property: Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft."
  parameters:
  - description: "the clientId value to set."
    name: "clientId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderContractInner withClientId(String clientId)"
  returns:
    description: "the IdentityProviderContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner&text=IdentityProviderContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withClientSecret(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withClientSecret(String clientSecret)"
  name: "withClientSecret(String clientSecret)"
  nameWithType: "IdentityProviderContractInner.withClientSecret(String clientSecret)"
  summary: "Set the clientSecret property: Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
  parameters:
  - description: "the clientSecret value to set."
    name: "clientSecret"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderContractInner withClientSecret(String clientSecret)"
  returns:
    description: "the IdentityProviderContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner&text=IdentityProviderContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withPasswordResetPolicyName(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withPasswordResetPolicyName(String passwordResetPolicyName)"
  name: "withPasswordResetPolicyName(String passwordResetPolicyName)"
  nameWithType: "IdentityProviderContractInner.withPasswordResetPolicyName(String passwordResetPolicyName)"
  summary: "Set the passwordResetPolicyName property: Password Reset Policy Name. Only applies to AAD B2C Identity Provider."
  parameters:
  - description: "the passwordResetPolicyName value to set."
    name: "passwordResetPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderContractInner withPasswordResetPolicyName(String passwordResetPolicyName)"
  returns:
    description: "the IdentityProviderContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner&text=IdentityProviderContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withProfileEditingPolicyName(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withProfileEditingPolicyName(String profileEditingPolicyName)"
  name: "withProfileEditingPolicyName(String profileEditingPolicyName)"
  nameWithType: "IdentityProviderContractInner.withProfileEditingPolicyName(String profileEditingPolicyName)"
  summary: "Set the profileEditingPolicyName property: Profile Editing Policy Name. Only applies to AAD B2C Identity Provider."
  parameters:
  - description: "the profileEditingPolicyName value to set."
    name: "profileEditingPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderContractInner withProfileEditingPolicyName(String profileEditingPolicyName)"
  returns:
    description: "the IdentityProviderContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner&text=IdentityProviderContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withSigninPolicyName(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withSigninPolicyName(String signinPolicyName)"
  name: "withSigninPolicyName(String signinPolicyName)"
  nameWithType: "IdentityProviderContractInner.withSigninPolicyName(String signinPolicyName)"
  summary: "Set the signinPolicyName property: Signin Policy Name. Only applies to AAD B2C Identity Provider."
  parameters:
  - description: "the signinPolicyName value to set."
    name: "signinPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderContractInner withSigninPolicyName(String signinPolicyName)"
  returns:
    description: "the IdentityProviderContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner&text=IdentityProviderContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withSigninTenant(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withSigninTenant(String signinTenant)"
  name: "withSigninTenant(String signinTenant)"
  nameWithType: "IdentityProviderContractInner.withSigninTenant(String signinTenant)"
  summary: "Set the signinTenant property: The TenantId to use instead of Common when logging into Active Directory."
  parameters:
  - description: "the signinTenant value to set."
    name: "signinTenant"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderContractInner withSigninTenant(String signinTenant)"
  returns:
    description: "the IdentityProviderContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner&text=IdentityProviderContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withSignupPolicyName(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withSignupPolicyName(String signupPolicyName)"
  name: "withSignupPolicyName(String signupPolicyName)"
  nameWithType: "IdentityProviderContractInner.withSignupPolicyName(String signupPolicyName)"
  summary: "Set the signupPolicyName property: Signup Policy Name. Only applies to AAD B2C Identity Provider."
  parameters:
  - description: "the signupPolicyName value to set."
    name: "signupPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderContractInner withSignupPolicyName(String signupPolicyName)"
  returns:
    description: "the IdentityProviderContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner&text=IdentityProviderContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withTypePropertiesType(com.azure.resourcemanager.apimanagement.models.IdentityProviderType)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner.withTypePropertiesType(IdentityProviderType type)"
  name: "withTypePropertiesType(IdentityProviderType type)"
  nameWithType: "IdentityProviderContractInner.withTypePropertiesType(IdentityProviderType type)"
  summary: "Set the type property: Identity Provider Type identifier."
  parameters:
  - description: "the type value to set."
    name: "type"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.IdentityProviderType?alt=com.azure.resourcemanager.apimanagement.models.IdentityProviderType&text=IdentityProviderType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IdentityProviderContractInner withTypePropertiesType(IdentityProviderType type)"
  returns:
    description: "the IdentityProviderContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.IdentityProviderContractInner&text=IdentityProviderContractInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.apimanagement.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.3
