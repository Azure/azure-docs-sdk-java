### YamlMime:JavaType
uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule"
fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule"
name: "RoutingRule"
nameWithType: "RoutingRule"
summary: "A routing rule represents a specification for traffic to treat and where to send it, along with health probe information."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.SubResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.SubResource.id()"
- "com.azure.core.management.SubResource.withId(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class RoutingRule extends SubResource"
constructors:
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.RoutingRule()"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.RoutingRule()"
  name: "RoutingRule()"
  nameWithType: "RoutingRule.RoutingRule()"
  syntax: "public RoutingRule()"
methods:
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.acceptedProtocols()"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.acceptedProtocols()"
  name: "acceptedProtocols()"
  nameWithType: "RoutingRule.acceptedProtocols()"
  summary: "Get the accepted<wbr>Protocols property: Protocol schemes to match for this rule."
  syntax: "public List<FrontDoorProtocol> acceptedProtocols()"
  desc: "Get the acceptedProtocols property: Protocol schemes to match for this rule."
  returns:
    description: "the acceptedProtocols value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.frontdoor.models.FrontDoorProtocol?alt=com.azure.resourcemanager.frontdoor.models.FrontDoorProtocol&text=FrontDoorProtocol\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.enabledState()"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.enabledState()"
  name: "enabledState()"
  nameWithType: "RoutingRule.enabledState()"
  summary: "Get the enabled<wbr>State property: Whether to enable use of this rule."
  syntax: "public RoutingRuleEnabledState enabledState()"
  desc: "Get the enabledState property: Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'."
  returns:
    description: "the enabledState value."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.RoutingRuleEnabledState?alt=com.azure.resourcemanager.frontdoor.models.RoutingRuleEnabledState&text=RoutingRuleEnabledState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.frontendEndpoints()"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.frontendEndpoints()"
  name: "frontendEndpoints()"
  nameWithType: "RoutingRule.frontendEndpoints()"
  summary: "Get the frontend<wbr>Endpoints property: Frontend endpoints associated with this rule."
  syntax: "public List<SubResource> frontendEndpoints()"
  desc: "Get the frontendEndpoints property: Frontend endpoints associated with this rule."
  returns:
    description: "the frontendEndpoints value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.name()"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.name()"
  name: "name()"
  nameWithType: "RoutingRule.name()"
  summary: "Get the name property: Resource name."
  syntax: "public String name()"
  desc: "Get the name property: Resource name."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.patternsToMatch()"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.patternsToMatch()"
  name: "patternsToMatch()"
  nameWithType: "RoutingRule.patternsToMatch()"
  summary: "Get the patterns<wbr>ToMatch property: The route patterns of the rule."
  syntax: "public List<String> patternsToMatch()"
  desc: "Get the patternsToMatch property: The route patterns of the rule."
  returns:
    description: "the patternsToMatch value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.resourceState()"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.resourceState()"
  name: "resourceState()"
  nameWithType: "RoutingRule.resourceState()"
  summary: "Get the resource<wbr>State property: Resource status."
  syntax: "public FrontDoorResourceState resourceState()"
  desc: "Get the resourceState property: Resource status."
  returns:
    description: "the resourceState value."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.FrontDoorResourceState?alt=com.azure.resourcemanager.frontdoor.models.FrontDoorResourceState&text=FrontDoorResourceState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.routeConfiguration()"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.routeConfiguration()"
  name: "routeConfiguration()"
  nameWithType: "RoutingRule.routeConfiguration()"
  summary: "Get the route<wbr>Configuration property: A reference to the routing configuration."
  syntax: "public RouteConfiguration routeConfiguration()"
  desc: "Get the routeConfiguration property: A reference to the routing configuration."
  returns:
    description: "the routeConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.RouteConfiguration?alt=com.azure.resourcemanager.frontdoor.models.RouteConfiguration&text=RouteConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.rulesEngine()"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.rulesEngine()"
  name: "rulesEngine()"
  nameWithType: "RoutingRule.rulesEngine()"
  summary: "Get the rules<wbr>Engine property: A reference to a specific Rules Engine Configuration to apply to this route."
  syntax: "public SubResource rulesEngine()"
  desc: "Get the rulesEngine property: A reference to a specific Rules Engine Configuration to apply to this route."
  returns:
    description: "the rulesEngine value."
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.type()"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.type()"
  name: "type()"
  nameWithType: "RoutingRule.type()"
  summary: "Get the type property: Resource type."
  syntax: "public String type()"
  desc: "Get the type property: Resource type."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.validate()"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.validate()"
  name: "validate()"
  nameWithType: "RoutingRule.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.webApplicationFirewallPolicyLink()"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.webApplicationFirewallPolicyLink()"
  name: "webApplicationFirewallPolicyLink()"
  nameWithType: "RoutingRule.webApplicationFirewallPolicyLink()"
  summary: "Get the web<wbr>Application<wbr>Firewall<wbr>Policy<wbr>Link property: Defines the Web Application Firewall policy for each routing rule (if applicable)."
  syntax: "public RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink()"
  desc: "Get the webApplicationFirewallPolicyLink property: Defines the Web Application Firewall policy for each routing rule (if applicable)."
  returns:
    description: "the webApplicationFirewallPolicyLink value."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink?alt=com.azure.resourcemanager.frontdoor.models.RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink&text=RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withAcceptedProtocols(java.util.List<com.azure.resourcemanager.frontdoor.models.FrontDoorProtocol>)"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withAcceptedProtocols(List<FrontDoorProtocol> acceptedProtocols)"
  name: "withAcceptedProtocols(List<FrontDoorProtocol> acceptedProtocols)"
  nameWithType: "RoutingRule.withAcceptedProtocols(List<FrontDoorProtocol> acceptedProtocols)"
  summary: "Set the accepted<wbr>Protocols property: Protocol schemes to match for this rule."
  parameters:
  - description: "the acceptedProtocols value to set."
    name: "acceptedProtocols"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.frontdoor.models.FrontDoorProtocol?alt=com.azure.resourcemanager.frontdoor.models.FrontDoorProtocol&text=FrontDoorProtocol\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RoutingRule withAcceptedProtocols(List<FrontDoorProtocol> acceptedProtocols)"
  desc: "Set the acceptedProtocols property: Protocol schemes to match for this rule."
  returns:
    description: "the RoutingRule object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.RoutingRule?alt=com.azure.resourcemanager.frontdoor.models.RoutingRule&text=RoutingRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withEnabledState(com.azure.resourcemanager.frontdoor.models.RoutingRuleEnabledState)"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withEnabledState(RoutingRuleEnabledState enabledState)"
  name: "withEnabledState(RoutingRuleEnabledState enabledState)"
  nameWithType: "RoutingRule.withEnabledState(RoutingRuleEnabledState enabledState)"
  summary: "Set the enabled<wbr>State property: Whether to enable use of this rule."
  parameters:
  - description: "the enabledState value to set."
    name: "enabledState"
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.RoutingRuleEnabledState?alt=com.azure.resourcemanager.frontdoor.models.RoutingRuleEnabledState&text=RoutingRuleEnabledState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RoutingRule withEnabledState(RoutingRuleEnabledState enabledState)"
  desc: "Set the enabledState property: Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'."
  returns:
    description: "the RoutingRule object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.RoutingRule?alt=com.azure.resourcemanager.frontdoor.models.RoutingRule&text=RoutingRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withFrontendEndpoints(java.util.List<com.azure.core.management.SubResource>)"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withFrontendEndpoints(List<SubResource> frontendEndpoints)"
  name: "withFrontendEndpoints(List<SubResource> frontendEndpoints)"
  nameWithType: "RoutingRule.withFrontendEndpoints(List<SubResource> frontendEndpoints)"
  summary: "Set the frontend<wbr>Endpoints property: Frontend endpoints associated with this rule."
  parameters:
  - description: "the frontendEndpoints value to set."
    name: "frontendEndpoints"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RoutingRule withFrontendEndpoints(List<SubResource> frontendEndpoints)"
  desc: "Set the frontendEndpoints property: Frontend endpoints associated with this rule."
  returns:
    description: "the RoutingRule object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.RoutingRule?alt=com.azure.resourcemanager.frontdoor.models.RoutingRule&text=RoutingRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withId(java.lang.String)"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withId(String id)"
  name: "withId(String id)"
  nameWithType: "RoutingRule.withId(String id)"
  overridden: "com.azure.core.management.SubResource.withId(java.lang.String)"
  parameters:
  - name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RoutingRule withId(String id)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.RoutingRule?alt=com.azure.resourcemanager.frontdoor.models.RoutingRule&text=RoutingRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withName(String name)"
  name: "withName(String name)"
  nameWithType: "RoutingRule.withName(String name)"
  summary: "Set the name property: Resource name."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RoutingRule withName(String name)"
  desc: "Set the name property: Resource name."
  returns:
    description: "the RoutingRule object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.RoutingRule?alt=com.azure.resourcemanager.frontdoor.models.RoutingRule&text=RoutingRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withPatternsToMatch(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withPatternsToMatch(List<String> patternsToMatch)"
  name: "withPatternsToMatch(List<String> patternsToMatch)"
  nameWithType: "RoutingRule.withPatternsToMatch(List<String> patternsToMatch)"
  summary: "Set the patterns<wbr>ToMatch property: The route patterns of the rule."
  parameters:
  - description: "the patternsToMatch value to set."
    name: "patternsToMatch"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RoutingRule withPatternsToMatch(List<String> patternsToMatch)"
  desc: "Set the patternsToMatch property: The route patterns of the rule."
  returns:
    description: "the RoutingRule object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.RoutingRule?alt=com.azure.resourcemanager.frontdoor.models.RoutingRule&text=RoutingRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withRouteConfiguration(com.azure.resourcemanager.frontdoor.models.RouteConfiguration)"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withRouteConfiguration(RouteConfiguration routeConfiguration)"
  name: "withRouteConfiguration(RouteConfiguration routeConfiguration)"
  nameWithType: "RoutingRule.withRouteConfiguration(RouteConfiguration routeConfiguration)"
  summary: "Set the route<wbr>Configuration property: A reference to the routing configuration."
  parameters:
  - description: "the routeConfiguration value to set."
    name: "routeConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.RouteConfiguration?alt=com.azure.resourcemanager.frontdoor.models.RouteConfiguration&text=RouteConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RoutingRule withRouteConfiguration(RouteConfiguration routeConfiguration)"
  desc: "Set the routeConfiguration property: A reference to the routing configuration."
  returns:
    description: "the RoutingRule object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.RoutingRule?alt=com.azure.resourcemanager.frontdoor.models.RoutingRule&text=RoutingRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withRulesEngine(com.azure.core.management.SubResource)"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withRulesEngine(SubResource rulesEngine)"
  name: "withRulesEngine(SubResource rulesEngine)"
  nameWithType: "RoutingRule.withRulesEngine(SubResource rulesEngine)"
  summary: "Set the rules<wbr>Engine property: A reference to a specific Rules Engine Configuration to apply to this route."
  parameters:
  - description: "the rulesEngine value to set."
    name: "rulesEngine"
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RoutingRule withRulesEngine(SubResource rulesEngine)"
  desc: "Set the rulesEngine property: A reference to a specific Rules Engine Configuration to apply to this route."
  returns:
    description: "the RoutingRule object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.RoutingRule?alt=com.azure.resourcemanager.frontdoor.models.RoutingRule&text=RoutingRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withWebApplicationFirewallPolicyLink(com.azure.resourcemanager.frontdoor.models.RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink)"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withWebApplicationFirewallPolicyLink(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink)"
  name: "withWebApplicationFirewallPolicyLink(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink)"
  nameWithType: "RoutingRule.withWebApplicationFirewallPolicyLink(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink)"
  summary: "Set the web<wbr>Application<wbr>Firewall<wbr>Policy<wbr>Link property: Defines the Web Application Firewall policy for each routing rule (if applicable)."
  parameters:
  - description: "the webApplicationFirewallPolicyLink value to set."
    name: "webApplicationFirewallPolicyLink"
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink?alt=com.azure.resourcemanager.frontdoor.models.RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink&text=RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RoutingRule withWebApplicationFirewallPolicyLink(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink)"
  desc: "Set the webApplicationFirewallPolicyLink property: Defines the Web Application Firewall policy for each routing rule (if applicable)."
  returns:
    description: "the RoutingRule object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.RoutingRule?alt=com.azure.resourcemanager.frontdoor.models.RoutingRule&text=RoutingRule\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A routing rule represents a specification for traffic to treat and where to send it, along with health probe information."
metadata: {}
package: "com.azure.resourcemanager.frontdoor.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-frontdoor:1.0.0-beta.1
