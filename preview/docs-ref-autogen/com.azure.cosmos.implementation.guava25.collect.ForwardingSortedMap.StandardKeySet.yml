### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMap.StandardKeySet"
fullName: "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMap<K,V>.StandardKeySet"
name: "ForwardingSortedMap<K,V>.StandardKeySet"
nameWithType: "ForwardingSortedMap<K,V>.StandardKeySet"
summary: "A sensible implementation of <xref uid=\"java.util.SortedMap.keySet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedMap#keySet\"></xref> in terms of the methods of `ForwardingSortedMap`. In many cases, you may wish to override <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMap.keySet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ForwardingSortedMap#keySet\"></xref> to forward to this implementation or a subclass thereof."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.util.AbstractCollection\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.util.AbstractSet\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Sets.ImprovedAbstractSet\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Maps.KeySet\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Maps.SortedKeySet\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.cosmos.implementation.guava25.collect.Maps.KeySet.clear()"
- "com.azure.cosmos.implementation.guava25.collect.Maps.KeySet.contains(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.Maps.KeySet.forEach(java.util.function.Consumer<? super K>)"
- "com.azure.cosmos.implementation.guava25.collect.Maps.KeySet.isEmpty()"
- "com.azure.cosmos.implementation.guava25.collect.Maps.KeySet.iterator()"
- "com.azure.cosmos.implementation.guava25.collect.Maps.KeySet.remove(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.Maps.KeySet.size()"
- "com.azure.cosmos.implementation.guava25.collect.Maps.SortedKeySet.comparator()"
- "com.azure.cosmos.implementation.guava25.collect.Maps.SortedKeySet.first()"
- "com.azure.cosmos.implementation.guava25.collect.Maps.SortedKeySet.headSet(K)"
- "com.azure.cosmos.implementation.guava25.collect.Maps.SortedKeySet.last()"
- "com.azure.cosmos.implementation.guava25.collect.Maps.SortedKeySet.subSet(K,K)"
- "com.azure.cosmos.implementation.guava25.collect.Maps.SortedKeySet.tailSet(K)"
- "com.azure.cosmos.implementation.guava25.collect.Sets.ImprovedAbstractSet.removeAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.Sets.ImprovedAbstractSet.retainAll(java.util.Collection<?>)"
- "java.lang.Object.clone()"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "java.util.AbstractCollection.<T>toArray(T[])"
- "java.util.AbstractCollection.add(E)"
- "java.util.AbstractCollection.addAll(java.util.Collection<? extends E>)"
- "java.util.AbstractCollection.containsAll(java.util.Collection<?>)"
- "java.util.AbstractCollection.toArray()"
- "java.util.AbstractCollection.toString()"
- "java.util.AbstractSet.equals(java.lang.Object)"
- "java.util.AbstractSet.hashCode()"
syntax: "protected class ForwardingSortedMap<K,V>.StandardKeySet extends Maps.SortedKeySet<K,V>"
constructors:
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMap.StandardKeySet.StandardKeySet()"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
