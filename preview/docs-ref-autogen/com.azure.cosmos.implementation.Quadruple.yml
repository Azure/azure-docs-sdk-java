### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.Quadruple
  id: Quadruple
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation
  children:
  - com.azure.cosmos.implementation.Quadruple.<A,B,C,D>with(A,B,C,D)
  - com.azure.cosmos.implementation.Quadruple.Quadruple(A,B,C,D)
  - com.azure.cosmos.implementation.Quadruple.getValue0()
  - com.azure.cosmos.implementation.Quadruple.getValue1()
  - com.azure.cosmos.implementation.Quadruple.getValue2()
  - com.azure.cosmos.implementation.Quadruple.getValue3()
  langs:
  - java
  name: Quadruple<A,B,C,D>
  nameWithType: Quadruple<A,B,C,D>
  fullName: com.azure.cosmos.implementation.Quadruple<A,B,C,D>
  type: Class
  package: com.azure.cosmos.implementation
  summary: Represents class with four different generic objects.
  syntax:
    content: public class Quadruple<A,B,C,D>
    typeParameters:
    - id: A
    - id: B
    - id: C
    - id: D
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.Quadruple.<A,B,C,D>with(A,B,C,D)
  id: <A,B,C,D>with(A,B,C,D)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Quadruple
  langs:
  - java
  name: <A,B,C,D>with(A value0, B value1, C value2, D value3)
  nameWithType: Quadruple<A,B,C,D>.<A,B,C,D>with(A value0, B value1, C value2, D value3)
  fullName: com.azure.cosmos.implementation.Quadruple<A,B,C,D>.<A,B,C,D>with(A value0, B value1, C value2, D value3)
  overload: com.azure.cosmos.implementation.Quadruple.with*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public static Quadruple<A,B,C,D> <A,B,C,D>with(A value0, B value1, C value2, D value3)
    parameters:
    - id: value0
      type: A
    - id: value1
      type: B
    - id: value2
      type: C
    - id: value3
      type: D
    return:
      type: com.azure.cosmos.implementation.Quadruple<A,B,C,D>
- uid: com.azure.cosmos.implementation.Quadruple.Quadruple(A,B,C,D)
  id: Quadruple(A,B,C,D)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Quadruple
  langs:
  - java
  name: Quadruple(A value0, B value1, C value2, D value3)
  nameWithType: Quadruple<A,B,C,D>.Quadruple(A value0, B value1, C value2, D value3)
  fullName: com.azure.cosmos.implementation.Quadruple<A,B,C,D>.Quadruple(A value0, B value1, C value2, D value3)
  overload: com.azure.cosmos.implementation.Quadruple.Quadruple*
  type: Constructor
  package: com.azure.cosmos.implementation
  syntax:
    content: public Quadruple(A value0, B value1, C value2, D value3)
    parameters:
    - id: value0
      type: A
    - id: value1
      type: B
    - id: value2
      type: C
    - id: value3
      type: D
- uid: com.azure.cosmos.implementation.Quadruple.getValue0()
  id: getValue0()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Quadruple
  langs:
  - java
  name: getValue0()
  nameWithType: Quadruple<A,B,C,D>.getValue0()
  fullName: com.azure.cosmos.implementation.Quadruple<A,B,C,D>.getValue0()
  overload: com.azure.cosmos.implementation.Quadruple.getValue0*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public A getValue0()
    return:
      type: A
- uid: com.azure.cosmos.implementation.Quadruple.getValue1()
  id: getValue1()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Quadruple
  langs:
  - java
  name: getValue1()
  nameWithType: Quadruple<A,B,C,D>.getValue1()
  fullName: com.azure.cosmos.implementation.Quadruple<A,B,C,D>.getValue1()
  overload: com.azure.cosmos.implementation.Quadruple.getValue1*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public B getValue1()
    return:
      type: B
- uid: com.azure.cosmos.implementation.Quadruple.getValue2()
  id: getValue2()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Quadruple
  langs:
  - java
  name: getValue2()
  nameWithType: Quadruple<A,B,C,D>.getValue2()
  fullName: com.azure.cosmos.implementation.Quadruple<A,B,C,D>.getValue2()
  overload: com.azure.cosmos.implementation.Quadruple.getValue2*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public C getValue2()
    return:
      type: C
- uid: com.azure.cosmos.implementation.Quadruple.getValue3()
  id: getValue3()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.Quadruple
  langs:
  - java
  name: getValue3()
  nameWithType: Quadruple<A,B,C,D>.getValue3()
  fullName: com.azure.cosmos.implementation.Quadruple<A,B,C,D>.getValue3()
  overload: com.azure.cosmos.implementation.Quadruple.getValue3*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public D getValue3()
    return:
      type: D
references:
- uid: A
  spec.java:
  - uid: A
    name: A
    fullName: A
- uid: B
  spec.java:
  - uid: B
    name: B
    fullName: B
- uid: C
  spec.java:
  - uid: C
    name: C
    fullName: C
- uid: D
  spec.java:
  - uid: D
    name: D
    fullName: D
- uid: com.azure.cosmos.implementation.Quadruple.Quadruple*
  name: Quadruple
  nameWithType: Quadruple<A,B,C,D>.Quadruple
  fullName: com.azure.cosmos.implementation.Quadruple<A,B,C,D>.Quadruple
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Quadruple<A,B,C,D>
  spec.java:
  - uid: com.azure.cosmos.implementation.Quadruple
    name: Quadruple
    fullName: com.azure.cosmos.implementation.Quadruple
  - name: <
    fullName: <
  - uid: A
    name: A
    fullName: A
  - name: ','
    fullName: ','
  - uid: B
    name: B
    fullName: B
  - name: ','
    fullName: ','
  - uid: C
    name: C
    fullName: C
  - name: ','
    fullName: ','
  - uid: D
    name: D
    fullName: D
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.Quadruple.with*
  name: <A,B,C,D>with
  nameWithType: Quadruple<A,B,C,D>.<A,B,C,D>with
  fullName: com.azure.cosmos.implementation.Quadruple<A,B,C,D>.<A,B,C,D>with
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Quadruple.getValue0*
  name: getValue0
  nameWithType: Quadruple<A,B,C,D>.getValue0
  fullName: com.azure.cosmos.implementation.Quadruple<A,B,C,D>.getValue0
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Quadruple.getValue1*
  name: getValue1
  nameWithType: Quadruple<A,B,C,D>.getValue1
  fullName: com.azure.cosmos.implementation.Quadruple<A,B,C,D>.getValue1
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Quadruple.getValue2*
  name: getValue2
  nameWithType: Quadruple<A,B,C,D>.getValue2
  fullName: com.azure.cosmos.implementation.Quadruple<A,B,C,D>.getValue2
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Quadruple.getValue3*
  name: getValue3
  nameWithType: Quadruple<A,B,C,D>.getValue3
  fullName: com.azure.cosmos.implementation.Quadruple<A,B,C,D>.getValue3
  package: com.azure.cosmos.implementation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: A,B,C,D
  name: A,B,C,D
  nameWithType: A,B,C,D
  fullName: A,B,C,D
