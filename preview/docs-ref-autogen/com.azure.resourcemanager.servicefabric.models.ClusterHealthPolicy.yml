### YamlMime:JavaType
uid: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy"
fullName: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy"
name: "ClusterHealthPolicy"
nameWithType: "ClusterHealthPolicy"
summary: "Defines a health policy used to evaluate the health of the cluster or of a cluster node."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ClusterHealthPolicy"
constructors:
- uid: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.ClusterHealthPolicy()"
  fullName: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.ClusterHealthPolicy()"
  name: "ClusterHealthPolicy()"
  nameWithType: "ClusterHealthPolicy.ClusterHealthPolicy()"
  syntax: "public ClusterHealthPolicy()"
methods:
- uid: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.applicationHealthPolicies()"
  fullName: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.applicationHealthPolicies()"
  name: "applicationHealthPolicies()"
  nameWithType: "ClusterHealthPolicy.applicationHealthPolicies()"
  summary: "Get the application<wbr>Health<wbr>Policies property: Defines the application health policy map used to evaluate the health of an application or one of its children entities."
  syntax: "public Map<String,ApplicationHealthPolicy> applicationHealthPolicies()"
  desc: "Get the applicationHealthPolicies property: Defines the application health policy map used to evaluate the health of an application or one of its children entities."
  returns:
    description: "the applicationHealthPolicies value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.servicefabric.models.ApplicationHealthPolicy?alt=com.azure.resourcemanager.servicefabric.models.ApplicationHealthPolicy&text=ApplicationHealthPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.maxPercentUnhealthyApplications()"
  fullName: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.maxPercentUnhealthyApplications()"
  name: "maxPercentUnhealthyApplications()"
  nameWithType: "ClusterHealthPolicy.maxPercentUnhealthyApplications()"
  summary: "Get the max<wbr>Percent<wbr>Unhealthy<wbr>Applications property: The maximum allowed percentage of unhealthy applications before reporting an error."
  syntax: "public Integer maxPercentUnhealthyApplications()"
  desc: "Get the maxPercentUnhealthyApplications property: The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error. If the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning. This is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap. The computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero."
  returns:
    description: "the maxPercentUnhealthyApplications value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.maxPercentUnhealthyNodes()"
  fullName: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.maxPercentUnhealthyNodes()"
  name: "maxPercentUnhealthyNodes()"
  nameWithType: "ClusterHealthPolicy.maxPercentUnhealthyNodes()"
  summary: "Get the max<wbr>Percent<wbr>Unhealthy<wbr>Nodes property: The maximum allowed percentage of unhealthy nodes before reporting an error."
  syntax: "public Integer maxPercentUnhealthyNodes()"
  desc: "Get the maxPercentUnhealthyNodes property: The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error. If the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning. The percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster. The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that."
  returns:
    description: "the maxPercentUnhealthyNodes value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.validate()"
  fullName: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.validate()"
  name: "validate()"
  nameWithType: "ClusterHealthPolicy.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.withApplicationHealthPolicies(java.util.Map<java.lang.String,com.azure.resourcemanager.servicefabric.models.ApplicationHealthPolicy>)"
  fullName: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.withApplicationHealthPolicies(Map<String,ApplicationHealthPolicy> applicationHealthPolicies)"
  name: "withApplicationHealthPolicies(Map<String,ApplicationHealthPolicy> applicationHealthPolicies)"
  nameWithType: "ClusterHealthPolicy.withApplicationHealthPolicies(Map<String,ApplicationHealthPolicy> applicationHealthPolicies)"
  summary: "Set the application<wbr>Health<wbr>Policies property: Defines the application health policy map used to evaluate the health of an application or one of its children entities."
  parameters:
  - description: "the applicationHealthPolicies value to set."
    name: "applicationHealthPolicies"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.servicefabric.models.ApplicationHealthPolicy?alt=com.azure.resourcemanager.servicefabric.models.ApplicationHealthPolicy&text=ApplicationHealthPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ClusterHealthPolicy withApplicationHealthPolicies(Map<String,ApplicationHealthPolicy> applicationHealthPolicies)"
  desc: "Set the applicationHealthPolicies property: Defines the application health policy map used to evaluate the health of an application or one of its children entities."
  returns:
    description: "the ClusterHealthPolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy?alt=com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy&text=ClusterHealthPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.withMaxPercentUnhealthyApplications(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.withMaxPercentUnhealthyApplications(Integer maxPercentUnhealthyApplications)"
  name: "withMaxPercentUnhealthyApplications(Integer maxPercentUnhealthyApplications)"
  nameWithType: "ClusterHealthPolicy.withMaxPercentUnhealthyApplications(Integer maxPercentUnhealthyApplications)"
  summary: "Set the max<wbr>Percent<wbr>Unhealthy<wbr>Applications property: The maximum allowed percentage of unhealthy applications before reporting an error."
  parameters:
  - description: "the maxPercentUnhealthyApplications value to set."
    name: "maxPercentUnhealthyApplications"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ClusterHealthPolicy withMaxPercentUnhealthyApplications(Integer maxPercentUnhealthyApplications)"
  desc: "Set the maxPercentUnhealthyApplications property: The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error. If the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning. This is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap. The computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero."
  returns:
    description: "the ClusterHealthPolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy?alt=com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy&text=ClusterHealthPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.withMaxPercentUnhealthyNodes(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.withMaxPercentUnhealthyNodes(Integer maxPercentUnhealthyNodes)"
  name: "withMaxPercentUnhealthyNodes(Integer maxPercentUnhealthyNodes)"
  nameWithType: "ClusterHealthPolicy.withMaxPercentUnhealthyNodes(Integer maxPercentUnhealthyNodes)"
  summary: "Set the max<wbr>Percent<wbr>Unhealthy<wbr>Nodes property: The maximum allowed percentage of unhealthy nodes before reporting an error."
  parameters:
  - description: "the maxPercentUnhealthyNodes value to set."
    name: "maxPercentUnhealthyNodes"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ClusterHealthPolicy withMaxPercentUnhealthyNodes(Integer maxPercentUnhealthyNodes)"
  desc: "Set the maxPercentUnhealthyNodes property: The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error. If the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning. The percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster. The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that."
  returns:
    description: "the ClusterHealthPolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy?alt=com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy&text=ClusterHealthPolicy\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Defines a health policy used to evaluate the health of the cluster or of a cluster node."
metadata: {}
package: "com.azure.resourcemanager.servicefabric.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicefabric:1.0.0-beta.2
