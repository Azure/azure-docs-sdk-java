### YamlMime:JavaMember
uid: "com.azure.resourcemanager.apimanagement.fluent.models.TenantConfigurationSyncStateContractInner.withIsGitEnabled*"
fullName: "com.azure.resourcemanager.apimanagement.fluent.models.TenantConfigurationSyncStateContractInner.withIsGitEnabled"
name: "withIsGitEnabled"
nameWithType: "TenantConfigurationSyncStateContractInner.withIsGitEnabled"
members:
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.TenantConfigurationSyncStateContractInner.withIsGitEnabled(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.TenantConfigurationSyncStateContractInner.withIsGitEnabled(Boolean isGitEnabled)"
  name: "withIsGitEnabled(Boolean isGitEnabled)"
  nameWithType: "TenantConfigurationSyncStateContractInner.withIsGitEnabled(Boolean isGitEnabled)"
  summary: "Set the isGitEnabled property: value indicating whether Git configuration access is enabled."
  parameters:
  - description: "the isGitEnabled value to set."
    name: "isGitEnabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TenantConfigurationSyncStateContractInner withIsGitEnabled(Boolean isGitEnabled)"
  returns:
    description: "the TenantConfigurationSyncStateContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.TenantConfigurationSyncStateContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.TenantConfigurationSyncStateContractInner&text=TenantConfigurationSyncStateContractInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.apimanagement.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.1
