### YamlMime:JavaType
uid: "com.azure.communication.administration.CommunicationIdentityAsyncClient"
fullName: "com.azure.communication.administration.CommunicationIdentityAsyncClient"
name: "CommunicationIdentityAsyncClient"
nameWithType: "CommunicationIdentityAsyncClient"
summary: "Asynchronous client interface for Azure Communication Services identity operations"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CommunicationIdentityAsyncClient"
methods:
- uid: "com.azure.communication.administration.CommunicationIdentityAsyncClient.createUser()"
  fullName: "com.azure.communication.administration.CommunicationIdentityAsyncClient.createUser()"
  name: "createUser()"
  nameWithType: "CommunicationIdentityAsyncClient.createUser()"
  summary: "Creates a new Communication<wbr>User."
  syntax: "public Mono<CommunicationUser> createUser()"
  desc: "Creates a new CommunicationUser."
  returns:
    description: "the created Communication User."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.common.CommunicationUser?alt=com.azure.communication.common.CommunicationUser&text=CommunicationUser\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.administration.CommunicationIdentityAsyncClient.createUser(com.azure.core.util.Context)"
  fullName: "com.azure.communication.administration.CommunicationIdentityAsyncClient.createUser(Context context)"
  name: "createUser(Context context)"
  nameWithType: "CommunicationIdentityAsyncClient.createUser(Context context)"
  summary: "Creates a new Communication<wbr>User."
  parameters:
  - description: "the context of the request. Can also be null or Context.NONE."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<CommunicationUser>> createUser(Context context)"
  desc: "Creates a new CommunicationUser."
  returns:
    description: "the created Communication User."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.common.CommunicationUser?alt=com.azure.communication.common.CommunicationUser&text=CommunicationUser\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.administration.CommunicationIdentityAsyncClient.createUserWithResponse()"
  fullName: "com.azure.communication.administration.CommunicationIdentityAsyncClient.createUserWithResponse()"
  name: "createUserWithResponse()"
  nameWithType: "CommunicationIdentityAsyncClient.createUserWithResponse()"
  summary: "Creates a new Communication<wbr>User."
  syntax: "public Mono<Response<CommunicationUser>> createUserWithResponse()"
  desc: "Creates a new CommunicationUser."
  returns:
    description: "the created Communication User."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.common.CommunicationUser?alt=com.azure.communication.common.CommunicationUser&text=CommunicationUser\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.administration.CommunicationIdentityAsyncClient.deleteUser(com.azure.communication.common.CommunicationUser)"
  fullName: "com.azure.communication.administration.CommunicationIdentityAsyncClient.deleteUser(CommunicationUser communicationUser)"
  name: "deleteUser(CommunicationUser communicationUser)"
  nameWithType: "CommunicationIdentityAsyncClient.deleteUser(CommunicationUser communicationUser)"
  summary: "Deletes a Communication<wbr>User, revokes its tokens and deletes its data."
  parameters:
  - description: "The user to be deleted."
    name: "communicationUser"
    type: "<xref href=\"com.azure.communication.common.CommunicationUser?alt=com.azure.communication.common.CommunicationUser&text=CommunicationUser\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> deleteUser(CommunicationUser communicationUser)"
  desc: "Deletes a CommunicationUser, revokes its tokens and deletes its data."
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.administration.CommunicationIdentityAsyncClient.deleteUser(com.azure.communication.common.CommunicationUser,com.azure.core.util.Context)"
  fullName: "com.azure.communication.administration.CommunicationIdentityAsyncClient.deleteUser(CommunicationUser communicationUser, Context context)"
  name: "deleteUser(CommunicationUser communicationUser, Context context)"
  nameWithType: "CommunicationIdentityAsyncClient.deleteUser(CommunicationUser communicationUser, Context context)"
  summary: "Deletes a Communication<wbr>User, revokes its tokens and deletes its data."
  parameters:
  - description: "The user to be deleted."
    name: "communicationUser"
    type: "<xref href=\"com.azure.communication.common.CommunicationUser?alt=com.azure.communication.common.CommunicationUser&text=CommunicationUser\" data-throw-if-not-resolved=\"False\" />"
  - description: "the context of the request. Can also be null or Context.NONE."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> deleteUser(CommunicationUser communicationUser, Context context)"
  desc: "Deletes a CommunicationUser, revokes its tokens and deletes its data."
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.administration.CommunicationIdentityAsyncClient.deleteUserWithResponse(com.azure.communication.common.CommunicationUser)"
  fullName: "com.azure.communication.administration.CommunicationIdentityAsyncClient.deleteUserWithResponse(CommunicationUser communicationUser)"
  name: "deleteUserWithResponse(CommunicationUser communicationUser)"
  nameWithType: "CommunicationIdentityAsyncClient.deleteUserWithResponse(CommunicationUser communicationUser)"
  summary: "Deletes a Communication<wbr>User, revokes its tokens and deletes its data."
  parameters:
  - description: "The user to be deleted."
    name: "communicationUser"
    type: "<xref href=\"com.azure.communication.common.CommunicationUser?alt=com.azure.communication.common.CommunicationUser&text=CommunicationUser\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> deleteUserWithResponse(CommunicationUser communicationUser)"
  desc: "Deletes a CommunicationUser, revokes its tokens and deletes its data."
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.administration.CommunicationIdentityAsyncClient.issueToken(com.azure.communication.common.CommunicationUser,java.util.List<java.lang.String>)"
  fullName: "com.azure.communication.administration.CommunicationIdentityAsyncClient.issueToken(CommunicationUser communicationUser, List<String> scopes)"
  name: "issueToken(CommunicationUser communicationUser, List<String> scopes)"
  nameWithType: "CommunicationIdentityAsyncClient.issueToken(CommunicationUser communicationUser, List<String> scopes)"
  summary: "Generates a new token for an identity."
  parameters:
  - description: "The CommunicationUser from whom to issue a token."
    name: "communicationUser"
    type: "<xref href=\"com.azure.communication.common.CommunicationUser?alt=com.azure.communication.common.CommunicationUser&text=CommunicationUser\" data-throw-if-not-resolved=\"False\" />"
  - description: "The scopes that the token should have."
    name: "scopes"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<CommunicationUserToken> issueToken(CommunicationUser communicationUser, List<String> scopes)"
  desc: "Generates a new token for an identity."
  returns:
    description: "the object with the issued token."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.administration.CommunicationUserToken?alt=com.azure.communication.administration.CommunicationUserToken&text=CommunicationUserToken\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.administration.CommunicationIdentityAsyncClient.issueToken(com.azure.communication.common.CommunicationUser,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.communication.administration.CommunicationIdentityAsyncClient.issueToken(CommunicationUser communicationUser, List<String> scopes, Context context)"
  name: "issueToken(CommunicationUser communicationUser, List<String> scopes, Context context)"
  nameWithType: "CommunicationIdentityAsyncClient.issueToken(CommunicationUser communicationUser, List<String> scopes, Context context)"
  summary: "Generates a new token for an identity."
  parameters:
  - description: "The CommunicationUser from whom to issue a token."
    name: "communicationUser"
    type: "<xref href=\"com.azure.communication.common.CommunicationUser?alt=com.azure.communication.common.CommunicationUser&text=CommunicationUser\" data-throw-if-not-resolved=\"False\" />"
  - description: "The scopes that the token should have."
    name: "scopes"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the context of the request. Can also be null or Context.NONE."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<CommunicationUserToken>> issueToken(CommunicationUser communicationUser, List<String> scopes, Context context)"
  desc: "Generates a new token for an identity."
  returns:
    description: "the object with the issued token."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.administration.CommunicationUserToken?alt=com.azure.communication.administration.CommunicationUserToken&text=CommunicationUserToken\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.administration.CommunicationIdentityAsyncClient.issueTokenWithResponse(com.azure.communication.common.CommunicationUser,java.util.List<java.lang.String>)"
  fullName: "com.azure.communication.administration.CommunicationIdentityAsyncClient.issueTokenWithResponse(CommunicationUser communicationUser, List<String> scopes)"
  name: "issueTokenWithResponse(CommunicationUser communicationUser, List<String> scopes)"
  nameWithType: "CommunicationIdentityAsyncClient.issueTokenWithResponse(CommunicationUser communicationUser, List<String> scopes)"
  summary: "Generates a new token for an identity."
  parameters:
  - description: "The CommunicationUser from whom to issue a token."
    name: "communicationUser"
    type: "<xref href=\"com.azure.communication.common.CommunicationUser?alt=com.azure.communication.common.CommunicationUser&text=CommunicationUser\" data-throw-if-not-resolved=\"False\" />"
  - description: "The scopes that the token should have."
    name: "scopes"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<Response<CommunicationUserToken>> issueTokenWithResponse(CommunicationUser communicationUser, List<String> scopes)"
  desc: "Generates a new token for an identity."
  returns:
    description: "the object with the issued token."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.administration.CommunicationUserToken?alt=com.azure.communication.administration.CommunicationUserToken&text=CommunicationUserToken\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.administration.CommunicationIdentityAsyncClient.revokeTokens(com.azure.communication.common.CommunicationUser,java.time.OffsetDateTime)"
  fullName: "com.azure.communication.administration.CommunicationIdentityAsyncClient.revokeTokens(CommunicationUser communicationUser, OffsetDateTime issuedBefore)"
  name: "revokeTokens(CommunicationUser communicationUser, OffsetDateTime issuedBefore)"
  nameWithType: "CommunicationIdentityAsyncClient.revokeTokens(CommunicationUser communicationUser, OffsetDateTime issuedBefore)"
  summary: "Revokes all the tokens created for a user before a specific date."
  parameters:
  - description: "The CommunicationUser whose tokens will be revoked."
    name: "communicationUser"
    type: "<xref href=\"com.azure.communication.common.CommunicationUser?alt=com.azure.communication.common.CommunicationUser&text=CommunicationUser\" data-throw-if-not-resolved=\"False\" />"
  - description: "All tokens that are issued prior to this time should get revoked."
    name: "issuedBefore"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> revokeTokens(CommunicationUser communicationUser, OffsetDateTime issuedBefore)"
  desc: "Revokes all the tokens created for a user before a specific date."
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.administration.CommunicationIdentityAsyncClient.revokeTokens(com.azure.communication.common.CommunicationUser,java.time.OffsetDateTime,com.azure.core.util.Context)"
  fullName: "com.azure.communication.administration.CommunicationIdentityAsyncClient.revokeTokens(CommunicationUser communicationUser, OffsetDateTime issuedBefore, Context context)"
  name: "revokeTokens(CommunicationUser communicationUser, OffsetDateTime issuedBefore, Context context)"
  nameWithType: "CommunicationIdentityAsyncClient.revokeTokens(CommunicationUser communicationUser, OffsetDateTime issuedBefore, Context context)"
  summary: "Revokes all the tokens created for a user before a specific date."
  parameters:
  - description: "The CommunicationUser whose tokens will be revoked."
    name: "communicationUser"
    type: "<xref href=\"com.azure.communication.common.CommunicationUser?alt=com.azure.communication.common.CommunicationUser&text=CommunicationUser\" data-throw-if-not-resolved=\"False\" />"
  - description: "All tokens that are issued prior to this time should get revoked."
    name: "issuedBefore"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "the context of the request. Can also be null or Context.NONE."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> revokeTokens(CommunicationUser communicationUser, OffsetDateTime issuedBefore, Context context)"
  desc: "Revokes all the tokens created for a user before a specific date."
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.administration.CommunicationIdentityAsyncClient.revokeTokensWithResponse(com.azure.communication.common.CommunicationUser,java.time.OffsetDateTime)"
  fullName: "com.azure.communication.administration.CommunicationIdentityAsyncClient.revokeTokensWithResponse(CommunicationUser communicationUser, OffsetDateTime issuedBefore)"
  name: "revokeTokensWithResponse(CommunicationUser communicationUser, OffsetDateTime issuedBefore)"
  nameWithType: "CommunicationIdentityAsyncClient.revokeTokensWithResponse(CommunicationUser communicationUser, OffsetDateTime issuedBefore)"
  summary: "Revokes all the tokens created for a user before a specific date."
  parameters:
  - description: "The CommunicationUser whose tokens will be revoked."
    name: "communicationUser"
    type: "<xref href=\"com.azure.communication.common.CommunicationUser?alt=com.azure.communication.common.CommunicationUser&text=CommunicationUser\" data-throw-if-not-resolved=\"False\" />"
  - description: "All tokens that are issued prior to this time should get revoked."
    name: "issuedBefore"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> revokeTokensWithResponse(CommunicationUser communicationUser, OffsetDateTime issuedBefore)"
  desc: "Revokes all the tokens created for a user before a specific date."
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Asynchronous client interface for Azure Communication Services identity operations"
metadata: {}
package: "com.azure.communication.administration"
artifact: com.azure:azure-communication-administration:1.0.0-beta.3
