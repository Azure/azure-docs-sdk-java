### YamlMime:JavaType
uid: "com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable"
fullName: "com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable"
name: "HybridNetworkManager.Configurable"
nameWithType: "HybridNetworkManager.Configurable"
summary: "The Configurable allowing configurations to be set."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public static final class HybridNetworkManager.Configurable"
methods:
- uid: "com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable.authenticate(com.azure.core.credential.TokenCredential,com.azure.core.management.profile.AzureProfile)"
  fullName: "com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable.authenticate(TokenCredential credential, AzureProfile profile)"
  name: "authenticate(TokenCredential credential, AzureProfile profile)"
  nameWithType: "HybridNetworkManager.Configurable.authenticate(TokenCredential credential, AzureProfile profile)"
  summary: "Creates an instance of Hybrid<wbr>Network service API entry point."
  parameters:
  - description: "the credential to use."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - description: "the Azure profile for client."
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HybridNetworkManager authenticate(TokenCredential credential, AzureProfile profile)"
  desc: "Creates an instance of HybridNetwork service API entry point."
  returns:
    description: "the HybridNetwork service API instance."
    type: "<xref href=\"com.azure.resourcemanager.hybridnetwork.HybridNetworkManager?alt=com.azure.resourcemanager.hybridnetwork.HybridNetworkManager&text=HybridNetworkManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable.withDefaultPollInterval(java.time.Duration)"
  fullName: "com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable.withDefaultPollInterval(Duration defaultPollInterval)"
  name: "withDefaultPollInterval(Duration defaultPollInterval)"
  nameWithType: "HybridNetworkManager.Configurable.withDefaultPollInterval(Duration defaultPollInterval)"
  summary: "Sets the default poll interval, used when service does not provide \"Retry-After\" header."
  parameters:
  - description: "the default poll interval."
    name: "defaultPollInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HybridNetworkManager.Configurable withDefaultPollInterval(Duration defaultPollInterval)"
  desc: "Sets the default poll interval, used when service does not provide \"Retry-After\" header."
  returns:
    description: "the configurable object itself."
    type: "<xref href=\"com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable?alt=com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable&text=Configurable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable.withHttpClient(com.azure.core.http.HttpClient)"
  fullName: "com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable.withHttpClient(HttpClient httpClient)"
  name: "withHttpClient(HttpClient httpClient)"
  nameWithType: "HybridNetworkManager.Configurable.withHttpClient(HttpClient httpClient)"
  summary: "Sets the http client."
  parameters:
  - description: "the HTTP client."
    name: "httpClient"
    type: "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HybridNetworkManager.Configurable withHttpClient(HttpClient httpClient)"
  desc: "Sets the http client."
  returns:
    description: "the configurable object itself."
    type: "<xref href=\"com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable?alt=com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable&text=Configurable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable.withLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  fullName: "com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable.withLogOptions(HttpLogOptions httpLogOptions)"
  name: "withLogOptions(HttpLogOptions httpLogOptions)"
  nameWithType: "HybridNetworkManager.Configurable.withLogOptions(HttpLogOptions httpLogOptions)"
  summary: "Sets the logging options to the HTTP pipeline."
  parameters:
  - description: "the HTTP log options."
    name: "httpLogOptions"
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HybridNetworkManager.Configurable withLogOptions(HttpLogOptions httpLogOptions)"
  desc: "Sets the logging options to the HTTP pipeline."
  returns:
    description: "the configurable object itself."
    type: "<xref href=\"com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable?alt=com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable&text=Configurable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable.withPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  fullName: "com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable.withPolicy(HttpPipelinePolicy policy)"
  name: "withPolicy(HttpPipelinePolicy policy)"
  nameWithType: "HybridNetworkManager.Configurable.withPolicy(HttpPipelinePolicy policy)"
  summary: "Adds the pipeline policy to the HTTP pipeline."
  parameters:
  - description: "the HTTP pipeline policy."
    name: "policy"
    type: "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HybridNetworkManager.Configurable withPolicy(HttpPipelinePolicy policy)"
  desc: "Adds the pipeline policy to the HTTP pipeline."
  returns:
    description: "the configurable object itself."
    type: "<xref href=\"com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable?alt=com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable&text=Configurable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable.withRetryPolicy(com.azure.core.http.policy.RetryPolicy)"
  fullName: "com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable.withRetryPolicy(RetryPolicy retryPolicy)"
  name: "withRetryPolicy(RetryPolicy retryPolicy)"
  nameWithType: "HybridNetworkManager.Configurable.withRetryPolicy(RetryPolicy retryPolicy)"
  summary: "Sets the retry policy to the HTTP pipeline."
  parameters:
  - description: "the HTTP pipeline retry policy."
    name: "retryPolicy"
    type: "<xref href=\"com.azure.core.http.policy.RetryPolicy?alt=com.azure.core.http.policy.RetryPolicy&text=RetryPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HybridNetworkManager.Configurable withRetryPolicy(RetryPolicy retryPolicy)"
  desc: "Sets the retry policy to the HTTP pipeline."
  returns:
    description: "the configurable object itself."
    type: "<xref href=\"com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable?alt=com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable&text=Configurable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable.withScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable.withScope(String scope)"
  name: "withScope(String scope)"
  nameWithType: "HybridNetworkManager.Configurable.withScope(String scope)"
  summary: "Adds the scope to permission sets."
  parameters:
  - description: "the scope."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HybridNetworkManager.Configurable withScope(String scope)"
  desc: "Adds the scope to permission sets."
  returns:
    description: "the configurable object itself."
    type: "<xref href=\"com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable?alt=com.azure.resourcemanager.hybridnetwork.HybridNetworkManager.Configurable&text=Configurable\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The Configurable allowing configurations to be set."
metadata: {}
package: "com.azure.resourcemanager.hybridnetwork"
artifact: com.azure.resourcemanager:azure-resourcemanager-hybridnetwork:1.0.0-beta.1
