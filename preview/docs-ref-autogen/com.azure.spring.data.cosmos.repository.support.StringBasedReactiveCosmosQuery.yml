### YamlMime:ManagedReference
items:
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery
  id: StringBasedReactiveCosmosQuery
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support
  children:
  - com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.StringBasedReactiveCosmosQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod,com.azure.spring.data.cosmos.core.ReactiveCosmosOperations)
  - com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor)
  - com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.execute(java.lang.Object[])
  - com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isDeleteQuery()
  - com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isExistsQuery()
  langs:
  - java
  name: StringBasedReactiveCosmosQuery
  nameWithType: StringBasedReactiveCosmosQuery
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery
  type: Class
  package: com.azure.spring.data.cosmos.repository.support
  summary: Cosmos query class to handle the annotated queries. This overrides the execution and runs the query directly
  syntax:
    content: public class StringBasedReactiveCosmosQuery extends AbstractReactiveCosmosQuery
  inheritance:
  - java.lang.Object
  - com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery
  inheritedMembers:
  - com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor)
  - com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.execute(java.lang.Object[])
  - com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getExecution(org.springframework.data.repository.query.ReturnedType)
  - com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getQueryMethod()
  - com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isDeleteQuery()
  - com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isExistsQuery()
  - com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isPageQuery()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.StringBasedReactiveCosmosQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod,com.azure.spring.data.cosmos.core.ReactiveCosmosOperations)
  id: StringBasedReactiveCosmosQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod,com.azure.spring.data.cosmos.core.ReactiveCosmosOperations)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery
  langs:
  - java
  name: StringBasedReactiveCosmosQuery(ReactiveCosmosQueryMethod queryMethod, ReactiveCosmosOperations dbOperations)
  nameWithType: StringBasedReactiveCosmosQuery.StringBasedReactiveCosmosQuery(ReactiveCosmosQueryMethod queryMethod, ReactiveCosmosOperations dbOperations)
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.StringBasedReactiveCosmosQuery(ReactiveCosmosQueryMethod queryMethod, ReactiveCosmosOperations dbOperations)
  overload: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.StringBasedReactiveCosmosQuery*
  type: Constructor
  package: com.azure.spring.data.cosmos.repository.support
  summary: Constructor
  syntax:
    content: public StringBasedReactiveCosmosQuery(ReactiveCosmosQueryMethod queryMethod, ReactiveCosmosOperations dbOperations)
    parameters:
    - id: queryMethod
      type: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod
      description: the query method
    - id: dbOperations
      type: com.azure.spring.data.cosmos.core.ReactiveCosmosOperations
      description: the reactive cosmos operations
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor)
  id: createQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery
  langs:
  - java
  name: createQuery(ReactiveCosmosParameterAccessor accessor)
  nameWithType: StringBasedReactiveCosmosQuery.createQuery(ReactiveCosmosParameterAccessor accessor)
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.createQuery(ReactiveCosmosParameterAccessor accessor)
  overload: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.createQuery*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  syntax:
    content: protected CosmosQuery createQuery(ReactiveCosmosParameterAccessor accessor)
    parameters:
    - id: accessor
      type: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor
    return:
      type: com.azure.spring.data.cosmos.core.query.CosmosQuery
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.execute(java.lang.Object[])
  id: execute(java.lang.Object[])
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery
  langs:
  - java
  name: execute(Object[] parameters)
  nameWithType: StringBasedReactiveCosmosQuery.execute(Object[] parameters)
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.execute(Object[] parameters)
  overload: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.execute*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Executes the <xref uid="com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery" data-throw-if-not-resolved="false">AbstractReactiveCosmosQuery</xref> with the given parameters.
  syntax:
    content: public Object execute(Object[] parameters)
    parameters:
    - id: parameters
      type: java.lang.Object[]
    return:
      type: java.lang.Object
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isDeleteQuery()
  id: isDeleteQuery()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery
  langs:
  - java
  name: isDeleteQuery()
  nameWithType: StringBasedReactiveCosmosQuery.isDeleteQuery()
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isDeleteQuery()
  overload: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isDeleteQuery*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  syntax:
    content: protected boolean isDeleteQuery()
    return:
      type: boolean
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isExistsQuery()
  id: isExistsQuery()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery
  langs:
  - java
  name: isExistsQuery()
  nameWithType: StringBasedReactiveCosmosQuery.isExistsQuery()
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isExistsQuery()
  overload: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isExistsQuery*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  syntax:
    content: protected boolean isExistsQuery()
    return:
      type: boolean
references:
- uid: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod
  name: ReactiveCosmosQueryMethod
  nameWithType: ReactiveCosmosQueryMethod
  fullName: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod
- uid: com.azure.spring.data.cosmos.core.ReactiveCosmosOperations
  name: ReactiveCosmosOperations
  nameWithType: ReactiveCosmosOperations
  fullName: com.azure.spring.data.cosmos.core.ReactiveCosmosOperations
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.StringBasedReactiveCosmosQuery*
  name: StringBasedReactiveCosmosQuery
  nameWithType: StringBasedReactiveCosmosQuery.StringBasedReactiveCosmosQuery
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.StringBasedReactiveCosmosQuery
  package: com.azure.spring.data.cosmos.repository.support
- uid: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor
  name: ReactiveCosmosParameterAccessor
  nameWithType: ReactiveCosmosParameterAccessor
  fullName: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor
- uid: com.azure.spring.data.cosmos.core.query.CosmosQuery
  name: CosmosQuery
  nameWithType: CosmosQuery
  fullName: com.azure.spring.data.cosmos.core.query.CosmosQuery
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.createQuery*
  name: createQuery
  nameWithType: StringBasedReactiveCosmosQuery.createQuery
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.createQuery
  package: com.azure.spring.data.cosmos.repository.support
- uid: java.lang.Object[]
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '[]'
    fullName: '[]'
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.execute*
  name: execute
  nameWithType: StringBasedReactiveCosmosQuery.execute
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.execute
  package: com.azure.spring.data.cosmos.repository.support
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isDeleteQuery*
  name: isDeleteQuery
  nameWithType: StringBasedReactiveCosmosQuery.isDeleteQuery
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isDeleteQuery
  package: com.azure.spring.data.cosmos.repository.support
- uid: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isExistsQuery*
  name: isExistsQuery
  nameWithType: StringBasedReactiveCosmosQuery.isExistsQuery
  fullName: com.azure.spring.data.cosmos.repository.support.StringBasedReactiveCosmosQuery.isExistsQuery
  package: com.azure.spring.data.cosmos.repository.support
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery
  name: AbstractReactiveCosmosQuery
  nameWithType: AbstractReactiveCosmosQuery
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isDeleteQuery()
  name: AbstractReactiveCosmosQuery.isDeleteQuery()
  nameWithType: AbstractReactiveCosmosQuery.isDeleteQuery()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isDeleteQuery()
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.execute(java.lang.Object[])
  name: AbstractReactiveCosmosQuery.execute(Object[])
  nameWithType: AbstractReactiveCosmosQuery.execute(Object[])
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.execute(java.lang.Object[])
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor)
  name: AbstractReactiveCosmosQuery.createQuery(ReactiveCosmosParameterAccessor)
  nameWithType: AbstractReactiveCosmosQuery.createQuery(ReactiveCosmosParameterAccessor)
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.createQuery(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor)
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getQueryMethod()
  name: AbstractReactiveCosmosQuery.getQueryMethod()
  nameWithType: AbstractReactiveCosmosQuery.getQueryMethod()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getQueryMethod()
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isExistsQuery()
  name: AbstractReactiveCosmosQuery.isExistsQuery()
  nameWithType: AbstractReactiveCosmosQuery.isExistsQuery()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isExistsQuery()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isPageQuery()
  name: AbstractReactiveCosmosQuery.isPageQuery()
  nameWithType: AbstractReactiveCosmosQuery.isPageQuery()
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.isPageQuery()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getExecution(org.springframework.data.repository.query.ReturnedType)
  name: AbstractReactiveCosmosQuery.getExecution(ReturnedType)
  nameWithType: AbstractReactiveCosmosQuery.getExecution(ReturnedType)
  fullName: com.azure.spring.data.cosmos.repository.query.AbstractReactiveCosmosQuery.getExecution(org.springframework.data.repository.query.ReturnedType)
