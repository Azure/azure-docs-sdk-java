### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.module.SimpleModule.setupModule*"
fullName: "com.fasterxml.jackson.databind.module.SimpleModule.setupModule"
name: "setupModule"
nameWithType: "SimpleModule.setupModule"
members:
- uid: "com.fasterxml.jackson.databind.module.SimpleModule.setupModule(com.fasterxml.jackson.databind.Module.SetupContext)"
  fullName: "com.fasterxml.jackson.databind.module.SimpleModule.setupModule(Module.SetupContext context)"
  name: "setupModule(Module.SetupContext context)"
  nameWithType: "SimpleModule.setupModule(Module.SetupContext context)"
  summary: "Standard implementation handles registration of all configured customizations: it is important that sub-classes call this implementation (usually before additional custom logic) if they choose to override it; otherwise customizations will not be registered."
  overridden: "com.fasterxml.jackson.databind.Module.setupModule(com.fasterxml.jackson.databind.Module.SetupContext)"
  parameters:
  - name: "context"
    type: "<xref href=\"com.fasterxml.jackson.databind.Module.SetupContext?alt=com.fasterxml.jackson.databind.Module.SetupContext&text=SetupContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setupModule(Module.SetupContext context)"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.module"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
