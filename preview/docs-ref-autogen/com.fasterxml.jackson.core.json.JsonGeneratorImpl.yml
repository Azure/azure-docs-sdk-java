### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  id: JsonGeneratorImpl
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json
  children:
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec)
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl._cfgUnqNames
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl._characterEscapes
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl._checkStdFeatureChanges(int,int)
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl._ioContext
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl._maximumNonEscapedChar
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl._outputEscapes
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl._reportCantWriteValueExpectName(java.lang.String)
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl._rootValueSeparator
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl._verifyPrettyValueWrite(java.lang.String,int)
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl.disable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl.enable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl.getCharacterEscapes()
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl.getHighestEscapedChar()
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl.sOutputEscapes
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl.setHighestNonEscapedChar(int)
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.json.JsonGeneratorImpl.version()
  langs:
  - java
  name: JsonGeneratorImpl
  nameWithType: JsonGeneratorImpl
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  type: Class
  package: com.fasterxml.jackson.core.json
  summary: Intermediate base class shared by JSON-backed generators like <xref uid="com.fasterxml.jackson.core.json.UTF8JsonGenerator" data-throw-if-not-resolved="false">UTF8JsonGenerator</xref> and <xref uid="com.fasterxml.jackson.core.json.WriterBasedJsonGenerator" data-throw-if-not-resolved="false">WriterBasedJsonGenerator</xref>.
  syntax:
    content: public abstract class JsonGeneratorImpl extends GeneratorBase
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.core.JsonGenerator
  - com.fasterxml.jackson.core.base.GeneratorBase
  inheritedMembers:
  - com.fasterxml.jackson.core.JsonGenerator._copyCurrentContents(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.core.JsonGenerator._reportError(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator._reportUnsupportedOperation()
  - com.fasterxml.jackson.core.JsonGenerator._throwInternal()
  - com.fasterxml.jackson.core.JsonGenerator._verifyOffsets(int,int,int)
  - com.fasterxml.jackson.core.JsonGenerator._writeSimpleObject(java.lang.Object)
  - com.fasterxml.jackson.core.JsonGenerator.canOmitFields()
  - com.fasterxml.jackson.core.JsonGenerator.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.core.JsonGenerator.canWriteBinaryNatively()
  - com.fasterxml.jackson.core.JsonGenerator.canWriteFormattedNumbers()
  - com.fasterxml.jackson.core.JsonGenerator.canWriteObjectId()
  - com.fasterxml.jackson.core.JsonGenerator.canWriteTypeId()
  - com.fasterxml.jackson.core.JsonGenerator.configure(com.fasterxml.jackson.core.JsonGenerator.Feature,boolean)
  - com.fasterxml.jackson.core.JsonGenerator.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.core.JsonGenerator.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.core.JsonGenerator.getCharacterEscapes()
  - com.fasterxml.jackson.core.JsonGenerator.getFormatFeatures()
  - com.fasterxml.jackson.core.JsonGenerator.getHighestEscapedChar()
  - com.fasterxml.jackson.core.JsonGenerator.getOutputBuffered()
  - com.fasterxml.jackson.core.JsonGenerator.getOutputTarget()
  - com.fasterxml.jackson.core.JsonGenerator.getPrettyPrinter()
  - com.fasterxml.jackson.core.JsonGenerator.getSchema()
  - com.fasterxml.jackson.core.JsonGenerator.isEnabled(com.fasterxml.jackson.core.StreamWriteFeature)
  - com.fasterxml.jackson.core.JsonGenerator.overrideFormatFeatures(int,int)
  - com.fasterxml.jackson.core.JsonGenerator.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)
  - com.fasterxml.jackson.core.JsonGenerator.setHighestNonEscapedChar(int)
  - com.fasterxml.jackson.core.JsonGenerator.setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)
  - com.fasterxml.jackson.core.JsonGenerator.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.core.JsonGenerator.writeArray(double[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeArray(int[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeArray(java.lang.String[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeArray(long[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeArrayFieldStart(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[])
  - com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeBinary(java.io.InputStream,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeBinaryField(java.lang.String,byte[])
  - com.fasterxml.jackson.core.JsonGenerator.writeBoolean(boolean)
  - com.fasterxml.jackson.core.JsonGenerator.writeBooleanField(java.lang.String,boolean)
  - com.fasterxml.jackson.core.JsonGenerator.writeEmbeddedObject(java.lang.Object)
  - com.fasterxml.jackson.core.JsonGenerator.writeEndArray()
  - com.fasterxml.jackson.core.JsonGenerator.writeEndObject()
  - com.fasterxml.jackson.core.JsonGenerator.writeFieldId(long)
  - com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeNull()
  - com.fasterxml.jackson.core.JsonGenerator.writeNullField(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(char[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(double)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(float)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(int)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigDecimal)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigInteger)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(long)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumber(short)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,double)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,float)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,java.math.BigDecimal)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,java.math.BigInteger)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,long)
  - com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,short)
  - com.fasterxml.jackson.core.JsonGenerator.writeObjectField(java.lang.String,java.lang.Object)
  - com.fasterxml.jackson.core.JsonGenerator.writeObjectFieldStart(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeObjectId(java.lang.Object)
  - com.fasterxml.jackson.core.JsonGenerator.writeObjectRef(java.lang.Object)
  - com.fasterxml.jackson.core.JsonGenerator.writeOmittedField(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)
  - com.fasterxml.jackson.core.JsonGenerator.writeRaw(char[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String,int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeRawUTF8String(byte[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeStartArray()
  - com.fasterxml.jackson.core.JsonGenerator.writeStartArray(int)
  - com.fasterxml.jackson.core.JsonGenerator.writeStartArray(java.lang.Object)
  - com.fasterxml.jackson.core.JsonGenerator.writeStartArray(java.lang.Object,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeStartObject()
  - com.fasterxml.jackson.core.JsonGenerator.writeStartObject(java.lang.Object,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeString(char[],int,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeString(java.io.Reader,int)
  - com.fasterxml.jackson.core.JsonGenerator.writeString(java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeStringField(java.lang.String,java.lang.String)
  - com.fasterxml.jackson.core.JsonGenerator.writeTypeId(java.lang.Object)
  - com.fasterxml.jackson.core.JsonGenerator.writeTypePrefix(com.fasterxml.jackson.core.type.WritableTypeId)
  - com.fasterxml.jackson.core.JsonGenerator.writeTypeSuffix(com.fasterxml.jackson.core.type.WritableTypeId)
  - com.fasterxml.jackson.core.JsonGenerator.writeUTF8String(byte[],int,int)
  - com.fasterxml.jackson.core.base.GeneratorBase._asString(java.math.BigDecimal)
  - com.fasterxml.jackson.core.base.GeneratorBase._checkStdFeatureChanges(int,int)
  - com.fasterxml.jackson.core.base.GeneratorBase._constructDefaultPrettyPrinter()
  - com.fasterxml.jackson.core.base.GeneratorBase._decodeSurrogate(int,int)
  - com.fasterxml.jackson.core.base.GeneratorBase._releaseBuffers()
  - com.fasterxml.jackson.core.base.GeneratorBase._verifyValueWrite(java.lang.String)
  - com.fasterxml.jackson.core.base.GeneratorBase.close()
  - com.fasterxml.jackson.core.base.GeneratorBase.disable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  - com.fasterxml.jackson.core.base.GeneratorBase.enable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  - com.fasterxml.jackson.core.base.GeneratorBase.flush()
  - com.fasterxml.jackson.core.base.GeneratorBase.getCodec()
  - com.fasterxml.jackson.core.base.GeneratorBase.getCurrentValue()
  - com.fasterxml.jackson.core.base.GeneratorBase.getFeatureMask()
  - com.fasterxml.jackson.core.base.GeneratorBase.getOutputContext()
  - com.fasterxml.jackson.core.base.GeneratorBase.isClosed()
  - com.fasterxml.jackson.core.base.GeneratorBase.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  - com.fasterxml.jackson.core.base.GeneratorBase.overrideStdFeatures(int,int)
  - com.fasterxml.jackson.core.base.GeneratorBase.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  - com.fasterxml.jackson.core.base.GeneratorBase.setCurrentValue(java.lang.Object)
  - com.fasterxml.jackson.core.base.GeneratorBase.setFeatureMask(int)
  - com.fasterxml.jackson.core.base.GeneratorBase.useDefaultPrettyPrinter()
  - com.fasterxml.jackson.core.base.GeneratorBase.version()
  - com.fasterxml.jackson.core.base.GeneratorBase.writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeObject(java.lang.Object)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(char[],int,int)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String,int,int)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeStartObject(java.lang.Object)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeString(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.base.GeneratorBase.writeTree(com.fasterxml.jackson.core.TreeNode)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec)
  id: JsonGeneratorImpl(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: JsonGeneratorImpl(IOContext ctxt, int features, ObjectCodec codec)
  nameWithType: JsonGeneratorImpl.JsonGeneratorImpl(IOContext ctxt, int features, ObjectCodec codec)
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl(IOContext ctxt, int features, ObjectCodec codec)
  overload: com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl*
  type: Constructor
  package: com.fasterxml.jackson.core.json
  syntax:
    content: public JsonGeneratorImpl(IOContext ctxt, int features, ObjectCodec codec)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.core.io.IOContext
    - id: features
      type: int
    - id: codec
      type: com.fasterxml.jackson.core.ObjectCodec
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl._cfgUnqNames
  id: _cfgUnqNames
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: _cfgUnqNames
  nameWithType: JsonGeneratorImpl._cfgUnqNames
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl._cfgUnqNames
  type: Field
  package: com.fasterxml.jackson.core.json
  summary: Flag that is set if quoting is not to be added around JSON Object property names.
  syntax:
    content: protected boolean _cfgUnqNames
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl._characterEscapes
  id: _characterEscapes
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: _characterEscapes
  nameWithType: JsonGeneratorImpl._characterEscapes
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl._characterEscapes
  type: Field
  package: com.fasterxml.jackson.core.json
  summary: Definition of custom character escapes to use for generators created by this factory, if any. If null, standard data format specific escapes are used.
  syntax:
    content: protected CharacterEscapes _characterEscapes
    return:
      type: com.fasterxml.jackson.core.io.CharacterEscapes
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl._checkStdFeatureChanges(int,int)
  id: _checkStdFeatureChanges(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: _checkStdFeatureChanges(int newFeatureFlags, int changedFeatures)
  nameWithType: JsonGeneratorImpl._checkStdFeatureChanges(int newFeatureFlags, int changedFeatures)
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl._checkStdFeatureChanges(int newFeatureFlags, int changedFeatures)
  overload: com.fasterxml.jackson.core.json.JsonGeneratorImpl._checkStdFeatureChanges*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Helper method called to verify changes to standard features.
  syntax:
    content: protected void _checkStdFeatureChanges(int newFeatureFlags, int changedFeatures)
    parameters:
    - id: newFeatureFlags
      type: int
    - id: changedFeatures
      type: int
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl._ioContext
  id: _ioContext
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: _ioContext
  nameWithType: JsonGeneratorImpl._ioContext
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl._ioContext
  type: Field
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected final IOContext _ioContext
    return:
      type: com.fasterxml.jackson.core.io.IOContext
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl._maximumNonEscapedChar
  id: _maximumNonEscapedChar
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: _maximumNonEscapedChar
  nameWithType: JsonGeneratorImpl._maximumNonEscapedChar
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl._maximumNonEscapedChar
  type: Field
  package: com.fasterxml.jackson.core.json
  summary: >-
    Value between 128 (0x80) and 65535 (0xFFFF) that indicates highest Unicode code point that will not need escaping; or 0 to indicate that all characters can be represented without escaping. Typically used to force escaping of some portion of character set; for example to always escape non-ASCII characters (if value was 127).


    NOTE: not all sub-classes make use of this setting.
  syntax:
    content: protected int _maximumNonEscapedChar
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl._outputEscapes
  id: _outputEscapes
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: _outputEscapes
  nameWithType: JsonGeneratorImpl._outputEscapes
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl._outputEscapes
  type: Field
  package: com.fasterxml.jackson.core.json
  summary: Currently active set of output escape code definitions (whether and how to escape or not) for 7-bit ASCII range (first 128 character codes). Defined separately to make potentially customizable
  syntax:
    content: protected int[] _outputEscapes
    return:
      type: int[]
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl._reportCantWriteValueExpectName(java.lang.String)
  id: _reportCantWriteValueExpectName(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: _reportCantWriteValueExpectName(String typeMsg)
  nameWithType: JsonGeneratorImpl._reportCantWriteValueExpectName(String typeMsg)
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl._reportCantWriteValueExpectName(String typeMsg)
  overload: com.fasterxml.jackson.core.json.JsonGeneratorImpl._reportCantWriteValueExpectName*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected void _reportCantWriteValueExpectName(String typeMsg)
    parameters:
    - id: typeMsg
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl._rootValueSeparator
  id: _rootValueSeparator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: _rootValueSeparator
  nameWithType: JsonGeneratorImpl._rootValueSeparator
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl._rootValueSeparator
  type: Field
  package: com.fasterxml.jackson.core.json
  summary: Separator to use, if any, between root-level values.
  syntax:
    content: protected SerializableString _rootValueSeparator
    return:
      type: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl._verifyPrettyValueWrite(java.lang.String,int)
  id: _verifyPrettyValueWrite(java.lang.String,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: _verifyPrettyValueWrite(String typeMsg, int status)
  nameWithType: JsonGeneratorImpl._verifyPrettyValueWrite(String typeMsg, int status)
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl._verifyPrettyValueWrite(String typeMsg, int status)
  overload: com.fasterxml.jackson.core.json.JsonGeneratorImpl._verifyPrettyValueWrite*
  type: Method
  package: com.fasterxml.jackson.core.json
  syntax:
    content: protected void _verifyPrettyValueWrite(String typeMsg, int status)
    parameters:
    - id: typeMsg
      type: java.lang.String
    - id: status
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.disable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  id: disable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: disable(JsonGenerator.Feature f)
  nameWithType: JsonGeneratorImpl.disable(JsonGenerator.Feature f)
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.disable(JsonGenerator.Feature f)
  overload: com.fasterxml.jackson.core.json.JsonGeneratorImpl.disable*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Method for disabling specified features (check <xref uid="" data-throw-if-not-resolved="false">Feature</xref> for list of features)
  syntax:
    content: public JsonGenerator disable(JsonGenerator.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.JsonGenerator.Feature
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.enable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  id: enable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: enable(JsonGenerator.Feature f)
  nameWithType: JsonGeneratorImpl.enable(JsonGenerator.Feature f)
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.enable(JsonGenerator.Feature f)
  overload: com.fasterxml.jackson.core.json.JsonGeneratorImpl.enable*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: 'Method for enabling specified parser features: check <xref uid="" data-throw-if-not-resolved="false">Feature</xref> for list of available features.'
  syntax:
    content: public JsonGenerator enable(JsonGenerator.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.JsonGenerator.Feature
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.getCharacterEscapes()
  id: getCharacterEscapes()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: getCharacterEscapes()
  nameWithType: JsonGeneratorImpl.getCharacterEscapes()
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.getCharacterEscapes()
  overload: com.fasterxml.jackson.core.json.JsonGeneratorImpl.getCharacterEscapes*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Method for accessing custom escapes factory uses for <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref>s it creates.
  syntax:
    content: public CharacterEscapes getCharacterEscapes()
    return:
      type: com.fasterxml.jackson.core.io.CharacterEscapes
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.getHighestEscapedChar()
  id: getHighestEscapedChar()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: getHighestEscapedChar()
  nameWithType: JsonGeneratorImpl.getHighestEscapedChar()
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.getHighestEscapedChar()
  overload: com.fasterxml.jackson.core.json.JsonGeneratorImpl.getHighestEscapedChar*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: 'Accessor method for testing what is the highest unescaped character configured for this generator. This may be either positive value (when escaping configuration has been set and is in effect), or 0 to indicate that no additional escaping is in effect. Some generators may not support additional escaping: for example, generators for binary formats that do not use escaping should simply return 0.'
  syntax:
    content: public int getHighestEscapedChar()
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.sOutputEscapes
  id: sOutputEscapes
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: sOutputEscapes
  nameWithType: JsonGeneratorImpl.sOutputEscapes
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.sOutputEscapes
  type: Field
  package: com.fasterxml.jackson.core.json
  summary: This is the default set of escape codes, over 7-bit ASCII range (first 128 character codes), used for single-byte UTF-8 characters.
  syntax:
    content: protected static final int[] sOutputEscapes
    return:
      type: int[]
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)
  id: setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: setCharacterEscapes(CharacterEscapes esc)
  nameWithType: JsonGeneratorImpl.setCharacterEscapes(CharacterEscapes esc)
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.setCharacterEscapes(CharacterEscapes esc)
  overload: com.fasterxml.jackson.core.json.JsonGeneratorImpl.setCharacterEscapes*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: >-
    Method for defining custom escapes factory uses for <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref>s it creates.


    Default implementation does nothing and simply returns this instance.
  syntax:
    content: public JsonGenerator setCharacterEscapes(CharacterEscapes esc)
    parameters:
    - id: esc
      type: com.fasterxml.jackson.core.io.CharacterEscapes
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.setHighestNonEscapedChar(int)
  id: setHighestNonEscapedChar(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: setHighestNonEscapedChar(int charCode)
  nameWithType: JsonGeneratorImpl.setHighestNonEscapedChar(int charCode)
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.setHighestNonEscapedChar(int charCode)
  overload: com.fasterxml.jackson.core.json.JsonGeneratorImpl.setHighestNonEscapedChar*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: >-
    Method that can be called to request that generator escapes all character codes above specified code point (if positive value); or, to not escape any characters except for ones that must be escaped for the data format (if -1). To force escaping of all non-ASCII characters, for example, this method would be called with value of 127.


    Note that generators are NOT required to support setting of value higher than 127, because there are other ways to affect quoting (or lack thereof) of character codes between 0 and 127. Not all generators support concept of escaping, either; if so, calling this method will have no effect.


    Default implementation does nothing; sub-classes need to redefine it according to rules of supported data format.
  syntax:
    content: public JsonGenerator setHighestNonEscapedChar(int charCode)
    parameters:
    - id: charCode
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)
  id: setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: setRootValueSeparator(SerializableString sep)
  nameWithType: JsonGeneratorImpl.setRootValueSeparator(SerializableString sep)
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.setRootValueSeparator(SerializableString sep)
  overload: com.fasterxml.jackson.core.json.JsonGeneratorImpl.setRootValueSeparator*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: >-
    Method that allows overriding String used for separating root-level JSON values (default is single space character)


    Default implementation throws <xref uid="" data-throw-if-not-resolved="false">UnsupportedOperationException</xref>.
  syntax:
    content: public JsonGenerator setRootValueSeparator(SerializableString sep)
    parameters:
    - id: sep
      type: com.fasterxml.jackson.core.SerializableString
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.version()
  id: version()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.JsonGeneratorImpl
  langs:
  - java
  name: version()
  nameWithType: JsonGeneratorImpl.version()
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.version()
  overload: com.fasterxml.jackson.core.json.JsonGeneratorImpl.version*
  type: Method
  package: com.fasterxml.jackson.core.json
  summary: Implemented with standard version number detection algorithm, typically using a simple generated class, with information extracted from Maven project file during build.
  syntax:
    content: public Version version()
    return:
      type: com.fasterxml.jackson.core.Version
references:
- uid: com.fasterxml.jackson.core.io.IOContext
  name: IOContext
  nameWithType: IOContext
  fullName: com.fasterxml.jackson.core.io.IOContext
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.ObjectCodec
  name: ObjectCodec
  nameWithType: ObjectCodec
  fullName: com.fasterxml.jackson.core.ObjectCodec
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl*
  name: JsonGeneratorImpl
  nameWithType: JsonGeneratorImpl.JsonGeneratorImpl
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.JsonGeneratorImpl
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.Version
  name: Version
  nameWithType: Version
  fullName: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.version*
  name: version
  nameWithType: JsonGeneratorImpl.version
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.version
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.JsonGenerator.Feature
  name: JsonGenerator.Feature
  nameWithType: JsonGenerator.Feature
  fullName: com.fasterxml.jackson.core.JsonGenerator.Feature
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.enable*
  name: enable
  nameWithType: JsonGeneratorImpl.enable
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.enable
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.disable*
  name: disable
  nameWithType: JsonGeneratorImpl.disable
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.disable
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl._checkStdFeatureChanges*
  name: _checkStdFeatureChanges
  nameWithType: JsonGeneratorImpl._checkStdFeatureChanges
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl._checkStdFeatureChanges
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.setHighestNonEscapedChar*
  name: setHighestNonEscapedChar
  nameWithType: JsonGeneratorImpl.setHighestNonEscapedChar
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.setHighestNonEscapedChar
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.getHighestEscapedChar*
  name: getHighestEscapedChar
  nameWithType: JsonGeneratorImpl.getHighestEscapedChar
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.getHighestEscapedChar
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.io.CharacterEscapes
  name: CharacterEscapes
  nameWithType: CharacterEscapes
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.setCharacterEscapes*
  name: setCharacterEscapes
  nameWithType: JsonGeneratorImpl.setCharacterEscapes
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.setCharacterEscapes
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.getCharacterEscapes*
  name: getCharacterEscapes
  nameWithType: JsonGeneratorImpl.getCharacterEscapes
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.getCharacterEscapes
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.SerializableString
  name: SerializableString
  nameWithType: SerializableString
  fullName: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl.setRootValueSeparator*
  name: setRootValueSeparator
  nameWithType: JsonGeneratorImpl.setRootValueSeparator
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl.setRootValueSeparator
  package: com.fasterxml.jackson.core.json
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl._verifyPrettyValueWrite*
  name: _verifyPrettyValueWrite
  nameWithType: JsonGeneratorImpl._verifyPrettyValueWrite
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl._verifyPrettyValueWrite
  package: com.fasterxml.jackson.core.json
- uid: com.fasterxml.jackson.core.json.JsonGeneratorImpl._reportCantWriteValueExpectName*
  name: _reportCantWriteValueExpectName
  nameWithType: JsonGeneratorImpl._reportCantWriteValueExpectName
  fullName: com.fasterxml.jackson.core.json.JsonGeneratorImpl._reportCantWriteValueExpectName
  package: com.fasterxml.jackson.core.json
- uid: int[]
  spec.java:
  - uid: int
    name: int
    fullName: int
  - name: '[]'
    fullName: '[]'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.base.GeneratorBase
  name: GeneratorBase
  nameWithType: GeneratorBase
  fullName: com.fasterxml.jackson.core.base.GeneratorBase
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeObjectField(java.lang.String,java.lang.Object)
  name: JsonGenerator.writeObjectField(String,Object)
  nameWithType: JsonGenerator.writeObjectField(String,Object)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeObjectField(java.lang.String,java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeArray(double[],int,int)
  name: JsonGenerator.writeArray(double[],int,int)
  nameWithType: JsonGenerator.writeArray(double[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeArray(double[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[])
  name: JsonGenerator.writeBinary(byte[])
  nameWithType: JsonGenerator.writeBinary(byte[])
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[])
- uid: com.fasterxml.jackson.core.JsonGenerator.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)
  name: JsonGenerator.copyCurrentEvent(JsonParser)
  nameWithType: JsonGenerator.copyCurrentEvent(JsonParser)
  fullName: com.fasterxml.jackson.core.JsonGenerator.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.getFeatureMask()
  name: GeneratorBase.getFeatureMask()
  nameWithType: GeneratorBase.getFeatureMask()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.getFeatureMask()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeStartObject()
  name: JsonGenerator.writeStartObject()
  nameWithType: JsonGenerator.writeStartObject()
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeStartObject()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeArrayFieldStart(java.lang.String)
  name: JsonGenerator.writeArrayFieldStart(String)
  nameWithType: JsonGenerator.writeArrayFieldStart(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeArrayFieldStart(java.lang.String)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(double)
  name: JsonGenerator.writeNumber(double)
  nameWithType: JsonGenerator.writeNumber(double)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(double)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int)
  name: GeneratorBase.writeBinary(Base64Variant,InputStream,int)
  nameWithType: GeneratorBase.writeBinary(Base64Variant,InputStream,int)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.isEnabled(com.fasterxml.jackson.core.StreamWriteFeature)
  name: JsonGenerator.isEnabled(StreamWriteFeature)
  nameWithType: JsonGenerator.isEnabled(StreamWriteFeature)
  fullName: com.fasterxml.jackson.core.JsonGenerator.isEnabled(com.fasterxml.jackson.core.StreamWriteFeature)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeEndObject()
  name: JsonGenerator.writeEndObject()
  nameWithType: JsonGenerator.writeEndObject()
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeEndObject()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.core.JsonGenerator.getSchema()
  name: JsonGenerator.getSchema()
  nameWithType: JsonGenerator.getSchema()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getSchema()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNull()
  name: JsonGenerator.writeNull()
  nameWithType: JsonGenerator.writeNull()
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNull()
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(com.fasterxml.jackson.core.SerializableString)
  name: GeneratorBase.writeRawValue(SerializableString)
  nameWithType: GeneratorBase.writeRawValue(SerializableString)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(com.fasterxml.jackson.core.SerializableString)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeStartObject(java.lang.Object,int)
  name: JsonGenerator.writeStartObject(Object,int)
  nameWithType: JsonGenerator.writeStartObject(Object,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeStartObject(java.lang.Object,int)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.disable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  name: GeneratorBase.disable(JsonGenerator.Feature)
  nameWithType: GeneratorBase.disable(JsonGenerator.Feature)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.disable(com.fasterxml.jackson.core.JsonGenerator.Feature)
- uid: com.fasterxml.jackson.core.JsonGenerator.getPrettyPrinter()
  name: JsonGenerator.getPrettyPrinter()
  nameWithType: JsonGenerator.getPrettyPrinter()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getPrettyPrinter()
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String)
  name: GeneratorBase.writeRawValue(String)
  nameWithType: GeneratorBase.writeRawValue(String)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator._reportUnsupportedOperation()
  name: JsonGenerator._reportUnsupportedOperation()
  nameWithType: JsonGenerator._reportUnsupportedOperation()
  fullName: com.fasterxml.jackson.core.JsonGenerator._reportUnsupportedOperation()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeStartArray(int)
  name: JsonGenerator.writeStartArray(int)
  nameWithType: JsonGenerator.writeStartArray(int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeStartArray(int)
- uid: com.fasterxml.jackson.core.JsonGenerator.canWriteTypeId()
  name: JsonGenerator.canWriteTypeId()
  nameWithType: JsonGenerator.canWriteTypeId()
  fullName: com.fasterxml.jackson.core.JsonGenerator.canWriteTypeId()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigDecimal)
  name: JsonGenerator.writeNumber(BigDecimal)
  nameWithType: JsonGenerator.writeNumber(BigDecimal)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigDecimal)
- uid: com.fasterxml.jackson.core.JsonGenerator.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
  name: JsonGenerator.copyCurrentStructure(JsonParser)
  nameWithType: JsonGenerator.copyCurrentStructure(JsonParser)
  fullName: com.fasterxml.jackson.core.JsonGenerator.copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
- uid: com.fasterxml.jackson.core.base.GeneratorBase._verifyValueWrite(java.lang.String)
  name: GeneratorBase._verifyValueWrite(String)
  nameWithType: GeneratorBase._verifyValueWrite(String)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._verifyValueWrite(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator.canWriteObjectId()
  name: JsonGenerator.canWriteObjectId()
  nameWithType: JsonGenerator.canWriteObjectId()
  fullName: com.fasterxml.jackson.core.JsonGenerator.canWriteObjectId()
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String,int,int)
  name: GeneratorBase.writeRawValue(String,int,int)
  nameWithType: GeneratorBase.writeRawValue(String,int,int)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(java.lang.String,int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.getOutputBuffered()
  name: JsonGenerator.getOutputBuffered()
  nameWithType: JsonGenerator.getOutputBuffered()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getOutputBuffered()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeObjectRef(java.lang.Object)
  name: JsonGenerator.writeObjectRef(Object)
  nameWithType: JsonGenerator.writeObjectRef(Object)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeObjectRef(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonGenerator.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)
  name: JsonGenerator.setRootValueSeparator(SerializableString)
  nameWithType: JsonGenerator.setRootValueSeparator(SerializableString)
  fullName: com.fasterxml.jackson.core.JsonGenerator.setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeObjectId(java.lang.Object)
  name: JsonGenerator.writeObjectId(Object)
  nameWithType: JsonGenerator.writeObjectId(Object)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeObjectId(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeArray(int[],int,int)
  name: JsonGenerator.writeArray(int[],int,int)
  nameWithType: JsonGenerator.writeArray(int[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeArray(int[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.configure(com.fasterxml.jackson.core.JsonGenerator.Feature,boolean)
  name: JsonGenerator.configure(JsonGenerator.Feature,boolean)
  nameWithType: JsonGenerator.configure(JsonGenerator.Feature,boolean)
  fullName: com.fasterxml.jackson.core.JsonGenerator.configure(com.fasterxml.jackson.core.JsonGenerator.Feature,boolean)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeEndArray()
  name: JsonGenerator.writeEndArray()
  nameWithType: JsonGenerator.writeEndArray()
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeEndArray()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeUTF8String(byte[],int,int)
  name: JsonGenerator.writeUTF8String(byte[],int,int)
  nameWithType: JsonGenerator.writeUTF8String(byte[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeUTF8String(byte[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeBoolean(boolean)
  name: JsonGenerator.writeBoolean(boolean)
  nameWithType: JsonGenerator.writeBoolean(boolean)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeBoolean(boolean)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)
  name: JsonGenerator.writeRaw(SerializableString)
  nameWithType: JsonGenerator.writeRaw(SerializableString)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeRaw(com.fasterxml.jackson.core.SerializableString)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.setCurrentValue(java.lang.Object)
  name: GeneratorBase.setCurrentValue(Object)
  nameWithType: GeneratorBase.setCurrentValue(Object)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.setCurrentValue(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeTypeId(java.lang.Object)
  name: JsonGenerator.writeTypeId(Object)
  nameWithType: JsonGenerator.writeTypeId(Object)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeTypeId(java.lang.Object)
- uid: com.fasterxml.jackson.core.base.GeneratorBase._asString(java.math.BigDecimal)
  name: GeneratorBase._asString(BigDecimal)
  nameWithType: GeneratorBase._asString(BigDecimal)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._asString(java.math.BigDecimal)
- uid: com.fasterxml.jackson.core.JsonGenerator.getHighestEscapedChar()
  name: JsonGenerator.getHighestEscapedChar()
  nameWithType: JsonGenerator.getHighestEscapedChar()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getHighestEscapedChar()
- uid: com.fasterxml.jackson.core.base.GeneratorBase.overrideStdFeatures(int,int)
  name: GeneratorBase.overrideStdFeatures(int,int)
  nameWithType: GeneratorBase.overrideStdFeatures(int,int)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.overrideStdFeatures(int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[],int,int)
  name: JsonGenerator.writeBinary(byte[],int,int)
  nameWithType: JsonGenerator.writeBinary(byte[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[],int,int)
- uid: com.fasterxml.jackson.core.base.GeneratorBase._releaseBuffers()
  name: GeneratorBase._releaseBuffers()
  nameWithType: GeneratorBase._releaseBuffers()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._releaseBuffers()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeObjectFieldStart(java.lang.String)
  name: JsonGenerator.writeObjectFieldStart(String)
  nameWithType: JsonGenerator.writeObjectFieldStart(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeObjectFieldStart(java.lang.String)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(com.fasterxml.jackson.core.SerializableString)
  name: GeneratorBase.writeFieldName(SerializableString)
  nameWithType: GeneratorBase.writeFieldName(SerializableString)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(com.fasterxml.jackson.core.SerializableString)
- uid: com.fasterxml.jackson.core.JsonGenerator._throwInternal()
  name: JsonGenerator._throwInternal()
  nameWithType: JsonGenerator._throwInternal()
  fullName: com.fasterxml.jackson.core.JsonGenerator._throwInternal()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeRaw(char[],int,int)
  name: JsonGenerator.writeRaw(char[],int,int)
  nameWithType: JsonGenerator.writeRaw(char[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeRaw(char[],int,int)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeObject(java.lang.Object)
  name: GeneratorBase.writeObject(Object)
  nameWithType: GeneratorBase.writeObject(Object)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeObject(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonGenerator.getCharacterEscapes()
  name: JsonGenerator.getCharacterEscapes()
  nameWithType: JsonGenerator.getCharacterEscapes()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getCharacterEscapes()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeStartArray()
  name: JsonGenerator.writeStartArray()
  nameWithType: JsonGenerator.writeStartArray()
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeStartArray()
- uid: com.fasterxml.jackson.core.JsonGenerator.getOutputTarget()
  name: JsonGenerator.getOutputTarget()
  nameWithType: JsonGenerator.getOutputTarget()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getOutputTarget()
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeStartObject(java.lang.Object)
  name: GeneratorBase.writeStartObject(Object)
  nameWithType: GeneratorBase.writeStartObject(Object)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeStartObject(java.lang.Object)
- uid: com.fasterxml.jackson.core.base.GeneratorBase._constructDefaultPrettyPrinter()
  name: GeneratorBase._constructDefaultPrettyPrinter()
  nameWithType: GeneratorBase._constructDefaultPrettyPrinter()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._constructDefaultPrettyPrinter()
- uid: com.fasterxml.jackson.core.base.GeneratorBase.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  name: GeneratorBase.isEnabled(JsonGenerator.Feature)
  nameWithType: GeneratorBase.isEnabled(JsonGenerator.Feature)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeBinaryField(java.lang.String,byte[])
  name: JsonGenerator.writeBinaryField(String,byte[])
  nameWithType: JsonGenerator.writeBinaryField(String,byte[])
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeBinaryField(java.lang.String,byte[])
- uid: com.fasterxml.jackson.core.JsonGenerator.writeStartArray(java.lang.Object,int)
  name: JsonGenerator.writeStartArray(Object,int)
  nameWithType: JsonGenerator.writeStartArray(Object,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeStartArray(java.lang.Object,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.lang.String)
  name: JsonGenerator.writeNumber(String)
  nameWithType: JsonGenerator.writeNumber(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(char[],int,int)
  name: JsonGenerator.writeNumber(char[],int,int)
  nameWithType: JsonGenerator.writeNumber(char[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(char[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)
  name: JsonGenerator.writeRaw(char)
  nameWithType: JsonGenerator.writeRaw(char)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeRaw(char)
- uid: com.fasterxml.jackson.core.base.GeneratorBase._decodeSurrogate(int,int)
  name: GeneratorBase._decodeSurrogate(int,int)
  nameWithType: GeneratorBase._decodeSurrogate(int,int)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._decodeSurrogate(int,int)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.close()
  name: GeneratorBase.close()
  nameWithType: GeneratorBase.close()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.close()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(long)
  name: JsonGenerator.writeNumber(long)
  nameWithType: JsonGenerator.writeNumber(long)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(long)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(float)
  name: JsonGenerator.writeNumber(float)
  nameWithType: JsonGenerator.writeNumber(float)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(float)
- uid: com.fasterxml.jackson.core.JsonGenerator.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)
  name: JsonGenerator.setCharacterEscapes(CharacterEscapes)
  nameWithType: JsonGenerator.setCharacterEscapes(CharacterEscapes)
  fullName: com.fasterxml.jackson.core.JsonGenerator.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeTree(com.fasterxml.jackson.core.TreeNode)
  name: GeneratorBase.writeTree(TreeNode)
  nameWithType: GeneratorBase.writeTree(TreeNode)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeTree(com.fasterxml.jackson.core.TreeNode)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigInteger)
  name: JsonGenerator.writeNumber(BigInteger)
  nameWithType: JsonGenerator.writeNumber(BigInteger)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(java.math.BigInteger)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String)
  name: JsonGenerator.writeRaw(String)
  nameWithType: JsonGenerator.writeRaw(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeRawUTF8String(byte[],int,int)
  name: JsonGenerator.writeRawUTF8String(byte[],int,int)
  nameWithType: JsonGenerator.writeRawUTF8String(byte[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeRawUTF8String(byte[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.canWriteFormattedNumbers()
  name: JsonGenerator.canWriteFormattedNumbers()
  nameWithType: JsonGenerator.canWriteFormattedNumbers()
  fullName: com.fasterxml.jackson.core.JsonGenerator.canWriteFormattedNumbers()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeArray(long[],int,int)
  name: JsonGenerator.writeArray(long[],int,int)
  nameWithType: JsonGenerator.writeArray(long[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeArray(long[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator._reportError(java.lang.String)
  name: JsonGenerator._reportError(String)
  nameWithType: JsonGenerator._reportError(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator._reportError(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeStringField(java.lang.String,java.lang.String)
  name: JsonGenerator.writeStringField(String,String)
  nameWithType: JsonGenerator.writeStringField(String,String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeStringField(java.lang.String,java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeTypePrefix(com.fasterxml.jackson.core.type.WritableTypeId)
  name: JsonGenerator.writeTypePrefix(WritableTypeId)
  nameWithType: JsonGenerator.writeTypePrefix(WritableTypeId)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeTypePrefix(com.fasterxml.jackson.core.type.WritableTypeId)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(short)
  name: JsonGenerator.writeNumber(short)
  nameWithType: JsonGenerator.writeNumber(short)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(short)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeTypeSuffix(com.fasterxml.jackson.core.type.WritableTypeId)
  name: JsonGenerator.writeTypeSuffix(WritableTypeId)
  nameWithType: JsonGenerator.writeTypeSuffix(WritableTypeId)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeTypeSuffix(com.fasterxml.jackson.core.type.WritableTypeId)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeString(java.lang.String)
  name: JsonGenerator.writeString(String)
  nameWithType: JsonGenerator.writeString(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeString(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
  name: JsonGenerator.canUseSchema(FormatSchema)
  nameWithType: JsonGenerator.canUseSchema(FormatSchema)
  fullName: com.fasterxml.jackson.core.JsonGenerator.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.setFeatureMask(int)
  name: GeneratorBase.setFeatureMask(int)
  nameWithType: GeneratorBase.setFeatureMask(int)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.setFeatureMask(int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeBooleanField(java.lang.String,boolean)
  name: JsonGenerator.writeBooleanField(String,boolean)
  nameWithType: JsonGenerator.writeBooleanField(String,boolean)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeBooleanField(java.lang.String,boolean)
- uid: com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)
  name: JsonGenerator.setSchema(FormatSchema)
  nameWithType: JsonGenerator.setSchema(FormatSchema)
  fullName: com.fasterxml.jackson.core.JsonGenerator.setSchema(com.fasterxml.jackson.core.FormatSchema)
- uid: com.fasterxml.jackson.core.base.GeneratorBase._checkStdFeatureChanges(int,int)
  name: GeneratorBase._checkStdFeatureChanges(int,int)
  nameWithType: GeneratorBase._checkStdFeatureChanges(int,int)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase._checkStdFeatureChanges(int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeArray(java.lang.String[],int,int)
  name: JsonGenerator.writeArray(String[],int,int)
  nameWithType: JsonGenerator.writeArray(String[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeArray(java.lang.String[],int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,long)
  name: JsonGenerator.writeNumberField(String,long)
  nameWithType: JsonGenerator.writeNumberField(String,long)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,long)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNullField(java.lang.String)
  name: JsonGenerator.writeNullField(String)
  nameWithType: JsonGenerator.writeNullField(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNullField(java.lang.String)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.enable(com.fasterxml.jackson.core.JsonGenerator.Feature)
  name: GeneratorBase.enable(JsonGenerator.Feature)
  nameWithType: GeneratorBase.enable(JsonGenerator.Feature)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.enable(com.fasterxml.jackson.core.JsonGenerator.Feature)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.isClosed()
  name: GeneratorBase.isClosed()
  nameWithType: GeneratorBase.isClosed()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.isClosed()
- uid: com.fasterxml.jackson.core.base.GeneratorBase.getCurrentValue()
  name: GeneratorBase.getCurrentValue()
  nameWithType: GeneratorBase.getCurrentValue()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.getCurrentValue()
- uid: com.fasterxml.jackson.core.JsonGenerator.setHighestNonEscapedChar(int)
  name: JsonGenerator.setHighestNonEscapedChar(int)
  nameWithType: JsonGenerator.setHighestNonEscapedChar(int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.setHighestNonEscapedChar(int)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.getOutputContext()
  name: GeneratorBase.getOutputContext()
  nameWithType: GeneratorBase.getOutputContext()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.getOutputContext()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeStartArray(java.lang.Object)
  name: JsonGenerator.writeStartArray(Object)
  nameWithType: JsonGenerator.writeStartArray(Object)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeStartArray(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String,int,int)
  name: JsonGenerator.writeRaw(String,int,int)
  nameWithType: JsonGenerator.writeRaw(String,int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeRaw(java.lang.String,int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator._verifyOffsets(int,int,int)
  name: JsonGenerator._verifyOffsets(int,int,int)
  nameWithType: JsonGenerator._verifyOffsets(int,int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator._verifyOffsets(int,int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeEmbeddedObject(java.lang.Object)
  name: JsonGenerator.writeEmbeddedObject(Object)
  nameWithType: JsonGenerator.writeEmbeddedObject(Object)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeEmbeddedObject(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,float)
  name: JsonGenerator.writeNumberField(String,float)
  nameWithType: JsonGenerator.writeNumberField(String,float)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,float)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  name: GeneratorBase.setCodec(ObjectCodec)
  nameWithType: GeneratorBase.setCodec(ObjectCodec)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.setCodec(com.fasterxml.jackson.core.ObjectCodec)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeString(java.io.Reader,int)
  name: JsonGenerator.writeString(Reader,int)
  nameWithType: JsonGenerator.writeString(Reader,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeString(java.io.Reader,int)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(char[],int,int)
  name: GeneratorBase.writeRawValue(char[],int,int)
  nameWithType: GeneratorBase.writeRawValue(char[],int,int)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(char[],int,int)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.core.JsonGenerator.canOmitFields()
  name: JsonGenerator.canOmitFields()
  nameWithType: JsonGenerator.canOmitFields()
  fullName: com.fasterxml.jackson.core.JsonGenerator.canOmitFields()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)
  name: JsonGenerator.writeBinary(Base64Variant,byte[],int,int)
  nameWithType: JsonGenerator.writeBinary(Base64Variant,byte[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.version()
  name: GeneratorBase.version()
  nameWithType: GeneratorBase.version()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.version()
- uid: com.fasterxml.jackson.core.JsonGenerator.canWriteBinaryNatively()
  name: JsonGenerator.canWriteBinaryNatively()
  nameWithType: JsonGenerator.canWriteBinaryNatively()
  fullName: com.fasterxml.jackson.core.JsonGenerator.canWriteBinaryNatively()
- uid: com.fasterxml.jackson.core.JsonGenerator.getFormatFeatures()
  name: JsonGenerator.getFormatFeatures()
  nameWithType: JsonGenerator.getFormatFeatures()
  fullName: com.fasterxml.jackson.core.JsonGenerator.getFormatFeatures()
- uid: com.fasterxml.jackson.core.JsonGenerator.overrideFormatFeatures(int,int)
  name: JsonGenerator.overrideFormatFeatures(int,int)
  nameWithType: JsonGenerator.overrideFormatFeatures(int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.overrideFormatFeatures(int,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)
  name: JsonGenerator.setPrettyPrinter(PrettyPrinter)
  nameWithType: JsonGenerator.setPrettyPrinter(PrettyPrinter)
  fullName: com.fasterxml.jackson.core.JsonGenerator.setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)
- uid: com.fasterxml.jackson.core.JsonGenerator._writeSimpleObject(java.lang.Object)
  name: JsonGenerator._writeSimpleObject(Object)
  nameWithType: JsonGenerator._writeSimpleObject(Object)
  fullName: com.fasterxml.jackson.core.JsonGenerator._writeSimpleObject(java.lang.Object)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.useDefaultPrettyPrinter()
  name: GeneratorBase.useDefaultPrettyPrinter()
  nameWithType: GeneratorBase.useDefaultPrettyPrinter()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.useDefaultPrettyPrinter()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,int)
  name: JsonGenerator.writeNumberField(String,int)
  nameWithType: JsonGenerator.writeNumberField(String,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,int)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.writeString(com.fasterxml.jackson.core.SerializableString)
  name: GeneratorBase.writeString(SerializableString)
  nameWithType: GeneratorBase.writeString(SerializableString)
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.writeString(com.fasterxml.jackson.core.SerializableString)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumber(int)
  name: JsonGenerator.writeNumber(int)
  nameWithType: JsonGenerator.writeNumber(int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumber(int)
- uid: com.fasterxml.jackson.core.JsonGenerator._copyCurrentContents(com.fasterxml.jackson.core.JsonParser)
  name: JsonGenerator._copyCurrentContents(JsonParser)
  nameWithType: JsonGenerator._copyCurrentContents(JsonParser)
  fullName: com.fasterxml.jackson.core.JsonGenerator._copyCurrentContents(com.fasterxml.jackson.core.JsonParser)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeOmittedField(java.lang.String)
  name: JsonGenerator.writeOmittedField(String)
  nameWithType: JsonGenerator.writeOmittedField(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeOmittedField(java.lang.String)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.getCodec()
  name: GeneratorBase.getCodec()
  nameWithType: GeneratorBase.getCodec()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.getCodec()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeFieldId(long)
  name: JsonGenerator.writeFieldId(long)
  nameWithType: JsonGenerator.writeFieldId(long)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeFieldId(long)
- uid: com.fasterxml.jackson.core.base.GeneratorBase.flush()
  name: GeneratorBase.flush()
  nameWithType: GeneratorBase.flush()
  fullName: com.fasterxml.jackson.core.base.GeneratorBase.flush()
- uid: com.fasterxml.jackson.core.JsonGenerator.writeBinary(java.io.InputStream,int)
  name: JsonGenerator.writeBinary(InputStream,int)
  nameWithType: JsonGenerator.writeBinary(InputStream,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeBinary(java.io.InputStream,int)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,java.math.BigInteger)
  name: JsonGenerator.writeNumberField(String,BigInteger)
  nameWithType: JsonGenerator.writeNumberField(String,BigInteger)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,java.math.BigInteger)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,java.math.BigDecimal)
  name: JsonGenerator.writeNumberField(String,BigDecimal)
  nameWithType: JsonGenerator.writeNumberField(String,BigDecimal)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,java.math.BigDecimal)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,double)
  name: JsonGenerator.writeNumberField(String,double)
  nameWithType: JsonGenerator.writeNumberField(String,double)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,double)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,short)
  name: JsonGenerator.writeNumberField(String,short)
  nameWithType: JsonGenerator.writeNumberField(String,short)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,short)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)
  name: JsonGenerator.writeFieldName(String)
  nameWithType: JsonGenerator.writeFieldName(String)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonGenerator.writeString(char[],int,int)
  name: JsonGenerator.writeString(char[],int,int)
  nameWithType: JsonGenerator.writeString(char[],int,int)
  fullName: com.fasterxml.jackson.core.JsonGenerator.writeString(char[],int,int)
