### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.JsonFactory._createGenerator*"
fullName: "com.fasterxml.jackson.core.JsonFactory._createGenerator"
name: "_createGenerator"
nameWithType: "JsonFactory._createGenerator"
members:
- uid: "com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)"
  fullName: "com.fasterxml.jackson.core.JsonFactory._createGenerator(Writer out, IOContext ctxt)"
  name: "_createGenerator(Writer out, IOContext ctxt)"
  nameWithType: "JsonFactory._createGenerator(Writer out, IOContext ctxt)"
  summary: "Overridable factory method that actually instantiates generator for given <xref uid=\"java.io.Writer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Writer\"></xref> and context object.\n\nThis method is specifically designed to remain compatible between minor versions so that sub-classes can count on it being called as expected. That is, it is part of official interface from sub-class perspective, although not a public method available to users of factory implementations."
  parameters:
  - name: "out"
    type: "<xref href=\"java.io.Writer?alt=java.io.Writer&text=Writer\" data-throw-if-not-resolved=\"False\" />"
  - name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.core.io.IOContext?alt=com.fasterxml.jackson.core.io.IOContext&text=IOContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected JsonGenerator _createGenerator(Writer out, IOContext ctxt)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
