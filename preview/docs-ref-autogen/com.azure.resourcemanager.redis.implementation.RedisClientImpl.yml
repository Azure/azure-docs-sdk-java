### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  id: RedisClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation
  children:
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginCreateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginDelete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginDeleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginExportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginExportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginExportDataAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginImportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginImportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginImportDataAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailability(com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityAsync(com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityWithResponse(com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityWithResponseAsync(com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.create(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.create(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.delete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.deleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportDataAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportDataWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceReboot(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisRebootParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisRebootParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisRebootParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisRebootParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroup(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.importData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.importData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.importDataAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.importDataWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.list()
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.list(com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.listAsync()
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.listByResourceGroup(java.lang.String)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.listByResourceGroupAsync(java.lang.String)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeys(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotifications(java.lang.String,java.lang.String,double)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsAsync(java.lang.String,java.lang.String,double)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsWithResponse(java.lang.String,java.lang.String,double,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsWithResponseAsync(java.lang.String,java.lang.String,double)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKey(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisKeyType)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisKeyType)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisKeyType,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisKeyType)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisUpdateParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisUpdateParameters)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisUpdateParameters)
  langs:
  - java
  name: RedisClientImpl
  nameWithType: RedisClientImpl
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  type: Class
  package: com.azure.resourcemanager.redis.implementation
  summary: An instance of this class provides access to all the operations defined in RedisClient.
  syntax:
    content: public final class RedisClientImpl implements InnerSupportsGet<RedisResourceInner>, InnerSupportsListing<RedisResourceInner>, InnerSupportsDelete<Void>, RedisClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  - com.azure.resourcemanager.redis.fluent.RedisClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.RedisClientImpl(com.azure.resourcemanager.redis.implementation.RedisManagementClientImpl)
  id: RedisClientImpl(com.azure.resourcemanager.redis.implementation.RedisManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: RedisClientImpl(RedisManagementClientImpl client)
  nameWithType: RedisClientImpl.RedisClientImpl(RedisManagementClientImpl client)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.RedisClientImpl(RedisManagementClientImpl client)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.RedisClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.redis.implementation
  summary: Initializes an instance of RedisClientImpl.
  syntax:
    content: " RedisClientImpl(RedisManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.redis.implementation.RedisManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters)
  id: beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: beginCreate(String resourceGroupName, String name, RedisCreateParameters parameters)
  nameWithType: RedisClientImpl.beginCreate(String resourceGroupName, String name, RedisCreateParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginCreate(String resourceGroupName, String name, RedisCreateParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginCreate*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Create or replace (overwrite/recreate, with potential downtime) an existing Redis cache.
  syntax:
    content: public SyncPoller<PollResult<RedisResourceInner>,RedisResourceInner> beginCreate(String resourceGroupName, String name, RedisCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: Parameters supplied to the Create Redis operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>,com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
      description: a single Redis item in List or Get Operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters,com.azure.core.util.Context)
  id: beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: beginCreate(String resourceGroupName, String name, RedisCreateParameters parameters, Context context)
  nameWithType: RedisClientImpl.beginCreate(String resourceGroupName, String name, RedisCreateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginCreate(String resourceGroupName, String name, RedisCreateParameters parameters, Context context)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginCreate*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Create or replace (overwrite/recreate, with potential downtime) an existing Redis cache.
  syntax:
    content: public SyncPoller<PollResult<RedisResourceInner>,RedisResourceInner> beginCreate(String resourceGroupName, String name, RedisCreateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: Parameters supplied to the Create Redis operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>,com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
      description: a single Redis item in List or Get Operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginCreateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters)
  id: beginCreateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: beginCreateAsync(String resourceGroupName, String name, RedisCreateParameters parameters)
  nameWithType: RedisClientImpl.beginCreateAsync(String resourceGroupName, String name, RedisCreateParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginCreateAsync(String resourceGroupName, String name, RedisCreateParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginCreateAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Create or replace (overwrite/recreate, with potential downtime) an existing Redis cache.
  syntax:
    content: public PollerFlux<PollResult<RedisResourceInner>,RedisResourceInner> beginCreateAsync(String resourceGroupName, String name, RedisCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: Parameters supplied to the Create Redis operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>,com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
      description: a single Redis item in List or Get Operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginDelete(java.lang.String,java.lang.String)
  id: beginDelete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: beginDelete(String resourceGroupName, String name)
  nameWithType: RedisClientImpl.beginDelete(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginDelete(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginDelete*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Deletes a Redis cache.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: beginDelete(String resourceGroupName, String name, Context context)
  nameWithType: RedisClientImpl.beginDelete(String resourceGroupName, String name, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginDelete(String resourceGroupName, String name, Context context)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginDelete*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Deletes a Redis cache.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String name, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginDeleteAsync(java.lang.String,java.lang.String)
  id: beginDeleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: beginDeleteAsync(String resourceGroupName, String name)
  nameWithType: RedisClientImpl.beginDeleteAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginDeleteAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginDeleteAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Deletes a Redis cache.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginExportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters)
  id: beginExportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: beginExportData(String resourceGroupName, String name, ExportRdbParameters parameters)
  nameWithType: RedisClientImpl.beginExportData(String resourceGroupName, String name, ExportRdbParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginExportData(String resourceGroupName, String name, ExportRdbParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginExportData*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Export data from the redis cache to blobs in a container.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginExportData(String resourceGroupName, String name, ExportRdbParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.ExportRdbParameters
      description: Parameters for Redis export operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginExportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters,com.azure.core.util.Context)
  id: beginExportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: beginExportData(String resourceGroupName, String name, ExportRdbParameters parameters, Context context)
  nameWithType: RedisClientImpl.beginExportData(String resourceGroupName, String name, ExportRdbParameters parameters, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginExportData(String resourceGroupName, String name, ExportRdbParameters parameters, Context context)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginExportData*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Export data from the redis cache to blobs in a container.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginExportData(String resourceGroupName, String name, ExportRdbParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.ExportRdbParameters
      description: Parameters for Redis export operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginExportDataAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters)
  id: beginExportDataAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: beginExportDataAsync(String resourceGroupName, String name, ExportRdbParameters parameters)
  nameWithType: RedisClientImpl.beginExportDataAsync(String resourceGroupName, String name, ExportRdbParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginExportDataAsync(String resourceGroupName, String name, ExportRdbParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginExportDataAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Export data from the redis cache to blobs in a container.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginExportDataAsync(String resourceGroupName, String name, ExportRdbParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.ExportRdbParameters
      description: Parameters for Redis export operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginImportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters)
  id: beginImportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: beginImportData(String resourceGroupName, String name, ImportRdbParameters parameters)
  nameWithType: RedisClientImpl.beginImportData(String resourceGroupName, String name, ImportRdbParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginImportData(String resourceGroupName, String name, ImportRdbParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginImportData*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Import data into Redis cache.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginImportData(String resourceGroupName, String name, ImportRdbParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.ImportRdbParameters
      description: Parameters for Redis import operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginImportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters,com.azure.core.util.Context)
  id: beginImportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: beginImportData(String resourceGroupName, String name, ImportRdbParameters parameters, Context context)
  nameWithType: RedisClientImpl.beginImportData(String resourceGroupName, String name, ImportRdbParameters parameters, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginImportData(String resourceGroupName, String name, ImportRdbParameters parameters, Context context)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginImportData*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Import data into Redis cache.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginImportData(String resourceGroupName, String name, ImportRdbParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.ImportRdbParameters
      description: Parameters for Redis import operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginImportDataAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters)
  id: beginImportDataAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: beginImportDataAsync(String resourceGroupName, String name, ImportRdbParameters parameters)
  nameWithType: RedisClientImpl.beginImportDataAsync(String resourceGroupName, String name, ImportRdbParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginImportDataAsync(String resourceGroupName, String name, ImportRdbParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginImportDataAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Import data into Redis cache.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginImportDataAsync(String resourceGroupName, String name, ImportRdbParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.ImportRdbParameters
      description: Parameters for Redis import operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailability(com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters)
  id: checkNameAvailability(com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: checkNameAvailability(CheckNameAvailabilityParameters parameters)
  nameWithType: RedisClientImpl.checkNameAvailability(CheckNameAvailabilityParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailability(CheckNameAvailabilityParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailability*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Checks that the redis cache name is valid and is not already in use.
  syntax:
    content: public void checkNameAvailability(CheckNameAvailabilityParameters parameters)
    parameters:
    - id: parameters
      type: com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters
      description: Parameters body to pass for resource name availability check.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityAsync(com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters)
  id: checkNameAvailabilityAsync(com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: checkNameAvailabilityAsync(CheckNameAvailabilityParameters parameters)
  nameWithType: RedisClientImpl.checkNameAvailabilityAsync(CheckNameAvailabilityParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityAsync(CheckNameAvailabilityParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Checks that the redis cache name is valid and is not already in use.
  syntax:
    content: public Mono<Void> checkNameAvailabilityAsync(CheckNameAvailabilityParameters parameters)
    parameters:
    - id: parameters
      type: com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters
      description: Parameters body to pass for resource name availability check.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityWithResponse(com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters,com.azure.core.util.Context)
  id: checkNameAvailabilityWithResponse(com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: checkNameAvailabilityWithResponse(CheckNameAvailabilityParameters parameters, Context context)
  nameWithType: RedisClientImpl.checkNameAvailabilityWithResponse(CheckNameAvailabilityParameters parameters, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityWithResponse(CheckNameAvailabilityParameters parameters, Context context)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityWithResponse*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Checks that the redis cache name is valid and is not already in use.
  syntax:
    content: public Response<Void> checkNameAvailabilityWithResponse(CheckNameAvailabilityParameters parameters, Context context)
    parameters:
    - id: parameters
      type: com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters
      description: Parameters body to pass for resource name availability check.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityWithResponseAsync(com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters)
  id: checkNameAvailabilityWithResponseAsync(com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: checkNameAvailabilityWithResponseAsync(CheckNameAvailabilityParameters parameters)
  nameWithType: RedisClientImpl.checkNameAvailabilityWithResponseAsync(CheckNameAvailabilityParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityWithResponseAsync(CheckNameAvailabilityParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Checks that the redis cache name is valid and is not already in use.
  syntax:
    content: public Mono<Response<Void>> checkNameAvailabilityWithResponseAsync(CheckNameAvailabilityParameters parameters)
    parameters:
    - id: parameters
      type: com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters
      description: Parameters body to pass for resource name availability check.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.create(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters)
  id: create(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: create(String resourceGroupName, String name, RedisCreateParameters parameters)
  nameWithType: RedisClientImpl.create(String resourceGroupName, String name, RedisCreateParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.create(String resourceGroupName, String name, RedisCreateParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.create*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Create or replace (overwrite/recreate, with potential downtime) an existing Redis cache.
  syntax:
    content: public RedisResourceInner create(String resourceGroupName, String name, RedisCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: Parameters supplied to the Create Redis operation.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
      description: a single Redis item in List or Get Operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.create(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters,com.azure.core.util.Context)
  id: create(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: create(String resourceGroupName, String name, RedisCreateParameters parameters, Context context)
  nameWithType: RedisClientImpl.create(String resourceGroupName, String name, RedisCreateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.create(String resourceGroupName, String name, RedisCreateParameters parameters, Context context)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.create*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Create or replace (overwrite/recreate, with potential downtime) an existing Redis cache.
  syntax:
    content: public RedisResourceInner create(String resourceGroupName, String name, RedisCreateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: Parameters supplied to the Create Redis operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
      description: a single Redis item in List or Get Operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters)
  id: createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: createAsync(String resourceGroupName, String name, RedisCreateParameters parameters)
  nameWithType: RedisClientImpl.createAsync(String resourceGroupName, String name, RedisCreateParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.createAsync(String resourceGroupName, String name, RedisCreateParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.createAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Create or replace (overwrite/recreate, with potential downtime) an existing Redis cache.
  syntax:
    content: public Mono<RedisResourceInner> createAsync(String resourceGroupName, String name, RedisCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: Parameters supplied to the Create Redis operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
      description: a single Redis item in List or Get Operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters)
  id: createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: createWithResponseAsync(String resourceGroupName, String name, RedisCreateParameters parameters)
  nameWithType: RedisClientImpl.createWithResponseAsync(String resourceGroupName, String name, RedisCreateParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.createWithResponseAsync(String resourceGroupName, String name, RedisCreateParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.createWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Create or replace (overwrite/recreate, with potential downtime) an existing Redis cache.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createWithResponseAsync(String resourceGroupName, String name, RedisCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisCreateParameters
      description: Parameters supplied to the Create Redis operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: a single Redis item in List or Get Operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String name)
  nameWithType: RedisClientImpl.delete(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.delete(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Deletes a Redis cache.
  syntax:
    content: public void delete(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String name, Context context)
  nameWithType: RedisClientImpl.delete(String resourceGroupName, String name, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.delete(String resourceGroupName, String name, Context context)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Deletes a Redis cache.
  syntax:
    content: public void delete(String resourceGroupName, String name, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String name)
  nameWithType: RedisClientImpl.deleteAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.deleteAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Deletes a Redis cache.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String name)
  nameWithType: RedisClientImpl.deleteWithResponseAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.deleteWithResponseAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Deletes a Redis cache.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters)
  id: exportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: exportData(String resourceGroupName, String name, ExportRdbParameters parameters)
  nameWithType: RedisClientImpl.exportData(String resourceGroupName, String name, ExportRdbParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportData(String resourceGroupName, String name, ExportRdbParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportData*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Export data from the redis cache to blobs in a container.
  syntax:
    content: public void exportData(String resourceGroupName, String name, ExportRdbParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.ExportRdbParameters
      description: Parameters for Redis export operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters,com.azure.core.util.Context)
  id: exportData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: exportData(String resourceGroupName, String name, ExportRdbParameters parameters, Context context)
  nameWithType: RedisClientImpl.exportData(String resourceGroupName, String name, ExportRdbParameters parameters, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportData(String resourceGroupName, String name, ExportRdbParameters parameters, Context context)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportData*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Export data from the redis cache to blobs in a container.
  syntax:
    content: public void exportData(String resourceGroupName, String name, ExportRdbParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.ExportRdbParameters
      description: Parameters for Redis export operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportDataAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters)
  id: exportDataAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: exportDataAsync(String resourceGroupName, String name, ExportRdbParameters parameters)
  nameWithType: RedisClientImpl.exportDataAsync(String resourceGroupName, String name, ExportRdbParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportDataAsync(String resourceGroupName, String name, ExportRdbParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportDataAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Export data from the redis cache to blobs in a container.
  syntax:
    content: public Mono<Void> exportDataAsync(String resourceGroupName, String name, ExportRdbParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.ExportRdbParameters
      description: Parameters for Redis export operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportDataWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters)
  id: exportDataWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ExportRdbParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: exportDataWithResponseAsync(String resourceGroupName, String name, ExportRdbParameters parameters)
  nameWithType: RedisClientImpl.exportDataWithResponseAsync(String resourceGroupName, String name, ExportRdbParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportDataWithResponseAsync(String resourceGroupName, String name, ExportRdbParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportDataWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Export data from the redis cache to blobs in a container.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> exportDataWithResponseAsync(String resourceGroupName, String name, ExportRdbParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.ExportRdbParameters
      description: Parameters for Redis export operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceReboot(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisRebootParameters)
  id: forceReboot(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisRebootParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: forceReboot(String resourceGroupName, String name, RedisRebootParameters parameters)
  nameWithType: RedisClientImpl.forceReboot(String resourceGroupName, String name, RedisRebootParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceReboot(String resourceGroupName, String name, RedisRebootParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceReboot*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.
  syntax:
    content: public RedisForceRebootResponseInner forceReboot(String resourceGroupName, String name, RedisRebootParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisRebootParameters
      description: Specifies which Redis node(s) to reboot.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisForceRebootResponseInner
      description: response to force reboot for Redis cache.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisRebootParameters)
  id: forceRebootAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisRebootParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: forceRebootAsync(String resourceGroupName, String name, RedisRebootParameters parameters)
  nameWithType: RedisClientImpl.forceRebootAsync(String resourceGroupName, String name, RedisRebootParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootAsync(String resourceGroupName, String name, RedisRebootParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.
  syntax:
    content: public Mono<RedisForceRebootResponseInner> forceRebootAsync(String resourceGroupName, String name, RedisRebootParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisRebootParameters
      description: Specifies which Redis node(s) to reboot.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.redis.fluent.models.RedisForceRebootResponseInner>
      description: response to force reboot for Redis cache.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisRebootParameters,com.azure.core.util.Context)
  id: forceRebootWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisRebootParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: forceRebootWithResponse(String resourceGroupName, String name, RedisRebootParameters parameters, Context context)
  nameWithType: RedisClientImpl.forceRebootWithResponse(String resourceGroupName, String name, RedisRebootParameters parameters, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootWithResponse(String resourceGroupName, String name, RedisRebootParameters parameters, Context context)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootWithResponse*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.
  syntax:
    content: public Response<RedisForceRebootResponseInner> forceRebootWithResponse(String resourceGroupName, String name, RedisRebootParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisRebootParameters
      description: Specifies which Redis node(s) to reboot.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisForceRebootResponseInner>
      description: response to force reboot for Redis cache.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisRebootParameters)
  id: forceRebootWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisRebootParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: forceRebootWithResponseAsync(String resourceGroupName, String name, RedisRebootParameters parameters)
  nameWithType: RedisClientImpl.forceRebootWithResponseAsync(String resourceGroupName, String name, RedisRebootParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootWithResponseAsync(String resourceGroupName, String name, RedisRebootParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.
  syntax:
    content: public Mono<Response<RedisForceRebootResponseInner>> forceRebootWithResponseAsync(String resourceGroupName, String name, RedisRebootParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisRebootParameters
      description: Specifies which Redis node(s) to reboot.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisForceRebootResponseInner>>
      description: response to force reboot for Redis cache.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroup(java.lang.String,java.lang.String)
  id: getByResourceGroup(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String name)
  nameWithType: RedisClientImpl.getByResourceGroup(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroup(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets a Redis cache (resource description).
  syntax:
    content: public RedisResourceInner getByResourceGroup(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
      description: a Redis cache (resource description).
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String name)
  nameWithType: RedisClientImpl.getByResourceGroupAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets a Redis cache (resource description).
  syntax:
    content: public Mono<RedisResourceInner> getByResourceGroupAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
      description: a Redis cache (resource description).
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: getByResourceGroupWithResponse(String resourceGroupName, String name, Context context)
  nameWithType: RedisClientImpl.getByResourceGroupWithResponse(String resourceGroupName, String name, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupWithResponse(String resourceGroupName, String name, Context context)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupWithResponse*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets a Redis cache (resource description).
  syntax:
    content: public Response<RedisResourceInner> getByResourceGroupWithResponse(String resourceGroupName, String name, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
      description: a Redis cache (resource description).
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String name)
  nameWithType: RedisClientImpl.getByResourceGroupWithResponseAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupWithResponseAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets a Redis cache (resource description).
  syntax:
    content: public Mono<Response<RedisResourceInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>>
      description: a Redis cache (resource description).
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters)
  id: importData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: importData(String resourceGroupName, String name, ImportRdbParameters parameters)
  nameWithType: RedisClientImpl.importData(String resourceGroupName, String name, ImportRdbParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importData(String resourceGroupName, String name, ImportRdbParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importData*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Import data into Redis cache.
  syntax:
    content: public void importData(String resourceGroupName, String name, ImportRdbParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.ImportRdbParameters
      description: Parameters for Redis import operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters,com.azure.core.util.Context)
  id: importData(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: importData(String resourceGroupName, String name, ImportRdbParameters parameters, Context context)
  nameWithType: RedisClientImpl.importData(String resourceGroupName, String name, ImportRdbParameters parameters, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importData(String resourceGroupName, String name, ImportRdbParameters parameters, Context context)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importData*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Import data into Redis cache.
  syntax:
    content: public void importData(String resourceGroupName, String name, ImportRdbParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.ImportRdbParameters
      description: Parameters for Redis import operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importDataAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters)
  id: importDataAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: importDataAsync(String resourceGroupName, String name, ImportRdbParameters parameters)
  nameWithType: RedisClientImpl.importDataAsync(String resourceGroupName, String name, ImportRdbParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importDataAsync(String resourceGroupName, String name, ImportRdbParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importDataAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Import data into Redis cache.
  syntax:
    content: public Mono<Void> importDataAsync(String resourceGroupName, String name, ImportRdbParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.ImportRdbParameters
      description: Parameters for Redis import operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importDataWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters)
  id: importDataWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ImportRdbParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: importDataWithResponseAsync(String resourceGroupName, String name, ImportRdbParameters parameters)
  nameWithType: RedisClientImpl.importDataWithResponseAsync(String resourceGroupName, String name, ImportRdbParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importDataWithResponseAsync(String resourceGroupName, String name, ImportRdbParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importDataWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Import data into Redis cache.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> importDataWithResponseAsync(String resourceGroupName, String name, ImportRdbParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.ImportRdbParameters
      description: Parameters for Redis import operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: list()
  nameWithType: RedisClientImpl.list()
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.list()
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets all Redis caches in the specified subscription.
  syntax:
    content: public PagedIterable<RedisResourceInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
      description: all Redis caches in the specified subscription.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.list(com.azure.core.util.Context)
  id: list(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: list(Context context)
  nameWithType: RedisClientImpl.list(Context context)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.list(Context context)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets all Redis caches in the specified subscription.
  syntax:
    content: public PagedIterable<RedisResourceInner> list(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
      description: all Redis caches in the specified subscription.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: listAsync()
  nameWithType: RedisClientImpl.listAsync()
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listAsync()
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets all Redis caches in the specified subscription.
  syntax:
    content: public PagedFlux<RedisResourceInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
      description: all Redis caches in the specified subscription.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listByResourceGroup(java.lang.String)
  id: listByResourceGroup(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: RedisClientImpl.listByResourceGroup(String resourceGroupName)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listByResourceGroup(String resourceGroupName)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Lists all Redis caches in a resource group.
  syntax:
    content: public PagedIterable<RedisResourceInner> listByResourceGroup(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
      description: the response of list Redis operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, Context context)
  nameWithType: RedisClientImpl.listByResourceGroup(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listByResourceGroup(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Lists all Redis caches in a resource group.
  syntax:
    content: public PagedIterable<RedisResourceInner> listByResourceGroup(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
      description: the response of list Redis operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listByResourceGroupAsync(java.lang.String)
  id: listByResourceGroupAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: RedisClientImpl.listByResourceGroupAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listByResourceGroupAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Lists all Redis caches in a resource group.
  syntax:
    content: public PagedFlux<RedisResourceInner> listByResourceGroupAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
      description: the response of list Redis operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeys(java.lang.String,java.lang.String)
  id: listKeys(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: listKeys(String resourceGroupName, String name)
  nameWithType: RedisClientImpl.listKeys(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeys(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeys*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Retrieve a Redis cache's access keys. This operation requires write permission to the cache resource.
  syntax:
    content: public RedisAccessKeysInner listKeys(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner
      description: redis cache access keys.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysAsync(java.lang.String,java.lang.String)
  id: listKeysAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: listKeysAsync(String resourceGroupName, String name)
  nameWithType: RedisClientImpl.listKeysAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Retrieve a Redis cache's access keys. This operation requires write permission to the cache resource.
  syntax:
    content: public Mono<RedisAccessKeysInner> listKeysAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner>
      description: redis cache access keys.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listKeysWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: listKeysWithResponse(String resourceGroupName, String name, Context context)
  nameWithType: RedisClientImpl.listKeysWithResponse(String resourceGroupName, String name, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysWithResponse(String resourceGroupName, String name, Context context)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysWithResponse*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Retrieve a Redis cache's access keys. This operation requires write permission to the cache resource.
  syntax:
    content: public Response<RedisAccessKeysInner> listKeysWithResponse(String resourceGroupName, String name, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner>
      description: redis cache access keys.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysWithResponseAsync(java.lang.String,java.lang.String)
  id: listKeysWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: listKeysWithResponseAsync(String resourceGroupName, String name)
  nameWithType: RedisClientImpl.listKeysWithResponseAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysWithResponseAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Retrieve a Redis cache's access keys. This operation requires write permission to the cache resource.
  syntax:
    content: public Mono<Response<RedisAccessKeysInner>> listKeysWithResponseAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner>>
      description: redis cache access keys.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotifications(java.lang.String,java.lang.String,double)
  id: listUpgradeNotifications(java.lang.String,java.lang.String,double)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: listUpgradeNotifications(String resourceGroupName, String name, double history)
  nameWithType: RedisClientImpl.listUpgradeNotifications(String resourceGroupName, String name, double history)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotifications(String resourceGroupName, String name, double history)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotifications*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets any upgrade notifications for a Redis cache.
  syntax:
    content: public NotificationListResponseInner listUpgradeNotifications(String resourceGroupName, String name, double history)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: history
      type: double
      description: how many minutes in past to look for upgrade notifications.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.NotificationListResponseInner
      description: any upgrade notifications for a Redis cache.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsAsync(java.lang.String,java.lang.String,double)
  id: listUpgradeNotificationsAsync(java.lang.String,java.lang.String,double)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: listUpgradeNotificationsAsync(String resourceGroupName, String name, double history)
  nameWithType: RedisClientImpl.listUpgradeNotificationsAsync(String resourceGroupName, String name, double history)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsAsync(String resourceGroupName, String name, double history)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets any upgrade notifications for a Redis cache.
  syntax:
    content: public Mono<NotificationListResponseInner> listUpgradeNotificationsAsync(String resourceGroupName, String name, double history)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: history
      type: double
      description: how many minutes in past to look for upgrade notifications.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.redis.fluent.models.NotificationListResponseInner>
      description: any upgrade notifications for a Redis cache.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsWithResponse(java.lang.String,java.lang.String,double,com.azure.core.util.Context)
  id: listUpgradeNotificationsWithResponse(java.lang.String,java.lang.String,double,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: listUpgradeNotificationsWithResponse(String resourceGroupName, String name, double history, Context context)
  nameWithType: RedisClientImpl.listUpgradeNotificationsWithResponse(String resourceGroupName, String name, double history, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsWithResponse(String resourceGroupName, String name, double history, Context context)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsWithResponse*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets any upgrade notifications for a Redis cache.
  syntax:
    content: public Response<NotificationListResponseInner> listUpgradeNotificationsWithResponse(String resourceGroupName, String name, double history, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: history
      type: double
      description: how many minutes in past to look for upgrade notifications.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.NotificationListResponseInner>
      description: any upgrade notifications for a Redis cache.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsWithResponseAsync(java.lang.String,java.lang.String,double)
  id: listUpgradeNotificationsWithResponseAsync(java.lang.String,java.lang.String,double)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: listUpgradeNotificationsWithResponseAsync(String resourceGroupName, String name, double history)
  nameWithType: RedisClientImpl.listUpgradeNotificationsWithResponseAsync(String resourceGroupName, String name, double history)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsWithResponseAsync(String resourceGroupName, String name, double history)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets any upgrade notifications for a Redis cache.
  syntax:
    content: public Mono<Response<NotificationListResponseInner>> listUpgradeNotificationsWithResponseAsync(String resourceGroupName, String name, double history)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: history
      type: double
      description: how many minutes in past to look for upgrade notifications.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.NotificationListResponseInner>>
      description: any upgrade notifications for a Redis cache.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKey(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisKeyType)
  id: regenerateKey(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisKeyType)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: regenerateKey(String resourceGroupName, String name, RedisKeyType keyType)
  nameWithType: RedisClientImpl.regenerateKey(String resourceGroupName, String name, RedisKeyType keyType)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKey(String resourceGroupName, String name, RedisKeyType keyType)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKey*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Regenerate Redis cache's access keys. This operation requires write permission to the cache resource.
  syntax:
    content: public RedisAccessKeysInner regenerateKey(String resourceGroupName, String name, RedisKeyType keyType)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: keyType
      type: com.azure.resourcemanager.redis.models.RedisKeyType
      description: The Redis access key to regenerate.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner
      description: redis cache access keys.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisKeyType)
  id: regenerateKeyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisKeyType)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: regenerateKeyAsync(String resourceGroupName, String name, RedisKeyType keyType)
  nameWithType: RedisClientImpl.regenerateKeyAsync(String resourceGroupName, String name, RedisKeyType keyType)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyAsync(String resourceGroupName, String name, RedisKeyType keyType)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Regenerate Redis cache's access keys. This operation requires write permission to the cache resource.
  syntax:
    content: public Mono<RedisAccessKeysInner> regenerateKeyAsync(String resourceGroupName, String name, RedisKeyType keyType)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: keyType
      type: com.azure.resourcemanager.redis.models.RedisKeyType
      description: The Redis access key to regenerate.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner>
      description: redis cache access keys.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisKeyType,com.azure.core.util.Context)
  id: regenerateKeyWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisKeyType,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: regenerateKeyWithResponse(String resourceGroupName, String name, RedisKeyType keyType, Context context)
  nameWithType: RedisClientImpl.regenerateKeyWithResponse(String resourceGroupName, String name, RedisKeyType keyType, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyWithResponse(String resourceGroupName, String name, RedisKeyType keyType, Context context)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyWithResponse*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Regenerate Redis cache's access keys. This operation requires write permission to the cache resource.
  syntax:
    content: public Response<RedisAccessKeysInner> regenerateKeyWithResponse(String resourceGroupName, String name, RedisKeyType keyType, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: keyType
      type: com.azure.resourcemanager.redis.models.RedisKeyType
      description: The Redis access key to regenerate.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner>
      description: redis cache access keys.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisKeyType)
  id: regenerateKeyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisKeyType)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: regenerateKeyWithResponseAsync(String resourceGroupName, String name, RedisKeyType keyType)
  nameWithType: RedisClientImpl.regenerateKeyWithResponseAsync(String resourceGroupName, String name, RedisKeyType keyType)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyWithResponseAsync(String resourceGroupName, String name, RedisKeyType keyType)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Regenerate Redis cache's access keys. This operation requires write permission to the cache resource.
  syntax:
    content: public Mono<Response<RedisAccessKeysInner>> regenerateKeyWithResponseAsync(String resourceGroupName, String name, RedisKeyType keyType)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: keyType
      type: com.azure.resourcemanager.redis.models.RedisKeyType
      description: The Redis access key to regenerate.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner>>
      description: redis cache access keys.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisUpdateParameters)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: update(String resourceGroupName, String name, RedisUpdateParameters parameters)
  nameWithType: RedisClientImpl.update(String resourceGroupName, String name, RedisUpdateParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.update(String resourceGroupName, String name, RedisUpdateParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.update*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Update an existing Redis cache.
  syntax:
    content: public RedisResourceInner update(String resourceGroupName, String name, RedisUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisUpdateParameters
      description: Parameters supplied to the Update Redis operation.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
      description: a single Redis item in List or Get Operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisUpdateParameters)
  id: updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: updateAsync(String resourceGroupName, String name, RedisUpdateParameters parameters)
  nameWithType: RedisClientImpl.updateAsync(String resourceGroupName, String name, RedisUpdateParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateAsync(String resourceGroupName, String name, RedisUpdateParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Update an existing Redis cache.
  syntax:
    content: public Mono<RedisResourceInner> updateAsync(String resourceGroupName, String name, RedisUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisUpdateParameters
      description: Parameters supplied to the Update Redis operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
      description: a single Redis item in List or Get Operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisUpdateParameters,com.azure.core.util.Context)
  id: updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: updateWithResponse(String resourceGroupName, String name, RedisUpdateParameters parameters, Context context)
  nameWithType: RedisClientImpl.updateWithResponse(String resourceGroupName, String name, RedisUpdateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateWithResponse(String resourceGroupName, String name, RedisUpdateParameters parameters, Context context)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateWithResponse*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Update an existing Redis cache.
  syntax:
    content: public Response<RedisResourceInner> updateWithResponse(String resourceGroupName, String name, RedisUpdateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisUpdateParameters
      description: Parameters supplied to the Update Redis operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
      description: a single Redis item in List or Get Operation.
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisUpdateParameters)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.RedisClientImpl
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String name, RedisUpdateParameters parameters)
  nameWithType: RedisClientImpl.updateWithResponseAsync(String resourceGroupName, String name, RedisUpdateParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateWithResponseAsync(String resourceGroupName, String name, RedisUpdateParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Update an existing Redis cache.
  syntax:
    content: public Mono<Response<RedisResourceInner>> updateWithResponseAsync(String resourceGroupName, String name, RedisUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisUpdateParameters
      description: Parameters supplied to the Update Redis operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>>
      description: a single Redis item in List or Get Operation.
references:
- uid: com.azure.resourcemanager.redis.implementation.RedisManagementClientImpl
  name: RedisManagementClientImpl
  nameWithType: RedisManagementClientImpl
  fullName: com.azure.resourcemanager.redis.implementation.RedisManagementClientImpl
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.RedisClientImpl*
  name: RedisClientImpl
  nameWithType: RedisClientImpl.RedisClientImpl
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.RedisClientImpl
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters
  name: CheckNameAvailabilityParameters
  nameWithType: CheckNameAvailabilityParameters
  fullName: com.azure.resourcemanager.redis.models.CheckNameAvailabilityParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityWithResponseAsync*
  name: checkNameAvailabilityWithResponseAsync
  nameWithType: RedisClientImpl.checkNameAvailabilityWithResponseAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityWithResponseAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityAsync*
  name: checkNameAvailabilityAsync
  nameWithType: RedisClientImpl.checkNameAvailabilityAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailability*
  name: checkNameAvailability
  nameWithType: RedisClientImpl.checkNameAvailability
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailability
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityWithResponse*
  name: checkNameAvailabilityWithResponse
  nameWithType: RedisClientImpl.checkNameAvailabilityWithResponse
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.checkNameAvailabilityWithResponse
  package: com.azure.resourcemanager.redis.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: double
  spec.java:
  - uid: double
    name: double
    fullName: double
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.NotificationListResponseInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.NotificationListResponseInner
    name: NotificationListResponseInner
    fullName: com.azure.resourcemanager.redis.fluent.models.NotificationListResponseInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsWithResponseAsync*
  name: listUpgradeNotificationsWithResponseAsync
  nameWithType: RedisClientImpl.listUpgradeNotificationsWithResponseAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsWithResponseAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.redis.fluent.models.NotificationListResponseInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.NotificationListResponseInner
    name: NotificationListResponseInner
    fullName: com.azure.resourcemanager.redis.fluent.models.NotificationListResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsAsync*
  name: listUpgradeNotificationsAsync
  nameWithType: RedisClientImpl.listUpgradeNotificationsAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.fluent.models.NotificationListResponseInner
  name: NotificationListResponseInner
  nameWithType: NotificationListResponseInner
  fullName: com.azure.resourcemanager.redis.fluent.models.NotificationListResponseInner
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotifications*
  name: listUpgradeNotifications
  nameWithType: RedisClientImpl.listUpgradeNotifications
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotifications
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.NotificationListResponseInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.NotificationListResponseInner
    name: NotificationListResponseInner
    fullName: com.azure.resourcemanager.redis.fluent.models.NotificationListResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsWithResponse*
  name: listUpgradeNotificationsWithResponse
  nameWithType: RedisClientImpl.listUpgradeNotificationsWithResponse
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listUpgradeNotificationsWithResponse
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.models.RedisCreateParameters
  name: RedisCreateParameters
  nameWithType: RedisCreateParameters
  fullName: com.azure.resourcemanager.redis.models.RedisCreateParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.createWithResponseAsync*
  name: createWithResponseAsync
  nameWithType: RedisClientImpl.createWithResponseAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.createWithResponseAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>,com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
    name: RedisResourceInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
    name: RedisResourceInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginCreateAsync*
  name: beginCreateAsync
  nameWithType: RedisClientImpl.beginCreateAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginCreateAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>,com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
    name: RedisResourceInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
    name: RedisResourceInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginCreate*
  name: beginCreate
  nameWithType: RedisClientImpl.beginCreate
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginCreate
  package: com.azure.resourcemanager.redis.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
    name: RedisResourceInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.createAsync*
  name: createAsync
  nameWithType: RedisClientImpl.createAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.createAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  name: RedisResourceInner
  nameWithType: RedisResourceInner
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.create*
  name: create
  nameWithType: RedisClientImpl.create
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.create
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.models.RedisUpdateParameters
  name: RedisUpdateParameters
  nameWithType: RedisUpdateParameters
  fullName: com.azure.resourcemanager.redis.models.RedisUpdateParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
    name: RedisResourceInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: RedisClientImpl.updateWithResponseAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateWithResponseAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateAsync*
  name: updateAsync
  nameWithType: RedisClientImpl.updateAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.update*
  name: update
  nameWithType: RedisClientImpl.update
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.update
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
    name: RedisResourceInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateWithResponse*
  name: updateWithResponse
  nameWithType: RedisClientImpl.updateWithResponse
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.updateWithResponse
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: RedisClientImpl.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.deleteWithResponseAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginDeleteAsync*
  name: beginDeleteAsync
  nameWithType: RedisClientImpl.beginDeleteAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginDeleteAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginDelete*
  name: beginDelete
  nameWithType: RedisClientImpl.beginDelete
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginDelete
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.deleteAsync*
  name: deleteAsync
  nameWithType: RedisClientImpl.deleteAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.deleteAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.delete*
  name: delete
  nameWithType: RedisClientImpl.delete
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.delete
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupWithResponseAsync*
  name: getByResourceGroupWithResponseAsync
  nameWithType: RedisClientImpl.getByResourceGroupWithResponseAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupWithResponseAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupAsync*
  name: getByResourceGroupAsync
  nameWithType: RedisClientImpl.getByResourceGroupAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroup*
  name: getByResourceGroup
  nameWithType: RedisClientImpl.getByResourceGroup
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroup
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupWithResponse*
  name: getByResourceGroupWithResponse
  nameWithType: RedisClientImpl.getByResourceGroupWithResponse
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.getByResourceGroupWithResponse
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
    name: RedisResourceInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listByResourceGroupAsync*
  name: listByResourceGroupAsync
  nameWithType: RedisClientImpl.listByResourceGroupAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listByResourceGroupAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
    name: RedisResourceInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listByResourceGroup*
  name: listByResourceGroup
  nameWithType: RedisClientImpl.listByResourceGroup
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listByResourceGroup
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listAsync*
  name: listAsync
  nameWithType: RedisClientImpl.listAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.list*
  name: list
  nameWithType: RedisClientImpl.list
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.list
  package: com.azure.resourcemanager.redis.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner
    name: RedisAccessKeysInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysWithResponseAsync*
  name: listKeysWithResponseAsync
  nameWithType: RedisClientImpl.listKeysWithResponseAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysWithResponseAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner
    name: RedisAccessKeysInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysAsync*
  name: listKeysAsync
  nameWithType: RedisClientImpl.listKeysAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner
  name: RedisAccessKeysInner
  nameWithType: RedisAccessKeysInner
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeys*
  name: listKeys
  nameWithType: RedisClientImpl.listKeys
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeys
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner
    name: RedisAccessKeysInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysWithResponse*
  name: listKeysWithResponse
  nameWithType: RedisClientImpl.listKeysWithResponse
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.listKeysWithResponse
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.models.RedisKeyType
  name: RedisKeyType
  nameWithType: RedisKeyType
  fullName: com.azure.resourcemanager.redis.models.RedisKeyType
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyWithResponseAsync*
  name: regenerateKeyWithResponseAsync
  nameWithType: RedisClientImpl.regenerateKeyWithResponseAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyWithResponseAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyAsync*
  name: regenerateKeyAsync
  nameWithType: RedisClientImpl.regenerateKeyAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKey*
  name: regenerateKey
  nameWithType: RedisClientImpl.regenerateKey
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKey
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyWithResponse*
  name: regenerateKeyWithResponse
  nameWithType: RedisClientImpl.regenerateKeyWithResponse
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.regenerateKeyWithResponse
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.models.RedisRebootParameters
  name: RedisRebootParameters
  nameWithType: RedisRebootParameters
  fullName: com.azure.resourcemanager.redis.models.RedisRebootParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisForceRebootResponseInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisForceRebootResponseInner
    name: RedisForceRebootResponseInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisForceRebootResponseInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootWithResponseAsync*
  name: forceRebootWithResponseAsync
  nameWithType: RedisClientImpl.forceRebootWithResponseAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootWithResponseAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.redis.fluent.models.RedisForceRebootResponseInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisForceRebootResponseInner
    name: RedisForceRebootResponseInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisForceRebootResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootAsync*
  name: forceRebootAsync
  nameWithType: RedisClientImpl.forceRebootAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.fluent.models.RedisForceRebootResponseInner
  name: RedisForceRebootResponseInner
  nameWithType: RedisForceRebootResponseInner
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisForceRebootResponseInner
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceReboot*
  name: forceReboot
  nameWithType: RedisClientImpl.forceReboot
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceReboot
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisForceRebootResponseInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisForceRebootResponseInner
    name: RedisForceRebootResponseInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisForceRebootResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootWithResponse*
  name: forceRebootWithResponse
  nameWithType: RedisClientImpl.forceRebootWithResponse
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.forceRebootWithResponse
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.models.ImportRdbParameters
  name: ImportRdbParameters
  nameWithType: ImportRdbParameters
  fullName: com.azure.resourcemanager.redis.models.ImportRdbParameters
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importDataWithResponseAsync*
  name: importDataWithResponseAsync
  nameWithType: RedisClientImpl.importDataWithResponseAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importDataWithResponseAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginImportDataAsync*
  name: beginImportDataAsync
  nameWithType: RedisClientImpl.beginImportDataAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginImportDataAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginImportData*
  name: beginImportData
  nameWithType: RedisClientImpl.beginImportData
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginImportData
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importDataAsync*
  name: importDataAsync
  nameWithType: RedisClientImpl.importDataAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importDataAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importData*
  name: importData
  nameWithType: RedisClientImpl.importData
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.importData
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.models.ExportRdbParameters
  name: ExportRdbParameters
  nameWithType: ExportRdbParameters
  fullName: com.azure.resourcemanager.redis.models.ExportRdbParameters
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportDataWithResponseAsync*
  name: exportDataWithResponseAsync
  nameWithType: RedisClientImpl.exportDataWithResponseAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportDataWithResponseAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginExportDataAsync*
  name: beginExportDataAsync
  nameWithType: RedisClientImpl.beginExportDataAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginExportDataAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginExportData*
  name: beginExportData
  nameWithType: RedisClientImpl.beginExportData
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.beginExportData
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportDataAsync*
  name: exportDataAsync
  nameWithType: RedisClientImpl.exportDataAsync
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportDataAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportData*
  name: exportData
  nameWithType: RedisClientImpl.exportData
  fullName: com.azure.resourcemanager.redis.implementation.RedisClientImpl.exportData
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.fluent.RedisClient
  name: RedisClient
  nameWithType: RedisClient
  fullName: com.azure.resourcemanager.redis.fluent.RedisClient
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  name: InnerSupportsDelete<Void>
  nameWithType: InnerSupportsDelete<Void>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
  name: InnerSupportsGet<RedisResourceInner>
  nameWithType: InnerSupportsGet<RedisResourceInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
  name: InnerSupportsListing<RedisResourceInner>
  nameWithType: InnerSupportsListing<RedisResourceInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>,com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  name: RedisResourceInner>,RedisResourceInner
  nameWithType: RedisResourceInner>,RedisResourceInner
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner>,com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
  name: InnerSupportsDelete
  nameWithType: InnerSupportsDelete
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
  name: InnerSupportsGet
  nameWithType: InnerSupportsGet
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
  name: InnerSupportsListing
  nameWithType: InnerSupportsListing
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
