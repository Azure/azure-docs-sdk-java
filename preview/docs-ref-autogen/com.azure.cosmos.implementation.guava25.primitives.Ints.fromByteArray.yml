### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.primitives.Ints.fromByteArray*"
fullName: "com.azure.cosmos.implementation.guava25.primitives.Ints.fromByteArray"
name: "fromByteArray"
nameWithType: "Ints.fromByteArray"
members:
- uid: "com.azure.cosmos.implementation.guava25.primitives.Ints.fromByteArray(byte[])"
  fullName: "com.azure.cosmos.implementation.guava25.primitives.Ints.fromByteArray(byte[] bytes)"
  name: "fromByteArray(byte[] bytes)"
  nameWithType: "Ints.fromByteArray(byte[] bytes)"
  summary: "Returns the `int` value whose big-endian representation is stored in the first 4 bytes of `bytes`; equivalent to `ByteBuffer.wrap(bytes).getInt()`. For example, the input byte array `{0x12, 0x13, 0x14, 0x15, 0x33}` would yield the `int` value `0x12131415`.\n\nArguably, it's preferable to use <xref uid=\"java.nio.ByteBuffer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.nio.ByteBuffer\"></xref>; that library exposes much more flexibility at little cost in readability."
  parameters:
  - name: "bytes"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static int fromByteArray(byte[] bytes)"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.primitives"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
