### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.JobInputHttp"
fullName: "com.azure.resourcemanager.mediaservices.models.JobInputHttp"
name: "JobInputHttp"
nameWithType: "JobInputHttp"
summary: "Represents HTTPS job input."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.JobInput?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.JobInputClip?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.mediaservices.models.JobInputClip.end()"
- "com.azure.resourcemanager.mediaservices.models.JobInputClip.files()"
- "com.azure.resourcemanager.mediaservices.models.JobInputClip.inputDefinitions()"
- "com.azure.resourcemanager.mediaservices.models.JobInputClip.label()"
- "com.azure.resourcemanager.mediaservices.models.JobInputClip.start()"
- "com.azure.resourcemanager.mediaservices.models.JobInputClip.validate()"
- "com.azure.resourcemanager.mediaservices.models.JobInputClip.withEnd(com.azure.resourcemanager.mediaservices.models.ClipTime)"
- "com.azure.resourcemanager.mediaservices.models.JobInputClip.withFiles(java.util.List<java.lang.String>)"
- "com.azure.resourcemanager.mediaservices.models.JobInputClip.withInputDefinitions(java.util.List<com.azure.resourcemanager.mediaservices.models.InputDefinition>)"
- "com.azure.resourcemanager.mediaservices.models.JobInputClip.withLabel(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.models.JobInputClip.withStart(com.azure.resourcemanager.mediaservices.models.ClipTime)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class JobInputHttp extends JobInputClip"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.JobInputHttp()"
  fullName: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.JobInputHttp()"
  name: "JobInputHttp()"
  nameWithType: "JobInputHttp.JobInputHttp()"
  syntax: "public JobInputHttp()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.baseUri()"
  fullName: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.baseUri()"
  name: "baseUri()"
  nameWithType: "JobInputHttp.baseUri()"
  summary: "Get the base<wbr>Uri property: Base URI for HTTPS job input."
  syntax: "public String baseUri()"
  desc: "Get the baseUri property: Base URI for HTTPS job input. It will be concatenated with provided file names. If no base uri is given, then the provided file list is assumed to be fully qualified uris. Maximum length of 4000 characters. The query strings will not be returned in service responses to prevent sensitive data exposure."
  returns:
    description: "the baseUri value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.validate()"
  name: "validate()"
  nameWithType: "JobInputHttp.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.mediaservices.models.JobInputClip.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.withBaseUri(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.withBaseUri(String baseUri)"
  name: "withBaseUri(String baseUri)"
  nameWithType: "JobInputHttp.withBaseUri(String baseUri)"
  summary: "Set the base<wbr>Uri property: Base URI for HTTPS job input."
  parameters:
  - description: "the baseUri value to set."
    name: "baseUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobInputHttp withBaseUri(String baseUri)"
  desc: "Set the baseUri property: Base URI for HTTPS job input. It will be concatenated with provided file names. If no base uri is given, then the provided file list is assumed to be fully qualified uris. Maximum length of 4000 characters. The query strings will not be returned in service responses to prevent sensitive data exposure."
  returns:
    description: "the JobInputHttp object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.JobInputHttp?alt=com.azure.resourcemanager.mediaservices.models.JobInputHttp&text=JobInputHttp\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.withEnd(com.azure.resourcemanager.mediaservices.models.ClipTime)"
  fullName: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.withEnd(ClipTime end)"
  name: "withEnd(ClipTime end)"
  nameWithType: "JobInputHttp.withEnd(ClipTime end)"
  summary: "Set the end property: Defines a point on the timeline of the input media at which processing will end."
  overridden: "com.azure.resourcemanager.mediaservices.models.JobInputClip.withEnd(com.azure.resourcemanager.mediaservices.models.ClipTime)"
  parameters:
  - name: "end"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ClipTime?alt=com.azure.resourcemanager.mediaservices.models.ClipTime&text=ClipTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobInputHttp withEnd(ClipTime end)"
  desc: "Set the end property: Defines a point on the timeline of the input media at which processing will end. Defaults to the end of the input media."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.JobInputHttp?alt=com.azure.resourcemanager.mediaservices.models.JobInputHttp&text=JobInputHttp\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.withFiles(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.withFiles(List<String> files)"
  name: "withFiles(List<String> files)"
  nameWithType: "JobInputHttp.withFiles(List<String> files)"
  summary: "Set the files property: List of files."
  overridden: "com.azure.resourcemanager.mediaservices.models.JobInputClip.withFiles(java.util.List<java.lang.String>)"
  parameters:
  - name: "files"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public JobInputHttp withFiles(List<String> files)"
  desc: "Set the files property: List of files. Required for JobInputHttp. Maximum of 4000 characters each. Query strings will not be returned in service responses to prevent sensitive data exposure."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.JobInputHttp?alt=com.azure.resourcemanager.mediaservices.models.JobInputHttp&text=JobInputHttp\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.withInputDefinitions(java.util.List<com.azure.resourcemanager.mediaservices.models.InputDefinition>)"
  fullName: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.withInputDefinitions(List<InputDefinition> inputDefinitions)"
  name: "withInputDefinitions(List<InputDefinition> inputDefinitions)"
  nameWithType: "JobInputHttp.withInputDefinitions(List<InputDefinition> inputDefinitions)"
  summary: "Set the input<wbr>Definitions property: Defines a list of Input<wbr>Definitions."
  overridden: "com.azure.resourcemanager.mediaservices.models.JobInputClip.withInputDefinitions(java.util.List<com.azure.resourcemanager.mediaservices.models.InputDefinition>)"
  parameters:
  - name: "inputDefinitions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.InputDefinition?alt=com.azure.resourcemanager.mediaservices.models.InputDefinition&text=InputDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public JobInputHttp withInputDefinitions(List<InputDefinition> inputDefinitions)"
  desc: "Set the inputDefinitions property: Defines a list of InputDefinitions. For each InputDefinition, it defines a list of track selections and related metadata."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.JobInputHttp?alt=com.azure.resourcemanager.mediaservices.models.JobInputHttp&text=JobInputHttp\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.withLabel(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.withLabel(String label)"
  name: "withLabel(String label)"
  nameWithType: "JobInputHttp.withLabel(String label)"
  summary: "Set the label property: A label that is assigned to a Job<wbr>Input<wbr>Clip, that is used to satisfy a reference used in the Transform."
  overridden: "com.azure.resourcemanager.mediaservices.models.JobInputClip.withLabel(java.lang.String)"
  parameters:
  - name: "label"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobInputHttp withLabel(String label)"
  desc: "Set the label property: A label that is assigned to a JobInputClip, that is used to satisfy a reference used in the Transform. For example, a Transform can be authored so as to take an image file with the label 'xyz' and apply it as an overlay onto the input video before it is encoded. When submitting a Job, exactly one of the JobInputs should be the image file, and it should have the label 'xyz'."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.JobInputHttp?alt=com.azure.resourcemanager.mediaservices.models.JobInputHttp&text=JobInputHttp\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.withStart(com.azure.resourcemanager.mediaservices.models.ClipTime)"
  fullName: "com.azure.resourcemanager.mediaservices.models.JobInputHttp.withStart(ClipTime start)"
  name: "withStart(ClipTime start)"
  nameWithType: "JobInputHttp.withStart(ClipTime start)"
  summary: "Set the start property: Defines a point on the timeline of the input media at which processing will start."
  overridden: "com.azure.resourcemanager.mediaservices.models.JobInputClip.withStart(com.azure.resourcemanager.mediaservices.models.ClipTime)"
  parameters:
  - name: "start"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ClipTime?alt=com.azure.resourcemanager.mediaservices.models.ClipTime&text=ClipTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobInputHttp withStart(ClipTime start)"
  desc: "Set the start property: Defines a point on the timeline of the input media at which processing will start. Defaults to the beginning of the input media."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.JobInputHttp?alt=com.azure.resourcemanager.mediaservices.models.JobInputHttp&text=JobInputHttp\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents HTTPS job input."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0-beta.1
