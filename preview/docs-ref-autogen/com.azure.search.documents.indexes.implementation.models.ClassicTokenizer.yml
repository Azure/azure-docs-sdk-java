### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer
  id: ClassicTokenizer
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models
  children:
  - com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.ClassicTokenizer(java.lang.String)
  - com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.getMaxTokenLength()
  - com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.setMaxTokenLength(java.lang.Integer)
  - com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.validate()
  langs:
  - java
  name: ClassicTokenizer
  nameWithType: ClassicTokenizer
  fullName: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer
  type: Class
  package: com.azure.search.documents.indexes.implementation.models
  summary: The ClassicTokenizer model.
  syntax:
    content: public class ClassicTokenizer extends LexicalTokenizer
  inheritance:
  - java.lang.Object
  - com.azure.search.documents.indexes.implementation.models.LexicalTokenizer
  inheritedMembers:
  - com.azure.search.documents.indexes.implementation.models.LexicalTokenizer.getName()
  - com.azure.search.documents.indexes.implementation.models.LexicalTokenizer.validate()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.ClassicTokenizer(java.lang.String)
  id: ClassicTokenizer(java.lang.String)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer
  langs:
  - java
  name: ClassicTokenizer(String name)
  nameWithType: ClassicTokenizer.ClassicTokenizer(String name)
  fullName: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.ClassicTokenizer(String name)
  overload: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.ClassicTokenizer*
  type: Constructor
  package: com.azure.search.documents.indexes.implementation.models
  summary: Creates an instance of ClassicTokenizer class.
  syntax:
    content: public ClassicTokenizer(String name)
    parameters:
    - id: name
      type: java.lang.String
- uid: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.getMaxTokenLength()
  id: getMaxTokenLength()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer
  langs:
  - java
  name: getMaxTokenLength()
  nameWithType: ClassicTokenizer.getMaxTokenLength()
  fullName: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.getMaxTokenLength()
  overload: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.getMaxTokenLength*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Get the maxTokenLength property: The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.'
  syntax:
    content: public Integer getMaxTokenLength()
    return:
      type: java.lang.Integer
      description: the maxTokenLength value.
- uid: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.setMaxTokenLength(java.lang.Integer)
  id: setMaxTokenLength(java.lang.Integer)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer
  langs:
  - java
  name: setMaxTokenLength(Integer maxTokenLength)
  nameWithType: ClassicTokenizer.setMaxTokenLength(Integer maxTokenLength)
  fullName: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.setMaxTokenLength(Integer maxTokenLength)
  overload: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.setMaxTokenLength*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: 'Set the maxTokenLength property: The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.'
  syntax:
    content: public ClassicTokenizer setMaxTokenLength(Integer maxTokenLength)
    parameters:
    - id: maxTokenLength
      type: java.lang.Integer
      description: the maxTokenLength value to set.
    return:
      type: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer
      description: the ClassicTokenizer object itself.
- uid: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.validate()
  id: validate()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer
  langs:
  - java
  name: validate()
  nameWithType: ClassicTokenizer.validate()
  fullName: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.validate()
  overload: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.validate*
  type: Method
  package: com.azure.search.documents.indexes.implementation.models
  summary: Validates the instance.
  syntax:
    content: public void validate()
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.ClassicTokenizer*
  name: ClassicTokenizer
  nameWithType: ClassicTokenizer.ClassicTokenizer
  fullName: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.ClassicTokenizer
  package: com.azure.search.documents.indexes.implementation.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.getMaxTokenLength*
  name: getMaxTokenLength
  nameWithType: ClassicTokenizer.getMaxTokenLength
  fullName: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.getMaxTokenLength
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.setMaxTokenLength*
  name: setMaxTokenLength
  nameWithType: ClassicTokenizer.setMaxTokenLength
  fullName: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.setMaxTokenLength
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.validate*
  name: validate
  nameWithType: ClassicTokenizer.validate
  fullName: com.azure.search.documents.indexes.implementation.models.ClassicTokenizer.validate
  package: com.azure.search.documents.indexes.implementation.models
- uid: com.azure.search.documents.indexes.implementation.models.LexicalTokenizer
  name: LexicalTokenizer
  nameWithType: LexicalTokenizer
  fullName: com.azure.search.documents.indexes.implementation.models.LexicalTokenizer
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.search.documents.indexes.implementation.models.LexicalTokenizer.validate()
  name: LexicalTokenizer.validate()
  nameWithType: LexicalTokenizer.validate()
  fullName: com.azure.search.documents.indexes.implementation.models.LexicalTokenizer.validate()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.implementation.models.LexicalTokenizer.getName()
  name: LexicalTokenizer.getName()
  nameWithType: LexicalTokenizer.getName()
  fullName: com.azure.search.documents.indexes.implementation.models.LexicalTokenizer.getName()
