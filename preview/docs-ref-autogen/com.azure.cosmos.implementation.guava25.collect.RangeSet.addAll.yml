### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.RangeSet.addAll*"
fullName: "com.azure.cosmos.implementation.guava25.collect.RangeSet<C>.addAll"
name: "addAll"
nameWithType: "RangeSet<C>.addAll"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.RangeSet.addAll(com.azure.cosmos.implementation.guava25.collect.RangeSet<C>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.RangeSet<C>.addAll(RangeSet<C> other)"
  name: "addAll(RangeSet<C> other)"
  nameWithType: "RangeSet<C>.addAll(RangeSet<C> other)"
  summary: "Adds all of the ranges from the specified range set to this range set (optional operation). After this operation, this range set is the minimal range set that <xref uid=\"com.azure.cosmos.implementation.guava25.collect.RangeSet.enclosesAll(com.azure.cosmos.implementation.guava25.collect.RangeSet&lt;C&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"encloses\"></xref> both the original range set and `other`.\n\nThis is equivalent to calling <xref uid=\"com.azure.cosmos.implementation.guava25.collect.RangeSet.add\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#add\"></xref> on each of the ranges in `other` in turn."
  parameters:
  - name: "other"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.RangeSet?alt=com.azure.cosmos.implementation.guava25.collect.RangeSet&text=RangeSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract void addAll(RangeSet<C> other)"
- uid: "com.azure.cosmos.implementation.guava25.collect.RangeSet.addAll(java.lang.Iterable<com.azure.cosmos.implementation.guava25.collect.Range<C>>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.RangeSet<C>.addAll(Iterable<Range<C>> ranges)"
  name: "addAll(Iterable<Range<C>> ranges)"
  nameWithType: "RangeSet<C>.addAll(Iterable<Range<C>> ranges)"
  summary: "Adds all of the specified ranges to this range set (optional operation). After this operation, this range set is the minimal range set that <xref uid=\"com.azure.cosmos.implementation.guava25.collect.RangeSet.enclosesAll(com.azure.cosmos.implementation.guava25.collect.RangeSet&lt;C&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"encloses\"></xref> both the original range set and each range in `other`.\n\nThis is equivalent to calling <xref uid=\"com.azure.cosmos.implementation.guava25.collect.RangeSet.add\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#add\"></xref> on each of the ranges in `other` in turn."
  parameters:
  - name: "ranges"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.guava25.collect.Range?alt=com.azure.cosmos.implementation.guava25.collect.Range&text=Range\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public default void addAll(Iterable<Range<C>> ranges)"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
