### YamlMime:JavaType
uid: "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager"
fullName: "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager"
name: "BasicHttpClientConnectionManager"
nameWithType: "BasicHttpClientConnectionManager"
summary: "A connection manager for a single connection. This connection manager maintains only one active connection. Even though this class is fully thread-safe it ought to be used by one execution thread only, as only one thread a time can lease the connection at a time.\n\nThis connection manager will make an effort to reuse the connection for subsequent requests with the same <xref uid=\"org.apache.hc.client5.http.HttpRoute\" data-throw-if-not-resolved=\"false\" data-raw-source=\"route\"></xref>. It will, however, close the existing connection and open it for the given route, if the route of the persistent connection does not match that of the connection request. If the connection has been already been allocated <xref uid=\"java.lang.IllegalStateException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IllegalStateException\"></xref> is thrown.\n\nThis connection manager implementation should be used inside an EJB container instead of <xref uid=\"org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PoolingHttpClientConnectionManager\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class BasicHttpClientConnectionManager implements HttpClientConnectionManager"
constructors:
- "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager.BasicHttpClientConnectionManager()"
- "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager.BasicHttpClientConnectionManager(org.apache.hc.client5.http.io.HttpClientConnectionOperator,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)"
- "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager.BasicHttpClientConnectionManager(org.apache.hc.core5.http.config.Lookup<org.apache.hc.client5.http.socket.ConnectionSocketFactory>)"
- "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager.BasicHttpClientConnectionManager(org.apache.hc.core5.http.config.Lookup<org.apache.hc.client5.http.socket.ConnectionSocketFactory>,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)"
- "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager.BasicHttpClientConnectionManager(org.apache.hc.core5.http.config.Lookup<org.apache.hc.client5.http.socket.ConnectionSocketFactory>,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>,org.apache.hc.client5.http.SchemePortResolver,org.apache.hc.client5.http.DnsResolver)"
methods:
- "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager.close()"
- "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager.close(org.apache.hc.core5.io.CloseMode)"
- "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager.closeExpired()"
- "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager.closeIdle(org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager.connect(org.apache.hc.client5.http.io.ConnectionEndpoint,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.http.protocol.HttpContext)"
- "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager.getSocketConfig()"
- "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager.lease(java.lang.String,org.apache.hc.client5.http.HttpRoute,java.lang.Object)"
- "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager.lease(java.lang.String,org.apache.hc.client5.http.HttpRoute,org.apache.hc.core5.util.Timeout,java.lang.Object)"
- "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager.release(org.apache.hc.client5.http.io.ConnectionEndpoint,java.lang.Object,org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager.setSocketConfig(org.apache.hc.core5.http.io.SocketConfig)"
- "org.apache.hc.client5.http.impl.io.BasicHttpClientConnectionManager.upgrade(org.apache.hc.client5.http.io.ConnectionEndpoint,org.apache.hc.core5.http.protocol.HttpContext)"
type: "class"
implements:
- "<xref href=\"org.apache.hc.client5.http.io.HttpClientConnectionManager?alt=org.apache.hc.client5.http.io.HttpClientConnectionManager&text=HttpClientConnectionManager\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "org.apache.hc.client5.http.impl.io"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
