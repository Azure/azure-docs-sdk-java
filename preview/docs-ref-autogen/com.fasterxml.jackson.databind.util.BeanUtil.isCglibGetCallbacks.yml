### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.util.BeanUtil.isCglibGetCallbacks*"
fullName: "com.fasterxml.jackson.databind.util.BeanUtil.isCglibGetCallbacks"
name: "isCglibGetCallbacks"
nameWithType: "BeanUtil.isCglibGetCallbacks"
members:
- uid: "com.fasterxml.jackson.databind.util.BeanUtil.isCglibGetCallbacks(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)"
  fullName: "com.fasterxml.jackson.databind.util.BeanUtil.isCglibGetCallbacks(AnnotatedMethod am)"
  name: "isCglibGetCallbacks(AnnotatedMethod am)"
  nameWithType: "BeanUtil.isCglibGetCallbacks(AnnotatedMethod am)"
  summary: "This method was added to address the need to weed out CGLib-injected \"getCallbacks\" method. At this point caller has detected a potential getter method with name \"getCallbacks\" and we need to determine if it is indeed injectect by Cglib. We do this by verifying that the result type is \"net.sf.cglib.proxy.Callback\\[\\]\""
  parameters:
  - name: "am"
    type: "<xref href=\"com.fasterxml.jackson.databind.introspect.AnnotatedMethod?alt=com.fasterxml.jackson.databind.introspect.AnnotatedMethod&text=AnnotatedMethod\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected static boolean isCglibGetCallbacks(AnnotatedMethod am)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.util"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
