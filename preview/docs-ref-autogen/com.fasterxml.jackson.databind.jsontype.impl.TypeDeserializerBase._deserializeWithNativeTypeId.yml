### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId*"
fullName: "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId"
name: "_deserializeWithNativeTypeId"
nameWithType: "TypeDeserializerBase._deserializeWithNativeTypeId"
members:
- uid: "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
  fullName: "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(JsonParser jp, DeserializationContext ctxt)"
  name: "_deserializeWithNativeTypeId(JsonParser jp, DeserializationContext ctxt)"
  nameWithType: "TypeDeserializerBase._deserializeWithNativeTypeId(JsonParser jp, DeserializationContext ctxt)"
  summary: "Helper method called when <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref> indicates that it can use so-called native type ids. Assumption from there is that only native type ids are to be used."
  parameters:
  - name: "jp"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.databind.DeserializationContext?alt=com.fasterxml.jackson.databind.DeserializationContext&text=DeserializationContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected Object _deserializeWithNativeTypeId(JsonParser jp, DeserializationContext ctxt)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)"
  fullName: "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(JsonParser p, DeserializationContext ctxt, Object typeId)"
  name: "_deserializeWithNativeTypeId(JsonParser p, DeserializationContext ctxt, Object typeId)"
  nameWithType: "TypeDeserializerBase._deserializeWithNativeTypeId(JsonParser p, DeserializationContext ctxt, Object typeId)"
  summary: "Helper method called when <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref> indicates that it can use so-called native type ids, and such type id has been found."
  parameters:
  - name: "p"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.databind.DeserializationContext?alt=com.fasterxml.jackson.databind.DeserializationContext&text=DeserializationContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "typeId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected Object _deserializeWithNativeTypeId(JsonParser p, DeserializationContext ctxt, Object typeId)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.jsontype.impl"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
