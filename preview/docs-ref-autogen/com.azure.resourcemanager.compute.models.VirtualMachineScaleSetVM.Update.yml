### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update
  id: Update
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models
  children:
  - com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update.withExistingDataDisk(com.azure.resourcemanager.compute.models.Disk,int,com.azure.resourcemanager.compute.models.CachingTypes)
  - com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update.withExistingDataDisk(com.azure.resourcemanager.compute.models.Disk,int,com.azure.resourcemanager.compute.models.CachingTypes,com.azure.resourcemanager.compute.models.StorageAccountTypes)
  - com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update.withoutDataDisk(int)
  langs:
  - java
  name: VirtualMachineScaleSetVM.Update
  nameWithType: VirtualMachineScaleSetVM.Update
  fullName: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update
  type: Interface
  package: com.azure.resourcemanager.compute.models
  summary: The template for an update operation, containing all the settings that can be modified.
  syntax:
    content: public static interface VirtualMachineScaleSetVM.Update extends Appliable<VirtualMachineScaleSetVM>
  implements:
  - com.azure.resourcemanager.resources.fluentcore.model.Appliable<com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM>
- uid: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update.withExistingDataDisk(com.azure.resourcemanager.compute.models.Disk,int,com.azure.resourcemanager.compute.models.CachingTypes)
  id: withExistingDataDisk(com.azure.resourcemanager.compute.models.Disk,int,com.azure.resourcemanager.compute.models.CachingTypes)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update
  langs:
  - java
  name: withExistingDataDisk(Disk dataDisk, int lun, CachingTypes cachingTypes)
  nameWithType: VirtualMachineScaleSetVM.Update.withExistingDataDisk(Disk dataDisk, int lun, CachingTypes cachingTypes)
  fullName: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update.withExistingDataDisk(Disk dataDisk, int lun, CachingTypes cachingTypes)
  overload: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update.withExistingDataDisk*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: Attaches an existing data disk to this VMSS virtual machine.
  syntax:
    content: public abstract VirtualMachineScaleSetVM.Update withExistingDataDisk(Disk dataDisk, int lun, CachingTypes cachingTypes)
    parameters:
    - id: dataDisk
      type: com.azure.resourcemanager.compute.models.Disk
      description: data disk, need to be in DiskState.UNATTACHED state
    - id: lun
      type: int
      description: the disk LUN, cannot conflict with existing LUNs
    - id: cachingTypes
      type: com.azure.resourcemanager.compute.models.CachingTypes
      description: the caching type
    return:
      type: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update
      description: the next stage of the update
- uid: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update.withExistingDataDisk(com.azure.resourcemanager.compute.models.Disk,int,com.azure.resourcemanager.compute.models.CachingTypes,com.azure.resourcemanager.compute.models.StorageAccountTypes)
  id: withExistingDataDisk(com.azure.resourcemanager.compute.models.Disk,int,com.azure.resourcemanager.compute.models.CachingTypes,com.azure.resourcemanager.compute.models.StorageAccountTypes)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update
  langs:
  - java
  name: withExistingDataDisk(Disk dataDisk, int lun, CachingTypes cachingTypes, StorageAccountTypes storageAccountTypes)
  nameWithType: VirtualMachineScaleSetVM.Update.withExistingDataDisk(Disk dataDisk, int lun, CachingTypes cachingTypes, StorageAccountTypes storageAccountTypes)
  fullName: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update.withExistingDataDisk(Disk dataDisk, int lun, CachingTypes cachingTypes, StorageAccountTypes storageAccountTypes)
  overload: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update.withExistingDataDisk*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: Attaches an existing data disk to this VMSS virtual machine.
  syntax:
    content: public abstract VirtualMachineScaleSetVM.Update withExistingDataDisk(Disk dataDisk, int lun, CachingTypes cachingTypes, StorageAccountTypes storageAccountTypes)
    parameters:
    - id: dataDisk
      type: com.azure.resourcemanager.compute.models.Disk
      description: data disk, need to be in DiskState.UNATTACHED state
    - id: lun
      type: int
      description: the disk LUN, cannot conflict with existing LUNs
    - id: cachingTypes
      type: com.azure.resourcemanager.compute.models.CachingTypes
      description: the caching type
    - id: storageAccountTypes
      type: com.azure.resourcemanager.compute.models.StorageAccountTypes
      description: the storage account type
    return:
      type: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update
      description: the next stage of the update
- uid: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update.withoutDataDisk(int)
  id: withoutDataDisk(int)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update
  langs:
  - java
  name: withoutDataDisk(int lun)
  nameWithType: VirtualMachineScaleSetVM.Update.withoutDataDisk(int lun)
  fullName: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update.withoutDataDisk(int lun)
  overload: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update.withoutDataDisk*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: Detaches an existing data disk from this VMSS virtual machine.
  syntax:
    content: public abstract VirtualMachineScaleSetVM.Update withoutDataDisk(int lun)
    parameters:
    - id: lun
      type: int
      description: the disk LUN
    return:
      type: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update
      description: the next stage of the update
references:
- uid: com.azure.resourcemanager.compute.models.Disk
  name: Disk
  nameWithType: Disk
  fullName: com.azure.resourcemanager.compute.models.Disk
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.resourcemanager.compute.models.CachingTypes
  name: CachingTypes
  nameWithType: CachingTypes
  fullName: com.azure.resourcemanager.compute.models.CachingTypes
- uid: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update.withExistingDataDisk*
  name: withExistingDataDisk
  nameWithType: VirtualMachineScaleSetVM.Update.withExistingDataDisk
  fullName: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update.withExistingDataDisk
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.StorageAccountTypes
  name: StorageAccountTypes
  nameWithType: StorageAccountTypes
  fullName: com.azure.resourcemanager.compute.models.StorageAccountTypes
- uid: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update.withoutDataDisk*
  name: withoutDataDisk
  nameWithType: VirtualMachineScaleSetVM.Update.withoutDataDisk
  fullName: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM.Update.withoutDataDisk
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.resources.fluentcore.model.Appliable<com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM>
  name: Appliable<VirtualMachineScaleSetVM>
  nameWithType: Appliable<VirtualMachineScaleSetVM>
  fullName: com.azure.resourcemanager.resources.fluentcore.model.Appliable<com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM>
- uid: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM
  name: VirtualMachineScaleSetVM
  nameWithType: VirtualMachineScaleSetVM
  fullName: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVM
- uid: com.azure.resourcemanager.resources.fluentcore.model.Appliable
  name: Appliable
  nameWithType: Appliable
  fullName: com.azure.resourcemanager.resources.fluentcore.model.Appliable
