### YamlMime:JavaMember
uid: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.deleteAll*"
fullName: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository<T,K>.deleteAll"
name: "deleteAll"
nameWithType: "SimpleReactiveCosmosRepository<T,K>.deleteAll"
members:
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.deleteAll()"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository<T,K>.deleteAll()"
  name: "deleteAll()"
  nameWithType: "SimpleReactiveCosmosRepository<T,K>.deleteAll()"
  syntax: "public Mono<Void> deleteAll()"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.deleteAll(java.lang.Iterable<? extends T>)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository<T,K>.deleteAll(Iterable<? extends T> entities)"
  name: "deleteAll(Iterable<? extends T> entities)"
  nameWithType: "SimpleReactiveCosmosRepository<T,K>.deleteAll(Iterable<? extends T> entities)"
  parameters:
  - name: "entities"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends T?alt=? extends T&text=? extends T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<Void> deleteAll(Iterable<? extends T> entities)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.deleteAll(org.reactivestreams.Publisher<? extends T>)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository<T,K>.deleteAll(Publisher<? extends T> entityStream)"
  name: "deleteAll(Publisher<? extends T> entityStream)"
  nameWithType: "SimpleReactiveCosmosRepository<T,K>.deleteAll(Publisher<? extends T> entityStream)"
  parameters:
  - name: "entityStream"
    type: "<xref href=\"org.reactivestreams.Publisher?alt=org.reactivestreams.Publisher&text=Publisher\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends T?alt=? extends T&text=? extends T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<Void> deleteAll(Publisher<? extends T> entityStream)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.support"
artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
