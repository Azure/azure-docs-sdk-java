### YamlMime:JavaType
uid: "com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy"
fullName: "com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy"
name: "KeyVaultCertificateWithPolicy"
nameWithType: "KeyVaultCertificateWithPolicy"
summary: "Represents a certificate with all of its properties including <xref uid=\"com.azure.security.keyvault.certificates.models.CertificatePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificatePolicy\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificate?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.security.keyvault.certificates.models.KeyVaultCertificate.getCer()"
- "com.azure.security.keyvault.certificates.models.KeyVaultCertificate.getId()"
- "com.azure.security.keyvault.certificates.models.KeyVaultCertificate.getKeyId()"
- "com.azure.security.keyvault.certificates.models.KeyVaultCertificate.getName()"
- "com.azure.security.keyvault.certificates.models.KeyVaultCertificate.getProperties()"
- "com.azure.security.keyvault.certificates.models.KeyVaultCertificate.getSecretId()"
- "com.azure.security.keyvault.certificates.models.KeyVaultCertificate.setProperties(com.azure.security.keyvault.certificates.models.CertificateProperties)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class KeyVaultCertificateWithPolicy extends KeyVaultCertificate"
methods:
- uid: "com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy.getPolicy()"
  fullName: "com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy.getPolicy()"
  name: "getPolicy()"
  nameWithType: "KeyVaultCertificateWithPolicy.getPolicy()"
  summary: "Get the certificate policy of the certificate"
  syntax: "public CertificatePolicy getPolicy()"
  desc: "Get the certificate policy of the certificate"
  returns:
    description: "the cer content."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy.setPolicy(com.azure.security.keyvault.certificates.models.CertificatePolicy)"
  fullName: "com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy.setPolicy(CertificatePolicy certificatePolicy)"
  name: "setPolicy(CertificatePolicy certificatePolicy)"
  nameWithType: "KeyVaultCertificateWithPolicy.setPolicy(CertificatePolicy certificatePolicy)"
  summary: "Set the certificate policy of the certificate"
  parameters:
  - description: "the policy to set."
    name: "certificatePolicy"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KeyVaultCertificateWithPolicy setPolicy(CertificatePolicy certificatePolicy)"
  desc: "Set the certificate policy of the certificate"
  returns:
    description: "the certificateWithPolicy object itself."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy?alt=com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy&text=KeyVaultCertificateWithPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy.setProperties(com.azure.security.keyvault.certificates.models.CertificateProperties)"
  fullName: "com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy.setProperties(CertificateProperties properties)"
  name: "setProperties(CertificateProperties properties)"
  nameWithType: "KeyVaultCertificateWithPolicy.setProperties(CertificateProperties properties)"
  summary: "Set the certificate properties"
  overridden: "com.azure.security.keyvault.certificates.models.KeyVaultCertificate.setProperties(com.azure.security.keyvault.certificates.models.CertificateProperties)"
  parameters:
  - description: "the certificate properties"
    name: "properties"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificateProperties?alt=com.azure.security.keyvault.certificates.models.CertificateProperties&text=CertificateProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KeyVaultCertificateWithPolicy setProperties(CertificateProperties properties)"
  desc: "Set the certificate properties"
  returns:
    description: "the updated certificateWithPolicy object itself."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy?alt=com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy&text=KeyVaultCertificateWithPolicy\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents a certificate with all of its properties including <xref uid=\"com.azure.security.keyvault.certificates.models.CertificatePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificatePolicy\"></xref>."
metadata: {}
package: "com.azure.security.keyvault.certificates.models"
artifact: com.azure:azure-security-keyvault-certificates:4.3.0-beta.5
