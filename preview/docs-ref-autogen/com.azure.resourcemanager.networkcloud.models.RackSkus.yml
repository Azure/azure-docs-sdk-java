### YamlMime:JavaType
uid: "com.azure.resourcemanager.networkcloud.models.RackSkus"
fullName: "com.azure.resourcemanager.networkcloud.models.RackSkus"
name: "RackSkus"
nameWithType: "RackSkus"
summary: "Resource collection API of Rack<wbr>Skus."
syntax: "public interface **RackSkus**"
methods:
- uid: "com.azure.resourcemanager.networkcloud.models.RackSkus.get(java.lang.String)"
  fullName: "com.azure.resourcemanager.networkcloud.models.RackSkus.get(String rackSkuName)"
  name: "get(String rackSkuName)"
  nameWithType: "RackSkus.get(String rackSkuName)"
  summary: "Retrieve the rack SKU."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the rack SKU."
    name: "rackSkuName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract RackSku get(String rackSkuName)"
  desc: "Retrieve the rack SKU.\n\nGet the properties of the provided rack SKU."
  returns:
    description: "the properties of the provided rack SKU."
    type: "<xref href=\"com.azure.resourcemanager.networkcloud.models.RackSku?alt=com.azure.resourcemanager.networkcloud.models.RackSku&text=RackSku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.networkcloud.models.RackSkus.getWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.networkcloud.models.RackSkus.getWithResponse(String rackSkuName, Context context)"
  name: "getWithResponse(String rackSkuName, Context context)"
  nameWithType: "RackSkus.getWithResponse(String rackSkuName, Context context)"
  summary: "Retrieve the rack SKU."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the rack SKU."
    name: "rackSkuName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<RackSku> getWithResponse(String rackSkuName, Context context)"
  desc: "Retrieve the rack SKU.\n\nGet the properties of the provided rack SKU."
  returns:
    description: "the properties of the provided rack SKU along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.networkcloud.models.RackSku?alt=com.azure.resourcemanager.networkcloud.models.RackSku&text=RackSku\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.networkcloud.models.RackSkus.list()"
  fullName: "com.azure.resourcemanager.networkcloud.models.RackSkus.list()"
  name: "list()"
  nameWithType: "RackSkus.list()"
  summary: "List rack SKUs in the subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<RackSku> list()"
  desc: "List rack SKUs in the subscription.\n\nGet a list of rack SKUs in the provided subscription."
  returns:
    description: "a list of rack SKUs in the provided subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.networkcloud.models.RackSku?alt=com.azure.resourcemanager.networkcloud.models.RackSku&text=RackSku\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.networkcloud.models.RackSkus.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.networkcloud.models.RackSkus.list(Context context)"
  name: "list(Context context)"
  nameWithType: "RackSkus.list(Context context)"
  summary: "List rack SKUs in the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RackSku> list(Context context)"
  desc: "List rack SKUs in the subscription.\n\nGet a list of rack SKUs in the provided subscription."
  returns:
    description: "a list of rack SKUs in the provided subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.networkcloud.models.RackSku?alt=com.azure.resourcemanager.networkcloud.models.RackSku&text=RackSku\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of RackSkus."
metadata: {}
package: "com.azure.resourcemanager.networkcloud.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-networkcloud:1.0.0-beta.2
