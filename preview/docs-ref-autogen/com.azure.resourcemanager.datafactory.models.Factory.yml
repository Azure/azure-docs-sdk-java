### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.Factory"
fullName: "com.azure.resourcemanager.datafactory.models.Factory"
name: "Factory"
nameWithType: "Factory"
summary: "An immutable client-side representation of Factory."
syntax: "public interface Factory"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.Factory.additionalProperties()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.additionalProperties()"
  name: "additionalProperties()"
  nameWithType: "Factory.additionalProperties()"
  summary: "Gets the additional<wbr>Properties property: Factory resource type."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,Object> additionalProperties()"
  desc: "Gets the additionalProperties property: Factory resource type."
  returns:
    description: "the additionalProperties value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.createTime()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.createTime()"
  name: "createTime()"
  nameWithType: "Factory.createTime()"
  summary: "Gets the create<wbr>Time property: Time the factory was created in ISO8601 format."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime createTime()"
  desc: "Gets the createTime property: Time the factory was created in ISO8601 format."
  returns:
    description: "the createTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.encryption()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.encryption()"
  name: "encryption()"
  nameWithType: "Factory.encryption()"
  summary: "Gets the encryption property: Properties to enable Customer Managed Key for the factory."
  modifiers:
  - "abstract"
  syntax: "public abstract EncryptionConfiguration encryption()"
  desc: "Gets the encryption property: Properties to enable Customer Managed Key for the factory."
  returns:
    description: "the encryption value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.EncryptionConfiguration?alt=com.azure.resourcemanager.datafactory.models.EncryptionConfiguration&text=EncryptionConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.etag()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.etag()"
  name: "etag()"
  nameWithType: "Factory.etag()"
  summary: "Gets the etag property: Etag identifies change in the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String etag()"
  desc: "Gets the etag property: Etag identifies change in the resource."
  returns:
    description: "the etag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.getDataPlaneAccess(com.azure.resourcemanager.datafactory.models.UserAccessPolicy)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.getDataPlaneAccess(UserAccessPolicy policy)"
  name: "getDataPlaneAccess(UserAccessPolicy policy)"
  nameWithType: "Factory.getDataPlaneAccess(UserAccessPolicy policy)"
  summary: "Get Data Plane access."
  modifiers:
  - "abstract"
  parameters:
  - description: "Data Plane user access policy definition."
    name: "policy"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.UserAccessPolicy?alt=com.azure.resourcemanager.datafactory.models.UserAccessPolicy&text=UserAccessPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AccessPolicyResponse getDataPlaneAccess(UserAccessPolicy policy)"
  desc: "Get Data Plane access."
  returns:
    description: "data Plane access."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AccessPolicyResponse?alt=com.azure.resourcemanager.datafactory.models.AccessPolicyResponse&text=AccessPolicyResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.getDataPlaneAccessWithResponse(com.azure.resourcemanager.datafactory.models.UserAccessPolicy,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.getDataPlaneAccessWithResponse(UserAccessPolicy policy, Context context)"
  name: "getDataPlaneAccessWithResponse(UserAccessPolicy policy, Context context)"
  nameWithType: "Factory.getDataPlaneAccessWithResponse(UserAccessPolicy policy, Context context)"
  summary: "Get Data Plane access."
  modifiers:
  - "abstract"
  parameters:
  - description: "Data Plane user access policy definition."
    name: "policy"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.UserAccessPolicy?alt=com.azure.resourcemanager.datafactory.models.UserAccessPolicy&text=UserAccessPolicy\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<AccessPolicyResponse> getDataPlaneAccessWithResponse(UserAccessPolicy policy, Context context)"
  desc: "Get Data Plane access."
  returns:
    description: "data Plane access along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.AccessPolicyResponse?alt=com.azure.resourcemanager.datafactory.models.AccessPolicyResponse&text=AccessPolicyResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.getGitHubAccessToken(com.azure.resourcemanager.datafactory.models.GitHubAccessTokenRequest)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.getGitHubAccessToken(GitHubAccessTokenRequest gitHubAccessTokenRequest)"
  name: "getGitHubAccessToken(GitHubAccessTokenRequest gitHubAccessTokenRequest)"
  nameWithType: "Factory.getGitHubAccessToken(GitHubAccessTokenRequest gitHubAccessTokenRequest)"
  summary: "Get Git<wbr>Hub Access Token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Get GitHub access token request definition."
    name: "gitHubAccessTokenRequest"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GitHubAccessTokenRequest?alt=com.azure.resourcemanager.datafactory.models.GitHubAccessTokenRequest&text=GitHubAccessTokenRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract GitHubAccessTokenResponse getGitHubAccessToken(GitHubAccessTokenRequest gitHubAccessTokenRequest)"
  desc: "Get GitHub Access Token."
  returns:
    description: "gitHub Access Token."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GitHubAccessTokenResponse?alt=com.azure.resourcemanager.datafactory.models.GitHubAccessTokenResponse&text=GitHubAccessTokenResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.getGitHubAccessTokenWithResponse(com.azure.resourcemanager.datafactory.models.GitHubAccessTokenRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.getGitHubAccessTokenWithResponse(GitHubAccessTokenRequest gitHubAccessTokenRequest, Context context)"
  name: "getGitHubAccessTokenWithResponse(GitHubAccessTokenRequest gitHubAccessTokenRequest, Context context)"
  nameWithType: "Factory.getGitHubAccessTokenWithResponse(GitHubAccessTokenRequest gitHubAccessTokenRequest, Context context)"
  summary: "Get Git<wbr>Hub Access Token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Get GitHub access token request definition."
    name: "gitHubAccessTokenRequest"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GitHubAccessTokenRequest?alt=com.azure.resourcemanager.datafactory.models.GitHubAccessTokenRequest&text=GitHubAccessTokenRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<GitHubAccessTokenResponse> getGitHubAccessTokenWithResponse(GitHubAccessTokenRequest gitHubAccessTokenRequest, Context context)"
  desc: "Get GitHub Access Token."
  returns:
    description: "gitHub Access Token along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.GitHubAccessTokenResponse?alt=com.azure.resourcemanager.datafactory.models.GitHubAccessTokenResponse&text=GitHubAccessTokenResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.globalParameters()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.globalParameters()"
  name: "globalParameters()"
  nameWithType: "Factory.globalParameters()"
  summary: "Gets the global<wbr>Parameters property: List of parameters for factory."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,GlobalParameterSpecification> globalParameters()"
  desc: "Gets the globalParameters property: List of parameters for factory."
  returns:
    description: "the globalParameters value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.GlobalParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.GlobalParameterSpecification&text=GlobalParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.id()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.id()"
  name: "id()"
  nameWithType: "Factory.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.identity()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.identity()"
  name: "identity()"
  nameWithType: "Factory.identity()"
  summary: "Gets the identity property: Managed service identity of the factory."
  modifiers:
  - "abstract"
  syntax: "public abstract FactoryIdentity identity()"
  desc: "Gets the identity property: Managed service identity of the factory."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.FactoryIdentity?alt=com.azure.resourcemanager.datafactory.models.FactoryIdentity&text=FactoryIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.innerModel()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.innerModel()"
  name: "innerModel()"
  nameWithType: "Factory.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>datafactory.<wbr>fluent.<wbr>models.<wbr>Factory<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract FactoryInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.datafactory.fluent.models.FactoryInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FactoryInner?alt=com.azure.resourcemanager.datafactory.fluent.models.FactoryInner&text=FactoryInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.location()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.location()"
  name: "location()"
  nameWithType: "Factory.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  desc: "Gets the location property: The geo-location where the resource lives."
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.name()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.name()"
  name: "name()"
  nameWithType: "Factory.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.provisioningState()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.provisioningState()"
  name: "provisioningState()"
  nameWithType: "Factory.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: Factory provisioning state, example Succeeded."
  modifiers:
  - "abstract"
  syntax: "public abstract String provisioningState()"
  desc: "Gets the provisioningState property: Factory provisioning state, example Succeeded."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "Factory.publicNetworkAccess()"
  summary: "Gets the public<wbr>Network<wbr>Access property: Whether or not public network access is allowed for the data factory."
  modifiers:
  - "abstract"
  syntax: "public abstract PublicNetworkAccess publicNetworkAccess()"
  desc: "Gets the publicNetworkAccess property: Whether or not public network access is allowed for the data factory."
  returns:
    description: "the publicNetworkAccess value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PublicNetworkAccess?alt=com.azure.resourcemanager.datafactory.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.purviewConfiguration()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.purviewConfiguration()"
  name: "purviewConfiguration()"
  nameWithType: "Factory.purviewConfiguration()"
  summary: "Gets the purview<wbr>Configuration property: Purview information of the factory."
  modifiers:
  - "abstract"
  syntax: "public abstract PurviewConfiguration purviewConfiguration()"
  desc: "Gets the purviewConfiguration property: Purview information of the factory."
  returns:
    description: "the purviewConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PurviewConfiguration?alt=com.azure.resourcemanager.datafactory.models.PurviewConfiguration&text=PurviewConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.refresh()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.refresh()"
  name: "refresh()"
  nameWithType: "Factory.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract Factory refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Factory?alt=com.azure.resourcemanager.datafactory.models.Factory&text=Factory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "Factory.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Factory refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Factory?alt=com.azure.resourcemanager.datafactory.models.Factory&text=Factory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.region()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.region()"
  name: "region()"
  nameWithType: "Factory.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  desc: "Gets the region of the resource."
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.regionName()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.regionName()"
  name: "regionName()"
  nameWithType: "Factory.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  desc: "Gets the name of the resource region."
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.repoConfiguration()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.repoConfiguration()"
  name: "repoConfiguration()"
  nameWithType: "Factory.repoConfiguration()"
  summary: "Gets the repo<wbr>Configuration property: Git repo information of the factory."
  modifiers:
  - "abstract"
  syntax: "public abstract FactoryRepoConfiguration repoConfiguration()"
  desc: "Gets the repoConfiguration property: Git repo information of the factory."
  returns:
    description: "the repoConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.FactoryRepoConfiguration?alt=com.azure.resourcemanager.datafactory.models.FactoryRepoConfiguration&text=FactoryRepoConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.resourceGroupName()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "Factory.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  desc: "Gets the name of the resource group."
  returns:
    description: "the name of the resource group."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.tags()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.tags()"
  name: "tags()"
  nameWithType: "Factory.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  desc: "Gets the tags property: Resource tags."
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.type()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.type()"
  name: "type()"
  nameWithType: "Factory.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.update()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.update()"
  name: "update()"
  nameWithType: "Factory.update()"
  summary: "Begins update for the Factory resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Factory.Update update()"
  desc: "Begins update for the Factory resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Factory.Update?alt=com.azure.resourcemanager.datafactory.models.Factory.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factory.version()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factory.version()"
  name: "version()"
  nameWithType: "Factory.version()"
  summary: "Gets the version property: Version of the factory."
  modifiers:
  - "abstract"
  syntax: "public abstract String version()"
  desc: "Gets the version property: Version of the factory."
  returns:
    description: "the version value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of Factory."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
