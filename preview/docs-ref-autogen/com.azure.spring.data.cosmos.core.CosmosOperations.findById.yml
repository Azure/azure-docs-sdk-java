### YamlMime:JavaMember
uid: "com.azure.spring.data.cosmos.core.CosmosOperations.findById*"
fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>findById"
name: "<T>findById"
nameWithType: "CosmosOperations.<T>findById"
members:
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>findById(java.lang.Object,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>findById(Object id, Class<T> domainType)"
  name: "<T>findById(Object id, Class<T> domainType)"
  nameWithType: "CosmosOperations.<T>findById(Object id, Class<T> domainType)"
  summary: "Finds item by id"
  parameters:
  - description: "must not be null"
    name: "id"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - description: "must not be null"
    name: "domainType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract T <T>findById(Object id, Class<T> domainType)"
  returns:
    description: "found item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>findById(java.lang.Object,java.lang.Class<T>,com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>findById(Object id, Class<T> domainType, PartitionKey partitionKey)"
  name: "<T>findById(Object id, Class<T> domainType, PartitionKey partitionKey)"
  nameWithType: "CosmosOperations.<T>findById(Object id, Class<T> domainType, PartitionKey partitionKey)"
  summary: "Finds item by id"
  parameters:
  - description: "must not be null"
    name: "id"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - description: "must not be null"
    name: "domainType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "must not be null"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T <T>findById(Object id, Class<T> domainType, PartitionKey partitionKey)"
  returns:
    description: "found item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>findById(java.lang.String,java.lang.Object,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>findById(String containerName, Object id, Class<T> domainType)"
  name: "<T>findById(String containerName, Object id, Class<T> domainType)"
  nameWithType: "CosmosOperations.<T>findById(String containerName, Object id, Class<T> domainType)"
  summary: "Finds item by id"
  parameters:
  - description: "must not be null"
    name: "containerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "must not be null"
    name: "id"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - description: "must not be null"
    name: "domainType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract T <T>findById(String containerName, Object id, Class<T> domainType)"
  returns:
    description: "found item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.spring.data.cosmos.core"
artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
