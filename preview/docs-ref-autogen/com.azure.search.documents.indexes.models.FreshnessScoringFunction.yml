### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.FreshnessScoringFunction"
fullName: "com.azure.search.documents.indexes.models.FreshnessScoringFunction"
name: "FreshnessScoringFunction"
nameWithType: "FreshnessScoringFunction"
summary: "Defines a function that boosts scores based on the value of a date-time field."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.search.documents.indexes.models.ScoringFunction?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.search.documents.indexes.models.ScoringFunction.getBoost()"
- "com.azure.search.documents.indexes.models.ScoringFunction.getFieldName()"
- "com.azure.search.documents.indexes.models.ScoringFunction.getInterpolation()"
- "com.azure.search.documents.indexes.models.ScoringFunction.setInterpolation(com.azure.search.documents.indexes.models.ScoringFunctionInterpolation)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class FreshnessScoringFunction extends ScoringFunction"
constructors:
- uid: "com.azure.search.documents.indexes.models.FreshnessScoringFunction.FreshnessScoringFunction(java.lang.String,double,com.azure.search.documents.indexes.models.FreshnessScoringParameters)"
  fullName: "com.azure.search.documents.indexes.models.FreshnessScoringFunction.FreshnessScoringFunction(String fieldName, double boost, FreshnessScoringParameters parameters)"
  name: "FreshnessScoringFunction(String fieldName, double boost, FreshnessScoringParameters parameters)"
  nameWithType: "FreshnessScoringFunction.FreshnessScoringFunction(String fieldName, double boost, FreshnessScoringParameters parameters)"
  summary: "Creates an instance of Freshness<wbr>Scoring<wbr>Function class."
  parameters:
  - description: "the fieldName value to set."
    name: "fieldName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the boost value to set."
    name: "boost"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
  - description: "the parameters value to set."
    name: "parameters"
    type: "<xref href=\"com.azure.search.documents.indexes.models.FreshnessScoringParameters?alt=com.azure.search.documents.indexes.models.FreshnessScoringParameters&text=FreshnessScoringParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FreshnessScoringFunction(String fieldName, double boost, FreshnessScoringParameters parameters)"
  desc: "Creates an instance of FreshnessScoringFunction class."
methods:
- uid: "com.azure.search.documents.indexes.models.FreshnessScoringFunction.getParameters()"
  fullName: "com.azure.search.documents.indexes.models.FreshnessScoringFunction.getParameters()"
  name: "getParameters()"
  nameWithType: "FreshnessScoringFunction.getParameters()"
  summary: "Get the parameters property: Parameter values for the freshness scoring function."
  syntax: "public FreshnessScoringParameters getParameters()"
  desc: "Get the parameters property: Parameter values for the freshness scoring function."
  returns:
    description: "the parameters value."
    type: "<xref href=\"com.azure.search.documents.indexes.models.FreshnessScoringParameters?alt=com.azure.search.documents.indexes.models.FreshnessScoringParameters&text=FreshnessScoringParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.FreshnessScoringFunction.setInterpolation(com.azure.search.documents.indexes.models.ScoringFunctionInterpolation)"
  fullName: "com.azure.search.documents.indexes.models.FreshnessScoringFunction.setInterpolation(ScoringFunctionInterpolation interpolation)"
  name: "setInterpolation(ScoringFunctionInterpolation interpolation)"
  nameWithType: "FreshnessScoringFunction.setInterpolation(ScoringFunctionInterpolation interpolation)"
  summary: "Set the interpolation property: A value indicating how boosting will be interpolated across document scores; defaults to \"Linear\"."
  overridden: "com.azure.search.documents.indexes.models.ScoringFunction.setInterpolation(com.azure.search.documents.indexes.models.ScoringFunctionInterpolation)"
  parameters:
  - name: "interpolation"
    type: "<xref href=\"com.azure.search.documents.indexes.models.ScoringFunctionInterpolation?alt=com.azure.search.documents.indexes.models.ScoringFunctionInterpolation&text=ScoringFunctionInterpolation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FreshnessScoringFunction setInterpolation(ScoringFunctionInterpolation interpolation)"
  desc: "Set the interpolation property: A value indicating how boosting will be interpolated across document scores; defaults to \"Linear\"."
  returns:
    type: "<xref href=\"com.azure.search.documents.indexes.models.FreshnessScoringFunction?alt=com.azure.search.documents.indexes.models.FreshnessScoringFunction&text=FreshnessScoringFunction\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Defines a function that boosts scores based on the value of a date-time field."
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.5.0-beta.12
