### YamlMime:ManagedReference
items:
- uid: com.azure.data.schemaregistry.AbstractDataSerializer
  id: AbstractDataSerializer
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry
  children:
  - com.azure.data.schemaregistry.AbstractDataSerializer.AUTO_REGISTER_SCHEMAS_DEFAULT
  - com.azure.data.schemaregistry.AbstractDataSerializer.AbstractDataSerializer()
  - com.azure.data.schemaregistry.AbstractDataSerializer.AbstractDataSerializer(com.azure.data.schemaregistry.client.SchemaRegistryClient)
  - com.azure.data.schemaregistry.AbstractDataSerializer.SCHEMA_GROUP_DEFAULT
  - com.azure.data.schemaregistry.AbstractDataSerializer.autoRegisterSchemas
  - com.azure.data.schemaregistry.AbstractDataSerializer.byteEncoder
  - com.azure.data.schemaregistry.AbstractDataSerializer.schemaGroup
  - com.azure.data.schemaregistry.AbstractDataSerializer.schemaType
  - com.azure.data.schemaregistry.AbstractDataSerializer.serializeImpl(java.lang.Object)
  - com.azure.data.schemaregistry.AbstractDataSerializer.setByteEncoder(com.azure.data.schemaregistry.ByteEncoder)
  langs:
  - java
  name: AbstractDataSerializer
  nameWithType: AbstractDataSerializer
  fullName: com.azure.data.schemaregistry.AbstractDataSerializer
  type: Class
  package: com.azure.data.schemaregistry
  summary: Common implementation for all registry-based serializers.
  syntax:
    content: public abstract class AbstractDataSerializer extends AbstractDataSerDe
  inheritance:
  - java.lang.Object
  - com.azure.data.schemaregistry.AbstractDataSerDe
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.data.schemaregistry.AbstractDataSerializer.AUTO_REGISTER_SCHEMAS_DEFAULT
  id: AUTO_REGISTER_SCHEMAS_DEFAULT
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.AbstractDataSerializer
  langs:
  - java
  name: AUTO_REGISTER_SCHEMAS_DEFAULT
  nameWithType: AbstractDataSerializer.AUTO_REGISTER_SCHEMAS_DEFAULT
  fullName: com.azure.data.schemaregistry.AbstractDataSerializer.AUTO_REGISTER_SCHEMAS_DEFAULT
  type: Field
  package: com.azure.data.schemaregistry
  syntax:
    content: public static final Boolean AUTO_REGISTER_SCHEMAS_DEFAULT
    return:
      type: java.lang.Boolean
- uid: com.azure.data.schemaregistry.AbstractDataSerializer.AbstractDataSerializer()
  id: AbstractDataSerializer()
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.AbstractDataSerializer
  langs:
  - java
  name: AbstractDataSerializer()
  nameWithType: AbstractDataSerializer.AbstractDataSerializer()
  fullName: com.azure.data.schemaregistry.AbstractDataSerializer.AbstractDataSerializer()
  overload: com.azure.data.schemaregistry.AbstractDataSerializer.AbstractDataSerializer*
  type: Constructor
  package: com.azure.data.schemaregistry
  summary: Special case constructor for Kafka serializer.
  syntax:
    content: public AbstractDataSerializer()
- uid: com.azure.data.schemaregistry.AbstractDataSerializer.AbstractDataSerializer(com.azure.data.schemaregistry.client.SchemaRegistryClient)
  id: AbstractDataSerializer(com.azure.data.schemaregistry.client.SchemaRegistryClient)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.AbstractDataSerializer
  langs:
  - java
  name: AbstractDataSerializer(SchemaRegistryClient schemaRegistryClient)
  nameWithType: AbstractDataSerializer.AbstractDataSerializer(SchemaRegistryClient schemaRegistryClient)
  fullName: com.azure.data.schemaregistry.AbstractDataSerializer.AbstractDataSerializer(SchemaRegistryClient schemaRegistryClient)
  overload: com.azure.data.schemaregistry.AbstractDataSerializer.AbstractDataSerializer*
  type: Constructor
  package: com.azure.data.schemaregistry
  syntax:
    content: public AbstractDataSerializer(SchemaRegistryClient schemaRegistryClient)
    parameters:
    - id: schemaRegistryClient
      type: com.azure.data.schemaregistry.client.SchemaRegistryClient
      description: registry client to be used for storing schemas.  Not null.
- uid: com.azure.data.schemaregistry.AbstractDataSerializer.SCHEMA_GROUP_DEFAULT
  id: SCHEMA_GROUP_DEFAULT
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.AbstractDataSerializer
  langs:
  - java
  name: SCHEMA_GROUP_DEFAULT
  nameWithType: AbstractDataSerializer.SCHEMA_GROUP_DEFAULT
  fullName: com.azure.data.schemaregistry.AbstractDataSerializer.SCHEMA_GROUP_DEFAULT
  type: Field
  package: com.azure.data.schemaregistry
  syntax:
    content: public static final String SCHEMA_GROUP_DEFAULT
    return:
      type: java.lang.String
- uid: com.azure.data.schemaregistry.AbstractDataSerializer.autoRegisterSchemas
  id: autoRegisterSchemas
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.AbstractDataSerializer
  langs:
  - java
  name: autoRegisterSchemas
  nameWithType: AbstractDataSerializer.autoRegisterSchemas
  fullName: com.azure.data.schemaregistry.AbstractDataSerializer.autoRegisterSchemas
  type: Field
  package: com.azure.data.schemaregistry
  syntax:
    content: protected Boolean autoRegisterSchemas
    return:
      type: java.lang.Boolean
- uid: com.azure.data.schemaregistry.AbstractDataSerializer.byteEncoder
  id: byteEncoder
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.AbstractDataSerializer
  langs:
  - java
  name: byteEncoder
  nameWithType: AbstractDataSerializer.byteEncoder
  fullName: com.azure.data.schemaregistry.AbstractDataSerializer.byteEncoder
  type: Field
  package: com.azure.data.schemaregistry
  syntax:
    content: protected ByteEncoder byteEncoder
    return:
      type: com.azure.data.schemaregistry.ByteEncoder
- uid: com.azure.data.schemaregistry.AbstractDataSerializer.schemaGroup
  id: schemaGroup
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.AbstractDataSerializer
  langs:
  - java
  name: schemaGroup
  nameWithType: AbstractDataSerializer.schemaGroup
  fullName: com.azure.data.schemaregistry.AbstractDataSerializer.schemaGroup
  type: Field
  package: com.azure.data.schemaregistry
  syntax:
    content: protected String schemaGroup
    return:
      type: java.lang.String
- uid: com.azure.data.schemaregistry.AbstractDataSerializer.schemaType
  id: schemaType
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.AbstractDataSerializer
  langs:
  - java
  name: schemaType
  nameWithType: AbstractDataSerializer.schemaType
  fullName: com.azure.data.schemaregistry.AbstractDataSerializer.schemaType
  type: Field
  package: com.azure.data.schemaregistry
  syntax:
    content: protected String schemaType
    return:
      type: java.lang.String
- uid: com.azure.data.schemaregistry.AbstractDataSerializer.serializeImpl(java.lang.Object)
  id: serializeImpl(java.lang.Object)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.AbstractDataSerializer
  langs:
  - java
  name: serializeImpl(Object object)
  nameWithType: AbstractDataSerializer.serializeImpl(Object object)
  fullName: com.azure.data.schemaregistry.AbstractDataSerializer.serializeImpl(Object object)
  overload: com.azure.data.schemaregistry.AbstractDataSerializer.serializeImpl*
  type: Method
  package: com.azure.data.schemaregistry
  summary: Core implementation of registry-based serialization. ID for data schema is fetched from the registry and prefixed to the encoded byte array representation of the object param.
  syntax:
    content: protected byte[] serializeImpl(Object object)
    parameters:
    - id: object
      type: java.lang.Object
      description: object to be serialized
    return:
      type: byte[]
      description: byte array containing encoded bytes with prefixed schema ID
- uid: com.azure.data.schemaregistry.AbstractDataSerializer.setByteEncoder(com.azure.data.schemaregistry.ByteEncoder)
  id: setByteEncoder(com.azure.data.schemaregistry.ByteEncoder)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.AbstractDataSerializer
  langs:
  - java
  name: setByteEncoder(ByteEncoder byteEncoder)
  nameWithType: AbstractDataSerializer.setByteEncoder(ByteEncoder byteEncoder)
  fullName: com.azure.data.schemaregistry.AbstractDataSerializer.setByteEncoder(ByteEncoder byteEncoder)
  overload: com.azure.data.schemaregistry.AbstractDataSerializer.setByteEncoder*
  type: Method
  package: com.azure.data.schemaregistry
  summary: Set ByteEncoder class to be used for serialized objects into bytes
  syntax:
    content: protected void setByteEncoder(ByteEncoder byteEncoder)
    parameters:
    - id: byteEncoder
      type: com.azure.data.schemaregistry.ByteEncoder
      description: ByteEncoder instance
references:
- uid: com.azure.data.schemaregistry.client.SchemaRegistryClient
  name: SchemaRegistryClient
  nameWithType: SchemaRegistryClient
  fullName: com.azure.data.schemaregistry.client.SchemaRegistryClient
- uid: com.azure.data.schemaregistry.AbstractDataSerializer.AbstractDataSerializer*
  name: AbstractDataSerializer
  nameWithType: AbstractDataSerializer.AbstractDataSerializer
  fullName: com.azure.data.schemaregistry.AbstractDataSerializer.AbstractDataSerializer
  package: com.azure.data.schemaregistry
- uid: com.azure.data.schemaregistry.ByteEncoder
  name: ByteEncoder
  nameWithType: ByteEncoder
  fullName: com.azure.data.schemaregistry.ByteEncoder
- uid: com.azure.data.schemaregistry.AbstractDataSerializer.setByteEncoder*
  name: setByteEncoder
  nameWithType: AbstractDataSerializer.setByteEncoder
  fullName: com.azure.data.schemaregistry.AbstractDataSerializer.setByteEncoder
  package: com.azure.data.schemaregistry
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.azure.data.schemaregistry.AbstractDataSerializer.serializeImpl*
  name: serializeImpl
  nameWithType: AbstractDataSerializer.serializeImpl
  fullName: com.azure.data.schemaregistry.AbstractDataSerializer.serializeImpl
  package: com.azure.data.schemaregistry
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.data.schemaregistry.AbstractDataSerDe
  name: AbstractDataSerDe
  nameWithType: AbstractDataSerDe
  fullName: com.azure.data.schemaregistry.AbstractDataSerDe
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
