### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.asDescendingMapOfRanges*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.asDescendingMapOfRanges"
name: "asDescendingMapOfRanges"
nameWithType: "ImmutableRangeMap<K,V>.asDescendingMapOfRanges"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.asDescendingMapOfRanges()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.asDescendingMapOfRanges()"
  name: "asDescendingMapOfRanges()"
  nameWithType: "ImmutableRangeMap<K,V>.asDescendingMapOfRanges()"
  summary: "Returns a view of this range map as an unmodifiable `Map, V>`. Modifications to this range map are guaranteed to read through to the returned `Map`.\n\nThe returned `Map` iterates over entries in descending order of the bounds of the `Range` entries.\n\nIt is guaranteed that no empty ranges will be in the returned `Map`."
  syntax: "public ImmutableMap<Range<K>,V> asDescendingMapOfRanges()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableMap?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableMap&text=ImmutableMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.guava25.collect.Range?alt=com.azure.cosmos.implementation.guava25.collect.Range&text=Range\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
