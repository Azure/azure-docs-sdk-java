### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.deser.std.MapDeserializer.isCachable*"
fullName: "com.fasterxml.jackson.databind.deser.std.MapDeserializer.isCachable"
name: "isCachable"
nameWithType: "MapDeserializer.isCachable"
members:
- uid: "com.fasterxml.jackson.databind.deser.std.MapDeserializer.isCachable()"
  fullName: "com.fasterxml.jackson.databind.deser.std.MapDeserializer.isCachable()"
  name: "isCachable()"
  nameWithType: "MapDeserializer.isCachable()"
  summary: "Turns out that these are expensive enough to create so that caching does make sense.\n\nIMPORTANT: but, note, that instances CAN NOT BE CACHED if there is a value type deserializer; this caused an issue with 2.4.4 of JAXB Annotations (failing a test). It is also possible that some other settings could make deserializers un-cacheable; but on the other hand, caching can make a big positive difference with performance... so it's a hard choice."
  overridden: "com.fasterxml.jackson.databind.JsonDeserializer.isCachable()"
  syntax: "public boolean isCachable()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.deser.std"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
