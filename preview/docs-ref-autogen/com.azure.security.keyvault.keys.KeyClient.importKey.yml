### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.KeyClient.importKey*"
fullName: "com.azure.security.keyvault.keys.KeyClient.importKey"
name: "importKey"
nameWithType: "KeyClient.importKey"
members:
- uid: "com.azure.security.keyvault.keys.KeyClient.importKey(com.azure.security.keyvault.keys.models.ImportKeyOptions)"
  fullName: "com.azure.security.keyvault.keys.KeyClient.importKey(ImportKeyOptions importKeyOptions)"
  name: "importKey(ImportKeyOptions importKeyOptions)"
  nameWithType: "KeyClient.importKey(ImportKeyOptions importKeyOptions)"
  summary: "Imports an externally created key and stores it in key vault. The import key operation may be used to import any key type into the Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the `keys/import` permission.\n\nThe `keyImportOptions` is required and its fields <xref uid=\"com.azure.security.keyvault.keys.models.ImportKeyOptions.getName*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"name\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.models.ImportKeyOptions.getKey()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key material\"></xref> cannot be null. The <xref uid=\"com.azure.security.keyvault.keys.models.ImportKeyOptions.getExpiresOn*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"expires\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.models.ImportKeyOptions.getNotBefore*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"notBefore\"></xref> values in `keyImportOptions` are optional. If not specified, no values are set for the fields. The <xref uid=\"com.azure.security.keyvault.keys.models.ImportKeyOptions.isEnabled*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"enabled\"></xref> field is set to true and the <xref uid=\"com.azure.security.keyvault.keys.models.ImportKeyOptions.isHardwareProtected()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"hsm\"></xref> field is set to false by Azure Key Vault, if they are not specified.\n\n**Code Samples**\n\nImports a new key into key vault. Prints out the details of the imported key.\n\n```java\nImportKeyOptions options = new ImportKeyOptions(\"keyName\", jsonWebKeyToImport)\n     .setHardwareProtected(false);\n \n KeyVaultKey importedKeyResponse = keyClient.importKey(options);\n System.out.printf(\"Key is imported with name %s and id %s \\n\", importedKeyResponse.getName(),\n     importedKeyResponse.getId());\n```"
  parameters:
  - description: "The key import configuration object containing information about the json web key\n     being imported."
    name: "importKeyOptions"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.ImportKeyOptions?alt=com.azure.security.keyvault.keys.models.ImportKeyOptions&text=ImportKeyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KeyVaultKey importKey(ImportKeyOptions importKeyOptions)"
  returns:
    description: "The <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"imported key\"></xref>."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.KeyClient.importKey(java.lang.String,com.azure.security.keyvault.keys.models.JsonWebKey)"
  fullName: "com.azure.security.keyvault.keys.KeyClient.importKey(String name, JsonWebKey keyMaterial)"
  name: "importKey(String name, JsonWebKey keyMaterial)"
  nameWithType: "KeyClient.importKey(String name, JsonWebKey keyMaterial)"
  summary: "Imports an externally created key and stores it in key vault. The import key operation may be used to import any key type into the Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the `keys/import` permission.\n\n**Code Samples**\n\nImports a new key into key vault. Prints out the details of the imported key.\n\n```java\nKeyVaultKey importedKey = keyClient.importKey(\"keyName\", jsonWebKeyToImport);\n System.out.printf(\"Key is imported with name %s and id %s \\n\", importedKey.getName(), importedKey.getId());\n```"
  parameters:
  - description: "The name for the imported key."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Json web key being imported."
    name: "keyMaterial"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.JsonWebKey?alt=com.azure.security.keyvault.keys.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KeyVaultKey importKey(String name, JsonWebKey keyMaterial)"
  returns:
    description: "The <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"imported key\"></xref>."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys"
artifact: com.azure:azure-security-keyvault-keys:4.3.0-beta.3
