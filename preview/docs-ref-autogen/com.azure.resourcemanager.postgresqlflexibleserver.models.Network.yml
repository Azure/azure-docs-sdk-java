### YamlMime:JavaType
uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network"
fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network"
name: "Network"
nameWithType: "Network"
summary: "Network properties of a server."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **Network**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Network?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Network&text=Network\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.Network()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.Network()"
  name: "Network()"
  nameWithType: "Network.Network()"
  summary: "Creates an instance of Network class."
  syntax: "public Network()"
  desc: "Creates an instance of Network class."
methods:
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.delegatedSubnetResourceId()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.delegatedSubnetResourceId()"
  name: "delegatedSubnetResourceId()"
  nameWithType: "Network.delegatedSubnetResourceId()"
  summary: "Get the delegated<wbr>Subnet<wbr>Resource<wbr>Id property: Delegated subnet arm resource id."
  syntax: "public String delegatedSubnetResourceId()"
  desc: "Get the delegatedSubnetResourceId property: Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone."
  returns:
    description: "the delegatedSubnetResourceId value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "Network.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Network from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Network fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the Network."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of Network from the JsonReader."
  returns:
    description: "An instance of Network if the JsonReader was pointing to an instance of it, or null if it was pointing to\n JSON null."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Network?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Network&text=Network\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.privateDnsZoneArmResourceId()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.privateDnsZoneArmResourceId()"
  name: "privateDnsZoneArmResourceId()"
  nameWithType: "Network.privateDnsZoneArmResourceId()"
  summary: "Get the private<wbr>Dns<wbr>Zone<wbr>Arm<wbr>Resource<wbr>Id property: Private dns zone arm resource id."
  syntax: "public String privateDnsZoneArmResourceId()"
  desc: "Get the privateDnsZoneArmResourceId property: Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone."
  returns:
    description: "the privateDnsZoneArmResourceId value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "Network.publicNetworkAccess()"
  summary: "Get the public<wbr>Network<wbr>Access property: public network access is enabled or not."
  syntax: "public ServerPublicNetworkAccessState publicNetworkAccess()"
  desc: "Get the publicNetworkAccess property: public network access is enabled or not."
  returns:
    description: "the publicNetworkAccess value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerPublicNetworkAccessState?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerPublicNetworkAccessState&text=ServerPublicNetworkAccessState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "Network.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.validate()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.validate()"
  name: "validate()"
  nameWithType: "Network.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.withDelegatedSubnetResourceId(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.withDelegatedSubnetResourceId(String delegatedSubnetResourceId)"
  name: "withDelegatedSubnetResourceId(String delegatedSubnetResourceId)"
  nameWithType: "Network.withDelegatedSubnetResourceId(String delegatedSubnetResourceId)"
  summary: "Set the delegated<wbr>Subnet<wbr>Resource<wbr>Id property: Delegated subnet arm resource id."
  parameters:
  - description: "the delegatedSubnetResourceId value to set."
    name: "delegatedSubnetResourceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Network withDelegatedSubnetResourceId(String delegatedSubnetResourceId)"
  desc: "Set the delegatedSubnetResourceId property: Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone."
  returns:
    description: "the Network object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Network?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Network&text=Network\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.withPrivateDnsZoneArmResourceId(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.withPrivateDnsZoneArmResourceId(String privateDnsZoneArmResourceId)"
  name: "withPrivateDnsZoneArmResourceId(String privateDnsZoneArmResourceId)"
  nameWithType: "Network.withPrivateDnsZoneArmResourceId(String privateDnsZoneArmResourceId)"
  summary: "Set the private<wbr>Dns<wbr>Zone<wbr>Arm<wbr>Resource<wbr>Id property: Private dns zone arm resource id."
  parameters:
  - description: "the privateDnsZoneArmResourceId value to set."
    name: "privateDnsZoneArmResourceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Network withPrivateDnsZoneArmResourceId(String privateDnsZoneArmResourceId)"
  desc: "Set the privateDnsZoneArmResourceId property: Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone."
  returns:
    description: "the Network object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Network?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Network&text=Network\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.withPublicNetworkAccess(com.azure.resourcemanager.postgresqlflexibleserver.models.ServerPublicNetworkAccessState)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.Network.withPublicNetworkAccess(ServerPublicNetworkAccessState publicNetworkAccess)"
  name: "withPublicNetworkAccess(ServerPublicNetworkAccessState publicNetworkAccess)"
  nameWithType: "Network.withPublicNetworkAccess(ServerPublicNetworkAccessState publicNetworkAccess)"
  summary: "Set the public<wbr>Network<wbr>Access property: public network access is enabled or not."
  parameters:
  - description: "the publicNetworkAccess value to set."
    name: "publicNetworkAccess"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerPublicNetworkAccessState?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerPublicNetworkAccessState&text=ServerPublicNetworkAccessState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Network withPublicNetworkAccess(ServerPublicNetworkAccessState publicNetworkAccess)"
  desc: "Set the publicNetworkAccess property: public network access is enabled or not."
  returns:
    description: "the Network object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Network?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Network&text=Network\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Network properties of a server."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Network?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Network&text=Network\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.postgresqlflexibleserver.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-postgresqlflexibleserver:1.2.0-beta.1
