### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  id: ChangeFeedContextClientImpl
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation
  children:
  - com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.<T>createItem(com.azure.cosmos.CosmosAsyncContainer,T,com.azure.cosmos.models.CosmosItemRequestOptions,boolean)
  - com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.<T>queryItems(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)
  - com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.<T>readItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions,java.lang.Class<T>)
  - com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.<T>replaceItem(java.lang.String,com.azure.cosmos.models.PartitionKey,T,com.azure.cosmos.models.CosmosItemRequestOptions)
  - com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl(com.azure.cosmos.CosmosAsyncContainer)
  - com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl(com.azure.cosmos.CosmosAsyncContainer,reactor.core.scheduler.Scheduler)
  - com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.close()
  - com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.createDocumentChangeFeedQuery(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.implementation.ChangeFeedOptions)
  - com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.deleteItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  - com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getContainerClient()
  - com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getDatabaseClient()
  - com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getServiceEndpoint()
  - com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readContainer(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.CosmosContainerRequestOptions)
  - com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readContainerSettings(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.CosmosContainerRequestOptions)
  - com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readDatabase(com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.models.CosmosDatabaseRequestOptions)
  - com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readPartitionKeyRangeFeed(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)
  langs:
  - java
  name: ChangeFeedContextClientImpl
  nameWithType: ChangeFeedContextClientImpl
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  type: Class
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Implementation for ChangeFeedDocumentClient.
  syntax:
    content: public class ChangeFeedContextClientImpl implements ChangeFeedContextClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.<T>createItem(com.azure.cosmos.CosmosAsyncContainer,T,com.azure.cosmos.models.CosmosItemRequestOptions,boolean)
  id: <T>createItem(com.azure.cosmos.CosmosAsyncContainer,T,com.azure.cosmos.models.CosmosItemRequestOptions,boolean)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  langs:
  - java
  name: <T>createItem(CosmosAsyncContainer containerLink, T document, CosmosItemRequestOptions options, boolean disableAutomaticIdGeneration)
  nameWithType: ChangeFeedContextClientImpl.<T>createItem(CosmosAsyncContainer containerLink, T document, CosmosItemRequestOptions options, boolean disableAutomaticIdGeneration)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.<T>createItem(CosmosAsyncContainer containerLink, T document, CosmosItemRequestOptions options, boolean disableAutomaticIdGeneration)
  overload: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.createItem*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Creates a cosmos item.
  syntax:
    content: public Mono<CosmosItemResponse<T>> <T>createItem(CosmosAsyncContainer containerLink, T document, CosmosItemRequestOptions options, boolean disableAutomaticIdGeneration)
    parameters:
    - id: containerLink
      type: com.azure.cosmos.CosmosAsyncContainer
    - id: document
      type: T
    - id: options
      type: com.azure.cosmos.models.CosmosItemRequestOptions
    - id: disableAutomaticIdGeneration
      type: boolean
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<T>>
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.<T>queryItems(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)
  id: <T>queryItems(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  langs:
  - java
  name: <T>queryItems(CosmosAsyncContainer containerLink, SqlQuerySpec querySpec, CosmosQueryRequestOptions options, Class<T> klass)
  nameWithType: ChangeFeedContextClientImpl.<T>queryItems(CosmosAsyncContainer containerLink, SqlQuerySpec querySpec, CosmosQueryRequestOptions options, Class<T> klass)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.<T>queryItems(CosmosAsyncContainer containerLink, SqlQuerySpec querySpec, CosmosQueryRequestOptions options, Class<T> klass)
  overload: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.queryItems*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Query for items in a container.
  syntax:
    content: public Flux<FeedResponse<T>> <T>queryItems(CosmosAsyncContainer containerLink, SqlQuerySpec querySpec, CosmosQueryRequestOptions options, Class<T> klass)
    parameters:
    - id: containerLink
      type: com.azure.cosmos.CosmosAsyncContainer
    - id: querySpec
      type: com.azure.cosmos.models.SqlQuerySpec
    - id: options
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
    - id: klass
      type: java.lang.Class<T>
    return:
      type: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.<T>readItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions,java.lang.Class<T>)
  id: <T>readItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions,java.lang.Class<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  langs:
  - java
  name: <T>readItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options, Class<T> itemType)
  nameWithType: ChangeFeedContextClientImpl.<T>readItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options, Class<T> itemType)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.<T>readItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options, Class<T> itemType)
  overload: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readItem*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Reads a cosmos item
  syntax:
    content: public Mono<CosmosItemResponse<T>> <T>readItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options, Class<T> itemType)
    parameters:
    - id: itemId
      type: java.lang.String
    - id: partitionKey
      type: com.azure.cosmos.models.PartitionKey
    - id: options
      type: com.azure.cosmos.models.CosmosItemRequestOptions
    - id: itemType
      type: java.lang.Class<T>
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<T>>
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.<T>replaceItem(java.lang.String,com.azure.cosmos.models.PartitionKey,T,com.azure.cosmos.models.CosmosItemRequestOptions)
  id: <T>replaceItem(java.lang.String,com.azure.cosmos.models.PartitionKey,T,com.azure.cosmos.models.CosmosItemRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  langs:
  - java
  name: <T>replaceItem(String itemId, PartitionKey partitionKey, T document, CosmosItemRequestOptions options)
  nameWithType: ChangeFeedContextClientImpl.<T>replaceItem(String itemId, PartitionKey partitionKey, T document, CosmosItemRequestOptions options)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.<T>replaceItem(String itemId, PartitionKey partitionKey, T document, CosmosItemRequestOptions options)
  overload: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.replaceItem*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Replaces a cosmos item.
  syntax:
    content: public Mono<CosmosItemResponse<T>> <T>replaceItem(String itemId, PartitionKey partitionKey, T document, CosmosItemRequestOptions options)
    parameters:
    - id: itemId
      type: java.lang.String
    - id: partitionKey
      type: com.azure.cosmos.models.PartitionKey
    - id: document
      type: T
    - id: options
      type: com.azure.cosmos.models.CosmosItemRequestOptions
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<T>>
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl(com.azure.cosmos.CosmosAsyncContainer)
  id: ChangeFeedContextClientImpl(com.azure.cosmos.CosmosAsyncContainer)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  langs:
  - java
  name: ChangeFeedContextClientImpl(CosmosAsyncContainer cosmosContainer)
  nameWithType: ChangeFeedContextClientImpl.ChangeFeedContextClientImpl(CosmosAsyncContainer cosmosContainer)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl(CosmosAsyncContainer cosmosContainer)
  overload: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl*
  type: Constructor
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Initializes a new instance of the <xref uid="com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient" data-throw-if-not-resolved="false">ChangeFeedContextClient</xref> interface.
  syntax:
    content: public ChangeFeedContextClientImpl(CosmosAsyncContainer cosmosContainer)
    parameters:
    - id: cosmosContainer
      type: com.azure.cosmos.CosmosAsyncContainer
      description: existing client.
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl(com.azure.cosmos.CosmosAsyncContainer,reactor.core.scheduler.Scheduler)
  id: ChangeFeedContextClientImpl(com.azure.cosmos.CosmosAsyncContainer,reactor.core.scheduler.Scheduler)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  langs:
  - java
  name: ChangeFeedContextClientImpl(CosmosAsyncContainer cosmosContainer, Scheduler rxScheduler)
  nameWithType: ChangeFeedContextClientImpl.ChangeFeedContextClientImpl(CosmosAsyncContainer cosmosContainer, Scheduler rxScheduler)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl(CosmosAsyncContainer cosmosContainer, Scheduler rxScheduler)
  overload: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl*
  type: Constructor
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Initializes a new instance of the <xref uid="com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient" data-throw-if-not-resolved="false">ChangeFeedContextClient</xref> interface.
  syntax:
    content: public ChangeFeedContextClientImpl(CosmosAsyncContainer cosmosContainer, Scheduler rxScheduler)
    parameters:
    - id: cosmosContainer
      type: com.azure.cosmos.CosmosAsyncContainer
      description: existing client.
    - id: rxScheduler
      type: reactor.core.scheduler.Scheduler
      description: the RX Java scheduler to observe on.
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.close()
  id: close()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  langs:
  - java
  name: close()
  nameWithType: ChangeFeedContextClientImpl.close()
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.close()
  overload: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.close*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Closes the document client instance and cleans up the resources.
  syntax:
    content: public void close()
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.createDocumentChangeFeedQuery(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.implementation.ChangeFeedOptions)
  id: createDocumentChangeFeedQuery(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.implementation.ChangeFeedOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  langs:
  - java
  name: createDocumentChangeFeedQuery(CosmosAsyncContainer collectionLink, ChangeFeedOptions feedOptions)
  nameWithType: ChangeFeedContextClientImpl.createDocumentChangeFeedQuery(CosmosAsyncContainer collectionLink, ChangeFeedOptions feedOptions)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.createDocumentChangeFeedQuery(CosmosAsyncContainer collectionLink, ChangeFeedOptions feedOptions)
  overload: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.createDocumentChangeFeedQuery*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Method to create a change feed query for documents.
  syntax:
    content: public Flux<FeedResponse<JsonNode>> createDocumentChangeFeedQuery(CosmosAsyncContainer collectionLink, ChangeFeedOptions feedOptions)
    parameters:
    - id: collectionLink
      type: com.azure.cosmos.CosmosAsyncContainer
    - id: feedOptions
      type: com.azure.cosmos.implementation.ChangeFeedOptions
    return:
      type: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<com.fasterxml.jackson.databind.JsonNode>>
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.deleteItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  id: deleteItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  langs:
  - java
  name: deleteItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options)
  nameWithType: ChangeFeedContextClientImpl.deleteItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.deleteItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options)
  overload: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.deleteItem*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: DELETE a cosmos item.
  syntax:
    content: public Mono<CosmosItemResponse<Object>> deleteItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions options)
    parameters:
    - id: itemId
      type: java.lang.String
    - id: partitionKey
      type: com.azure.cosmos.models.PartitionKey
    - id: options
      type: com.azure.cosmos.models.CosmosItemRequestOptions
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<java.lang.Object>>
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getContainerClient()
  id: getContainerClient()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  langs:
  - java
  name: getContainerClient()
  nameWithType: ChangeFeedContextClientImpl.getContainerClient()
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getContainerClient()
  overload: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getContainerClient*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  syntax:
    content: public CosmosAsyncContainer getContainerClient()
    return:
      type: com.azure.cosmos.CosmosAsyncContainer
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getDatabaseClient()
  id: getDatabaseClient()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  langs:
  - java
  name: getDatabaseClient()
  nameWithType: ChangeFeedContextClientImpl.getDatabaseClient()
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getDatabaseClient()
  overload: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getDatabaseClient*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  syntax:
    content: public CosmosAsyncDatabase getDatabaseClient()
    return:
      type: com.azure.cosmos.CosmosAsyncDatabase
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getServiceEndpoint()
  id: getServiceEndpoint()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  langs:
  - java
  name: getServiceEndpoint()
  nameWithType: ChangeFeedContextClientImpl.getServiceEndpoint()
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getServiceEndpoint()
  overload: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getServiceEndpoint*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  syntax:
    content: public URI getServiceEndpoint()
    return:
      type: java.net.URI
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readContainer(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.CosmosContainerRequestOptions)
  id: readContainer(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.CosmosContainerRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  langs:
  - java
  name: readContainer(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)
  nameWithType: ChangeFeedContextClientImpl.readContainer(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readContainer(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)
  overload: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readContainer*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Reads a <xref uid="com.azure.cosmos.CosmosAsyncContainer" data-throw-if-not-resolved="false">CosmosAsyncContainer</xref>.
  syntax:
    content: public Mono<CosmosContainerResponse> readContainer(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)
    parameters:
    - id: containerLink
      type: com.azure.cosmos.CosmosAsyncContainer
    - id: options
      type: com.azure.cosmos.models.CosmosContainerRequestOptions
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosContainerResponse>
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readContainerSettings(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.CosmosContainerRequestOptions)
  id: readContainerSettings(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.models.CosmosContainerRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  langs:
  - java
  name: readContainerSettings(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)
  nameWithType: ChangeFeedContextClientImpl.readContainerSettings(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readContainerSettings(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)
  overload: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readContainerSettings*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Reads and returns the container properties.
  syntax:
    content: public Mono<CosmosContainerProperties> readContainerSettings(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)
    parameters:
    - id: containerLink
      type: com.azure.cosmos.CosmosAsyncContainer
    - id: options
      type: com.azure.cosmos.models.CosmosContainerRequestOptions
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosContainerProperties>
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readDatabase(com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.models.CosmosDatabaseRequestOptions)
  id: readDatabase(com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.models.CosmosDatabaseRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  langs:
  - java
  name: readDatabase(CosmosAsyncDatabase database, CosmosDatabaseRequestOptions options)
  nameWithType: ChangeFeedContextClientImpl.readDatabase(CosmosAsyncDatabase database, CosmosDatabaseRequestOptions options)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readDatabase(CosmosAsyncDatabase database, CosmosDatabaseRequestOptions options)
  overload: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readDatabase*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Reads a database.
  syntax:
    content: public Mono<CosmosDatabaseResponse> readDatabase(CosmosAsyncDatabase database, CosmosDatabaseRequestOptions options)
    parameters:
    - id: database
      type: com.azure.cosmos.CosmosAsyncDatabase
    - id: options
      type: com.azure.cosmos.models.CosmosDatabaseRequestOptions
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosDatabaseResponse>
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readPartitionKeyRangeFeed(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)
  id: readPartitionKeyRangeFeed(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl
  langs:
  - java
  name: readPartitionKeyRangeFeed(String partitionKeyRangesOrCollectionLink, CosmosQueryRequestOptions cosmosQueryRequestOptions)
  nameWithType: ChangeFeedContextClientImpl.readPartitionKeyRangeFeed(String partitionKeyRangesOrCollectionLink, CosmosQueryRequestOptions cosmosQueryRequestOptions)
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readPartitionKeyRangeFeed(String partitionKeyRangesOrCollectionLink, CosmosQueryRequestOptions cosmosQueryRequestOptions)
  overload: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readPartitionKeyRangeFeed*
  type: Method
  package: com.azure.cosmos.implementation.changefeed.implementation
  summary: Reads the feed (sequence) of <xref uid="com.azure.cosmos.implementation.PartitionKeyRange" data-throw-if-not-resolved="false">PartitionKeyRange</xref> for a database account from the Azure Cosmos DB service as an asynchronous operation.
  syntax:
    content: public Flux<FeedResponse<PartitionKeyRange>> readPartitionKeyRangeFeed(String partitionKeyRangesOrCollectionLink, CosmosQueryRequestOptions cosmosQueryRequestOptions)
    parameters:
    - id: partitionKeyRangesOrCollectionLink
      type: java.lang.String
    - id: cosmosQueryRequestOptions
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
    return:
      type: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<com.azure.cosmos.implementation.PartitionKeyRange>>
references:
- uid: com.azure.cosmos.CosmosAsyncContainer
  name: CosmosAsyncContainer
  nameWithType: CosmosAsyncContainer
  fullName: com.azure.cosmos.CosmosAsyncContainer
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl*
  name: ChangeFeedContextClientImpl
  nameWithType: ChangeFeedContextClientImpl.ChangeFeedContextClientImpl
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: reactor.core.scheduler.Scheduler
  spec.java:
  - uid: reactor.core.scheduler.Scheduler
    name: Scheduler
    fullName: reactor.core.scheduler.Scheduler
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions
  name: CosmosQueryRequestOptions
  nameWithType: CosmosQueryRequestOptions
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions
- uid: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<com.azure.cosmos.implementation.PartitionKeyRange>>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.FeedResponse
    name: FeedResponse
    fullName: com.azure.cosmos.models.FeedResponse
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.PartitionKeyRange
    name: PartitionKeyRange
    fullName: com.azure.cosmos.implementation.PartitionKeyRange
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readPartitionKeyRangeFeed*
  name: readPartitionKeyRangeFeed
  nameWithType: ChangeFeedContextClientImpl.readPartitionKeyRangeFeed
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readPartitionKeyRangeFeed
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.ChangeFeedOptions
  name: ChangeFeedOptions
  nameWithType: ChangeFeedOptions
  fullName: com.azure.cosmos.implementation.ChangeFeedOptions
- uid: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<com.fasterxml.jackson.databind.JsonNode>>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.FeedResponse
    name: FeedResponse
    fullName: com.azure.cosmos.models.FeedResponse
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.JsonNode
    name: JsonNode
    fullName: com.fasterxml.jackson.databind.JsonNode
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.createDocumentChangeFeedQuery*
  name: createDocumentChangeFeedQuery
  nameWithType: ChangeFeedContextClientImpl.createDocumentChangeFeedQuery
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.createDocumentChangeFeedQuery
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.CosmosAsyncDatabase
  name: CosmosAsyncDatabase
  nameWithType: CosmosAsyncDatabase
  fullName: com.azure.cosmos.CosmosAsyncDatabase
- uid: com.azure.cosmos.models.CosmosDatabaseRequestOptions
  name: CosmosDatabaseRequestOptions
  nameWithType: CosmosDatabaseRequestOptions
  fullName: com.azure.cosmos.models.CosmosDatabaseRequestOptions
- uid: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosDatabaseResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.CosmosDatabaseResponse
    name: CosmosDatabaseResponse
    fullName: com.azure.cosmos.models.CosmosDatabaseResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readDatabase*
  name: readDatabase
  nameWithType: ChangeFeedContextClientImpl.readDatabase
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readDatabase
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.models.CosmosContainerRequestOptions
  name: CosmosContainerRequestOptions
  nameWithType: CosmosContainerRequestOptions
  fullName: com.azure.cosmos.models.CosmosContainerRequestOptions
- uid: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosContainerResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.CosmosContainerResponse
    name: CosmosContainerResponse
    fullName: com.azure.cosmos.models.CosmosContainerResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readContainer*
  name: readContainer
  nameWithType: ChangeFeedContextClientImpl.readContainer
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readContainer
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.azure.cosmos.models.CosmosItemRequestOptions
  name: CosmosItemRequestOptions
  nameWithType: CosmosItemRequestOptions
  fullName: com.azure.cosmos.models.CosmosItemRequestOptions
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<T>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.CosmosItemResponse
    name: CosmosItemResponse
    fullName: com.azure.cosmos.models.CosmosItemResponse
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.createItem*
  name: <T>createItem
  nameWithType: ChangeFeedContextClientImpl.<T>createItem
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.<T>createItem
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.models.PartitionKey
  name: PartitionKey
  nameWithType: PartitionKey
  fullName: com.azure.cosmos.models.PartitionKey
- uid: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<java.lang.Object>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.CosmosItemResponse
    name: CosmosItemResponse
    fullName: com.azure.cosmos.models.CosmosItemResponse
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.deleteItem*
  name: deleteItem
  nameWithType: ChangeFeedContextClientImpl.deleteItem
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.deleteItem
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.replaceItem*
  name: <T>replaceItem
  nameWithType: ChangeFeedContextClientImpl.<T>replaceItem
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.<T>replaceItem
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readItem*
  name: <T>readItem
  nameWithType: ChangeFeedContextClientImpl.<T>readItem
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.<T>readItem
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.models.SqlQuerySpec
  name: SqlQuerySpec
  nameWithType: SqlQuerySpec
  fullName: com.azure.cosmos.models.SqlQuerySpec
- uid: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.FeedResponse
    name: FeedResponse
    fullName: com.azure.cosmos.models.FeedResponse
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.queryItems*
  name: <T>queryItems
  nameWithType: ChangeFeedContextClientImpl.<T>queryItems
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.<T>queryItems
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: java.net.URI
  spec.java:
  - uid: java.net.URI
    name: URI
    fullName: java.net.URI
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getServiceEndpoint*
  name: getServiceEndpoint
  nameWithType: ChangeFeedContextClientImpl.getServiceEndpoint
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getServiceEndpoint
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosContainerProperties>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.CosmosContainerProperties
    name: CosmosContainerProperties
    fullName: com.azure.cosmos.models.CosmosContainerProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readContainerSettings*
  name: readContainerSettings
  nameWithType: ChangeFeedContextClientImpl.readContainerSettings
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.readContainerSettings
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getContainerClient*
  name: getContainerClient
  nameWithType: ChangeFeedContextClientImpl.getContainerClient
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getContainerClient
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getDatabaseClient*
  name: getDatabaseClient
  nameWithType: ChangeFeedContextClientImpl.getDatabaseClient
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.getDatabaseClient
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.close*
  name: close
  nameWithType: ChangeFeedContextClientImpl.close
  fullName: com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedContextClientImpl.close
  package: com.azure.cosmos.implementation.changefeed.implementation
- uid: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
  name: ChangeFeedContextClient
  nameWithType: ChangeFeedContextClient
  fullName: com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: com.azure.cosmos.implementation.PartitionKeyRange
  name: PartitionKeyRange
  nameWithType: PartitionKeyRange
  fullName: com.azure.cosmos.implementation.PartitionKeyRange
- uid: com.azure.cosmos.models.FeedResponse
  name: FeedResponse
  nameWithType: FeedResponse
  fullName: com.azure.cosmos.models.FeedResponse
- uid: com.fasterxml.jackson.databind.JsonNode
  name: JsonNode
  nameWithType: JsonNode
  fullName: com.fasterxml.jackson.databind.JsonNode
- uid: com.azure.cosmos.models.CosmosDatabaseResponse
  name: CosmosDatabaseResponse
  nameWithType: CosmosDatabaseResponse
  fullName: com.azure.cosmos.models.CosmosDatabaseResponse
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.cosmos.models.CosmosContainerResponse
  name: CosmosContainerResponse
  nameWithType: CosmosContainerResponse
  fullName: com.azure.cosmos.models.CosmosContainerResponse
- uid: com.azure.cosmos.models.CosmosItemResponse
  name: CosmosItemResponse
  nameWithType: CosmosItemResponse
  fullName: com.azure.cosmos.models.CosmosItemResponse
- uid: java.lang.Object
  name: Object
  nameWithType: Object
  fullName: java.lang.Object
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: com.azure.cosmos.models.CosmosContainerProperties
  name: CosmosContainerProperties
  nameWithType: CosmosContainerProperties
  fullName: com.azure.cosmos.models.CosmosContainerProperties
