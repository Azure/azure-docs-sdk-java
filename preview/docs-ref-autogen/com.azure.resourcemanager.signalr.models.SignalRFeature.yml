### YamlMime:JavaType
uid: "com.azure.resourcemanager.signalr.models.SignalRFeature"
fullName: "com.azure.resourcemanager.signalr.models.SignalRFeature"
name: "SignalRFeature"
nameWithType: "SignalRFeature"
summary: "Feature of a resource, which controls the runtime behavior."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SignalRFeature"
constructors:
- uid: "com.azure.resourcemanager.signalr.models.SignalRFeature.SignalRFeature()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRFeature.SignalRFeature()"
  name: "SignalRFeature()"
  nameWithType: "SignalRFeature.SignalRFeature()"
  syntax: "public SignalRFeature()"
methods:
- uid: "com.azure.resourcemanager.signalr.models.SignalRFeature.flag()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRFeature.flag()"
  name: "flag()"
  nameWithType: "SignalRFeature.flag()"
  summary: "Get the flag property: Feature<wbr>Flags is the supported features of Azure SignalR service."
  syntax: "public FeatureFlags flag()"
  desc: "Get the flag property: FeatureFlags is the supported features of Azure SignalR service. - ServiceMode: Flag for backend server for SignalR service. Values allowed: \"Default\": have your own backend server; \"Serverless\": your application doesn't have a backend server; \"Classic\": for backward compatibility. Support both Default and Serverless mode but not recommended; \"PredefinedOnly\": for future use. - EnableConnectivityLogs: \"true\"/\"false\", to enable/disable the connectivity log category respectively. - EnableMessagingLogs: \"true\"/\"false\", to enable/disable the connectivity log category respectively. - EnableLiveTrace: Live Trace allows you to know what's happening inside Azure SignalR service, it will give you live traces in real time, it will be helpful when you developing your own Azure SignalR based web application or self-troubleshooting some issues. Please note that live traces are counted as outbound messages that will be charged. Values allowed: \"true\"/\"false\", to enable/disable live trace feature."
  returns:
    description: "the flag value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.FeatureFlags?alt=com.azure.resourcemanager.signalr.models.FeatureFlags&text=FeatureFlags\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRFeature.properties()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRFeature.properties()"
  name: "properties()"
  nameWithType: "SignalRFeature.properties()"
  summary: "Get the properties property: Optional properties related to this feature."
  syntax: "public Map<String,String> properties()"
  desc: "Get the properties property: Optional properties related to this feature."
  returns:
    description: "the properties value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.models.SignalRFeature.validate()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRFeature.validate()"
  name: "validate()"
  nameWithType: "SignalRFeature.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.signalr.models.SignalRFeature.value()"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRFeature.value()"
  name: "value()"
  nameWithType: "SignalRFeature.value()"
  summary: "Get the value property: Value of the feature flag."
  syntax: "public String value()"
  desc: "Get the value property: Value of the feature flag. See Azure SignalR service document https://docs.microsoft.com/azure/azure-signalr/ for allowed values."
  returns:
    description: "the value value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRFeature.withFlag(com.azure.resourcemanager.signalr.models.FeatureFlags)"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRFeature.withFlag(FeatureFlags flag)"
  name: "withFlag(FeatureFlags flag)"
  nameWithType: "SignalRFeature.withFlag(FeatureFlags flag)"
  summary: "Set the flag property: Feature<wbr>Flags is the supported features of Azure SignalR service."
  parameters:
  - description: "the flag value to set."
    name: "flag"
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.FeatureFlags?alt=com.azure.resourcemanager.signalr.models.FeatureFlags&text=FeatureFlags\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SignalRFeature withFlag(FeatureFlags flag)"
  desc: "Set the flag property: FeatureFlags is the supported features of Azure SignalR service. - ServiceMode: Flag for backend server for SignalR service. Values allowed: \"Default\": have your own backend server; \"Serverless\": your application doesn't have a backend server; \"Classic\": for backward compatibility. Support both Default and Serverless mode but not recommended; \"PredefinedOnly\": for future use. - EnableConnectivityLogs: \"true\"/\"false\", to enable/disable the connectivity log category respectively. - EnableMessagingLogs: \"true\"/\"false\", to enable/disable the connectivity log category respectively. - EnableLiveTrace: Live Trace allows you to know what's happening inside Azure SignalR service, it will give you live traces in real time, it will be helpful when you developing your own Azure SignalR based web application or self-troubleshooting some issues. Please note that live traces are counted as outbound messages that will be charged. Values allowed: \"true\"/\"false\", to enable/disable live trace feature."
  returns:
    description: "the SignalRFeature object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRFeature?alt=com.azure.resourcemanager.signalr.models.SignalRFeature&text=SignalRFeature\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRFeature.withProperties(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRFeature.withProperties(Map<String,String> properties)"
  name: "withProperties(Map<String,String> properties)"
  nameWithType: "SignalRFeature.withProperties(Map<String,String> properties)"
  summary: "Set the properties property: Optional properties related to this feature."
  parameters:
  - description: "the properties value to set."
    name: "properties"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SignalRFeature withProperties(Map<String,String> properties)"
  desc: "Set the properties property: Optional properties related to this feature."
  returns:
    description: "the SignalRFeature object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRFeature?alt=com.azure.resourcemanager.signalr.models.SignalRFeature&text=SignalRFeature\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.models.SignalRFeature.withValue(java.lang.String)"
  fullName: "com.azure.resourcemanager.signalr.models.SignalRFeature.withValue(String value)"
  name: "withValue(String value)"
  nameWithType: "SignalRFeature.withValue(String value)"
  summary: "Set the value property: Value of the feature flag."
  parameters:
  - description: "the value value to set."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SignalRFeature withValue(String value)"
  desc: "Set the value property: Value of the feature flag. See Azure SignalR service document https://docs.microsoft.com/azure/azure-signalr/ for allowed values."
  returns:
    description: "the SignalRFeature object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRFeature?alt=com.azure.resourcemanager.signalr.models.SignalRFeature&text=SignalRFeature\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Feature of a resource, which controls the runtime behavior."
metadata: {}
package: "com.azure.resourcemanager.signalr.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-signalr:1.0.0-beta.4
