### YamlMime:JavaType
uid: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient"
fullName: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient"
name: "EventHubBufferedProducerAsyncClient"
nameWithType: "EventHubBufferedProducerAsyncClient"
summary: "A client responsible for publishing instances of <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> to a specific Event Hub."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class EventHubBufferedProducerAsyncClient implements Closeable"
methods:
- "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.close()"
- "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.enqueueEvent(com.azure.messaging.eventhubs.EventData)"
- "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.enqueueEvent(com.azure.messaging.eventhubs.EventData,com.azure.messaging.eventhubs.models.SendOptions)"
- "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.enqueueEvents(java.lang.Iterable<com.azure.messaging.eventhubs.EventData>)"
- "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.enqueueEvents(java.lang.Iterable<com.azure.messaging.eventhubs.EventData>,com.azure.messaging.eventhubs.models.SendOptions)"
- "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.flush()"
- "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getBufferedEventCount()"
- "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getBufferedEventCount(java.lang.String)"
- "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getEventHubName()"
- "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getEventHubProperties()"
- "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getFullyQualifiedNamespace()"
- "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getPartitionIds()"
- "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getPartitionProperties(java.lang.String)"
type: "class"
desc: "A client responsible for publishing instances of <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> to a specific Event Hub. Depending on the options specified when events are enqueued, they may be automatically assigned to a partition, grouped according to the specified partition key, or assigned a specifically requested partition.\n\nThe <xref uid=\"com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubBufferedProducerAsyncClient\"></xref> does not publish immediately, instead using a deferred model where events are collected into a buffer so that they may be efficiently batched and published when the batch is full or the <xref uid=\"com.azure.messaging.eventhubs.EventHubBufferedProducerClientBuilder.maxWaitTime(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"maxWaitTime\"></xref> has elapsed with no new events enqueued.\n\nThis model is intended to shift the burden of batch management from callers, at the cost of non-deterministic timing, for when events will be published. There are additional trade-offs to consider, as well:\n\n *  If the application crashes, events in the buffer will not have been published. To prevent data loss, callers are encouraged to track publishing progress using <xref uid=\"com.azure.messaging.eventhubs.EventHubBufferedProducerClientBuilder.onSendBatchFailed(java.util.function.Consumer<com.azure.messaging.eventhubs.models.SendBatchFailedContext>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"onSendBatchFailed\"></xref> and <xref uid=\"com.azure.messaging.eventhubs.EventHubBufferedProducerClientBuilder.onSendBatchSucceeded(java.util.function.Consumer<com.azure.messaging.eventhubs.models.SendBatchSucceededContext>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"onSendBatchSucceeded\"></xref>.\n *  Events specifying a partition key may be assigned a different partition than those using the same key with other producers.\n *  In the unlikely event that a partition becomes temporarily unavailable, the <xref uid=\"com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubBufferedProducerAsyncClient\"></xref> may take longer to recover than other producers.\n\nIn scenarios where it is important to have events published immediately with a deterministic outcome, ensure that partition keys are assigned to a partition consistent with other publishers, or where maximizing availability is a requirement, using <xref uid=\"com.azure.messaging.eventhubs.EventHubProducerAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubProducerAsyncClient\"></xref> or <xref uid=\"com.azure.messaging.eventhubs.EventHubProducerClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubProducerClient\"></xref> is recommended."
implements:
- "<xref href=\"java.io.Closeable?alt=java.io.Closeable&text=Closeable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.messaging.eventhubs"
artifact: com.azure:azure-messaging-eventhubs:5.13.0-beta.1
