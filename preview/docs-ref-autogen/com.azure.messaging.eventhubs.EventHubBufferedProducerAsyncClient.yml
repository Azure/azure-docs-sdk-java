### YamlMime:JavaType
uid: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient"
fullName: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient"
name: "EventHubBufferedProducerAsyncClient"
nameWithType: "EventHubBufferedProducerAsyncClient"
summary: "A client responsible for publishing instances of <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> to a specific Event Hub."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class EventHubBufferedProducerAsyncClient implements Closeable"
methods:
- uid: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.close()"
  fullName: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.close()"
  name: "close()"
  nameWithType: "EventHubBufferedProducerAsyncClient.close()"
  summary: "Disposes of the producer and all its resources."
  syntax: "public void close()"
  desc: "Disposes of the producer and all its resources."
- uid: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.enqueueEvent(com.azure.messaging.eventhubs.EventData)"
  fullName: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.enqueueEvent(EventData eventData)"
  name: "enqueueEvent(EventData eventData)"
  nameWithType: "EventHubBufferedProducerAsyncClient.enqueueEvent(EventData eventData)"
  summary: "Enqueues an <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> into the buffer to be published to the Event Hub."
  parameters:
  - description: "The event to be enqueued into the buffer and, later, published."
    name: "eventData"
    type: "<xref href=\"com.azure.messaging.eventhubs.EventData?alt=com.azure.messaging.eventhubs.EventData&text=EventData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Integer> enqueueEvent(EventData eventData)"
  desc: "Enqueues an <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> into the buffer to be published to the Event Hub. If there is no capacity in the buffer when this method is invoked, it will wait for space to become available and ensure that the `eventData` has been enqueued. When this call returns, the `eventData` has been accepted into the buffer, but it may not have been published yet. Publishing will take place at a nondeterministic point in the future as the buffer is processed."
  returns:
    description: "The total number of events that are currently buffered and waiting to be published, across all\n     partitions."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.enqueueEvent(com.azure.messaging.eventhubs.EventData,com.azure.messaging.eventhubs.models.SendOptions)"
  fullName: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.enqueueEvent(EventData eventData, SendOptions options)"
  name: "enqueueEvent(EventData eventData, SendOptions options)"
  nameWithType: "EventHubBufferedProducerAsyncClient.enqueueEvent(EventData eventData, SendOptions options)"
  summary: "Enqueues an <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> into the buffer to be published to the Event Hub."
  parameters:
  - description: "The event to be enqueued into the buffer and, later, published."
    name: "eventData"
    type: "<xref href=\"com.azure.messaging.eventhubs.EventData?alt=com.azure.messaging.eventhubs.EventData&text=EventData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The set of options to apply when publishing this event.  If partitionKey and partitionId are\n     not set, then the event is distributed round-robin amongst all the partitions."
    name: "options"
    type: "<xref href=\"com.azure.messaging.eventhubs.models.SendOptions?alt=com.azure.messaging.eventhubs.models.SendOptions&text=SendOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Integer> enqueueEvent(EventData eventData, SendOptions options)"
  desc: "Enqueues an <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> into the buffer to be published to the Event Hub. If there is no capacity in the buffer when this method is invoked, it will wait for space to become available and ensure that the `eventData` has been enqueued. When this call returns, the `eventData` has been accepted into the buffer, but it may not have been published yet. Publishing will take place at a nondeterministic point in the future as the buffer is processed."
  returns:
    description: "The total number of events that are currently buffered and waiting to be published, across all\n     partitions."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.enqueueEvents(java.lang.Iterable<com.azure.messaging.eventhubs.EventData>)"
  fullName: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.enqueueEvents(Iterable<EventData> events)"
  name: "enqueueEvents(Iterable<EventData> events)"
  nameWithType: "EventHubBufferedProducerAsyncClient.enqueueEvents(Iterable<EventData> events)"
  summary: "Enqueues a set of <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> into the buffer to be published to the Event Hub."
  parameters:
  - description: "The set of events to be enqueued into the buffer and, later, published."
    name: "events"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.EventData?alt=com.azure.messaging.eventhubs.EventData&text=EventData\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<Integer> enqueueEvents(Iterable<EventData> events)"
  desc: "Enqueues a set of <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> into the buffer to be published to the Event Hub. If there is insufficient capacity in the buffer when this method is invoked, it will wait for space to become available and ensure that all EventData in the `events` set have been enqueued. When this call returns, the `events` have been accepted into the buffer, but it may not have been published yet. Publishing will take place at a nondeterministic point in the future as the buffer is processed."
  returns:
    description: "The total number of events that are currently buffered and waiting to be published, across all\n     partitions."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.enqueueEvents(java.lang.Iterable<com.azure.messaging.eventhubs.EventData>,com.azure.messaging.eventhubs.models.SendOptions)"
  fullName: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.enqueueEvents(Iterable<EventData> events, SendOptions options)"
  name: "enqueueEvents(Iterable<EventData> events, SendOptions options)"
  nameWithType: "EventHubBufferedProducerAsyncClient.enqueueEvents(Iterable<EventData> events, SendOptions options)"
  summary: "Enqueues a set of <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> into the buffer to be published to the Event Hub."
  parameters:
  - description: "The set of events to be enqueued into the buffer and, later, published."
    name: "events"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.EventData?alt=com.azure.messaging.eventhubs.EventData&text=EventData\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The set of options to apply when publishing this event."
    name: "options"
    type: "<xref href=\"com.azure.messaging.eventhubs.models.SendOptions?alt=com.azure.messaging.eventhubs.models.SendOptions&text=SendOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Integer> enqueueEvents(Iterable<EventData> events, SendOptions options)"
  desc: "Enqueues a set of <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> into the buffer to be published to the Event Hub. If there is insufficient capacity in the buffer when this method is invoked, it will wait for space to become available and ensure that all EventData in the `events` set have been enqueued. When this call returns, the `events` have been accepted into the buffer, but it may not have been published yet. Publishing will take place at a nondeterministic point in the future as the buffer is processed."
  returns:
    description: "The total number of events that are currently buffered and waiting to be published, across all\n     partitions."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.flush()"
  fullName: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.flush()"
  name: "flush()"
  nameWithType: "EventHubBufferedProducerAsyncClient.flush()"
  summary: "Attempts to publish all events in the buffer immediately."
  syntax: "public Mono<Void> flush()"
  desc: "Attempts to publish all events in the buffer immediately. This may result in multiple batches being published, the outcome of each of which will be individually reported by the <xref uid=\"com.azure.messaging.eventhubs.EventHubBufferedProducerClientBuilder.onSendBatchFailed(java.util.function.Consumer<com.azure.messaging.eventhubs.models.SendBatchFailedContext>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubBufferedProducerClientBuilder#onSendBatchFailed(Consumer)\"></xref> and <xref uid=\"com.azure.messaging.eventhubs.EventHubBufferedProducerClientBuilder.onSendBatchSucceeded(java.util.function.Consumer<com.azure.messaging.eventhubs.models.SendBatchSucceededContext>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubBufferedProducerClientBuilder#onSendBatchSucceeded(Consumer)\"></xref> handlers. Upon completion of this method, the buffer will be empty."
  returns:
    description: "A mono that completes when the buffers are empty."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getBufferedEventCount()"
  fullName: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getBufferedEventCount()"
  name: "getBufferedEventCount()"
  nameWithType: "EventHubBufferedProducerAsyncClient.getBufferedEventCount()"
  summary: "Gets the total number of events that are currently buffered and waiting to be published, across all partitions."
  syntax: "public int getBufferedEventCount()"
  desc: "Gets the total number of events that are currently buffered and waiting to be published, across all partitions."
  returns:
    description: "The total number of events that are currently buffered and waiting to be published, across all\n     partitions."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getBufferedEventCount(java.lang.String)"
  fullName: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getBufferedEventCount(String partitionId)"
  name: "getBufferedEventCount(String partitionId)"
  nameWithType: "EventHubBufferedProducerAsyncClient.getBufferedEventCount(String partitionId)"
  summary: "Gets the number of events that are buffered and waiting to be published for a given partition."
  parameters:
  - description: "The partition identifier."
    name: "partitionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int getBufferedEventCount(String partitionId)"
  desc: "Gets the number of events that are buffered and waiting to be published for a given partition."
  returns:
    description: "The number of events that are buffered and waiting to be published for a given partition."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getEventHubName()"
  fullName: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getEventHubName()"
  name: "getEventHubName()"
  nameWithType: "EventHubBufferedProducerAsyncClient.getEventHubName()"
  summary: "Gets the Event Hub name this client interacts with."
  syntax: "public String getEventHubName()"
  desc: "Gets the Event Hub name this client interacts with."
  returns:
    description: "The Event Hub name this client interacts with."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getEventHubProperties()"
  fullName: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getEventHubProperties()"
  name: "getEventHubProperties()"
  nameWithType: "EventHubBufferedProducerAsyncClient.getEventHubProperties()"
  summary: "Retrieves information about an Event Hub, including the number of partitions present and their identifiers."
  syntax: "public Mono<EventHubProperties> getEventHubProperties()"
  desc: "Retrieves information about an Event Hub, including the number of partitions present and their identifiers."
  returns:
    description: "The set of information for the Event Hub that this client is associated with."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.EventHubProperties?alt=com.azure.messaging.eventhubs.EventHubProperties&text=EventHubProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getFullyQualifiedNamespace()"
  fullName: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getFullyQualifiedNamespace()"
  name: "getFullyQualifiedNamespace()"
  nameWithType: "EventHubBufferedProducerAsyncClient.getFullyQualifiedNamespace()"
  summary: "Gets the fully qualified Event Hubs namespace that the connection is associated with."
  syntax: "public String getFullyQualifiedNamespace()"
  desc: "Gets the fully qualified Event Hubs namespace that the connection is associated with. This is likely similar to `{yournamespace}.servicebus.windows.net`."
  returns:
    description: "The fully qualified Event Hubs namespace that the connection is associated with"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getPartitionIds()"
  fullName: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getPartitionIds()"
  name: "getPartitionIds()"
  nameWithType: "EventHubBufferedProducerAsyncClient.getPartitionIds()"
  summary: "Retrieves the identifiers for the partitions of an Event Hub."
  syntax: "public Flux<String> getPartitionIds()"
  desc: "Retrieves the identifiers for the partitions of an Event Hub."
  returns:
    description: "A Flux of identifiers for the partitions of an Event Hub."
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getPartitionProperties(java.lang.String)"
  fullName: "com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient.getPartitionProperties(String partitionId)"
  name: "getPartitionProperties(String partitionId)"
  nameWithType: "EventHubBufferedProducerAsyncClient.getPartitionProperties(String partitionId)"
  summary: "Retrieves information about a specific partition for an Event Hub, including elements that describe the available events in the partition event stream."
  parameters:
  - description: "The unique identifier of a partition associated with the Event Hub."
    name: "partitionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PartitionProperties> getPartitionProperties(String partitionId)"
  desc: "Retrieves information about a specific partition for an Event Hub, including elements that describe the available events in the partition event stream."
  returns:
    description: "The set of information for the requested partition under the Event Hub this client is associated with."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.PartitionProperties?alt=com.azure.messaging.eventhubs.PartitionProperties&text=PartitionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "A client responsible for publishing instances of <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> to a specific Event Hub. Depending on the options specified when events are enqueued, they may be automatically assigned to a partition, grouped according to the specified partition key, or assigned a specifically requested partition.\n\nThe <xref uid=\"com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubBufferedProducerAsyncClient\"></xref> does not publish immediately, instead using a deferred model where events are collected into a buffer so that they may be efficiently batched and published when the batch is full or the <xref uid=\"com.azure.messaging.eventhubs.EventHubBufferedProducerClientBuilder.maxWaitTime(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"maxWaitTime\"></xref> has elapsed with no new events enqueued.\n\nThis model is intended to shift the burden of batch management from callers, at the cost of non-deterministic timing, for when events will be published. There are additional trade-offs to consider, as well:\n\n *  If the application crashes, events in the buffer will not have been published. To prevent data loss, callers are encouraged to track publishing progress using <xref uid=\"com.azure.messaging.eventhubs.EventHubBufferedProducerClientBuilder.onSendBatchFailed(java.util.function.Consumer<com.azure.messaging.eventhubs.models.SendBatchFailedContext>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"onSendBatchFailed\"></xref> and <xref uid=\"com.azure.messaging.eventhubs.EventHubBufferedProducerClientBuilder.onSendBatchSucceeded(java.util.function.Consumer<com.azure.messaging.eventhubs.models.SendBatchSucceededContext>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"onSendBatchSucceeded\"></xref>.\n *  Events specifying a partition key may be assigned a different partition than those using the same key with other producers.\n *  In the unlikely event that a partition becomes temporarily unavailable, the <xref uid=\"com.azure.messaging.eventhubs.EventHubBufferedProducerAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubBufferedProducerAsyncClient\"></xref> may take longer to recover than other producers.\n\nIn scenarios where it is important to have events published immediately with a deterministic outcome, ensure that partition keys are assigned to a partition consistent with other publishers, or where maximizing availability is a requirement, using <xref uid=\"com.azure.messaging.eventhubs.EventHubProducerAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubProducerAsyncClient\"></xref> or <xref uid=\"com.azure.messaging.eventhubs.EventHubProducerClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubProducerClient\"></xref> is recommended."
implements:
- "<xref href=\"java.io.Closeable?alt=java.io.Closeable&text=Closeable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.messaging.eventhubs"
artifact: com.azure:azure-messaging-eventhubs:5.13.0-beta.1
