### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.BeanPropertyWriter._handleSelfReference*"
fullName: "com.fasterxml.jackson.databind.ser.BeanPropertyWriter._handleSelfReference"
name: "_handleSelfReference"
nameWithType: "BeanPropertyWriter._handleSelfReference"
members:
- uid: "com.fasterxml.jackson.databind.ser.BeanPropertyWriter._handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer<?>)"
  fullName: "com.fasterxml.jackson.databind.ser.BeanPropertyWriter._handleSelfReference(Object bean, JsonGenerator gen, SerializerProvider prov, JsonSerializer<?> ser)"
  name: "_handleSelfReference(Object bean, JsonGenerator gen, SerializerProvider prov, JsonSerializer<?> ser)"
  nameWithType: "BeanPropertyWriter._handleSelfReference(Object bean, JsonGenerator gen, SerializerProvider prov, JsonSerializer<?> ser)"
  summary: "Method called to handle a direct self-reference through this property. Method can choose to indicate an error by throwing <xref uid=\"com.fasterxml.jackson.databind.JsonMappingException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonMappingException\"></xref>; fully handle serialization (and return true); or indicate that it should be serialized normally (return false).\n\nDefault implementation will throw <xref uid=\"com.fasterxml.jackson.databind.JsonMappingException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonMappingException\"></xref> if <xref uid=\"com.fasterxml.jackson.databind.SerializationFeature.FAIL_ON_SELF_REFERENCES\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SerializationFeature#FAIL_ON_SELF_REFERENCES\"></xref> is enabled; or return `false` if it is disabled."
  parameters:
  - name: "bean"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "gen"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  - name: "prov"
    type: "<xref href=\"com.fasterxml.jackson.databind.SerializerProvider?alt=com.fasterxml.jackson.databind.SerializerProvider&text=SerializerProvider\" data-throw-if-not-resolved=\"False\" />"
  - name: "ser"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "protected boolean _handleSelfReference(Object bean, JsonGenerator gen, SerializerProvider prov, JsonSerializer<?> ser)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "True if method fully handled self-referential value; false if not\n         (caller is to handle it) or <xref uid=\"com.fasterxml.jackson.databind.JsonMappingException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonMappingException\"></xref> if there\n         is no way handle it"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
