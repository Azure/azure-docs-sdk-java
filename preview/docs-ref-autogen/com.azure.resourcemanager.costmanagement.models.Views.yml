### YamlMime:JavaType
uid: "com.azure.resourcemanager.costmanagement.models.Views"
fullName: "com.azure.resourcemanager.costmanagement.models.Views"
name: "Views"
nameWithType: "Views"
summary: "Resource collection API of Views."
syntax: "public interface Views"
methods:
- uid: "com.azure.resourcemanager.costmanagement.models.Views.createOrUpdate(java.lang.String,com.azure.resourcemanager.costmanagement.fluent.models.ViewInner)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.createOrUpdate(String viewName, ViewInner parameters)"
  name: "createOrUpdate(String viewName, ViewInner parameters)"
  nameWithType: "Views.createOrUpdate(String viewName, ViewInner parameters)"
  summary: "The operation to create or update a view."
  modifiers:
  - "abstract"
  parameters:
  - description: "View name."
    name: "viewName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters supplied to the CreateOrUpdate View operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.fluent.models.ViewInner?alt=com.azure.resourcemanager.costmanagement.fluent.models.ViewInner&text=ViewInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract View createOrUpdate(String viewName, ViewInner parameters)"
  desc: "The operation to create or update a view. Update operation requires latest eTag to be set in the request. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag."
  returns:
    description: "states and configurations of Cost Analysis."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.View?alt=com.azure.resourcemanager.costmanagement.models.View&text=View\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.Views.createOrUpdateWithResponse(java.lang.String,com.azure.resourcemanager.costmanagement.fluent.models.ViewInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.createOrUpdateWithResponse(String viewName, ViewInner parameters, Context context)"
  name: "createOrUpdateWithResponse(String viewName, ViewInner parameters, Context context)"
  nameWithType: "Views.createOrUpdateWithResponse(String viewName, ViewInner parameters, Context context)"
  summary: "The operation to create or update a view."
  modifiers:
  - "abstract"
  parameters:
  - description: "View name."
    name: "viewName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters supplied to the CreateOrUpdate View operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.fluent.models.ViewInner?alt=com.azure.resourcemanager.costmanagement.fluent.models.ViewInner&text=ViewInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<View> createOrUpdateWithResponse(String viewName, ViewInner parameters, Context context)"
  desc: "The operation to create or update a view. Update operation requires latest eTag to be set in the request. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag."
  returns:
    description: "states and configurations of Cost Analysis."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.View?alt=com.azure.resourcemanager.costmanagement.models.View&text=View\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.costmanagement.models.Views.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.define(String name)"
  name: "define(String name)"
  nameWithType: "Views.define(String name)"
  summary: "Begins definition for a new View resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract View.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new View resource."
  returns:
    description: "the first stage of the new View definition."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.View.DefinitionStages.Blank?alt=com.azure.resourcemanager.costmanagement.models.View.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.Views.delete(java.lang.String)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.delete(String viewName)"
  name: "delete(String viewName)"
  nameWithType: "Views.delete(String viewName)"
  summary: "The operation to delete a view."
  modifiers:
  - "abstract"
  parameters:
  - description: "View name."
    name: "viewName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String viewName)"
  desc: "The operation to delete a view."
- uid: "com.azure.resourcemanager.costmanagement.models.Views.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Views.deleteById(String id)"
  summary: "The operation to delete a view."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "The operation to delete a view."
- uid: "com.azure.resourcemanager.costmanagement.models.Views.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "Views.deleteByIdWithResponse(String id, Context context)"
  summary: "The operation to delete a view."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByIdWithResponse(String id, Context context)"
  desc: "The operation to delete a view."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.costmanagement.models.Views.deleteByScope(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.deleteByScope(String scope, String viewName)"
  name: "deleteByScope(String scope, String viewName)"
  nameWithType: "Views.deleteByScope(String scope, String viewName)"
  summary: "The operation to delete a view."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope associated with view operations. This includes 'subscriptions/{subscriptionId}' for\n     subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup\n     scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department\n     scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for\n     EnrollmentAccount scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for\n     BillingProfile scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for\n     InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management\n     Group scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n     External Billing Account scope and\n     'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n     Subscription scope."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "View name."
    name: "viewName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByScope(String scope, String viewName)"
  desc: "The operation to delete a view."
- uid: "com.azure.resourcemanager.costmanagement.models.Views.deleteByScopeWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.deleteByScopeWithResponse(String scope, String viewName, Context context)"
  name: "deleteByScopeWithResponse(String scope, String viewName, Context context)"
  nameWithType: "Views.deleteByScopeWithResponse(String scope, String viewName, Context context)"
  summary: "The operation to delete a view."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope associated with view operations. This includes 'subscriptions/{subscriptionId}' for\n     subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup\n     scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department\n     scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for\n     EnrollmentAccount scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for\n     BillingProfile scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for\n     InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management\n     Group scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n     External Billing Account scope and\n     'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n     Subscription scope."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "View name."
    name: "viewName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByScopeWithResponse(String scope, String viewName, Context context)"
  desc: "The operation to delete a view."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.costmanagement.models.Views.deleteWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.deleteWithResponse(String viewName, Context context)"
  name: "deleteWithResponse(String viewName, Context context)"
  nameWithType: "Views.deleteWithResponse(String viewName, Context context)"
  summary: "The operation to delete a view."
  modifiers:
  - "abstract"
  parameters:
  - description: "View name."
    name: "viewName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String viewName, Context context)"
  desc: "The operation to delete a view."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.costmanagement.models.Views.get(java.lang.String)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.get(String viewName)"
  name: "get(String viewName)"
  nameWithType: "Views.get(String viewName)"
  summary: "Gets the view by view name."
  modifiers:
  - "abstract"
  parameters:
  - description: "View name."
    name: "viewName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract View get(String viewName)"
  desc: "Gets the view by view name."
  returns:
    description: "the view by view name."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.View?alt=com.azure.resourcemanager.costmanagement.models.View&text=View\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.Views.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Views.getById(String id)"
  summary: "Gets the view for the defined scope by view name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract View getById(String id)"
  desc: "Gets the view for the defined scope by view name."
  returns:
    description: "the view for the defined scope by view name."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.View?alt=com.azure.resourcemanager.costmanagement.models.View&text=View\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.Views.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Views.getByIdWithResponse(String id, Context context)"
  summary: "Gets the view for the defined scope by view name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<View> getByIdWithResponse(String id, Context context)"
  desc: "Gets the view for the defined scope by view name."
  returns:
    description: "the view for the defined scope by view name."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.View?alt=com.azure.resourcemanager.costmanagement.models.View&text=View\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.costmanagement.models.Views.getByScope(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.getByScope(String scope, String viewName)"
  name: "getByScope(String scope, String viewName)"
  nameWithType: "Views.getByScope(String scope, String viewName)"
  summary: "Gets the view for the defined scope by view name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope associated with view operations. This includes 'subscriptions/{subscriptionId}' for\n     subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup\n     scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department\n     scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for\n     EnrollmentAccount scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for\n     BillingProfile scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for\n     InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management\n     Group scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n     External Billing Account scope and\n     'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n     Subscription scope."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "View name."
    name: "viewName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract View getByScope(String scope, String viewName)"
  desc: "Gets the view for the defined scope by view name."
  returns:
    description: "the view for the defined scope by view name."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.View?alt=com.azure.resourcemanager.costmanagement.models.View&text=View\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.Views.getByScopeWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.getByScopeWithResponse(String scope, String viewName, Context context)"
  name: "getByScopeWithResponse(String scope, String viewName, Context context)"
  nameWithType: "Views.getByScopeWithResponse(String scope, String viewName, Context context)"
  summary: "Gets the view for the defined scope by view name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope associated with view operations. This includes 'subscriptions/{subscriptionId}' for\n     subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup\n     scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department\n     scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for\n     EnrollmentAccount scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for\n     BillingProfile scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for\n     InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management\n     Group scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n     External Billing Account scope and\n     'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n     Subscription scope."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "View name."
    name: "viewName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<View> getByScopeWithResponse(String scope, String viewName, Context context)"
  desc: "Gets the view for the defined scope by view name."
  returns:
    description: "the view for the defined scope by view name."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.View?alt=com.azure.resourcemanager.costmanagement.models.View&text=View\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.costmanagement.models.Views.getWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.getWithResponse(String viewName, Context context)"
  name: "getWithResponse(String viewName, Context context)"
  nameWithType: "Views.getWithResponse(String viewName, Context context)"
  summary: "Gets the view by view name."
  modifiers:
  - "abstract"
  parameters:
  - description: "View name."
    name: "viewName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<View> getWithResponse(String viewName, Context context)"
  desc: "Gets the view by view name."
  returns:
    description: "the view by view name."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.View?alt=com.azure.resourcemanager.costmanagement.models.View&text=View\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.costmanagement.models.Views.list()"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.list()"
  name: "list()"
  nameWithType: "Views.list()"
  summary: "Lists all views by tenant and object."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<View> list()"
  desc: "Lists all views by tenant and object."
  returns:
    description: "result of listing views."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.View?alt=com.azure.resourcemanager.costmanagement.models.View&text=View\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.costmanagement.models.Views.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.list(Context context)"
  name: "list(Context context)"
  nameWithType: "Views.list(Context context)"
  summary: "Lists all views by tenant and object."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<View> list(Context context)"
  desc: "Lists all views by tenant and object."
  returns:
    description: "result of listing views."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.View?alt=com.azure.resourcemanager.costmanagement.models.View&text=View\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.costmanagement.models.Views.listByScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.listByScope(String scope)"
  name: "listByScope(String scope)"
  nameWithType: "Views.listByScope(String scope)"
  summary: "Lists all views at the given scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope associated with view operations. This includes 'subscriptions/{subscriptionId}' for\n     subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup\n     scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department\n     scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for\n     EnrollmentAccount scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for\n     BillingProfile scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for\n     InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management\n     Group scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n     External Billing Account scope and\n     'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n     Subscription scope."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<View> listByScope(String scope)"
  desc: "Lists all views at the given scope."
  returns:
    description: "result of listing views."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.View?alt=com.azure.resourcemanager.costmanagement.models.View&text=View\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.costmanagement.models.Views.listByScope(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.costmanagement.models.Views.listByScope(String scope, Context context)"
  name: "listByScope(String scope, Context context)"
  nameWithType: "Views.listByScope(String scope, Context context)"
  summary: "Lists all views at the given scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope associated with view operations. This includes 'subscriptions/{subscriptionId}' for\n     subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup\n     scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department\n     scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for\n     EnrollmentAccount scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for\n     BillingProfile scope,\n     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for\n     InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management\n     Group scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n     External Billing Account scope and\n     'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n     Subscription scope."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<View> listByScope(String scope, Context context)"
  desc: "Lists all views at the given scope."
  returns:
    description: "result of listing views."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.View?alt=com.azure.resourcemanager.costmanagement.models.View&text=View\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Views."
metadata: {}
package: "com.azure.resourcemanager.costmanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-costmanagement:1.0.0-beta.3
