### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.KeyClient.createKeyWithResponse*"
fullName: "com.azure.security.keyvault.keys.KeyClient.createKeyWithResponse"
name: "createKeyWithResponse"
nameWithType: "KeyClient.createKeyWithResponse"
members:
- uid: "com.azure.security.keyvault.keys.KeyClient.createKeyWithResponse(com.azure.security.keyvault.keys.models.CreateKeyOptions,com.azure.core.util.Context)"
  fullName: "com.azure.security.keyvault.keys.KeyClient.createKeyWithResponse(CreateKeyOptions createKeyOptions, Context context)"
  name: "createKeyWithResponse(CreateKeyOptions createKeyOptions, Context context)"
  nameWithType: "KeyClient.createKeyWithResponse(CreateKeyOptions createKeyOptions, Context context)"
  summary: "Creates a new <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> and stores it in the key vault. The create key operation can be used to create any <xref uid=\"com.azure.security.keyvault.keys.models.KeyType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"keyType\"></xref> in Azure Key Vault. If a <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> with the provided name already exists, Azure Key Vault creates a new version of the <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>. It requires the `keys/create` permission.\n\nThe <xref uid=\"com.azure.security.keyvault.keys.models.CreateKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateKeyOptions\"></xref> parameter is required. The <xref uid=\"com.azure.security.keyvault.keys.models.CreateKeyOptions.getExpiresOn()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"expires\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.models.CreateKeyOptions.getNotBefore()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"notBefore\"></xref> values are optional. The <xref uid=\"com.azure.security.keyvault.keys.models.CreateKeyOptions.isEnabled()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"enabled\"></xref> field is set to `true` by Azure Key Vault, if not specified.\n\nThe <xref uid=\"com.azure.security.keyvault.keys.models.CreateKeyOptions.getKeyType()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"keyType\"></xref> indicates the type of <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> to create. Possible values include: <xref uid=\"com.azure.security.keyvault.keys.models.KeyType.EC\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EC\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.models.KeyType.EC_HSM\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EC-HSM\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.models.KeyType.RSA\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RSA\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.models.KeyType.RSA_HSM\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RSA-HSM\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.models.KeyType.OCT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OCT\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.models.KeyType.OCT_HSM\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OCT-HSM\"></xref>.\n\n**Code Samples**\n\nCreates a new <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RSA key\"></xref> which activates in one day and expires in one year. Prints out the details of the <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"created key\"></xref>.\n\n```java\nCreateKeyOptions createKeyOptions = new CreateKeyOptions(\"keyName\", KeyType.RSA)\n     .setNotBefore(OffsetDateTime.now().plusDays(1))\n     .setExpiresOn(OffsetDateTime.now().plusYears(1));\n Response<KeyVaultKey> createKeyResponse =\n     keyClient.createKeyWithResponse(createKeyOptions, new Context(\"key1\", \"value1\"));\n\n System.out.printf(\"Created key with name: %s and: id %s%n\", createKeyResponse.getValue().getName(),\n     createKeyResponse.getValue().getId());\n```"
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.keys.models.CreateKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options object\"></xref> containing information about the\n <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> being created."
    name: "createKeyOptions"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateKeyOptions&text=CreateKeyOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> that is passed through the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> during the service\n call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<KeyVaultKey> createKeyWithResponse(CreateKeyOptions createKeyOptions, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"created key\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys"
artifact: com.azure:azure-security-keyvault-keys:4.4.0-beta.5
