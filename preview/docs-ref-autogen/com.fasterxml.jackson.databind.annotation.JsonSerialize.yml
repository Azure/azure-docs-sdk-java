### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.annotation.JsonSerialize"
fullName: "com.fasterxml.jackson.databind.annotation.JsonSerialize"
name: "JsonSerialize"
nameWithType: "JsonSerialize"
summary: "Annotation used for configuring serialization aspects, by attaching to \"getter\" methods or fields, or to value classes. When annotating value classes, configuration is used for instances of the value class but can be overridden by more specific annotations (ones that attach to methods or fields).\n\nAn example annotation would be:\n\n```java\n@JsonSerialize(using=MySerializer.class,\n    as=MySubClass.class,\n    typing=JsonSerialize.Typing.STATIC\n  )\n```\n\n(which would be redundant, since some properties block others: specifically, 'using' has precedence over 'as', which has precedence over 'typing' setting)"
syntax: "public interface JsonSerialize implements Annotation"
methods:
- "com.fasterxml.jackson.databind.annotation.JsonSerialize.as()"
- "com.fasterxml.jackson.databind.annotation.JsonSerialize.contentAs()"
- "com.fasterxml.jackson.databind.annotation.JsonSerialize.contentConverter()"
- "com.fasterxml.jackson.databind.annotation.JsonSerialize.contentUsing()"
- "com.fasterxml.jackson.databind.annotation.JsonSerialize.converter()"
- "com.fasterxml.jackson.databind.annotation.JsonSerialize.include()"
- "com.fasterxml.jackson.databind.annotation.JsonSerialize.keyAs()"
- "com.fasterxml.jackson.databind.annotation.JsonSerialize.keyUsing()"
- "com.fasterxml.jackson.databind.annotation.JsonSerialize.nullsUsing()"
- "com.fasterxml.jackson.databind.annotation.JsonSerialize.typing()"
- "com.fasterxml.jackson.databind.annotation.JsonSerialize.using()"
type: "interface"
implements:
- "<xref href=\"java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
