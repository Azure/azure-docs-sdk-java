### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.util.TokenBuffer.writeStartObject*"
fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.writeStartObject"
name: "writeStartObject"
nameWithType: "TokenBuffer.writeStartObject"
members:
- uid: "com.fasterxml.jackson.databind.util.TokenBuffer.writeStartObject()"
  fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.writeStartObject()"
  name: "writeStartObject()"
  nameWithType: "TokenBuffer.writeStartObject()"
  summary: "Method for writing starting marker of an Object value (character '\\{'; plus possible white space decoration if pretty-printing is enabled).\n\nObject values can be written in any context where values are allowed: meaning everywhere except for when a field name is expected."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeStartObject()"
  syntax: "public final void writeStartObject()"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.util.TokenBuffer.writeStartObject(java.lang.Object)"
  fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.writeStartObject(Object forValue)"
  name: "writeStartObject(Object forValue)"
  nameWithType: "TokenBuffer.writeStartObject(Object forValue)"
  summary: "Method for writing starting marker of an Object value to represent the given Java Object value. Argument is offered as metadata, but more importantly it should be assigned as the \"current value\" for the Object content that gets constructed and initialized.\n\nObject values can be written in any context where values are allowed: meaning everywhere except for when a field name is expected."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeStartObject(java.lang.Object)"
  parameters:
  - name: "forValue"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeStartObject(Object forValue)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.util.TokenBuffer.writeStartObject(java.lang.Object,int)"
  fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.writeStartObject(Object forValue, int size)"
  name: "writeStartObject(Object forValue, int size)"
  nameWithType: "TokenBuffer.writeStartObject(Object forValue, int size)"
  summary: "Method for writing starting marker of an Object value to represent the given Java Object value. Argument is offered as metadata, but more importantly it should be assigned as the \"current value\" for the Object content that gets constructed and initialized. In addition, caller knows number of key/value pairs (\"properties\") that will get written for the Object value: this is relevant for some format backends (but not, as an example, for JSON).\n\nObject values can be written in any context where values are allowed: meaning everywhere except for when a field name is expected."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeStartObject(java.lang.Object,int)"
  parameters:
  - name: "forValue"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "size"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeStartObject(Object forValue, int size)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.util"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
