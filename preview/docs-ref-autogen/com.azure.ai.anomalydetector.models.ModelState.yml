### YamlMime:JavaType
uid: "com.azure.ai.anomalydetector.models.ModelState"
fullName: "com.azure.ai.anomalydetector.models.ModelState"
name: "ModelState"
nameWithType: "ModelState"
summary: "The Model<wbr>State model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ModelState"
constructors:
- uid: "com.azure.ai.anomalydetector.models.ModelState.ModelState()"
  fullName: "com.azure.ai.anomalydetector.models.ModelState.ModelState()"
  name: "ModelState()"
  nameWithType: "ModelState.ModelState()"
  syntax: "public ModelState()"
methods:
- uid: "com.azure.ai.anomalydetector.models.ModelState.getEpochIds()"
  fullName: "com.azure.ai.anomalydetector.models.ModelState.getEpochIds()"
  name: "getEpochIds()"
  nameWithType: "ModelState.getEpochIds()"
  summary: "Get the epoch<wbr>Ids property: Epoch id."
  syntax: "public List<Integer> getEpochIds()"
  desc: "Get the epochIds property: Epoch id."
  returns:
    description: "the epochIds value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.anomalydetector.models.ModelState.getLatenciesInSeconds()"
  fullName: "com.azure.ai.anomalydetector.models.ModelState.getLatenciesInSeconds()"
  name: "getLatenciesInSeconds()"
  nameWithType: "ModelState.getLatenciesInSeconds()"
  summary: "Get the latencies<wbr>InSeconds property: The latencies<wbr>InSeconds property."
  syntax: "public List<Float> getLatenciesInSeconds()"
  desc: "Get the latenciesInSeconds property: The latenciesInSeconds property."
  returns:
    description: "the latenciesInSeconds value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.anomalydetector.models.ModelState.getTrainLosses()"
  fullName: "com.azure.ai.anomalydetector.models.ModelState.getTrainLosses()"
  name: "getTrainLosses()"
  nameWithType: "ModelState.getTrainLosses()"
  summary: "Get the train<wbr>Losses property: The train<wbr>Losses property."
  syntax: "public List<Float> getTrainLosses()"
  desc: "Get the trainLosses property: The trainLosses property."
  returns:
    description: "the trainLosses value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.anomalydetector.models.ModelState.getValidationLosses()"
  fullName: "com.azure.ai.anomalydetector.models.ModelState.getValidationLosses()"
  name: "getValidationLosses()"
  nameWithType: "ModelState.getValidationLosses()"
  summary: "Get the validation<wbr>Losses property: The validation<wbr>Losses property."
  syntax: "public List<Float> getValidationLosses()"
  desc: "Get the validationLosses property: The validationLosses property."
  returns:
    description: "the validationLosses value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.anomalydetector.models.ModelState.setEpochIds(java.util.List<java.lang.Integer>)"
  fullName: "com.azure.ai.anomalydetector.models.ModelState.setEpochIds(List<Integer> epochIds)"
  name: "setEpochIds(List<Integer> epochIds)"
  nameWithType: "ModelState.setEpochIds(List<Integer> epochIds)"
  summary: "Set the epoch<wbr>Ids property: Epoch id."
  parameters:
  - description: "the epochIds value to set."
    name: "epochIds"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ModelState setEpochIds(List<Integer> epochIds)"
  desc: "Set the epochIds property: Epoch id."
  returns:
    description: "the ModelState object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ModelState?alt=com.azure.ai.anomalydetector.models.ModelState&text=ModelState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.ModelState.setLatenciesInSeconds(java.util.List<java.lang.Float>)"
  fullName: "com.azure.ai.anomalydetector.models.ModelState.setLatenciesInSeconds(List<Float> latenciesInSeconds)"
  name: "setLatenciesInSeconds(List<Float> latenciesInSeconds)"
  nameWithType: "ModelState.setLatenciesInSeconds(List<Float> latenciesInSeconds)"
  summary: "Set the latencies<wbr>InSeconds property: The latencies<wbr>InSeconds property."
  parameters:
  - description: "the latenciesInSeconds value to set."
    name: "latenciesInSeconds"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ModelState setLatenciesInSeconds(List<Float> latenciesInSeconds)"
  desc: "Set the latenciesInSeconds property: The latenciesInSeconds property."
  returns:
    description: "the ModelState object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ModelState?alt=com.azure.ai.anomalydetector.models.ModelState&text=ModelState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.ModelState.setTrainLosses(java.util.List<java.lang.Float>)"
  fullName: "com.azure.ai.anomalydetector.models.ModelState.setTrainLosses(List<Float> trainLosses)"
  name: "setTrainLosses(List<Float> trainLosses)"
  nameWithType: "ModelState.setTrainLosses(List<Float> trainLosses)"
  summary: "Set the train<wbr>Losses property: The train<wbr>Losses property."
  parameters:
  - description: "the trainLosses value to set."
    name: "trainLosses"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ModelState setTrainLosses(List<Float> trainLosses)"
  desc: "Set the trainLosses property: The trainLosses property."
  returns:
    description: "the ModelState object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ModelState?alt=com.azure.ai.anomalydetector.models.ModelState&text=ModelState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.anomalydetector.models.ModelState.setValidationLosses(java.util.List<java.lang.Float>)"
  fullName: "com.azure.ai.anomalydetector.models.ModelState.setValidationLosses(List<Float> validationLosses)"
  name: "setValidationLosses(List<Float> validationLosses)"
  nameWithType: "ModelState.setValidationLosses(List<Float> validationLosses)"
  summary: "Set the validation<wbr>Losses property: The validation<wbr>Losses property."
  parameters:
  - description: "the validationLosses value to set."
    name: "validationLosses"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ModelState setValidationLosses(List<Float> validationLosses)"
  desc: "Set the validationLosses property: The validationLosses property."
  returns:
    description: "the ModelState object itself."
    type: "<xref href=\"com.azure.ai.anomalydetector.models.ModelState?alt=com.azure.ai.anomalydetector.models.ModelState&text=ModelState\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The ModelState model."
metadata: {}
package: "com.azure.ai.anomalydetector.models"
artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.4
