### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  id: RoleAssignmentsClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent
  children:
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.RoleAssignmentsClient(com.azure.resourcemanager.authorization.AuthorizationManagementClient)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createById(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createById(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdAsync(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdAsync(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.delete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteById(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteById(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.get(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.get(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getById(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getById(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list()
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync()
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupSinglePageAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceGroupNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceGroupNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeSinglePageAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  langs:
  - java
  name: RoleAssignmentsClient
  nameWithType: RoleAssignmentsClient
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  type: Class
  package: com.azure.resourcemanager.authorization.fluent
  summary: An instance of this class provides access to all the operations defined in RoleAssignments.
  syntax:
    content: public final class RoleAssignmentsClient implements InnerSupportsListing<RoleAssignmentInner>, InnerSupportsDelete<RoleAssignmentInner>
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.RoleAssignmentsClient(com.azure.resourcemanager.authorization.AuthorizationManagementClient)
  id: RoleAssignmentsClient(com.azure.resourcemanager.authorization.AuthorizationManagementClient)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: RoleAssignmentsClient(AuthorizationManagementClient client)
  nameWithType: RoleAssignmentsClient.RoleAssignmentsClient(AuthorizationManagementClient client)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.RoleAssignmentsClient(AuthorizationManagementClient client)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.RoleAssignmentsClient*
  type: Constructor
  package: com.azure.resourcemanager.authorization.fluent
  summary: Initializes an instance of RoleAssignmentsClient.
  syntax:
    content: public RoleAssignmentsClient(AuthorizationManagementClient client)
    parameters:
    - id: client
      type: com.azure.resourcemanager.authorization.AuthorizationManagementClient
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  id: create(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)
  nameWithType: RoleAssignmentsClient.create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Creates a role assignment.
  syntax:
    content: public RoleAssignmentInner create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)
    parameters:
    - id: scope
      type: java.lang.String
      description: >-
        The scope of the role assignment to create. The scope can be any REST resource instance. For
             example, use '/subscriptions/{subscription-id}/' for a subscription,
             '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and
             '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'
             for a resource.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to create. It can be any valid GUID.
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters
      description: Role assignment create parameters.
    return:
      type: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  id: create(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
  nameWithType: RoleAssignmentsClient.create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Creates a role assignment.
  syntax:
    content: public RoleAssignmentInner create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
    parameters:
    - id: scope
      type: java.lang.String
      description: >-
        The scope of the role assignment to create. The scope can be any REST resource instance. For
             example, use '/subscriptions/{subscription-id}/' for a subscription,
             '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and
             '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'
             for a resource.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to create. It can be any valid GUID.
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters
      description: Role assignment create parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  id: createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: createAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)
  nameWithType: RoleAssignmentsClient.createAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Creates a role assignment.
  syntax:
    content: public Mono<RoleAssignmentInner> createAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)
    parameters:
    - id: scope
      type: java.lang.String
      description: >-
        The scope of the role assignment to create. The scope can be any REST resource instance. For
             example, use '/subscriptions/{subscription-id}/' for a subscription,
             '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and
             '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'
             for a resource.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to create. It can be any valid GUID.
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters
      description: Role assignment create parameters.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  id: createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: createAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
  nameWithType: RoleAssignmentsClient.createAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Creates a role assignment.
  syntax:
    content: public Mono<RoleAssignmentInner> createAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
    parameters:
    - id: scope
      type: java.lang.String
      description: >-
        The scope of the role assignment to create. The scope can be any REST resource instance. For
             example, use '/subscriptions/{subscription-id}/' for a subscription,
             '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and
             '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'
             for a resource.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to create. It can be any valid GUID.
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters
      description: Role assignment create parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createById(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  id: createById(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: createById(String roleId, RoleAssignmentCreateParameters parameters)
  nameWithType: RoleAssignmentsClient.createById(String roleId, RoleAssignmentCreateParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createById(String roleId, RoleAssignmentCreateParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createById*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Creates a role assignment by ID.
  syntax:
    content: public RoleAssignmentInner createById(String roleId, RoleAssignmentCreateParameters parameters)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to create.
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters
      description: Role assignment create parameters.
    return:
      type: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createById(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  id: createById(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: createById(String roleId, RoleAssignmentCreateParameters parameters, Context context)
  nameWithType: RoleAssignmentsClient.createById(String roleId, RoleAssignmentCreateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createById(String roleId, RoleAssignmentCreateParameters parameters, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createById*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Creates a role assignment by ID.
  syntax:
    content: public RoleAssignmentInner createById(String roleId, RoleAssignmentCreateParameters parameters, Context context)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to create.
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters
      description: Role assignment create parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdAsync(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  id: createByIdAsync(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: createByIdAsync(String roleId, RoleAssignmentCreateParameters parameters)
  nameWithType: RoleAssignmentsClient.createByIdAsync(String roleId, RoleAssignmentCreateParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdAsync(String roleId, RoleAssignmentCreateParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Creates a role assignment by ID.
  syntax:
    content: public Mono<RoleAssignmentInner> createByIdAsync(String roleId, RoleAssignmentCreateParameters parameters)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to create.
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters
      description: Role assignment create parameters.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdAsync(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  id: createByIdAsync(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: createByIdAsync(String roleId, RoleAssignmentCreateParameters parameters, Context context)
  nameWithType: RoleAssignmentsClient.createByIdAsync(String roleId, RoleAssignmentCreateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdAsync(String roleId, RoleAssignmentCreateParameters parameters, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Creates a role assignment by ID.
  syntax:
    content: public Mono<RoleAssignmentInner> createByIdAsync(String roleId, RoleAssignmentCreateParameters parameters, Context context)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to create.
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters
      description: Role assignment create parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  id: createByIdWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: createByIdWithResponseAsync(String roleId, RoleAssignmentCreateParameters parameters)
  nameWithType: RoleAssignmentsClient.createByIdWithResponseAsync(String roleId, RoleAssignmentCreateParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdWithResponseAsync(String roleId, RoleAssignmentCreateParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Creates a role assignment by ID.
  syntax:
    content: public Mono<Response<RoleAssignmentInner>> createByIdWithResponseAsync(String roleId, RoleAssignmentCreateParameters parameters)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to create.
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters
      description: Role assignment create parameters.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  id: createByIdWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: createByIdWithResponseAsync(String roleId, RoleAssignmentCreateParameters parameters, Context context)
  nameWithType: RoleAssignmentsClient.createByIdWithResponseAsync(String roleId, RoleAssignmentCreateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdWithResponseAsync(String roleId, RoleAssignmentCreateParameters parameters, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Creates a role assignment by ID.
  syntax:
    content: public Mono<Response<RoleAssignmentInner>> createByIdWithResponseAsync(String roleId, RoleAssignmentCreateParameters parameters, Context context)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to create.
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters
      description: Role assignment create parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  id: createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: createWithResponseAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)
  nameWithType: RoleAssignmentsClient.createWithResponseAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createWithResponseAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Creates a role assignment.
  syntax:
    content: public Mono<Response<RoleAssignmentInner>> createWithResponseAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)
    parameters:
    - id: scope
      type: java.lang.String
      description: >-
        The scope of the role assignment to create. The scope can be any REST resource instance. For
             example, use '/subscriptions/{subscription-id}/' for a subscription,
             '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and
             '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'
             for a resource.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to create. It can be any valid GUID.
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters
      description: Role assignment create parameters.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  id: createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: createWithResponseAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
  nameWithType: RoleAssignmentsClient.createWithResponseAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createWithResponseAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Creates a role assignment.
  syntax:
    content: public Mono<Response<RoleAssignmentInner>> createWithResponseAsync(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
    parameters:
    - id: scope
      type: java.lang.String
      description: >-
        The scope of the role assignment to create. The scope can be any REST resource instance. For
             example, use '/subscriptions/{subscription-id}/' for a subscription,
             '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and
             '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'
             for a resource.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to create. It can be any valid GUID.
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters
      description: Role assignment create parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: delete(String scope, String roleAssignmentName)
  nameWithType: RoleAssignmentsClient.delete(String scope, String roleAssignmentName)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.delete(String scope, String roleAssignmentName)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.delete*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Deletes a role assignment.
  syntax:
    content: public RoleAssignmentInner delete(String scope, String roleAssignmentName)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignment to delete.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to delete.
    return:
      type: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: delete(String scope, String roleAssignmentName, Context context)
  nameWithType: RoleAssignmentsClient.delete(String scope, String roleAssignmentName, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.delete(String scope, String roleAssignmentName, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.delete*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Deletes a role assignment.
  syntax:
    content: public RoleAssignmentInner delete(String scope, String roleAssignmentName, Context context)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignment to delete.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: deleteAsync(String scope, String roleAssignmentName)
  nameWithType: RoleAssignmentsClient.deleteAsync(String scope, String roleAssignmentName)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteAsync(String scope, String roleAssignmentName)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Deletes a role assignment.
  syntax:
    content: public Mono<RoleAssignmentInner> deleteAsync(String scope, String roleAssignmentName)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignment to delete.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to delete.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: deleteAsync(String scope, String roleAssignmentName, Context context)
  nameWithType: RoleAssignmentsClient.deleteAsync(String scope, String roleAssignmentName, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteAsync(String scope, String roleAssignmentName, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Deletes a role assignment.
  syntax:
    content: public Mono<RoleAssignmentInner> deleteAsync(String scope, String roleAssignmentName, Context context)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignment to delete.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteById(java.lang.String)
  id: deleteById(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: deleteById(String roleId)
  nameWithType: RoleAssignmentsClient.deleteById(String roleId)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteById(String roleId)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteById*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Deletes a role assignment.
  syntax:
    content: public RoleAssignmentInner deleteById(String roleId)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to delete.
    return:
      type: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteById(java.lang.String,com.azure.core.util.Context)
  id: deleteById(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: deleteById(String roleId, Context context)
  nameWithType: RoleAssignmentsClient.deleteById(String roleId, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteById(String roleId, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteById*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Deletes a role assignment.
  syntax:
    content: public RoleAssignmentInner deleteById(String roleId, Context context)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdAsync(java.lang.String)
  id: deleteByIdAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: deleteByIdAsync(String roleId)
  nameWithType: RoleAssignmentsClient.deleteByIdAsync(String roleId)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdAsync(String roleId)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Deletes a role assignment.
  syntax:
    content: public Mono<RoleAssignmentInner> deleteByIdAsync(String roleId)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to delete.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdAsync(java.lang.String,com.azure.core.util.Context)
  id: deleteByIdAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: deleteByIdAsync(String roleId, Context context)
  nameWithType: RoleAssignmentsClient.deleteByIdAsync(String roleId, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdAsync(String roleId, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Deletes a role assignment.
  syntax:
    content: public Mono<RoleAssignmentInner> deleteByIdAsync(String roleId, Context context)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdWithResponseAsync(java.lang.String)
  id: deleteByIdWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: deleteByIdWithResponseAsync(String roleId)
  nameWithType: RoleAssignmentsClient.deleteByIdWithResponseAsync(String roleId)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdWithResponseAsync(String roleId)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Deletes a role assignment.
  syntax:
    content: public Mono<Response<RoleAssignmentInner>> deleteByIdWithResponseAsync(String roleId)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to delete.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: deleteByIdWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: deleteByIdWithResponseAsync(String roleId, Context context)
  nameWithType: RoleAssignmentsClient.deleteByIdWithResponseAsync(String roleId, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdWithResponseAsync(String roleId, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Deletes a role assignment.
  syntax:
    content: public Mono<Response<RoleAssignmentInner>> deleteByIdWithResponseAsync(String roleId, Context context)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: deleteWithResponseAsync(String scope, String roleAssignmentName)
  nameWithType: RoleAssignmentsClient.deleteWithResponseAsync(String scope, String roleAssignmentName)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteWithResponseAsync(String scope, String roleAssignmentName)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Deletes a role assignment.
  syntax:
    content: public Mono<Response<RoleAssignmentInner>> deleteWithResponseAsync(String scope, String roleAssignmentName)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignment to delete.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to delete.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: deleteWithResponseAsync(String scope, String roleAssignmentName, Context context)
  nameWithType: RoleAssignmentsClient.deleteWithResponseAsync(String scope, String roleAssignmentName, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteWithResponseAsync(String scope, String roleAssignmentName, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Deletes a role assignment.
  syntax:
    content: public Mono<Response<RoleAssignmentInner>> deleteWithResponseAsync(String scope, String roleAssignmentName, Context context)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignment to delete.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role Assignments.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.get(java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: get(String scope, String roleAssignmentName)
  nameWithType: RoleAssignmentsClient.get(String scope, String roleAssignmentName)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.get(String scope, String roleAssignmentName)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.get*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Get the specified role assignment.
  syntax:
    content: public RoleAssignmentInner get(String scope, String roleAssignmentName)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignment.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to get.
    return:
      type: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
      description: the specified role assignment.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.get(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: get(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: get(String scope, String roleAssignmentName, Context context)
  nameWithType: RoleAssignmentsClient.get(String scope, String roleAssignmentName, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.get(String scope, String roleAssignmentName, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.get*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Get the specified role assignment.
  syntax:
    content: public RoleAssignmentInner get(String scope, String roleAssignmentName, Context context)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignment.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to get.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
      description: the specified role assignment.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getAsync(java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: getAsync(String scope, String roleAssignmentName)
  nameWithType: RoleAssignmentsClient.getAsync(String scope, String roleAssignmentName)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getAsync(String scope, String roleAssignmentName)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Get the specified role assignment.
  syntax:
    content: public Mono<RoleAssignmentInner> getAsync(String scope, String roleAssignmentName)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignment.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to get.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: the specified role assignment.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: getAsync(String scope, String roleAssignmentName, Context context)
  nameWithType: RoleAssignmentsClient.getAsync(String scope, String roleAssignmentName, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getAsync(String scope, String roleAssignmentName, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Get the specified role assignment.
  syntax:
    content: public Mono<RoleAssignmentInner> getAsync(String scope, String roleAssignmentName, Context context)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignment.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to get.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: the specified role assignment.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getById(java.lang.String)
  id: getById(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: getById(String roleId)
  nameWithType: RoleAssignmentsClient.getById(String roleId)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getById(String roleId)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getById*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets a role assignment by ID.
  syntax:
    content: public RoleAssignmentInner getById(String roleId)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to get.
    return:
      type: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
      description: a role assignment by ID.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getById(java.lang.String,com.azure.core.util.Context)
  id: getById(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: getById(String roleId, Context context)
  nameWithType: RoleAssignmentsClient.getById(String roleId, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getById(String roleId, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getById*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets a role assignment by ID.
  syntax:
    content: public RoleAssignmentInner getById(String roleId, Context context)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to get.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
      description: a role assignment by ID.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdAsync(java.lang.String)
  id: getByIdAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: getByIdAsync(String roleId)
  nameWithType: RoleAssignmentsClient.getByIdAsync(String roleId)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdAsync(String roleId)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets a role assignment by ID.
  syntax:
    content: public Mono<RoleAssignmentInner> getByIdAsync(String roleId)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to get.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: a role assignment by ID.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdAsync(java.lang.String,com.azure.core.util.Context)
  id: getByIdAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: getByIdAsync(String roleId, Context context)
  nameWithType: RoleAssignmentsClient.getByIdAsync(String roleId, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdAsync(String roleId, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets a role assignment by ID.
  syntax:
    content: public Mono<RoleAssignmentInner> getByIdAsync(String roleId, Context context)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to get.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: a role assignment by ID.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdWithResponseAsync(java.lang.String)
  id: getByIdWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: getByIdWithResponseAsync(String roleId)
  nameWithType: RoleAssignmentsClient.getByIdWithResponseAsync(String roleId)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdWithResponseAsync(String roleId)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets a role assignment by ID.
  syntax:
    content: public Mono<Response<RoleAssignmentInner>> getByIdWithResponseAsync(String roleId)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to get.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: a role assignment by ID.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: getByIdWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: getByIdWithResponseAsync(String roleId, Context context)
  nameWithType: RoleAssignmentsClient.getByIdWithResponseAsync(String roleId, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdWithResponseAsync(String roleId, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets a role assignment by ID.
  syntax:
    content: public Mono<Response<RoleAssignmentInner>> getByIdWithResponseAsync(String roleId, Context context)
    parameters:
    - id: roleId
      type: java.lang.String
      description: The ID of the role assignment to get.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: a role assignment by ID.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getWithResponseAsync(java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: getWithResponseAsync(String scope, String roleAssignmentName)
  nameWithType: RoleAssignmentsClient.getWithResponseAsync(String scope, String roleAssignmentName)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getWithResponseAsync(String scope, String roleAssignmentName)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Get the specified role assignment.
  syntax:
    content: public Mono<Response<RoleAssignmentInner>> getWithResponseAsync(String scope, String roleAssignmentName)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignment.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to get.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: the specified role assignment.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: getWithResponseAsync(String scope, String roleAssignmentName, Context context)
  nameWithType: RoleAssignmentsClient.getWithResponseAsync(String scope, String roleAssignmentName, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getWithResponseAsync(String scope, String roleAssignmentName, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Get the specified role assignment.
  syntax:
    content: public Mono<Response<RoleAssignmentInner>> getWithResponseAsync(String scope, String roleAssignmentName, Context context)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignment.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to get.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: the specified role assignment.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: list()
  nameWithType: RoleAssignmentsClient.list()
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list()
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets all role assignments for the subscription.
  syntax:
    content: public PagedIterable<RoleAssignmentInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: all role assignments for the subscription.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list(java.lang.String)
  id: list(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: list(String filter)
  nameWithType: RoleAssignmentsClient.list(String filter)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list(String filter)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets all role assignments for the subscription.
  syntax:
    content: public PagedIterable<RoleAssignmentInner> list(String filter)
    parameters:
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: all role assignments for the subscription.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list(java.lang.String,com.azure.core.util.Context)
  id: list(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: list(String filter, Context context)
  nameWithType: RoleAssignmentsClient.list(String filter, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list(String filter, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets all role assignments for the subscription.
  syntax:
    content: public PagedIterable<RoleAssignmentInner> list(String filter, Context context)
    parameters:
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: all role assignments for the subscription.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listAsync()
  nameWithType: RoleAssignmentsClient.listAsync()
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync()
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets all role assignments for the subscription.
  syntax:
    content: public PagedFlux<RoleAssignmentInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: all role assignments for the subscription.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync(java.lang.String)
  id: listAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listAsync(String filter)
  nameWithType: RoleAssignmentsClient.listAsync(String filter)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync(String filter)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets all role assignments for the subscription.
  syntax:
    content: public PagedFlux<RoleAssignmentInner> listAsync(String filter)
    parameters:
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: all role assignments for the subscription.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync(java.lang.String,com.azure.core.util.Context)
  id: listAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listAsync(String filter, Context context)
  nameWithType: RoleAssignmentsClient.listAsync(String filter, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync(String filter, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets all role assignments for the subscription.
  syntax:
    content: public PagedFlux<RoleAssignmentInner> listAsync(String filter, Context context)
    parameters:
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: all role assignments for the subscription.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup(java.lang.String)
  id: listByResourceGroup(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: RoleAssignmentsClient.listByResourceGroup(String resourceGroupName)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup(String resourceGroupName)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a resource group.
  syntax:
    content: public PagedIterable<RoleAssignmentInner> listByResourceGroup(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a resource group.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup(java.lang.String,java.lang.String)
  id: listByResourceGroup(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, String filter)
  nameWithType: RoleAssignmentsClient.listByResourceGroup(String resourceGroupName, String filter)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup(String resourceGroupName, String filter)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a resource group.
  syntax:
    content: public PagedIterable<RoleAssignmentInner> listByResourceGroup(String resourceGroupName, String filter)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a resource group.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, String filter, Context context)
  nameWithType: RoleAssignmentsClient.listByResourceGroup(String resourceGroupName, String filter, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup(String resourceGroupName, String filter, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a resource group.
  syntax:
    content: public PagedIterable<RoleAssignmentInner> listByResourceGroup(String resourceGroupName, String filter, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a resource group.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync(java.lang.String)
  id: listByResourceGroupAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: RoleAssignmentsClient.listByResourceGroupAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a resource group.
  syntax:
    content: public PagedFlux<RoleAssignmentInner> listByResourceGroupAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a resource group.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync(java.lang.String,java.lang.String)
  id: listByResourceGroupAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName, String filter)
  nameWithType: RoleAssignmentsClient.listByResourceGroupAsync(String resourceGroupName, String filter)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync(String resourceGroupName, String filter)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a resource group.
  syntax:
    content: public PagedFlux<RoleAssignmentInner> listByResourceGroupAsync(String resourceGroupName, String filter)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a resource group.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName, String filter, Context context)
  nameWithType: RoleAssignmentsClient.listByResourceGroupAsync(String resourceGroupName, String filter, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync(String resourceGroupName, String filter, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a resource group.
  syntax:
    content: public PagedFlux<RoleAssignmentInner> listByResourceGroupAsync(String resourceGroupName, String filter, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a resource group.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupSinglePageAsync(java.lang.String,java.lang.String)
  id: listByResourceGroupSinglePageAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listByResourceGroupSinglePageAsync(String resourceGroupName, String filter)
  nameWithType: RoleAssignmentsClient.listByResourceGroupSinglePageAsync(String resourceGroupName, String filter)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupSinglePageAsync(String resourceGroupName, String filter)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a resource group.
  syntax:
    content: public Mono<PagedResponse<RoleAssignmentInner>> listByResourceGroupSinglePageAsync(String resourceGroupName, String filter)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role assignments for a resource group.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroupSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listByResourceGroupSinglePageAsync(String resourceGroupName, String filter, Context context)
  nameWithType: RoleAssignmentsClient.listByResourceGroupSinglePageAsync(String resourceGroupName, String filter, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupSinglePageAsync(String resourceGroupName, String filter, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a resource group.
  syntax:
    content: public Mono<PagedResponse<RoleAssignmentInner>> listByResourceGroupSinglePageAsync(String resourceGroupName, String filter, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role assignments for a resource group.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listForResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForResource(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName)
  nameWithType: RoleAssignmentsClient.listForResource(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a resource.
  syntax:
    content: public PagedIterable<RoleAssignmentInner> listForResource(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to get role assignments for.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a resource.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listForResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForResource(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter)
  nameWithType: RoleAssignmentsClient.listForResource(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a resource.
  syntax:
    content: public PagedIterable<RoleAssignmentInner> listForResource(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to get role assignments for.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a resource.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listForResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForResource(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter, Context context)
  nameWithType: RoleAssignmentsClient.listForResource(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a resource.
  syntax:
    content: public PagedIterable<RoleAssignmentInner> listForResource(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to get role assignments for.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a resource.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listForResourceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName)
  nameWithType: RoleAssignmentsClient.listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a resource.
  syntax:
    content: public PagedFlux<RoleAssignmentInner> listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to get role assignments for.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a resource.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listForResourceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter)
  nameWithType: RoleAssignmentsClient.listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a resource.
  syntax:
    content: public PagedFlux<RoleAssignmentInner> listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to get role assignments for.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a resource.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listForResourceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter, Context context)
  nameWithType: RoleAssignmentsClient.listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a resource.
  syntax:
    content: public PagedFlux<RoleAssignmentInner> listForResourceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to get role assignments for.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a resource.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceGroupNextSinglePageAsync(java.lang.String)
  id: listForResourceGroupNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForResourceGroupNextSinglePageAsync(String nextLink)
  nameWithType: RoleAssignmentsClient.listForResourceGroupNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceGroupNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceGroupNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<RoleAssignmentInner>> listForResourceGroupNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role assignment list operation result.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceGroupNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listForResourceGroupNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForResourceGroupNextSinglePageAsync(String nextLink, Context context)
  nameWithType: RoleAssignmentsClient.listForResourceGroupNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceGroupNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceGroupNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<RoleAssignmentInner>> listForResourceGroupNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role assignment list operation result.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceNextSinglePageAsync(java.lang.String)
  id: listForResourceNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForResourceNextSinglePageAsync(String nextLink)
  nameWithType: RoleAssignmentsClient.listForResourceNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<RoleAssignmentInner>> listForResourceNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role assignment list operation result.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listForResourceNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForResourceNextSinglePageAsync(String nextLink, Context context)
  nameWithType: RoleAssignmentsClient.listForResourceNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<RoleAssignmentInner>> listForResourceNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role assignment list operation result.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listForResourceSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForResourceSinglePageAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter)
  nameWithType: RoleAssignmentsClient.listForResourceSinglePageAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceSinglePageAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a resource.
  syntax:
    content: public Mono<PagedResponse<RoleAssignmentInner>> listForResourceSinglePageAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to get role assignments for.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role assignments for a resource.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listForResourceSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForResourceSinglePageAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter, Context context)
  nameWithType: RoleAssignmentsClient.listForResourceSinglePageAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceSinglePageAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a resource.
  syntax:
    content: public Mono<PagedResponse<RoleAssignmentInner>> listForResourceSinglePageAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String filter, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to get role assignments for.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role assignments for a resource.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope(java.lang.String)
  id: listForScope(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForScope(String scope)
  nameWithType: RoleAssignmentsClient.listForScope(String scope)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope(String scope)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a scope.
  syntax:
    content: public PagedIterable<RoleAssignmentInner> listForScope(String scope)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignments.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a scope.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope(java.lang.String,java.lang.String)
  id: listForScope(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForScope(String scope, String filter)
  nameWithType: RoleAssignmentsClient.listForScope(String scope, String filter)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope(String scope, String filter)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a scope.
  syntax:
    content: public PagedIterable<RoleAssignmentInner> listForScope(String scope, String filter)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignments.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a scope.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listForScope(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForScope(String scope, String filter, Context context)
  nameWithType: RoleAssignmentsClient.listForScope(String scope, String filter, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope(String scope, String filter, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a scope.
  syntax:
    content: public PagedIterable<RoleAssignmentInner> listForScope(String scope, String filter, Context context)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignments.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a scope.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync(java.lang.String)
  id: listForScopeAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForScopeAsync(String scope)
  nameWithType: RoleAssignmentsClient.listForScopeAsync(String scope)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync(String scope)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a scope.
  syntax:
    content: public PagedFlux<RoleAssignmentInner> listForScopeAsync(String scope)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignments.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a scope.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync(java.lang.String,java.lang.String)
  id: listForScopeAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForScopeAsync(String scope, String filter)
  nameWithType: RoleAssignmentsClient.listForScopeAsync(String scope, String filter)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync(String scope, String filter)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a scope.
  syntax:
    content: public PagedFlux<RoleAssignmentInner> listForScopeAsync(String scope, String filter)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignments.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a scope.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listForScopeAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForScopeAsync(String scope, String filter, Context context)
  nameWithType: RoleAssignmentsClient.listForScopeAsync(String scope, String filter, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync(String scope, String filter, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a scope.
  syntax:
    content: public PagedFlux<RoleAssignmentInner> listForScopeAsync(String scope, String filter, Context context)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignments.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
      description: role assignments for a scope.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeNextSinglePageAsync(java.lang.String)
  id: listForScopeNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForScopeNextSinglePageAsync(String nextLink)
  nameWithType: RoleAssignmentsClient.listForScopeNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<RoleAssignmentInner>> listForScopeNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role assignment list operation result.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listForScopeNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForScopeNextSinglePageAsync(String nextLink, Context context)
  nameWithType: RoleAssignmentsClient.listForScopeNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<RoleAssignmentInner>> listForScopeNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role assignment list operation result.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeSinglePageAsync(java.lang.String,java.lang.String)
  id: listForScopeSinglePageAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForScopeSinglePageAsync(String scope, String filter)
  nameWithType: RoleAssignmentsClient.listForScopeSinglePageAsync(String scope, String filter)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeSinglePageAsync(String scope, String filter)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a scope.
  syntax:
    content: public Mono<PagedResponse<RoleAssignmentInner>> listForScopeSinglePageAsync(String scope, String filter)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignments.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role assignments for a scope.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listForScopeSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listForScopeSinglePageAsync(String scope, String filter, Context context)
  nameWithType: RoleAssignmentsClient.listForScopeSinglePageAsync(String scope, String filter, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeSinglePageAsync(String scope, String filter, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets role assignments for a scope.
  syntax:
    content: public Mono<PagedResponse<RoleAssignmentInner>> listForScopeSinglePageAsync(String scope, String filter, Context context)
    parameters:
    - id: scope
      type: java.lang.String
      description: The scope of the role assignments.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role assignments for a scope.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listNextSinglePageAsync(java.lang.String)
  id: listNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink)
  nameWithType: RoleAssignmentsClient.listNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<RoleAssignmentInner>> listNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role assignment list operation result.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink, Context context)
  nameWithType: RoleAssignmentsClient.listNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<RoleAssignmentInner>> listNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: role assignment list operation result.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listSinglePageAsync(java.lang.String)
  id: listSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listSinglePageAsync(String filter)
  nameWithType: RoleAssignmentsClient.listSinglePageAsync(String filter)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listSinglePageAsync(String filter)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets all role assignments for the subscription.
  syntax:
    content: public Mono<PagedResponse<RoleAssignmentInner>> listSinglePageAsync(String filter)
    parameters:
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: all role assignments for the subscription.
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
  parent: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient
  langs:
  - java
  name: listSinglePageAsync(String filter, Context context)
  nameWithType: RoleAssignmentsClient.listSinglePageAsync(String filter, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listSinglePageAsync(String filter, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets all role assignments for the subscription.
  syntax:
    content: public Mono<PagedResponse<RoleAssignmentInner>> listSinglePageAsync(String filter, Context context)
    parameters:
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
      description: all role assignments for the subscription.
references:
- uid: com.azure.resourcemanager.authorization.AuthorizationManagementClient
  name: AuthorizationManagementClient
  nameWithType: AuthorizationManagementClient
  fullName: com.azure.resourcemanager.authorization.AuthorizationManagementClient
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.RoleAssignmentsClient*
  name: RoleAssignmentsClient
  nameWithType: RoleAssignmentsClient.RoleAssignmentsClient
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.RoleAssignmentsClient
  package: com.azure.resourcemanager.authorization.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
    name: RoleAssignmentInner
    fullName: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceSinglePageAsync*
  name: listForResourceSinglePageAsync
  nameWithType: RoleAssignmentsClient.listForResourceSinglePageAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceSinglePageAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
    name: RoleAssignmentInner
    fullName: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync*
  name: listForResourceAsync
  nameWithType: RoleAssignmentsClient.listForResourceAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
    name: RoleAssignmentInner
    fullName: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource*
  name: listForResource
  nameWithType: RoleAssignmentsClient.listForResource
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResource
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupSinglePageAsync*
  name: listByResourceGroupSinglePageAsync
  nameWithType: RoleAssignmentsClient.listByResourceGroupSinglePageAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupSinglePageAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync*
  name: listByResourceGroupAsync
  nameWithType: RoleAssignmentsClient.listByResourceGroupAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroupAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup*
  name: listByResourceGroup
  nameWithType: RoleAssignmentsClient.listByResourceGroup
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listByResourceGroup
  package: com.azure.resourcemanager.authorization.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
    name: RoleAssignmentInner
    fullName: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: RoleAssignmentsClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
    name: RoleAssignmentInner
    fullName: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteAsync*
  name: deleteAsync
  nameWithType: RoleAssignmentsClient.deleteAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
  name: RoleAssignmentInner
  nameWithType: RoleAssignmentInner
  fullName: com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.delete*
  name: delete
  nameWithType: RoleAssignmentsClient.delete
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.delete
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters
  name: RoleAssignmentCreateParameters
  nameWithType: RoleAssignmentCreateParameters
  fullName: com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createWithResponseAsync*
  name: createWithResponseAsync
  nameWithType: RoleAssignmentsClient.createWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createAsync*
  name: createAsync
  nameWithType: RoleAssignmentsClient.createAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create*
  name: create
  nameWithType: RoleAssignmentsClient.create
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: RoleAssignmentsClient.getWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getAsync*
  name: getAsync
  nameWithType: RoleAssignmentsClient.getAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.get*
  name: get
  nameWithType: RoleAssignmentsClient.get
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.get
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdWithResponseAsync*
  name: deleteByIdWithResponseAsync
  nameWithType: RoleAssignmentsClient.deleteByIdWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdAsync*
  name: deleteByIdAsync
  nameWithType: RoleAssignmentsClient.deleteByIdAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteByIdAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteById*
  name: deleteById
  nameWithType: RoleAssignmentsClient.deleteById
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.deleteById
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdWithResponseAsync*
  name: createByIdWithResponseAsync
  nameWithType: RoleAssignmentsClient.createByIdWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdAsync*
  name: createByIdAsync
  nameWithType: RoleAssignmentsClient.createByIdAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createByIdAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createById*
  name: createById
  nameWithType: RoleAssignmentsClient.createById
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.createById
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdWithResponseAsync*
  name: getByIdWithResponseAsync
  nameWithType: RoleAssignmentsClient.getByIdWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdAsync*
  name: getByIdAsync
  nameWithType: RoleAssignmentsClient.getByIdAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getByIdAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getById*
  name: getById
  nameWithType: RoleAssignmentsClient.getById
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getById
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listSinglePageAsync*
  name: listSinglePageAsync
  nameWithType: RoleAssignmentsClient.listSinglePageAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listSinglePageAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync*
  name: listAsync
  nameWithType: RoleAssignmentsClient.listAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list*
  name: list
  nameWithType: RoleAssignmentsClient.list
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.list
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeSinglePageAsync*
  name: listForScopeSinglePageAsync
  nameWithType: RoleAssignmentsClient.listForScopeSinglePageAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeSinglePageAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync*
  name: listForScopeAsync
  nameWithType: RoleAssignmentsClient.listForScopeAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope*
  name: listForScope
  nameWithType: RoleAssignmentsClient.listForScope
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceNextSinglePageAsync*
  name: listForResourceNextSinglePageAsync
  nameWithType: RoleAssignmentsClient.listForResourceNextSinglePageAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceNextSinglePageAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceGroupNextSinglePageAsync*
  name: listForResourceGroupNextSinglePageAsync
  nameWithType: RoleAssignmentsClient.listForResourceGroupNextSinglePageAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForResourceGroupNextSinglePageAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listNextSinglePageAsync*
  name: listNextSinglePageAsync
  nameWithType: RoleAssignmentsClient.listNextSinglePageAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listNextSinglePageAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeNextSinglePageAsync*
  name: listForScopeNextSinglePageAsync
  nameWithType: RoleAssignmentsClient.listForScopeNextSinglePageAsync
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScopeNextSinglePageAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
  name: InnerSupportsDelete<RoleAssignmentInner>
  nameWithType: InnerSupportsDelete<RoleAssignmentInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
  name: InnerSupportsListing<RoleAssignmentInner>
  nameWithType: InnerSupportsListing<RoleAssignmentInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
  name: InnerSupportsDelete
  nameWithType: InnerSupportsDelete
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
  name: InnerSupportsListing
  nameWithType: InnerSupportsListing
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
