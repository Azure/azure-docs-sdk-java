### YamlMime:ManagedReference
items:
- uid: com.azure.data.schemaregistry.SchemaRegistryClient
  id: SchemaRegistryClient
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.4
  parent: com.azure.data.schemaregistry
  children:
  - com.azure.data.schemaregistry.SchemaRegistryClient.getSchema(java.lang.String)
  - com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaId(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SerializationType)
  - com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaIdWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SerializationType,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.schemaregistry.SchemaRegistryClient.registerSchema(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SerializationType)
  - com.azure.data.schemaregistry.SchemaRegistryClient.registerSchemaWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SerializationType,com.azure.core.util.Context)
  langs:
  - java
  name: SchemaRegistryClient
  nameWithType: SchemaRegistryClient
  fullName: com.azure.data.schemaregistry.SchemaRegistryClient
  type: Class
  package: com.azure.data.schemaregistry
  summary: HTTP-based client that interacts with Azure Schema Registry service to store and retrieve schemas on demand.
  syntax:
    content: public final class SchemaRegistryClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.data.schemaregistry.SchemaRegistryClient.SchemaRegistryClient(com.azure.data.schemaregistry.SchemaRegistryAsyncClient)
  id: SchemaRegistryClient(com.azure.data.schemaregistry.SchemaRegistryAsyncClient)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.4
  parent: com.azure.data.schemaregistry.SchemaRegistryClient
  langs:
  - java
  name: SchemaRegistryClient(SchemaRegistryAsyncClient asyncClient)
  nameWithType: SchemaRegistryClient.SchemaRegistryClient(SchemaRegistryAsyncClient asyncClient)
  fullName: com.azure.data.schemaregistry.SchemaRegistryClient.SchemaRegistryClient(SchemaRegistryAsyncClient asyncClient)
  overload: com.azure.data.schemaregistry.SchemaRegistryClient.SchemaRegistryClient*
  type: Constructor
  package: com.azure.data.schemaregistry
  syntax:
    content: " SchemaRegistryClient(SchemaRegistryAsyncClient asyncClient)"
    parameters:
    - id: asyncClient
      type: com.azure.data.schemaregistry.SchemaRegistryAsyncClient
- uid: com.azure.data.schemaregistry.SchemaRegistryClient.getSchema(java.lang.String)
  id: getSchema(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.4
  parent: com.azure.data.schemaregistry.SchemaRegistryClient
  langs:
  - java
  name: getSchema(String schemaId)
  nameWithType: SchemaRegistryClient.getSchema(String schemaId)
  fullName: com.azure.data.schemaregistry.SchemaRegistryClient.getSchema(String schemaId)
  overload: com.azure.data.schemaregistry.SchemaRegistryClient.getSchema*
  type: Method
  package: com.azure.data.schemaregistry
  summary: Gets the schema properties of the schema associated with the unique schemaId.
  syntax:
    content: public SchemaProperties getSchema(String schemaId)
    parameters:
    - id: schemaId
      type: java.lang.String
      description: The unique identifier of the schema.
    return:
      type: com.azure.data.schemaregistry.models.SchemaProperties
      description: The <xref uid="com.azure.data.schemaregistry.models.SchemaProperties" data-throw-if-not-resolved="false">SchemaProperties</xref> associated with the given <code>schemaId</code>.
- uid: com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaId(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SerializationType)
  id: getSchemaId(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SerializationType)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.4
  parent: com.azure.data.schemaregistry.SchemaRegistryClient
  langs:
  - java
  name: getSchemaId(String schemaGroup, String schemaName, String schemaString, SerializationType serializationType)
  nameWithType: SchemaRegistryClient.getSchemaId(String schemaGroup, String schemaName, String schemaString, SerializationType serializationType)
  fullName: com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaId(String schemaGroup, String schemaName, String schemaString, SerializationType serializationType)
  overload: com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaId*
  type: Method
  package: com.azure.data.schemaregistry
  summary: Gets the schema identifier associated with the given schema.
  syntax:
    content: public String getSchemaId(String schemaGroup, String schemaName, String schemaString, SerializationType serializationType)
    parameters:
    - id: schemaGroup
      type: java.lang.String
      description: The schema group.
    - id: schemaName
      type: java.lang.String
      description: The schema name.
    - id: schemaString
      type: java.lang.String
      description: The string representation of the schema.
    - id: serializationType
      type: com.azure.data.schemaregistry.models.SerializationType
      description: The serialization type of this schema.
    return:
      type: java.lang.String
      description: The unique identifier for this schema.
- uid: com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaIdWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SerializationType,com.azure.core.util.Context)
  id: getSchemaIdWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SerializationType,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.4
  parent: com.azure.data.schemaregistry.SchemaRegistryClient
  langs:
  - java
  name: getSchemaIdWithResponse(String schemaGroup, String schemaName, String schemaString, SerializationType serializationType, Context context)
  nameWithType: SchemaRegistryClient.getSchemaIdWithResponse(String schemaGroup, String schemaName, String schemaString, SerializationType serializationType, Context context)
  fullName: com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaIdWithResponse(String schemaGroup, String schemaName, String schemaString, SerializationType serializationType, Context context)
  overload: com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaIdWithResponse*
  type: Method
  package: com.azure.data.schemaregistry
  summary: Gets the schema identifier associated with the given schema.
  syntax:
    content: public Response<String> getSchemaIdWithResponse(String schemaGroup, String schemaName, String schemaString, SerializationType serializationType, Context context)
    parameters:
    - id: schemaGroup
      type: java.lang.String
      description: The schema group.
    - id: schemaName
      type: java.lang.String
      description: The schema name.
    - id: schemaString
      type: java.lang.String
      description: The string representation of the schema.
    - id: serializationType
      type: com.azure.data.schemaregistry.models.SerializationType
      description: The serialization type of this schema.
    - id: context
      type: com.azure.core.util.Context
      description: The context to pass to the Http pipeline.
    return:
      type: com.azure.core.http.rest.Response<java.lang.String>
      description: The unique identifier for this schema.
- uid: com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getSchemaWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.4
  parent: com.azure.data.schemaregistry.SchemaRegistryClient
  langs:
  - java
  name: getSchemaWithResponse(String schemaId, Context context)
  nameWithType: SchemaRegistryClient.getSchemaWithResponse(String schemaId, Context context)
  fullName: com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaWithResponse(String schemaId, Context context)
  overload: com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaWithResponse*
  type: Method
  package: com.azure.data.schemaregistry
  summary: Gets the schema properties of the schema associated with the unique schemaId.
  syntax:
    content: public Response<SchemaProperties> getSchemaWithResponse(String schemaId, Context context)
    parameters:
    - id: schemaId
      type: java.lang.String
      description: The unique identifier of the schema.
    - id: context
      type: com.azure.core.util.Context
      description: The context to pass to the Http pipeline.
    return:
      type: com.azure.core.http.rest.Response<com.azure.data.schemaregistry.models.SchemaProperties>
      description: >-
        The <xref uid="com.azure.data.schemaregistry.models.SchemaProperties" data-throw-if-not-resolved="false">SchemaProperties</xref> associated with the given <code>schemaId</code> along with the HTTP
         response.
- uid: com.azure.data.schemaregistry.SchemaRegistryClient.registerSchema(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SerializationType)
  id: registerSchema(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SerializationType)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.4
  parent: com.azure.data.schemaregistry.SchemaRegistryClient
  langs:
  - java
  name: registerSchema(String schemaGroup, String schemaName, String schemaString, SerializationType serializationType)
  nameWithType: SchemaRegistryClient.registerSchema(String schemaGroup, String schemaName, String schemaString, SerializationType serializationType)
  fullName: com.azure.data.schemaregistry.SchemaRegistryClient.registerSchema(String schemaGroup, String schemaName, String schemaString, SerializationType serializationType)
  overload: com.azure.data.schemaregistry.SchemaRegistryClient.registerSchema*
  type: Method
  package: com.azure.data.schemaregistry
  summary: Registers a new schema in the specified schema group with the given schema name. If the schema name already exists in this schema group, a new version with the updated schema string will be registered.
  syntax:
    content: public SchemaProperties registerSchema(String schemaGroup, String schemaName, String schemaString, SerializationType serializationType)
    parameters:
    - id: schemaGroup
      type: java.lang.String
      description: The schema group.
    - id: schemaName
      type: java.lang.String
      description: The schema name.
    - id: schemaString
      type: java.lang.String
      description: The string representation of the schema.
    - id: serializationType
      type: com.azure.data.schemaregistry.models.SerializationType
      description: The serialization type of this schema.
    return:
      type: com.azure.data.schemaregistry.models.SchemaProperties
      description: The schema properties on successful registration of the schema.
- uid: com.azure.data.schemaregistry.SchemaRegistryClient.registerSchemaWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SerializationType,com.azure.core.util.Context)
  id: registerSchemaWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SerializationType,com.azure.core.util.Context)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.4
  parent: com.azure.data.schemaregistry.SchemaRegistryClient
  langs:
  - java
  name: registerSchemaWithResponse(String schemaGroup, String schemaName, String schemaString, SerializationType serializationType, Context context)
  nameWithType: SchemaRegistryClient.registerSchemaWithResponse(String schemaGroup, String schemaName, String schemaString, SerializationType serializationType, Context context)
  fullName: com.azure.data.schemaregistry.SchemaRegistryClient.registerSchemaWithResponse(String schemaGroup, String schemaName, String schemaString, SerializationType serializationType, Context context)
  overload: com.azure.data.schemaregistry.SchemaRegistryClient.registerSchemaWithResponse*
  type: Method
  package: com.azure.data.schemaregistry
  summary: Registers a new schema in the specified schema group with the given schema name. If the schema name already exists in this schema group, a new version with the updated schema string will be registered.
  syntax:
    content: public Response<SchemaProperties> registerSchemaWithResponse(String schemaGroup, String schemaName, String schemaString, SerializationType serializationType, Context context)
    parameters:
    - id: schemaGroup
      type: java.lang.String
      description: The schema group.
    - id: schemaName
      type: java.lang.String
      description: The schema name.
    - id: schemaString
      type: java.lang.String
      description: The string representation of the schema.
    - id: serializationType
      type: com.azure.data.schemaregistry.models.SerializationType
      description: The serialization type of this schema.
    - id: context
      type: com.azure.core.util.Context
      description: The context to pass to the Http pipeline.
    return:
      type: com.azure.core.http.rest.Response<com.azure.data.schemaregistry.models.SchemaProperties>
      description: The schema properties on successful registration of the schema.
references:
- uid: com.azure.data.schemaregistry.SchemaRegistryAsyncClient
  name: SchemaRegistryAsyncClient
  nameWithType: SchemaRegistryAsyncClient
  fullName: com.azure.data.schemaregistry.SchemaRegistryAsyncClient
- uid: com.azure.data.schemaregistry.SchemaRegistryClient.SchemaRegistryClient*
  name: SchemaRegistryClient
  nameWithType: SchemaRegistryClient.SchemaRegistryClient
  fullName: com.azure.data.schemaregistry.SchemaRegistryClient.SchemaRegistryClient
  package: com.azure.data.schemaregistry
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.data.schemaregistry.models.SerializationType
  name: SerializationType
  nameWithType: SerializationType
  fullName: com.azure.data.schemaregistry.models.SerializationType
- uid: com.azure.data.schemaregistry.models.SchemaProperties
  name: SchemaProperties
  nameWithType: SchemaProperties
  fullName: com.azure.data.schemaregistry.models.SchemaProperties
- uid: com.azure.data.schemaregistry.SchemaRegistryClient.registerSchema*
  name: registerSchema
  nameWithType: SchemaRegistryClient.registerSchema
  fullName: com.azure.data.schemaregistry.SchemaRegistryClient.registerSchema
  package: com.azure.data.schemaregistry
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.data.schemaregistry.models.SchemaProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.data.schemaregistry.models.SchemaProperties
    name: SchemaProperties
    fullName: com.azure.data.schemaregistry.models.SchemaProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.SchemaRegistryClient.registerSchemaWithResponse*
  name: registerSchemaWithResponse
  nameWithType: SchemaRegistryClient.registerSchemaWithResponse
  fullName: com.azure.data.schemaregistry.SchemaRegistryClient.registerSchemaWithResponse
  package: com.azure.data.schemaregistry
- uid: com.azure.data.schemaregistry.SchemaRegistryClient.getSchema*
  name: getSchema
  nameWithType: SchemaRegistryClient.getSchema
  fullName: com.azure.data.schemaregistry.SchemaRegistryClient.getSchema
  package: com.azure.data.schemaregistry
- uid: com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaWithResponse*
  name: getSchemaWithResponse
  nameWithType: SchemaRegistryClient.getSchemaWithResponse
  fullName: com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaWithResponse
  package: com.azure.data.schemaregistry
- uid: com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaId*
  name: getSchemaId
  nameWithType: SchemaRegistryClient.getSchemaId
  fullName: com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaId
  package: com.azure.data.schemaregistry
- uid: com.azure.core.http.rest.Response<java.lang.String>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaIdWithResponse*
  name: getSchemaIdWithResponse
  nameWithType: SchemaRegistryClient.getSchemaIdWithResponse
  fullName: com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaIdWithResponse
  package: com.azure.data.schemaregistry
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
