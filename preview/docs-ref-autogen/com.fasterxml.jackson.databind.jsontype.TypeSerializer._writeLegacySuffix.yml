### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.jsontype.TypeSerializer._writeLegacySuffix*"
fullName: "com.fasterxml.jackson.databind.jsontype.TypeSerializer._writeLegacySuffix"
name: "_writeLegacySuffix"
nameWithType: "TypeSerializer._writeLegacySuffix"
members:
- uid: "com.fasterxml.jackson.databind.jsontype.TypeSerializer._writeLegacySuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)"
  fullName: "com.fasterxml.jackson.databind.jsontype.TypeSerializer._writeLegacySuffix(JsonGenerator g, WritableTypeId typeId)"
  name: "_writeLegacySuffix(JsonGenerator g, WritableTypeId typeId)"
  nameWithType: "TypeSerializer._writeLegacySuffix(JsonGenerator g, WritableTypeId typeId)"
  summary: "Helper method needed for backwards compatibility: since original type id can not be routed through completely, we have to reverse-engineer likely setting before calling suffix."
  parameters:
  - name: "g"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  - name: "typeId"
    type: "<xref href=\"com.fasterxml.jackson.core.type.WritableTypeId?alt=com.fasterxml.jackson.core.type.WritableTypeId&text=WritableTypeId\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final void _writeLegacySuffix(JsonGenerator g, WritableTypeId typeId)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.jsontype"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
