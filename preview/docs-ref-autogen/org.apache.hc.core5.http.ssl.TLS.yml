### YamlMime:JavaEnum
uid: "org.apache.hc.core5.http.ssl.TLS"
fullName: "org.apache.hc.core5.http.ssl.TLS"
name: "TLS"
nameWithType: "TLS"
summary: "Supported `TLS` protocol versions."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum TLS extends Enum<TLS>"
fields:
- uid: "org.apache.hc.core5.http.ssl.TLS.V_1_0"
  fullName: "org.apache.hc.core5.http.ssl.TLS.V_1_0"
  name: "V_1_0"
  nameWithType: "TLS.V_1_0"
- uid: "org.apache.hc.core5.http.ssl.TLS.V_1_1"
  fullName: "org.apache.hc.core5.http.ssl.TLS.V_1_1"
  name: "V_1_1"
  nameWithType: "TLS.V_1_1"
- uid: "org.apache.hc.core5.http.ssl.TLS.V_1_2"
  fullName: "org.apache.hc.core5.http.ssl.TLS.V_1_2"
  name: "V_1_2"
  nameWithType: "TLS.V_1_2"
- uid: "org.apache.hc.core5.http.ssl.TLS.V_1_3"
  fullName: "org.apache.hc.core5.http.ssl.TLS.V_1_3"
  name: "V_1_3"
  nameWithType: "TLS.V_1_3"
- uid: "org.apache.hc.core5.http.ssl.TLS.id"
  fullName: "org.apache.hc.core5.http.ssl.TLS.id"
  name: "id"
  nameWithType: "TLS.id"
- uid: "org.apache.hc.core5.http.ssl.TLS.version"
  fullName: "org.apache.hc.core5.http.ssl.TLS.version"
  name: "version"
  nameWithType: "TLS.version"
methods:
- uid: "org.apache.hc.core5.http.ssl.TLS.excludeWeak(java.lang.String...)"
  fullName: "org.apache.hc.core5.http.ssl.TLS.excludeWeak(String[] protocols)"
  name: "excludeWeak(String[] protocols)"
  nameWithType: "TLS.excludeWeak(String[] protocols)"
  parameters:
  - name: "protocols"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static String[] excludeWeak(String[] protocols)"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "org.apache.hc.core5.http.ssl.TLS.greaterEquals(org.apache.hc.core5.http.ProtocolVersion)"
  fullName: "org.apache.hc.core5.http.ssl.TLS.greaterEquals(ProtocolVersion protocolVersion)"
  name: "greaterEquals(ProtocolVersion protocolVersion)"
  nameWithType: "TLS.greaterEquals(ProtocolVersion protocolVersion)"
  parameters:
  - name: "protocolVersion"
    type: "<xref href=\"org.apache.hc.core5.http.ProtocolVersion?alt=org.apache.hc.core5.http.ProtocolVersion&text=ProtocolVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean greaterEquals(ProtocolVersion protocolVersion)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.core5.http.ssl.TLS.isComparable(org.apache.hc.core5.http.ProtocolVersion)"
  fullName: "org.apache.hc.core5.http.ssl.TLS.isComparable(ProtocolVersion protocolVersion)"
  name: "isComparable(ProtocolVersion protocolVersion)"
  nameWithType: "TLS.isComparable(ProtocolVersion protocolVersion)"
  parameters:
  - name: "protocolVersion"
    type: "<xref href=\"org.apache.hc.core5.http.ProtocolVersion?alt=org.apache.hc.core5.http.ProtocolVersion&text=ProtocolVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean isComparable(ProtocolVersion protocolVersion)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.core5.http.ssl.TLS.isSame(org.apache.hc.core5.http.ProtocolVersion)"
  fullName: "org.apache.hc.core5.http.ssl.TLS.isSame(ProtocolVersion protocolVersion)"
  name: "isSame(ProtocolVersion protocolVersion)"
  nameWithType: "TLS.isSame(ProtocolVersion protocolVersion)"
  parameters:
  - name: "protocolVersion"
    type: "<xref href=\"org.apache.hc.core5.http.ProtocolVersion?alt=org.apache.hc.core5.http.ProtocolVersion&text=ProtocolVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean isSame(ProtocolVersion protocolVersion)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.core5.http.ssl.TLS.lessEquals(org.apache.hc.core5.http.ProtocolVersion)"
  fullName: "org.apache.hc.core5.http.ssl.TLS.lessEquals(ProtocolVersion protocolVersion)"
  name: "lessEquals(ProtocolVersion protocolVersion)"
  nameWithType: "TLS.lessEquals(ProtocolVersion protocolVersion)"
  parameters:
  - name: "protocolVersion"
    type: "<xref href=\"org.apache.hc.core5.http.ProtocolVersion?alt=org.apache.hc.core5.http.ProtocolVersion&text=ProtocolVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean lessEquals(ProtocolVersion protocolVersion)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.core5.http.ssl.TLS.parse(java.lang.String)"
  fullName: "org.apache.hc.core5.http.ssl.TLS.parse(String s)"
  name: "parse(String s)"
  nameWithType: "TLS.parse(String s)"
  parameters:
  - name: "s"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ProtocolVersion parse(String s)"
  exceptions:
  - type: "<xref href=\"org.apache.hc.core5.http.ParseException?alt=org.apache.hc.core5.http.ParseException&text=ParseException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"org.apache.hc.core5.http.ProtocolVersion?alt=org.apache.hc.core5.http.ProtocolVersion&text=ProtocolVersion\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.core5.http.ssl.TLS.valueOf(java.lang.String)"
  fullName: "org.apache.hc.core5.http.ssl.TLS.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "TLS.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static TLS valueOf(String name)"
  returns:
    type: "<xref href=\"org.apache.hc.core5.http.ssl.TLS?alt=org.apache.hc.core5.http.ssl.TLS&text=TLS\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.core5.http.ssl.TLS.values()"
  fullName: "org.apache.hc.core5.http.ssl.TLS.values()"
  name: "values()"
  nameWithType: "TLS.values()"
  syntax: "public static TLS[] values()"
  returns:
    type: "<xref href=\"org.apache.hc.core5.http.ssl.TLS?alt=org.apache.hc.core5.http.ssl.TLS&text=TLS\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "org.apache.hc.core5.http.ssl"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
