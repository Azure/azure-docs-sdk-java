### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Splitter.splitToList*"
fullName: "com.azure.cosmos.implementation.guava25.base.Splitter.splitToList"
name: "splitToList"
nameWithType: "Splitter.splitToList"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Splitter.splitToList(java.lang.CharSequence)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Splitter.splitToList(CharSequence sequence)"
  name: "splitToList(CharSequence sequence)"
  nameWithType: "Splitter.splitToList(CharSequence sequence)"
  summary: "Splits `sequence` into string components and returns them as an immutable list. If you want an <xref uid=\"java.lang.Iterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Iterable\"></xref> which may be lazily evaluated, use <xref uid=\"com.azure.cosmos.implementation.guava25.base.Splitter.split(java.lang.CharSequence)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#split(CharSequence)\"></xref>."
  parameters:
  - description: "the sequence of characters to split"
    name: "sequence"
    type: "<xref href=\"java.lang.CharSequence?alt=java.lang.CharSequence&text=CharSequence\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public List<String> splitToList(CharSequence sequence)"
  returns:
    description: "an immutable list of the segments split from the parameter"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
