### YamlMime:JavaType
uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource"
fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource"
name: "NewRelicMonitorResource"
nameWithType: "NewRelicMonitorResource"
summary: "An immutable client-side representation of New<wbr>Relic<wbr>Monitor<wbr>Resource."
syntax: "public interface **NewRelicMonitorResource**"
methods:
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.accountCreationSource()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.accountCreationSource()"
  name: "accountCreationSource()"
  nameWithType: "NewRelicMonitorResource.accountCreationSource()"
  summary: "Gets the account<wbr>Creation<wbr>Source property: Source of account creation."
  modifiers:
  - "abstract"
  syntax: "public abstract AccountCreationSource accountCreationSource()"
  desc: "Gets the accountCreationSource property: Source of account creation."
  returns:
    description: "the accountCreationSource value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.AccountCreationSource?alt=com.azure.resourcemanager.newrelicobservability.models.AccountCreationSource&text=AccountCreationSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.getMetricRules(com.azure.resourcemanager.newrelicobservability.models.MetricsRequest)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.getMetricRules(MetricsRequest request)"
  name: "getMetricRules(MetricsRequest request)"
  nameWithType: "NewRelicMonitorResource.getMetricRules(MetricsRequest request)"
  summary: "Get metric rules."
  modifiers:
  - "abstract"
  parameters:
  - description: "The details of the get metrics status request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.MetricsRequest?alt=com.azure.resourcemanager.newrelicobservability.models.MetricsRequest&text=MetricsRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MetricRules getMetricRules(MetricsRequest request)"
  desc: "Get metric rules."
  returns:
    description: "metric rules."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.MetricRules?alt=com.azure.resourcemanager.newrelicobservability.models.MetricRules&text=MetricRules\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.getMetricRulesWithResponse(com.azure.resourcemanager.newrelicobservability.models.MetricsRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.getMetricRulesWithResponse(MetricsRequest request, Context context)"
  name: "getMetricRulesWithResponse(MetricsRequest request, Context context)"
  nameWithType: "NewRelicMonitorResource.getMetricRulesWithResponse(MetricsRequest request, Context context)"
  summary: "Get metric rules."
  modifiers:
  - "abstract"
  parameters:
  - description: "The details of the get metrics status request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.MetricsRequest?alt=com.azure.resourcemanager.newrelicobservability.models.MetricsRequest&text=MetricsRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MetricRules> getMetricRulesWithResponse(MetricsRequest request, Context context)"
  desc: "Get metric rules."
  returns:
    description: "metric rules along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.models.MetricRules?alt=com.azure.resourcemanager.newrelicobservability.models.MetricRules&text=MetricRules\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.getMetricStatus(com.azure.resourcemanager.newrelicobservability.models.MetricsStatusRequest)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.getMetricStatus(MetricsStatusRequest request)"
  name: "getMetricStatus(MetricsStatusRequest request)"
  nameWithType: "NewRelicMonitorResource.getMetricStatus(MetricsStatusRequest request)"
  summary: "Get metric status."
  modifiers:
  - "abstract"
  parameters:
  - description: "The details of the get metrics status request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.MetricsStatusRequest?alt=com.azure.resourcemanager.newrelicobservability.models.MetricsStatusRequest&text=MetricsStatusRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MetricsStatusResponse getMetricStatus(MetricsStatusRequest request)"
  desc: "Get metric status."
  returns:
    description: "metric status."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.MetricsStatusResponse?alt=com.azure.resourcemanager.newrelicobservability.models.MetricsStatusResponse&text=MetricsStatusResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.getMetricStatusWithResponse(com.azure.resourcemanager.newrelicobservability.models.MetricsStatusRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.getMetricStatusWithResponse(MetricsStatusRequest request, Context context)"
  name: "getMetricStatusWithResponse(MetricsStatusRequest request, Context context)"
  nameWithType: "NewRelicMonitorResource.getMetricStatusWithResponse(MetricsStatusRequest request, Context context)"
  summary: "Get metric status."
  modifiers:
  - "abstract"
  parameters:
  - description: "The details of the get metrics status request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.MetricsStatusRequest?alt=com.azure.resourcemanager.newrelicobservability.models.MetricsStatusRequest&text=MetricsStatusRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MetricsStatusResponse> getMetricStatusWithResponse(MetricsStatusRequest request, Context context)"
  desc: "Get metric status."
  returns:
    description: "metric status along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.models.MetricsStatusResponse?alt=com.azure.resourcemanager.newrelicobservability.models.MetricsStatusResponse&text=MetricsStatusResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.id()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.id()"
  name: "id()"
  nameWithType: "NewRelicMonitorResource.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.identity()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.identity()"
  name: "identity()"
  nameWithType: "NewRelicMonitorResource.identity()"
  summary: "Gets the identity property: The managed service identities assigned to this resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ManagedServiceIdentity identity()"
  desc: "Gets the identity property: The managed service identities assigned to this resource."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.ManagedServiceIdentity?alt=com.azure.resourcemanager.newrelicobservability.models.ManagedServiceIdentity&text=ManagedServiceIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.innerModel()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.innerModel()"
  name: "innerModel()"
  nameWithType: "NewRelicMonitorResource.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>newrelicobservability.<wbr>fluent.<wbr>models.<wbr>New<wbr>Relic<wbr>Monitor<wbr>Resource<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract NewRelicMonitorResourceInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.newrelicobservability.fluent.models.NewRelicMonitorResourceInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.fluent.models.NewRelicMonitorResourceInner?alt=com.azure.resourcemanager.newrelicobservability.fluent.models.NewRelicMonitorResourceInner&text=NewRelicMonitorResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.liftrResourceCategory()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.liftrResourceCategory()"
  name: "liftrResourceCategory()"
  nameWithType: "NewRelicMonitorResource.liftrResourceCategory()"
  summary: "Gets the liftr<wbr>Resource<wbr>Category property: Liftr resource category."
  modifiers:
  - "abstract"
  syntax: "public abstract LiftrResourceCategories liftrResourceCategory()"
  desc: "Gets the liftrResourceCategory property: Liftr resource category."
  returns:
    description: "the liftrResourceCategory value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.LiftrResourceCategories?alt=com.azure.resourcemanager.newrelicobservability.models.LiftrResourceCategories&text=LiftrResourceCategories\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.liftrResourcePreference()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.liftrResourcePreference()"
  name: "liftrResourcePreference()"
  nameWithType: "NewRelicMonitorResource.liftrResourcePreference()"
  summary: "Gets the liftr<wbr>Resource<wbr>Preference property: Liftr resource preference."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer liftrResourcePreference()"
  desc: "Gets the liftrResourcePreference property: Liftr resource preference. The priority of the resource."
  returns:
    description: "the liftrResourcePreference value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.listAppServices(com.azure.resourcemanager.newrelicobservability.models.AppServicesGetRequest)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.listAppServices(AppServicesGetRequest request)"
  name: "listAppServices(AppServicesGetRequest request)"
  nameWithType: "NewRelicMonitorResource.listAppServices(AppServicesGetRequest request)"
  summary: "List the app service resources currently being monitored by the New<wbr>Relic resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The details of the app services get request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.AppServicesGetRequest?alt=com.azure.resourcemanager.newrelicobservability.models.AppServicesGetRequest&text=AppServicesGetRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<AppServiceInfo> listAppServices(AppServicesGetRequest request)"
  desc: "List the app service resources currently being monitored by the NewRelic resource."
  returns:
    description: "response of a list app services Operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.models.AppServiceInfo?alt=com.azure.resourcemanager.newrelicobservability.models.AppServiceInfo&text=AppServiceInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.listAppServices(com.azure.resourcemanager.newrelicobservability.models.AppServicesGetRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.listAppServices(AppServicesGetRequest request, Context context)"
  name: "listAppServices(AppServicesGetRequest request, Context context)"
  nameWithType: "NewRelicMonitorResource.listAppServices(AppServicesGetRequest request, Context context)"
  summary: "List the app service resources currently being monitored by the New<wbr>Relic resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The details of the app services get request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.AppServicesGetRequest?alt=com.azure.resourcemanager.newrelicobservability.models.AppServicesGetRequest&text=AppServicesGetRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<AppServiceInfo> listAppServices(AppServicesGetRequest request, Context context)"
  desc: "List the app service resources currently being monitored by the NewRelic resource."
  returns:
    description: "response of a list app services Operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.models.AppServiceInfo?alt=com.azure.resourcemanager.newrelicobservability.models.AppServiceInfo&text=AppServiceInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.listHosts(com.azure.resourcemanager.newrelicobservability.models.HostsGetRequest)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.listHosts(HostsGetRequest request)"
  name: "listHosts(HostsGetRequest request)"
  nameWithType: "NewRelicMonitorResource.listHosts(HostsGetRequest request)"
  summary: "List the compute vm resources currently being monitored by the New<wbr>Relic resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The details of the Hosts get request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.HostsGetRequest?alt=com.azure.resourcemanager.newrelicobservability.models.HostsGetRequest&text=HostsGetRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<VMInfo> listHosts(HostsGetRequest request)"
  desc: "List the compute vm resources currently being monitored by the NewRelic resource."
  returns:
    description: "response of a list VM Host Operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.models.VMInfo?alt=com.azure.resourcemanager.newrelicobservability.models.VMInfo&text=VMInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.listHosts(com.azure.resourcemanager.newrelicobservability.models.HostsGetRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.listHosts(HostsGetRequest request, Context context)"
  name: "listHosts(HostsGetRequest request, Context context)"
  nameWithType: "NewRelicMonitorResource.listHosts(HostsGetRequest request, Context context)"
  summary: "List the compute vm resources currently being monitored by the New<wbr>Relic resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The details of the Hosts get request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.HostsGetRequest?alt=com.azure.resourcemanager.newrelicobservability.models.HostsGetRequest&text=HostsGetRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<VMInfo> listHosts(HostsGetRequest request, Context context)"
  desc: "List the compute vm resources currently being monitored by the NewRelic resource."
  returns:
    description: "response of a list VM Host Operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.models.VMInfo?alt=com.azure.resourcemanager.newrelicobservability.models.VMInfo&text=VMInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.listMonitoredResources()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.listMonitoredResources()"
  name: "listMonitoredResources()"
  nameWithType: "NewRelicMonitorResource.listMonitoredResources()"
  summary: "List the resources currently being monitored by the New<wbr>Relic monitor resource."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<MonitoredResource> listMonitoredResources()"
  desc: "List the resources currently being monitored by the NewRelic monitor resource."
  returns:
    description: "list of all the resources being monitored by NewRelic monitor resource as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.models.MonitoredResource?alt=com.azure.resourcemanager.newrelicobservability.models.MonitoredResource&text=MonitoredResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.listMonitoredResources(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.listMonitoredResources(Context context)"
  name: "listMonitoredResources(Context context)"
  nameWithType: "NewRelicMonitorResource.listMonitoredResources(Context context)"
  summary: "List the resources currently being monitored by the New<wbr>Relic monitor resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MonitoredResource> listMonitoredResources(Context context)"
  desc: "List the resources currently being monitored by the NewRelic monitor resource."
  returns:
    description: "list of all the resources being monitored by NewRelic monitor resource as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.models.MonitoredResource?alt=com.azure.resourcemanager.newrelicobservability.models.MonitoredResource&text=MonitoredResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.location()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.location()"
  name: "location()"
  nameWithType: "NewRelicMonitorResource.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  desc: "Gets the location property: The geo-location where the resource lives."
  returns:
    description: "the location value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.marketplaceSubscriptionId()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.marketplaceSubscriptionId()"
  name: "marketplaceSubscriptionId()"
  nameWithType: "NewRelicMonitorResource.marketplaceSubscriptionId()"
  summary: "Gets the marketplace<wbr>Subscription<wbr>Id property: Marketplace Subscription Id."
  modifiers:
  - "abstract"
  syntax: "public abstract String marketplaceSubscriptionId()"
  desc: "Gets the marketplaceSubscriptionId property: Marketplace Subscription Id."
  returns:
    description: "the marketplaceSubscriptionId value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.marketplaceSubscriptionStatus()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.marketplaceSubscriptionStatus()"
  name: "marketplaceSubscriptionStatus()"
  nameWithType: "NewRelicMonitorResource.marketplaceSubscriptionStatus()"
  summary: "Gets the marketplace<wbr>Subscription<wbr>Status property: New<wbr>Relic Organization properties of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract MarketplaceSubscriptionStatus marketplaceSubscriptionStatus()"
  desc: "Gets the marketplaceSubscriptionStatus property: NewRelic Organization properties of the resource."
  returns:
    description: "the marketplaceSubscriptionStatus value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.MarketplaceSubscriptionStatus?alt=com.azure.resourcemanager.newrelicobservability.models.MarketplaceSubscriptionStatus&text=MarketplaceSubscriptionStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.monitoringStatus()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.monitoringStatus()"
  name: "monitoringStatus()"
  nameWithType: "NewRelicMonitorResource.monitoringStatus()"
  summary: "Gets the monitoring<wbr>Status property: Monitoring<wbr>Status of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract MonitoringStatus monitoringStatus()"
  desc: "Gets the monitoringStatus property: MonitoringStatus of the resource."
  returns:
    description: "the monitoringStatus value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.MonitoringStatus?alt=com.azure.resourcemanager.newrelicobservability.models.MonitoringStatus&text=MonitoringStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.name()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.name()"
  name: "name()"
  nameWithType: "NewRelicMonitorResource.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.newRelicAccountProperties()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.newRelicAccountProperties()"
  name: "newRelicAccountProperties()"
  nameWithType: "NewRelicMonitorResource.newRelicAccountProperties()"
  summary: "Gets the new<wbr>Relic<wbr>Account<wbr>Properties property: Marketplace<wbr>Subscription<wbr>Status of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract NewRelicAccountProperties newRelicAccountProperties()"
  desc: "Gets the newRelicAccountProperties property: MarketplaceSubscriptionStatus of the resource."
  returns:
    description: "the newRelicAccountProperties value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.NewRelicAccountProperties?alt=com.azure.resourcemanager.newrelicobservability.models.NewRelicAccountProperties&text=NewRelicAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.orgCreationSource()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.orgCreationSource()"
  name: "orgCreationSource()"
  nameWithType: "NewRelicMonitorResource.orgCreationSource()"
  summary: "Gets the org<wbr>Creation<wbr>Source property: Source of org creation."
  modifiers:
  - "abstract"
  syntax: "public abstract OrgCreationSource orgCreationSource()"
  desc: "Gets the orgCreationSource property: Source of org creation."
  returns:
    description: "the orgCreationSource value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.OrgCreationSource?alt=com.azure.resourcemanager.newrelicobservability.models.OrgCreationSource&text=OrgCreationSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.planData()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.planData()"
  name: "planData()"
  nameWithType: "NewRelicMonitorResource.planData()"
  summary: "Gets the plan<wbr>Data property: Plan details."
  modifiers:
  - "abstract"
  syntax: "public abstract PlanData planData()"
  desc: "Gets the planData property: Plan details."
  returns:
    description: "the planData value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.PlanData?alt=com.azure.resourcemanager.newrelicobservability.models.PlanData&text=PlanData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.provisioningState()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.provisioningState()"
  name: "provisioningState()"
  nameWithType: "NewRelicMonitorResource.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: Provisioning State of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ProvisioningState provisioningState()"
  desc: "Gets the provisioningState property: Provisioning State of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.ProvisioningState?alt=com.azure.resourcemanager.newrelicobservability.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.refresh()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.refresh()"
  name: "refresh()"
  nameWithType: "NewRelicMonitorResource.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract NewRelicMonitorResource refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource?alt=com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource&text=NewRelicMonitorResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "NewRelicMonitorResource.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract NewRelicMonitorResource refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource?alt=com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource&text=NewRelicMonitorResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.region()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.region()"
  name: "region()"
  nameWithType: "NewRelicMonitorResource.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  desc: "Gets the region of the resource."
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.regionName()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.regionName()"
  name: "regionName()"
  nameWithType: "NewRelicMonitorResource.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  desc: "Gets the name of the resource region."
  returns:
    description: "the name of the resource region."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.resourceGroupName()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "NewRelicMonitorResource.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  desc: "Gets the name of the resource group."
  returns:
    description: "the name of the resource group."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.switchBilling(com.azure.resourcemanager.newrelicobservability.models.SwitchBillingRequest)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.switchBilling(SwitchBillingRequest request)"
  name: "switchBilling(SwitchBillingRequest request)"
  nameWithType: "NewRelicMonitorResource.switchBilling(SwitchBillingRequest request)"
  summary: "Switches the billing for New<wbr>Relic monitor resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The details of the switch billing request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.SwitchBillingRequest?alt=com.azure.resourcemanager.newrelicobservability.models.SwitchBillingRequest&text=SwitchBillingRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void switchBilling(SwitchBillingRequest request)"
  desc: "Switches the billing for NewRelic monitor resource."
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.switchBillingWithResponse(com.azure.resourcemanager.newrelicobservability.models.SwitchBillingRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.switchBillingWithResponse(SwitchBillingRequest request, Context context)"
  name: "switchBillingWithResponse(SwitchBillingRequest request, Context context)"
  nameWithType: "NewRelicMonitorResource.switchBillingWithResponse(SwitchBillingRequest request, Context context)"
  summary: "Switches the billing for New<wbr>Relic monitor resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The details of the switch billing request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.SwitchBillingRequest?alt=com.azure.resourcemanager.newrelicobservability.models.SwitchBillingRequest&text=SwitchBillingRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> switchBillingWithResponse(SwitchBillingRequest request, Context context)"
  desc: "Switches the billing for NewRelic monitor resource."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.systemData()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.systemData()"
  name: "systemData()"
  nameWithType: "NewRelicMonitorResource.systemData()"
  summary: "Gets the system<wbr>Data property: Azure Resource Manager metadata containing created<wbr>By and modified<wbr>By information."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  desc: "Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.tags()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.tags()"
  name: "tags()"
  nameWithType: "NewRelicMonitorResource.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  desc: "Gets the tags property: Resource tags."
  returns:
    description: "the tags value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.type()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.type()"
  name: "type()"
  nameWithType: "NewRelicMonitorResource.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.update()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.update()"
  name: "update()"
  nameWithType: "NewRelicMonitorResource.update()"
  summary: "Begins update for the New<wbr>Relic<wbr>Monitor<wbr>Resource resource."
  modifiers:
  - "abstract"
  syntax: "public abstract NewRelicMonitorResource.Update update()"
  desc: "Begins update for the NewRelicMonitorResource resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.Update?alt=com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.userInfo()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.userInfo()"
  name: "userInfo()"
  nameWithType: "NewRelicMonitorResource.userInfo()"
  summary: "Gets the user<wbr>Info property: User Info."
  modifiers:
  - "abstract"
  syntax: "public abstract UserInfo userInfo()"
  desc: "Gets the userInfo property: User Info."
  returns:
    description: "the userInfo value."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.UserInfo?alt=com.azure.resourcemanager.newrelicobservability.models.UserInfo&text=UserInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.vmHostPayload()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.vmHostPayload()"
  name: "vmHostPayload()"
  nameWithType: "NewRelicMonitorResource.vmHostPayload()"
  summary: "Returns the payload that needs to be passed in the request body for installing New<wbr>Relic agent on a VM."
  modifiers:
  - "abstract"
  syntax: "public abstract VMExtensionPayload vmHostPayload()"
  desc: "Returns the payload that needs to be passed in the request body for installing NewRelic agent on a VM."
  returns:
    description: "response of payload to be passed while installing VM agent."
    type: "<xref href=\"com.azure.resourcemanager.newrelicobservability.models.VMExtensionPayload?alt=com.azure.resourcemanager.newrelicobservability.models.VMExtensionPayload&text=VMExtensionPayload\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.vmHostPayloadWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.NewRelicMonitorResource.vmHostPayloadWithResponse(Context context)"
  name: "vmHostPayloadWithResponse(Context context)"
  nameWithType: "NewRelicMonitorResource.vmHostPayloadWithResponse(Context context)"
  summary: "Returns the payload that needs to be passed in the request body for installing New<wbr>Relic agent on a VM."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<VMExtensionPayload> vmHostPayloadWithResponse(Context context)"
  desc: "Returns the payload that needs to be passed in the request body for installing NewRelic agent on a VM."
  returns:
    description: "response of payload to be passed while installing VM agent along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.models.VMExtensionPayload?alt=com.azure.resourcemanager.newrelicobservability.models.VMExtensionPayload&text=VMExtensionPayload\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An immutable client-side representation of NewRelicMonitorResource."
metadata: {}
package: "com.azure.resourcemanager.newrelicobservability.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-newrelicobservability:1.0.0-beta.1
