### YamlMime:JavaType
uid: "com.azure.resourcemanager.devtestlabs.models.Disk.DefinitionStages.WithDiskType"
fullName: "com.azure.resourcemanager.devtestlabs.models.Disk.DefinitionStages.WithDiskType"
name: "Disk.DefinitionStages.WithDiskType"
nameWithType: "Disk.DefinitionStages.WithDiskType"
summary: "The stage of the Disk definition allowing to specify disk<wbr>Type."
syntax: "public static interface Disk.DefinitionStages.WithDiskType"
methods:
- uid: "com.azure.resourcemanager.devtestlabs.models.Disk.DefinitionStages.WithDiskType.withDiskType(com.azure.resourcemanager.devtestlabs.models.StorageType)"
  fullName: "com.azure.resourcemanager.devtestlabs.models.Disk.DefinitionStages.WithDiskType.withDiskType(StorageType diskType)"
  name: "withDiskType(StorageType diskType)"
  nameWithType: "Disk.DefinitionStages.WithDiskType.withDiskType(StorageType diskType)"
  summary: "Specifies the disk<wbr>Type property: The storage type for the disk (i.<wbr>e."
  modifiers:
  - "abstract"
  parameters:
  - description: "The storage type for the disk (i.e. Standard, Premium)."
    name: "diskType"
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.StorageType?alt=com.azure.resourcemanager.devtestlabs.models.StorageType&text=StorageType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Disk.DefinitionStages.WithCreate withDiskType(StorageType diskType)"
  desc: "Specifies the diskType property: The storage type for the disk (i.e. Standard, Premium).."
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.Disk.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.devtestlabs.models.Disk.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The stage of the Disk definition allowing to specify diskType."
metadata: {}
package: "com.azure.resourcemanager.devtestlabs.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-devtestlabs:1.0.0-beta.1
