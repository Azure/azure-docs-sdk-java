### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.cfg.MapperBuilder.filterProvider*"
fullName: "com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.filterProvider"
name: "filterProvider"
nameWithType: "MapperBuilder<M,B>.filterProvider"
members:
- uid: "com.fasterxml.jackson.databind.cfg.MapperBuilder.filterProvider(com.fasterxml.jackson.databind.ser.FilterProvider)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperBuilder<M,B>.filterProvider(FilterProvider prov)"
  name: "filterProvider(FilterProvider prov)"
  nameWithType: "MapperBuilder<M,B>.filterProvider(FilterProvider prov)"
  summary: "Method for configuring this mapper to use specified <xref uid=\"com.fasterxml.jackson.databind.ser.FilterProvider\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FilterProvider\"></xref> for mapping Filter Ids to actual filter instances.\n\nNote that usually it is better to use method in <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter\"></xref>, but sometimes this method is more convenient. For example, some frameworks only allow configuring of ObjectMapper instances and not <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter\"></xref>s."
  parameters:
  - name: "prov"
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.FilterProvider?alt=com.fasterxml.jackson.databind.ser.FilterProvider&text=FilterProvider\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public B filterProvider(FilterProvider prov)"
  returns:
    type: "<xref href=\"B?alt=B&text=B\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.cfg"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
