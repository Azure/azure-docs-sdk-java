### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient"
fullName: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient"
name: "ProductPoliciesClient"
nameWithType: "ProductPoliciesClient"
summary: "An instance of this class provides access to all the operations defined in Product<wbr>Policies<wbr>Client."
syntax: "public interface ProductPoliciesClient"
methods:
- uid: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.models.PolicyIdName,com.azure.resourcemanager.apimanagement.fluent.models.PolicyContractInner)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.createOrUpdate(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, PolicyContractInner parameters)"
  name: "createOrUpdate(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, PolicyContractInner parameters)"
  nameWithType: "ProductPoliciesClient.createOrUpdate(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, PolicyContractInner parameters)"
  summary: "Creates or updates policy configuration for the Product."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Product identifier. Must be unique in the current API Management service instance."
    name: "productId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The identifier of the Policy."
    name: "policyId"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.PolicyIdName?alt=com.azure.resourcemanager.apimanagement.models.PolicyIdName&text=PolicyIdName\" data-throw-if-not-resolved=\"False\" />"
  - description: "The policy contents to apply."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.PolicyContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.PolicyContractInner&text=PolicyContractInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PolicyContractInner createOrUpdate(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, PolicyContractInner parameters)"
  desc: "Creates or updates policy configuration for the Product."
  returns:
    description: "policy Contract details."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.PolicyContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.PolicyContractInner&text=PolicyContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.createOrUpdateWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.models.PolicyIdName,com.azure.resourcemanager.apimanagement.fluent.models.PolicyContractInner,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.createOrUpdateWithResponse(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, PolicyContractInner parameters, String ifMatch, Context context)"
  name: "createOrUpdateWithResponse(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, PolicyContractInner parameters, String ifMatch, Context context)"
  nameWithType: "ProductPoliciesClient.createOrUpdateWithResponse(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, PolicyContractInner parameters, String ifMatch, Context context)"
  summary: "Creates or updates policy configuration for the Product."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Product identifier. Must be unique in the current API Management service instance."
    name: "productId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The identifier of the Policy."
    name: "policyId"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.PolicyIdName?alt=com.azure.resourcemanager.apimanagement.models.PolicyIdName&text=PolicyIdName\" data-throw-if-not-resolved=\"False\" />"
  - description: "The policy contents to apply."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.PolicyContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.PolicyContractInner&text=PolicyContractInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. Not required when creating an entity, but required when updating an entity."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ProductPoliciesCreateOrUpdateResponse createOrUpdateWithResponse(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, PolicyContractInner parameters, String ifMatch, Context context)"
  desc: "Creates or updates policy configuration for the Product."
  returns:
    description: "policy Contract details."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.ProductPoliciesCreateOrUpdateResponse?alt=com.azure.resourcemanager.apimanagement.models.ProductPoliciesCreateOrUpdateResponse&text=ProductPoliciesCreateOrUpdateResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.delete(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.models.PolicyIdName,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.delete(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, String ifMatch)"
  name: "delete(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, String ifMatch)"
  nameWithType: "ProductPoliciesClient.delete(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, String ifMatch)"
  summary: "Deletes the policy configuration at the Product."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Product identifier. Must be unique in the current API Management service instance."
    name: "productId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The identifier of the Policy."
    name: "policyId"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.PolicyIdName?alt=com.azure.resourcemanager.apimanagement.models.PolicyIdName&text=PolicyIdName\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET\n     request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, String ifMatch)"
  desc: "Deletes the policy configuration at the Product."
- uid: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.models.PolicyIdName,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.deleteWithResponse(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, String ifMatch, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, String ifMatch, Context context)"
  nameWithType: "ProductPoliciesClient.deleteWithResponse(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, String ifMatch, Context context)"
  summary: "Deletes the policy configuration at the Product."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Product identifier. Must be unique in the current API Management service instance."
    name: "productId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The identifier of the Policy."
    name: "policyId"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.PolicyIdName?alt=com.azure.resourcemanager.apimanagement.models.PolicyIdName&text=PolicyIdName\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET\n     request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, String ifMatch, Context context)"
  desc: "Deletes the policy configuration at the Product."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.get(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.models.PolicyIdName)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.get(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId)"
  name: "get(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId)"
  nameWithType: "ProductPoliciesClient.get(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId)"
  summary: "Get the policy configuration at the Product level."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Product identifier. Must be unique in the current API Management service instance."
    name: "productId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The identifier of the Policy."
    name: "policyId"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.PolicyIdName?alt=com.azure.resourcemanager.apimanagement.models.PolicyIdName&text=PolicyIdName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PolicyContractInner get(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId)"
  desc: "Get the policy configuration at the Product level."
  returns:
    description: "the policy configuration at the Product level."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.PolicyContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.PolicyContractInner&text=PolicyContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.getEntityTag(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.models.PolicyIdName)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.getEntityTag(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId)"
  name: "getEntityTag(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId)"
  nameWithType: "ProductPoliciesClient.getEntityTag(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId)"
  summary: "Get the ETag of the policy configuration at the Product level."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Product identifier. Must be unique in the current API Management service instance."
    name: "productId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The identifier of the Policy."
    name: "policyId"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.PolicyIdName?alt=com.azure.resourcemanager.apimanagement.models.PolicyIdName&text=PolicyIdName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void getEntityTag(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId)"
  desc: "Get the ETag of the policy configuration at the Product level."
- uid: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.getEntityTagWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.models.PolicyIdName,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.getEntityTagWithResponse(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, Context context)"
  name: "getEntityTagWithResponse(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, Context context)"
  nameWithType: "ProductPoliciesClient.getEntityTagWithResponse(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, Context context)"
  summary: "Get the ETag of the policy configuration at the Product level."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Product identifier. Must be unique in the current API Management service instance."
    name: "productId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The identifier of the Policy."
    name: "policyId"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.PolicyIdName?alt=com.azure.resourcemanager.apimanagement.models.PolicyIdName&text=PolicyIdName\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ProductPoliciesGetEntityTagResponse getEntityTagWithResponse(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, Context context)"
  desc: "Get the ETag of the policy configuration at the Product level."
  returns:
    description: "the ETag of the policy configuration at the Product level."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.ProductPoliciesGetEntityTagResponse?alt=com.azure.resourcemanager.apimanagement.models.ProductPoliciesGetEntityTagResponse&text=ProductPoliciesGetEntityTagResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.apimanagement.models.PolicyIdName,com.azure.resourcemanager.apimanagement.models.PolicyExportFormat,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.getWithResponse(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, PolicyExportFormat format, Context context)"
  name: "getWithResponse(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, PolicyExportFormat format, Context context)"
  nameWithType: "ProductPoliciesClient.getWithResponse(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, PolicyExportFormat format, Context context)"
  summary: "Get the policy configuration at the Product level."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Product identifier. Must be unique in the current API Management service instance."
    name: "productId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The identifier of the Policy."
    name: "policyId"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.PolicyIdName?alt=com.azure.resourcemanager.apimanagement.models.PolicyIdName&text=PolicyIdName\" data-throw-if-not-resolved=\"False\" />"
  - description: "Policy Export Format."
    name: "format"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.PolicyExportFormat?alt=com.azure.resourcemanager.apimanagement.models.PolicyExportFormat&text=PolicyExportFormat\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ProductPoliciesGetResponse getWithResponse(String resourceGroupName, String serviceName, String productId, PolicyIdName policyId, PolicyExportFormat format, Context context)"
  desc: "Get the policy configuration at the Product level."
  returns:
    description: "the policy configuration at the Product level."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.ProductPoliciesGetResponse?alt=com.azure.resourcemanager.apimanagement.models.ProductPoliciesGetResponse&text=ProductPoliciesGetResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.listByProduct(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.listByProduct(String resourceGroupName, String serviceName, String productId)"
  name: "listByProduct(String resourceGroupName, String serviceName, String productId)"
  nameWithType: "ProductPoliciesClient.listByProduct(String resourceGroupName, String serviceName, String productId)"
  summary: "Get the policy configuration at the Product level."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Product identifier. Must be unique in the current API Management service instance."
    name: "productId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PolicyCollectionInner listByProduct(String resourceGroupName, String serviceName, String productId)"
  desc: "Get the policy configuration at the Product level."
  returns:
    description: "the policy configuration at the Product level."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.PolicyCollectionInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.PolicyCollectionInner&text=PolicyCollectionInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.listByProductWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.ProductPoliciesClient.listByProductWithResponse(String resourceGroupName, String serviceName, String productId, Context context)"
  name: "listByProductWithResponse(String resourceGroupName, String serviceName, String productId, Context context)"
  nameWithType: "ProductPoliciesClient.listByProductWithResponse(String resourceGroupName, String serviceName, String productId, Context context)"
  summary: "Get the policy configuration at the Product level."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Product identifier. Must be unique in the current API Management service instance."
    name: "productId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PolicyCollectionInner> listByProductWithResponse(String resourceGroupName, String serviceName, String productId, Context context)"
  desc: "Get the policy configuration at the Product level."
  returns:
    description: "the policy configuration at the Product level along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.PolicyCollectionInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.PolicyCollectionInner&text=PolicyCollectionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in ProductPoliciesClient."
metadata: {}
package: "com.azure.resourcemanager.apimanagement.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.3
