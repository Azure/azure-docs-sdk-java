### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner"
fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner"
name: "DiagnosticContractInner"
nameWithType: "DiagnosticContractInner"
summary: "Diagnostic details."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DiagnosticContractInner extends ProxyResource"
constructors:
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.DiagnosticContractInner()"
methods:
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.alwaysLog()"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.backend()"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.frontend()"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.httpCorrelationProtocol()"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.logClientIp()"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.loggerId()"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.operationNameFormat()"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.sampling()"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.validate()"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.verbosity()"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withAlwaysLog(com.azure.resourcemanager.apimanagement.models.AlwaysLog)"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withBackend(com.azure.resourcemanager.apimanagement.models.PipelineDiagnosticSettings)"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withFrontend(com.azure.resourcemanager.apimanagement.models.PipelineDiagnosticSettings)"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withHttpCorrelationProtocol(com.azure.resourcemanager.apimanagement.models.HttpCorrelationProtocol)"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withLogClientIp(java.lang.Boolean)"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withLoggerId(java.lang.String)"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withOperationNameFormat(com.azure.resourcemanager.apimanagement.models.OperationNameFormat)"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withSampling(com.azure.resourcemanager.apimanagement.models.SamplingSettings)"
- "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withVerbosity(com.azure.resourcemanager.apimanagement.models.Verbosity)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.apimanagement.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.1
