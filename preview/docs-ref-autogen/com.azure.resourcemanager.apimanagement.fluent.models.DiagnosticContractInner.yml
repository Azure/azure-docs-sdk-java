### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner"
fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner"
name: "DiagnosticContractInner"
nameWithType: "DiagnosticContractInner"
summary: "Diagnostic details."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DiagnosticContractInner extends ProxyResource"
constructors:
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.DiagnosticContractInner()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.DiagnosticContractInner()"
  name: "DiagnosticContractInner()"
  nameWithType: "DiagnosticContractInner.DiagnosticContractInner()"
  syntax: "public DiagnosticContractInner()"
methods:
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.alwaysLog()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.alwaysLog()"
  name: "alwaysLog()"
  nameWithType: "DiagnosticContractInner.alwaysLog()"
  summary: "Get the always<wbr>Log property: Specifies for what type of messages sampling settings should not apply."
  syntax: "public AlwaysLog alwaysLog()"
  desc: "Get the alwaysLog property: Specifies for what type of messages sampling settings should not apply."
  returns:
    description: "the alwaysLog value."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.AlwaysLog?alt=com.azure.resourcemanager.apimanagement.models.AlwaysLog&text=AlwaysLog\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.backend()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.backend()"
  name: "backend()"
  nameWithType: "DiagnosticContractInner.backend()"
  summary: "Get the backend property: Diagnostic settings for incoming/outgoing HTTP messages to the Backend."
  syntax: "public PipelineDiagnosticSettings backend()"
  desc: "Get the backend property: Diagnostic settings for incoming/outgoing HTTP messages to the Backend."
  returns:
    description: "the backend value."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.PipelineDiagnosticSettings?alt=com.azure.resourcemanager.apimanagement.models.PipelineDiagnosticSettings&text=PipelineDiagnosticSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.frontend()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.frontend()"
  name: "frontend()"
  nameWithType: "DiagnosticContractInner.frontend()"
  summary: "Get the frontend property: Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
  syntax: "public PipelineDiagnosticSettings frontend()"
  desc: "Get the frontend property: Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
  returns:
    description: "the frontend value."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.PipelineDiagnosticSettings?alt=com.azure.resourcemanager.apimanagement.models.PipelineDiagnosticSettings&text=PipelineDiagnosticSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.httpCorrelationProtocol()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.httpCorrelationProtocol()"
  name: "httpCorrelationProtocol()"
  nameWithType: "DiagnosticContractInner.httpCorrelationProtocol()"
  summary: "Get the http<wbr>Correlation<wbr>Protocol property: Sets correlation protocol to use for Application Insights diagnostics."
  syntax: "public HttpCorrelationProtocol httpCorrelationProtocol()"
  desc: "Get the httpCorrelationProtocol property: Sets correlation protocol to use for Application Insights diagnostics."
  returns:
    description: "the httpCorrelationProtocol value."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.HttpCorrelationProtocol?alt=com.azure.resourcemanager.apimanagement.models.HttpCorrelationProtocol&text=HttpCorrelationProtocol\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.logClientIp()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.logClientIp()"
  name: "logClientIp()"
  nameWithType: "DiagnosticContractInner.logClientIp()"
  summary: "Get the log<wbr>Client<wbr>Ip property: Log the ClientIP."
  syntax: "public Boolean logClientIp()"
  desc: "Get the logClientIp property: Log the ClientIP. Default is false."
  returns:
    description: "the logClientIp value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.loggerId()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.loggerId()"
  name: "loggerId()"
  nameWithType: "DiagnosticContractInner.loggerId()"
  summary: "Get the logger<wbr>Id property: Resource Id of a target logger."
  syntax: "public String loggerId()"
  desc: "Get the loggerId property: Resource Id of a target logger."
  returns:
    description: "the loggerId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.operationNameFormat()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.operationNameFormat()"
  name: "operationNameFormat()"
  nameWithType: "DiagnosticContractInner.operationNameFormat()"
  summary: "Get the operation<wbr>Name<wbr>Format property: The format of the Operation Name for Application Insights telemetries."
  syntax: "public OperationNameFormat operationNameFormat()"
  desc: "Get the operationNameFormat property: The format of the Operation Name for Application Insights telemetries. Default is Name."
  returns:
    description: "the operationNameFormat value."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.OperationNameFormat?alt=com.azure.resourcemanager.apimanagement.models.OperationNameFormat&text=OperationNameFormat\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.sampling()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.sampling()"
  name: "sampling()"
  nameWithType: "DiagnosticContractInner.sampling()"
  summary: "Get the sampling property: Sampling settings for Diagnostic."
  syntax: "public SamplingSettings sampling()"
  desc: "Get the sampling property: Sampling settings for Diagnostic."
  returns:
    description: "the sampling value."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.SamplingSettings?alt=com.azure.resourcemanager.apimanagement.models.SamplingSettings&text=SamplingSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.validate()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.validate()"
  name: "validate()"
  nameWithType: "DiagnosticContractInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.verbosity()"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.verbosity()"
  name: "verbosity()"
  nameWithType: "DiagnosticContractInner.verbosity()"
  summary: "Get the verbosity property: The verbosity level applied to traces emitted by trace policies."
  syntax: "public Verbosity verbosity()"
  desc: "Get the verbosity property: The verbosity level applied to traces emitted by trace policies."
  returns:
    description: "the verbosity value."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.Verbosity?alt=com.azure.resourcemanager.apimanagement.models.Verbosity&text=Verbosity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withAlwaysLog(com.azure.resourcemanager.apimanagement.models.AlwaysLog)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withAlwaysLog(AlwaysLog alwaysLog)"
  name: "withAlwaysLog(AlwaysLog alwaysLog)"
  nameWithType: "DiagnosticContractInner.withAlwaysLog(AlwaysLog alwaysLog)"
  summary: "Set the always<wbr>Log property: Specifies for what type of messages sampling settings should not apply."
  parameters:
  - description: "the alwaysLog value to set."
    name: "alwaysLog"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.AlwaysLog?alt=com.azure.resourcemanager.apimanagement.models.AlwaysLog&text=AlwaysLog\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiagnosticContractInner withAlwaysLog(AlwaysLog alwaysLog)"
  desc: "Set the alwaysLog property: Specifies for what type of messages sampling settings should not apply."
  returns:
    description: "the DiagnosticContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner&text=DiagnosticContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withBackend(com.azure.resourcemanager.apimanagement.models.PipelineDiagnosticSettings)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withBackend(PipelineDiagnosticSettings backend)"
  name: "withBackend(PipelineDiagnosticSettings backend)"
  nameWithType: "DiagnosticContractInner.withBackend(PipelineDiagnosticSettings backend)"
  summary: "Set the backend property: Diagnostic settings for incoming/outgoing HTTP messages to the Backend."
  parameters:
  - description: "the backend value to set."
    name: "backend"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.PipelineDiagnosticSettings?alt=com.azure.resourcemanager.apimanagement.models.PipelineDiagnosticSettings&text=PipelineDiagnosticSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiagnosticContractInner withBackend(PipelineDiagnosticSettings backend)"
  desc: "Set the backend property: Diagnostic settings for incoming/outgoing HTTP messages to the Backend."
  returns:
    description: "the DiagnosticContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner&text=DiagnosticContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withFrontend(com.azure.resourcemanager.apimanagement.models.PipelineDiagnosticSettings)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withFrontend(PipelineDiagnosticSettings frontend)"
  name: "withFrontend(PipelineDiagnosticSettings frontend)"
  nameWithType: "DiagnosticContractInner.withFrontend(PipelineDiagnosticSettings frontend)"
  summary: "Set the frontend property: Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
  parameters:
  - description: "the frontend value to set."
    name: "frontend"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.PipelineDiagnosticSettings?alt=com.azure.resourcemanager.apimanagement.models.PipelineDiagnosticSettings&text=PipelineDiagnosticSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiagnosticContractInner withFrontend(PipelineDiagnosticSettings frontend)"
  desc: "Set the frontend property: Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
  returns:
    description: "the DiagnosticContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner&text=DiagnosticContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withHttpCorrelationProtocol(com.azure.resourcemanager.apimanagement.models.HttpCorrelationProtocol)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withHttpCorrelationProtocol(HttpCorrelationProtocol httpCorrelationProtocol)"
  name: "withHttpCorrelationProtocol(HttpCorrelationProtocol httpCorrelationProtocol)"
  nameWithType: "DiagnosticContractInner.withHttpCorrelationProtocol(HttpCorrelationProtocol httpCorrelationProtocol)"
  summary: "Set the http<wbr>Correlation<wbr>Protocol property: Sets correlation protocol to use for Application Insights diagnostics."
  parameters:
  - description: "the httpCorrelationProtocol value to set."
    name: "httpCorrelationProtocol"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.HttpCorrelationProtocol?alt=com.azure.resourcemanager.apimanagement.models.HttpCorrelationProtocol&text=HttpCorrelationProtocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiagnosticContractInner withHttpCorrelationProtocol(HttpCorrelationProtocol httpCorrelationProtocol)"
  desc: "Set the httpCorrelationProtocol property: Sets correlation protocol to use for Application Insights diagnostics."
  returns:
    description: "the DiagnosticContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner&text=DiagnosticContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withLogClientIp(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withLogClientIp(Boolean logClientIp)"
  name: "withLogClientIp(Boolean logClientIp)"
  nameWithType: "DiagnosticContractInner.withLogClientIp(Boolean logClientIp)"
  summary: "Set the log<wbr>Client<wbr>Ip property: Log the ClientIP."
  parameters:
  - description: "the logClientIp value to set."
    name: "logClientIp"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiagnosticContractInner withLogClientIp(Boolean logClientIp)"
  desc: "Set the logClientIp property: Log the ClientIP. Default is false."
  returns:
    description: "the DiagnosticContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner&text=DiagnosticContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withLoggerId(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withLoggerId(String loggerId)"
  name: "withLoggerId(String loggerId)"
  nameWithType: "DiagnosticContractInner.withLoggerId(String loggerId)"
  summary: "Set the logger<wbr>Id property: Resource Id of a target logger."
  parameters:
  - description: "the loggerId value to set."
    name: "loggerId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiagnosticContractInner withLoggerId(String loggerId)"
  desc: "Set the loggerId property: Resource Id of a target logger."
  returns:
    description: "the DiagnosticContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner&text=DiagnosticContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withOperationNameFormat(com.azure.resourcemanager.apimanagement.models.OperationNameFormat)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withOperationNameFormat(OperationNameFormat operationNameFormat)"
  name: "withOperationNameFormat(OperationNameFormat operationNameFormat)"
  nameWithType: "DiagnosticContractInner.withOperationNameFormat(OperationNameFormat operationNameFormat)"
  summary: "Set the operation<wbr>Name<wbr>Format property: The format of the Operation Name for Application Insights telemetries."
  parameters:
  - description: "the operationNameFormat value to set."
    name: "operationNameFormat"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.OperationNameFormat?alt=com.azure.resourcemanager.apimanagement.models.OperationNameFormat&text=OperationNameFormat\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiagnosticContractInner withOperationNameFormat(OperationNameFormat operationNameFormat)"
  desc: "Set the operationNameFormat property: The format of the Operation Name for Application Insights telemetries. Default is Name."
  returns:
    description: "the DiagnosticContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner&text=DiagnosticContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withSampling(com.azure.resourcemanager.apimanagement.models.SamplingSettings)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withSampling(SamplingSettings sampling)"
  name: "withSampling(SamplingSettings sampling)"
  nameWithType: "DiagnosticContractInner.withSampling(SamplingSettings sampling)"
  summary: "Set the sampling property: Sampling settings for Diagnostic."
  parameters:
  - description: "the sampling value to set."
    name: "sampling"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.SamplingSettings?alt=com.azure.resourcemanager.apimanagement.models.SamplingSettings&text=SamplingSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiagnosticContractInner withSampling(SamplingSettings sampling)"
  desc: "Set the sampling property: Sampling settings for Diagnostic."
  returns:
    description: "the DiagnosticContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner&text=DiagnosticContractInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withVerbosity(com.azure.resourcemanager.apimanagement.models.Verbosity)"
  fullName: "com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner.withVerbosity(Verbosity verbosity)"
  name: "withVerbosity(Verbosity verbosity)"
  nameWithType: "DiagnosticContractInner.withVerbosity(Verbosity verbosity)"
  summary: "Set the verbosity property: The verbosity level applied to traces emitted by trace policies."
  parameters:
  - description: "the verbosity value to set."
    name: "verbosity"
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.Verbosity?alt=com.azure.resourcemanager.apimanagement.models.Verbosity&text=Verbosity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DiagnosticContractInner withVerbosity(Verbosity verbosity)"
  desc: "Set the verbosity property: The verbosity level applied to traces emitted by trace policies."
  returns:
    description: "the DiagnosticContractInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner?alt=com.azure.resourcemanager.apimanagement.fluent.models.DiagnosticContractInner&text=DiagnosticContractInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Diagnostic details."
metadata: {}
package: "com.azure.resourcemanager.apimanagement.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.3
