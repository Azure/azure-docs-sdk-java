### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.annotation.JsonTypeResolver.value*"
fullName: "com.fasterxml.jackson.databind.annotation.JsonTypeResolver.value"
name: "value"
nameWithType: "JsonTypeResolver.value"
members:
- uid: "com.fasterxml.jackson.databind.annotation.JsonTypeResolver.value()"
  fullName: "com.fasterxml.jackson.databind.annotation.JsonTypeResolver.value()"
  name: "value()"
  nameWithType: "JsonTypeResolver.value()"
  summary: "Defines implementation class of <xref uid=\"? extends com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeResolverBuilder\"></xref> which is used to construct actual <xref uid=\"com.fasterxml.jackson.databind.jsontype.TypeDeserializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.databind.jsontype.TypeDeserializer\"></xref> and <xref uid=\"com.fasterxml.jackson.databind.jsontype.TypeDeserializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.databind.jsontype.TypeDeserializer\"></xref> instances that handle reading and writing addition type information needed to support polymorphic deserialization."
  syntax: "public abstract Class<? extends TypeResolverBuilder<?>> value()"
  returns:
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder?alt=? extends com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder&text=TypeResolverBuilder\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
