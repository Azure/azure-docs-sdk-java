### YamlMime:JavaType
uid: "com.azure.resourcemanager.attestation.models.JsonWebKey"
fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey"
name: "JsonWebKey"
nameWithType: "JsonWebKey"
summary: "The Json<wbr>Web<wbr>Key model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class JsonWebKey"
constructors:
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.JsonWebKey()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.JsonWebKey()"
  name: "JsonWebKey()"
  nameWithType: "JsonWebKey.JsonWebKey()"
  syntax: "public JsonWebKey()"
methods:
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.alg()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.alg()"
  name: "alg()"
  nameWithType: "JsonWebKey.alg()"
  summary: "Get the alg property: The \"alg\" (algorithm) parameter identifies the algorithm intended for use with the key."
  syntax: "public String alg()"
  desc: "Get the alg property: The \"alg\" (algorithm) parameter identifies the algorithm intended for use with the key. The values used should either be registered in the IANA \"JSON Web Signature and Encryption Algorithms\" registry established by \\[JWA\\] or be a value that contains a Collision- Resistant Name."
  returns:
    description: "the alg value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.crv()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.crv()"
  name: "crv()"
  nameWithType: "JsonWebKey.crv()"
  summary: "Get the crv property: The \"crv\" (curve) parameter identifies the curve type."
  syntax: "public String crv()"
  desc: "Get the crv property: The \"crv\" (curve) parameter identifies the curve type."
  returns:
    description: "the crv value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.d()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.d()"
  name: "d()"
  nameWithType: "JsonWebKey.d()"
  summary: "Get the d property: RSA private exponent or ECC private key."
  syntax: "public String d()"
  desc: "Get the d property: RSA private exponent or ECC private key."
  returns:
    description: "the d value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.dp()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.dp()"
  name: "dp()"
  nameWithType: "JsonWebKey.dp()"
  summary: "Get the dp property: RSA Private Key Parameter."
  syntax: "public String dp()"
  desc: "Get the dp property: RSA Private Key Parameter."
  returns:
    description: "the dp value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.dq()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.dq()"
  name: "dq()"
  nameWithType: "JsonWebKey.dq()"
  summary: "Get the dq property: RSA Private Key Parameter."
  syntax: "public String dq()"
  desc: "Get the dq property: RSA Private Key Parameter."
  returns:
    description: "the dq value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.e()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.e()"
  name: "e()"
  nameWithType: "JsonWebKey.e()"
  summary: "Get the e property: RSA public exponent, in Base64."
  syntax: "public String e()"
  desc: "Get the e property: RSA public exponent, in Base64."
  returns:
    description: "the e value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.k()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.k()"
  name: "k()"
  nameWithType: "JsonWebKey.k()"
  summary: "Get the k property: Symmetric key."
  syntax: "public String k()"
  desc: "Get the k property: Symmetric key."
  returns:
    description: "the k value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.kid()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.kid()"
  name: "kid()"
  nameWithType: "JsonWebKey.kid()"
  summary: "Get the kid property: The \"kid\" (key ID) parameter is used to match a specific key."
  syntax: "public String kid()"
  desc: "Get the kid property: The \"kid\" (key ID) parameter is used to match a specific key. This is used, for instance, to choose among a set of keys within a JWK Set during key rollover. The structure of the \"kid\" value is unspecified. When \"kid\" values are used within a JWK Set, different keys within the JWK Set SHOULD use distinct \"kid\" values. (One example in which different keys might use the same \"kid\" value is if they have different \"kty\" (key type) values but are considered to be equivalent alternatives by the application using them.) The \"kid\" value is a case-sensitive string."
  returns:
    description: "the kid value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.kty()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.kty()"
  name: "kty()"
  nameWithType: "JsonWebKey.kty()"
  summary: "Get the kty property: The \"kty\" (key type) parameter identifies the cryptographic algorithm family used with the key, such as \"RSA\" or \"EC\"."
  syntax: "public String kty()"
  desc: "Get the kty property: The \"kty\" (key type) parameter identifies the cryptographic algorithm family used with the key, such as \"RSA\" or \"EC\". \"kty\" values should either be registered in the IANA \"JSON Web Key Types\" registry established by \\[JWA\\] or be a value that contains a Collision- Resistant Name. The \"kty\" value is a case-sensitive string."
  returns:
    description: "the kty value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.n()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.n()"
  name: "n()"
  nameWithType: "JsonWebKey.n()"
  summary: "Get the n property: RSA modulus, in Base64."
  syntax: "public String n()"
  desc: "Get the n property: RSA modulus, in Base64."
  returns:
    description: "the n value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.p()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.p()"
  name: "p()"
  nameWithType: "JsonWebKey.p()"
  summary: "Get the p property: RSA secret prime."
  syntax: "public String p()"
  desc: "Get the p property: RSA secret prime."
  returns:
    description: "the p value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.q()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.q()"
  name: "q()"
  nameWithType: "JsonWebKey.q()"
  summary: "Get the q property: RSA secret prime, with p < q."
  syntax: "public String q()"
  desc: "Get the q property: RSA secret prime, with p < q."
  returns:
    description: "the q value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.qi()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.qi()"
  name: "qi()"
  nameWithType: "JsonWebKey.qi()"
  summary: "Get the qi property: RSA Private Key Parameter."
  syntax: "public String qi()"
  desc: "Get the qi property: RSA Private Key Parameter."
  returns:
    description: "the qi value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.use()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.use()"
  name: "use()"
  nameWithType: "JsonWebKey.use()"
  summary: "Get the use property: Use (\"public key use\") identifies the intended use of the public key."
  syntax: "public String use()"
  desc: "Get the use property: Use (\"public key use\") identifies the intended use of the public key. The \"use\" parameter is employed to indicate whether a public key is used for encrypting data or verifying the signature on data. Values are commonly \"sig\" (signature) or \"enc\" (encryption)."
  returns:
    description: "the use value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.validate()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.validate()"
  name: "validate()"
  nameWithType: "JsonWebKey.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.withAlg(java.lang.String)"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.withAlg(String alg)"
  name: "withAlg(String alg)"
  nameWithType: "JsonWebKey.withAlg(String alg)"
  summary: "Set the alg property: The \"alg\" (algorithm) parameter identifies the algorithm intended for use with the key."
  parameters:
  - description: "the alg value to set."
    name: "alg"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWebKey withAlg(String alg)"
  desc: "Set the alg property: The \"alg\" (algorithm) parameter identifies the algorithm intended for use with the key. The values used should either be registered in the IANA \"JSON Web Signature and Encryption Algorithms\" registry established by \\[JWA\\] or be a value that contains a Collision- Resistant Name."
  returns:
    description: "the JsonWebKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.attestation.models.JsonWebKey?alt=com.azure.resourcemanager.attestation.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.withCrv(java.lang.String)"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.withCrv(String crv)"
  name: "withCrv(String crv)"
  nameWithType: "JsonWebKey.withCrv(String crv)"
  summary: "Set the crv property: The \"crv\" (curve) parameter identifies the curve type."
  parameters:
  - description: "the crv value to set."
    name: "crv"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWebKey withCrv(String crv)"
  desc: "Set the crv property: The \"crv\" (curve) parameter identifies the curve type."
  returns:
    description: "the JsonWebKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.attestation.models.JsonWebKey?alt=com.azure.resourcemanager.attestation.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.withD(java.lang.String)"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.withD(String d)"
  name: "withD(String d)"
  nameWithType: "JsonWebKey.withD(String d)"
  summary: "Set the d property: RSA private exponent or ECC private key."
  parameters:
  - description: "the d value to set."
    name: "d"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWebKey withD(String d)"
  desc: "Set the d property: RSA private exponent or ECC private key."
  returns:
    description: "the JsonWebKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.attestation.models.JsonWebKey?alt=com.azure.resourcemanager.attestation.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.withDp(java.lang.String)"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.withDp(String dp)"
  name: "withDp(String dp)"
  nameWithType: "JsonWebKey.withDp(String dp)"
  summary: "Set the dp property: RSA Private Key Parameter."
  parameters:
  - description: "the dp value to set."
    name: "dp"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWebKey withDp(String dp)"
  desc: "Set the dp property: RSA Private Key Parameter."
  returns:
    description: "the JsonWebKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.attestation.models.JsonWebKey?alt=com.azure.resourcemanager.attestation.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.withDq(java.lang.String)"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.withDq(String dq)"
  name: "withDq(String dq)"
  nameWithType: "JsonWebKey.withDq(String dq)"
  summary: "Set the dq property: RSA Private Key Parameter."
  parameters:
  - description: "the dq value to set."
    name: "dq"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWebKey withDq(String dq)"
  desc: "Set the dq property: RSA Private Key Parameter."
  returns:
    description: "the JsonWebKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.attestation.models.JsonWebKey?alt=com.azure.resourcemanager.attestation.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.withE(java.lang.String)"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.withE(String e)"
  name: "withE(String e)"
  nameWithType: "JsonWebKey.withE(String e)"
  summary: "Set the e property: RSA public exponent, in Base64."
  parameters:
  - description: "the e value to set."
    name: "e"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWebKey withE(String e)"
  desc: "Set the e property: RSA public exponent, in Base64."
  returns:
    description: "the JsonWebKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.attestation.models.JsonWebKey?alt=com.azure.resourcemanager.attestation.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.withK(java.lang.String)"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.withK(String k)"
  name: "withK(String k)"
  nameWithType: "JsonWebKey.withK(String k)"
  summary: "Set the k property: Symmetric key."
  parameters:
  - description: "the k value to set."
    name: "k"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWebKey withK(String k)"
  desc: "Set the k property: Symmetric key."
  returns:
    description: "the JsonWebKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.attestation.models.JsonWebKey?alt=com.azure.resourcemanager.attestation.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.withKid(java.lang.String)"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.withKid(String kid)"
  name: "withKid(String kid)"
  nameWithType: "JsonWebKey.withKid(String kid)"
  summary: "Set the kid property: The \"kid\" (key ID) parameter is used to match a specific key."
  parameters:
  - description: "the kid value to set."
    name: "kid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWebKey withKid(String kid)"
  desc: "Set the kid property: The \"kid\" (key ID) parameter is used to match a specific key. This is used, for instance, to choose among a set of keys within a JWK Set during key rollover. The structure of the \"kid\" value is unspecified. When \"kid\" values are used within a JWK Set, different keys within the JWK Set SHOULD use distinct \"kid\" values. (One example in which different keys might use the same \"kid\" value is if they have different \"kty\" (key type) values but are considered to be equivalent alternatives by the application using them.) The \"kid\" value is a case-sensitive string."
  returns:
    description: "the JsonWebKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.attestation.models.JsonWebKey?alt=com.azure.resourcemanager.attestation.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.withKty(java.lang.String)"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.withKty(String kty)"
  name: "withKty(String kty)"
  nameWithType: "JsonWebKey.withKty(String kty)"
  summary: "Set the kty property: The \"kty\" (key type) parameter identifies the cryptographic algorithm family used with the key, such as \"RSA\" or \"EC\"."
  parameters:
  - description: "the kty value to set."
    name: "kty"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWebKey withKty(String kty)"
  desc: "Set the kty property: The \"kty\" (key type) parameter identifies the cryptographic algorithm family used with the key, such as \"RSA\" or \"EC\". \"kty\" values should either be registered in the IANA \"JSON Web Key Types\" registry established by \\[JWA\\] or be a value that contains a Collision- Resistant Name. The \"kty\" value is a case-sensitive string."
  returns:
    description: "the JsonWebKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.attestation.models.JsonWebKey?alt=com.azure.resourcemanager.attestation.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.withN(java.lang.String)"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.withN(String n)"
  name: "withN(String n)"
  nameWithType: "JsonWebKey.withN(String n)"
  summary: "Set the n property: RSA modulus, in Base64."
  parameters:
  - description: "the n value to set."
    name: "n"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWebKey withN(String n)"
  desc: "Set the n property: RSA modulus, in Base64."
  returns:
    description: "the JsonWebKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.attestation.models.JsonWebKey?alt=com.azure.resourcemanager.attestation.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.withP(java.lang.String)"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.withP(String p)"
  name: "withP(String p)"
  nameWithType: "JsonWebKey.withP(String p)"
  summary: "Set the p property: RSA secret prime."
  parameters:
  - description: "the p value to set."
    name: "p"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWebKey withP(String p)"
  desc: "Set the p property: RSA secret prime."
  returns:
    description: "the JsonWebKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.attestation.models.JsonWebKey?alt=com.azure.resourcemanager.attestation.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.withQ(java.lang.String)"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.withQ(String q)"
  name: "withQ(String q)"
  nameWithType: "JsonWebKey.withQ(String q)"
  summary: "Set the q property: RSA secret prime, with p < q."
  parameters:
  - description: "the q value to set."
    name: "q"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWebKey withQ(String q)"
  desc: "Set the q property: RSA secret prime, with p < q."
  returns:
    description: "the JsonWebKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.attestation.models.JsonWebKey?alt=com.azure.resourcemanager.attestation.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.withQi(java.lang.String)"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.withQi(String qi)"
  name: "withQi(String qi)"
  nameWithType: "JsonWebKey.withQi(String qi)"
  summary: "Set the qi property: RSA Private Key Parameter."
  parameters:
  - description: "the qi value to set."
    name: "qi"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWebKey withQi(String qi)"
  desc: "Set the qi property: RSA Private Key Parameter."
  returns:
    description: "the JsonWebKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.attestation.models.JsonWebKey?alt=com.azure.resourcemanager.attestation.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.withUse(java.lang.String)"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.withUse(String use)"
  name: "withUse(String use)"
  nameWithType: "JsonWebKey.withUse(String use)"
  summary: "Set the use property: Use (\"public key use\") identifies the intended use of the public key."
  parameters:
  - description: "the use value to set."
    name: "use"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWebKey withUse(String use)"
  desc: "Set the use property: Use (\"public key use\") identifies the intended use of the public key. The \"use\" parameter is employed to indicate whether a public key is used for encrypting data or verifying the signature on data. Values are commonly \"sig\" (signature) or \"enc\" (encryption)."
  returns:
    description: "the JsonWebKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.attestation.models.JsonWebKey?alt=com.azure.resourcemanager.attestation.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.withX(java.lang.String)"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.withX(String x)"
  name: "withX(String x)"
  nameWithType: "JsonWebKey.withX(String x)"
  summary: "Set the x property: X coordinate for the Elliptic Curve point."
  parameters:
  - description: "the x value to set."
    name: "x"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWebKey withX(String x)"
  desc: "Set the x property: X coordinate for the Elliptic Curve point."
  returns:
    description: "the JsonWebKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.attestation.models.JsonWebKey?alt=com.azure.resourcemanager.attestation.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.withX5C(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.withX5C(List<String> x5C)"
  name: "withX5C(List<String> x5C)"
  nameWithType: "JsonWebKey.withX5C(List<String> x5C)"
  summary: "Set the x5C property: The \"x5c\" (X.509 certificate chain) parameter contains a chain of one or more PKIX certificates \\[RFC5280\\]."
  parameters:
  - description: "the x5C value to set."
    name: "x5C"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public JsonWebKey withX5C(List<String> x5C)"
  desc: "Set the x5C property: The \"x5c\" (X.509 certificate chain) parameter contains a chain of one or more PKIX certificates \\[RFC5280\\]. The certificate chain is represented as a JSON array of certificate value strings. Each string in the array is a base64-encoded (Section 4 of \\[RFC4648\\] -- not base64url-encoded) DER \\[ITU.X690.1994\\] PKIX certificate value. The PKIX certificate containing the key value MUST be the first certificate."
  returns:
    description: "the JsonWebKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.attestation.models.JsonWebKey?alt=com.azure.resourcemanager.attestation.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.withY(java.lang.String)"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.withY(String y)"
  name: "withY(String y)"
  nameWithType: "JsonWebKey.withY(String y)"
  summary: "Set the y property: Y coordinate for the Elliptic Curve point."
  parameters:
  - description: "the y value to set."
    name: "y"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWebKey withY(String y)"
  desc: "Set the y property: Y coordinate for the Elliptic Curve point."
  returns:
    description: "the JsonWebKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.attestation.models.JsonWebKey?alt=com.azure.resourcemanager.attestation.models.JsonWebKey&text=JsonWebKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.x()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.x()"
  name: "x()"
  nameWithType: "JsonWebKey.x()"
  summary: "Get the x property: X coordinate for the Elliptic Curve point."
  syntax: "public String x()"
  desc: "Get the x property: X coordinate for the Elliptic Curve point."
  returns:
    description: "the x value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.x5C()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.x5C()"
  name: "x5C()"
  nameWithType: "JsonWebKey.x5C()"
  summary: "Get the x5C property: The \"x5c\" (X.509 certificate chain) parameter contains a chain of one or more PKIX certificates \\[RFC5280\\]."
  syntax: "public List<String> x5C()"
  desc: "Get the x5C property: The \"x5c\" (X.509 certificate chain) parameter contains a chain of one or more PKIX certificates \\[RFC5280\\]. The certificate chain is represented as a JSON array of certificate value strings. Each string in the array is a base64-encoded (Section 4 of \\[RFC4648\\] -- not base64url-encoded) DER \\[ITU.X690.1994\\] PKIX certificate value. The PKIX certificate containing the key value MUST be the first certificate."
  returns:
    description: "the x5C value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.attestation.models.JsonWebKey.y()"
  fullName: "com.azure.resourcemanager.attestation.models.JsonWebKey.y()"
  name: "y()"
  nameWithType: "JsonWebKey.y()"
  summary: "Get the y property: Y coordinate for the Elliptic Curve point."
  syntax: "public String y()"
  desc: "Get the y property: Y coordinate for the Elliptic Curve point."
  returns:
    description: "the y value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The JsonWebKey model."
metadata: {}
package: "com.azure.resourcemanager.attestation.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-attestation:1.0.0-beta.1
