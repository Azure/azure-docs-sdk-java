### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listAlerts*"
fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listAlerts"
name: "listAlerts"
nameWithType: "MetricsAdvisorClient.listAlerts"
members:
- uid: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listAlerts(java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime)"
  fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listAlerts(String alertConfigurationId, OffsetDateTime startTime, OffsetDateTime endTime)"
  name: "listAlerts(String alertConfigurationId, OffsetDateTime startTime, OffsetDateTime endTime)"
  nameWithType: "MetricsAdvisorClient.listAlerts(String alertConfigurationId, OffsetDateTime startTime, OffsetDateTime endTime)"
  summary: "Fetch the alerts triggered by an anomaly alert configuration.\n\n**Code sample**\n\n```java\nfinal String alertConfigurationId = \"ff3014a0-bbbb-41ec-a637-677e77b81299\";\n final OffsetDateTime startTime = OffsetDateTime.parse(\"2020-01-01T00:00:00Z\");\n final OffsetDateTime endTime = OffsetDateTime.parse(\"2020-09-09T00:00:00Z\");\n \n PagedIterable<AnomalyAlert> alertsIterable\n     = metricsAdvisorClient.listAlerts(alertConfigurationId, startTime, endTime);\n \n for (AnomalyAlert anomalyAlert : alertsIterable) {\n     System.out.printf(\"Anomaly Alert Id: %s%n\", anomalyAlert.getId());\n     System.out.printf(\"Created Time: %s%n\", anomalyAlert.getCreatedTime());\n     System.out.printf(\"Modified Time: %s%n\", anomalyAlert.getModifiedTime());\n }\n```"
  parameters:
  - description: "The anomaly alert configuration id."
    name: "alertConfigurationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The start time of the time range within which the alerts were triggered."
    name: "startTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "The end time of the time range within which the alerts were triggered."
    name: "endTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<AnomalyAlert> listAlerts(String alertConfigurationId, OffsetDateTime startTime, OffsetDateTime endTime)"
  returns:
    description: "The alerts."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.AnomalyAlert?alt=com.azure.ai.metricsadvisor.models.AnomalyAlert&text=AnomalyAlert\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listAlerts(java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,com.azure.ai.metricsadvisor.models.ListAlertOptions,com.azure.core.util.Context)"
  fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listAlerts(String alertConfigurationId, OffsetDateTime startTime, OffsetDateTime endTime, ListAlertOptions options, Context context)"
  name: "listAlerts(String alertConfigurationId, OffsetDateTime startTime, OffsetDateTime endTime, ListAlertOptions options, Context context)"
  nameWithType: "MetricsAdvisorClient.listAlerts(String alertConfigurationId, OffsetDateTime startTime, OffsetDateTime endTime, ListAlertOptions options, Context context)"
  summary: "Fetch the alerts triggered by an anomaly alert configuration.\n\n**Code sample**\n\n```java\nfinal String alertConfigurationId = \"ff3014a0-bbbb-41ec-a637-677e77b81299\";\n final OffsetDateTime startTime = OffsetDateTime.parse(\"2020-01-01T00:00:00Z\");\n final OffsetDateTime endTime = OffsetDateTime.parse(\"2020-09-09T00:00:00Z\");\n final AlertQueryTimeMode timeMode = AlertQueryTimeMode.ANOMALY_TIME;\n final ListAlertOptions options = new ListAlertOptions()\n     .setAlertQueryTimeMode(timeMode)\n     .setTop(10);\n \n PagedIterable<AnomalyAlert> alertsIterable\n     = metricsAdvisorClient.listAlerts(alertConfigurationId, startTime, endTime, options, Context.NONE);\n \n Stream<PagedResponse<AnomalyAlert>> alertsPageStream = alertsIterable.streamByPage();\n int[] pageCount = new int[1];\n alertsPageStream.forEach(alertsPage -> {\n     System.out.printf(\"Page: %d%n\", pageCount[0]++);\n     IterableStream<AnomalyAlert> alertsPageItems = alertsPage.getElements();\n     for (AnomalyAlert anomalyAlert : alertsPageItems) {\n         System.out.printf(\"AnomalyAlert Id: %s%n\", anomalyAlert.getId());\n         System.out.printf(\"Created Time: %s%n\", anomalyAlert.getCreatedTime());\n         System.out.printf(\"Modified Time: %s%n\", anomalyAlert.getModifiedTime());\n     }\n });\n```"
  parameters:
  - description: "The anomaly alert configuration id."
    name: "alertConfigurationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The start time of the time range within which the alerts were triggered."
    name: "startTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "The end time of the time range within which the alerts were triggered."
    name: "endTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "The additional parameters."
    name: "options"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.ListAlertOptions?alt=com.azure.ai.metricsadvisor.models.ListAlertOptions&text=ListAlertOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<AnomalyAlert> listAlerts(String alertConfigurationId, OffsetDateTime startTime, OffsetDateTime endTime, ListAlertOptions options, Context context)"
  returns:
    description: "The alerts."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.AnomalyAlert?alt=com.azure.ai.metricsadvisor.models.AnomalyAlert&text=AnomalyAlert\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
