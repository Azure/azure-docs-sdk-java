### YamlMime:JavaType
uid: "com.azure.core.annotation.UnexpectedResponseExceptionTypes"
fullName: "com.azure.core.annotation.UnexpectedResponseExceptionTypes"
name: "UnexpectedResponseExceptionTypes"
nameWithType: "UnexpectedResponseExceptionTypes"
summary: "The `@Repeatable` container annotation for <xref uid=\"com.azure.core.annotation.UnexpectedResponseExceptionType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UnexpectedResponseExceptionType\"></xref>."
syntax: "public interface UnexpectedResponseExceptionTypes implements Annotation"
methods:
- uid: "com.azure.core.annotation.UnexpectedResponseExceptionTypes.value()"
  fullName: "com.azure.core.annotation.UnexpectedResponseExceptionTypes.value()"
  name: "value()"
  nameWithType: "UnexpectedResponseExceptionTypes.value()"
  modifiers:
  - "abstract"
  syntax: "public abstract UnexpectedResponseExceptionType[] value()"
  returns:
    description: "array of <xref uid=\"com.azure.core.annotation.UnexpectedResponseExceptionType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UnexpectedResponseExceptionType\"></xref> that annotate a method."
    type: "<xref href=\"com.azure.core.annotation.UnexpectedResponseExceptionType?alt=com.azure.core.annotation.UnexpectedResponseExceptionType&text=UnexpectedResponseExceptionType\" data-throw-if-not-resolved=\"False\" />[]"
type: "interface"
desc: "The `@Repeatable` container annotation for <xref uid=\"com.azure.core.annotation.UnexpectedResponseExceptionType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UnexpectedResponseExceptionType\"></xref>. This allows methods to have different exceptions to be thrown or returned based on the response status codes returned from a REST API."
implements:
- "<xref href=\"java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.core.annotation"
artifact: com.azure:azure-core:1.22.0-beta.1
