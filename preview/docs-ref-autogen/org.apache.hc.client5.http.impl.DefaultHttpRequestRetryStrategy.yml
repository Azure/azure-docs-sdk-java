### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy
  id: DefaultHttpRequestRetryStrategy
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl
  children:
  - org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy()
  - org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy(int,org.apache.hc.core5.util.TimeValue)
  - org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy(int,org.apache.hc.core5.util.TimeValue,java.util.Collection<java.lang.Class<? extends java.io.IOException>>,java.util.Collection<java.lang.Integer>)
  - org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.INSTANCE
  - org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.getRetryInterval(org.apache.hc.core5.http.HttpResponse,int,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.handleAsIdempotent(org.apache.hc.core5.http.HttpRequest)
  - org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.retryRequest(org.apache.hc.core5.http.HttpRequest,java.io.IOException,int,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.retryRequest(org.apache.hc.core5.http.HttpResponse,int,org.apache.hc.core5.http.protocol.HttpContext)
  langs:
  - java
  name: DefaultHttpRequestRetryStrategy
  nameWithType: DefaultHttpRequestRetryStrategy
  fullName: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy
  type: Class
  package: org.apache.hc.client5.http.impl
  summary: Default implementation of the <xref uid="org.apache.hc.client5.http.HttpRequestRetryStrategy" data-throw-if-not-resolved="false">HttpRequestRetryStrategy</xref> interface.
  syntax:
    content: public class DefaultHttpRequestRetryStrategy implements HttpRequestRetryStrategy
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.client5.http.HttpRequestRetryStrategy
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy()
  id: DefaultHttpRequestRetryStrategy()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy
  langs:
  - java
  name: DefaultHttpRequestRetryStrategy()
  nameWithType: DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy()
  fullName: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy()
  overload: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy*
  type: Constructor
  package: org.apache.hc.client5.http.impl
  summary: >-
    Create the HTTP request retry strategy with a max retry count of 1, default retry interval of 1 second, and using the following list of non-retriable I/O exception classes:


     *  InterruptedIOException
     *  UnknownHostException
     *  ConnectException
     *  ConnectionClosedException
     *  SSLException

    and retriable HTTP status codes:


     *  SC\_TOO\_MANY\_REQUESTS (429)
     *  SC\_SERVICE\_UNAVAILABLE (503)
  syntax:
    content: public DefaultHttpRequestRetryStrategy()
- uid: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy(int,org.apache.hc.core5.util.TimeValue)
  id: DefaultHttpRequestRetryStrategy(int,org.apache.hc.core5.util.TimeValue)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy
  langs:
  - java
  name: DefaultHttpRequestRetryStrategy(int maxRetries, TimeValue defaultRetryInterval)
  nameWithType: DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy(int maxRetries, TimeValue defaultRetryInterval)
  fullName: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy(int maxRetries, TimeValue defaultRetryInterval)
  overload: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy*
  type: Constructor
  package: org.apache.hc.client5.http.impl
  summary: >-
    Create the HTTP request retry strategy using the following list of non-retriable I/O exception classes:


     *  InterruptedIOException
     *  UnknownHostException
     *  ConnectException
     *  ConnectionClosedException
     *  SSLException

    and retriable HTTP status codes:


     *  SC\_TOO\_MANY\_REQUESTS (429)
     *  SC\_SERVICE\_UNAVAILABLE (503)
  syntax:
    content: public DefaultHttpRequestRetryStrategy(int maxRetries, TimeValue defaultRetryInterval)
    parameters:
    - id: maxRetries
      type: int
      description: how many times to retry; 0 means no retries
    - id: defaultRetryInterval
      type: org.apache.hc.core5.util.TimeValue
      description: >-
        the default retry interval between
         subsequent retries if the <code>Retry-After</code> header is not set
         or invalid.
- uid: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy(int,org.apache.hc.core5.util.TimeValue,java.util.Collection<java.lang.Class<? extends java.io.IOException>>,java.util.Collection<java.lang.Integer>)
  id: DefaultHttpRequestRetryStrategy(int,org.apache.hc.core5.util.TimeValue,java.util.Collection<java.lang.Class<? extends java.io.IOException>>,java.util.Collection<java.lang.Integer>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy
  langs:
  - java
  name: DefaultHttpRequestRetryStrategy(int maxRetries, TimeValue defaultRetryInterval, Collection<Class<? extends IOException>> clazzes, Collection<Integer> codes)
  nameWithType: DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy(int maxRetries, TimeValue defaultRetryInterval, Collection<Class<? extends IOException>> clazzes, Collection<Integer> codes)
  fullName: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy(int maxRetries, TimeValue defaultRetryInterval, Collection<Class<? extends IOException>> clazzes, Collection<Integer> codes)
  overload: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy*
  type: Constructor
  package: org.apache.hc.client5.http.impl
  syntax:
    content: protected DefaultHttpRequestRetryStrategy(int maxRetries, TimeValue defaultRetryInterval, Collection<Class<? extends IOException>> clazzes, Collection<Integer> codes)
    parameters:
    - id: maxRetries
      type: int
    - id: defaultRetryInterval
      type: org.apache.hc.core5.util.TimeValue
    - id: clazzes
      type: java.util.Collection<java.lang.Class<? extends java.io.IOException>>
    - id: codes
      type: java.util.Collection<java.lang.Integer>
- uid: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.INSTANCE
  id: INSTANCE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy
  langs:
  - java
  name: INSTANCE
  nameWithType: DefaultHttpRequestRetryStrategy.INSTANCE
  fullName: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.INSTANCE
  type: Field
  package: org.apache.hc.client5.http.impl
  syntax:
    content: public static final DefaultHttpRequestRetryStrategy INSTANCE
    return:
      type: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy
- uid: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.getRetryInterval(org.apache.hc.core5.http.HttpResponse,int,org.apache.hc.core5.http.protocol.HttpContext)
  id: getRetryInterval(org.apache.hc.core5.http.HttpResponse,int,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy
  langs:
  - java
  name: getRetryInterval(HttpResponse response, int execCount, HttpContext context)
  nameWithType: DefaultHttpRequestRetryStrategy.getRetryInterval(HttpResponse response, int execCount, HttpContext context)
  fullName: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.getRetryInterval(HttpResponse response, int execCount, HttpContext context)
  overload: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.getRetryInterval*
  type: Method
  package: org.apache.hc.client5.http.impl
  summary: Determines the retry interval between subsequent retries.
  syntax:
    content: public TimeValue getRetryInterval(HttpResponse response, int execCount, HttpContext context)
    parameters:
    - id: response
      type: org.apache.hc.core5.http.HttpResponse
    - id: execCount
      type: int
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
    return:
      type: org.apache.hc.core5.util.TimeValue
- uid: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.handleAsIdempotent(org.apache.hc.core5.http.HttpRequest)
  id: handleAsIdempotent(org.apache.hc.core5.http.HttpRequest)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy
  langs:
  - java
  name: handleAsIdempotent(HttpRequest request)
  nameWithType: DefaultHttpRequestRetryStrategy.handleAsIdempotent(HttpRequest request)
  fullName: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.handleAsIdempotent(HttpRequest request)
  overload: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.handleAsIdempotent*
  type: Method
  package: org.apache.hc.client5.http.impl
  syntax:
    content: protected boolean handleAsIdempotent(HttpRequest request)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.HttpRequest
    return:
      type: boolean
- uid: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.retryRequest(org.apache.hc.core5.http.HttpRequest,java.io.IOException,int,org.apache.hc.core5.http.protocol.HttpContext)
  id: retryRequest(org.apache.hc.core5.http.HttpRequest,java.io.IOException,int,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy
  langs:
  - java
  name: retryRequest(HttpRequest request, IOException exception, int execCount, HttpContext context)
  nameWithType: DefaultHttpRequestRetryStrategy.retryRequest(HttpRequest request, IOException exception, int execCount, HttpContext context)
  fullName: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.retryRequest(HttpRequest request, IOException exception, int execCount, HttpContext context)
  overload: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.retryRequest*
  type: Method
  package: org.apache.hc.client5.http.impl
  summary: Determines if a method should be retried after an I/O exception occured during execution.
  syntax:
    content: public boolean retryRequest(HttpRequest request, IOException exception, int execCount, HttpContext context)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.HttpRequest
    - id: exception
      type: java.io.IOException
    - id: execCount
      type: int
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
    return:
      type: boolean
- uid: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.retryRequest(org.apache.hc.core5.http.HttpResponse,int,org.apache.hc.core5.http.protocol.HttpContext)
  id: retryRequest(org.apache.hc.core5.http.HttpResponse,int,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy
  langs:
  - java
  name: retryRequest(HttpResponse response, int execCount, HttpContext context)
  nameWithType: DefaultHttpRequestRetryStrategy.retryRequest(HttpResponse response, int execCount, HttpContext context)
  fullName: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.retryRequest(HttpResponse response, int execCount, HttpContext context)
  overload: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.retryRequest*
  type: Method
  package: org.apache.hc.client5.http.impl
  summary: Determines if a method should be retried given the response from the target server.
  syntax:
    content: public boolean retryRequest(HttpResponse response, int execCount, HttpContext context)
    parameters:
    - id: response
      type: org.apache.hc.core5.http.HttpResponse
    - id: execCount
      type: int
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
    return:
      type: boolean
references:
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.core5.util.TimeValue
  name: TimeValue
  nameWithType: TimeValue
  fullName: org.apache.hc.core5.util.TimeValue
- uid: java.util.Collection<java.lang.Class<? extends java.io.IOException>>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '? extends java.io.IOException'
    name: IOException
    fullName: '? extends java.io.IOException'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: java.util.Collection<java.lang.Integer>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy*
  name: DefaultHttpRequestRetryStrategy
  nameWithType: DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy
  fullName: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.DefaultHttpRequestRetryStrategy
  package: org.apache.hc.client5.http.impl
- uid: org.apache.hc.core5.http.HttpRequest
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: org.apache.hc.core5.http.HttpRequest
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.retryRequest*
  name: retryRequest
  nameWithType: DefaultHttpRequestRetryStrategy.retryRequest
  fullName: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.retryRequest
  package: org.apache.hc.client5.http.impl
- uid: org.apache.hc.core5.http.HttpResponse
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: org.apache.hc.core5.http.HttpResponse
- uid: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.getRetryInterval*
  name: getRetryInterval
  nameWithType: DefaultHttpRequestRetryStrategy.getRetryInterval
  fullName: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.getRetryInterval
  package: org.apache.hc.client5.http.impl
- uid: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.handleAsIdempotent*
  name: handleAsIdempotent
  nameWithType: DefaultHttpRequestRetryStrategy.handleAsIdempotent
  fullName: org.apache.hc.client5.http.impl.DefaultHttpRequestRetryStrategy.handleAsIdempotent
  package: org.apache.hc.client5.http.impl
- uid: org.apache.hc.client5.http.HttpRequestRetryStrategy
  name: HttpRequestRetryStrategy
  nameWithType: HttpRequestRetryStrategy
  fullName: org.apache.hc.client5.http.HttpRequestRetryStrategy
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '? extends java.io.IOException'
  name: '? extends IOException'
  nameWithType: '? extends IOException'
  fullName: '? extends java.io.IOException'
- uid: java.lang.Integer
  name: Integer
  nameWithType: Integer
  fullName: java.lang.Integer
