### YamlMime:JavaType
uid: "org.apache.hc.core5.http.impl.io.ContentLengthInputStream"
fullName: "org.apache.hc.core5.http.impl.io.ContentLengthInputStream"
name: "ContentLengthInputStream"
nameWithType: "ContentLengthInputStream"
summary: "Input stream that cuts off after a defined number of bytes. This class is used to receive content of HTTP messages where the end of the content entity is determined by the value of the `Content-Length header`. Entities transferred using this stream can be maximum <xref uid=\"java.lang.Long.MAX_VALUE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Long#MAX_VALUE\"></xref> long.\n\nNote that this class NEVER closes the underlying stream, even when close gets called. Instead, it will read until the \"end\" of its limit on close, which allows for the seamless execution of subsequent HTTP 1.1 requests, while not requiring the client to remember to read the entire contents of the response."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.io.InputStream\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.io.InputStream.available()"
- "java.io.InputStream.close()"
- "java.io.InputStream.mark(int)"
- "java.io.InputStream.markSupported()"
- "java.io.InputStream.nullInputStream()"
- "java.io.InputStream.read()"
- "java.io.InputStream.read(byte[])"
- "java.io.InputStream.read(byte[],int,int)"
- "java.io.InputStream.readAllBytes()"
- "java.io.InputStream.readNBytes(byte[],int,int)"
- "java.io.InputStream.readNBytes(int)"
- "java.io.InputStream.reset()"
- "java.io.InputStream.skip(long)"
- "java.io.InputStream.transferTo(java.io.OutputStream)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ContentLengthInputStream extends InputStream"
constructors:
- "org.apache.hc.core5.http.impl.io.ContentLengthInputStream.ContentLengthInputStream(org.apache.hc.core5.http.io.SessionInputBuffer,java.io.InputStream,long)"
methods:
- "org.apache.hc.core5.http.impl.io.ContentLengthInputStream.available()"
- "org.apache.hc.core5.http.impl.io.ContentLengthInputStream.close()"
- "org.apache.hc.core5.http.impl.io.ContentLengthInputStream.read()"
- "org.apache.hc.core5.http.impl.io.ContentLengthInputStream.read(byte[])"
- "org.apache.hc.core5.http.impl.io.ContentLengthInputStream.read(byte[],int,int)"
- "org.apache.hc.core5.http.impl.io.ContentLengthInputStream.skip(long)"
type: "class"
metadata: {}
package: "org.apache.hc.core5.http.impl.io"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
