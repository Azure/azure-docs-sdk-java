### YamlMime:JavaType
uid: "com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties"
fullName: "com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties"
name: "LicensedComponentSetupTypeProperties"
nameWithType: "LicensedComponentSetupTypeProperties"
summary: "Installation of licensed component setup type properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LicensedComponentSetupTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties.LicensedComponentSetupTypeProperties()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties.LicensedComponentSetupTypeProperties()"
  name: "LicensedComponentSetupTypeProperties()"
  nameWithType: "LicensedComponentSetupTypeProperties.LicensedComponentSetupTypeProperties()"
  syntax: "public LicensedComponentSetupTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties.componentName()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties.componentName()"
  name: "componentName()"
  nameWithType: "LicensedComponentSetupTypeProperties.componentName()"
  summary: "Get the component<wbr>Name property: The name of the 3rd party component."
  syntax: "public String componentName()"
  desc: "Get the componentName property: The name of the 3rd party component."
  returns:
    description: "the componentName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties.licenseKey()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties.licenseKey()"
  name: "licenseKey()"
  nameWithType: "LicensedComponentSetupTypeProperties.licenseKey()"
  summary: "Get the license<wbr>Key property: The license key to activate the component."
  syntax: "public SecretBase licenseKey()"
  desc: "Get the licenseKey property: The license key to activate the component."
  returns:
    description: "the licenseKey value."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.SecretBase?alt=com.azure.resourcemanager.synapse.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties.validate()"
  name: "validate()"
  nameWithType: "LicensedComponentSetupTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties.withComponentName(java.lang.String)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties.withComponentName(String componentName)"
  name: "withComponentName(String componentName)"
  nameWithType: "LicensedComponentSetupTypeProperties.withComponentName(String componentName)"
  summary: "Set the component<wbr>Name property: The name of the 3rd party component."
  parameters:
  - description: "the componentName value to set."
    name: "componentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LicensedComponentSetupTypeProperties withComponentName(String componentName)"
  desc: "Set the componentName property: The name of the 3rd party component."
  returns:
    description: "the LicensedComponentSetupTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties?alt=com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties&text=LicensedComponentSetupTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties.withLicenseKey(com.azure.resourcemanager.synapse.models.SecretBase)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties.withLicenseKey(SecretBase licenseKey)"
  name: "withLicenseKey(SecretBase licenseKey)"
  nameWithType: "LicensedComponentSetupTypeProperties.withLicenseKey(SecretBase licenseKey)"
  summary: "Set the license<wbr>Key property: The license key to activate the component."
  parameters:
  - description: "the licenseKey value to set."
    name: "licenseKey"
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.SecretBase?alt=com.azure.resourcemanager.synapse.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LicensedComponentSetupTypeProperties withLicenseKey(SecretBase licenseKey)"
  desc: "Set the licenseKey property: The license key to activate the component."
  returns:
    description: "the LicensedComponentSetupTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties?alt=com.azure.resourcemanager.synapse.fluent.models.LicensedComponentSetupTypeProperties&text=LicensedComponentSetupTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Installation of licensed component setup type properties."
metadata: {}
package: "com.azure.resourcemanager.synapse.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-synapse:1.0.0-beta.6
