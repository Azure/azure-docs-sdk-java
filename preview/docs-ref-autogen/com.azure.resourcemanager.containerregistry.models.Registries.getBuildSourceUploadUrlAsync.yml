### YamlMime:JavaMember
uid: "com.azure.resourcemanager.containerregistry.models.Registries.getBuildSourceUploadUrlAsync*"
fullName: "com.azure.resourcemanager.containerregistry.models.Registries.getBuildSourceUploadUrlAsync"
name: "getBuildSourceUploadUrlAsync"
nameWithType: "Registries.getBuildSourceUploadUrlAsync"
members:
- uid: "com.azure.resourcemanager.containerregistry.models.Registries.getBuildSourceUploadUrlAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.containerregistry.models.Registries.getBuildSourceUploadUrlAsync(String rgName, String acrName)"
  name: "getBuildSourceUploadUrlAsync(String rgName, String acrName)"
  nameWithType: "Registries.getBuildSourceUploadUrlAsync(String rgName, String acrName)"
  summary: "The function that gets the URL of the build source upload ashnchronously."
  parameters:
  - description: "the name of the resource group."
    name: "rgName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of the container."
    name: "acrName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<SourceUploadDefinition> getBuildSourceUploadUrlAsync(String rgName, String acrName)"
  returns:
    description: "the URL of the build source upload."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerregistry.models.SourceUploadDefinition?alt=com.azure.resourcemanager.containerregistry.models.SourceUploadDefinition&text=SourceUploadDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.containerregistry.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.5
