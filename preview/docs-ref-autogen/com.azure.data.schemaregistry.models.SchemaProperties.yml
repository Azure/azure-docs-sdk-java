### YamlMime:JavaType
uid: "com.azure.data.schemaregistry.models.SchemaProperties"
fullName: "com.azure.data.schemaregistry.models.SchemaProperties"
name: "SchemaProperties"
nameWithType: "SchemaProperties"
summary: "Stores all relevant information returned from <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClient\"></xref>/<xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref> layer."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SchemaProperties"
constructors:
- "com.azure.data.schemaregistry.models.SchemaProperties.SchemaProperties(java.lang.String,com.azure.data.schemaregistry.models.SerializationType,java.lang.String,byte[])"
methods:
- "com.azure.data.schemaregistry.models.SchemaProperties.getSchema()"
- "com.azure.data.schemaregistry.models.SchemaProperties.getSchemaId()"
- "com.azure.data.schemaregistry.models.SchemaProperties.getSchemaName()"
- "com.azure.data.schemaregistry.models.SchemaProperties.getSerializationType()"
type: "class"
metadata: {}
package: "com.azure.data.schemaregistry.models"
artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.4
