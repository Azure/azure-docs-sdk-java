### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer
  id: BeanSerializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser
  children:
  - com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  - com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase)
  - com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  - com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  - com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
  - com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set<java.lang.String>)
  - com.fasterxml.jackson.databind.ser.BeanSerializer.asArraySerializer()
  - com.fasterxml.jackson.databind.ser.BeanSerializer.createDummy(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.BeanSerializer.createDummy(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
  - com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.BeanSerializer.toString()
  - com.fasterxml.jackson.databind.ser.BeanSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.ser.BeanSerializer.withFilterId(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.BeanSerializer.withIgnorals(java.util.Set<java.lang.String>)
  - com.fasterxml.jackson.databind.ser.BeanSerializer.withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  - com.fasterxml.jackson.databind.ser.BeanSerializer.withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  langs:
  - java
  name: BeanSerializer
  nameWithType: BeanSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer
  type: Class
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Serializer class that can serialize Java objects that map to JSON Object output. Internally handling is mostly dealt with by a sequence of <xref uid="com.fasterxml.jackson.databind.ser.BeanPropertyWriter" data-throw-if-not-resolved="false">BeanPropertyWriter</xref>s that will handle access value to serialize and call appropriate serializers to write out JSON.


    Implementation note: we will post-process resulting serializer, to figure out actual serializers for final types. This must be done from <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializer.resolve" data-throw-if-not-resolved="false">#resolve</xref> method, and NOT from constructor; otherwise we could end up with an infinite loop.
  syntax:
    content: public class BeanSerializer extends BeanSerializerBase
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.JsonSerializer
  - com.fasterxml.jackson.databind.ser.std.StdSerializer
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
  inheritedMembers:
  - com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  - com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  - com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  - com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  - com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._customTypeId(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._typeIdDef(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.asArraySerializer()
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.properties()
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.resolve(com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.usesObjectId()
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withFilterId(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.lang.String[])
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.util.Set<java.lang.String>)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  - com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  id: BeanSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializer
  langs:
  - java
  name: BeanSerializer(JavaType type, BeanSerializerBuilder builder, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  nameWithType: BeanSerializer.BeanSerializer(JavaType type, BeanSerializerBuilder builder, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(JavaType type, BeanSerializerBuilder builder, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public BeanSerializer(JavaType type, BeanSerializerBuilder builder, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: builder
      type: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder
      description: >-
        Builder object that contains collected information
           that may be needed for serializer
    - id: properties
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]
      description: Property writers used for actual serialization
    - id: filteredProperties
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase)
  id: BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializer
  langs:
  - java
  name: BeanSerializer(BeanSerializerBase src)
  nameWithType: BeanSerializer.BeanSerializer(BeanSerializerBase src)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(BeanSerializerBase src)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  summary: Alternate copy constructor that can be used to construct standard <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializer" data-throw-if-not-resolved="false">BeanSerializer</xref> passing an instance of "compatible enough" source serializer.
  syntax:
    content: protected BeanSerializer(BeanSerializerBase src)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  id: BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializer
  langs:
  - java
  name: BeanSerializer(BeanSerializerBase src, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  nameWithType: BeanSerializer.BeanSerializer(BeanSerializerBase src, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(BeanSerializerBase src, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected BeanSerializer(BeanSerializerBase src, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
    - id: properties
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]
    - id: filteredProperties
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  id: BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializer
  langs:
  - java
  name: BeanSerializer(BeanSerializerBase src, ObjectIdWriter objectIdWriter)
  nameWithType: BeanSerializer.BeanSerializer(BeanSerializerBase src, ObjectIdWriter objectIdWriter)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(BeanSerializerBase src, ObjectIdWriter objectIdWriter)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected BeanSerializer(BeanSerializerBase src, ObjectIdWriter objectIdWriter)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
    - id: objectIdWriter
      type: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
  id: BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializer
  langs:
  - java
  name: BeanSerializer(BeanSerializerBase src, ObjectIdWriter objectIdWriter, Object filterId)
  nameWithType: BeanSerializer.BeanSerializer(BeanSerializerBase src, ObjectIdWriter objectIdWriter, Object filterId)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(BeanSerializerBase src, ObjectIdWriter objectIdWriter, Object filterId)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected BeanSerializer(BeanSerializerBase src, ObjectIdWriter objectIdWriter, Object filterId)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
    - id: objectIdWriter
      type: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
    - id: filterId
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set<java.lang.String>)
  id: BeanSerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializer
  langs:
  - java
  name: BeanSerializer(BeanSerializerBase src, Set<String> toIgnore)
  nameWithType: BeanSerializer.BeanSerializer(BeanSerializerBase src, Set<String> toIgnore)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer(BeanSerializerBase src, Set<String> toIgnore)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected BeanSerializer(BeanSerializerBase src, Set<String> toIgnore)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
    - id: toIgnore
      type: java.util.Set<java.lang.String>
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.asArraySerializer()
  id: asArraySerializer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializer
  langs:
  - java
  name: asArraySerializer()
  nameWithType: BeanSerializer.asArraySerializer()
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.asArraySerializer()
  overload: com.fasterxml.jackson.databind.ser.BeanSerializer.asArraySerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Implementation has to check whether as-array serialization is possible reliably; if (and only if) so, will construct a <xref uid="com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer" data-throw-if-not-resolved="false">BeanAsArraySerializer</xref>, otherwise will return this serializer as is.
  syntax:
    content: protected BeanSerializerBase asArraySerializer()
    return:
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.createDummy(com.fasterxml.jackson.databind.JavaType)
  id: createDummy(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializer
  langs:
  - java
  name: createDummy(JavaType forType)
  nameWithType: BeanSerializer.createDummy(JavaType forType)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.createDummy(JavaType forType)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializer.createDummy*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public static BeanSerializer createDummy(JavaType forType)
    parameters:
    - id: forType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.ser.BeanSerializer
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.createDummy(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
  id: createDummy(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializer
  langs:
  - java
  name: createDummy(JavaType forType, BeanSerializerBuilder builder)
  nameWithType: BeanSerializer.createDummy(JavaType forType, BeanSerializerBuilder builder)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.createDummy(JavaType forType, BeanSerializerBuilder builder)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializer.createDummy*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method for constructing dummy bean serializer; one that never outputs any properties
  syntax:
    content: public static BeanSerializer createDummy(JavaType forType, BeanSerializerBuilder builder)
    parameters:
    - id: forType
      type: com.fasterxml.jackson.databind.JavaType
    - id: builder
      type: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder
    return:
      type: com.fasterxml.jackson.databind.ser.BeanSerializer
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializer
  langs:
  - java
  name: serialize(Object bean, JsonGenerator gen, SerializerProvider provider)
  nameWithType: BeanSerializer.serialize(Object bean, JsonGenerator gen, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(Object bean, JsonGenerator gen, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializer.serialize*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Main serialization method that will delegate actual output to configured <xref uid="com.fasterxml.jackson.databind.ser.BeanPropertyWriter" data-throw-if-not-resolved="false">BeanPropertyWriter</xref> instances.
  syntax:
    content: public final void serialize(Object bean, JsonGenerator gen, SerializerProvider provider)
    parameters:
    - id: bean
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializer
  langs:
  - java
  name: toString()
  nameWithType: BeanSerializer.toString()
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.toString()
  overload: com.fasterxml.jackson.databind.ser.BeanSerializer.toString*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  id: unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializer
  langs:
  - java
  name: unwrappingSerializer(NameTransformer unwrapper)
  nameWithType: BeanSerializer.unwrappingSerializer(NameTransformer unwrapper)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.unwrappingSerializer(NameTransformer unwrapper)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializer.unwrappingSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Method that will return serializer instance that produces "unwrapped" serialization, if applicable for type being serialized (which is the case for some serializers that produce JSON Objects as output). If no unwrapped serializer can be constructed, will simply return serializer as-is.


    Default implementation just returns serializer as-is, indicating that no unwrapped variant exists
  syntax:
    content: public JsonSerializer<Object> unwrappingSerializer(NameTransformer unwrapper)
    parameters:
    - id: unwrapper
      type: com.fasterxml.jackson.databind.util.NameTransformer
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.withFilterId(java.lang.Object)
  id: withFilterId(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializer
  langs:
  - java
  name: withFilterId(Object filterId)
  nameWithType: BeanSerializer.withFilterId(Object filterId)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.withFilterId(Object filterId)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializer.withFilterId*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Mutant factory used for creating a new instance with different filter id (used with `JsonFilter` annotation)
  syntax:
    content: public BeanSerializerBase withFilterId(Object filterId)
    parameters:
    - id: filterId
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.withIgnorals(java.util.Set<java.lang.String>)
  id: withIgnorals(java.util.Set<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializer
  langs:
  - java
  name: withIgnorals(Set<String> toIgnore)
  nameWithType: BeanSerializer.withIgnorals(Set<String> toIgnore)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.withIgnorals(Set<String> toIgnore)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializer.withIgnorals*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Mutant factory used for creating a new instance with additional set of properties to ignore (from properties this instance otherwise has)
  syntax:
    content: protected BeanSerializerBase withIgnorals(Set<String> toIgnore)
    parameters:
    - id: toIgnore
      type: java.util.Set<java.lang.String>
    return:
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  id: withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializer
  langs:
  - java
  name: withObjectIdWriter(ObjectIdWriter objectIdWriter)
  nameWithType: BeanSerializer.withObjectIdWriter(ObjectIdWriter objectIdWriter)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.withObjectIdWriter(ObjectIdWriter objectIdWriter)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializer.withObjectIdWriter*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Mutant factory used for creating a new instance with different <xref uid="com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter" data-throw-if-not-resolved="false">ObjectIdWriter</xref>.
  syntax:
    content: public BeanSerializerBase withObjectIdWriter(ObjectIdWriter objectIdWriter)
    parameters:
    - id: objectIdWriter
      type: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
    return:
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  id: withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.BeanSerializer
  langs:
  - java
  name: withProperties(BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  nameWithType: BeanSerializer.withProperties(BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.withProperties(BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  overload: com.fasterxml.jackson.databind.ser.BeanSerializer.withProperties*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: >-
    Mutant factory used for creating a new instance with modified set of properties.


    Note: in 2.11.x, need to keep non-abstract for slightly better compatibility (XML module extends)
  syntax:
    content: protected BeanSerializerBase withProperties(BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
    parameters:
    - id: properties
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]
    - id: filteredProperties
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]
    return:
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
references:
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder
  name: BeanSerializerBuilder
  nameWithType: BeanSerializerBuilder
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
    name: BeanPropertyWriter
    fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer*
  name: BeanSerializer
  nameWithType: BeanSerializer.BeanSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.BeanSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
  name: BeanSerializerBase
  nameWithType: BeanSerializerBase
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
  name: ObjectIdWriter
  nameWithType: ObjectIdWriter
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: java.util.Set<java.lang.String>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.createDummy*
  name: createDummy
  nameWithType: BeanSerializer.createDummy
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.createDummy
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.util.NameTransformer
  name: NameTransformer
  nameWithType: NameTransformer
  fullName: com.fasterxml.jackson.databind.util.NameTransformer
- uid: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.unwrappingSerializer*
  name: unwrappingSerializer
  nameWithType: BeanSerializer.unwrappingSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.unwrappingSerializer
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.withObjectIdWriter*
  name: withObjectIdWriter
  nameWithType: BeanSerializer.withObjectIdWriter
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.withObjectIdWriter
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.withFilterId*
  name: withFilterId
  nameWithType: BeanSerializer.withFilterId
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.withFilterId
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.withIgnorals*
  name: withIgnorals
  nameWithType: BeanSerializer.withIgnorals
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.withIgnorals
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.withProperties*
  name: withProperties
  nameWithType: BeanSerializer.withProperties
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.withProperties
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.asArraySerializer*
  name: asArraySerializer
  nameWithType: BeanSerializer.asArraySerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.asArraySerializer
  package: com.fasterxml.jackson.databind.ser
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.serialize*
  name: serialize
  nameWithType: BeanSerializer.serialize
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.serialize
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.ser.BeanSerializer.toString*
  name: toString
  nameWithType: BeanSerializer.toString
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializer.toString
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  name: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class<?>,JsonFormat.Feature)
  nameWithType: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class<?>,JsonFormat.Feature)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
- uid: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  name: JsonSerializer.isEmpty(SerializerProvider,T)
  nameWithType: JsonSerializer.isEmpty(SerializerProvider,T)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  name: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class<?>)
  nameWithType: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.asArraySerializer()
  name: BeanSerializerBase.asArraySerializer()
  nameWithType: BeanSerializerBase.asArraySerializer()
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.asArraySerializer()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  name: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  nameWithType: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._typeIdDef(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,com.fasterxml.jackson.core.JsonToken)
  name: BeanSerializerBase._typeIdDef(TypeSerializer,Object,JsonToken)
  nameWithType: BeanSerializerBase._typeIdDef(TypeSerializer,Object,JsonToken)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._typeIdDef(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanSerializerBase.serializeFieldsFiltered(Object,JsonGenerator,SerializerProvider)
  nameWithType: BeanSerializerBase.serializeFieldsFiltered(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  name: BeanSerializerBase.createContextual(SerializerProvider,BeanProperty)
  nameWithType: BeanSerializerBase.createContextual(SerializerProvider,BeanProperty)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  nameWithType: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  name: StdSerializer.visitFloatFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  nameWithType: StdSerializer.visitFloatFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.usesObjectId()
  name: BeanSerializerBase.usesObjectId()
  nameWithType: BeanSerializerBase.usesObjectId()
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.usesObjectId()
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  name: BeanSerializerBase.withObjectIdWriter(ObjectIdWriter)
  nameWithType: BeanSerializerBase.withObjectIdWriter(ObjectIdWriter)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  name: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  nameWithType: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
  name: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,int)
  nameWithType: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,int)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.resolve(com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanSerializerBase.resolve(SerializerProvider)
  nameWithType: BeanSerializerBase.resolve(SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.resolve(com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  name: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonValueFormat)
  nameWithType: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonValueFormat)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)
  name: StdSerializer.getSchema(SerializerProvider,Type,boolean)
  nameWithType: StdSerializer.getSchema(SerializerProvider,Type,boolean)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)
- uid: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  name: JsonSerializer.isUnwrappingSerializer()
  nameWithType: JsonSerializer.isUnwrappingSerializer()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: BeanSerializerBase._serializeWithObjectId(Object,JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: BeanSerializerBase._serializeWithObjectId(Object,JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)
  name: StdSerializer._nonEmpty(Collection<?>)
  nameWithType: StdSerializer._nonEmpty(Collection<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: BeanSerializerBase.serializeWithType(Object,JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: BeanSerializerBase.serializeWithType(Object,JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()
  name: StdSerializer.handledType()
  nameWithType: StdSerializer.handledType()
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)
  name: StdSerializer.createSchemaNode(String,boolean)
  nameWithType: StdSerializer.createSchemaNode(String,boolean)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  name: StdSerializer.findAnnotatedContentSerializer(SerializerProvider,BeanProperty)
  nameWithType: StdSerializer.findAnnotatedContentSerializer(SerializerProvider,BeanProperty)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  name: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class<?>)
  nameWithType: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  name: BeanSerializerBase.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  nameWithType: BeanSerializerBase.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
  name: BeanSerializerBase.getSchema(SerializerProvider,Type)
  nameWithType: BeanSerializerBase.getSchema(SerializerProvider,Type)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  nameWithType: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withFilterId(java.lang.Object)
  name: BeanSerializerBase.withFilterId(Object)
  nameWithType: BeanSerializerBase.withFilterId(Object)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withFilterId(java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanSerializerBase.serialize(Object,JsonGenerator,SerializerProvider)
  nameWithType: BeanSerializerBase.serialize(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
  name: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,String)
  nameWithType: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,String)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
  name: StdSerializer.findPropertyFilter(SerializerProvider,Object,Object)
  nameWithType: StdSerializer.findPropertyFilter(SerializerProvider,Object,Object)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: StdSerializer.serialize(T,JsonGenerator,SerializerProvider)
  nameWithType: StdSerializer.serialize(T,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
  name: BeanSerializerBase.findConvertingSerializer(SerializerProvider,BeanPropertyWriter)
  nameWithType: BeanSerializerBase.findConvertingSerializer(SerializerProvider,BeanPropertyWriter)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._customTypeId(java.lang.Object)
  name: BeanSerializerBase._customTypeId(Object)
  nameWithType: BeanSerializerBase._customTypeId(Object)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._customTypeId(java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  name: BeanSerializerBase.withProperties(BeanPropertyWriter[],BeanPropertyWriter[])
  nameWithType: BeanSerializerBase.withProperties(BeanPropertyWriter[],BeanPropertyWriter[])
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
- uid: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  name: JsonSerializer.getDelegatee()
  nameWithType: JsonSerializer.getDelegatee()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)
  name: BeanSerializerBase._serializeWithObjectId(Object,JsonGenerator,SerializerProvider,boolean)
  nameWithType: BeanSerializerBase._serializeWithObjectId(Object,JsonGenerator,SerializerProvider,boolean)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.lang.String[])
  name: BeanSerializerBase.withIgnorals(String[])
  nameWithType: BeanSerializerBase.withIgnorals(String[])
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.lang.String[])
- uid: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  name: JsonSerializer.unwrappingSerializer(NameTransformer)
  nameWithType: JsonSerializer.unwrappingSerializer(NameTransformer)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)
  name: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonFormatTypes)
  nameWithType: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonFormatTypes)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.properties()
  name: BeanSerializerBase.properties()
  nameWithType: BeanSerializerBase.properties()
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.properties()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  name: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType,jsonFormatVisitors.JsonValueFormat)
  nameWithType: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType,jsonFormatVisitors.JsonValueFormat)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: StdSerializer.isDefaultSerializer(JsonSerializer<?>)
  nameWithType: StdSerializer.isDefaultSerializer(JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId)
  name: BeanSerializerBase._serializeObjectId(Object,JsonGenerator,SerializerProvider,TypeSerializer,WritableObjectId)
  nameWithType: BeanSerializerBase._serializeObjectId(Object,JsonGenerator,SerializerProvider,TypeSerializer,WritableObjectId)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)
  name: StdSerializer.createSchemaNode(String)
  nameWithType: StdSerializer.createSchemaNode(String)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)
  name: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer<?>,JavaType)
  nameWithType: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer<?>,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  name: JsonSerializer.isEmpty(T)
  nameWithType: JsonSerializer.isEmpty(T)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanSerializerBase.serializeFields(Object,JsonGenerator,SerializerProvider)
  nameWithType: BeanSerializerBase.serializeFields(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.util.Set<java.lang.String>)
  name: BeanSerializerBase.withIgnorals(Set<String>)
  nameWithType: BeanSerializerBase.withIgnorals(Set<String>)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.util.Set<java.lang.String>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)
  name: StdSerializer._neitherNull(Object,Object)
  nameWithType: StdSerializer._neitherNull(Object,Object)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: ?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  name: ?>,JsonFormat.Feature)
  nameWithType: ?>,JsonFormat.Feature)
  fullName: ?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class
  nameWithType: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class
  nameWithType: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer
  nameWithType: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection
  name: StdSerializer._nonEmpty(Collection
  nameWithType: StdSerializer._nonEmpty(Collection
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class
  nameWithType: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer.replaceDelegatee(JsonSerializer
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer
  nameWithType: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.isDefaultSerializer(JsonSerializer
  nameWithType: StdSerializer.isDefaultSerializer(JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer
  nameWithType: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer
- uid: ?>,com.fasterxml.jackson.databind.JavaType)
  name: ?>,JavaType)
  nameWithType: ?>,JavaType)
  fullName: ?>,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.util.Set
  name: BeanSerializerBase.withIgnorals(Set
  nameWithType: BeanSerializerBase.withIgnorals(Set
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.util.Set
- uid: java.lang.String>)
  name: String>)
  nameWithType: String>)
  fullName: java.lang.String>)
