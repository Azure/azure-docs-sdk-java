### YamlMime:JavaMember
uid: "com.azure.resourcemanager.synapse.models.IntegrationRuntimeSsisProperties.withLicenseType*"
fullName: "com.azure.resourcemanager.synapse.models.IntegrationRuntimeSsisProperties.withLicenseType"
name: "withLicenseType"
nameWithType: "IntegrationRuntimeSsisProperties.withLicenseType"
members:
- uid: "com.azure.resourcemanager.synapse.models.IntegrationRuntimeSsisProperties.withLicenseType(com.azure.resourcemanager.synapse.models.IntegrationRuntimeLicenseType)"
  fullName: "com.azure.resourcemanager.synapse.models.IntegrationRuntimeSsisProperties.withLicenseType(IntegrationRuntimeLicenseType licenseType)"
  name: "withLicenseType(IntegrationRuntimeLicenseType licenseType)"
  nameWithType: "IntegrationRuntimeSsisProperties.withLicenseType(IntegrationRuntimeLicenseType licenseType)"
  summary: "Set the licenseType property: License type for bringing your own license scenario."
  parameters:
  - description: "the licenseType value to set."
    name: "licenseType"
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.IntegrationRuntimeLicenseType?alt=com.azure.resourcemanager.synapse.models.IntegrationRuntimeLicenseType&text=IntegrationRuntimeLicenseType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IntegrationRuntimeSsisProperties withLicenseType(IntegrationRuntimeLicenseType licenseType)"
  returns:
    description: "the IntegrationRuntimeSsisProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.IntegrationRuntimeSsisProperties?alt=com.azure.resourcemanager.synapse.models.IntegrationRuntimeSsisProperties&text=IntegrationRuntimeSsisProperties\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.synapse.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-synapse:1.0.0-beta.1
