### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository"
fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>"
name: "SimpleCosmosRepository<T,ID>"
nameWithType: "SimpleCosmosRepository<T,ID>"
summary: "Repository class for simple Cosmos operation"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class SimpleCosmosRepository<T,ID> implements CosmosRepository<T,ID>"
constructors:
- "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.SimpleCosmosRepository(com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>,com.azure.spring.data.cosmos.core.CosmosOperations)"
methods:
- "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.<S>save(S)"
- "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.<S>saveAll(java.lang.Iterable<S>)"
- "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.count()"
- "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.delete(T)"
- "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.deleteAll()"
- "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.deleteAll(java.lang.Iterable<? extends T>)"
- "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.deleteById(ID)"
- "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.deleteById(ID,com.azure.cosmos.models.PartitionKey)"
- "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.existsById(ID)"
- "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findAll()"
- "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findAll(com.azure.cosmos.models.PartitionKey)"
- "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findAll(org.springframework.data.domain.Pageable)"
- "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findAll(org.springframework.data.domain.Sort)"
- "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findAllById(java.lang.Iterable<ID>)"
- "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findById(ID)"
- "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findById(ID,com.azure.cosmos.models.PartitionKey)"
type: "class"
typeParameters:
- name: "T"
- name: "ID"
implements:
- "<xref href=\"com.azure.spring.data.cosmos.repository.CosmosRepository?alt=com.azure.spring.data.cosmos.repository.CosmosRepository&text=CosmosRepository\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.support"
artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
