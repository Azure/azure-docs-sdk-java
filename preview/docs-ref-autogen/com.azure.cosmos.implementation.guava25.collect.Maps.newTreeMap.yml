### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Maps.newTreeMap*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Maps.<C,K,V>newTreeMap"
name: "<C,K,V>newTreeMap"
nameWithType: "Maps.<C,K,V>newTreeMap"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Maps.<C,K,V>newTreeMap(java.util.Comparator<C>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Maps.<C,K,V>newTreeMap(Comparator<C> comparator)"
  name: "<C,K,V>newTreeMap(Comparator<C> comparator)"
  nameWithType: "Maps.<C,K,V>newTreeMap(Comparator<C> comparator)"
  summary: "Creates a *mutable*, empty `TreeMap` instance using the given comparator.\n\n**Note:** if mutability is not required, use `ImmutableSortedMap.orderedBy(comparator).build()` instead.\n\n**Note for Java 7 and later:** this method is now unnecessary and should be treated as deprecated. Instead, use the `TreeMap` constructor directly, taking advantage of the new [\"diamond\" syntax][diamond_ syntax].\n\n\n[diamond_ syntax]: http://goo.gl/iz2Wi"
  parameters:
  - description: "the comparator to sort the keys with"
    name: "comparator"
    type: "<xref href=\"java.util.Comparator?alt=java.util.Comparator&text=Comparator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static TreeMap<K,V> <C,K,V>newTreeMap(Comparator<C> comparator)"
  returns:
    description: "a new, empty <code>TreeMap</code>"
    type: "<xref href=\"java.util.TreeMap?alt=java.util.TreeMap&text=TreeMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Maps.<K,V>newTreeMap()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Maps.<K,V>newTreeMap()"
  name: "<K,V>newTreeMap()"
  nameWithType: "Maps.<K,V>newTreeMap()"
  summary: "Creates a *mutable*, empty `TreeMap` instance using the natural ordering of its elements.\n\n**Note:** if mutability is not required, use <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap.&lt;K,V&gt;of()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ImmutableSortedMap#of()\"></xref> instead.\n\n**Note for Java 7 and later:** this method is now unnecessary and should be treated as deprecated. Instead, use the `TreeMap` constructor directly, taking advantage of the new [\"diamond\" syntax][diamond_ syntax].\n\n\n[diamond_ syntax]: http://goo.gl/iz2Wi"
  syntax: "public static TreeMap<K,V> <K,V>newTreeMap()"
  returns:
    description: "a new, empty <code>TreeMap</code>"
    type: "<xref href=\"java.util.TreeMap?alt=java.util.TreeMap&text=TreeMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Maps.<K,V>newTreeMap(java.util.SortedMap<K,? extends V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Maps.<K,V>newTreeMap(SortedMap<K,? extends V> map)"
  name: "<K,V>newTreeMap(SortedMap<K,? extends V> map)"
  nameWithType: "Maps.<K,V>newTreeMap(SortedMap<K,? extends V> map)"
  summary: "Creates a *mutable* `TreeMap` instance with the same mappings as the specified map and using the same ordering as the specified map.\n\n**Note:** if mutability is not required, use <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap.&lt;K,V&gt;copyOfSorted(java.util.SortedMap&lt;K,? extends V&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ImmutableSortedMap#copyOfSorted(SortedMap)\"></xref> instead.\n\n**Note for Java 7 and later:** this method is now unnecessary and should be treated as deprecated. Instead, use the `TreeMap` constructor directly, taking advantage of the new [\"diamond\" syntax][diamond_ syntax].\n\n\n[diamond_ syntax]: http://goo.gl/iz2Wi"
  parameters:
  - description: "the sorted map whose mappings are to be placed in the new map and whose comparator\n     is to be used to sort the new map"
    name: "map"
    type: "<xref href=\"java.util.SortedMap?alt=java.util.SortedMap&text=SortedMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"? extends V?alt=? extends V&text=? extends V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static TreeMap<K,V> <K,V>newTreeMap(SortedMap<K,? extends V> map)"
  returns:
    description: "a new <code>TreeMap</code> initialized with the mappings from <code>map</code> and using the\n     comparator of <code>map</code>"
    type: "<xref href=\"java.util.TreeMap?alt=java.util.TreeMap&text=TreeMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
