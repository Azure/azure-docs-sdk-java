### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer
  id: ExpandableBuffer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.nio
  children:
  - org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ExpandableBuffer(int)
  - org.apache.hc.core5.http.impl.nio.ExpandableBuffer.Mode
  - org.apache.hc.core5.http.impl.nio.ExpandableBuffer.buffer()
  - org.apache.hc.core5.http.impl.nio.ExpandableBuffer.capacity()
  - org.apache.hc.core5.http.impl.nio.ExpandableBuffer.clear()
  - org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ensureAdjustedCapacity(int)
  - org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ensureCapacity(int)
  - org.apache.hc.core5.http.impl.nio.ExpandableBuffer.expand()
  - org.apache.hc.core5.http.impl.nio.ExpandableBuffer.hasData()
  - org.apache.hc.core5.http.impl.nio.ExpandableBuffer.length()
  - org.apache.hc.core5.http.impl.nio.ExpandableBuffer.mode()
  - org.apache.hc.core5.http.impl.nio.ExpandableBuffer.setInputMode()
  - org.apache.hc.core5.http.impl.nio.ExpandableBuffer.setOutputMode()
  - org.apache.hc.core5.http.impl.nio.ExpandableBuffer.toString()
  langs:
  - java
  name: ExpandableBuffer
  nameWithType: ExpandableBuffer
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer
  type: Class
  package: org.apache.hc.core5.http.impl.nio
  summary: >-
    A buffer that expand its capacity on demand. Internally, this class is backed by an instance of <xref uid="java.nio.ByteBuffer" data-throw-if-not-resolved="false">ByteBuffer</xref>.


    This class is not thread safe.
  syntax:
    content: public class ExpandableBuffer
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ExpandableBuffer(int)
  id: ExpandableBuffer(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.nio.ExpandableBuffer
  langs:
  - java
  name: ExpandableBuffer(int bufferSize)
  nameWithType: ExpandableBuffer.ExpandableBuffer(int bufferSize)
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ExpandableBuffer(int bufferSize)
  overload: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ExpandableBuffer*
  type: Constructor
  package: org.apache.hc.core5.http.impl.nio
  summary: >-
    Allocates buffer of the given size using the given allocator.


    Sets the mode to input.
  syntax:
    content: protected ExpandableBuffer(int bufferSize)
    parameters:
    - id: bufferSize
      type: int
      description: the buffer size.
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.buffer()
  id: buffer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.nio.ExpandableBuffer
  langs:
  - java
  name: buffer()
  nameWithType: ExpandableBuffer.buffer()
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.buffer()
  overload: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.buffer*
  type: Method
  package: org.apache.hc.core5.http.impl.nio
  syntax:
    content: protected ByteBuffer buffer()
    return:
      type: java.nio.ByteBuffer
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.capacity()
  id: capacity()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.nio.ExpandableBuffer
  langs:
  - java
  name: capacity()
  nameWithType: ExpandableBuffer.capacity()
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.capacity()
  overload: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.capacity*
  type: Method
  package: org.apache.hc.core5.http.impl.nio
  summary: Returns available capacity of this buffer.
  syntax:
    content: protected int capacity()
    return:
      type: int
      description: buffer length.
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.clear()
  id: clear()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.nio.ExpandableBuffer
  langs:
  - java
  name: clear()
  nameWithType: ExpandableBuffer.clear()
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.clear()
  overload: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.clear*
  type: Method
  package: org.apache.hc.core5.http.impl.nio
  summary: >-
    Clears buffer.


    Sets the mode to input.
  syntax:
    content: protected void clear()
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ensureAdjustedCapacity(int)
  id: ensureAdjustedCapacity(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.nio.ExpandableBuffer
  langs:
  - java
  name: ensureAdjustedCapacity(int requiredCapacity)
  nameWithType: ExpandableBuffer.ensureAdjustedCapacity(int requiredCapacity)
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ensureAdjustedCapacity(int requiredCapacity)
  overload: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ensureAdjustedCapacity*
  type: Method
  package: org.apache.hc.core5.http.impl.nio
  summary: Ensures the buffer can accommodate at least the required capacity adjusted to multiples of 1024.
  syntax:
    content: protected void ensureAdjustedCapacity(int requiredCapacity)
    parameters:
    - id: requiredCapacity
      type: int
      description: the required capacity.
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ensureCapacity(int)
  id: ensureCapacity(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.nio.ExpandableBuffer
  langs:
  - java
  name: ensureCapacity(int requiredCapacity)
  nameWithType: ExpandableBuffer.ensureCapacity(int requiredCapacity)
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ensureCapacity(int requiredCapacity)
  overload: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ensureCapacity*
  type: Method
  package: org.apache.hc.core5.http.impl.nio
  summary: Ensures the buffer can accommodate the exact required capacity.
  syntax:
    content: protected void ensureCapacity(int requiredCapacity)
    parameters:
    - id: requiredCapacity
      type: int
      description: the required capacity.
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.expand()
  id: expand()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.nio.ExpandableBuffer
  langs:
  - java
  name: expand()
  nameWithType: ExpandableBuffer.expand()
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.expand()
  overload: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.expand*
  type: Method
  package: org.apache.hc.core5.http.impl.nio
  summary: Expands buffer's capacity.
  syntax:
    content: protected void expand()
  exceptions:
  - type: java.nio.BufferOverflowException
    description: in case we get over the maximum allowed value
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.hasData()
  id: hasData()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.nio.ExpandableBuffer
  langs:
  - java
  name: hasData()
  nameWithType: ExpandableBuffer.hasData()
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.hasData()
  overload: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.hasData*
  type: Method
  package: org.apache.hc.core5.http.impl.nio
  summary: >-
    Determines if the buffer contains data.


    Sets the mode to output.
  syntax:
    content: protected boolean hasData()
    return:
      type: boolean
      description: >-
        <code>true</code> if there is data in the buffer,
           <code>false</code> otherwise.
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.length()
  id: length()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.nio.ExpandableBuffer
  langs:
  - java
  name: length()
  nameWithType: ExpandableBuffer.length()
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.length()
  overload: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.length*
  type: Method
  package: org.apache.hc.core5.http.impl.nio
  summary: >-
    Returns the length of this buffer.


    Sets the mode to output.
  syntax:
    content: protected int length()
    return:
      type: int
      description: buffer length.
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.mode()
  id: mode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.nio.ExpandableBuffer
  langs:
  - java
  name: mode()
  nameWithType: ExpandableBuffer.mode()
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.mode()
  overload: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.mode*
  type: Method
  package: org.apache.hc.core5.http.impl.nio
  summary: >-
    Returns the current mode:


    <xref uid="" data-throw-if-not-resolved="false">Mode#INPUT</xref>: the buffer is in the input mode.


    <xref uid="" data-throw-if-not-resolved="false">Mode#OUTPUT</xref>: the buffer is in the output mode.
  syntax:
    content: protected ExpandableBuffer.Mode mode()
    return:
      type: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.Mode
      description: current input/output mode.
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.setInputMode()
  id: setInputMode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.nio.ExpandableBuffer
  langs:
  - java
  name: setInputMode()
  nameWithType: ExpandableBuffer.setInputMode()
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.setInputMode()
  overload: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.setInputMode*
  type: Method
  package: org.apache.hc.core5.http.impl.nio
  summary: Sets the mode to input. The buffer can now be written into.
  syntax:
    content: protected void setInputMode()
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.setOutputMode()
  id: setOutputMode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.nio.ExpandableBuffer
  langs:
  - java
  name: setOutputMode()
  nameWithType: ExpandableBuffer.setOutputMode()
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.setOutputMode()
  overload: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.setOutputMode*
  type: Method
  package: org.apache.hc.core5.http.impl.nio
  summary: Sets the mode to output. The buffer can now be read from.
  syntax:
    content: protected void setOutputMode()
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.impl.nio.ExpandableBuffer
  langs:
  - java
  name: toString()
  nameWithType: ExpandableBuffer.toString()
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.toString()
  overload: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.toString*
  type: Method
  package: org.apache.hc.core5.http.impl.nio
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
references:
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ExpandableBuffer*
  name: ExpandableBuffer
  nameWithType: ExpandableBuffer.ExpandableBuffer
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ExpandableBuffer
  package: org.apache.hc.core5.http.impl.nio
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.Mode
  name: ExpandableBuffer.Mode
  nameWithType: ExpandableBuffer.Mode
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.Mode
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.mode*
  name: mode
  nameWithType: ExpandableBuffer.mode
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.mode
  package: org.apache.hc.core5.http.impl.nio
- uid: java.nio.ByteBuffer
  spec.java:
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.buffer*
  name: buffer
  nameWithType: ExpandableBuffer.buffer
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.buffer
  package: org.apache.hc.core5.http.impl.nio
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.setOutputMode*
  name: setOutputMode
  nameWithType: ExpandableBuffer.setOutputMode
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.setOutputMode
  package: org.apache.hc.core5.http.impl.nio
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.setInputMode*
  name: setInputMode
  nameWithType: ExpandableBuffer.setInputMode
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.setInputMode
  package: org.apache.hc.core5.http.impl.nio
- uid: java.nio.BufferOverflowException
  spec.java:
  - uid: java.nio.BufferOverflowException
    name: BufferOverflowException
    fullName: java.nio.BufferOverflowException
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.expand*
  name: expand
  nameWithType: ExpandableBuffer.expand
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.expand
  package: org.apache.hc.core5.http.impl.nio
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ensureCapacity*
  name: ensureCapacity
  nameWithType: ExpandableBuffer.ensureCapacity
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ensureCapacity
  package: org.apache.hc.core5.http.impl.nio
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ensureAdjustedCapacity*
  name: ensureAdjustedCapacity
  nameWithType: ExpandableBuffer.ensureAdjustedCapacity
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.ensureAdjustedCapacity
  package: org.apache.hc.core5.http.impl.nio
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.hasData*
  name: hasData
  nameWithType: ExpandableBuffer.hasData
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.hasData
  package: org.apache.hc.core5.http.impl.nio
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.length*
  name: length
  nameWithType: ExpandableBuffer.length
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.length
  package: org.apache.hc.core5.http.impl.nio
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.capacity*
  name: capacity
  nameWithType: ExpandableBuffer.capacity
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.capacity
  package: org.apache.hc.core5.http.impl.nio
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.clear*
  name: clear
  nameWithType: ExpandableBuffer.clear
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.clear
  package: org.apache.hc.core5.http.impl.nio
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.toString*
  name: toString
  nameWithType: ExpandableBuffer.toString
  fullName: org.apache.hc.core5.http.impl.nio.ExpandableBuffer.toString
  package: org.apache.hc.core5.http.impl.nio
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
