### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeServiceAsyncClient.getFileSystemAsyncClient*"
fullName: "com.azure.storage.file.datalake.DataLakeServiceAsyncClient.getFileSystemAsyncClient"
name: "getFileSystemAsyncClient"
nameWithType: "DataLakeServiceAsyncClient.getFileSystemAsyncClient"
members:
- uid: "com.azure.storage.file.datalake.DataLakeServiceAsyncClient.getFileSystemAsyncClient(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.DataLakeServiceAsyncClient.getFileSystemAsyncClient(String fileSystemName)"
  name: "getFileSystemAsyncClient(String fileSystemName)"
  nameWithType: "DataLakeServiceAsyncClient.getFileSystemAsyncClient(String fileSystemName)"
  summary: "Initializes a <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeFileSystemAsyncClient\"></xref> object pointing to the specified file system. This method does not create a file system. It simply constructs the URL to the file system and offers access to methods relevant to file systems.\n\n**Code Samples**\n\n```java\nDataLakeFileSystemAsyncClient dataLakeFileSystemAsyncClient = client.getFileSystemAsyncClient(\"fileSystemName\");\n```"
  parameters:
  - description: "The name of the file system to point to. A value of null or empty string will be\n interpreted as pointing to the root file system and will be replaced by \"$root\"."
    name: "fileSystemName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeFileSystemAsyncClient getFileSystemAsyncClient(String fileSystemName)"
  returns:
    description: "A <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeFileSystemAsyncClient\"></xref> object pointing to the specified file system"
    type: "<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient?alt=com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient&text=DataLakeFileSystemAsyncClient\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.3.0-beta.1
