### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.cfg.MapperConfig.getDateFormat*"
fullName: "com.fasterxml.jackson.databind.cfg.MapperConfig<T>.getDateFormat"
name: "getDateFormat"
nameWithType: "MapperConfig<T>.getDateFormat"
members:
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfig.getDateFormat()"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfig<T>.getDateFormat()"
  name: "getDateFormat()"
  nameWithType: "MapperConfig<T>.getDateFormat()"
  summary: "Method for accessing currently configured (textual) date format that will be used for reading or writing date values (in case of writing, only if textual output is configured; not if dates are to be serialized as time stamps).\n\nNote that typically <xref uid=\"java.text.DateFormat\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DateFormat\"></xref> instances are **not thread-safe** (at least ones provided by JDK): this means that calling code should clone format instance before using it.\n\nThis method is usually only called by framework itself, since there are convenience methods available via <xref uid=\"com.fasterxml.jackson.databind.DeserializationContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeserializationContext\"></xref> and <xref uid=\"com.fasterxml.jackson.databind.SerializerProvider\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SerializerProvider\"></xref> that take care of cloning and thread-safe reuse."
  syntax: "public final DateFormat getDateFormat()"
  returns:
    type: "<xref href=\"java.text.DateFormat?alt=java.text.DateFormat&text=DateFormat\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.cfg"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
