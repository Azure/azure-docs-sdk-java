### YamlMime:JavaMember
uid: "com.azure.resourcemanager.videoanalyzer.models.VideoFlags.withIsRecording*"
fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoFlags.withIsRecording"
name: "withIsRecording"
nameWithType: "VideoFlags.withIsRecording"
members:
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoFlags.withIsRecording(boolean)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoFlags.withIsRecording(boolean isRecording)"
  name: "withIsRecording(boolean isRecording)"
  nameWithType: "VideoFlags.withIsRecording(boolean isRecording)"
  summary: "Set the isRecording property: Value indicating whether or not the video is currently being referenced be an active live pipeline. The fact that is being referenced, doesn't necessarily indicate that data is being received. For example, video recording may be gated on events or camera may not be accessible at the time."
  parameters:
  - description: "the isRecording value to set."
    name: "isRecording"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoFlags withIsRecording(boolean isRecording)"
  returns:
    description: "the VideoFlags object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoFlags?alt=com.azure.resourcemanager.videoanalyzer.models.VideoFlags&text=VideoFlags\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.videoanalyzer.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-videoanalyzer:1.0.0-beta.1
