### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.AnnotationIntrospector._hasAnnotation*"
fullName: "com.fasterxml.jackson.databind.AnnotationIntrospector._hasAnnotation"
name: "_hasAnnotation"
nameWithType: "AnnotationIntrospector._hasAnnotation"
members:
- uid: "com.fasterxml.jackson.databind.AnnotationIntrospector._hasAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<? extends java.lang.annotation.Annotation>)"
  fullName: "com.fasterxml.jackson.databind.AnnotationIntrospector._hasAnnotation(Annotated annotated, Class<? extends Annotation> annoClass)"
  name: "_hasAnnotation(Annotated annotated, Class<? extends Annotation> annoClass)"
  nameWithType: "AnnotationIntrospector._hasAnnotation(Annotated annotated, Class<? extends Annotation> annoClass)"
  summary: "Method that should be used by sub-classes for ALL annotation existence access; overridable so that sub-classes may, if they choose to, mangle actual access to block access (\"hide\" annotations) or perhaps change value seen.\n\nDefault implementation is simply: `return annotated.hasAnnotation(annoClass);`"
  parameters:
  - name: "annotated"
    type: "<xref href=\"com.fasterxml.jackson.databind.introspect.Annotated?alt=com.fasterxml.jackson.databind.introspect.Annotated&text=Annotated\" data-throw-if-not-resolved=\"False\" />"
  - name: "annoClass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends java.lang.annotation.Annotation?alt=? extends java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "protected boolean _hasAnnotation(Annotated annotated, Class<? extends Annotation> annoClass)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
