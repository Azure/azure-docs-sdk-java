### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap.values*"
fullName: "com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap<K,V>.values"
name: "values"
nameWithType: "LinkedListMultimap<K,V>.values"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap.values()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap<K,V>.values()"
  name: "values()"
  nameWithType: "LinkedListMultimap<K,V>.values()"
  summary: "Returns a view collection containing the *value* from each key-value pair contained in this multimap, without collapsing duplicates (so `values().size() == size()`).\n\nChanges to the returned collection will update the underlying multimap, and vice versa. However, *adding* to the returned collection is not possible.\n\nThe iterator generated by the returned collection traverses the values in the order they were added to the multimap. Because the values may have duplicates and follow the insertion ordering, this method returns a <xref uid=\"java.util.List\" data-throw-if-not-resolved=\"false\" data-raw-source=\"List\"></xref>, instead of the <xref uid=\"java.util.Collection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Collection\"></xref> specified in the <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ListMultimap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ListMultimap\"></xref> interface."
  overridden: "com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.values()"
  syntax: "public List<V> values()"
  returns:
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
