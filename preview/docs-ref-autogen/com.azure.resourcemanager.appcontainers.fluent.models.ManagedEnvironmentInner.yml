### YamlMime:JavaType
uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner"
fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner"
name: "ManagedEnvironmentInner"
nameWithType: "ManagedEnvironmentInner"
summary: "An environment for hosting container apps."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ManagedEnvironmentInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.ManagedEnvironmentInner()"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.ManagedEnvironmentInner()"
  name: "ManagedEnvironmentInner()"
  nameWithType: "ManagedEnvironmentInner.ManagedEnvironmentInner()"
  syntax: "public ManagedEnvironmentInner()"
methods:
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.appLogsConfiguration()"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.appLogsConfiguration()"
  name: "appLogsConfiguration()"
  nameWithType: "ManagedEnvironmentInner.appLogsConfiguration()"
  summary: "Get the app<wbr>Logs<wbr>Configuration property: Cluster configuration which enables the log daemon to export app logs to a destination."
  syntax: "public AppLogsConfiguration appLogsConfiguration()"
  desc: "Get the appLogsConfiguration property: Cluster configuration which enables the log daemon to export app logs to a destination. Currently only \"log-analytics\" is supported."
  returns:
    description: "the appLogsConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.AppLogsConfiguration?alt=com.azure.resourcemanager.appcontainers.models.AppLogsConfiguration&text=AppLogsConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.daprAIConnectionString()"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.daprAIConnectionString()"
  name: "daprAIConnectionString()"
  nameWithType: "ManagedEnvironmentInner.daprAIConnectionString()"
  summary: "Get the dapr<wbr>AIConnection<wbr>String property: Application Insights connection string used by Dapr to export Service to Service communication telemetry."
  syntax: "public String daprAIConnectionString()"
  desc: "Get the daprAIConnectionString property: Application Insights connection string used by Dapr to export Service to Service communication telemetry."
  returns:
    description: "the daprAIConnectionString value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.daprAIInstrumentationKey()"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.daprAIInstrumentationKey()"
  name: "daprAIInstrumentationKey()"
  nameWithType: "ManagedEnvironmentInner.daprAIInstrumentationKey()"
  summary: "Get the dapr<wbr>AIInstrumentation<wbr>Key property: Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry."
  syntax: "public String daprAIInstrumentationKey()"
  desc: "Get the daprAIInstrumentationKey property: Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry."
  returns:
    description: "the daprAIInstrumentationKey value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.defaultDomain()"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.defaultDomain()"
  name: "defaultDomain()"
  nameWithType: "ManagedEnvironmentInner.defaultDomain()"
  summary: "Get the default<wbr>Domain property: Default Domain Name for the cluster."
  syntax: "public String defaultDomain()"
  desc: "Get the defaultDomain property: Default Domain Name for the cluster."
  returns:
    description: "the defaultDomain value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.deploymentErrors()"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.deploymentErrors()"
  name: "deploymentErrors()"
  nameWithType: "ManagedEnvironmentInner.deploymentErrors()"
  summary: "Get the deployment<wbr>Errors property: Any errors that occurred during deployment or deployment validation."
  syntax: "public String deploymentErrors()"
  desc: "Get the deploymentErrors property: Any errors that occurred during deployment or deployment validation."
  returns:
    description: "the deploymentErrors value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.provisioningState()"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "ManagedEnvironmentInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Provisioning state of the Environment."
  syntax: "public EnvironmentProvisioningState provisioningState()"
  desc: "Get the provisioningState property: Provisioning state of the Environment."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.EnvironmentProvisioningState?alt=com.azure.resourcemanager.appcontainers.models.EnvironmentProvisioningState&text=EnvironmentProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.staticIp()"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.staticIp()"
  name: "staticIp()"
  nameWithType: "ManagedEnvironmentInner.staticIp()"
  summary: "Get the static<wbr>Ip property: Static IP of the Environment."
  syntax: "public String staticIp()"
  desc: "Get the staticIp property: Static IP of the Environment."
  returns:
    description: "the staticIp value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.systemData()"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.systemData()"
  name: "systemData()"
  nameWithType: "ManagedEnvironmentInner.systemData()"
  summary: "Get the system<wbr>Data property: Azure Resource Manager metadata containing created<wbr>By and modified<wbr>By information."
  syntax: "public SystemData systemData()"
  desc: "Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.validate()"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.validate()"
  name: "validate()"
  nameWithType: "ManagedEnvironmentInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.vnetConfiguration()"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.vnetConfiguration()"
  name: "vnetConfiguration()"
  nameWithType: "ManagedEnvironmentInner.vnetConfiguration()"
  summary: "Get the vnet<wbr>Configuration property: Vnet configuration for the environment."
  syntax: "public VnetConfiguration vnetConfiguration()"
  desc: "Get the vnetConfiguration property: Vnet configuration for the environment."
  returns:
    description: "the vnetConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.VnetConfiguration?alt=com.azure.resourcemanager.appcontainers.models.VnetConfiguration&text=VnetConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.withAppLogsConfiguration(com.azure.resourcemanager.appcontainers.models.AppLogsConfiguration)"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.withAppLogsConfiguration(AppLogsConfiguration appLogsConfiguration)"
  name: "withAppLogsConfiguration(AppLogsConfiguration appLogsConfiguration)"
  nameWithType: "ManagedEnvironmentInner.withAppLogsConfiguration(AppLogsConfiguration appLogsConfiguration)"
  summary: "Set the app<wbr>Logs<wbr>Configuration property: Cluster configuration which enables the log daemon to export app logs to a destination."
  parameters:
  - description: "the appLogsConfiguration value to set."
    name: "appLogsConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.AppLogsConfiguration?alt=com.azure.resourcemanager.appcontainers.models.AppLogsConfiguration&text=AppLogsConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedEnvironmentInner withAppLogsConfiguration(AppLogsConfiguration appLogsConfiguration)"
  desc: "Set the appLogsConfiguration property: Cluster configuration which enables the log daemon to export app logs to a destination. Currently only \"log-analytics\" is supported."
  returns:
    description: "the ManagedEnvironmentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner?alt=com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner&text=ManagedEnvironmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.withDaprAIConnectionString(java.lang.String)"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.withDaprAIConnectionString(String daprAIConnectionString)"
  name: "withDaprAIConnectionString(String daprAIConnectionString)"
  nameWithType: "ManagedEnvironmentInner.withDaprAIConnectionString(String daprAIConnectionString)"
  summary: "Set the dapr<wbr>AIConnection<wbr>String property: Application Insights connection string used by Dapr to export Service to Service communication telemetry."
  parameters:
  - description: "the daprAIConnectionString value to set."
    name: "daprAIConnectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedEnvironmentInner withDaprAIConnectionString(String daprAIConnectionString)"
  desc: "Set the daprAIConnectionString property: Application Insights connection string used by Dapr to export Service to Service communication telemetry."
  returns:
    description: "the ManagedEnvironmentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner?alt=com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner&text=ManagedEnvironmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.withDaprAIInstrumentationKey(java.lang.String)"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.withDaprAIInstrumentationKey(String daprAIInstrumentationKey)"
  name: "withDaprAIInstrumentationKey(String daprAIInstrumentationKey)"
  nameWithType: "ManagedEnvironmentInner.withDaprAIInstrumentationKey(String daprAIInstrumentationKey)"
  summary: "Set the dapr<wbr>AIInstrumentation<wbr>Key property: Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry."
  parameters:
  - description: "the daprAIInstrumentationKey value to set."
    name: "daprAIInstrumentationKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedEnvironmentInner withDaprAIInstrumentationKey(String daprAIInstrumentationKey)"
  desc: "Set the daprAIInstrumentationKey property: Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry."
  returns:
    description: "the ManagedEnvironmentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner?alt=com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner&text=ManagedEnvironmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "ManagedEnvironmentInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedEnvironmentInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner?alt=com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner&text=ManagedEnvironmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "ManagedEnvironmentInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ManagedEnvironmentInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner?alt=com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner&text=ManagedEnvironmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.withVnetConfiguration(com.azure.resourcemanager.appcontainers.models.VnetConfiguration)"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.withVnetConfiguration(VnetConfiguration vnetConfiguration)"
  name: "withVnetConfiguration(VnetConfiguration vnetConfiguration)"
  nameWithType: "ManagedEnvironmentInner.withVnetConfiguration(VnetConfiguration vnetConfiguration)"
  summary: "Set the vnet<wbr>Configuration property: Vnet configuration for the environment."
  parameters:
  - description: "the vnetConfiguration value to set."
    name: "vnetConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.VnetConfiguration?alt=com.azure.resourcemanager.appcontainers.models.VnetConfiguration&text=VnetConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedEnvironmentInner withVnetConfiguration(VnetConfiguration vnetConfiguration)"
  desc: "Set the vnetConfiguration property: Vnet configuration for the environment."
  returns:
    description: "the ManagedEnvironmentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner?alt=com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner&text=ManagedEnvironmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.withZoneRedundant(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.withZoneRedundant(Boolean zoneRedundant)"
  name: "withZoneRedundant(Boolean zoneRedundant)"
  nameWithType: "ManagedEnvironmentInner.withZoneRedundant(Boolean zoneRedundant)"
  summary: "Set the zone<wbr>Redundant property: Whether or not this Managed Environment is zone-redundant."
  parameters:
  - description: "the zoneRedundant value to set."
    name: "zoneRedundant"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedEnvironmentInner withZoneRedundant(Boolean zoneRedundant)"
  desc: "Set the zoneRedundant property: Whether or not this Managed Environment is zone-redundant."
  returns:
    description: "the ManagedEnvironmentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner?alt=com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner&text=ManagedEnvironmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.zoneRedundant()"
  fullName: "com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentInner.zoneRedundant()"
  name: "zoneRedundant()"
  nameWithType: "ManagedEnvironmentInner.zoneRedundant()"
  summary: "Get the zone<wbr>Redundant property: Whether or not this Managed Environment is zone-redundant."
  syntax: "public Boolean zoneRedundant()"
  desc: "Get the zoneRedundant property: Whether or not this Managed Environment is zone-redundant."
  returns:
    description: "the zoneRedundant value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "An environment for hosting container apps."
metadata: {}
package: "com.azure.resourcemanager.appcontainers.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appcontainers:1.0.0-beta.3
