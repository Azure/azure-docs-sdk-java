### YamlMime:JavaMember
uid: "com.azure.security.keyvault.secrets.SecretAsyncClient.listPropertiesOfSecrets*"
fullName: "com.azure.security.keyvault.secrets.SecretAsyncClient.listPropertiesOfSecrets"
name: "listPropertiesOfSecrets"
nameWithType: "SecretAsyncClient.listPropertiesOfSecrets"
members:
- uid: "com.azure.security.keyvault.secrets.SecretAsyncClient.listPropertiesOfSecrets()"
  fullName: "com.azure.security.keyvault.secrets.SecretAsyncClient.listPropertiesOfSecrets()"
  name: "listPropertiesOfSecrets()"
  nameWithType: "SecretAsyncClient.listPropertiesOfSecrets()"
  summary: "Lists secrets in the key vault. Each <xref uid=\"com.azure.security.keyvault.secrets.models.SecretProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"secret\"></xref> returned only has its identifier and attributes populated. The secret values and their versions are not listed in the response. This operation requires the `secrets/list` permission.\n\n**Code sample**\n\nThe sample below fetches the all the secret properties in the vault. For each secret retrieved, makes a call to <xref uid=\"com.azure.security.keyvault.secrets.SecretAsyncClient.getSecret(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getSecret(String, String)\"></xref> to get its value, and then prints it out.\n\n```java\nsecretAsyncClient.listPropertiesOfSecrets()\n     .flatMap(secretProperties -> {\n         String name = secretProperties.getName();\n         String version = secretProperties.getVersion();\n \n         System.out.printf(\"Getting secret name: '%s', version: %s%n\", name, version);\n         return secretAsyncClient.getSecret(name, version);\n     })\n     .subscribe(secretResponse -> System.out.printf(\"Received secret with name %s and type %s\",\n         secretResponse.getName(), secretResponse.getValue()));\n```"
  syntax: "public PagedFlux<SecretProperties> listPropertiesOfSecrets()"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> containing <xref uid=\"com.azure.security.keyvault.secrets.models.SecretProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"properties\"></xref> of all the secrets in the vault."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.secrets.models.SecretProperties?alt=com.azure.security.keyvault.secrets.models.SecretProperties&text=SecretProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.secrets"
artifact: com.azure:azure-security-keyvault-secrets:4.3.0-beta.2
