### YamlMime:JavaMember
uid: "com.azure.core.implementation.RetriableDownloadFlux.RetriableDownloadFlux*"
fullName: "com.azure.core.implementation.RetriableDownloadFlux.RetriableDownloadFlux"
name: "RetriableDownloadFlux"
nameWithType: "RetriableDownloadFlux.RetriableDownloadFlux"
members:
- uid: "com.azure.core.implementation.RetriableDownloadFlux.RetriableDownloadFlux(java.util.function.Supplier<reactor.core.publisher.Flux<java.nio.ByteBuffer>>,java.util.function.BiFunction<java.lang.Throwable,java.lang.Long,reactor.core.publisher.Flux<java.nio.ByteBuffer>>,int,long)"
  fullName: "com.azure.core.implementation.RetriableDownloadFlux.RetriableDownloadFlux(Supplier<Flux<ByteBuffer>> downloadSupplier, BiFunction<Throwable,Long,Flux<ByteBuffer>> onDownloadErrorResume, int maxRetries, long position)"
  name: "RetriableDownloadFlux(Supplier<Flux<ByteBuffer>> downloadSupplier, BiFunction<Throwable,Long,Flux<ByteBuffer>> onDownloadErrorResume, int maxRetries, long position)"
  nameWithType: "RetriableDownloadFlux.RetriableDownloadFlux(Supplier<Flux<ByteBuffer>> downloadSupplier, BiFunction<Throwable,Long,Flux<ByteBuffer>> onDownloadErrorResume, int maxRetries, long position)"
  summary: "Creates a RetriableDownloadFlux."
  parameters:
  - description: "Supplier of the initial download."
    name: "downloadSupplier"
    type: "<xref href=\"java.util.function.Supplier?alt=java.util.function.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "<xref uid=\"java.util.function.BiFunction\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BiFunction\"></xref> of <xref uid=\"java.lang.Throwable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Throwable\"></xref> and <xref uid=\"java.lang.Long\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Long\"></xref> which is used to resume\n downloading when an error occurs."
    name: "onDownloadErrorResume"
    type: "<xref href=\"java.util.function.BiFunction?alt=java.util.function.BiFunction&text=BiFunction\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />,<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "The maximum number of times a download can be resumed when an error occurs."
    name: "maxRetries"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The initial offset for the download."
    name: "position"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RetriableDownloadFlux(Supplier<Flux<ByteBuffer>> downloadSupplier, BiFunction<Throwable,Long,Flux<ByteBuffer>> onDownloadErrorResume, int maxRetries, long position)"
type: "constructor"
metadata: {}
package: "com.azure.core.implementation"
artifact: com.azure:azure-core:1.22.0-beta.1
