### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Range.encloseAll*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Range<C>.<C>encloseAll"
name: "<C>encloseAll"
nameWithType: "Range<C>.<C>encloseAll"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Range.<C>encloseAll(java.lang.Iterable<C>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Range<C>.<C>encloseAll(Iterable<C> values)"
  name: "<C>encloseAll(Iterable<C> values)"
  nameWithType: "Range<C>.<C>encloseAll(Iterable<C> values)"
  summary: "Returns the minimal range that <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Range.contains*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"contains\"></xref> all of the given values. The returned range is <xref uid=\"com.azure.cosmos.implementation.guava25.collect.BoundType.CLOSED\" data-throw-if-not-resolved=\"false\" data-raw-source=\"closed\"></xref> on both ends."
  parameters:
  - name: "values"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Range<C> <C>encloseAll(Iterable<C> values)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Range?alt=com.azure.cosmos.implementation.guava25.collect.Range&text=Range\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
