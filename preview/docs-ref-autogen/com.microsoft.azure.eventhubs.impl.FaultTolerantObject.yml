### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventhubs.impl.FaultTolerantObject
  id: FaultTolerantObject
  parent: com.microsoft.azure.eventhubs.impl
  children:
  - com.microsoft.azure.eventhubs.impl.FaultTolerantObject.close(final ReactorDispatcher,final OperationResult<Void, Exception>)
  - com.microsoft.azure.eventhubs.impl.FaultTolerantObject.FaultTolerantObject(final Operation<T>,final Operation<Void>)
  - com.microsoft.azure.eventhubs.impl.FaultTolerantObject.runOnOpenedObject(final ReactorDispatcher,final OperationResult<T, Exception>)
  href: com.microsoft.azure.eventhubs.impl.FaultTolerantObject.yml
  langs:
  - java
  name: FaultTolerantObject<T>
  nameWithType: FaultTolerantObject<T>
  fullName: com.microsoft.azure.eventhubs.impl.FaultTolerantObject<T>
  type: Class
  source:
    remote: &o0
      path: sdk/eventhubs/microsoft-azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/FaultTolerantObject.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/FaultTolerantObject.java
    startLine: 9
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public class FaultTolerantObject<T extends IOObject>
    typeParameters:
    - id: T
      type: 8ce1ecb9
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.eventhubs.impl.FaultTolerantObject.close(final ReactorDispatcher,final OperationResult<Void, Exception>)
  id: close(final ReactorDispatcher,final OperationResult<Void, Exception>)
  parent: com.microsoft.azure.eventhubs.impl.FaultTolerantObject
  href: com.microsoft.azure.eventhubs.impl.FaultTolerantObject.yml
  langs:
  - java
  name: close(final ReactorDispatcher dispatcher, final OperationResult<Void, Exception> closeCallback)
  nameWithType: FaultTolerantObject<T>.close(final ReactorDispatcher dispatcher, final OperationResult<Void, Exception> closeCallback)
  fullName: com.microsoft.azure.eventhubs.impl.FaultTolerantObject<T extends IOObject>.close(final ReactorDispatcher dispatcher, final OperationResult<Void, Exception> closeCallback)
  overload: com.microsoft.azure.eventhubs.impl.FaultTolerantObject.close*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/FaultTolerantObject.java
    startLine: 89
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public void close(final ReactorDispatcher dispatcher, final OperationResult<Void, Exception> closeCallback)
    parameters:
    - id: dispatcher
      type: 93de0ef9com.microsoft.azure.eventhubs.impl.ReactorDispatcher
    - id: closeCallback
      type: 93de0ef9com.microsoft.azure.eventhubs.impl.OperationResult372b00f0
- uid: com.microsoft.azure.eventhubs.impl.FaultTolerantObject.FaultTolerantObject(final Operation<T>,final Operation<Void>)
  id: FaultTolerantObject(final Operation<T>,final Operation<Void>)
  parent: com.microsoft.azure.eventhubs.impl.FaultTolerantObject
  href: com.microsoft.azure.eventhubs.impl.FaultTolerantObject.yml
  langs:
  - java
  name: FaultTolerantObject(final Operation<T> openAsync, final Operation<Void> closeAsync)
  nameWithType: FaultTolerantObject<T>.FaultTolerantObject(final Operation<T> openAsync, final Operation<Void> closeAsync)
  fullName: com.microsoft.azure.eventhubs.impl.FaultTolerantObject<T extends IOObject>.FaultTolerantObject(final Operation<T> openAsync, final Operation<Void> closeAsync)
  overload: com.microsoft.azure.eventhubs.impl.FaultTolerantObject.FaultTolerantObject*
  type: Constructor
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/FaultTolerantObject.java
    startLine: 20
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public FaultTolerantObject(final Operation<T> openAsync, final Operation<Void> closeAsync)
    parameters:
    - id: openAsync
      type: 93de0ef9com.microsoft.azure.eventhubs.impl.Operation669339f7
    - id: closeAsync
      type: 93de0ef9com.microsoft.azure.eventhubs.impl.Operation88a69386
- uid: com.microsoft.azure.eventhubs.impl.FaultTolerantObject.runOnOpenedObject(final ReactorDispatcher,final OperationResult<T, Exception>)
  id: runOnOpenedObject(final ReactorDispatcher,final OperationResult<T, Exception>)
  parent: com.microsoft.azure.eventhubs.impl.FaultTolerantObject
  href: com.microsoft.azure.eventhubs.impl.FaultTolerantObject.yml
  langs:
  - java
  name: runOnOpenedObject(final ReactorDispatcher dispatcher, final OperationResult<T, Exception> openCallback)
  nameWithType: FaultTolerantObject<T>.runOnOpenedObject(final ReactorDispatcher dispatcher, final OperationResult<T, Exception> openCallback)
  fullName: com.microsoft.azure.eventhubs.impl.FaultTolerantObject<T extends IOObject>.runOnOpenedObject(final ReactorDispatcher dispatcher, final OperationResult<T, Exception> openCallback)
  overload: com.microsoft.azure.eventhubs.impl.FaultTolerantObject.runOnOpenedObject*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/microsoft-azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/FaultTolerantObject.java
    startLine: 39
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public void runOnOpenedObject(final ReactorDispatcher dispatcher, final OperationResult<T, Exception> openCallback)
    parameters:
    - id: dispatcher
      type: 93de0ef9com.microsoft.azure.eventhubs.impl.ReactorDispatcher
    - id: openCallback
      type: 93de0ef9com.microsoft.azure.eventhubs.impl.OperationResult4ee51867
references:
- uid: 8ce1ecb9
  spec.java:
  - name: T
    fullName: T
- uid: 93de0ef9com.microsoft.azure.eventhubs.impl.Operation669339f7
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.eventhubs.impl.Operation
    name: Operation
    fullName: com.microsoft.azure.eventhubs.impl.Operation
    href: com.microsoft.azure.eventhubs.impl.Operation.yml
  - name: <T>
    fullName: <T>
- uid: 93de0ef9com.microsoft.azure.eventhubs.impl.Operation88a69386
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.eventhubs.impl.Operation
    name: Operation
    fullName: com.microsoft.azure.eventhubs.impl.Operation
    href: com.microsoft.azure.eventhubs.impl.Operation.yml
  - name: <Void>
    fullName: <Void>
- uid: com.microsoft.azure.eventhubs.impl.FaultTolerantObject.FaultTolerantObject*
  name: FaultTolerantObject
  nameWithType: FaultTolerantObject<T>.FaultTolerantObject
  fullName: com.microsoft.azure.eventhubs.impl.FaultTolerantObject<T extends IOObject>.FaultTolerantObject
  package: com.microsoft.azure.eventhubs.impl
- uid: 93de0ef9com.microsoft.azure.eventhubs.impl.ReactorDispatcher
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.eventhubs.impl.ReactorDispatcher
    name: ReactorDispatcher
    fullName: com.microsoft.azure.eventhubs.impl.ReactorDispatcher
    href: com.microsoft.azure.eventhubs.impl.ReactorDispatcher.yml
- uid: 93de0ef9com.microsoft.azure.eventhubs.impl.OperationResult4ee51867
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.eventhubs.impl.OperationResult
    name: OperationResult
    fullName: com.microsoft.azure.eventhubs.impl.OperationResult
    href: com.microsoft.azure.eventhubs.impl.OperationResult.yml
  - name: <T, Exception>
    fullName: <T, Exception>
- uid: com.microsoft.azure.eventhubs.impl.FaultTolerantObject.runOnOpenedObject*
  name: runOnOpenedObject
  nameWithType: FaultTolerantObject<T>.runOnOpenedObject
  fullName: com.microsoft.azure.eventhubs.impl.FaultTolerantObject<T extends IOObject>.runOnOpenedObject
  package: com.microsoft.azure.eventhubs.impl
- uid: 93de0ef9com.microsoft.azure.eventhubs.impl.OperationResult372b00f0
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.eventhubs.impl.OperationResult
    name: OperationResult
    fullName: com.microsoft.azure.eventhubs.impl.OperationResult
    href: com.microsoft.azure.eventhubs.impl.OperationResult.yml
  - name: <Void, Exception>
    fullName: <Void, Exception>
- uid: com.microsoft.azure.eventhubs.impl.FaultTolerantObject.close*
  name: close
  nameWithType: FaultTolerantObject<T>.close
  fullName: com.microsoft.azure.eventhubs.impl.FaultTolerantObject<T extends IOObject>.close
  package: com.microsoft.azure.eventhubs.impl
- uid: com.microsoft.azure.eventhubs.impl.IOObject
  parent: com.microsoft.azure.eventhubs.impl
  href: com.microsoft.azure.eventhubs.impl.IOObject.yml
  name: IOObject
  nameWithType: IOObject
  fullName: com.microsoft.azure.eventhubs.impl.IOObject
  type: Interface
  syntax:
    content: public interface IOObject
- uid: com.microsoft.azure.eventhubs.impl.Operation
  parent: com.microsoft.azure.eventhubs.impl
  href: com.microsoft.azure.eventhubs.impl.Operation.yml
  name: Operation<T>
  nameWithType: Operation<T>
  fullName: com.microsoft.azure.eventhubs.impl.Operation<T>
  type: Interface
  syntax:
    content: public interface Operation<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
- uid: com.microsoft.azure.eventhubs.impl.OperationResult
  parent: com.microsoft.azure.eventhubs.impl
  href: com.microsoft.azure.eventhubs.impl.OperationResult.yml
  name: OperationResult<T,E>
  nameWithType: OperationResult<T,E>
  fullName: com.microsoft.azure.eventhubs.impl.OperationResult<T,E>
  type: Interface
  syntax:
    content: public interface OperationResult<T,E extends Throwable>
    typeParameters:
    - id: T
      type: 8ce1ecb9
    - id: E
      type: 0ca03e3a
- uid: com.microsoft.azure.eventhubs.impl.ReactorDispatcher
  parent: com.microsoft.azure.eventhubs.impl
  href: com.microsoft.azure.eventhubs.impl.ReactorDispatcher.yml
  name: ReactorDispatcher
  nameWithType: ReactorDispatcher
  fullName: com.microsoft.azure.eventhubs.impl.ReactorDispatcher
  type: Class
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref> is not thread-safe - all calls to <xref uid=\"\" data-throw-if-not-resolved=\"false\">Proton</xref> API's should be - on the Reactor Thread. <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref> works out-of-box for all event driven API - ex: onReceive - which could raise upon onSocketRead. <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref> didn't support API's like Send() out-of-box - which could potentially run on different thread to that of Reactor. So, the following utility class is used to generate an Event to hook into <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref>'s event delegation pattern. It uses a <xref uid=\"\" data-throw-if-not-resolved=\"false\">Pipe</xref> as the IO on which Reactor Listens to. Cardinality: multiple <xref uid=\"com.microsoft.azure.eventhubs.impl.ReactorDispatcher\" data-throw-if-not-resolved=\"false\">ReactorDispatcher</xref>'s could be attached to 1 <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref>. Each <xref uid=\"com.microsoft.azure.eventhubs.impl.ReactorDispatcher\" data-throw-if-not-resolved=\"false\">ReactorDispatcher</xref> should be initialized Synchronously - as it calls API in <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref> which is not thread-safe. </p>"
  syntax:
    content: public class ReactorDispatcher
