### YamlMime:JavaType
uid: "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap"
fullName: "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap"
name: "RequesterBootstrap"
nameWithType: "RequesterBootstrap"
summary: "<xref uid=\"org.apache.hc.core5.http.impl.bootstrap.HttpRequester\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpRequester\"></xref> bootstrap."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class RequesterBootstrap"
methods:
- "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap.bootstrap()"
- "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap.create()"
- "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap.setConnPoolListener(org.apache.hc.core5.pool.ConnPoolListener<org.apache.hc.core5.http.HttpHost>)"
- "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap.setConnectionFactory(org.apache.hc.core5.http.io.HttpConnectionFactory<? extends org.apache.hc.core5.http.io.HttpClientConnection>)"
- "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap.setConnectionReuseStrategy(org.apache.hc.core5.http.ConnectionReuseStrategy)"
- "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap.setDefaultMaxPerRoute(int)"
- "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap.setHttpProcessor(org.apache.hc.core5.http.protocol.HttpProcessor)"
- "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap.setMaxTotal(int)"
- "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap.setPoolConcurrencyPolicy(org.apache.hc.core5.pool.PoolConcurrencyPolicy)"
- "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap.setPoolReusePolicy(org.apache.hc.core5.pool.PoolReusePolicy)"
- "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap.setSocketConfig(org.apache.hc.core5.http.io.SocketConfig)"
- "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap.setSslContext(javax.net.ssl.SSLContext)"
- "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap.setSslSessionVerifier(org.apache.hc.core5.http.io.ssl.SSLSessionVerifier)"
- "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap.setSslSetupHandler(org.apache.hc.core5.function.Callback<javax.net.ssl.SSLParameters>)"
- "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap.setSslSocketFactory(javax.net.ssl.SSLSocketFactory)"
- "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap.setStreamListener(org.apache.hc.core5.http.impl.Http1StreamListener)"
- "org.apache.hc.core5.http.impl.bootstrap.RequesterBootstrap.setTimeToLive(org.apache.hc.core5.util.Timeout)"
type: "class"
metadata: {}
package: "org.apache.hc.core5.http.impl.bootstrap"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
