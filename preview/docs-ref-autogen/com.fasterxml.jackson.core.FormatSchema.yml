### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.FormatSchema
  id: FormatSchema
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core
  children:
  - com.fasterxml.jackson.core.FormatSchema.getSchemaType()
  langs:
  - java
  name: FormatSchema
  nameWithType: FormatSchema
  fullName: com.fasterxml.jackson.core.FormatSchema
  type: Interface
  package: com.fasterxml.jackson.core
  summary: >-
    Simple tag interface used to mark schema objects that are used by some <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> and <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> implementations to further specify structure of expected format. Basic JSON-based parsers and generators do not use schemas, but some data formats (like many binary data formats like Thrift, protobuf) mandate use of schemas.


    Since there is little commonality between schemas for different data formats, this interface does not define much meaningful functionality for accessing schema details; rather, specific parser and generator implementations need to cast to schema implementations they use. This marker interface is mostly used for tagging "some kind of schema" -- instead of passing opaque <xref uid="java.lang.Object" data-throw-if-not-resolved="false">java.lang.Object</xref> \-- for documentation purposes.
  syntax:
    content: public interface FormatSchema
- uid: com.fasterxml.jackson.core.FormatSchema.getSchemaType()
  id: getSchemaType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.FormatSchema
  langs:
  - java
  name: getSchemaType()
  nameWithType: FormatSchema.getSchemaType()
  fullName: com.fasterxml.jackson.core.FormatSchema.getSchemaType()
  overload: com.fasterxml.jackson.core.FormatSchema.getSchemaType*
  type: Method
  package: com.fasterxml.jackson.core
  summary: 'Method that can be used to get an identifier that can be used for diagnostics purposes, to indicate what kind of data format this schema is used for: typically it is a short name of format itself, but it can also contain additional information in cases where data format supports multiple types of schemas.'
  syntax:
    content: public abstract String getSchemaType()
    return:
      type: java.lang.String
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.FormatSchema.getSchemaType*
  name: getSchemaType
  nameWithType: FormatSchema.getSchemaType
  fullName: com.fasterxml.jackson.core.FormatSchema.getSchemaType
  package: com.fasterxml.jackson.core
