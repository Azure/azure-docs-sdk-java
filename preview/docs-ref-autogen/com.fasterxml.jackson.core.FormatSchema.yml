### YamlMime:JavaType
uid: "com.fasterxml.jackson.core.FormatSchema"
fullName: "com.fasterxml.jackson.core.FormatSchema"
name: "FormatSchema"
nameWithType: "FormatSchema"
summary: "Simple tag interface used to mark schema objects that are used by some <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref> and <xref uid=\"com.fasterxml.jackson.core.JsonGenerator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonGenerator\"></xref> implementations to further specify structure of expected format. Basic JSON-based parsers and generators do not use schemas, but some data formats (like many binary data formats like Thrift, protobuf) mandate use of schemas.\n\nSince there is little commonality between schemas for different data formats, this interface does not define much meaningful functionality for accessing schema details; rather, specific parser and generator implementations need to cast to schema implementations they use. This marker interface is mostly used for tagging \"some kind of schema\" -- instead of passing opaque <xref uid=\"java.lang.Object\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.lang.Object\"></xref> \\-- for documentation purposes."
syntax: "public interface FormatSchema"
methods:
- "com.fasterxml.jackson.core.FormatSchema.getSchemaType()"
type: "interface"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
