### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.node.ContainerNode
  id: ContainerNode
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node
  children:
  - com.fasterxml.jackson.databind.node.ContainerNode.ContainerNode()
  - com.fasterxml.jackson.databind.node.ContainerNode.ContainerNode(com.fasterxml.jackson.databind.node.JsonNodeFactory)
  - com.fasterxml.jackson.databind.node.ContainerNode._nodeFactory
  - com.fasterxml.jackson.databind.node.ContainerNode.arrayNode()
  - com.fasterxml.jackson.databind.node.ContainerNode.arrayNode(int)
  - com.fasterxml.jackson.databind.node.ContainerNode.asText()
  - com.fasterxml.jackson.databind.node.ContainerNode.asToken()
  - com.fasterxml.jackson.databind.node.ContainerNode.binaryNode(byte[])
  - com.fasterxml.jackson.databind.node.ContainerNode.binaryNode(byte[],int,int)
  - com.fasterxml.jackson.databind.node.ContainerNode.booleanNode(boolean)
  - com.fasterxml.jackson.databind.node.ContainerNode.get(int)
  - com.fasterxml.jackson.databind.node.ContainerNode.get(java.lang.String)
  - com.fasterxml.jackson.databind.node.ContainerNode.missingNode()
  - com.fasterxml.jackson.databind.node.ContainerNode.nullNode()
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(byte)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(double)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(float)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(int)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Byte)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Double)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Float)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Integer)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Long)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Short)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.math.BigDecimal)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.math.BigInteger)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(long)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(short)
  - com.fasterxml.jackson.databind.node.ContainerNode.objectNode()
  - com.fasterxml.jackson.databind.node.ContainerNode.pojoNode(java.lang.Object)
  - com.fasterxml.jackson.databind.node.ContainerNode.rawValueNode(com.fasterxml.jackson.databind.util.RawValue)
  - com.fasterxml.jackson.databind.node.ContainerNode.removeAll()
  - com.fasterxml.jackson.databind.node.ContainerNode.size()
  - com.fasterxml.jackson.databind.node.ContainerNode.textNode(java.lang.String)
  langs:
  - java
  name: ContainerNode<T>
  nameWithType: ContainerNode<T>
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>
  type: Class
  package: com.fasterxml.jackson.databind.node
  summary: This intermediate base class is used for all container nodes, specifically, array and object nodes.
  syntax:
    content: public abstract class ContainerNode<T> extends BaseJsonNode implements JsonNodeCreator
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.JsonSerializable.Base
  - com.fasterxml.jackson.databind.JsonNode
  - com.fasterxml.jackson.databind.node.BaseJsonNode
  implements:
  - com.fasterxml.jackson.databind.node.JsonNodeCreator
  inheritedMembers:
  - com.fasterxml.jackson.databind.JsonNode.<T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.JsonNode.<T>_this()
  - com.fasterxml.jackson.databind.JsonNode.<T>deepCopy()
  - com.fasterxml.jackson.databind.JsonNode.<T>require()
  - com.fasterxml.jackson.databind.JsonNode.<T>requireNonNull()
  - com.fasterxml.jackson.databind.JsonNode.<T>with(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.<T>withArray(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode._at(com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.databind.JsonNode.asBoolean()
  - com.fasterxml.jackson.databind.JsonNode.asBoolean(boolean)
  - com.fasterxml.jackson.databind.JsonNode.asDouble()
  - com.fasterxml.jackson.databind.JsonNode.asDouble(double)
  - com.fasterxml.jackson.databind.JsonNode.asInt()
  - com.fasterxml.jackson.databind.JsonNode.asInt(int)
  - com.fasterxml.jackson.databind.JsonNode.asLong()
  - com.fasterxml.jackson.databind.JsonNode.asLong(long)
  - com.fasterxml.jackson.databind.JsonNode.asText()
  - com.fasterxml.jackson.databind.JsonNode.asText(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.at(com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.databind.JsonNode.at(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.bigIntegerValue()
  - com.fasterxml.jackson.databind.JsonNode.binaryValue()
  - com.fasterxml.jackson.databind.JsonNode.booleanValue()
  - com.fasterxml.jackson.databind.JsonNode.canConvertToInt()
  - com.fasterxml.jackson.databind.JsonNode.canConvertToLong()
  - com.fasterxml.jackson.databind.JsonNode.decimalValue()
  - com.fasterxml.jackson.databind.JsonNode.doubleValue()
  - com.fasterxml.jackson.databind.JsonNode.elements()
  - com.fasterxml.jackson.databind.JsonNode.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
  - com.fasterxml.jackson.databind.JsonNode.fieldNames()
  - com.fasterxml.jackson.databind.JsonNode.fields()
  - com.fasterxml.jackson.databind.JsonNode.findParent(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  - com.fasterxml.jackson.databind.JsonNode.findValue(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  - com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String,java.util.List<java.lang.String>)
  - com.fasterxml.jackson.databind.JsonNode.floatValue()
  - com.fasterxml.jackson.databind.JsonNode.get(int)
  - com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.getNodeType()
  - com.fasterxml.jackson.databind.JsonNode.has(int)
  - com.fasterxml.jackson.databind.JsonNode.has(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.hasNonNull(int)
  - com.fasterxml.jackson.databind.JsonNode.hasNonNull(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.intValue()
  - com.fasterxml.jackson.databind.JsonNode.isArray()
  - com.fasterxml.jackson.databind.JsonNode.isBigDecimal()
  - com.fasterxml.jackson.databind.JsonNode.isBigInteger()
  - com.fasterxml.jackson.databind.JsonNode.isBinary()
  - com.fasterxml.jackson.databind.JsonNode.isBoolean()
  - com.fasterxml.jackson.databind.JsonNode.isContainerNode()
  - com.fasterxml.jackson.databind.JsonNode.isDouble()
  - com.fasterxml.jackson.databind.JsonNode.isEmpty()
  - com.fasterxml.jackson.databind.JsonNode.isFloat()
  - com.fasterxml.jackson.databind.JsonNode.isFloatingPointNumber()
  - com.fasterxml.jackson.databind.JsonNode.isInt()
  - com.fasterxml.jackson.databind.JsonNode.isIntegralNumber()
  - com.fasterxml.jackson.databind.JsonNode.isLong()
  - com.fasterxml.jackson.databind.JsonNode.isMissingNode()
  - com.fasterxml.jackson.databind.JsonNode.isNull()
  - com.fasterxml.jackson.databind.JsonNode.isNumber()
  - com.fasterxml.jackson.databind.JsonNode.isObject()
  - com.fasterxml.jackson.databind.JsonNode.isPojo()
  - com.fasterxml.jackson.databind.JsonNode.isShort()
  - com.fasterxml.jackson.databind.JsonNode.isTextual()
  - com.fasterxml.jackson.databind.JsonNode.isValueNode()
  - com.fasterxml.jackson.databind.JsonNode.iterator()
  - com.fasterxml.jackson.databind.JsonNode.longValue()
  - com.fasterxml.jackson.databind.JsonNode.numberValue()
  - com.fasterxml.jackson.databind.JsonNode.path(int)
  - com.fasterxml.jackson.databind.JsonNode.path(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.requiredAt(com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.databind.JsonNode.requiredAt(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.shortValue()
  - com.fasterxml.jackson.databind.JsonNode.size()
  - com.fasterxml.jackson.databind.JsonNode.textValue()
  - com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.asToken()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.findPath(java.lang.String)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.hashCode()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.numberType()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.required(int)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.required(java.lang.String)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.toPrettyString()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.toString()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.traverse()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.traverse(com.fasterxml.jackson.core.ObjectCodec)
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.ContainerNode()
  id: ContainerNode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: ContainerNode()
  nameWithType: ContainerNode<T>.ContainerNode()
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.ContainerNode()
  overload: com.fasterxml.jackson.databind.node.ContainerNode.ContainerNode*
  type: Constructor
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: protected ContainerNode()
- uid: com.fasterxml.jackson.databind.node.ContainerNode.ContainerNode(com.fasterxml.jackson.databind.node.JsonNodeFactory)
  id: ContainerNode(com.fasterxml.jackson.databind.node.JsonNodeFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: ContainerNode(JsonNodeFactory nc)
  nameWithType: ContainerNode<T>.ContainerNode(JsonNodeFactory nc)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.ContainerNode(JsonNodeFactory nc)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.ContainerNode*
  type: Constructor
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: protected ContainerNode(JsonNodeFactory nc)
    parameters:
    - id: nc
      type: com.fasterxml.jackson.databind.node.JsonNodeFactory
- uid: com.fasterxml.jackson.databind.node.ContainerNode._nodeFactory
  id: _nodeFactory
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: _nodeFactory
  nameWithType: ContainerNode<T>._nodeFactory
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>._nodeFactory
  type: Field
  package: com.fasterxml.jackson.databind.node
  summary: We will keep a reference to the Object (usually TreeMapper) that can construct instances of nodes to add to this container node.
  syntax:
    content: protected final JsonNodeFactory _nodeFactory
    return:
      type: com.fasterxml.jackson.databind.node.JsonNodeFactory
- uid: com.fasterxml.jackson.databind.node.ContainerNode.arrayNode()
  id: arrayNode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: arrayNode()
  nameWithType: ContainerNode<T>.arrayNode()
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.arrayNode()
  overload: com.fasterxml.jackson.databind.node.ContainerNode.arrayNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Factory method that constructs and returns an empty <xref uid="com.fasterxml.jackson.databind.node.ArrayNode" data-throw-if-not-resolved="false">ArrayNode</xref> Construction is done using registered <xref uid="com.fasterxml.jackson.databind.node.JsonNodeFactory" data-throw-if-not-resolved="false">JsonNodeFactory</xref>.
  syntax:
    content: public final ArrayNode arrayNode()
    return:
      type: com.fasterxml.jackson.databind.node.ArrayNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.arrayNode(int)
  id: arrayNode(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: arrayNode(int capacity)
  nameWithType: ContainerNode<T>.arrayNode(int capacity)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.arrayNode(int capacity)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.arrayNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Factory method that constructs and returns an <xref uid="com.fasterxml.jackson.databind.node.ArrayNode" data-throw-if-not-resolved="false">ArrayNode</xref> with an initial capacity Construction is done using registered <xref uid="com.fasterxml.jackson.databind.node.JsonNodeFactory" data-throw-if-not-resolved="false">JsonNodeFactory</xref>
  syntax:
    content: public final ArrayNode arrayNode(int capacity)
    parameters:
    - id: capacity
      type: int
      description: the initial capacity of the ArrayNode
    return:
      type: com.fasterxml.jackson.databind.node.ArrayNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.asText()
  id: asText()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: asText()
  nameWithType: ContainerNode<T>.asText()
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.asText()
  overload: com.fasterxml.jackson.databind.node.ContainerNode.asText*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method that will return a valid String representation of the container value, if the node is a value node (method <xref uid="com.fasterxml.jackson.databind.node.ContainerNode.isValueNode" data-throw-if-not-resolved="false">#isValueNode</xref> returns true), otherwise empty String.
  syntax:
    content: public String asText()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.node.ContainerNode.asToken()
  id: asToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: asToken()
  nameWithType: ContainerNode<T>.asToken()
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.asToken()
  overload: com.fasterxml.jackson.databind.node.ContainerNode.asToken*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method that can be used for efficient type detection when using stream abstraction for traversing nodes. Will return the first <xref uid="com.fasterxml.jackson.core.JsonToken" data-throw-if-not-resolved="false">JsonToken</xref> that equivalent stream event would produce (for most nodes there is just one token but for structured/container types multiple)
  syntax:
    content: public abstract JsonToken asToken()
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.databind.node.ContainerNode.binaryNode(byte[])
  id: binaryNode(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: binaryNode(byte[] data)
  nameWithType: ContainerNode<T>.binaryNode(byte[] data)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.binaryNode(byte[] data)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.binaryNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final BinaryNode binaryNode(byte[] data)
    parameters:
    - id: data
      type: byte[]
    return:
      type: com.fasterxml.jackson.databind.node.BinaryNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.binaryNode(byte[],int,int)
  id: binaryNode(byte[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: binaryNode(byte[] data, int offset, int length)
  nameWithType: ContainerNode<T>.binaryNode(byte[] data, int offset, int length)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.binaryNode(byte[] data, int offset, int length)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.binaryNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final BinaryNode binaryNode(byte[] data, int offset, int length)
    parameters:
    - id: data
      type: byte[]
    - id: offset
      type: int
    - id: length
      type: int
    return:
      type: com.fasterxml.jackson.databind.node.BinaryNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.booleanNode(boolean)
  id: booleanNode(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: booleanNode(boolean v)
  nameWithType: ContainerNode<T>.booleanNode(boolean v)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.booleanNode(boolean v)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.booleanNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final BooleanNode booleanNode(boolean v)
    parameters:
    - id: v
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.node.BooleanNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.get(int)
  id: get(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: get(int index)
  nameWithType: ContainerNode<T>.get(int index)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.get(int index)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.get*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method for accessing value of the specified element of an array node. For other nodes, null is always returned.


    For array nodes, index specifies exact location within array and allows for efficient iteration over child elements (underlying storage is guaranteed to be efficiently indexable, i.e. has random-access to elements). If index is less than 0, or equal-or-greater than `node.size()`, null is returned; no exception is thrown for any index.


    NOTE: if the element value has been explicitly set as `null` (which is different from removal!), a <xref uid="com.fasterxml.jackson.databind.node.NullNode" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.node.NullNode</xref> will be returned, not null.
  syntax:
    content: public abstract JsonNode get(int index)
    parameters:
    - id: index
      type: int
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.get(java.lang.String)
  id: get(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: get(String fieldName)
  nameWithType: ContainerNode<T>.get(String fieldName)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.get(String fieldName)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.get*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method for accessing value of the specified field of an object node. If this node is not an object (or it does not have a value for specified field name), or if there is no field with such name, null is returned.


    NOTE: if the property value has been explicitly set as `null` (which is different from removal!), a <xref uid="com.fasterxml.jackson.databind.node.NullNode" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.node.NullNode</xref> will be returned, not null.
  syntax:
    content: public abstract JsonNode get(String fieldName)
    parameters:
    - id: fieldName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.missingNode()
  id: missingNode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: missingNode()
  nameWithType: ContainerNode<T>.missingNode()
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.missingNode()
  overload: com.fasterxml.jackson.databind.node.ContainerNode.missingNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public JsonNode missingNode()
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.nullNode()
  id: nullNode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: nullNode()
  nameWithType: ContainerNode<T>.nullNode()
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.nullNode()
  overload: com.fasterxml.jackson.databind.node.ContainerNode.nullNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final NullNode nullNode()
    return:
      type: com.fasterxml.jackson.databind.node.NullNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(byte)
  id: numberNode(byte)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: numberNode(byte v)
  nameWithType: ContainerNode<T>.numberNode(byte v)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.numberNode(byte v)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.numberNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final NumericNode numberNode(byte v)
    parameters:
    - id: v
      type: byte
    return:
      type: com.fasterxml.jackson.databind.node.NumericNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(double)
  id: numberNode(double)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: numberNode(double v)
  nameWithType: ContainerNode<T>.numberNode(double v)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.numberNode(double v)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.numberNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final NumericNode numberNode(double v)
    parameters:
    - id: v
      type: double
    return:
      type: com.fasterxml.jackson.databind.node.NumericNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(float)
  id: numberNode(float)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: numberNode(float v)
  nameWithType: ContainerNode<T>.numberNode(float v)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.numberNode(float v)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.numberNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final NumericNode numberNode(float v)
    parameters:
    - id: v
      type: float
    return:
      type: com.fasterxml.jackson.databind.node.NumericNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(int)
  id: numberNode(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: numberNode(int v)
  nameWithType: ContainerNode<T>.numberNode(int v)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.numberNode(int v)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.numberNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final NumericNode numberNode(int v)
    parameters:
    - id: v
      type: int
    return:
      type: com.fasterxml.jackson.databind.node.NumericNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Byte)
  id: numberNode(java.lang.Byte)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: numberNode(Byte v)
  nameWithType: ContainerNode<T>.numberNode(Byte v)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.numberNode(Byte v)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.numberNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final ValueNode numberNode(Byte v)
    parameters:
    - id: v
      type: java.lang.Byte
    return:
      type: com.fasterxml.jackson.databind.node.ValueNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Double)
  id: numberNode(java.lang.Double)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: numberNode(Double v)
  nameWithType: ContainerNode<T>.numberNode(Double v)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.numberNode(Double v)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.numberNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final ValueNode numberNode(Double v)
    parameters:
    - id: v
      type: java.lang.Double
    return:
      type: com.fasterxml.jackson.databind.node.ValueNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Float)
  id: numberNode(java.lang.Float)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: numberNode(Float v)
  nameWithType: ContainerNode<T>.numberNode(Float v)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.numberNode(Float v)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.numberNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final ValueNode numberNode(Float v)
    parameters:
    - id: v
      type: java.lang.Float
    return:
      type: com.fasterxml.jackson.databind.node.ValueNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Integer)
  id: numberNode(java.lang.Integer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: numberNode(Integer v)
  nameWithType: ContainerNode<T>.numberNode(Integer v)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.numberNode(Integer v)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.numberNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final ValueNode numberNode(Integer v)
    parameters:
    - id: v
      type: java.lang.Integer
    return:
      type: com.fasterxml.jackson.databind.node.ValueNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Long)
  id: numberNode(java.lang.Long)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: numberNode(Long v)
  nameWithType: ContainerNode<T>.numberNode(Long v)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.numberNode(Long v)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.numberNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final ValueNode numberNode(Long v)
    parameters:
    - id: v
      type: java.lang.Long
    return:
      type: com.fasterxml.jackson.databind.node.ValueNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Short)
  id: numberNode(java.lang.Short)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: numberNode(Short v)
  nameWithType: ContainerNode<T>.numberNode(Short v)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.numberNode(Short v)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.numberNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final ValueNode numberNode(Short v)
    parameters:
    - id: v
      type: java.lang.Short
    return:
      type: com.fasterxml.jackson.databind.node.ValueNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.math.BigDecimal)
  id: numberNode(java.math.BigDecimal)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: numberNode(BigDecimal v)
  nameWithType: ContainerNode<T>.numberNode(BigDecimal v)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.numberNode(BigDecimal v)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.numberNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final ValueNode numberNode(BigDecimal v)
    parameters:
    - id: v
      type: java.math.BigDecimal
    return:
      type: com.fasterxml.jackson.databind.node.ValueNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.math.BigInteger)
  id: numberNode(java.math.BigInteger)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: numberNode(BigInteger v)
  nameWithType: ContainerNode<T>.numberNode(BigInteger v)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.numberNode(BigInteger v)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.numberNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final ValueNode numberNode(BigInteger v)
    parameters:
    - id: v
      type: java.math.BigInteger
    return:
      type: com.fasterxml.jackson.databind.node.ValueNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(long)
  id: numberNode(long)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: numberNode(long v)
  nameWithType: ContainerNode<T>.numberNode(long v)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.numberNode(long v)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.numberNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final NumericNode numberNode(long v)
    parameters:
    - id: v
      type: long
    return:
      type: com.fasterxml.jackson.databind.node.NumericNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(short)
  id: numberNode(short)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: numberNode(short v)
  nameWithType: ContainerNode<T>.numberNode(short v)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.numberNode(short v)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.numberNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final NumericNode numberNode(short v)
    parameters:
    - id: v
      type: short
    return:
      type: com.fasterxml.jackson.databind.node.NumericNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.objectNode()
  id: objectNode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: objectNode()
  nameWithType: ContainerNode<T>.objectNode()
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.objectNode()
  overload: com.fasterxml.jackson.databind.node.ContainerNode.objectNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Factory method that constructs and returns an empty <xref uid="com.fasterxml.jackson.databind.node.ObjectNode" data-throw-if-not-resolved="false">ObjectNode</xref> Construction is done using registered <xref uid="com.fasterxml.jackson.databind.node.JsonNodeFactory" data-throw-if-not-resolved="false">JsonNodeFactory</xref>.
  syntax:
    content: public final ObjectNode objectNode()
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.pojoNode(java.lang.Object)
  id: pojoNode(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: pojoNode(Object pojo)
  nameWithType: ContainerNode<T>.pojoNode(Object pojo)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.pojoNode(Object pojo)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.pojoNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final ValueNode pojoNode(Object pojo)
    parameters:
    - id: pojo
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.node.ValueNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.rawValueNode(com.fasterxml.jackson.databind.util.RawValue)
  id: rawValueNode(com.fasterxml.jackson.databind.util.RawValue)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: rawValueNode(RawValue value)
  nameWithType: ContainerNode<T>.rawValueNode(RawValue value)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.rawValueNode(RawValue value)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.rawValueNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Factory method to use for adding "raw values"; pre-encoded values that are included exactly as-is when node is serialized. This may be used, for example, to include fully serialized JSON sub-trees. Note that the concept may not work with all backends, and since no translation of any kinds is done it will not work when converting between data formats.
  syntax:
    content: public final ValueNode rawValueNode(RawValue value)
    parameters:
    - id: value
      type: com.fasterxml.jackson.databind.util.RawValue
    return:
      type: com.fasterxml.jackson.databind.node.ValueNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.removeAll()
  id: removeAll()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: removeAll()
  nameWithType: ContainerNode<T>.removeAll()
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.removeAll()
  overload: com.fasterxml.jackson.databind.node.ContainerNode.removeAll*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for removing all children container has (if any)
  syntax:
    content: public abstract T removeAll()
    return:
      type: T
      description: Container node itself (to allow method call chaining)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.size()
  id: size()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: size()
  nameWithType: ContainerNode<T>.size()
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.size()
  overload: com.fasterxml.jackson.databind.node.ContainerNode.size*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: 'Method that returns number of child nodes this node contains: for Array nodes, number of child elements, for Object nodes, number of fields, and for all other nodes 0.'
  syntax:
    content: public abstract int size()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.node.ContainerNode.textNode(java.lang.String)
  id: textNode(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ContainerNode
  langs:
  - java
  name: textNode(String text)
  nameWithType: ContainerNode<T>.textNode(String text)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.textNode(String text)
  overload: com.fasterxml.jackson.databind.node.ContainerNode.textNode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public final TextNode textNode(String text)
    parameters:
    - id: text
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.node.TextNode
references:
- uid: com.fasterxml.jackson.databind.node.JsonNodeFactory
  name: JsonNodeFactory
  nameWithType: JsonNodeFactory
  fullName: com.fasterxml.jackson.databind.node.JsonNodeFactory
- uid: com.fasterxml.jackson.databind.node.ContainerNode.ContainerNode*
  name: ContainerNode
  nameWithType: ContainerNode<T>.ContainerNode
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.ContainerNode
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.core.JsonToken
  name: JsonToken
  nameWithType: JsonToken
  fullName: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.databind.node.ContainerNode.asToken*
  name: asToken
  nameWithType: ContainerNode<T>.asToken
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.asToken
  package: com.fasterxml.jackson.databind.node
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.node.ContainerNode.asText*
  name: asText
  nameWithType: ContainerNode<T>.asText
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.asText
  package: com.fasterxml.jackson.databind.node
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.node.ContainerNode.size*
  name: size
  nameWithType: ContainerNode<T>.size
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.size
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.JsonNode
  name: JsonNode
  nameWithType: JsonNode
  fullName: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.get*
  name: get
  nameWithType: ContainerNode<T>.get
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.get
  package: com.fasterxml.jackson.databind.node
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.node.BooleanNode
  name: BooleanNode
  nameWithType: BooleanNode
  fullName: com.fasterxml.jackson.databind.node.BooleanNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.booleanNode*
  name: booleanNode
  nameWithType: ContainerNode<T>.booleanNode
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.booleanNode
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ContainerNode.missingNode*
  name: missingNode
  nameWithType: ContainerNode<T>.missingNode
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.missingNode
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.NullNode
  name: NullNode
  nameWithType: NullNode
  fullName: com.fasterxml.jackson.databind.node.NullNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.nullNode*
  name: nullNode
  nameWithType: ContainerNode<T>.nullNode
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.nullNode
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ArrayNode
  name: ArrayNode
  nameWithType: ArrayNode
  fullName: com.fasterxml.jackson.databind.node.ArrayNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.arrayNode*
  name: arrayNode
  nameWithType: ContainerNode<T>.arrayNode
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.arrayNode
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode
  name: ObjectNode
  nameWithType: ObjectNode
  fullName: com.fasterxml.jackson.databind.node.ObjectNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.objectNode*
  name: objectNode
  nameWithType: ContainerNode<T>.objectNode
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.objectNode
  package: com.fasterxml.jackson.databind.node
- uid: byte
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
- uid: com.fasterxml.jackson.databind.node.NumericNode
  name: NumericNode
  nameWithType: NumericNode
  fullName: com.fasterxml.jackson.databind.node.NumericNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode*
  name: numberNode
  nameWithType: ContainerNode<T>.numberNode
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.numberNode
  package: com.fasterxml.jackson.databind.node
- uid: short
  spec.java:
  - uid: short
    name: short
    fullName: short
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: float
  spec.java:
  - uid: float
    name: float
    fullName: float
- uid: double
  spec.java:
  - uid: double
    name: double
    fullName: double
- uid: java.math.BigInteger
  spec.java:
  - uid: java.math.BigInteger
    name: BigInteger
    fullName: java.math.BigInteger
- uid: com.fasterxml.jackson.databind.node.ValueNode
  name: ValueNode
  nameWithType: ValueNode
  fullName: com.fasterxml.jackson.databind.node.ValueNode
- uid: java.math.BigDecimal
  spec.java:
  - uid: java.math.BigDecimal
    name: BigDecimal
    fullName: java.math.BigDecimal
- uid: java.lang.Byte
  spec.java:
  - uid: java.lang.Byte
    name: Byte
    fullName: java.lang.Byte
- uid: java.lang.Short
  spec.java:
  - uid: java.lang.Short
    name: Short
    fullName: java.lang.Short
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: java.lang.Long
  spec.java:
  - uid: java.lang.Long
    name: Long
    fullName: java.lang.Long
- uid: java.lang.Float
  spec.java:
  - uid: java.lang.Float
    name: Float
    fullName: java.lang.Float
- uid: java.lang.Double
  spec.java:
  - uid: java.lang.Double
    name: Double
    fullName: java.lang.Double
- uid: com.fasterxml.jackson.databind.node.TextNode
  name: TextNode
  nameWithType: TextNode
  fullName: com.fasterxml.jackson.databind.node.TextNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.textNode*
  name: textNode
  nameWithType: ContainerNode<T>.textNode
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.textNode
  package: com.fasterxml.jackson.databind.node
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.node.BinaryNode
  name: BinaryNode
  nameWithType: BinaryNode
  fullName: com.fasterxml.jackson.databind.node.BinaryNode
- uid: com.fasterxml.jackson.databind.node.ContainerNode.binaryNode*
  name: binaryNode
  nameWithType: ContainerNode<T>.binaryNode
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.binaryNode
  package: com.fasterxml.jackson.databind.node
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.node.ContainerNode.pojoNode*
  name: pojoNode
  nameWithType: ContainerNode<T>.pojoNode
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.pojoNode
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.util.RawValue
  name: RawValue
  nameWithType: RawValue
  fullName: com.fasterxml.jackson.databind.util.RawValue
- uid: com.fasterxml.jackson.databind.node.ContainerNode.rawValueNode*
  name: rawValueNode
  nameWithType: ContainerNode<T>.rawValueNode
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.rawValueNode
  package: com.fasterxml.jackson.databind.node
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.fasterxml.jackson.databind.node.ContainerNode.removeAll*
  name: removeAll
  nameWithType: ContainerNode<T>.removeAll
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<T>.removeAll
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode
  name: BaseJsonNode
  nameWithType: BaseJsonNode
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode
- uid: com.fasterxml.jackson.databind.node.JsonNodeCreator
  name: JsonNodeCreator
  nameWithType: JsonNodeCreator
  fullName: com.fasterxml.jackson.databind.node.JsonNodeCreator
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.JsonNode.get(int)
  name: JsonNode.get(int)
  nameWithType: JsonNode.get(int)
  fullName: com.fasterxml.jackson.databind.JsonNode.get(int)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String,java.util.List<java.lang.String>)
  name: JsonNode.findValuesAsText(String,List<String>)
  nameWithType: JsonNode.findValuesAsText(String,List<String>)
  fullName: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String,java.util.List<java.lang.String>)
- uid: com.fasterxml.jackson.databind.JsonNode.doubleValue()
  name: JsonNode.doubleValue()
  nameWithType: JsonNode.doubleValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.doubleValue()
- uid: com.fasterxml.jackson.databind.JsonNode.requiredAt(com.fasterxml.jackson.core.JsonPointer)
  name: JsonNode.requiredAt(JsonPointer)
  nameWithType: JsonNode.requiredAt(JsonPointer)
  fullName: com.fasterxml.jackson.databind.JsonNode.requiredAt(com.fasterxml.jackson.core.JsonPointer)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: BaseJsonNode.serialize(JsonGenerator,SerializerProvider)
  nameWithType: BaseJsonNode.serialize(JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.JsonNode.iterator()
  name: JsonNode.iterator()
  nameWithType: JsonNode.iterator()
  fullName: com.fasterxml.jackson.databind.JsonNode.iterator()
- uid: com.fasterxml.jackson.databind.JsonNode.asText()
  name: JsonNode.asText()
  nameWithType: JsonNode.asText()
  fullName: com.fasterxml.jackson.databind.JsonNode.asText()
- uid: com.fasterxml.jackson.databind.JsonNode.decimalValue()
  name: JsonNode.decimalValue()
  nameWithType: JsonNode.decimalValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.decimalValue()
- uid: com.fasterxml.jackson.databind.JsonNode.findValue(java.lang.String)
  name: JsonNode.findValue(String)
  nameWithType: JsonNode.findValue(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findValue(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.hasNonNull(int)
  name: JsonNode.hasNonNull(int)
  nameWithType: JsonNode.hasNonNull(int)
  fullName: com.fasterxml.jackson.databind.JsonNode.hasNonNull(int)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.required(int)
  name: BaseJsonNode.required(int)
  nameWithType: BaseJsonNode.required(int)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.required(int)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String)
  name: JsonNode.findValuesAsText(String)
  nameWithType: JsonNode.findValuesAsText(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.JsonNode.isMissingNode()
  name: JsonNode.isMissingNode()
  nameWithType: JsonNode.isMissingNode()
  fullName: com.fasterxml.jackson.databind.JsonNode.isMissingNode()
- uid: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String)
  name: JsonNode.findValues(String)
  nameWithType: JsonNode.findValues(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.findPath(java.lang.String)
  name: BaseJsonNode.findPath(String)
  nameWithType: BaseJsonNode.findPath(String)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.findPath(java.lang.String)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.JsonNode.hasNonNull(java.lang.String)
  name: JsonNode.hasNonNull(String)
  nameWithType: JsonNode.hasNonNull(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.hasNonNull(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.<T>require()
  name: JsonNode.<T>require()
  nameWithType: JsonNode.<T>require()
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>require()
- uid: com.fasterxml.jackson.databind.JsonNode.numberValue()
  name: JsonNode.numberValue()
  nameWithType: JsonNode.numberValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.numberValue()
- uid: com.fasterxml.jackson.databind.JsonNode.textValue()
  name: JsonNode.textValue()
  nameWithType: JsonNode.textValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.textValue()
- uid: com.fasterxml.jackson.databind.JsonNode.isContainerNode()
  name: JsonNode.isContainerNode()
  nameWithType: JsonNode.isContainerNode()
  fullName: com.fasterxml.jackson.databind.JsonNode.isContainerNode()
- uid: com.fasterxml.jackson.databind.JsonNode.<T>_this()
  name: JsonNode.<T>_this()
  nameWithType: JsonNode.<T>_this()
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>_this()
- uid: com.fasterxml.jackson.databind.JsonNode.isValueNode()
  name: JsonNode.isValueNode()
  nameWithType: JsonNode.isValueNode()
  fullName: com.fasterxml.jackson.databind.JsonNode.isValueNode()
- uid: com.fasterxml.jackson.databind.JsonNode.asDouble()
  name: JsonNode.asDouble()
  nameWithType: JsonNode.asDouble()
  fullName: com.fasterxml.jackson.databind.JsonNode.asDouble()
- uid: com.fasterxml.jackson.databind.JsonNode.findParent(java.lang.String)
  name: JsonNode.findParent(String)
  nameWithType: JsonNode.findParent(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findParent(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.bigIntegerValue()
  name: JsonNode.bigIntegerValue()
  nameWithType: JsonNode.bigIntegerValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.bigIntegerValue()
- uid: com.fasterxml.jackson.databind.JsonNode.isTextual()
  name: JsonNode.isTextual()
  nameWithType: JsonNode.isTextual()
  fullName: com.fasterxml.jackson.databind.JsonNode.isTextual()
- uid: com.fasterxml.jackson.databind.JsonNode.<T>requireNonNull()
  name: JsonNode.<T>requireNonNull()
  nameWithType: JsonNode.<T>requireNonNull()
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>requireNonNull()
- uid: com.fasterxml.jackson.databind.JsonNode.isObject()
  name: JsonNode.isObject()
  nameWithType: JsonNode.isObject()
  fullName: com.fasterxml.jackson.databind.JsonNode.isObject()
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.toPrettyString()
  name: BaseJsonNode.toPrettyString()
  nameWithType: BaseJsonNode.toPrettyString()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.toPrettyString()
- uid: com.fasterxml.jackson.databind.JsonNode.asBoolean()
  name: JsonNode.asBoolean()
  nameWithType: JsonNode.asBoolean()
  fullName: com.fasterxml.jackson.databind.JsonNode.asBoolean()
- uid: com.fasterxml.jackson.databind.JsonNode.isPojo()
  name: JsonNode.isPojo()
  nameWithType: JsonNode.isPojo()
  fullName: com.fasterxml.jackson.databind.JsonNode.isPojo()
- uid: com.fasterxml.jackson.databind.JsonNode.size()
  name: JsonNode.size()
  nameWithType: JsonNode.size()
  fullName: com.fasterxml.jackson.databind.JsonNode.size()
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse()
  name: BaseJsonNode.traverse()
  nameWithType: BaseJsonNode.traverse()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse()
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.required(java.lang.String)
  name: BaseJsonNode.required(String)
  nameWithType: BaseJsonNode.required(String)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.required(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.asDouble(double)
  name: JsonNode.asDouble(double)
  nameWithType: JsonNode.asDouble(double)
  fullName: com.fasterxml.jackson.databind.JsonNode.asDouble(double)
- uid: com.fasterxml.jackson.databind.JsonNode.asText(java.lang.String)
  name: JsonNode.asText(String)
  nameWithType: JsonNode.asText(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.asText(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse(com.fasterxml.jackson.core.ObjectCodec)
  name: BaseJsonNode.traverse(ObjectCodec)
  nameWithType: BaseJsonNode.traverse(ObjectCodec)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse(com.fasterxml.jackson.core.ObjectCodec)
- uid: com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
  name: JsonSerializable.Base.isEmpty(SerializerProvider)
  nameWithType: JsonSerializable.Base.isEmpty(SerializerProvider)
  fullName: com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.JsonNode.isNull()
  name: JsonNode.isNull()
  nameWithType: JsonNode.isNull()
  fullName: com.fasterxml.jackson.databind.JsonNode.isNull()
- uid: com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)
  name: JsonNode.get(String)
  nameWithType: JsonNode.get(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.booleanValue()
  name: JsonNode.booleanValue()
  nameWithType: JsonNode.booleanValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.booleanValue()
- uid: com.fasterxml.jackson.databind.JsonNode.asLong(long)
  name: JsonNode.asLong(long)
  nameWithType: JsonNode.asLong(long)
  fullName: com.fasterxml.jackson.databind.JsonNode.asLong(long)
- uid: com.fasterxml.jackson.databind.JsonNode.fields()
  name: JsonNode.fields()
  nameWithType: JsonNode.fields()
  fullName: com.fasterxml.jackson.databind.JsonNode.fields()
- uid: com.fasterxml.jackson.databind.JsonNode._at(com.fasterxml.jackson.core.JsonPointer)
  name: JsonNode._at(JsonPointer)
  nameWithType: JsonNode._at(JsonPointer)
  fullName: com.fasterxml.jackson.databind.JsonNode._at(com.fasterxml.jackson.core.JsonPointer)
- uid: com.fasterxml.jackson.databind.JsonNode.asLong()
  name: JsonNode.asLong()
  nameWithType: JsonNode.asLong()
  fullName: com.fasterxml.jackson.databind.JsonNode.asLong()
- uid: com.fasterxml.jackson.databind.JsonNode.isShort()
  name: JsonNode.isShort()
  nameWithType: JsonNode.isShort()
  fullName: com.fasterxml.jackson.databind.JsonNode.isShort()
- uid: com.fasterxml.jackson.databind.JsonNode.isLong()
  name: JsonNode.isLong()
  nameWithType: JsonNode.isLong()
  fullName: com.fasterxml.jackson.databind.JsonNode.isLong()
- uid: com.fasterxml.jackson.databind.JsonNode.asInt(int)
  name: JsonNode.asInt(int)
  nameWithType: JsonNode.asInt(int)
  fullName: com.fasterxml.jackson.databind.JsonNode.asInt(int)
- uid: com.fasterxml.jackson.databind.JsonNode.path(java.lang.String)
  name: JsonNode.path(String)
  nameWithType: JsonNode.path(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.path(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.isFloat()
  name: JsonNode.isFloat()
  nameWithType: JsonNode.isFloat()
  fullName: com.fasterxml.jackson.databind.JsonNode.isFloat()
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.toString()
  name: BaseJsonNode.toString()
  nameWithType: BaseJsonNode.toString()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.toString()
- uid: com.fasterxml.jackson.databind.JsonNode.elements()
  name: JsonNode.elements()
  nameWithType: JsonNode.elements()
  fullName: com.fasterxml.jackson.databind.JsonNode.elements()
- uid: com.fasterxml.jackson.databind.JsonNode.canConvertToInt()
  name: JsonNode.canConvertToInt()
  nameWithType: JsonNode.canConvertToInt()
  fullName: com.fasterxml.jackson.databind.JsonNode.canConvertToInt()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.JsonNode.equals(java.lang.Object)
  name: JsonNode.equals(Object)
  nameWithType: JsonNode.equals(Object)
  fullName: com.fasterxml.jackson.databind.JsonNode.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  name: JsonNode.findParents(String,List<JsonNode>)
  nameWithType: JsonNode.findParents(String,List<JsonNode>)
  fullName: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
- uid: com.fasterxml.jackson.databind.JsonNode.isBigInteger()
  name: JsonNode.isBigInteger()
  nameWithType: JsonNode.isBigInteger()
  fullName: com.fasterxml.jackson.databind.JsonNode.isBigInteger()
- uid: com.fasterxml.jackson.databind.JsonNode.at(com.fasterxml.jackson.core.JsonPointer)
  name: JsonNode.at(JsonPointer)
  nameWithType: JsonNode.at(JsonPointer)
  fullName: com.fasterxml.jackson.databind.JsonNode.at(com.fasterxml.jackson.core.JsonPointer)
- uid: com.fasterxml.jackson.databind.JsonNode.requiredAt(java.lang.String)
  name: JsonNode.requiredAt(String)
  nameWithType: JsonNode.requiredAt(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.requiredAt(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.isInt()
  name: JsonNode.isInt()
  nameWithType: JsonNode.isInt()
  fullName: com.fasterxml.jackson.databind.JsonNode.isInt()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.JsonNode.path(int)
  name: JsonNode.path(int)
  nameWithType: JsonNode.path(int)
  fullName: com.fasterxml.jackson.databind.JsonNode.path(int)
- uid: com.fasterxml.jackson.databind.JsonNode.asInt()
  name: JsonNode.asInt()
  nameWithType: JsonNode.asInt()
  fullName: com.fasterxml.jackson.databind.JsonNode.asInt()
- uid: com.fasterxml.jackson.databind.JsonNode.at(java.lang.String)
  name: JsonNode.at(String)
  nameWithType: JsonNode.at(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.at(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.has(int)
  name: JsonNode.has(int)
  nameWithType: JsonNode.has(int)
  fullName: com.fasterxml.jackson.databind.JsonNode.has(int)
- uid: com.fasterxml.jackson.databind.JsonNode.isFloatingPointNumber()
  name: JsonNode.isFloatingPointNumber()
  nameWithType: JsonNode.isFloatingPointNumber()
  fullName: com.fasterxml.jackson.databind.JsonNode.isFloatingPointNumber()
- uid: com.fasterxml.jackson.databind.JsonNode.intValue()
  name: JsonNode.intValue()
  nameWithType: JsonNode.intValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.intValue()
- uid: com.fasterxml.jackson.databind.JsonNode.isBoolean()
  name: JsonNode.isBoolean()
  nameWithType: JsonNode.isBoolean()
  fullName: com.fasterxml.jackson.databind.JsonNode.isBoolean()
- uid: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  name: JsonNode.findValues(String,List<JsonNode>)
  nameWithType: JsonNode.findValues(String,List<JsonNode>)
  fullName: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.numberType()
  name: BaseJsonNode.numberType()
  nameWithType: BaseJsonNode.numberType()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.numberType()
- uid: com.fasterxml.jackson.databind.JsonNode.binaryValue()
  name: JsonNode.binaryValue()
  nameWithType: JsonNode.binaryValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.binaryValue()
- uid: com.fasterxml.jackson.databind.JsonNode.isBigDecimal()
  name: JsonNode.isBigDecimal()
  nameWithType: JsonNode.isBigDecimal()
  fullName: com.fasterxml.jackson.databind.JsonNode.isBigDecimal()
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.asToken()
  name: BaseJsonNode.asToken()
  nameWithType: BaseJsonNode.asToken()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.asToken()
- uid: com.fasterxml.jackson.databind.JsonNode.isDouble()
  name: JsonNode.isDouble()
  nameWithType: JsonNode.isDouble()
  fullName: com.fasterxml.jackson.databind.JsonNode.isDouble()
- uid: com.fasterxml.jackson.databind.JsonNode.longValue()
  name: JsonNode.longValue()
  nameWithType: JsonNode.longValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.longValue()
- uid: com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
  name: JsonNode.equals(Comparator<JsonNode>,JsonNode)
  nameWithType: JsonNode.equals(Comparator<JsonNode>,JsonNode)
  fullName: com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
- uid: com.fasterxml.jackson.databind.JsonNode.floatValue()
  name: JsonNode.floatValue()
  nameWithType: JsonNode.floatValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.floatValue()
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: BaseJsonNode.serializeWithType(JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: BaseJsonNode.serializeWithType(JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: com.fasterxml.jackson.databind.JsonNode.isArray()
  name: JsonNode.isArray()
  nameWithType: JsonNode.isArray()
  fullName: com.fasterxml.jackson.databind.JsonNode.isArray()
- uid: com.fasterxml.jackson.databind.JsonNode.fieldNames()
  name: JsonNode.fieldNames()
  nameWithType: JsonNode.fieldNames()
  fullName: com.fasterxml.jackson.databind.JsonNode.fieldNames()
- uid: com.fasterxml.jackson.databind.JsonNode.isIntegralNumber()
  name: JsonNode.isIntegralNumber()
  nameWithType: JsonNode.isIntegralNumber()
  fullName: com.fasterxml.jackson.databind.JsonNode.isIntegralNumber()
- uid: com.fasterxml.jackson.databind.JsonNode.<T>with(java.lang.String)
  name: JsonNode.<T>with(String)
  nameWithType: JsonNode.<T>with(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>with(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.hashCode()
  name: BaseJsonNode.hashCode()
  nameWithType: BaseJsonNode.hashCode()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.hashCode()
- uid: com.fasterxml.jackson.databind.JsonNode.has(java.lang.String)
  name: JsonNode.has(String)
  nameWithType: JsonNode.has(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.has(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.shortValue()
  name: JsonNode.shortValue()
  nameWithType: JsonNode.shortValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.shortValue()
- uid: com.fasterxml.jackson.databind.JsonNode.<T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
  name: JsonNode.<T>_reportRequiredViolation(String,Object)
  nameWithType: JsonNode.<T>_reportRequiredViolation(String,Object)
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.JsonNode.<T>withArray(java.lang.String)
  name: JsonNode.<T>withArray(String)
  nameWithType: JsonNode.<T>withArray(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>withArray(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.isEmpty()
  name: JsonNode.isEmpty()
  nameWithType: JsonNode.isEmpty()
  fullName: com.fasterxml.jackson.databind.JsonNode.isEmpty()
- uid: com.fasterxml.jackson.databind.JsonNode.<T>deepCopy()
  name: JsonNode.<T>deepCopy()
  nameWithType: JsonNode.<T>deepCopy()
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>deepCopy()
- uid: com.fasterxml.jackson.databind.JsonNode.isBinary()
  name: JsonNode.isBinary()
  nameWithType: JsonNode.isBinary()
  fullName: com.fasterxml.jackson.databind.JsonNode.isBinary()
- uid: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String)
  name: JsonNode.findParents(String)
  nameWithType: JsonNode.findParents(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.getNodeType()
  name: JsonNode.getNodeType()
  nameWithType: JsonNode.getNodeType()
  fullName: com.fasterxml.jackson.databind.JsonNode.getNodeType()
- uid: com.fasterxml.jackson.databind.JsonNode.isNumber()
  name: JsonNode.isNumber()
  nameWithType: JsonNode.isNumber()
  fullName: com.fasterxml.jackson.databind.JsonNode.isNumber()
- uid: com.fasterxml.jackson.databind.JsonNode.asBoolean(boolean)
  name: JsonNode.asBoolean(boolean)
  nameWithType: JsonNode.asBoolean(boolean)
  fullName: com.fasterxml.jackson.databind.JsonNode.asBoolean(boolean)
- uid: com.fasterxml.jackson.databind.JsonNode.canConvertToLong()
  name: JsonNode.canConvertToLong()
  nameWithType: JsonNode.canConvertToLong()
  fullName: com.fasterxml.jackson.databind.JsonNode.canConvertToLong()
- uid: java.lang.String>)
  name: String>)
  nameWithType: String>)
  fullName: java.lang.String>)
- uid: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String,java.util.List
  name: JsonNode.findValuesAsText(String,List
  nameWithType: JsonNode.findValuesAsText(String,List
  fullName: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String,java.util.List
- uid: T>require()
  name: T>require()
  nameWithType: T>require()
  fullName: T>require()
- uid: com.fasterxml.jackson.databind.JsonNode.
  name: JsonNode.
  nameWithType: JsonNode.
  fullName: com.fasterxml.jackson.databind.JsonNode.
- uid: T>_this()
  name: T>_this()
  nameWithType: T>_this()
  fullName: T>_this()
- uid: T>requireNonNull()
  name: T>requireNonNull()
  nameWithType: T>requireNonNull()
  fullName: T>requireNonNull()
- uid: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String,java.util.List
  name: JsonNode.findParents(String,List
  nameWithType: JsonNode.findParents(String,List
  fullName: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String,java.util.List
- uid: com.fasterxml.jackson.databind.JsonNode>)
  name: JsonNode>)
  nameWithType: JsonNode>)
  fullName: com.fasterxml.jackson.databind.JsonNode>)
- uid: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String,java.util.List
  name: JsonNode.findValues(String,List
  nameWithType: JsonNode.findValues(String,List
  fullName: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String,java.util.List
- uid: com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
  name: JsonNode>,JsonNode)
  nameWithType: JsonNode>,JsonNode)
  fullName: com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
- uid: com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator
  name: JsonNode.equals(Comparator
  nameWithType: JsonNode.equals(Comparator
  fullName: com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator
- uid: T>with(java.lang.String)
  name: T>with(String)
  nameWithType: T>with(String)
  fullName: T>with(java.lang.String)
- uid: T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
  name: T>_reportRequiredViolation(String,Object)
  nameWithType: T>_reportRequiredViolation(String,Object)
  fullName: T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
- uid: T>withArray(java.lang.String)
  name: T>withArray(String)
  nameWithType: T>withArray(String)
  fullName: T>withArray(java.lang.String)
- uid: T>deepCopy()
  name: T>deepCopy()
  nameWithType: T>deepCopy()
  fullName: T>deepCopy()
