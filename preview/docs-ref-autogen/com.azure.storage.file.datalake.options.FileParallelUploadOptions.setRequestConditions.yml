### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.options.FileParallelUploadOptions.setRequestConditions*"
fullName: "com.azure.storage.file.datalake.options.FileParallelUploadOptions.setRequestConditions"
name: "setRequestConditions"
nameWithType: "FileParallelUploadOptions.setRequestConditions"
members:
- uid: "com.azure.storage.file.datalake.options.FileParallelUploadOptions.setRequestConditions(com.azure.storage.file.datalake.models.DataLakeRequestConditions)"
  fullName: "com.azure.storage.file.datalake.options.FileParallelUploadOptions.setRequestConditions(DataLakeRequestConditions requestConditions)"
  name: "setRequestConditions(DataLakeRequestConditions requestConditions)"
  nameWithType: "FileParallelUploadOptions.setRequestConditions(DataLakeRequestConditions requestConditions)"
  summary: "Sets the <xref uid=\"com.azure.storage.file.datalake.models.DataLakeRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeRequestConditions\"></xref>."
  parameters:
  - description: "<xref uid=\"com.azure.storage.file.datalake.models.DataLakeRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeRequestConditions?alt=com.azure.storage.file.datalake.models.DataLakeRequestConditions&text=DataLakeRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileParallelUploadOptions setRequestConditions(DataLakeRequestConditions requestConditions)"
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.file.datalake.options.FileParallelUploadOptions?alt=com.azure.storage.file.datalake.options.FileParallelUploadOptions&text=FileParallelUploadOptions\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake.options"
artifact: com.azure:azure-storage-file-datalake:12.3.0-beta.1
