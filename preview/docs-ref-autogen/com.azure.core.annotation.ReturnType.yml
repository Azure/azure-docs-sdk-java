### YamlMime:ManagedReference
items:
- uid: "com.azure.core.annotation.ReturnType"
  id: "ReturnType"
  parent: "com.azure.core.annotation"
  children:
  - "com.azure.core.annotation.ReturnType.COLLECTION"
  - "com.azure.core.annotation.ReturnType.SINGLE"
  - "com.azure.core.annotation.ReturnType.valueOf(java.lang.String)"
  - "com.azure.core.annotation.ReturnType.values()"
  langs:
  - "java"
  name: "ReturnType"
  nameWithType: "ReturnType"
  fullName: "com.azure.core.annotation.ReturnType"
  type: "Enum"
  package: "com.azure.core.annotation"
  summary: "Enumeration of return types used with <xref uid=\"com.azure.core.annotation.ServiceMethod\" data-throw-if-not-resolved=\"false\">ServiceMethod</xref> annotation to indicate if a method is expected to return a single item or a collection"
  syntax:
    content: "public enum ReturnType extends Enum<ReturnType>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.annotation.ReturnType.COLLECTION"
  id: "COLLECTION"
  parent: "com.azure.core.annotation.ReturnType"
  langs:
  - "java"
  name: "COLLECTION"
  nameWithType: "ReturnType.COLLECTION"
  fullName: "com.azure.core.annotation.ReturnType.COLLECTION"
  type: "Field"
  package: "com.azure.core.annotation"
  syntax:
    content: "public static final ReturnType COLLECTION"
    return:
      type: "com.azure.core.annotation.ReturnType"
- uid: "com.azure.core.annotation.ReturnType.ReturnType()"
  id: "ReturnType()"
  parent: "com.azure.core.annotation.ReturnType"
  langs:
  - "java"
  name: "ReturnType()"
  nameWithType: "ReturnType.ReturnType()"
  fullName: "com.azure.core.annotation.ReturnType.ReturnType()"
  overload: "com.azure.core.annotation.ReturnType.ReturnType*"
  type: "Constructor"
  package: "com.azure.core.annotation"
  syntax:
    content: "private ReturnType()"
- uid: "com.azure.core.annotation.ReturnType.SINGLE"
  id: "SINGLE"
  parent: "com.azure.core.annotation.ReturnType"
  langs:
  - "java"
  name: "SINGLE"
  nameWithType: "ReturnType.SINGLE"
  fullName: "com.azure.core.annotation.ReturnType.SINGLE"
  type: "Field"
  package: "com.azure.core.annotation"
  syntax:
    content: "public static final ReturnType SINGLE"
    return:
      type: "com.azure.core.annotation.ReturnType"
- uid: "com.azure.core.annotation.ReturnType.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "com.azure.core.annotation.ReturnType"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "ReturnType.valueOf(String name)"
  fullName: "com.azure.core.annotation.ReturnType.valueOf(String name)"
  overload: "com.azure.core.annotation.ReturnType.valueOf*"
  type: "Method"
  package: "com.azure.core.annotation"
  syntax:
    content: "public static ReturnType valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.azure.core.annotation.ReturnType"
- uid: "com.azure.core.annotation.ReturnType.values()"
  id: "values()"
  parent: "com.azure.core.annotation.ReturnType"
  langs:
  - "java"
  name: "values()"
  nameWithType: "ReturnType.values()"
  fullName: "com.azure.core.annotation.ReturnType.values()"
  overload: "com.azure.core.annotation.ReturnType.values*"
  type: "Method"
  package: "com.azure.core.annotation"
  syntax:
    content: "public static ReturnType[] values()"
    return:
      type: "com.azure.core.annotation.ReturnType[]"
references:
- uid: "com.azure.core.annotation.ReturnType.ReturnType*"
  name: "ReturnType"
  nameWithType: "ReturnType.ReturnType"
  fullName: "com.azure.core.annotation.ReturnType.ReturnType"
  package: "com.azure.core.annotation"
- uid: "com.azure.core.annotation.ReturnType[]"
  spec.java:
  - uid: "com.azure.core.annotation.ReturnType"
    name: "ReturnType"
    fullName: "com.azure.core.annotation.ReturnType"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.core.annotation.ReturnType.values*"
  name: "values"
  nameWithType: "ReturnType.values"
  fullName: "com.azure.core.annotation.ReturnType.values"
  package: "com.azure.core.annotation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.annotation.ReturnType.valueOf*"
  name: "valueOf"
  nameWithType: "ReturnType.valueOf"
  fullName: "com.azure.core.annotation.ReturnType.valueOf"
  package: "com.azure.core.annotation"
- uid: "java.lang.Enum<com.azure.core.annotation.ReturnType>"
  name: "Enum<ReturnType>"
  nameWithType: "Enum<ReturnType>"
  fullName: "java.lang.Enum<com.azure.core.annotation.ReturnType>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
