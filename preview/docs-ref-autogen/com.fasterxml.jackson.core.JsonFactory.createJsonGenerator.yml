### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.JsonFactory.createJsonGenerator*"
fullName: "com.fasterxml.jackson.core.JsonFactory.createJsonGenerator"
name: "createJsonGenerator"
nameWithType: "JsonFactory.createJsonGenerator"
members:
- uid: "com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream)"
  fullName: "com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(OutputStream out)"
  name: "createJsonGenerator(OutputStream out)"
  nameWithType: "JsonFactory.createJsonGenerator(OutputStream out)"
  summary: "Convenience method for constructing generator that uses default encoding of the format (UTF-8 for JSON and most other data formats).\n\nNote: there are formats that use fixed encoding (like most binary data formats)."
  parameters:
  - name: "out"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonGenerator createJsonGenerator(OutputStream out)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)"
  fullName: "com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(OutputStream out, JsonEncoding enc)"
  name: "createJsonGenerator(OutputStream out, JsonEncoding enc)"
  nameWithType: "JsonFactory.createJsonGenerator(OutputStream out, JsonEncoding enc)"
  summary: "Method for constructing JSON generator for writing JSON content using specified output stream. Encoding to use must be specified, and needs to be one of available types (as per JSON specification).\n\nUnderlying stream **is NOT owned** by the generator constructed, so that generator will NOT close the output stream when <xref uid=\"com.fasterxml.jackson.core.JsonGenerator.close*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonGenerator#close\"></xref> is called (unless auto-closing feature, <xref uid=\"com.fasterxml.jackson.core.JsonGenerator.Feature.AUTO_CLOSE_TARGET\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.core.JsonGenerator.Feature#AUTO_CLOSE_TARGET\"></xref> is enabled). Using application needs to close it explicitly if this is the case.\n\nNote: there are formats that use fixed encoding (like most binary data formats) and that ignore passed in encoding."
  parameters:
  - description: "OutputStream to use for writing JSON content"
    name: "out"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "Character encoding to use"
    name: "enc"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonEncoding?alt=com.fasterxml.jackson.core.JsonEncoding&text=JsonEncoding\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonGenerator createJsonGenerator(OutputStream out, JsonEncoding enc)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.Writer)"
  fullName: "com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(Writer out)"
  name: "createJsonGenerator(Writer out)"
  nameWithType: "JsonFactory.createJsonGenerator(Writer out)"
  summary: "Method for constructing JSON generator for writing JSON content using specified Writer.\n\nUnderlying stream **is NOT owned** by the generator constructed, so that generator will NOT close the Reader when <xref uid=\"com.fasterxml.jackson.core.JsonGenerator.close*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonGenerator#close\"></xref> is called (unless auto-closing feature, <xref uid=\"com.fasterxml.jackson.core.JsonGenerator.Feature.AUTO_CLOSE_TARGET\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.core.JsonGenerator.Feature#AUTO_CLOSE_TARGET\"></xref> is enabled). Using application needs to close it explicitly."
  parameters:
  - description: "Writer to use for writing JSON content"
    name: "out"
    type: "<xref href=\"java.io.Writer?alt=java.io.Writer&text=Writer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonGenerator createJsonGenerator(Writer out)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
