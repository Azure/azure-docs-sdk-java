### YamlMime:ManagedReference
items:
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  id: "TextAnalyticsAsyncClient"
  parent: "com.azure.ai.textanalytics"
  children:
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.TextAnalyticsAsyncClient(com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl,com.azure.ai.textanalytics.TextAnalyticsServiceVersion,java.lang.String,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment(java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment(java.lang.String,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentAsyncClient"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(java.lang.Iterable<java.lang.String>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage(java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage(java.lang.String,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageAsyncClient"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.DetectLanguageInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch(java.lang.Iterable<java.lang.String>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhraseAsyncClient"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases(java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases(java.lang.String,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(java.lang.Iterable<java.lang.String>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultCountryHint()"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultLanguage()"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getServiceVersion()"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities(java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities(java.lang.String,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch(java.lang.Iterable<java.lang.String>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntityAsyncClient"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities(java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities(java.lang.String,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch(java.lang.Iterable<java.lang.String>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntityAsyncClient"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities(java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities(java.lang.String,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch(java.lang.Iterable<java.lang.String>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntityAsyncClient"
  langs:
  - "java"
  name: "TextAnalyticsAsyncClient"
  nameWithType: "TextAnalyticsAsyncClient"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  type: "Class"
  package: "com.azure.ai.textanalytics"
  summary: "This class provides an asynchronous client that contains all the operations that apply to Azure Text Analytics. Operations allowed by the client are language detection, sentiment analysis, and recognition entities, Personally Identifiable Information entities, and linked entities of a document or a list of documents.\n\n**Instantiating an asynchronous Text Analytics Client**\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.instantiation\\}\n\nView <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientBuilder</xref> for additional ways to construct the client."
  syntax:
    content: "public final class TextAnalyticsAsyncClient"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.TextAnalyticsAsyncClient(com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl,com.azure.ai.textanalytics.TextAnalyticsServiceVersion,java.lang.String,java.lang.String)"
  id: "TextAnalyticsAsyncClient(com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl,com.azure.ai.textanalytics.TextAnalyticsServiceVersion,java.lang.String,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "TextAnalyticsAsyncClient(TextAnalyticsClientImpl service, TextAnalyticsServiceVersion serviceVersion, String defaultCountryHint, String defaultLanguage)"
  nameWithType: "TextAnalyticsAsyncClient.TextAnalyticsAsyncClient(TextAnalyticsClientImpl service, TextAnalyticsServiceVersion serviceVersion, String defaultCountryHint, String defaultLanguage)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.TextAnalyticsAsyncClient(TextAnalyticsClientImpl service, TextAnalyticsServiceVersion serviceVersion, String defaultCountryHint, String defaultLanguage)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.TextAnalyticsAsyncClient*"
  type: "Constructor"
  package: "com.azure.ai.textanalytics"
  summary: "Create a <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsAsyncClient\" data-throw-if-not-resolved=\"false\">TextAnalyticsAsyncClient</xref> that sends requests to the Text Analytics services's endpoint. Each service call goes through the <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder.pipeline*\" data-throw-if-not-resolved=\"false\">http pipeline</xref>."
  syntax:
    content: " TextAnalyticsAsyncClient(TextAnalyticsClientImpl service, TextAnalyticsServiceVersion serviceVersion, String defaultCountryHint, String defaultLanguage)"
    parameters:
    - id: "service"
      type: "com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl"
      description: "The proxy service used to perform REST calls."
    - id: "serviceVersion"
      type: "com.azure.ai.textanalytics.TextAnalyticsServiceVersion"
      description: "The versions of Azure Text Analytics supported by this client library."
    - id: "defaultCountryHint"
      type: "java.lang.String"
      description: "The default country hint."
    - id: "defaultLanguage"
      type: "java.lang.String"
      description: "The default language."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment(java.lang.String)"
  id: "analyzeSentiment(java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "analyzeSentiment(String text)"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentiment(String text)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment(String text)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a sentiment prediction, as well as confidence scores for each sentiment label (Positive, Negative, and Neutral) for the document and each sentence within it. This method will use the default language that sets up in <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder.defaultLanguage(java.lang.String)\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientBuilder#defaultLanguage(String)</xref>. If none is specified, service will use 'en' as the language.\n\nAnalyze sentiment in a list of documents. Subscribes to the call asynchronously and prints out the sentiment details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment\\#string\\}"
  syntax:
    content: "public Mono<DocumentSentiment> analyzeSentiment(String text)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "The document to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentSentiment>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> contains the <xref uid=\"com.azure.ai.textanalytics.models.DocumentSentiment\" data-throw-if-not-resolved=\"false\">analyzed document sentiment</xref> of the document."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment(java.lang.String,java.lang.String)"
  id: "analyzeSentiment(java.lang.String,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "analyzeSentiment(String text, String language)"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentiment(String text, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment(String text, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a sentiment prediction, as well as confidence scores for each sentiment label (Positive, Negative, and Neutral) for the document and each sentence within it.\n\nAnalyze sentiment in a list of documents. Subscribes to the call asynchronously and prints out the sentiment details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment\\#string-string\\}"
  syntax:
    content: "public Mono<DocumentSentiment> analyzeSentiment(String text, String language)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "The document to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n English as default."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentSentiment>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> contains the <xref uid=\"com.azure.ai.textanalytics.models.DocumentSentiment\" data-throw-if-not-resolved=\"false\">analyzed document sentiment</xref> of the document."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentAsyncClient"
  id: "analyzeSentimentAsyncClient"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "analyzeSentimentAsyncClient"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentimentAsyncClient"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentAsyncClient"
  type: "Field"
  package: "com.azure.ai.textanalytics"
  syntax:
    content: "final AnalyzeSentimentAsyncClient analyzeSentimentAsyncClient"
    return:
      type: "com.azure.ai.textanalytics.AnalyzeSentimentAsyncClient"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "analyzeSentimentBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "analyzeSentimentBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentimentBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a sentiment prediction, as well as confidence scores for each sentiment label (Positive, Negative, and Neutral) for the document and each sentence within it.\n\nAnalyze sentiment in a list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">document</xref> with provided request options. Subscribes to the call asynchronously and prints out the sentiment details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch\\#Iterable-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<AnalyzeSentimentResult> analyzeSentimentBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>"
      description: "A list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref>  to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.AnalyzeSentimentResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.AnalyzeSentimentResult\" data-throw-if-not-resolved=\"false\">analyzed text sentiment document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(java.lang.Iterable<java.lang.String>)"
  id: "analyzeSentimentBatch(java.lang.Iterable<java.lang.String>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "analyzeSentimentBatch(Iterable<String> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentimentBatch(Iterable<String> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(Iterable<String> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a sentiment prediction, as well as confidence scores for each sentiment label (Positive, Negative, and Neutral) for the document and each sentence within it. This method will use the default language that sets up in <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder.defaultLanguage(java.lang.String)\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientBuilder#defaultLanguage(String)</xref>. If none is specified, service will use 'en' as the language.\n\nAnalyze sentiment in a list of documents. Subscribes to the call asynchronously and prints out the sentiment details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch\\#Iterable\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<AnalyzeSentimentResult> analyzeSentimentBatch(Iterable<String> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "A list of documents to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.AnalyzeSentimentResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.AnalyzeSentimentResult\" data-throw-if-not-resolved=\"false\">analyzed text sentiment document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  id: "analyzeSentimentBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "analyzeSentimentBatch(Iterable<String> textInputs, String language)"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentimentBatch(Iterable<String> textInputs, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(Iterable<String> textInputs, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a sentiment prediction, as well as confidence scores for each sentiment label (Positive, Negative, and Neutral) for the document and each sentence within it.\n\nAnalyze sentiment in a list of documents with provided language code. Subscribes to the call asynchronously and prints out the sentiment details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch\\#Iterable-String\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<AnalyzeSentimentResult> analyzeSentimentBatch(Iterable<String> textInputs, String language)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "A list of documents to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the document. If not set, uses \"en\" for\n English as default."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.AnalyzeSentimentResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.AnalyzeSentimentResult\" data-throw-if-not-resolved=\"false\">analyzed text sentiment document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "analyzeSentimentBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "analyzeSentimentBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentimentBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a sentiment prediction, as well as confidence scores for each sentiment label (Positive, Negative, and Neutral) for the document and each sentence within it.\n\nAnalyze sentiment in a list of documents with provided language code and request options. Subscribes to the call asynchronously and prints out the sentiment details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch\\#Iterable-String-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<AnalyzeSentimentResult> analyzeSentimentBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "A list of documents to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the document. If not set, uses \"en\" for\n English as default."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.AnalyzeSentimentResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.AnalyzeSentimentResult\" data-throw-if-not-resolved=\"false\">analyzed text sentiment document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage(java.lang.String)"
  id: "detectLanguage(java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "detectLanguage(String text)"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguage(String text)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage(String text)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns the detected language and a confidence score between zero and one. Scores close to one indicate 100% certainty that the identified language is true. This method will use the default country hint that sets up in <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder.defaultCountryHint(java.lang.String)\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientBuilder#defaultCountryHint(String)</xref>. If none is specified, service will use 'US' as the country hint.\n\n**Code sample**\n\nDetects language in a document. Subscribes to the call asynchronously and prints out the detected language details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage\\#string\\}"
  syntax:
    content: "public Mono<DetectedLanguage> detectLanguage(String text)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "The document to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DetectedLanguage>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DetectedLanguage\" data-throw-if-not-resolved=\"false\">detected language</xref> of the document."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage(java.lang.String,java.lang.String)"
  id: "detectLanguage(java.lang.String,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "detectLanguage(String text, String countryHint)"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguage(String text, String countryHint)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage(String text, String countryHint)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a <xref uid=\"\" data-throw-if-not-resolved=\"false\">Response</xref> contains the detected language and a confidence score between zero and one. Scores close to one indicate 100% certainty that the identified language is true.\n\n**Code sample**\n\nDetects language with http response in a document with a provided country hint. Subscribes to the call asynchronously and prints out the detected language details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage\\#string-string\\}"
  syntax:
    content: "public Mono<DetectedLanguage> detectLanguage(String text, String countryHint)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "The document to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "countryHint"
      type: "java.lang.String"
      description: "Accepts two letter country codes specified by ISO 3166-1 alpha-2. Defaults to \"US\" if not\n specified. To remove this behavior you can reset this parameter by setting this value to empty string\n <code>countryHint</code> = \"\" or \"none\"."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DetectedLanguage>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> contains a <xref uid=\"com.azure.ai.textanalytics.models.DetectedLanguage\" data-throw-if-not-resolved=\"false\">detected language</xref> of the document."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageAsyncClient"
  id: "detectLanguageAsyncClient"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "detectLanguageAsyncClient"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguageAsyncClient"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageAsyncClient"
  type: "Field"
  package: "com.azure.ai.textanalytics"
  syntax:
    content: "final DetectLanguageAsyncClient detectLanguageAsyncClient"
    return:
      type: "com.azure.ai.textanalytics.DetectLanguageAsyncClient"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.DetectLanguageInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "detectLanguageBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.DetectLanguageInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "detectLanguageBatch(Iterable<DetectLanguageInput> textInputs, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguageBatch(Iterable<DetectLanguageInput> textInputs, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch(Iterable<DetectLanguageInput> textInputs, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns the detected language for a batch of <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageInput\" data-throw-if-not-resolved=\"false\">document</xref> with provided request options.\n\n**Code sample**\n\nDetects language in a batch of <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageInput\" data-throw-if-not-resolved=\"false\">document</xref> with provided request options. Subscribes to the call asynchronously and prints out the detected language details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch\\#Iterable-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<DetectLanguageResult> detectLanguageBatch(Iterable<DetectLanguageInput> textInputs, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<com.azure.ai.textanalytics.models.DetectLanguageInput>"
      description: "The list of <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref> to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.DetectLanguageResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageResult\" data-throw-if-not-resolved=\"false\">detected language document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch(java.lang.Iterable<java.lang.String>)"
  id: "detectLanguageBatch(java.lang.Iterable<java.lang.String>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "detectLanguageBatch(Iterable<String> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguageBatch(Iterable<String> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch(Iterable<String> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns the detected language for each of documents. This method will use the default country hint that sets up in <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder.defaultCountryHint(java.lang.String)\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientBuilder#defaultCountryHint(String)</xref>. If none is specified, service will use 'US' as the country hint.\n\n**Code sample**\n\nDetects language in a list of documents. Subscribes to the call asynchronously and prints out the detected language details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch\\#Iterable\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<DetectLanguageResult> detectLanguageBatch(Iterable<String> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "The list of documents to detect languages for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.DetectLanguageResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageResult\" data-throw-if-not-resolved=\"false\">detected language document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  id: "detectLanguageBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "detectLanguageBatch(Iterable<String> textInputs, String countryHint)"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguageBatch(Iterable<String> textInputs, String countryHint)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch(Iterable<String> textInputs, String countryHint)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns the detected language for each of documents with the provided country hint.\n\n**Code sample**\n\nDetects language in a list of documents with a provided country hint for the batch. Subscribes to the call asynchronously and prints out the detected language details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch\\#Iterable-String\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<DetectLanguageResult> detectLanguageBatch(Iterable<String> textInputs, String countryHint)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "The list of documents to detect languages for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "countryHint"
      type: "java.lang.String"
      description: "Accepts two letter country codes specified by ISO 3166-1 alpha-2. Defaults to \"US\" if not\n specified. To remove this behavior you can reset this parameter by setting this value to empty string\n <code>countryHint</code> = \"\" or \"none\"."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.DetectLanguageResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageResult\" data-throw-if-not-resolved=\"false\">detected language document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "detectLanguageBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "detectLanguageBatch(Iterable<String> textInputs, String countryHint, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguageBatch(Iterable<String> textInputs, String countryHint, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch(Iterable<String> textInputs, String countryHint, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns the detected language for each of documents with the provided country hint and request option.\n\n**Code sample**\n\nDetects language in a list of documents with a provided country hint and request option for the batch. Subscribes to the call asynchronously and prints out the detected language details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch\\#Iterable-String-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<DetectLanguageResult> detectLanguageBatch(Iterable<String> textInputs, String countryHint, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "The list of documents to detect languages for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "countryHint"
      type: "java.lang.String"
      description: "Accepts two letter country codes specified by ISO 3166-1 alpha-2. Defaults to \"US\" if not\n specified. To remove this behavior you can reset this parameter by setting this value to empty string\n <code>countryHint</code> = \"\" or \"none\"."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.DetectLanguageResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageResult\" data-throw-if-not-resolved=\"false\">detected language document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhraseAsyncClient"
  id: "extractKeyPhraseAsyncClient"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "extractKeyPhraseAsyncClient"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhraseAsyncClient"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhraseAsyncClient"
  type: "Field"
  package: "com.azure.ai.textanalytics"
  syntax:
    content: "final ExtractKeyPhraseAsyncClient extractKeyPhraseAsyncClient"
    return:
      type: "com.azure.ai.textanalytics.ExtractKeyPhraseAsyncClient"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases(java.lang.String)"
  id: "extractKeyPhrases(java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "extractKeyPhrases(String text)"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrases(String text)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases(String text)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of strings denoting the key phrases in the document. This method will use the default language that sets up in <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder.defaultLanguage(java.lang.String)\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientBuilder#defaultLanguage(String)</xref>. If none is specified, service will use 'en' as the language.\n\nExtract key phrases in a document. Subscribes to the call asynchronously and prints out the key phrases when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases\\#string\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<String> extractKeyPhrases(String text)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "The document to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<java.lang.String>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of extracted key phrases."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases(java.lang.String,java.lang.String)"
  id: "extractKeyPhrases(java.lang.String,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "extractKeyPhrases(String text, String language)"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrases(String text, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases(String text, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of strings denoting the key phrases in the document. See  for the list of enabled languages.\n\nExtract key phrases in a document with a provided language code. Subscribes to the call asynchronously and prints out the key phrases when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases\\#string-string\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<String> extractKeyPhrases(String text, String language)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "The document to be analyzed. For text length limits, maximum batch size, and supported text encoding,\n see <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n English as default."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<java.lang.String>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of extracted key phrases."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "extractKeyPhrasesBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "extractKeyPhrasesBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrasesBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of strings denoting the key phrases in the document with provided request options. See  for the list of enabled languages.\n\nExtract key phrases in a list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">document</xref> with provided request options. Subscribes to the call asynchronously and prints out the key phrases when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch\\#Iterable-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<ExtractKeyPhraseResult> extractKeyPhrasesBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>"
      description: "A list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref>  to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.ExtractKeyPhraseResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"false\">extracted key phrases document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(java.lang.Iterable<java.lang.String>)"
  id: "extractKeyPhrasesBatch(java.lang.Iterable<java.lang.String>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "extractKeyPhrasesBatch(Iterable<String> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrasesBatch(Iterable<String> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(Iterable<String> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of strings denoting the key phrases in the document. This method will use the default language that sets up in <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder.defaultLanguage(java.lang.String)\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientBuilder#defaultLanguage(String)</xref>. If none is specified, service will use 'en' as the language.\n\nExtract key phrases in a list of documents. Subscribes to the call asynchronously and prints out the key phrases when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch\\#Iterable\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<ExtractKeyPhraseResult> extractKeyPhrasesBatch(Iterable<String> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "A list of documents to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.ExtractKeyPhraseResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"false\">extracted key phrases document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  id: "extractKeyPhrasesBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "extractKeyPhrasesBatch(Iterable<String> textInputs, String language)"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrasesBatch(Iterable<String> textInputs, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(Iterable<String> textInputs, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of strings denoting the key phrases in the document with provided language code. See  for the list of enabled languages.\n\nExtract key phrases in a list of documents with a provided language code. Subscribes to the call asynchronously and prints out the key phrases when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch\\#Iterable-String\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<ExtractKeyPhraseResult> extractKeyPhrasesBatch(Iterable<String> textInputs, String language)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "A list of documents to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n English as default."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.ExtractKeyPhraseResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"false\">extracted key phrases document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "extractKeyPhrasesBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "extractKeyPhrasesBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrasesBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of strings denoting the key phrases in the document with provided language code and request options. See  for the list of enabled languages.\n\nExtract key phrases in a list of documents with a provided language and request options. Subscribes to the call asynchronously and prints out the key phrases when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch\\#Iterable-String-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<ExtractKeyPhraseResult> extractKeyPhrasesBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "A list of documents to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n English as default."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.ExtractKeyPhraseResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"false\">extracted key phrases document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultCountryHint()"
  id: "getDefaultCountryHint()"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "getDefaultCountryHint()"
  nameWithType: "TextAnalyticsAsyncClient.getDefaultCountryHint()"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultCountryHint()"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultCountryHint*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Get default country hint code."
  syntax:
    content: "public String getDefaultCountryHint()"
    return:
      type: "java.lang.String"
      description: "the default country hint code"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultLanguage()"
  id: "getDefaultLanguage()"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "getDefaultLanguage()"
  nameWithType: "TextAnalyticsAsyncClient.getDefaultLanguage()"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultLanguage()"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultLanguage*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Get default language when the builder is setup."
  syntax:
    content: "public String getDefaultLanguage()"
    return:
      type: "java.lang.String"
      description: "the default language"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getServiceVersion()"
  id: "getServiceVersion()"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "getServiceVersion()"
  nameWithType: "TextAnalyticsAsyncClient.getServiceVersion()"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getServiceVersion()"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getServiceVersion*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Gets the service version the client is using."
  syntax:
    content: "public TextAnalyticsServiceVersion getServiceVersion()"
    return:
      type: "com.azure.ai.textanalytics.TextAnalyticsServiceVersion"
      description: "the service version the client is using."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities(java.lang.String)"
  id: "recognizeEntities(java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeEntities(String text)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeEntities(String text)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities(String text)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of general categorized entities in the provided document. For a list of supported entity types, check: . For a list of enabled languages, check: . This method will use the default language that sets up in <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder.defaultLanguage(java.lang.String)\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientBuilder#defaultLanguage(String)</xref>. If none is specified, service will use 'en' as the language.\n\n**Code sample**\n\nRecognize entities in a document. Subscribes to the call asynchronously and prints out the recognized entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities\\#string\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<CategorizedEntity> recognizeEntities(String text)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "The document to recognize entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.CategorizedEntity>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.CategorizedEntity\" data-throw-if-not-resolved=\"false\">recognized categorized entities</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities(java.lang.String,java.lang.String)"
  id: "recognizeEntities(java.lang.String,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeEntities(String text, String language)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeEntities(String text, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities(String text, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of general categorized entities in the provided document. For a list of supported entity types, check: . For a list of enabled languages, check: .\n\n**Code sample**\n\nRecognize entities in a document with provided language code. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities\\#string-string\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<CategorizedEntity> recognizeEntities(String text, String language)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "the text to recognize entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language. If not set, uses \"en\" for English as\n default."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.CategorizedEntity>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.CategorizedEntity\" data-throw-if-not-resolved=\"false\">recognized categorized entities</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "recognizeEntitiesBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeEntitiesBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeEntitiesBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of general categorized entities for the provided list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">document</xref> with provided request options.\n\n**Code sample**\n\nRecognize entities in a list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">document</xref>. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeCategorizedEntitiesBatch\\#Iterable-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<RecognizeCategorizedEntitiesResult> recognizeEntitiesBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>"
      description: "A list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref> to recognize entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.RecognizeCategorizedEntitiesResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizeCategorizedEntitiesResult\" data-throw-if-not-resolved=\"false\">recognized categorized entities document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch(java.lang.Iterable<java.lang.String>)"
  id: "recognizeEntitiesBatch(java.lang.Iterable<java.lang.String>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeEntitiesBatch(Iterable<String> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeEntitiesBatch(Iterable<String> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch(Iterable<String> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of general categorized entities for the provided list of documents. This method will use the default language that sets up in <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder.defaultLanguage(java.lang.String)\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientBuilder#defaultLanguage(String)</xref>. If none is specified, service will use 'en' as the language.\n\n**Code sample**\n\nRecognize entities in a document. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeCategorizedEntitiesBatch\\#Iterable\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<RecognizeCategorizedEntitiesResult> recognizeEntitiesBatch(Iterable<String> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "A list of documents to recognize entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.RecognizeCategorizedEntitiesResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizeCategorizedEntitiesResult\" data-throw-if-not-resolved=\"false\">recognized categorized entities document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  id: "recognizeEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeEntitiesBatch(Iterable<String> textInputs, String language)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeEntitiesBatch(Iterable<String> textInputs, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch(Iterable<String> textInputs, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of general categorized entities for the provided list of documents with provided language code.\n\n**Code sample**\n\nRecognize entities in a document with the provided language code. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeCategorizedEntitiesBatch\\#Iterable-String\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<RecognizeCategorizedEntitiesResult> recognizeEntitiesBatch(Iterable<String> textInputs, String language)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "A list of documents to recognize entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language. If not set, uses \"en\" for English as\n default."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.RecognizeCategorizedEntitiesResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizeCategorizedEntitiesResult\" data-throw-if-not-resolved=\"false\">recognized categorized entities document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "recognizeEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeEntitiesBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeEntitiesBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of general categorized entities for the provided list of documents with the provided language code and request options.\n\n**Code sample**\n\nRecognize entities in a document with the provided language code. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeCategorizedEntitiesBatch\\#Iterable-String-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<RecognizeCategorizedEntitiesResult> recognizeEntitiesBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "A list of documents to recognize entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language. If not set, uses \"en\" for English as\n default."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.RecognizeCategorizedEntitiesResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizeCategorizedEntitiesResult\" data-throw-if-not-resolved=\"false\">recognized categorized entities document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntityAsyncClient"
  id: "recognizeEntityAsyncClient"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeEntityAsyncClient"
  nameWithType: "TextAnalyticsAsyncClient.recognizeEntityAsyncClient"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntityAsyncClient"
  type: "Field"
  package: "com.azure.ai.textanalytics"
  syntax:
    content: "final RecognizeEntityAsyncClient recognizeEntityAsyncClient"
    return:
      type: "com.azure.ai.textanalytics.RecognizeEntityAsyncClient"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities(java.lang.String)"
  id: "recognizeLinkedEntities(java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeLinkedEntities(String text)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeLinkedEntities(String text)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities(String text)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of recognized entities with links to a well-known knowledge base for the provided document. See  for supported languages in Text Analytics API. This method will use the default language that sets up in <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder.defaultLanguage(java.lang.String)\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientBuilder#defaultLanguage(String)</xref>. If none is specified, service will use 'en' as the language.\n\nRecognize linked entities in a document. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities\\#string\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<LinkedEntity> recognizeLinkedEntities(String text)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "The document to recognize linked entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.LinkedEntity>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of <xref uid=\"com.azure.ai.textanalytics.models.LinkedEntity\" data-throw-if-not-resolved=\"false\">recognized linked entities</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities(java.lang.String,java.lang.String)"
  id: "recognizeLinkedEntities(java.lang.String,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeLinkedEntities(String text, String language)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeLinkedEntities(String text, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities(String text, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of recognized entities with links to a well-known knowledge base for the provided document. See  for supported languages in Text Analytics API.\n\nRecognize linked entities in a text with provided language code. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities\\#string-string\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<LinkedEntity> recognizeLinkedEntities(String text, String language)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "The document to recognize linked entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the document. If not set, uses \"en\" for\n English as default."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.LinkedEntity>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of <xref uid=\"com.azure.ai.textanalytics.models.LinkedEntity\" data-throw-if-not-resolved=\"false\">recognized linked entities</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "recognizeLinkedEntitiesBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeLinkedEntitiesBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of recognized entities with links to a well-known knowledge base for the list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">document</xref> with provided request options. See  supported languages in Text Analytics API.\n\nRecognize linked entities in a list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">document</xref> and provided request options to show statistics. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch\\#Iterable-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<RecognizeLinkedEntitiesResult> recognizeLinkedEntitiesBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>"
      description: "A list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref> to recognize linked entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.LinkedEntity\" data-throw-if-not-resolved=\"false\">recognized linked entities document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch(java.lang.Iterable<java.lang.String>)"
  id: "recognizeLinkedEntitiesBatch(java.lang.Iterable<java.lang.String>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeLinkedEntitiesBatch(Iterable<String> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch(Iterable<String> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch(Iterable<String> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of recognized entities with links to a well-known knowledge base for the list of documents. See  for supported languages in Text Analytics API. This method will use the default language that sets up in <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder.defaultLanguage(java.lang.String)\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientBuilder#defaultLanguage(String)</xref>. If none is specified, service will use 'en' as the language.\n\nRecognize linked entities in a list of documents. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch\\#Iterable\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<RecognizeLinkedEntitiesResult> recognizeLinkedEntitiesBatch(Iterable<String> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "A list of documents to recognize linked entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.LinkedEntity\" data-throw-if-not-resolved=\"false\">recognized linked entities document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  id: "recognizeLinkedEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeLinkedEntitiesBatch(Iterable<String> textInputs, String language)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch(Iterable<String> textInputs, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch(Iterable<String> textInputs, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of recognized entities with links to a well-known knowledge base for the list of documents with provided language code. See  for supported languages in Text Analytics API.\n\nRecognize linked entities in a list of documents with provided language code. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch\\#Iterable-String\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<RecognizeLinkedEntitiesResult> recognizeLinkedEntitiesBatch(Iterable<String> textInputs, String language)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "A list of documents to recognize linked entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n English as default."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.LinkedEntity\" data-throw-if-not-resolved=\"false\">recognized linked entities document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "recognizeLinkedEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeLinkedEntitiesBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of recognized entities with links to a well-known knowledge base for the list of documents with provided language code and request options. See  for supported languages in Text Analytics API.\n\nRecognize linked entities in a list of documents with provided language code. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch\\#Iterable-String-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<RecognizeLinkedEntitiesResult> recognizeLinkedEntitiesBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "A list of documents to recognize linked entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n English as default."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.LinkedEntity\" data-throw-if-not-resolved=\"false\">recognized linked entities document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntityAsyncClient"
  id: "recognizeLinkedEntityAsyncClient"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeLinkedEntityAsyncClient"
  nameWithType: "TextAnalyticsAsyncClient.recognizeLinkedEntityAsyncClient"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntityAsyncClient"
  type: "Field"
  package: "com.azure.ai.textanalytics"
  syntax:
    content: "final RecognizeLinkedEntityAsyncClient recognizeLinkedEntityAsyncClient"
    return:
      type: "com.azure.ai.textanalytics.RecognizeLinkedEntityAsyncClient"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities(java.lang.String)"
  id: "recognizePiiEntities(java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizePiiEntities(String text)"
  nameWithType: "TextAnalyticsAsyncClient.recognizePiiEntities(String text)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities(String text)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of personal information entities (\"SSN\", \"Bank Account\", etc) in the document. For the list of supported entity types, check . See  for the list of enabled languages. This method will use the default language that sets up in <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder.defaultLanguage(java.lang.String)\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientBuilder#defaultLanguage(String)</xref>. If none is specified, service will use 'en' as the language.\n\n**Code sample**\n\nRecognize Personally Identifiable Information entities in a document. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities\\#string\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<PiiEntity> recognizePiiEntities(String text)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "The text to recognize Personally Identifiable Information entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.PiiEntity>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.PiiEntity\" data-throw-if-not-resolved=\"false\">Personally Identifiable Information entities</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities(java.lang.String,java.lang.String)"
  id: "recognizePiiEntities(java.lang.String,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizePiiEntities(String text, String language)"
  nameWithType: "TextAnalyticsAsyncClient.recognizePiiEntities(String text, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities(String text, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of personal information entities (\"SSN\", \"Bank Account\", etc) in the document with provided language code. For the list of supported entity types, check: . For a list of enabled languages, check: .\n\n**Code sample**\n\nRecognize Personally Identifiable Information entities in a document with provided language code. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities\\#string-string\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<PiiEntity> recognizePiiEntities(String text, String language)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "The document to recognize Personally Identifiable Information entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the document. If not set, uses \"en\" for\n English as default."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.PiiEntity>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.PiiEntity\" data-throw-if-not-resolved=\"false\">Personally Identifiable Information entities</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "recognizePiiEntitiesBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizePiiEntitiesBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.recognizePiiEntitiesBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of personal information entities (\"SSN\", \"Bank Account\", etc) in the batch of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">document</xref> with provided request options. For the list of supported entity types,check: . For a list of enabled languages, check: .\n\n**Code sample**\n\nRecognize Personally Identifiable Information entities in a list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">document</xref> with provided request options. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch\\#Iterable-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<RecognizePiiEntitiesResult> recognizePiiEntitiesBatch(Iterable<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>"
      description: "A list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref> to recognize\n Personally Identifiable Information entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult\" data-throw-if-not-resolved=\"false\">recognized Personally Identifiable Information entities document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch(java.lang.Iterable<java.lang.String>)"
  id: "recognizePiiEntitiesBatch(java.lang.Iterable<java.lang.String>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizePiiEntitiesBatch(Iterable<String> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.recognizePiiEntitiesBatch(Iterable<String> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch(Iterable<String> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of personal information entities (\"SSN\", \"Bank Account\", etc) in the list of documents. For the list of supported entity types, check: . For a list of enabled languages, check:  for the list of enabled languages. This method will use the default language that sets up in <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder.defaultLanguage(java.lang.String)\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientBuilder#defaultLanguage(String)</xref>. If none is specified, service will use 'en' as the language.\n\n**Code sample**\n\nRecognize Personally Identifiable Information entities in a list of documents. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch\\#Iterable\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<RecognizePiiEntitiesResult> recognizePiiEntitiesBatch(Iterable<String> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "A list of documents to recognize Personally Identifiable Information entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult\" data-throw-if-not-resolved=\"false\">recognized Personally Identifiable Information entities document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  id: "recognizePiiEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizePiiEntitiesBatch(Iterable<String> textInputs, String language)"
  nameWithType: "TextAnalyticsAsyncClient.recognizePiiEntitiesBatch(Iterable<String> textInputs, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch(Iterable<String> textInputs, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of personal information entities (\"SSN\", \"Bank Account\", etc) in the list of documents with provided language code. For the list of supported entity types, check . For a list of enabled languages, check: .\n\n**Code sample**\n\nRecognize Personally Identifiable Information entities in a list of documents with provided language code. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch\\#Iterable-String\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<RecognizePiiEntitiesResult> recognizePiiEntitiesBatch(Iterable<String> textInputs, String language)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "A list of documents to recognize Personally Identifiable Information entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the document. If not set, uses \"en\" for\n English as default."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult\" data-throw-if-not-resolved=\"false\">recognized Personally Identifiable Information entities document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "recognizePiiEntitiesBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizePiiEntitiesBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.recognizePiiEntitiesBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of personal information entities (\"SSN\", \"Bank Account\", etc) in the list of documents with provided language code and request options. For the list of supported entity types, check . For a list of enabled languages, check: .\n\n**Code sample**\n\nRecognize Personally Identifiable Information entities in a list of documents with provided language code and request options. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch\\#Iterable-String-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public TextAnalyticsPagedFlux<RecognizePiiEntitiesResult> recognizePiiEntitiesBatch(Iterable<String> textInputs, String language, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.lang.Iterable<java.lang.String>"
      description: "A list of documents to recognize Personally Identifiable Information entities for.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the document. If not set, uses \"en\" for\n English as default."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult>"
      description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult\" data-throw-if-not-resolved=\"false\">recognized Personally Identifiable Information entities document result</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntityAsyncClient"
  id: "recognizePiiEntityAsyncClient"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizePiiEntityAsyncClient"
  nameWithType: "TextAnalyticsAsyncClient.recognizePiiEntityAsyncClient"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntityAsyncClient"
  type: "Field"
  package: "com.azure.ai.textanalytics"
  syntax:
    content: "final RecognizePiiEntityAsyncClient recognizePiiEntityAsyncClient"
    return:
      type: "com.azure.ai.textanalytics.RecognizePiiEntityAsyncClient"
references:
- uid: "com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl"
  name: "TextAnalyticsClientImpl"
  nameWithType: "TextAnalyticsClientImpl"
  fullName: "com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl"
- uid: "com.azure.ai.textanalytics.TextAnalyticsServiceVersion"
  name: "TextAnalyticsServiceVersion"
  nameWithType: "TextAnalyticsServiceVersion"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsServiceVersion"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.TextAnalyticsAsyncClient*"
  name: "TextAnalyticsAsyncClient"
  nameWithType: "TextAnalyticsAsyncClient.TextAnalyticsAsyncClient"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.TextAnalyticsAsyncClient"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultCountryHint*"
  name: "getDefaultCountryHint"
  nameWithType: "TextAnalyticsAsyncClient.getDefaultCountryHint"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultCountryHint"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultLanguage*"
  name: "getDefaultLanguage"
  nameWithType: "TextAnalyticsAsyncClient.getDefaultLanguage"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultLanguage"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getServiceVersion*"
  name: "getServiceVersion"
  nameWithType: "TextAnalyticsAsyncClient.getServiceVersion"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getServiceVersion"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DetectedLanguage>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DetectedLanguage"
    name: "DetectedLanguage"
    fullName: "com.azure.ai.textanalytics.models.DetectedLanguage"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage*"
  name: "detectLanguage"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguage"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage"
  package: "com.azure.ai.textanalytics"
- uid: "java.lang.Iterable<java.lang.String>"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.DetectLanguageResult>"
  spec.java:
  - uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
    name: "TextAnalyticsPagedFlux"
    fullName: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DetectLanguageResult"
    name: "DetectLanguageResult"
    fullName: "com.azure.ai.textanalytics.models.DetectLanguageResult"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch*"
  name: "detectLanguageBatch"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguageBatch"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageBatch"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
  name: "TextAnalyticsRequestOptions"
  nameWithType: "TextAnalyticsRequestOptions"
  fullName: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
- uid: "java.lang.Iterable<com.azure.ai.textanalytics.models.DetectLanguageInput>"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DetectLanguageInput"
    name: "DetectLanguageInput"
    fullName: "com.azure.ai.textanalytics.models.DetectLanguageInput"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.CategorizedEntity>"
  spec.java:
  - uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
    name: "TextAnalyticsPagedFlux"
    fullName: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.CategorizedEntity"
    name: "CategorizedEntity"
    fullName: "com.azure.ai.textanalytics.models.CategorizedEntity"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities*"
  name: "recognizeEntities"
  nameWithType: "TextAnalyticsAsyncClient.recognizeEntities"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.RecognizeCategorizedEntitiesResult>"
  spec.java:
  - uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
    name: "TextAnalyticsPagedFlux"
    fullName: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.RecognizeCategorizedEntitiesResult"
    name: "RecognizeCategorizedEntitiesResult"
    fullName: "com.azure.ai.textanalytics.models.RecognizeCategorizedEntitiesResult"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch*"
  name: "recognizeEntitiesBatch"
  nameWithType: "TextAnalyticsAsyncClient.recognizeEntitiesBatch"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesBatch"
  package: "com.azure.ai.textanalytics"
- uid: "java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.TextDocumentInput"
    name: "TextDocumentInput"
    fullName: "com.azure.ai.textanalytics.models.TextDocumentInput"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.PiiEntity>"
  spec.java:
  - uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
    name: "TextAnalyticsPagedFlux"
    fullName: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.PiiEntity"
    name: "PiiEntity"
    fullName: "com.azure.ai.textanalytics.models.PiiEntity"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities*"
  name: "recognizePiiEntities"
  nameWithType: "TextAnalyticsAsyncClient.recognizePiiEntities"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult>"
  spec.java:
  - uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
    name: "TextAnalyticsPagedFlux"
    fullName: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult"
    name: "RecognizePiiEntitiesResult"
    fullName: "com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch*"
  name: "recognizePiiEntitiesBatch"
  nameWithType: "TextAnalyticsAsyncClient.recognizePiiEntitiesBatch"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesBatch"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.LinkedEntity>"
  spec.java:
  - uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
    name: "TextAnalyticsPagedFlux"
    fullName: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.LinkedEntity"
    name: "LinkedEntity"
    fullName: "com.azure.ai.textanalytics.models.LinkedEntity"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities*"
  name: "recognizeLinkedEntities"
  nameWithType: "TextAnalyticsAsyncClient.recognizeLinkedEntities"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult>"
  spec.java:
  - uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
    name: "TextAnalyticsPagedFlux"
    fullName: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult"
    name: "RecognizeLinkedEntitiesResult"
    fullName: "com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch*"
  name: "recognizeLinkedEntitiesBatch"
  nameWithType: "TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesBatch"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<java.lang.String>"
  spec.java:
  - uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
    name: "TextAnalyticsPagedFlux"
    fullName: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases*"
  name: "extractKeyPhrases"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrases"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.ExtractKeyPhraseResult>"
  spec.java:
  - uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
    name: "TextAnalyticsPagedFlux"
    fullName: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.ExtractKeyPhraseResult"
    name: "ExtractKeyPhraseResult"
    fullName: "com.azure.ai.textanalytics.models.ExtractKeyPhraseResult"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch*"
  name: "extractKeyPhrasesBatch"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrasesBatch"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentSentiment>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DocumentSentiment"
    name: "DocumentSentiment"
    fullName: "com.azure.ai.textanalytics.models.DocumentSentiment"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment*"
  name: "analyzeSentiment"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentiment"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux<com.azure.ai.textanalytics.models.AnalyzeSentimentResult>"
  spec.java:
  - uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
    name: "TextAnalyticsPagedFlux"
    fullName: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.AnalyzeSentimentResult"
    name: "AnalyzeSentimentResult"
    fullName: "com.azure.ai.textanalytics.models.AnalyzeSentimentResult"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch*"
  name: "analyzeSentimentBatch"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentimentBatch"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.DetectLanguageAsyncClient"
  name: "DetectLanguageAsyncClient"
  nameWithType: "DetectLanguageAsyncClient"
  fullName: "com.azure.ai.textanalytics.DetectLanguageAsyncClient"
- uid: "com.azure.ai.textanalytics.AnalyzeSentimentAsyncClient"
  name: "AnalyzeSentimentAsyncClient"
  nameWithType: "AnalyzeSentimentAsyncClient"
  fullName: "com.azure.ai.textanalytics.AnalyzeSentimentAsyncClient"
- uid: "com.azure.ai.textanalytics.ExtractKeyPhraseAsyncClient"
  name: "ExtractKeyPhraseAsyncClient"
  nameWithType: "ExtractKeyPhraseAsyncClient"
  fullName: "com.azure.ai.textanalytics.ExtractKeyPhraseAsyncClient"
- uid: "com.azure.ai.textanalytics.RecognizeEntityAsyncClient"
  name: "RecognizeEntityAsyncClient"
  nameWithType: "RecognizeEntityAsyncClient"
  fullName: "com.azure.ai.textanalytics.RecognizeEntityAsyncClient"
- uid: "com.azure.ai.textanalytics.RecognizePiiEntityAsyncClient"
  name: "RecognizePiiEntityAsyncClient"
  nameWithType: "RecognizePiiEntityAsyncClient"
  fullName: "com.azure.ai.textanalytics.RecognizePiiEntityAsyncClient"
- uid: "com.azure.ai.textanalytics.RecognizeLinkedEntityAsyncClient"
  name: "RecognizeLinkedEntityAsyncClient"
  nameWithType: "RecognizeLinkedEntityAsyncClient"
  fullName: "com.azure.ai.textanalytics.RecognizeLinkedEntityAsyncClient"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.ai.textanalytics.models.DetectedLanguage"
  name: "DetectedLanguage"
  nameWithType: "DetectedLanguage"
  fullName: "com.azure.ai.textanalytics.models.DetectedLanguage"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "java.lang.Iterable"
  name: "Iterable"
  nameWithType: "Iterable"
  fullName: "java.lang.Iterable"
- uid: "com.azure.ai.textanalytics.models.DetectLanguageResult"
  name: "DetectLanguageResult"
  nameWithType: "DetectLanguageResult"
  fullName: "com.azure.ai.textanalytics.models.DetectLanguageResult"
- uid: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
  name: "TextAnalyticsPagedFlux"
  nameWithType: "TextAnalyticsPagedFlux"
  fullName: "com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux"
- uid: "com.azure.ai.textanalytics.models.DetectLanguageInput"
  name: "DetectLanguageInput"
  nameWithType: "DetectLanguageInput"
  fullName: "com.azure.ai.textanalytics.models.DetectLanguageInput"
- uid: "com.azure.ai.textanalytics.models.CategorizedEntity"
  name: "CategorizedEntity"
  nameWithType: "CategorizedEntity"
  fullName: "com.azure.ai.textanalytics.models.CategorizedEntity"
- uid: "com.azure.ai.textanalytics.models.RecognizeCategorizedEntitiesResult"
  name: "RecognizeCategorizedEntitiesResult"
  nameWithType: "RecognizeCategorizedEntitiesResult"
  fullName: "com.azure.ai.textanalytics.models.RecognizeCategorizedEntitiesResult"
- uid: "com.azure.ai.textanalytics.models.TextDocumentInput"
  name: "TextDocumentInput"
  nameWithType: "TextDocumentInput"
  fullName: "com.azure.ai.textanalytics.models.TextDocumentInput"
- uid: "com.azure.ai.textanalytics.models.PiiEntity"
  name: "PiiEntity"
  nameWithType: "PiiEntity"
  fullName: "com.azure.ai.textanalytics.models.PiiEntity"
- uid: "com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult"
  name: "RecognizePiiEntitiesResult"
  nameWithType: "RecognizePiiEntitiesResult"
  fullName: "com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult"
- uid: "com.azure.ai.textanalytics.models.LinkedEntity"
  name: "LinkedEntity"
  nameWithType: "LinkedEntity"
  fullName: "com.azure.ai.textanalytics.models.LinkedEntity"
- uid: "com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult"
  name: "RecognizeLinkedEntitiesResult"
  nameWithType: "RecognizeLinkedEntitiesResult"
  fullName: "com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult"
- uid: "com.azure.ai.textanalytics.models.ExtractKeyPhraseResult"
  name: "ExtractKeyPhraseResult"
  nameWithType: "ExtractKeyPhraseResult"
  fullName: "com.azure.ai.textanalytics.models.ExtractKeyPhraseResult"
- uid: "com.azure.ai.textanalytics.models.DocumentSentiment"
  name: "DocumentSentiment"
  nameWithType: "DocumentSentiment"
  fullName: "com.azure.ai.textanalytics.models.DocumentSentiment"
- uid: "com.azure.ai.textanalytics.models.AnalyzeSentimentResult"
  name: "AnalyzeSentimentResult"
  nameWithType: "AnalyzeSentimentResult"
  fullName: "com.azure.ai.textanalytics.models.AnalyzeSentimentResult"
