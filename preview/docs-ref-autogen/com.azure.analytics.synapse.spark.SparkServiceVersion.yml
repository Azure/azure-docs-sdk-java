### YamlMime:JavaEnum
uid: "com.azure.analytics.synapse.spark.SparkServiceVersion"
fullName: "com.azure.analytics.synapse.spark.SparkServiceVersion"
name: "SparkServiceVersion"
nameWithType: "SparkServiceVersion"
summary: "The versions of Azure Synapse Analytics Access Control supported by this client library."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum SparkServiceVersion extends Enum<SparkServiceVersion> implements ServiceVersion"
fields:
- uid: "com.azure.analytics.synapse.spark.SparkServiceVersion.V2019_11_01_preview"
  fullName: "com.azure.analytics.synapse.spark.SparkServiceVersion.V2019_11_01_preview"
  name: "V2019_11_01_preview"
  nameWithType: "SparkServiceVersion.V2019_11_01_preview"
methods:
- uid: "com.azure.analytics.synapse.spark.SparkServiceVersion.getLatest()"
  fullName: "com.azure.analytics.synapse.spark.SparkServiceVersion.getLatest()"
  name: "getLatest()"
  nameWithType: "SparkServiceVersion.getLatest()"
  summary: "Gets the latest service version supported by this client library"
  syntax: "public static SparkServiceVersion getLatest()"
  returns:
    description: "the latest <xref uid=\"com.azure.analytics.synapse.spark.SparkServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SparkServiceVersion\"></xref>"
    type: "<xref href=\"com.azure.analytics.synapse.spark.SparkServiceVersion?alt=com.azure.analytics.synapse.spark.SparkServiceVersion&text=SparkServiceVersion\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.SparkServiceVersion.getVersion()"
  fullName: "com.azure.analytics.synapse.spark.SparkServiceVersion.getVersion()"
  name: "getVersion()"
  nameWithType: "SparkServiceVersion.getVersion()"
  syntax: "public String getVersion()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.SparkServiceVersion.valueOf(java.lang.String)"
  fullName: "com.azure.analytics.synapse.spark.SparkServiceVersion.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "SparkServiceVersion.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SparkServiceVersion valueOf(String name)"
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.spark.SparkServiceVersion?alt=com.azure.analytics.synapse.spark.SparkServiceVersion&text=SparkServiceVersion\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.SparkServiceVersion.values()"
  fullName: "com.azure.analytics.synapse.spark.SparkServiceVersion.values()"
  name: "values()"
  nameWithType: "SparkServiceVersion.values()"
  syntax: "public static SparkServiceVersion[] values()"
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.spark.SparkServiceVersion?alt=com.azure.analytics.synapse.spark.SparkServiceVersion&text=SparkServiceVersion\" data-throw-if-not-resolved=\"False\" />[]"
implements:
- "<xref href=\"com.azure.core.util.ServiceVersion?alt=com.azure.core.util.ServiceVersion&text=ServiceVersion\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.analytics.synapse.spark"
artifact: com.azure:azure-analytics-synapse-spark:1.0.0-beta.2
