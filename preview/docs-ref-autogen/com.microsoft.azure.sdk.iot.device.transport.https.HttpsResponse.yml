### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse"
fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse"
name: "HttpsResponse"
nameWithType: "HttpsResponse"
summary: "An HTTPS response."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class HttpsResponse"
constructors:
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse.HttpsResponse()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse.HttpsResponse()"
  name: "HttpsResponse()"
  nameWithType: "HttpsResponse.HttpsResponse()"
  modifiers:
  - "protected"
  syntax: "protected HttpsResponse()"
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse.HttpsResponse(int,byte[],java.util.Map<java.lang.String,java.util.List<java.lang.String>>,byte[])"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse.HttpsResponse(int status, byte[] body, Map<String,List<String>> headerFields, byte[] errorReason)"
  name: "HttpsResponse(int status, byte[] body, Map<String,List<String>> headerFields, byte[] errorReason)"
  nameWithType: "HttpsResponse.HttpsResponse(int status, byte[] body, Map<String,List<String>> headerFields, byte[] errorReason)"
  summary: "Constructor."
  parameters:
  - description: "the HTTPS status code."
    name: "status"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "the response body."
    name: "body"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "a map of header field names and the values associated\n with the field name."
    name: "headerFields"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "the error reason."
    name: "errorReason"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public HttpsResponse(int status, byte[] body, Map<String,List<String>> headerFields, byte[] errorReason)"
  desc: "Constructor."
methods:
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse.getBody()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse.getBody()"
  name: "getBody()"
  nameWithType: "HttpsResponse.getBody()"
  summary: "Getter for the response body."
  syntax: "public byte[] getBody()"
  desc: "Getter for the response body."
  returns:
    description: "the response body."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse.getErrorReason()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse.getErrorReason()"
  name: "getErrorReason()"
  nameWithType: "HttpsResponse.getErrorReason()"
  summary: "Getter for the error reason."
  syntax: "public byte[] getErrorReason()"
  desc: "Getter for the error reason."
  returns:
    description: "the error reason."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse.getHeaderField(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse.getHeaderField(String field)"
  name: "getHeaderField(String field)"
  nameWithType: "HttpsResponse.getHeaderField(String field)"
  summary: "Getter for a header field."
  parameters:
  - description: "the header field name."
    name: "field"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String getHeaderField(String field)"
  exceptions:
  - description: "if no value exists for the given field\n name."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Getter for a header field."
  returns:
    description: "the header field value. If multiple values are present, they are\n returned as a comma-separated list according to RFC2616."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse.getHeaderFields()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse.getHeaderFields()"
  name: "getHeaderFields()"
  nameWithType: "HttpsResponse.getHeaderFields()"
  summary: "Getter for the header fields."
  syntax: "public Map<String,String> getHeaderFields()"
  desc: "Getter for the header fields."
  returns:
    description: "a copy of the header fields for this response."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse.getStatus()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse.getStatus()"
  name: "getStatus()"
  nameWithType: "HttpsResponse.getStatus()"
  summary: "Getter for the HTTPS status code."
  syntax: "public int getStatus()"
  desc: "Getter for the HTTPS status code."
  returns:
    description: "the HTTPS status code."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "An HTTPS response. Contains the status code, body, header fields, and error reason (if any)."
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.transport.https"
artifact: com.microsoft.azure.sdk.iot:iot-device-client-preview:1.2.0
