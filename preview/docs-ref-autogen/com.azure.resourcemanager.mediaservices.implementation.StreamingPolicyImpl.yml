### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl"
fullName: "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl"
name: "StreamingPolicyImpl"
nameWithType: "StreamingPolicyImpl"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class StreamingPolicyImpl implements StreamingPolicy, StreamingPolicy.Definition"
methods:
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.commonEncryptionCbcs()"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.commonEncryptionCenc()"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.create()"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.create(com.azure.core.util.Context)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.created()"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.defaultContentKeyPolicyName()"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.envelopeEncryption()"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.id()"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.innerModel()"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.name()"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.noEncryption()"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.refresh()"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.refresh(com.azure.core.util.Context)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.type()"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.withCommonEncryptionCbcs(com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.withCommonEncryptionCenc(com.azure.resourcemanager.mediaservices.models.CommonEncryptionCenc)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.withDefaultContentKeyPolicyName(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.withEnvelopeEncryption(com.azure.resourcemanager.mediaservices.models.EnvelopeEncryption)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.withExistingMediaService(java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.mediaservices.implementation.StreamingPolicyImpl.withNoEncryption(com.azure.resourcemanager.mediaservices.models.NoEncryption)"
type: "class"
implements:
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingPolicy.Definition?alt=com.azure.resourcemanager.mediaservices.models.StreamingPolicy.Definition&text=Definition\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingPolicy?alt=com.azure.resourcemanager.mediaservices.models.StreamingPolicy&text=StreamingPolicy\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.mediaservices.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:1.0.0-beta.1
