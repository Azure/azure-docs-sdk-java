### YamlMime:JavaType
uid: "com.azure.resourcemanager.postgresql.implementation.ServerImpl"
fullName: "com.azure.resourcemanager.postgresql.implementation.ServerImpl"
name: "ServerImpl"
nameWithType: "ServerImpl"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ServerImpl implements Server, Server.Definition, Server.Update"
methods:
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.administratorLogin()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.apply()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.apply(com.azure.core.util.Context)"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.byokEnforcement()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.create()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.create(com.azure.core.util.Context)"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.earliestRestoreDate()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.fullyQualifiedDomainName()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.id()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.identity()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.infrastructureEncryption()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.innerModel()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.location()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.masterServerId()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.minimalTlsVersion()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.name()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.privateEndpointConnections()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.publicNetworkAccess()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.refresh()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.refresh(com.azure.core.util.Context)"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.region()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.regionName()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.replicaCapacity()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.replicationRole()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.sku()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.sslEnforcement()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.storageProfile()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.tags()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.type()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.update()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.userVisibleState()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.version()"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.withAdministratorLoginPassword(java.lang.String)"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.withExistingResourceGroup(java.lang.String)"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.withIdentity(com.azure.resourcemanager.postgresql.models.ResourceIdentity)"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.withMinimalTlsVersion(com.azure.resourcemanager.postgresql.models.MinimalTlsVersionEnum)"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.withProperties(com.azure.resourcemanager.postgresql.models.ServerPropertiesForCreate)"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.withPublicNetworkAccess(com.azure.resourcemanager.postgresql.models.PublicNetworkAccessEnum)"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.withRegion(com.azure.core.management.Region)"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.withRegion(java.lang.String)"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.withReplicationRole(java.lang.String)"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.withSku(com.azure.resourcemanager.postgresql.models.Sku)"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.withSslEnforcement(com.azure.resourcemanager.postgresql.models.SslEnforcementEnum)"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.withStorageProfile(com.azure.resourcemanager.postgresql.models.StorageProfile)"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "com.azure.resourcemanager.postgresql.implementation.ServerImpl.withVersion(com.azure.resourcemanager.postgresql.models.ServerVersion)"
type: "class"
implements:
- "<xref href=\"com.azure.resourcemanager.postgresql.models.Server.Definition?alt=com.azure.resourcemanager.postgresql.models.Server.Definition&text=Definition\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.postgresql.models.Server.Update?alt=com.azure.resourcemanager.postgresql.models.Server.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.postgresql.models.Server?alt=com.azure.resourcemanager.postgresql.models.Server&text=Server\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.postgresql.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-postgresql:1.0.0-beta.1
