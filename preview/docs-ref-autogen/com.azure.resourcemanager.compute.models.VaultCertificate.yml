### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.compute.models.VaultCertificate
  id: VaultCertificate
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models
  children:
  - com.azure.resourcemanager.compute.models.VaultCertificate.VaultCertificate()
  - com.azure.resourcemanager.compute.models.VaultCertificate.certificateStore()
  - com.azure.resourcemanager.compute.models.VaultCertificate.certificateUrl()
  - com.azure.resourcemanager.compute.models.VaultCertificate.validate()
  - com.azure.resourcemanager.compute.models.VaultCertificate.withCertificateStore(java.lang.String)
  - com.azure.resourcemanager.compute.models.VaultCertificate.withCertificateUrl(java.lang.String)
  langs:
  - java
  name: VaultCertificate
  nameWithType: VaultCertificate
  fullName: com.azure.resourcemanager.compute.models.VaultCertificate
  type: Class
  package: com.azure.resourcemanager.compute.models
  summary: The VaultCertificate model.
  syntax:
    content: public final class VaultCertificate
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.compute.models.VaultCertificate.VaultCertificate()
  id: VaultCertificate()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.VaultCertificate
  langs:
  - java
  name: VaultCertificate()
  nameWithType: VaultCertificate.VaultCertificate()
  fullName: com.azure.resourcemanager.compute.models.VaultCertificate.VaultCertificate()
  overload: com.azure.resourcemanager.compute.models.VaultCertificate.VaultCertificate*
  type: Constructor
  package: com.azure.resourcemanager.compute.models
  syntax:
    content: public VaultCertificate()
- uid: com.azure.resourcemanager.compute.models.VaultCertificate.certificateStore()
  id: certificateStore()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.VaultCertificate
  langs:
  - java
  name: certificateStore()
  nameWithType: VaultCertificate.certificateStore()
  fullName: com.azure.resourcemanager.compute.models.VaultCertificate.certificateStore()
  overload: com.azure.resourcemanager.compute.models.VaultCertificate.certificateStore*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the certificateStore property: For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted.'
  syntax:
    content: public String certificateStore()
    return:
      type: java.lang.String
      description: the certificateStore value.
- uid: com.azure.resourcemanager.compute.models.VaultCertificate.certificateUrl()
  id: certificateUrl()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.VaultCertificate
  langs:
  - java
  name: certificateUrl()
  nameWithType: VaultCertificate.certificateUrl()
  fullName: com.azure.resourcemanager.compute.models.VaultCertificate.certificateUrl()
  overload: com.azure.resourcemanager.compute.models.VaultCertificate.certificateUrl*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the certificateUrl property: This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see \[Add a key or secret to the key vault\](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/\#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> \{<br> "data":"<Base64-encoded-certificate>",<br> "dataType":"pfx",<br> "password":"<pfx-file-password>"<br>\}.'
  syntax:
    content: public String certificateUrl()
    return:
      type: java.lang.String
      description: the certificateUrl value.
- uid: com.azure.resourcemanager.compute.models.VaultCertificate.validate()
  id: validate()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.VaultCertificate
  langs:
  - java
  name: validate()
  nameWithType: VaultCertificate.validate()
  fullName: com.azure.resourcemanager.compute.models.VaultCertificate.validate()
  overload: com.azure.resourcemanager.compute.models.VaultCertificate.validate*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: Validates the instance.
  syntax:
    content: public void validate()
- uid: com.azure.resourcemanager.compute.models.VaultCertificate.withCertificateStore(java.lang.String)
  id: withCertificateStore(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.VaultCertificate
  langs:
  - java
  name: withCertificateStore(String certificateStore)
  nameWithType: VaultCertificate.withCertificateStore(String certificateStore)
  fullName: com.azure.resourcemanager.compute.models.VaultCertificate.withCertificateStore(String certificateStore)
  overload: com.azure.resourcemanager.compute.models.VaultCertificate.withCertificateStore*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the certificateStore property: For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted.'
  syntax:
    content: public VaultCertificate withCertificateStore(String certificateStore)
    parameters:
    - id: certificateStore
      type: java.lang.String
      description: the certificateStore value to set.
    return:
      type: com.azure.resourcemanager.compute.models.VaultCertificate
      description: the VaultCertificate object itself.
- uid: com.azure.resourcemanager.compute.models.VaultCertificate.withCertificateUrl(java.lang.String)
  id: withCertificateUrl(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.VaultCertificate
  langs:
  - java
  name: withCertificateUrl(String certificateUrl)
  nameWithType: VaultCertificate.withCertificateUrl(String certificateUrl)
  fullName: com.azure.resourcemanager.compute.models.VaultCertificate.withCertificateUrl(String certificateUrl)
  overload: com.azure.resourcemanager.compute.models.VaultCertificate.withCertificateUrl*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the certificateUrl property: This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see \[Add a key or secret to the key vault\](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/\#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> \{<br> "data":"<Base64-encoded-certificate>",<br> "dataType":"pfx",<br> "password":"<pfx-file-password>"<br>\}.'
  syntax:
    content: public VaultCertificate withCertificateUrl(String certificateUrl)
    parameters:
    - id: certificateUrl
      type: java.lang.String
      description: the certificateUrl value to set.
    return:
      type: com.azure.resourcemanager.compute.models.VaultCertificate
      description: the VaultCertificate object itself.
references:
- uid: com.azure.resourcemanager.compute.models.VaultCertificate.VaultCertificate*
  name: VaultCertificate
  nameWithType: VaultCertificate.VaultCertificate
  fullName: com.azure.resourcemanager.compute.models.VaultCertificate.VaultCertificate
  package: com.azure.resourcemanager.compute.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.compute.models.VaultCertificate.certificateUrl*
  name: certificateUrl
  nameWithType: VaultCertificate.certificateUrl
  fullName: com.azure.resourcemanager.compute.models.VaultCertificate.certificateUrl
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.VaultCertificate.withCertificateUrl*
  name: withCertificateUrl
  nameWithType: VaultCertificate.withCertificateUrl
  fullName: com.azure.resourcemanager.compute.models.VaultCertificate.withCertificateUrl
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.VaultCertificate.certificateStore*
  name: certificateStore
  nameWithType: VaultCertificate.certificateStore
  fullName: com.azure.resourcemanager.compute.models.VaultCertificate.certificateStore
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.VaultCertificate.withCertificateStore*
  name: withCertificateStore
  nameWithType: VaultCertificate.withCertificateStore
  fullName: com.azure.resourcemanager.compute.models.VaultCertificate.withCertificateStore
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.VaultCertificate.validate*
  name: validate
  nameWithType: VaultCertificate.validate
  fullName: com.azure.resourcemanager.compute.models.VaultCertificate.validate
  package: com.azure.resourcemanager.compute.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
