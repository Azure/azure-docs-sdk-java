### YamlMime:JavaType
uid: "com.azure.data.appconfiguration.models.FeatureFlagFilter"
fullName: "com.azure.data.appconfiguration.models.FeatureFlagFilter"
name: "FeatureFlagFilter"
nameWithType: "FeatureFlagFilter"
summary: "Filters in <xref uid=\"com.azure.data.appconfiguration.models.FeatureFlagConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FeatureFlagConfigurationSetting\"></xref> that can be returned from GET queries. A filter is a rule for evaluating the state of a feature flag."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class FeatureFlagFilter"
constructors:
- "com.azure.data.appconfiguration.models.FeatureFlagFilter.FeatureFlagFilter(java.lang.String)"
methods:
- "com.azure.data.appconfiguration.models.FeatureFlagFilter.addParameter(java.lang.String,java.lang.Object)"
- "com.azure.data.appconfiguration.models.FeatureFlagFilter.getName()"
- "com.azure.data.appconfiguration.models.FeatureFlagFilter.getParameters()"
- "com.azure.data.appconfiguration.models.FeatureFlagFilter.setParameters(java.util.Map<java.lang.String,java.lang.Object>)"
type: "class"
metadata: {}
package: "com.azure.data.appconfiguration.models"
artifact: com.azure:azure-data-appconfiguration:1.2.0-beta.1
