### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.withAbstractTypeResolver*"
fullName: "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.withAbstractTypeResolver"
name: "withAbstractTypeResolver"
nameWithType: "DeserializerFactoryConfig.withAbstractTypeResolver"
members:
- uid: "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver)"
  fullName: "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.withAbstractTypeResolver(AbstractTypeResolver resolver)"
  name: "withAbstractTypeResolver(AbstractTypeResolver resolver)"
  nameWithType: "DeserializerFactoryConfig.withAbstractTypeResolver(AbstractTypeResolver resolver)"
  summary: "Fluent/factory method used to construct a configuration object that has same configuration as this instance plus one additional abstract type resolver. Added resolver has the highest priority (that is, it gets called before any already registered resolver)."
  parameters:
  - name: "resolver"
    type: "<xref href=\"com.fasterxml.jackson.databind.AbstractTypeResolver?alt=com.fasterxml.jackson.databind.AbstractTypeResolver&text=AbstractTypeResolver\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DeserializerFactoryConfig withAbstractTypeResolver(AbstractTypeResolver resolver)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig?alt=com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig&text=DeserializerFactoryConfig\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.cfg"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
