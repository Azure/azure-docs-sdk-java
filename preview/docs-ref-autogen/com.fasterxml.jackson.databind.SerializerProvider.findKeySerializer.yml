### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.SerializerProvider.findKeySerializer*"
fullName: "com.fasterxml.jackson.databind.SerializerProvider.findKeySerializer"
name: "findKeySerializer"
nameWithType: "SerializerProvider.findKeySerializer"
members:
- uid: "com.fasterxml.jackson.databind.SerializerProvider.findKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)"
  fullName: "com.fasterxml.jackson.databind.SerializerProvider.findKeySerializer(JavaType keyType, BeanProperty property)"
  name: "findKeySerializer(JavaType keyType, BeanProperty property)"
  nameWithType: "SerializerProvider.findKeySerializer(JavaType keyType, BeanProperty property)"
  summary: "Method called to get the serializer to use for serializing non-null Map keys. Separation from regular <xref uid=\"com.fasterxml.jackson.databind.SerializerProvider.findValueSerializer*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#findValueSerializer\"></xref> method is because actual write method must be different (@link JsonGenerator\\#writeFieldName\\}; but also since behavior for some key types may differ.\n\nNote that the serializer itself can be called with instances of any Java object, but not nulls."
  parameters:
  - name: "keyType"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - name: "property"
    type: "<xref href=\"com.fasterxml.jackson.databind.BeanProperty?alt=com.fasterxml.jackson.databind.BeanProperty&text=BeanProperty\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonSerializer<Object> findKeySerializer(JavaType keyType, BeanProperty property)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.fasterxml.jackson.databind.SerializerProvider.findKeySerializer(java.lang.Class<?>,com.fasterxml.jackson.databind.BeanProperty)"
  fullName: "com.fasterxml.jackson.databind.SerializerProvider.findKeySerializer(Class<?> rawKeyType, BeanProperty property)"
  name: "findKeySerializer(Class<?> rawKeyType, BeanProperty property)"
  nameWithType: "SerializerProvider.findKeySerializer(Class<?> rawKeyType, BeanProperty property)"
  parameters:
  - name: "rawKeyType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "property"
    type: "<xref href=\"com.fasterxml.jackson.databind.BeanProperty?alt=com.fasterxml.jackson.databind.BeanProperty&text=BeanProperty\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonSerializer<Object> findKeySerializer(Class<?> rawKeyType, BeanProperty property)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
