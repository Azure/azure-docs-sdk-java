### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.query.DefaultDocumentQueryExecutionContext.getTargetPartitionKeyRangesById*"
fullName: "com.azure.cosmos.implementation.query.DefaultDocumentQueryExecutionContext<T>.getTargetPartitionKeyRangesById"
name: "getTargetPartitionKeyRangesById"
nameWithType: "DefaultDocumentQueryExecutionContext<T>.getTargetPartitionKeyRangesById"
members:
- uid: "com.azure.cosmos.implementation.query.DefaultDocumentQueryExecutionContext.getTargetPartitionKeyRangesById(java.lang.String,java.lang.String)"
  fullName: "com.azure.cosmos.implementation.query.DefaultDocumentQueryExecutionContext<T>.getTargetPartitionKeyRangesById(String resourceId, String partitionKeyRangeIdInternal)"
  name: "getTargetPartitionKeyRangesById(String resourceId, String partitionKeyRangeIdInternal)"
  nameWithType: "DefaultDocumentQueryExecutionContext<T>.getTargetPartitionKeyRangesById(String resourceId, String partitionKeyRangeIdInternal)"
  parameters:
  - name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "partitionKeyRangeIdInternal"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<List<PartitionKeyRange>> getTargetPartitionKeyRangesById(String resourceId, String partitionKeyRangeIdInternal)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.PartitionKeyRange?alt=com.azure.cosmos.implementation.PartitionKeyRange&text=PartitionKeyRange\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.query"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
