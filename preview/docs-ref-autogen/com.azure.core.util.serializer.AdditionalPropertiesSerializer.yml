### YamlMime:ManagedReference
items:
- uid: "com.azure.core.util.serializer.AdditionalPropertiesSerializer"
  id: "AdditionalPropertiesSerializer"
  parent: "com.azure.core.util.serializer"
  children:
  - "com.azure.core.util.serializer.AdditionalPropertiesSerializer.AdditionalPropertiesSerializer(java.lang.Class<?>,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.ObjectMapper)"
  - "com.azure.core.util.serializer.AdditionalPropertiesSerializer.getModule(com.fasterxml.jackson.databind.ObjectMapper)"
  - "com.azure.core.util.serializer.AdditionalPropertiesSerializer.resolve(com.fasterxml.jackson.databind.SerializerProvider)"
  - "com.azure.core.util.serializer.AdditionalPropertiesSerializer.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
  - "com.azure.core.util.serializer.AdditionalPropertiesSerializer.serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
  langs:
  - "java"
  name: "AdditionalPropertiesSerializer"
  nameWithType: "AdditionalPropertiesSerializer"
  fullName: "com.azure.core.util.serializer.AdditionalPropertiesSerializer"
  type: "Class"
  package: "com.azure.core.util.serializer"
  summary: "Custom serializer for serializing complex types with additional properties. If a complex type has a property named \"additionalProperties\" with serialized name empty (\"\") of type Map<String, Object>, all items in this map will become top level properties for this complex type."
  syntax:
    content: "final class AdditionalPropertiesSerializer extends StdSerializer<Object> implements ResolvableSerializer"
  inheritance:
  - "java.lang.Object"
  - "com.fasterxml.jackson.databind.JsonSerializer"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer"
  implements:
  - "com.fasterxml.jackson.databind.ser.ResolvableSerializer"
  inheritedMembers:
  - "com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()"
  - "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)"
  - "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)"
  - "com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()"
  - "com.fasterxml.jackson.databind.JsonSerializer.properties()"
  - "com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)"
  - "com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
  - "com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)"
  - "com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()"
  - "com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)"
  - "com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.AdditionalPropertiesSerializer(java.lang.Class<?>,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.ObjectMapper)"
  id: "AdditionalPropertiesSerializer(java.lang.Class<?>,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.ObjectMapper)"
  parent: "com.azure.core.util.serializer.AdditionalPropertiesSerializer"
  langs:
  - "java"
  name: "AdditionalPropertiesSerializer(Class<?> vc, JsonSerializer<?> defaultSerializer, ObjectMapper mapper)"
  nameWithType: "AdditionalPropertiesSerializer.AdditionalPropertiesSerializer(Class<?> vc, JsonSerializer<?> defaultSerializer, ObjectMapper mapper)"
  fullName: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.AdditionalPropertiesSerializer(Class<?> vc, JsonSerializer<?> defaultSerializer, ObjectMapper mapper)"
  overload: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.AdditionalPropertiesSerializer*"
  type: "Constructor"
  package: "com.azure.core.util.serializer"
  summary: "Creates an instance of FlatteningSerializer."
  syntax:
    content: "protected AdditionalPropertiesSerializer(Class<?> vc, JsonSerializer<?> defaultSerializer, ObjectMapper mapper)"
    parameters:
    - id: "vc"
      type: "java.lang.Class<?>"
      description: "handled type"
    - id: "defaultSerializer"
      type: "com.fasterxml.jackson.databind.JsonSerializer<?>"
      description: "the default JSON serializer"
    - id: "mapper"
      type: "com.fasterxml.jackson.databind.ObjectMapper"
      description: "the object mapper for default serializations"
- uid: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.getModule(com.fasterxml.jackson.databind.ObjectMapper)"
  id: "getModule(com.fasterxml.jackson.databind.ObjectMapper)"
  parent: "com.azure.core.util.serializer.AdditionalPropertiesSerializer"
  langs:
  - "java"
  name: "getModule(ObjectMapper mapper)"
  nameWithType: "AdditionalPropertiesSerializer.getModule(ObjectMapper mapper)"
  fullName: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.getModule(ObjectMapper mapper)"
  overload: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.getModule*"
  type: "Method"
  package: "com.azure.core.util.serializer"
  summary: "Gets a module wrapping this serializer as an adapter for the Jackson ObjectMapper."
  syntax:
    content: "public static SimpleModule getModule(ObjectMapper mapper)"
    parameters:
    - id: "mapper"
      type: "com.fasterxml.jackson.databind.ObjectMapper"
      description: "the object mapper for default serializations"
    return:
      type: "com.fasterxml.jackson.databind.module.SimpleModule"
      description: "a simple module to be plugged onto Jackson ObjectMapper."
- uid: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.resolve(com.fasterxml.jackson.databind.SerializerProvider)"
  id: "resolve(com.fasterxml.jackson.databind.SerializerProvider)"
  parent: "com.azure.core.util.serializer.AdditionalPropertiesSerializer"
  langs:
  - "java"
  name: "resolve(SerializerProvider provider)"
  nameWithType: "AdditionalPropertiesSerializer.resolve(SerializerProvider provider)"
  fullName: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.resolve(SerializerProvider provider)"
  overload: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.resolve*"
  type: "Method"
  package: "com.azure.core.util.serializer"
  syntax:
    content: "public void resolve(SerializerProvider provider)"
    parameters:
    - id: "provider"
      type: "com.fasterxml.jackson.databind.SerializerProvider"
  exceptions:
  - type: "com.fasterxml.jackson.databind.JsonMappingException"
- uid: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
  id: "serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
  parent: "com.azure.core.util.serializer.AdditionalPropertiesSerializer"
  langs:
  - "java"
  name: "serialize(Object value, JsonGenerator jgen, SerializerProvider provider)"
  nameWithType: "AdditionalPropertiesSerializer.serialize(Object value, JsonGenerator jgen, SerializerProvider provider)"
  fullName: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.serialize(Object value, JsonGenerator jgen, SerializerProvider provider)"
  overload: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.serialize*"
  type: "Method"
  package: "com.azure.core.util.serializer"
  syntax:
    content: "public void serialize(Object value, JsonGenerator jgen, SerializerProvider provider)"
    parameters:
    - id: "value"
      type: "java.lang.Object"
    - id: "jgen"
      type: "com.fasterxml.jackson.core.JsonGenerator"
    - id: "provider"
      type: "com.fasterxml.jackson.databind.SerializerProvider"
  exceptions:
  - type: "java.io.IOException"
- uid: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
  id: "serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
  parent: "com.azure.core.util.serializer.AdditionalPropertiesSerializer"
  langs:
  - "java"
  name: "serializeWithType(Object value, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSerializer)"
  nameWithType: "AdditionalPropertiesSerializer.serializeWithType(Object value, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSerializer)"
  fullName: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.serializeWithType(Object value, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSerializer)"
  overload: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.serializeWithType*"
  type: "Method"
  package: "com.azure.core.util.serializer"
  syntax:
    content: "public void serializeWithType(Object value, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSerializer)"
    parameters:
    - id: "value"
      type: "java.lang.Object"
    - id: "gen"
      type: "com.fasterxml.jackson.core.JsonGenerator"
    - id: "provider"
      type: "com.fasterxml.jackson.databind.SerializerProvider"
    - id: "typeSerializer"
      type: "com.fasterxml.jackson.databind.jsontype.TypeSerializer"
  exceptions:
  - type: "java.io.IOException"
references:
- uid: "java.lang.Class<?>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.fasterxml.jackson.databind.JsonSerializer<?>"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.JsonSerializer"
    name: "JsonSerializer"
    fullName: "com.fasterxml.jackson.databind.JsonSerializer"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.fasterxml.jackson.databind.ObjectMapper"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.ObjectMapper"
    name: "ObjectMapper"
    fullName: "com.fasterxml.jackson.databind.ObjectMapper"
- uid: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.AdditionalPropertiesSerializer*"
  name: "AdditionalPropertiesSerializer"
  nameWithType: "AdditionalPropertiesSerializer.AdditionalPropertiesSerializer"
  fullName: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.AdditionalPropertiesSerializer"
  package: "com.azure.core.util.serializer"
- uid: "com.fasterxml.jackson.databind.module.SimpleModule"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.module.SimpleModule"
    name: "SimpleModule"
    fullName: "com.fasterxml.jackson.databind.module.SimpleModule"
- uid: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.getModule*"
  name: "getModule"
  nameWithType: "AdditionalPropertiesSerializer.getModule"
  fullName: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.getModule"
  package: "com.azure.core.util.serializer"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.fasterxml.jackson.core.JsonGenerator"
  spec.java:
  - uid: "com.fasterxml.jackson.core.JsonGenerator"
    name: "JsonGenerator"
    fullName: "com.fasterxml.jackson.core.JsonGenerator"
- uid: "com.fasterxml.jackson.databind.SerializerProvider"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.SerializerProvider"
    name: "SerializerProvider"
    fullName: "com.fasterxml.jackson.databind.SerializerProvider"
- uid: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.serialize*"
  name: "serialize"
  nameWithType: "AdditionalPropertiesSerializer.serialize"
  fullName: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.serialize"
  package: "com.azure.core.util.serializer"
- uid: "com.fasterxml.jackson.databind.JsonMappingException"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.JsonMappingException"
    name: "JsonMappingException"
    fullName: "com.fasterxml.jackson.databind.JsonMappingException"
- uid: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.resolve*"
  name: "resolve"
  nameWithType: "AdditionalPropertiesSerializer.resolve"
  fullName: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.resolve"
  package: "com.azure.core.util.serializer"
- uid: "com.fasterxml.jackson.databind.jsontype.TypeSerializer"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.jsontype.TypeSerializer"
    name: "TypeSerializer"
    fullName: "com.fasterxml.jackson.databind.jsontype.TypeSerializer"
- uid: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.serializeWithType*"
  name: "serializeWithType"
  nameWithType: "AdditionalPropertiesSerializer.serializeWithType"
  fullName: "com.azure.core.util.serializer.AdditionalPropertiesSerializer.serializeWithType"
  package: "com.azure.core.util.serializer"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer<java.lang.Object>"
  name: "StdSerializer<Object>"
  nameWithType: "StdSerializer<Object>"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer<java.lang.Object>"
- uid: "com.fasterxml.jackson.databind.ser.ResolvableSerializer"
  name: "ResolvableSerializer"
  nameWithType: "ResolvableSerializer"
  fullName: "com.fasterxml.jackson.databind.ser.ResolvableSerializer"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)"
  name: "StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class<?>,JsonFormat.Feature)"
  nameWithType: "StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class<?>,JsonFormat.Feature)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)"
  name: "JsonSerializer.isEmpty(SerializerProvider,T)"
  nameWithType: "JsonSerializer.isEmpty(SerializerProvider,T)"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.properties()"
  name: "JsonSerializer.properties()"
  nameWithType: "JsonSerializer.properties()"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.properties()"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)"
  name: "StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class<?>)"
  nameWithType: "StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class<?>)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
  name: "JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)"
  nameWithType: "JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)"
  name: "StdSerializer.findPropertyFilter(SerializerProvider,Object,Object)"
  nameWithType: "StdSerializer.findPropertyFilter(SerializerProvider,Object,Object)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)"
  name: "StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)"
  nameWithType: "StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
  name: "StdSerializer.serialize(T,JsonGenerator,SerializerProvider)"
  nameWithType: "StdSerializer.serialize(T,JsonGenerator,SerializerProvider)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)"
  name: "StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)"
  nameWithType: "StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()"
  name: "JsonSerializer.getDelegatee()"
  nameWithType: "JsonSerializer.getDelegatee()"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)"
  name: "StdSerializer.visitFloatFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)"
  nameWithType: "StdSerializer.visitFloatFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)"
  name: "StdSerializer.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)"
  nameWithType: "StdSerializer.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)"
  name: "JsonSerializer.unwrappingSerializer(NameTransformer)"
  nameWithType: "JsonSerializer.unwrappingSerializer(NameTransformer)"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)"
  name: "StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,int)"
  nameWithType: "StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,int)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)"
  name: "StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)"
  nameWithType: "StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)"
  name: "StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonValueFormat)"
  nameWithType: "StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonValueFormat)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)"
  name: "StdSerializer.getSchema(SerializerProvider,Type,boolean)"
  nameWithType: "StdSerializer.getSchema(SerializerProvider,Type,boolean)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()"
  name: "JsonSerializer.isUnwrappingSerializer()"
  nameWithType: "JsonSerializer.isUnwrappingSerializer()"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)"
  name: "StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonFormatTypes)"
  nameWithType: "StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonFormatTypes)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)"
  name: "StdSerializer._nonEmpty(Collection<?>)"
  nameWithType: "StdSerializer._nonEmpty(Collection<?>)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)"
  name: "StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType,jsonFormatVisitors.JsonValueFormat)"
  nameWithType: "StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType,jsonFormatVisitors.JsonValueFormat)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)"
  name: "StdSerializer.isDefaultSerializer(JsonSerializer<?>)"
  nameWithType: "StdSerializer.isDefaultSerializer(JsonSerializer<?>)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()"
  name: "StdSerializer.handledType()"
  nameWithType: "StdSerializer.handledType()"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)"
  name: "StdSerializer.createSchemaNode(String,boolean)"
  nameWithType: "StdSerializer.createSchemaNode(String,boolean)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)"
  name: "StdSerializer.createSchemaNode(String)"
  nameWithType: "StdSerializer.createSchemaNode(String)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)"
  name: "StdSerializer.getSchema(SerializerProvider,Type)"
  nameWithType: "StdSerializer.getSchema(SerializerProvider,Type)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)"
  name: "JsonSerializer.withFilterId(Object)"
  nameWithType: "JsonSerializer.withFilterId(Object)"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)"
  name: "StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer<?>,JavaType)"
  nameWithType: "StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer<?>,JavaType)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)"
  name: "StdSerializer.findAnnotatedContentSerializer(SerializerProvider,BeanProperty)"
  nameWithType: "StdSerializer.findAnnotatedContentSerializer(SerializerProvider,BeanProperty)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)"
  name: "JsonSerializer.isEmpty(T)"
  nameWithType: "JsonSerializer.isEmpty(T)"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()"
  name: "JsonSerializer.usesObjectId()"
  nameWithType: "JsonSerializer.usesObjectId()"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)"
  name: "StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class<?>)"
  nameWithType: "StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class<?>)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)"
  name: "JsonSerializer.replaceDelegatee(JsonSerializer<?>)"
  nameWithType: "JsonSerializer.replaceDelegatee(JsonSerializer<?>)"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)"
  name: "StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)"
  nameWithType: "StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)"
  name: "StdSerializer._neitherNull(Object,Object)"
  nameWithType: "StdSerializer._neitherNull(Object,Object)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)"
  name: "StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,String)"
  nameWithType: "StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,String)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
- uid: "com.fasterxml.jackson.databind.JsonSerializer"
  name: "JsonSerializer"
  nameWithType: "JsonSerializer"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer"
  name: "StdSerializer"
  nameWithType: "StdSerializer"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer"
- uid: "?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)"
  name: "?>,JsonFormat.Feature)"
  nameWithType: "?>,JsonFormat.Feature)"
  fullName: "?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class"
  name: "StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class"
  nameWithType: "StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class"
- uid: "?>)"
  name: "?>)"
  nameWithType: "?>)"
  fullName: "?>)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class"
  name: "StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class"
  nameWithType: "StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer"
  name: "StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer"
  nameWithType: "StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection"
  name: "StdSerializer._nonEmpty(Collection"
  nameWithType: "StdSerializer._nonEmpty(Collection"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer"
  name: "StdSerializer.isDefaultSerializer(JsonSerializer"
  nameWithType: "StdSerializer.isDefaultSerializer(JsonSerializer"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer"
  name: "StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer"
  nameWithType: "StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer"
- uid: "?>,com.fasterxml.jackson.databind.JavaType)"
  name: "?>,JavaType)"
  nameWithType: "?>,JavaType)"
  fullName: "?>,com.fasterxml.jackson.databind.JavaType)"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class"
  name: "StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class"
  nameWithType: "StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer"
  name: "JsonSerializer.replaceDelegatee(JsonSerializer"
  nameWithType: "JsonSerializer.replaceDelegatee(JsonSerializer"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer"
- uid: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer"
  name: "StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer"
  nameWithType: "StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer"
