### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffix*"
fullName: "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffix"
name: "writeTypeSuffix"
nameWithType: "TypeSerializer.writeTypeSuffix"
members:
- uid: "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)"
  fullName: "com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffix(JsonGenerator g, WritableTypeId typeId)"
  name: "writeTypeSuffix(JsonGenerator g, WritableTypeId typeId)"
  nameWithType: "TypeSerializer.writeTypeSuffix(JsonGenerator g, WritableTypeId typeId)"
  summary: "Method that should be called after <xref uid=\"com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeTypePrefix(JsonGenerator, WritableTypeId)\"></xref> and matching value write have been called, passing <xref uid=\"com.fasterxml.jackson.core.type.WritableTypeId\" data-throw-if-not-resolved=\"false\" data-raw-source=\"WritableTypeId\"></xref> returned. Usual idiom is:\n\n```java\n// Indicator generator that type identifier may be needed; generator may write\n // one as suggested, modify information, or take some other action \n // NOTE! For Object/Array types, this will ALSO write start marker!\n WritableTypeId typeIdDef = typeSer.writeTypePrefix(gen,\n          typeSer.typeId(value, JsonToken.START_OBJECT));\n\n // serializing actual value for which TypeId may have been written... like\n // NOTE: do NOT write START_OBJECT before OR END_OBJECT after:\n g.writeStringField(\"message\", \"Hello, world!\"\n\n // matching type suffix call to let generator chance to add suffix, if any\n // NOTE! For Object/Array types, this will ALSO write end marker!\n typeSer.writeTypeSuffix(gen, typeIdDef);\n```"
  parameters:
  - name: "g"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  - name: "typeId"
    type: "<xref href=\"com.fasterxml.jackson.core.type.WritableTypeId?alt=com.fasterxml.jackson.core.type.WritableTypeId&text=WritableTypeId\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract WritableTypeId writeTypeSuffix(JsonGenerator g, WritableTypeId typeId)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.type.WritableTypeId?alt=com.fasterxml.jackson.core.type.WritableTypeId&text=WritableTypeId\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.jsontype"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
