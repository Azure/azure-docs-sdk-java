### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket"
fullName: "com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket"
name: "ProxiedSSLSocket"
nameWithType: "ProxiedSSLSocket"
summary: "Extension of an SSLSocket that sends an HTTP CONNECT packet to the proxy socket before sending the SSL handshake upstream."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.net.Socket?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"javax.net.ssl.SSLSocket?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"java.net.Socket?alt=java.net.Socket&text=Socket\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.net.Socket.<T>getOption(java.net.SocketOption<T>)?alt=java.net.Socket.<T>getOption&text=<T>getOption\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.<T>setOption(java.net.SocketOption<T>,T)?alt=java.net.Socket.<T>setOption&text=<T>setOption\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.bind(java.net.SocketAddress)?alt=java.net.Socket.bind&text=bind\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.close()?alt=java.net.Socket.close&text=close\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.connect(java.net.SocketAddress)?alt=java.net.Socket.connect&text=connect\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.connect(java.net.SocketAddress,int)?alt=java.net.Socket.connect&text=connect\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getChannel()?alt=java.net.Socket.getChannel&text=getChannel\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getInetAddress()?alt=java.net.Socket.getInetAddress&text=getInetAddress\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getInputStream()?alt=java.net.Socket.getInputStream&text=getInputStream\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getKeepAlive()?alt=java.net.Socket.getKeepAlive&text=getKeepAlive\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getLocalAddress()?alt=java.net.Socket.getLocalAddress&text=getLocalAddress\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getLocalPort()?alt=java.net.Socket.getLocalPort&text=getLocalPort\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getLocalSocketAddress()?alt=java.net.Socket.getLocalSocketAddress&text=getLocalSocketAddress\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getOOBInline()?alt=java.net.Socket.getOOBInline&text=getOOBInline\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getOutputStream()?alt=java.net.Socket.getOutputStream&text=getOutputStream\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getPort()?alt=java.net.Socket.getPort&text=getPort\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getReceiveBufferSize()?alt=java.net.Socket.getReceiveBufferSize&text=getReceiveBufferSize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getRemoteSocketAddress()?alt=java.net.Socket.getRemoteSocketAddress&text=getRemoteSocketAddress\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getReuseAddress()?alt=java.net.Socket.getReuseAddress&text=getReuseAddress\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getSendBufferSize()?alt=java.net.Socket.getSendBufferSize&text=getSendBufferSize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getSoLinger()?alt=java.net.Socket.getSoLinger&text=getSoLinger\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getSoTimeout()?alt=java.net.Socket.getSoTimeout&text=getSoTimeout\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getTcpNoDelay()?alt=java.net.Socket.getTcpNoDelay&text=getTcpNoDelay\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.getTrafficClass()?alt=java.net.Socket.getTrafficClass&text=getTrafficClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.isBound()?alt=java.net.Socket.isBound&text=isBound\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.isClosed()?alt=java.net.Socket.isClosed&text=isClosed\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.isConnected()?alt=java.net.Socket.isConnected&text=isConnected\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.isInputShutdown()?alt=java.net.Socket.isInputShutdown&text=isInputShutdown\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.isOutputShutdown()?alt=java.net.Socket.isOutputShutdown&text=isOutputShutdown\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.sendUrgentData(int)?alt=java.net.Socket.sendUrgentData&text=sendUrgentData\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.setKeepAlive(boolean)?alt=java.net.Socket.setKeepAlive&text=setKeepAlive\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.setOOBInline(boolean)?alt=java.net.Socket.setOOBInline&text=setOOBInline\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.setPerformancePreferences(int,int,int)?alt=java.net.Socket.setPerformancePreferences&text=setPerformancePreferences\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.setReceiveBufferSize(int)?alt=java.net.Socket.setReceiveBufferSize&text=setReceiveBufferSize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.setReuseAddress(boolean)?alt=java.net.Socket.setReuseAddress&text=setReuseAddress\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.setSendBufferSize(int)?alt=java.net.Socket.setSendBufferSize&text=setSendBufferSize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.setSoLinger(boolean,int)?alt=java.net.Socket.setSoLinger&text=setSoLinger\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.setSoTimeout(int)?alt=java.net.Socket.setSoTimeout&text=setSoTimeout\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.setSocketImplFactory(java.net.SocketImplFactory)?alt=java.net.Socket.setSocketImplFactory&text=setSocketImplFactory\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.setTcpNoDelay(boolean)?alt=java.net.Socket.setTcpNoDelay&text=setTcpNoDelay\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.setTrafficClass(int)?alt=java.net.Socket.setTrafficClass&text=setTrafficClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.shutdownInput()?alt=java.net.Socket.shutdownInput&text=shutdownInput\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.shutdownOutput()?alt=java.net.Socket.shutdownOutput&text=shutdownOutput\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.supportedOptions()?alt=java.net.Socket.supportedOptions&text=supportedOptions\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.net.Socket.toString()?alt=java.net.Socket.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"javax.net.ssl.SSLSocket?alt=javax.net.ssl.SSLSocket&text=SSLSocket\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"javax.net.ssl.SSLSocket.addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)?alt=javax.net.ssl.SSLSocket.addHandshakeCompletedListener&text=addHandshakeCompletedListener\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.getApplicationProtocol()?alt=javax.net.ssl.SSLSocket.getApplicationProtocol&text=getApplicationProtocol\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.getEnableSessionCreation()?alt=javax.net.ssl.SSLSocket.getEnableSessionCreation&text=getEnableSessionCreation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.getEnabledCipherSuites()?alt=javax.net.ssl.SSLSocket.getEnabledCipherSuites&text=getEnabledCipherSuites\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.getEnabledProtocols()?alt=javax.net.ssl.SSLSocket.getEnabledProtocols&text=getEnabledProtocols\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.getHandshakeApplicationProtocol()?alt=javax.net.ssl.SSLSocket.getHandshakeApplicationProtocol&text=getHandshakeApplicationProtocol\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.getHandshakeApplicationProtocolSelector()?alt=javax.net.ssl.SSLSocket.getHandshakeApplicationProtocolSelector&text=getHandshakeApplicationProtocolSelector\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.getHandshakeSession()?alt=javax.net.ssl.SSLSocket.getHandshakeSession&text=getHandshakeSession\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.getNeedClientAuth()?alt=javax.net.ssl.SSLSocket.getNeedClientAuth&text=getNeedClientAuth\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.getSSLParameters()?alt=javax.net.ssl.SSLSocket.getSSLParameters&text=getSSLParameters\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.getSession()?alt=javax.net.ssl.SSLSocket.getSession&text=getSession\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.getSupportedCipherSuites()?alt=javax.net.ssl.SSLSocket.getSupportedCipherSuites&text=getSupportedCipherSuites\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.getSupportedProtocols()?alt=javax.net.ssl.SSLSocket.getSupportedProtocols&text=getSupportedProtocols\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.getUseClientMode()?alt=javax.net.ssl.SSLSocket.getUseClientMode&text=getUseClientMode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.getWantClientAuth()?alt=javax.net.ssl.SSLSocket.getWantClientAuth&text=getWantClientAuth\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)?alt=javax.net.ssl.SSLSocket.removeHandshakeCompletedListener&text=removeHandshakeCompletedListener\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.setEnableSessionCreation(boolean)?alt=javax.net.ssl.SSLSocket.setEnableSessionCreation&text=setEnableSessionCreation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.setEnabledCipherSuites(java.lang.String[])?alt=javax.net.ssl.SSLSocket.setEnabledCipherSuites&text=setEnabledCipherSuites\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.setEnabledProtocols(java.lang.String[])?alt=javax.net.ssl.SSLSocket.setEnabledProtocols&text=setEnabledProtocols\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.setHandshakeApplicationProtocolSelector(java.util.function.BiFunction<javax.net.ssl.SSLSocket,java.util.List<java.lang.String>,java.lang.String>)?alt=javax.net.ssl.SSLSocket.setHandshakeApplicationProtocolSelector&text=setHandshakeApplicationProtocolSelector\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.setNeedClientAuth(boolean)?alt=javax.net.ssl.SSLSocket.setNeedClientAuth&text=setNeedClientAuth\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.setSSLParameters(javax.net.ssl.SSLParameters)?alt=javax.net.ssl.SSLSocket.setSSLParameters&text=setSSLParameters\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.setUseClientMode(boolean)?alt=javax.net.ssl.SSLSocket.setUseClientMode&text=setUseClientMode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.setWantClientAuth(boolean)?alt=javax.net.ssl.SSLSocket.setWantClientAuth&text=setWantClientAuth\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"javax.net.ssl.SSLSocket.startHandshake()?alt=javax.net.ssl.SSLSocket.startHandshake&text=startHandshake\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **ProxiedSSLSocket**</br> extends <xref href=\"javax.net.ssl.SSLSocket?alt=javax.net.ssl.SSLSocket&text=SSLSocket\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.ProxiedSSLSocket(javax.net.ssl.SSLSocketFactory,java.net.Socket,java.lang.String,char[])"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.ProxiedSSLSocket(SSLSocketFactory socketFactory, Socket proxySocket, String proxyUsername, char[] proxyPassword)"
  name: "ProxiedSSLSocket(SSLSocketFactory socketFactory, Socket proxySocket, String proxyUsername, char[] proxyPassword)"
  nameWithType: "ProxiedSSLSocket.ProxiedSSLSocket(SSLSocketFactory socketFactory, Socket proxySocket, String proxyUsername, char[] proxyPassword)"
  modifiers:
  - "protected"
  parameters:
  - name: "socketFactory"
    type: "<xref href=\"javax.net.ssl.SSLSocketFactory?alt=javax.net.ssl.SSLSocketFactory&text=SSLSocketFactory\" data-throw-if-not-resolved=\"False\" />"
  - name: "proxySocket"
    type: "<xref href=\"java.net.Socket?alt=java.net.Socket&text=Socket\" data-throw-if-not-resolved=\"False\" />"
  - name: "proxyUsername"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "proxyPassword"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "protected ProxiedSSLSocket(SSLSocketFactory socketFactory, Socket proxySocket, String proxyUsername, char[] proxyPassword)"
methods:
- uid: "com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.close()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.close()"
  name: "close()"
  nameWithType: "ProxiedSSLSocket.close()"
  overridden: "java.net.Socket.close()"
  syntax: "public void close()"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.connect(java.net.SocketAddress)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.connect(SocketAddress socketAddress)"
  name: "connect(SocketAddress socketAddress)"
  nameWithType: "ProxiedSSLSocket.connect(SocketAddress socketAddress)"
  overridden: "java.net.Socket.connect(java.net.SocketAddress)"
  parameters:
  - name: "socketAddress"
    type: "<xref href=\"java.net.SocketAddress?alt=java.net.SocketAddress&text=SocketAddress\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void connect(SocketAddress socketAddress)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.connect(java.net.SocketAddress,int)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.connect(SocketAddress socketAddress, int timeout)"
  name: "connect(SocketAddress socketAddress, int timeout)"
  nameWithType: "ProxiedSSLSocket.connect(SocketAddress socketAddress, int timeout)"
  overridden: "java.net.Socket.connect(java.net.SocketAddress,int)"
  parameters:
  - name: "socketAddress"
    type: "<xref href=\"java.net.SocketAddress?alt=java.net.SocketAddress&text=SocketAddress\" data-throw-if-not-resolved=\"False\" />"
  - name: "timeout"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void connect(SocketAddress socketAddress, int timeout)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Extension of an SSLSocket that sends an HTTP CONNECT packet to the proxy socket before sending the SSL handshake upstream."
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.transport"
artifact: com.microsoft.azure.sdk.iot:iot-device-client-preview:1.2.0
