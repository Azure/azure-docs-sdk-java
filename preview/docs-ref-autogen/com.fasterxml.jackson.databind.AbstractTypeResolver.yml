### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.AbstractTypeResolver"
fullName: "com.fasterxml.jackson.databind.AbstractTypeResolver"
name: "AbstractTypeResolver"
nameWithType: "AbstractTypeResolver"
summary: "Defines interface for resolvers that can resolve abstract types into concrete ones; either by using static mappings, or possibly by materializing implementations dynamically."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class AbstractTypeResolver"
constructors:
- "com.fasterxml.jackson.databind.AbstractTypeResolver.AbstractTypeResolver()"
methods:
- "com.fasterxml.jackson.databind.AbstractTypeResolver.findTypeMapping(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.AbstractTypeResolver.resolveAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)"
- "com.fasterxml.jackson.databind.AbstractTypeResolver.resolveAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
