### YamlMime:JavaType
uid: "com.azure.media.videoanalyzer.edge.models.TlsEndpoint"
fullName: "com.azure.media.videoanalyzer.edge.models.TlsEndpoint"
name: "TlsEndpoint"
nameWithType: "TlsEndpoint"
summary: "TLS endpoint describes an endpoint that the pipeline can connect to over TLS transport (data is encrypted in transit)."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.media.videoanalyzer.edge.models.EndpointBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.media.videoanalyzer.edge.models.EndpointBase.getCredentials()"
- "com.azure.media.videoanalyzer.edge.models.EndpointBase.getUrl()"
- "com.azure.media.videoanalyzer.edge.models.EndpointBase.setCredentials(com.azure.media.videoanalyzer.edge.models.CredentialsBase)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TlsEndpoint extends EndpointBase"
constructors:
- uid: "com.azure.media.videoanalyzer.edge.models.TlsEndpoint.TlsEndpoint(java.lang.String)"
  fullName: "com.azure.media.videoanalyzer.edge.models.TlsEndpoint.TlsEndpoint(String url)"
  name: "TlsEndpoint(String url)"
  nameWithType: "TlsEndpoint.TlsEndpoint(String url)"
  summary: "Creates an instance of Tls<wbr>Endpoint class."
  parameters:
  - description: "the url value to set."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TlsEndpoint(String url)"
  desc: "Creates an instance of TlsEndpoint class."
methods:
- uid: "com.azure.media.videoanalyzer.edge.models.TlsEndpoint.getTrustedCertificates()"
  fullName: "com.azure.media.videoanalyzer.edge.models.TlsEndpoint.getTrustedCertificates()"
  name: "getTrustedCertificates()"
  nameWithType: "TlsEndpoint.getTrustedCertificates()"
  summary: "Get the trusted<wbr>Certificates property: List of trusted certificate authorities when authenticating a TLS connection."
  syntax: "public CertificateSource getTrustedCertificates()"
  desc: "Get the trustedCertificates property: List of trusted certificate authorities when authenticating a TLS connection. A null list designates that Azure Video Analyzer's list of trusted authorities should be used."
  returns:
    description: "the trustedCertificates value."
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.CertificateSource?alt=com.azure.media.videoanalyzer.edge.models.CertificateSource&text=CertificateSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.TlsEndpoint.getValidationOptions()"
  fullName: "com.azure.media.videoanalyzer.edge.models.TlsEndpoint.getValidationOptions()"
  name: "getValidationOptions()"
  nameWithType: "TlsEndpoint.getValidationOptions()"
  summary: "Get the validation<wbr>Options property: Validation options to use when authenticating a TLS connection."
  syntax: "public TlsValidationOptions getValidationOptions()"
  desc: "Get the validationOptions property: Validation options to use when authenticating a TLS connection. By default, strict validation is used."
  returns:
    description: "the validationOptions value."
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.TlsValidationOptions?alt=com.azure.media.videoanalyzer.edge.models.TlsValidationOptions&text=TlsValidationOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.TlsEndpoint.setCredentials(com.azure.media.videoanalyzer.edge.models.CredentialsBase)"
  fullName: "com.azure.media.videoanalyzer.edge.models.TlsEndpoint.setCredentials(CredentialsBase credentials)"
  name: "setCredentials(CredentialsBase credentials)"
  nameWithType: "TlsEndpoint.setCredentials(CredentialsBase credentials)"
  summary: "Set the credentials property: Credentials to be presented to the endpoint."
  overridden: "com.azure.media.videoanalyzer.edge.models.EndpointBase.setCredentials(com.azure.media.videoanalyzer.edge.models.CredentialsBase)"
  parameters:
  - name: "credentials"
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.CredentialsBase?alt=com.azure.media.videoanalyzer.edge.models.CredentialsBase&text=CredentialsBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TlsEndpoint setCredentials(CredentialsBase credentials)"
  desc: "Set the credentials property: Credentials to be presented to the endpoint."
  returns:
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.TlsEndpoint?alt=com.azure.media.videoanalyzer.edge.models.TlsEndpoint&text=TlsEndpoint\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.TlsEndpoint.setTrustedCertificates(com.azure.media.videoanalyzer.edge.models.CertificateSource)"
  fullName: "com.azure.media.videoanalyzer.edge.models.TlsEndpoint.setTrustedCertificates(CertificateSource trustedCertificates)"
  name: "setTrustedCertificates(CertificateSource trustedCertificates)"
  nameWithType: "TlsEndpoint.setTrustedCertificates(CertificateSource trustedCertificates)"
  summary: "Set the trusted<wbr>Certificates property: List of trusted certificate authorities when authenticating a TLS connection."
  parameters:
  - description: "the trustedCertificates value to set."
    name: "trustedCertificates"
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.CertificateSource?alt=com.azure.media.videoanalyzer.edge.models.CertificateSource&text=CertificateSource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TlsEndpoint setTrustedCertificates(CertificateSource trustedCertificates)"
  desc: "Set the trustedCertificates property: List of trusted certificate authorities when authenticating a TLS connection. A null list designates that Azure Video Analyzer's list of trusted authorities should be used."
  returns:
    description: "the TlsEndpoint object itself."
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.TlsEndpoint?alt=com.azure.media.videoanalyzer.edge.models.TlsEndpoint&text=TlsEndpoint\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.media.videoanalyzer.edge.models.TlsEndpoint.setValidationOptions(com.azure.media.videoanalyzer.edge.models.TlsValidationOptions)"
  fullName: "com.azure.media.videoanalyzer.edge.models.TlsEndpoint.setValidationOptions(TlsValidationOptions validationOptions)"
  name: "setValidationOptions(TlsValidationOptions validationOptions)"
  nameWithType: "TlsEndpoint.setValidationOptions(TlsValidationOptions validationOptions)"
  summary: "Set the validation<wbr>Options property: Validation options to use when authenticating a TLS connection."
  parameters:
  - description: "the validationOptions value to set."
    name: "validationOptions"
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.TlsValidationOptions?alt=com.azure.media.videoanalyzer.edge.models.TlsValidationOptions&text=TlsValidationOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TlsEndpoint setValidationOptions(TlsValidationOptions validationOptions)"
  desc: "Set the validationOptions property: Validation options to use when authenticating a TLS connection. By default, strict validation is used."
  returns:
    description: "the TlsEndpoint object itself."
    type: "<xref href=\"com.azure.media.videoanalyzer.edge.models.TlsEndpoint?alt=com.azure.media.videoanalyzer.edge.models.TlsEndpoint&text=TlsEndpoint\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "TLS endpoint describes an endpoint that the pipeline can connect to over TLS transport (data is encrypted in transit)."
metadata: {}
package: "com.azure.media.videoanalyzer.edge.models"
artifact: com.azure:azure-media-videoanalyzer-edge:1.0.0-beta.6
