### YamlMime:ManagedReference
items:
- uid: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets
  id: PagedFluxJavaDocCodeSnippets
  parent: com.azure.core.http.rest
  children:
  - com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.byPageSnippet()
  - com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.byTSnippet()
  - com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.classDocSnippet()
  - com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.createAnInstance()
  href: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.yml
  langs:
  - java
  name: PagedFluxJavaDocCodeSnippets
  nameWithType: PagedFluxJavaDocCodeSnippets
  fullName: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets
  type: Class
  source:
    remote: &o0
      path: sdk/core/azure-core/src/samples/java/com/azure/core/http/rest/PagedFluxJavaDocCodeSnippets.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/core/azure-core/src/samples/java/com/azure/core/http/rest/PagedFluxJavaDocCodeSnippets.java
    startLine: 13
  package: com.azure.core.http.rest
  summary: "<p>Code snippets for <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\">PagedFlux</xref></p>"
  syntax:
    content: public class PagedFluxJavaDocCodeSnippets
  inheritance:
  - java.lang.Object
- uid: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.byPageSnippet()
  id: byPageSnippet()
  parent: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets
  href: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.yml
  langs:
  - java
  name: byPageSnippet()
  nameWithType: PagedFluxJavaDocCodeSnippets.byPageSnippet()
  fullName: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.byPageSnippet()
  overload: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.byPageSnippet*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/samples/java/com/azure/core/http/rest/PagedFluxJavaDocCodeSnippets.java
    startLine: 80
  package: com.azure.core.http.rest
  summary: "<p>Code snippets for using <xref uid=\"com.azure.core.http.rest.PagedFlux.byPage()\" data-throw-if-not-resolved=\"false\">PagedFlux#byPage()</xref> and <xref uid=\"com.azure.core.http.rest.PagedFlux.byPage(String)\" data-throw-if-not-resolved=\"false\">PagedFlux#byPage(String)</xref></p>"
  syntax:
    content: public void byPageSnippet()
- uid: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.byTSnippet()
  id: byTSnippet()
  parent: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets
  href: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.yml
  langs:
  - java
  name: byTSnippet()
  nameWithType: PagedFluxJavaDocCodeSnippets.byTSnippet()
  fullName: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.byTSnippet()
  overload: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.byTSnippet*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/samples/java/com/azure/core/http/rest/PagedFluxJavaDocCodeSnippets.java
    startLine: 110
  package: com.azure.core.http.rest
  summary: "<p>Code snippets for using <xref uid=\"\" data-throw-if-not-resolved=\"false\">PagedFlux#subscribe(CoreSubscriber)</xref></p>"
  syntax:
    content: public void byTSnippet()
- uid: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.classDocSnippet()
  id: classDocSnippet()
  parent: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets
  href: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.yml
  langs:
  - java
  name: classDocSnippet()
  nameWithType: PagedFluxJavaDocCodeSnippets.classDocSnippet()
  fullName: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.classDocSnippet()
  overload: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.classDocSnippet*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/samples/java/com/azure/core/http/rest/PagedFluxJavaDocCodeSnippets.java
    startLine: 18
  package: com.azure.core.http.rest
  summary: "<p>Code snippets for showing usage of <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\">PagedFlux</xref> in class docs </p>"
  syntax:
    content: public void classDocSnippet()
- uid: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.createAnInstance()
  id: createAnInstance()
  parent: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets
  href: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.yml
  langs:
  - java
  name: createAnInstance()
  nameWithType: PagedFluxJavaDocCodeSnippets.createAnInstance()
  fullName: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.createAnInstance()
  overload: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.createAnInstance*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/samples/java/com/azure/core/http/rest/PagedFluxJavaDocCodeSnippets.java
    startLine: 61
  package: com.azure.core.http.rest
  summary: "<p>Code snippets for creating an instance of <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\">PagedFlux</xref></p>"
  syntax:
    content: public PagedFlux<Integer> createAnInstance()
    return:
      type: com.azure.core.http.rest.PagedFluxb7bc04e2
      description: <p>An instance of <xref uid="com.azure.core.http.rest.PagedFlux" data-throw-if-not-resolved="false">PagedFlux</xref></p>
references:
- uid: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.classDocSnippet*
  name: classDocSnippet
  nameWithType: PagedFluxJavaDocCodeSnippets.classDocSnippet
  fullName: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.classDocSnippet
  package: com.azure.core.http.rest
- uid: com.azure.core.http.rest.PagedFluxb7bc04e2
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
    href: com.azure.core.http.rest.PagedFlux.yml
  - name: <Integer>
    fullName: <Integer>
- uid: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.createAnInstance*
  name: createAnInstance
  nameWithType: PagedFluxJavaDocCodeSnippets.createAnInstance
  fullName: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.createAnInstance
  package: com.azure.core.http.rest
- uid: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.byPageSnippet*
  name: byPageSnippet
  nameWithType: PagedFluxJavaDocCodeSnippets.byPageSnippet
  fullName: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.byPageSnippet
  package: com.azure.core.http.rest
- uid: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.byTSnippet*
  name: byTSnippet
  nameWithType: PagedFluxJavaDocCodeSnippets.byTSnippet
  fullName: com.azure.core.http.rest.PagedFluxJavaDocCodeSnippets.byTSnippet
  package: com.azure.core.http.rest
- uid: com.azure.core.http.rest.PagedFlux
  parent: com.azure.core.http.rest
  href: com.azure.core.http.rest.PagedFlux.yml
  name: PagedFlux<T>
  nameWithType: PagedFlux<T>
  fullName: com.azure.core.http.rest.PagedFlux<T>
  type: Class
  summary: "<p>This class is a flux that can operate on a <xref uid=\"com.azure.core.http.rest.PagedResponse\" data-throw-if-not-resolved=\"false\">PagedResponse</xref> and also provides the ability to operate on individual items. When processing the response by page, each response will contain the items in the page as well as the request details like status code and headers.</p>\r\n<p>To process one item at a time, simply subscribe to this flux as shown below </p>\r\n<p>\r\n  <b>Code sample</b>\r\n</p>\r\n<p>{ com.azure.core.http.rest.pagedflux.items}</p>\r\n<p>To process one page at a time, use <xref uid=\"com.azure.core.http.rest.PagedFlux.byPage()\" data-throw-if-not-resolved=\"false\">byPage</xref> method as shown below </p>\r\n<p>\r\n  <b>Code sample</b>\r\n</p>\r\n<p>{ com.azure.core.http.rest.pagedflux.pages}</p>\r\n<p>To process items one page at a time starting from any page associated with a continuation token, use <xref uid=\"com.azure.core.http.rest.PagedFlux.byPage(String)\" data-throw-if-not-resolved=\"false\">byPage(String)</xref> as shown below</p>\r\n<p>\r\n  <b>Code sample</b>\r\n</p>\r\n<p>{ com.azure.core.http.rest.pagedflux.pagesWithContinuationToken}</p>\r\n<p></p>"
  syntax:
    content: public class PagedFlux<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>The type of items in a <xref uid="com.azure.core.http.rest.PagedResponse" data-throw-if-not-resolved="false">PagedResponse</xref></p>
- uid: com.azure.core.http.rest.PagedFlux.byPage()
  parent: com.azure.core.http.rest.PagedFlux
  href: com.azure.core.http.rest.PagedFlux.yml
  name: byPage()
  nameWithType: PagedFlux<T>.byPage()
  fullName: com.azure.core.http.rest.PagedFlux<T>.byPage()
  type: Method
  summary: "<p>Creates a flux of <xref uid=\"com.azure.core.http.rest.PagedResponse\" data-throw-if-not-resolved=\"false\">PagedResponse</xref> starting from the first page.</p>\r\n<p>\r\n  <b>Code sample</b>\r\n</p>\r\n<p>{ com.azure.core.http.rest.pagedflux.bypage}</p>\r\n<p></p>"
  syntax:
    content: public Flux<PagedResponse<T>> byPage()
    return:
      type: f5e9f800com.azure.core.http.rest.PagedResponse84ce83e6
      description: <p>A <xref uid="com.azure.core.http.rest.PagedFlux" data-throw-if-not-resolved="false">PagedFlux</xref> starting from the first page </p>
- uid: com.azure.core.http.rest.PagedFlux.byPage(String)
  parent: com.azure.core.http.rest.PagedFlux
  href: com.azure.core.http.rest.PagedFlux.yml
  name: byPage(String continuationToken)
  nameWithType: PagedFlux<T>.byPage(String continuationToken)
  fullName: com.azure.core.http.rest.PagedFlux<T>.byPage(String continuationToken)
  type: Method
  summary: "<p>Creates a flux of <xref uid=\"com.azure.core.http.rest.PagedResponse\" data-throw-if-not-resolved=\"false\">PagedResponse</xref> starting from the next page associated with the given continuation token. To start from first page, use <xref uid=\"com.azure.core.http.rest.PagedFlux.byPage()\" data-throw-if-not-resolved=\"false\">byPage()</xref> instead.</p>\r\n<p>\r\n  <b>Code sample</b>\r\n</p>\r\n<p>{ com.azure.core.http.rest.pagedflux.bypage::String}</p>\r\n<p></p>"
  syntax:
    content: public Flux<PagedResponse<T>> byPage(String continuationToken)
    parameters:
    - id: continuationToken
      type: "26831127"
      description: <p>The continuation token used to fetch the next page </p>
    return:
      type: f5e9f800com.azure.core.http.rest.PagedResponse84ce83e6
      description: <p>A <xref uid="com.azure.core.http.rest.PagedFlux" data-throw-if-not-resolved="false">PagedFlux</xref> starting from the page associated with the continuation token </p>
- uid: com.azure.core.http.rest.PagedResponse
  parent: com.azure.core.http.rest
  href: com.azure.core.http.rest.PagedResponse.yml
  name: PagedResponse<T>
  nameWithType: PagedResponse<T>
  fullName: com.azure.core.http.rest.PagedResponse<T>
  type: Interface
  summary: "<p>Response of a REST API that returns page.</p>\r\n<p></p>"
  syntax:
    content: public interface PagedResponse<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>the type items in the page </p>
