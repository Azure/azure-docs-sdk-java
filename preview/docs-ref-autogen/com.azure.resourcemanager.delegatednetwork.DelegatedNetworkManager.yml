### YamlMime:JavaType
uid: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager"
fullName: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager"
name: "DelegatedNetworkManager"
nameWithType: "DelegatedNetworkManager"
summary: "Entry point to Delegated<wbr>Network<wbr>Manager."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DelegatedNetworkManager"
methods:
- uid: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.authenticate(com.azure.core.credential.TokenCredential,com.azure.core.management.profile.AzureProfile)"
  fullName: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.authenticate(TokenCredential credential, AzureProfile profile)"
  name: "authenticate(TokenCredential credential, AzureProfile profile)"
  nameWithType: "DelegatedNetworkManager.authenticate(TokenCredential credential, AzureProfile profile)"
  summary: "Creates an instance of Delegated<wbr>Network service API entry point."
  modifiers:
  - "static"
  parameters:
  - description: "the credential to use."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - description: "the Azure profile for client."
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static DelegatedNetworkManager authenticate(TokenCredential credential, AzureProfile profile)"
  desc: "Creates an instance of DelegatedNetwork service API entry point."
  returns:
    description: "the DelegatedNetwork service API instance."
    type: "<xref href=\"com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager?alt=com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager&text=DelegatedNetworkManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.configure()"
  fullName: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.configure()"
  name: "configure()"
  nameWithType: "DelegatedNetworkManager.configure()"
  summary: "Gets a Configurable instance that can be used to create Delegated<wbr>Network<wbr>Manager with optional configuration."
  modifiers:
  - "static"
  syntax: "public static DelegatedNetworkManager.Configurable configure()"
  desc: "Gets a Configurable instance that can be used to create DelegatedNetworkManager with optional configuration."
  returns:
    description: "the Configurable instance allowing configurations."
    type: "<xref href=\"com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.Configurable?alt=com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.Configurable&text=Configurable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.controllers()"
  fullName: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.controllers()"
  name: "controllers()"
  nameWithType: "DelegatedNetworkManager.controllers()"
  syntax: "public Controllers controllers()"
  returns:
    description: "Resource collection API of Controllers."
    type: "<xref href=\"com.azure.resourcemanager.delegatednetwork.models.Controllers?alt=com.azure.resourcemanager.delegatednetwork.models.Controllers&text=Controllers\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.delegatedNetworks()"
  fullName: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.delegatedNetworks()"
  name: "delegatedNetworks()"
  nameWithType: "DelegatedNetworkManager.delegatedNetworks()"
  syntax: "public DelegatedNetworks delegatedNetworks()"
  returns:
    description: "Resource collection API of DelegatedNetworks."
    type: "<xref href=\"com.azure.resourcemanager.delegatednetwork.models.DelegatedNetworks?alt=com.azure.resourcemanager.delegatednetwork.models.DelegatedNetworks&text=DelegatedNetworks\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.delegatedSubnetServices()"
  fullName: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.delegatedSubnetServices()"
  name: "delegatedSubnetServices()"
  nameWithType: "DelegatedNetworkManager.delegatedSubnetServices()"
  syntax: "public DelegatedSubnetServices delegatedSubnetServices()"
  returns:
    description: "Resource collection API of DelegatedSubnetServices."
    type: "<xref href=\"com.azure.resourcemanager.delegatednetwork.models.DelegatedSubnetServices?alt=com.azure.resourcemanager.delegatednetwork.models.DelegatedSubnetServices&text=DelegatedSubnetServices\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.operations()"
  fullName: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.operations()"
  name: "operations()"
  nameWithType: "DelegatedNetworkManager.operations()"
  syntax: "public Operations operations()"
  returns:
    description: "Resource collection API of Operations."
    type: "<xref href=\"com.azure.resourcemanager.delegatednetwork.models.Operations?alt=com.azure.resourcemanager.delegatednetwork.models.Operations&text=Operations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.orchestratorInstanceServices()"
  fullName: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.orchestratorInstanceServices()"
  name: "orchestratorInstanceServices()"
  nameWithType: "DelegatedNetworkManager.orchestratorInstanceServices()"
  syntax: "public OrchestratorInstanceServices orchestratorInstanceServices()"
  returns:
    description: "Resource collection API of OrchestratorInstanceServices."
    type: "<xref href=\"com.azure.resourcemanager.delegatednetwork.models.OrchestratorInstanceServices?alt=com.azure.resourcemanager.delegatednetwork.models.OrchestratorInstanceServices&text=OrchestratorInstanceServices\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.serviceClient()"
  fullName: "com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager.serviceClient()"
  name: "serviceClient()"
  nameWithType: "DelegatedNetworkManager.serviceClient()"
  syntax: "public Dnc serviceClient()"
  returns:
    description: "Wrapped service client Dnc providing direct access to the underlying auto-generated API implementation,\n     based on Azure REST API."
    type: "<xref href=\"com.azure.resourcemanager.delegatednetwork.fluent.Dnc?alt=com.azure.resourcemanager.delegatednetwork.fluent.Dnc&text=Dnc\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Entry point to DelegatedNetworkManager. DNC web api provides way to create, get and delete dnc controller."
metadata: {}
package: "com.azure.resourcemanager.delegatednetwork"
artifact: com.azure.resourcemanager:azure-resourcemanager-delegatednetwork:1.0.0-beta.1
