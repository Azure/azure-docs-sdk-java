### YamlMime:JavaType
uid: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties"
fullName: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties"
name: "PipelineTopologyProperties"
nameWithType: "PipelineTopologyProperties"
summary: "Describes the properties of a pipeline topology."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PipelineTopologyProperties"
constructors:
- uid: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.PipelineTopologyProperties()"
  fullName: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.PipelineTopologyProperties()"
  name: "PipelineTopologyProperties()"
  nameWithType: "PipelineTopologyProperties.PipelineTopologyProperties()"
  syntax: "public PipelineTopologyProperties()"
methods:
- uid: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.description()"
  fullName: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.description()"
  name: "description()"
  nameWithType: "PipelineTopologyProperties.description()"
  summary: "Get the description property: An optional description of the pipeline topology."
  syntax: "public String description()"
  desc: "Get the description property: An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here."
  returns:
    description: "the description value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.parameters()"
  fullName: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.parameters()"
  name: "parameters()"
  nameWithType: "PipelineTopologyProperties.parameters()"
  summary: "Get the parameters property: List of the topology parameter declarations."
  syntax: "public List<ParameterDeclaration> parameters()"
  desc: "Get the parameters property: List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of \"$\\{PARAMETER\\_NAME\\}\" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline."
  returns:
    description: "the parameters value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.ParameterDeclaration?alt=com.azure.resourcemanager.videoanalyzer.models.ParameterDeclaration&text=ParameterDeclaration\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.processors()"
  fullName: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.processors()"
  name: "processors()"
  nameWithType: "PipelineTopologyProperties.processors()"
  summary: "Get the processors property: List of the topology processor nodes."
  syntax: "public List<ProcessorNodeBase> processors()"
  desc: "Get the processors property: List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed."
  returns:
    description: "the processors value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase?alt=com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase&text=ProcessorNodeBase\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.sinks()"
  fullName: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.sinks()"
  name: "sinks()"
  nameWithType: "PipelineTopologyProperties.sinks()"
  summary: "Get the sinks property: List of the topology sink nodes."
  syntax: "public List<SinkNodeBase> sinks()"
  desc: "Get the sinks property: List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported."
  returns:
    description: "the sinks value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.SinkNodeBase?alt=com.azure.resourcemanager.videoanalyzer.models.SinkNodeBase&text=SinkNodeBase\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.sources()"
  fullName: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.sources()"
  name: "sources()"
  nameWithType: "PipelineTopologyProperties.sources()"
  summary: "Get the sources property: List of the topology source nodes."
  syntax: "public List<SourceNodeBase> sources()"
  desc: "Get the sources property: List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline."
  returns:
    description: "the sources value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.SourceNodeBase?alt=com.azure.resourcemanager.videoanalyzer.models.SourceNodeBase&text=SourceNodeBase\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.validate()"
  fullName: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.validate()"
  name: "validate()"
  nameWithType: "PipelineTopologyProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "PipelineTopologyProperties.withDescription(String description)"
  summary: "Set the description property: An optional description of the pipeline topology."
  parameters:
  - description: "the description value to set."
    name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PipelineTopologyProperties withDescription(String description)"
  desc: "Set the description property: An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here."
  returns:
    description: "the PipelineTopologyProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties?alt=com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties&text=PipelineTopologyProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.withParameters(java.util.List<com.azure.resourcemanager.videoanalyzer.models.ParameterDeclaration>)"
  fullName: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.withParameters(List<ParameterDeclaration> parameters)"
  name: "withParameters(List<ParameterDeclaration> parameters)"
  nameWithType: "PipelineTopologyProperties.withParameters(List<ParameterDeclaration> parameters)"
  summary: "Set the parameters property: List of the topology parameter declarations."
  parameters:
  - description: "the parameters value to set."
    name: "parameters"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.ParameterDeclaration?alt=com.azure.resourcemanager.videoanalyzer.models.ParameterDeclaration&text=ParameterDeclaration\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PipelineTopologyProperties withParameters(List<ParameterDeclaration> parameters)"
  desc: "Set the parameters property: List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of \"$\\{PARAMETER\\_NAME\\}\" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline."
  returns:
    description: "the PipelineTopologyProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties?alt=com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties&text=PipelineTopologyProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.withProcessors(java.util.List<com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase>)"
  fullName: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.withProcessors(List<ProcessorNodeBase> processors)"
  name: "withProcessors(List<ProcessorNodeBase> processors)"
  nameWithType: "PipelineTopologyProperties.withProcessors(List<ProcessorNodeBase> processors)"
  summary: "Set the processors property: List of the topology processor nodes."
  parameters:
  - description: "the processors value to set."
    name: "processors"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase?alt=com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase&text=ProcessorNodeBase\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PipelineTopologyProperties withProcessors(List<ProcessorNodeBase> processors)"
  desc: "Set the processors property: List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed."
  returns:
    description: "the PipelineTopologyProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties?alt=com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties&text=PipelineTopologyProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.withSinks(java.util.List<com.azure.resourcemanager.videoanalyzer.models.SinkNodeBase>)"
  fullName: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.withSinks(List<SinkNodeBase> sinks)"
  name: "withSinks(List<SinkNodeBase> sinks)"
  nameWithType: "PipelineTopologyProperties.withSinks(List<SinkNodeBase> sinks)"
  summary: "Set the sinks property: List of the topology sink nodes."
  parameters:
  - description: "the sinks value to set."
    name: "sinks"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.SinkNodeBase?alt=com.azure.resourcemanager.videoanalyzer.models.SinkNodeBase&text=SinkNodeBase\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PipelineTopologyProperties withSinks(List<SinkNodeBase> sinks)"
  desc: "Set the sinks property: List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported."
  returns:
    description: "the PipelineTopologyProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties?alt=com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties&text=PipelineTopologyProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.withSources(java.util.List<com.azure.resourcemanager.videoanalyzer.models.SourceNodeBase>)"
  fullName: "com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties.withSources(List<SourceNodeBase> sources)"
  name: "withSources(List<SourceNodeBase> sources)"
  nameWithType: "PipelineTopologyProperties.withSources(List<SourceNodeBase> sources)"
  summary: "Set the sources property: List of the topology source nodes."
  parameters:
  - description: "the sources value to set."
    name: "sources"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.SourceNodeBase?alt=com.azure.resourcemanager.videoanalyzer.models.SourceNodeBase&text=SourceNodeBase\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PipelineTopologyProperties withSources(List<SourceNodeBase> sources)"
  desc: "Set the sources property: List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline."
  returns:
    description: "the PipelineTopologyProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties?alt=com.azure.resourcemanager.videoanalyzer.fluent.models.PipelineTopologyProperties&text=PipelineTopologyProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Describes the properties of a pipeline topology."
metadata: {}
package: "com.azure.resourcemanager.videoanalyzer.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-videoanalyzer:1.0.0-beta.5
