### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine
  id: WithVirtualMachine
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models
  children:
  - com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine.toExistingVirtualMachines(com.azure.resourcemanager.network.models.HasNetworkInterfaces...)
  - com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine.toExistingVirtualMachines(java.util.Collection<com.azure.resourcemanager.network.models.HasNetworkInterfaces>)
  langs:
  - java
  name: LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine<ReturnT>
  nameWithType: LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine<ReturnT>
  fullName: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine<ReturnT>
  type: Interface
  package: com.azure.resourcemanager.network.models
  summary: The stage of a load balancing rule definition allowing to select a set of virtual machines to load balance the network traffic among.
  syntax:
    content: public static interface LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine<ReturnT>
    typeParameters:
    - id: ReturnT
- uid: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine.toExistingVirtualMachines(com.azure.resourcemanager.network.models.HasNetworkInterfaces...)
  id: toExistingVirtualMachines(com.azure.resourcemanager.network.models.HasNetworkInterfaces...)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine
  langs:
  - java
  name: toExistingVirtualMachines(HasNetworkInterfaces[] vms)
  nameWithType: LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine<ReturnT>.toExistingVirtualMachines(HasNetworkInterfaces[] vms)
  fullName: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine<ReturnT>.toExistingVirtualMachines(HasNetworkInterfaces[] vms)
  overload: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine.toExistingVirtualMachines*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: >-
    Adds the specified set of virtual machines, assuming they are from the same availability set, to a new back end address pool to be associated with this load balancing rule.


    This will add references to the primary IP configurations of the primary network interfaces of the provided set of virtual machines.


    If the virtual machines are not in the same availability set, they will not be associated with the backend.


    Only those virtual machines will be associated with the load balancer that already have an existing network interface. Virtual machines without a network interface will be skipped.
  syntax:
    content: public abstract LoadBalancingRule.UpdateDefinitionStages.WithBackendPort<ReturnT> toExistingVirtualMachines(HasNetworkInterfaces[] vms)
    parameters:
    - id: vms
      type: com.azure.resourcemanager.network.models.HasNetworkInterfaces[]
      description: existing virtual machines
    return:
      type: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithBackendPort<ReturnT>
      description: the next stage of the definition
- uid: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine.toExistingVirtualMachines(java.util.Collection<com.azure.resourcemanager.network.models.HasNetworkInterfaces>)
  id: toExistingVirtualMachines(java.util.Collection<com.azure.resourcemanager.network.models.HasNetworkInterfaces>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine
  langs:
  - java
  name: toExistingVirtualMachines(Collection<HasNetworkInterfaces> vms)
  nameWithType: LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine<ReturnT>.toExistingVirtualMachines(Collection<HasNetworkInterfaces> vms)
  fullName: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine<ReturnT>.toExistingVirtualMachines(Collection<HasNetworkInterfaces> vms)
  overload: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine.toExistingVirtualMachines*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: >-
    Adds the specified set of virtual machines, assuming they are from the same availability set, to a new back end address pool to be associated with this load balancing rule.


    This will add references to the primary IP configurations of the primary network interfaces of the provided set of virtual machines.


    If the virtual machines are not in the same availability set, they will not be associated with the backend.


    Only those virtual machines will be associated with the load balancer that already have an existing network interface. Virtual machines without a network interface will be skipped.
  syntax:
    content: public abstract LoadBalancingRule.UpdateDefinitionStages.WithBackendPort<ReturnT> toExistingVirtualMachines(Collection<HasNetworkInterfaces> vms)
    parameters:
    - id: vms
      type: java.util.Collection<com.azure.resourcemanager.network.models.HasNetworkInterfaces>
      description: existing virtual machines
    return:
      type: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithBackendPort<ReturnT>
      description: the next stage of the definition
references:
- uid: com.azure.resourcemanager.network.models.HasNetworkInterfaces[]
  spec.java:
  - uid: com.azure.resourcemanager.network.models.HasNetworkInterfaces
    name: HasNetworkInterfaces
    fullName: com.azure.resourcemanager.network.models.HasNetworkInterfaces
  - name: '[]'
    fullName: '[]'
- uid: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithBackendPort<ReturnT>
  spec.java:
  - uid: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithBackendPort
    name: WithBackendPort
    fullName: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithBackendPort
  - name: <
    fullName: <
  - uid: ReturnT
    name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine.toExistingVirtualMachines*
  name: toExistingVirtualMachines
  nameWithType: LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine<ReturnT>.toExistingVirtualMachines
  fullName: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithVirtualMachine<ReturnT>.toExistingVirtualMachines
  package: com.azure.resourcemanager.network.models
- uid: java.util.Collection<com.azure.resourcemanager.network.models.HasNetworkInterfaces>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.models.HasNetworkInterfaces
    name: HasNetworkInterfaces
    fullName: com.azure.resourcemanager.network.models.HasNetworkInterfaces
  - name: '>'
    fullName: '>'
- uid: ReturnT
  name: ReturnT
  nameWithType: ReturnT
  fullName: ReturnT
- uid: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithBackendPort
  name: LoadBalancingRule.UpdateDefinitionStages.WithBackendPort
  nameWithType: LoadBalancingRule.UpdateDefinitionStages.WithBackendPort
  fullName: com.azure.resourcemanager.network.models.LoadBalancingRule.UpdateDefinitionStages.WithBackendPort
- uid: com.azure.resourcemanager.network.models.HasNetworkInterfaces
  name: HasNetworkInterfaces
  nameWithType: HasNetworkInterfaces
  fullName: com.azure.resourcemanager.network.models.HasNetworkInterfaces
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
