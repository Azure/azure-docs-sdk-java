### YamlMime:JavaType
uid: "com.azure.maps.weather.WeatherClientBuilder"
fullName: "com.azure.maps.weather.WeatherClientBuilder"
name: "WeatherClientBuilder"
nameWithType: "WeatherClientBuilder"
summary: "Builder class used to instantiate both synchronous and asynchronous <xref uid=\"com.azure.maps.weather.WeatherClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"WeatherClient\"></xref> clients."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **WeatherClientBuilder**</br> implements <xref href=\"com.azure.core.client.traits.AzureKeyCredentialTrait?alt=com.azure.core.client.traits.AzureKeyCredentialTrait&text=AzureKeyCredentialTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;, <xref href=\"com.azure.core.client.traits.TokenCredentialTrait?alt=com.azure.core.client.traits.TokenCredentialTrait&text=TokenCredentialTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;, <xref href=\"com.azure.core.client.traits.HttpTrait?alt=com.azure.core.client.traits.HttpTrait&text=HttpTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;, <xref href=\"com.azure.core.client.traits.ConfigurationTrait?alt=com.azure.core.client.traits.ConfigurationTrait&text=ConfigurationTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;, <xref href=\"com.azure.core.client.traits.EndpointTrait?alt=com.azure.core.client.traits.EndpointTrait&text=EndpointTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.maps.weather.WeatherClientBuilder.WeatherClientBuilder()"
  fullName: "com.azure.maps.weather.WeatherClientBuilder.WeatherClientBuilder()"
  name: "WeatherClientBuilder()"
  nameWithType: "WeatherClientBuilder.WeatherClientBuilder()"
  summary: "Default constructor for the builder class."
  syntax: "public WeatherClientBuilder()"
  desc: "Default constructor for the builder class."
methods:
- uid: "com.azure.maps.weather.WeatherClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  fullName: "com.azure.maps.weather.WeatherClientBuilder.addPolicy(HttpPipelinePolicy customPolicy)"
  name: "addPolicy(HttpPipelinePolicy customPolicy)"
  nameWithType: "WeatherClientBuilder.addPolicy(HttpPipelinePolicy customPolicy)"
  summary: "Adds a custom Http pipeline policy."
  parameters:
  - description: "The custom Http pipeline policy to add."
    name: "customPolicy"
    type: "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WeatherClientBuilder addPolicy(HttpPipelinePolicy customPolicy)"
  desc: "Adds a custom Http pipeline policy."
  returns:
    description: "the WeatherClientBuilder."
    type: "<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.WeatherClientBuilder.buildAsyncClient()"
  fullName: "com.azure.maps.weather.WeatherClientBuilder.buildAsyncClient()"
  name: "buildAsyncClient()"
  nameWithType: "WeatherClientBuilder.buildAsyncClient()"
  summary: "Builds an instance of Weather<wbr>Async<wbr>Client async client."
  syntax: "public WeatherAsyncClient buildAsyncClient()"
  desc: "Builds an instance of WeatherAsyncClient async client."
  returns:
    description: "an instance of WeatherAsyncClient."
    type: "<xref href=\"com.azure.maps.weather.WeatherAsyncClient?alt=com.azure.maps.weather.WeatherAsyncClient&text=WeatherAsyncClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.WeatherClientBuilder.buildClient()"
  fullName: "com.azure.maps.weather.WeatherClientBuilder.buildClient()"
  name: "buildClient()"
  nameWithType: "WeatherClientBuilder.buildClient()"
  summary: "Builds an instance of Weather<wbr>Client sync client."
  syntax: "public WeatherClient buildClient()"
  desc: "Builds an instance of WeatherClient sync client."
  returns:
    description: "an instance of WeatherClient."
    type: "<xref href=\"com.azure.maps.weather.WeatherClient?alt=com.azure.maps.weather.WeatherClient&text=WeatherClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.WeatherClientBuilder.clientOptions(com.azure.core.util.ClientOptions)"
  fullName: "com.azure.maps.weather.WeatherClientBuilder.clientOptions(ClientOptions clientOptions)"
  name: "clientOptions(ClientOptions clientOptions)"
  nameWithType: "WeatherClientBuilder.clientOptions(ClientOptions clientOptions)"
  summary: "Sets The client options such as application ID and custom headers to set on a request."
  parameters:
  - description: "the clientOptions value."
    name: "clientOptions"
    type: "<xref href=\"com.azure.core.util.ClientOptions?alt=com.azure.core.util.ClientOptions&text=ClientOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WeatherClientBuilder clientOptions(ClientOptions clientOptions)"
  desc: "Sets The client options such as application ID and custom headers to set on a request."
  returns:
    description: "the WeatherClientBuilder."
    type: "<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.WeatherClientBuilder.configuration(com.azure.core.util.Configuration)"
  fullName: "com.azure.maps.weather.WeatherClientBuilder.configuration(Configuration configuration)"
  name: "configuration(Configuration configuration)"
  nameWithType: "WeatherClientBuilder.configuration(Configuration configuration)"
  summary: "Sets The configuration store that is used during construction of the service client."
  parameters:
  - description: "the configuration value."
    name: "configuration"
    type: "<xref href=\"com.azure.core.util.Configuration?alt=com.azure.core.util.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WeatherClientBuilder configuration(Configuration configuration)"
  desc: "Sets The configuration store that is used during construction of the service client."
  returns:
    description: "the WeatherClientBuilder."
    type: "<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.WeatherClientBuilder.credential(com.azure.core.credential.AzureKeyCredential)"
  fullName: "com.azure.maps.weather.WeatherClientBuilder.credential(AzureKeyCredential keyCredential)"
  name: "credential(AzureKeyCredential keyCredential)"
  nameWithType: "WeatherClientBuilder.credential(AzureKeyCredential keyCredential)"
  summary: "Sets the <xref uid=\"com.azure.core.credential.AzureKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureKeyCredential\"></xref> used to authenticate HTTP requests."
  parameters:
  - description: "The <xref uid=\"com.azure.core.credential.AzureKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureKeyCredential\"></xref> used to authenticate HTTP requests."
    name: "keyCredential"
    type: "<xref href=\"com.azure.core.credential.AzureKeyCredential?alt=com.azure.core.credential.AzureKeyCredential&text=AzureKeyCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WeatherClientBuilder credential(AzureKeyCredential keyCredential)"
  desc: "Sets the <xref uid=\"com.azure.core.credential.AzureKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureKeyCredential\"></xref> used to authenticate HTTP requests."
  returns:
    description: "The updated <xref uid=\"com.azure.maps.weather.WeatherClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"WeatherClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.WeatherClientBuilder.credential(com.azure.core.credential.TokenCredential)"
  fullName: "com.azure.maps.weather.WeatherClientBuilder.credential(TokenCredential tokenCredential)"
  name: "credential(TokenCredential tokenCredential)"
  nameWithType: "WeatherClientBuilder.credential(TokenCredential tokenCredential)"
  summary: "Sets the <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> used to authenticate HTTP requests."
  parameters:
  - description: "<xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> used to authenticate HTTP requests."
    name: "tokenCredential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WeatherClientBuilder credential(TokenCredential tokenCredential)"
  desc: "Sets the <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> used to authenticate HTTP requests."
  returns:
    description: "The updated <xref uid=\"com.azure.maps.weather.WeatherClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"WeatherClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.WeatherClientBuilder.endpoint(java.lang.String)"
  fullName: "com.azure.maps.weather.WeatherClientBuilder.endpoint(String endpoint)"
  name: "endpoint(String endpoint)"
  nameWithType: "WeatherClientBuilder.endpoint(String endpoint)"
  summary: "Set endpoint of the service."
  parameters:
  - description: "url of the service"
    name: "endpoint"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public WeatherClientBuilder endpoint(String endpoint)"
  desc: "Set endpoint of the service."
  returns:
    description: "WeatherClientBuilder"
    type: "<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.WeatherClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  fullName: "com.azure.maps.weather.WeatherClientBuilder.httpClient(HttpClient httpClient)"
  name: "httpClient(HttpClient httpClient)"
  nameWithType: "WeatherClientBuilder.httpClient(HttpClient httpClient)"
  summary: "Sets The HTTP client used to send the request."
  parameters:
  - description: "the httpClient value."
    name: "httpClient"
    type: "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WeatherClientBuilder httpClient(HttpClient httpClient)"
  desc: "Sets The HTTP client used to send the request."
  returns:
    description: "the WeatherClientBuilder."
    type: "<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.WeatherClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  fullName: "com.azure.maps.weather.WeatherClientBuilder.httpLogOptions(HttpLogOptions httpLogOptions)"
  name: "httpLogOptions(HttpLogOptions httpLogOptions)"
  nameWithType: "WeatherClientBuilder.httpLogOptions(HttpLogOptions httpLogOptions)"
  summary: "Sets The logging configuration for HTTP requests and responses."
  parameters:
  - description: "the httpLogOptions value."
    name: "httpLogOptions"
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WeatherClientBuilder httpLogOptions(HttpLogOptions httpLogOptions)"
  desc: "Sets The logging configuration for HTTP requests and responses."
  returns:
    description: "the WeatherClientBuilder."
    type: "<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.WeatherClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  fullName: "com.azure.maps.weather.WeatherClientBuilder.pipeline(HttpPipeline pipeline)"
  name: "pipeline(HttpPipeline pipeline)"
  nameWithType: "WeatherClientBuilder.pipeline(HttpPipeline pipeline)"
  summary: "Sets The HTTP pipeline to send requests through."
  parameters:
  - description: "the pipeline value."
    name: "pipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WeatherClientBuilder pipeline(HttpPipeline pipeline)"
  desc: "Sets The HTTP pipeline to send requests through."
  returns:
    description: "the WeatherClientBuilder."
    type: "<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.WeatherClientBuilder.retryOptions(com.azure.core.http.policy.RetryOptions)"
  fullName: "com.azure.maps.weather.WeatherClientBuilder.retryOptions(RetryOptions retryOptions)"
  name: "retryOptions(RetryOptions retryOptions)"
  nameWithType: "WeatherClientBuilder.retryOptions(RetryOptions retryOptions)"
  summary: "Sets retry options"
  parameters:
  - description: "the retry options for the client"
    name: "retryOptions"
    type: "<xref href=\"com.azure.core.http.policy.RetryOptions?alt=com.azure.core.http.policy.RetryOptions&text=RetryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WeatherClientBuilder retryOptions(RetryOptions retryOptions)"
  desc: "Sets retry options"
  returns:
    description: "a reference to this <code>WeatherClientBuilder</code>"
    type: "<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.WeatherClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)"
  fullName: "com.azure.maps.weather.WeatherClientBuilder.retryPolicy(RetryPolicy retryPolicy)"
  name: "retryPolicy(RetryPolicy retryPolicy)"
  nameWithType: "WeatherClientBuilder.retryPolicy(RetryPolicy retryPolicy)"
  summary: "Sets The retry policy that will attempt to retry failed requests, if applicable."
  parameters:
  - description: "the retryPolicy value."
    name: "retryPolicy"
    type: "<xref href=\"com.azure.core.http.policy.RetryPolicy?alt=com.azure.core.http.policy.RetryPolicy&text=RetryPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WeatherClientBuilder retryPolicy(RetryPolicy retryPolicy)"
  desc: "Sets The retry policy that will attempt to retry failed requests, if applicable."
  returns:
    description: "the WeatherClientBuilder."
    type: "<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.WeatherClientBuilder.serviceVersion(com.azure.maps.weather.WeatherServiceVersion)"
  fullName: "com.azure.maps.weather.WeatherClientBuilder.serviceVersion(WeatherServiceVersion version)"
  name: "serviceVersion(WeatherServiceVersion version)"
  nameWithType: "WeatherClientBuilder.serviceVersion(WeatherServiceVersion version)"
  summary: "Sets the <xref uid=\"com.azure.maps.weather.WeatherServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"WeatherServiceVersion\"></xref> that is used when making API requests."
  parameters:
  - description: "<xref uid=\"com.azure.maps.weather.WeatherServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"WeatherServiceVersion\"></xref> of the service to be used when making requests."
    name: "version"
    type: "<xref href=\"com.azure.maps.weather.WeatherServiceVersion?alt=com.azure.maps.weather.WeatherServiceVersion&text=WeatherServiceVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WeatherClientBuilder serviceVersion(WeatherServiceVersion version)"
  desc: "Sets the <xref uid=\"com.azure.maps.weather.WeatherServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"WeatherServiceVersion\"></xref> that is used when making API requests.\n\nIf a service version is not provided, the service version that will be used will be the latest known service version based on the version of the client library being used. If no service version is specified, updating to a newer version of the client library will have the result of potentially moving to a newer service version.\n\nTargeting a specific service version may also mean that the service will return an error for newer APIs."
  returns:
    description: "the updated WeatherClientBuilder object"
    type: "<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.WeatherClientBuilder.weatherClientId(java.lang.String)"
  fullName: "com.azure.maps.weather.WeatherClientBuilder.weatherClientId(String weatherClientId)"
  name: "weatherClientId(String weatherClientId)"
  nameWithType: "WeatherClientBuilder.weatherClientId(String weatherClientId)"
  summary: "Sets the Azure Maps client id for use with Azure AD Authentication."
  parameters:
  - description: "the clientId value."
    name: "weatherClientId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public WeatherClientBuilder weatherClientId(String weatherClientId)"
  desc: "Sets the Azure Maps client id for use with Azure AD Authentication. This client id is the account-based GUID that appears on the Azure Maps Authentication page. More details: [Azure Maps AD Authentication][]\n\n\n[Azure Maps AD Authentication]: https://docs.microsoft.com/azure/azure-maps/azure-maps-authentication"
  returns:
    description: "the WeatherClientBuilder."
    type: "<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Builder class used to instantiate both synchronous and asynchronous <xref uid=\"com.azure.maps.weather.WeatherClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"WeatherClient\"></xref> clients.\n\n**Example usage**\n\nCreating a sync client using a <xref uid=\"com.azure.core.credential.AzureKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureKeyCredential\"></xref>:\n\n```java\n// Authenticates using subscription key\n AzureKeyCredential keyCredential = new AzureKeyCredential(System.getenv(\"SUBSCRIPTION_KEY\"));\n\n // Creates a client\n WeatherClient client = new WeatherClientBuilder() \n     .credential(keyCredential)\n     .weatherClientId(System.getenv(\"MAPS_CLIENT_ID\"))\n     .buildClient();\n```\n\nCreating a sync client using a <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref>:\n\n```java\n// Authenticates using Azure AD building a default credential\n // This will look for AZURE_CLIENT_ID, AZURE_TENANT_ID, and AZURE_CLIENT_SECRET env variables\n DefaultAzureCredential tokenCredential = new DefaultAzureCredentialBuilder().build();\n\n // Creates a client\n WeatherClient client = new WeatherClientBuilder()\n     .credential(tokenCredential)\n     .weatherClientId(System.getenv(\"MAPS_CLIENT_ID\"))\n     .buildClient();\n```"
implements:
- "<xref href=\"com.azure.core.client.traits.AzureKeyCredentialTrait?alt=com.azure.core.client.traits.AzureKeyCredentialTrait&text=AzureKeyCredentialTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.ConfigurationTrait?alt=com.azure.core.client.traits.ConfigurationTrait&text=ConfigurationTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.EndpointTrait?alt=com.azure.core.client.traits.EndpointTrait&text=EndpointTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.HttpTrait?alt=com.azure.core.client.traits.HttpTrait&text=HttpTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.TokenCredentialTrait?alt=com.azure.core.client.traits.TokenCredentialTrait&text=TokenCredentialTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.WeatherClientBuilder?alt=com.azure.maps.weather.WeatherClientBuilder&text=WeatherClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.maps.weather"
artifact: com.azure:azure-maps-weather:1.0.0-beta.1
