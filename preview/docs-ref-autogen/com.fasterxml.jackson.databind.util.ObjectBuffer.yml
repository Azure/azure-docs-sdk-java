### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer
  id: ObjectBuffer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util
  children:
  - com.fasterxml.jackson.databind.util.ObjectBuffer.<T>completeAndClearBuffer(java.lang.Object[],int,java.lang.Class<T>)
  - com.fasterxml.jackson.databind.util.ObjectBuffer.ObjectBuffer()
  - com.fasterxml.jackson.databind.util.ObjectBuffer._copyTo(java.lang.Object,int,java.lang.Object[],int)
  - com.fasterxml.jackson.databind.util.ObjectBuffer._reset()
  - com.fasterxml.jackson.databind.util.ObjectBuffer.appendCompletedChunk(java.lang.Object[])
  - com.fasterxml.jackson.databind.util.ObjectBuffer.bufferedSize()
  - com.fasterxml.jackson.databind.util.ObjectBuffer.completeAndClearBuffer(java.lang.Object[],int)
  - com.fasterxml.jackson.databind.util.ObjectBuffer.completeAndClearBuffer(java.lang.Object[],int,java.util.List<java.lang.Object>)
  - com.fasterxml.jackson.databind.util.ObjectBuffer.initialCapacity()
  - com.fasterxml.jackson.databind.util.ObjectBuffer.resetAndStart()
  - com.fasterxml.jackson.databind.util.ObjectBuffer.resetAndStart(java.lang.Object[],int)
  langs:
  - java
  name: ObjectBuffer
  nameWithType: ObjectBuffer
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer
  type: Class
  package: com.fasterxml.jackson.databind.util
  summary: Helper class to use for constructing Object arrays by appending entries to create arrays of various lengths (length that is not known a priori).
  syntax:
    content: public final class ObjectBuffer
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer.<T>completeAndClearBuffer(java.lang.Object[],int,java.lang.Class<T>)
  id: <T>completeAndClearBuffer(java.lang.Object[],int,java.lang.Class<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ObjectBuffer
  langs:
  - java
  name: <T>completeAndClearBuffer(Object[] lastChunk, int lastChunkEntries, Class<T> componentType)
  nameWithType: ObjectBuffer.<T>completeAndClearBuffer(Object[] lastChunk, int lastChunkEntries, Class<T> componentType)
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer.<T>completeAndClearBuffer(Object[] lastChunk, int lastChunkEntries, Class<T> componentType)
  overload: com.fasterxml.jackson.databind.util.ObjectBuffer.completeAndClearBuffer*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Type-safe alternative to <xref uid="com.fasterxml.jackson.databind.util.ObjectBuffer.completeAndClearBuffer(java.lang.Object[],int)" data-throw-if-not-resolved="false">#completeAndClearBuffer(Object[], int)</xref>, to allow for constructing explicitly typed result array.
  syntax:
    content: public T[] <T>completeAndClearBuffer(Object[] lastChunk, int lastChunkEntries, Class<T> componentType)
    parameters:
    - id: lastChunk
      type: java.lang.Object[]
    - id: lastChunkEntries
      type: int
    - id: componentType
      type: java.lang.Class<T>
      description: >-
        Type of elements included in the buffer. Will be
           used for constructing the result array.
    return:
      type: T[]
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer.ObjectBuffer()
  id: ObjectBuffer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ObjectBuffer
  langs:
  - java
  name: ObjectBuffer()
  nameWithType: ObjectBuffer.ObjectBuffer()
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer.ObjectBuffer()
  overload: com.fasterxml.jackson.databind.util.ObjectBuffer.ObjectBuffer*
  type: Constructor
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public ObjectBuffer()
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer._copyTo(java.lang.Object,int,java.lang.Object[],int)
  id: _copyTo(java.lang.Object,int,java.lang.Object[],int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ObjectBuffer
  langs:
  - java
  name: _copyTo(Object resultArray, int totalSize, Object[] lastChunk, int lastChunkEntries)
  nameWithType: ObjectBuffer._copyTo(Object resultArray, int totalSize, Object[] lastChunk, int lastChunkEntries)
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer._copyTo(Object resultArray, int totalSize, Object[] lastChunk, int lastChunkEntries)
  overload: com.fasterxml.jackson.databind.util.ObjectBuffer._copyTo*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected final void _copyTo(Object resultArray, int totalSize, Object[] lastChunk, int lastChunkEntries)
    parameters:
    - id: resultArray
      type: java.lang.Object
    - id: totalSize
      type: int
    - id: lastChunk
      type: java.lang.Object[]
    - id: lastChunkEntries
      type: int
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer._reset()
  id: _reset()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ObjectBuffer
  langs:
  - java
  name: _reset()
  nameWithType: ObjectBuffer._reset()
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer._reset()
  overload: com.fasterxml.jackson.databind.util.ObjectBuffer._reset*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected void _reset()
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer.appendCompletedChunk(java.lang.Object[])
  id: appendCompletedChunk(java.lang.Object[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ObjectBuffer
  langs:
  - java
  name: appendCompletedChunk(Object[] fullChunk)
  nameWithType: ObjectBuffer.appendCompletedChunk(Object[] fullChunk)
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer.appendCompletedChunk(Object[] fullChunk)
  overload: com.fasterxml.jackson.databind.util.ObjectBuffer.appendCompletedChunk*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method called to add a full Object array as a chunk buffered within this buffer, and to obtain a new array to fill. Caller is not to use the array it gives; but to use the returned array for continued buffering.
  syntax:
    content: public Object[] appendCompletedChunk(Object[] fullChunk)
    parameters:
    - id: fullChunk
      type: java.lang.Object[]
      description: >-
        Completed chunk that the caller is requesting
           to append to this buffer. It is generally chunk that was
           returned by an earlier call to <xref uid="com.fasterxml.jackson.databind.util.ObjectBuffer.resetAndStart*" data-throw-if-not-resolved="false">#resetAndStart</xref> or
           <xref uid="com.fasterxml.jackson.databind.util.ObjectBuffer.appendCompletedChunk*" data-throw-if-not-resolved="false">#appendCompletedChunk</xref> (although this is not required or
           enforced)
    return:
      type: java.lang.Object[]
      description: New chunk buffer for caller to fill
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer.bufferedSize()
  id: bufferedSize()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ObjectBuffer
  langs:
  - java
  name: bufferedSize()
  nameWithType: ObjectBuffer.bufferedSize()
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer.bufferedSize()
  overload: com.fasterxml.jackson.databind.util.ObjectBuffer.bufferedSize*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method that can be used to check how many Objects have been buffered within this buffer.
  syntax:
    content: public int bufferedSize()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer.completeAndClearBuffer(java.lang.Object[],int)
  id: completeAndClearBuffer(java.lang.Object[],int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ObjectBuffer
  langs:
  - java
  name: completeAndClearBuffer(Object[] lastChunk, int lastChunkEntries)
  nameWithType: ObjectBuffer.completeAndClearBuffer(Object[] lastChunk, int lastChunkEntries)
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer.completeAndClearBuffer(Object[] lastChunk, int lastChunkEntries)
  overload: com.fasterxml.jackson.databind.util.ObjectBuffer.completeAndClearBuffer*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: >-
    Method called to indicate that the buffering process is now complete; and to construct a combined exactly-sized result array. Additionally the buffer itself will be reset to reduce memory retention.


    Resulting array will be of generic `Object[]` type: if a typed array is needed, use the method with additional type argument.
  syntax:
    content: public Object[] completeAndClearBuffer(Object[] lastChunk, int lastChunkEntries)
    parameters:
    - id: lastChunk
      type: java.lang.Object[]
    - id: lastChunkEntries
      type: int
    return:
      type: java.lang.Object[]
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer.completeAndClearBuffer(java.lang.Object[],int,java.util.List<java.lang.Object>)
  id: completeAndClearBuffer(java.lang.Object[],int,java.util.List<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ObjectBuffer
  langs:
  - java
  name: completeAndClearBuffer(Object[] lastChunk, int lastChunkEntries, List<Object> resultList)
  nameWithType: ObjectBuffer.completeAndClearBuffer(Object[] lastChunk, int lastChunkEntries, List<Object> resultList)
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer.completeAndClearBuffer(Object[] lastChunk, int lastChunkEntries, List<Object> resultList)
  overload: com.fasterxml.jackson.databind.util.ObjectBuffer.completeAndClearBuffer*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public void completeAndClearBuffer(Object[] lastChunk, int lastChunkEntries, List<Object> resultList)
    parameters:
    - id: lastChunk
      type: java.lang.Object[]
    - id: lastChunkEntries
      type: int
    - id: resultList
      type: java.util.List<java.lang.Object>
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer.initialCapacity()
  id: initialCapacity()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ObjectBuffer
  langs:
  - java
  name: initialCapacity()
  nameWithType: ObjectBuffer.initialCapacity()
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer.initialCapacity()
  overload: com.fasterxml.jackson.databind.util.ObjectBuffer.initialCapacity*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method that can be used to check how much free capacity will this instance start with. Can be used to choose the best instance to reuse, based on size of reusable object chunk buffer holds reference to.
  syntax:
    content: public int initialCapacity()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer.resetAndStart()
  id: resetAndStart()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ObjectBuffer
  langs:
  - java
  name: resetAndStart()
  nameWithType: ObjectBuffer.resetAndStart()
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer.resetAndStart()
  overload: com.fasterxml.jackson.databind.util.ObjectBuffer.resetAndStart*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method called to start buffering process. Will ensure that the buffer is empty, and then return an object array to start chunking content on
  syntax:
    content: public Object[] resetAndStart()
    return:
      type: java.lang.Object[]
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer.resetAndStart(java.lang.Object[],int)
  id: resetAndStart(java.lang.Object[],int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ObjectBuffer
  langs:
  - java
  name: resetAndStart(Object[] base, int count)
  nameWithType: ObjectBuffer.resetAndStart(Object[] base, int count)
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer.resetAndStart(Object[] base, int count)
  overload: com.fasterxml.jackson.databind.util.ObjectBuffer.resetAndStart*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public Object[] resetAndStart(Object[] base, int count)
    parameters:
    - id: base
      type: java.lang.Object[]
    - id: count
      type: int
    return:
      type: java.lang.Object[]
references:
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer.ObjectBuffer*
  name: ObjectBuffer
  nameWithType: ObjectBuffer.ObjectBuffer
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer.ObjectBuffer
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.Object[]
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer.resetAndStart*
  name: resetAndStart
  nameWithType: ObjectBuffer.resetAndStart
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer.resetAndStart
  package: com.fasterxml.jackson.databind.util
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer.appendCompletedChunk*
  name: appendCompletedChunk
  nameWithType: ObjectBuffer.appendCompletedChunk
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer.appendCompletedChunk
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer.completeAndClearBuffer*
  name: completeAndClearBuffer
  nameWithType: ObjectBuffer.completeAndClearBuffer
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer.completeAndClearBuffer
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: T[]
  spec.java:
  - uid: T
    name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
- uid: java.util.List<java.lang.Object>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer.initialCapacity*
  name: initialCapacity
  nameWithType: ObjectBuffer.initialCapacity
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer.initialCapacity
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer.bufferedSize*
  name: bufferedSize
  nameWithType: ObjectBuffer.bufferedSize
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer.bufferedSize
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer._reset*
  name: _reset
  nameWithType: ObjectBuffer._reset
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer._reset
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.util.ObjectBuffer._copyTo*
  name: _copyTo
  nameWithType: ObjectBuffer._copyTo
  fullName: com.fasterxml.jackson.databind.util.ObjectBuffer._copyTo
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
