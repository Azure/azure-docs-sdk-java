### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.with*"
fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with"
name: "with"
nameWithType: "MapperConfigBase<CFG,T>.with"
members:
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.core.Base64Variant)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(Base64Variant base64)"
  name: "with(Base64Variant base64)"
  nameWithType: "MapperConfigBase<CFG,T>.with(Base64Variant base64)"
  summary: "Method for constructing and returning a new instance with different default <xref uid=\"com.fasterxml.jackson.core.Base64Variant\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Base64Variant\"></xref> to use with base64-encoded binary values."
  parameters:
  - name: "base64"
    type: "<xref href=\"com.fasterxml.jackson.core.Base64Variant?alt=com.fasterxml.jackson.core.Base64Variant&text=Base64Variant\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final T with(Base64Variant base64)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.AnnotationIntrospector)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(AnnotationIntrospector ai)"
  name: "with(AnnotationIntrospector ai)"
  nameWithType: "MapperConfigBase<CFG,T>.with(AnnotationIntrospector ai)"
  summary: "Method for constructing and returning a new instance with different <xref uid=\"com.fasterxml.jackson.databind.AnnotationIntrospector\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnnotationIntrospector\"></xref> to use (replacing old one).\n\nNOTE: make sure to register new instance with `ObjectMapper` if directly calling this method."
  parameters:
  - name: "ai"
    type: "<xref href=\"com.fasterxml.jackson.databind.AnnotationIntrospector?alt=com.fasterxml.jackson.databind.AnnotationIntrospector&text=AnnotationIntrospector\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final T with(AnnotationIntrospector ai)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.MapperFeature,boolean)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(MapperFeature feature, boolean state)"
  name: "with(MapperFeature feature, boolean state)"
  nameWithType: "MapperConfigBase<CFG,T>.with(MapperFeature feature, boolean state)"
  overridden: "com.fasterxml.jackson.databind.cfg.MapperConfig.with(com.fasterxml.jackson.databind.MapperFeature,boolean)"
  parameters:
  - name: "feature"
    type: "<xref href=\"com.fasterxml.jackson.databind.MapperFeature?alt=com.fasterxml.jackson.databind.MapperFeature&text=MapperFeature\" data-throw-if-not-resolved=\"False\" />"
  - name: "state"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final T with(MapperFeature feature, boolean state)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.MapperFeature...)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(MapperFeature[] features)"
  name: "with(MapperFeature[] features)"
  nameWithType: "MapperConfigBase<CFG,T>.with(MapperFeature[] features)"
  summary: "Fluent factory method that will construct and return a new configuration object instance with specified features enabled."
  overridden: "com.fasterxml.jackson.databind.cfg.MapperConfig.with(com.fasterxml.jackson.databind.MapperFeature...)"
  parameters:
  - name: "features"
    type: "<xref href=\"com.fasterxml.jackson.databind.MapperFeature?alt=com.fasterxml.jackson.databind.MapperFeature&text=MapperFeature\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public final T with(MapperFeature[] features)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.PropertyNamingStrategy)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(PropertyNamingStrategy pns)"
  name: "with(PropertyNamingStrategy pns)"
  nameWithType: "MapperConfigBase<CFG,T>.with(PropertyNamingStrategy pns)"
  summary: "Method for constructing and returning a new instance with different <xref uid=\"com.fasterxml.jackson.databind.PropertyNamingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PropertyNamingStrategy\"></xref> to use.\n\nNOTE: make sure to register new instance with `ObjectMapper` if directly calling this method."
  parameters:
  - name: "pns"
    type: "<xref href=\"com.fasterxml.jackson.databind.PropertyNamingStrategy?alt=com.fasterxml.jackson.databind.PropertyNamingStrategy&text=PropertyNamingStrategy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final T with(PropertyNamingStrategy pns)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.cfg.ContextAttributes)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(ContextAttributes attrs)"
  name: "with(ContextAttributes attrs)"
  nameWithType: "MapperConfigBase<CFG,T>.with(ContextAttributes attrs)"
  summary: "Method for constructing an instance that has specified contextual attributes."
  parameters:
  - name: "attrs"
    type: "<xref href=\"com.fasterxml.jackson.databind.cfg.ContextAttributes?alt=com.fasterxml.jackson.databind.cfg.ContextAttributes&text=ContextAttributes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T with(ContextAttributes attrs)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.cfg.HandlerInstantiator)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(HandlerInstantiator hi)"
  name: "with(HandlerInstantiator hi)"
  nameWithType: "MapperConfigBase<CFG,T>.with(HandlerInstantiator hi)"
  summary: "Method for constructing and returning a new instance with different <xref uid=\"com.fasterxml.jackson.databind.cfg.HandlerInstantiator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HandlerInstantiator\"></xref> to use.\n\nNOTE: make sure to register new instance with `ObjectMapper` if directly calling this method."
  parameters:
  - name: "hi"
    type: "<xref href=\"com.fasterxml.jackson.databind.cfg.HandlerInstantiator?alt=com.fasterxml.jackson.databind.cfg.HandlerInstantiator&text=HandlerInstantiator\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final T with(HandlerInstantiator hi)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.introspect.ClassIntrospector)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(ClassIntrospector ci)"
  name: "with(ClassIntrospector ci)"
  nameWithType: "MapperConfigBase<CFG,T>.with(ClassIntrospector ci)"
  summary: "Method for constructing and returning a new instance with different <xref uid=\"com.fasterxml.jackson.databind.introspect.ClassIntrospector\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClassIntrospector\"></xref> to use.\n\nNOTE: make sure to register new instance with `ObjectMapper` if directly calling this method."
  parameters:
  - name: "ci"
    type: "<xref href=\"com.fasterxml.jackson.databind.introspect.ClassIntrospector?alt=com.fasterxml.jackson.databind.introspect.ClassIntrospector&text=ClassIntrospector\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final T with(ClassIntrospector ci)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(SubtypeResolver str)"
  name: "with(SubtypeResolver str)"
  nameWithType: "MapperConfigBase<CFG,T>.with(SubtypeResolver str)"
  summary: "Method for constructing and returning a new instance with different <xref uid=\"com.fasterxml.jackson.databind.jsontype.SubtypeResolver\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubtypeResolver\"></xref> to use.\n\nNOTE: make sure to register new instance with `ObjectMapper` if directly calling this method."
  parameters:
  - name: "str"
    type: "<xref href=\"com.fasterxml.jackson.databind.jsontype.SubtypeResolver?alt=com.fasterxml.jackson.databind.jsontype.SubtypeResolver&text=SubtypeResolver\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T with(SubtypeResolver str)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?>)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(TypeResolverBuilder<?> trb)"
  name: "with(TypeResolverBuilder<?> trb)"
  nameWithType: "MapperConfigBase<CFG,T>.with(TypeResolverBuilder<?> trb)"
  summary: "Method for constructing and returning a new instance with different <xref uid=\"com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeResolverBuilder\"></xref> to use."
  parameters:
  - name: "trb"
    type: "<xref href=\"com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder?alt=com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder&text=TypeResolverBuilder\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public final T with(TypeResolverBuilder<?> trb)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(com.fasterxml.jackson.databind.type.TypeFactory)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(TypeFactory tf)"
  name: "with(TypeFactory tf)"
  nameWithType: "MapperConfigBase<CFG,T>.with(TypeFactory tf)"
  summary: "Method for constructing and returning a new instance with different <xref uid=\"com.fasterxml.jackson.databind.type.TypeFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeFactory\"></xref> to use."
  parameters:
  - name: "tf"
    type: "<xref href=\"com.fasterxml.jackson.databind.type.TypeFactory?alt=com.fasterxml.jackson.databind.type.TypeFactory&text=TypeFactory\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final T with(TypeFactory tf)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(java.text.DateFormat)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(DateFormat df)"
  name: "with(DateFormat df)"
  nameWithType: "MapperConfigBase<CFG,T>.with(DateFormat df)"
  summary: "Method for constructing and returning a new instance with different <xref uid=\"java.text.DateFormat\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DateFormat\"></xref> to use.\n\nNOTE: non-final since `SerializationConfig` needs to override this"
  parameters:
  - name: "df"
    type: "<xref href=\"java.text.DateFormat?alt=java.text.DateFormat&text=DateFormat\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public T with(DateFormat df)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(java.util.Locale)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(Locale l)"
  name: "with(Locale l)"
  nameWithType: "MapperConfigBase<CFG,T>.with(Locale l)"
  summary: "Method for constructing and returning a new instance with different default <xref uid=\"java.util.Locale\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Locale\"></xref> to use for formatting."
  parameters:
  - name: "l"
    type: "<xref href=\"java.util.Locale?alt=java.util.Locale&text=Locale\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final T with(Locale l)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(java.util.TimeZone)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfigBase<CFG,T>.with(TimeZone tz)"
  name: "with(TimeZone tz)"
  nameWithType: "MapperConfigBase<CFG,T>.with(TimeZone tz)"
  summary: "Method for constructing and returning a new instance with different default <xref uid=\"java.util.TimeZone\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.TimeZone\"></xref> to use for formatting of date values."
  parameters:
  - name: "tz"
    type: "<xref href=\"java.util.TimeZone?alt=java.util.TimeZone&text=TimeZone\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final T with(TimeZone tz)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.cfg"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
