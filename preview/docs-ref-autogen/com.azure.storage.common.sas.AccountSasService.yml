### YamlMime:JavaType
uid: "com.azure.storage.common.sas.AccountSasService"
fullName: "com.azure.storage.common.sas.AccountSasService"
name: "AccountSasService"
nameWithType: "AccountSasService"
summary: "This is a helper class to construct a string representing the services accessible by an AccountSAS."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AccountSasService"
constructors:
- uid: "com.azure.storage.common.sas.AccountSasService.AccountSasService()"
  fullName: "com.azure.storage.common.sas.AccountSasService.AccountSasService()"
  name: "AccountSasService()"
  nameWithType: "AccountSasService.AccountSasService()"
  summary: "Initializes an `AccountSasService` object with all fields set to false."
  syntax: "public AccountSasService()"
  desc: "Initializes an `AccountSasService` object with all fields set to false."
methods:
- uid: "com.azure.storage.common.sas.AccountSasService.hasBlobAccess()"
  fullName: "com.azure.storage.common.sas.AccountSasService.hasBlobAccess()"
  name: "hasBlobAccess()"
  nameWithType: "AccountSasService.hasBlobAccess()"
  syntax: "public boolean hasBlobAccess()"
  returns:
    description: "the access status for blob resources."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.sas.AccountSasService.hasFileAccess()"
  fullName: "com.azure.storage.common.sas.AccountSasService.hasFileAccess()"
  name: "hasFileAccess()"
  nameWithType: "AccountSasService.hasFileAccess()"
  syntax: "public boolean hasFileAccess()"
  returns:
    description: "the access status for file resources."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.sas.AccountSasService.hasQueueAccess()"
  fullName: "com.azure.storage.common.sas.AccountSasService.hasQueueAccess()"
  name: "hasQueueAccess()"
  nameWithType: "AccountSasService.hasQueueAccess()"
  syntax: "public boolean hasQueueAccess()"
  returns:
    description: "the access status for queue resources."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.sas.AccountSasService.hasTableAccess()"
  fullName: "com.azure.storage.common.sas.AccountSasService.hasTableAccess()"
  name: "hasTableAccess()"
  nameWithType: "AccountSasService.hasTableAccess()"
  syntax: "public boolean hasTableAccess()"
  returns:
    description: "the access status for table resources."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.sas.AccountSasService.parse(java.lang.String)"
  fullName: "com.azure.storage.common.sas.AccountSasService.parse(String servicesString)"
  name: "parse(String servicesString)"
  nameWithType: "AccountSasService.parse(String servicesString)"
  summary: "Creates an `AccountSasService` from the specified services string."
  modifiers:
  - "static"
  parameters:
  - description: "A <code>String</code> which represents the <code>SharedAccessAccountServices</code>."
    name: "servicesString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AccountSasService parse(String servicesString)"
  desc: "Creates an `AccountSasService` from the specified services string. This method will throw an `IllegalArgumentException` if it encounters a character that does not correspond to a valid service."
  returns:
    description: "A <code>AccountSasService</code> generated from the given <code>String</code>."
    type: "<xref href=\"com.azure.storage.common.sas.AccountSasService?alt=com.azure.storage.common.sas.AccountSasService&text=AccountSasService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.sas.AccountSasService.setBlobAccess(boolean)"
  fullName: "com.azure.storage.common.sas.AccountSasService.setBlobAccess(boolean blob)"
  name: "setBlobAccess(boolean blob)"
  nameWithType: "AccountSasService.setBlobAccess(boolean blob)"
  summary: "Sets the access status for blob resources."
  parameters:
  - description: "Access status to set"
    name: "blob"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AccountSasService setBlobAccess(boolean blob)"
  desc: "Sets the access status for blob resources."
  returns:
    description: "the updated AccountSasService object."
    type: "<xref href=\"com.azure.storage.common.sas.AccountSasService?alt=com.azure.storage.common.sas.AccountSasService&text=AccountSasService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.sas.AccountSasService.setFileAccess(boolean)"
  fullName: "com.azure.storage.common.sas.AccountSasService.setFileAccess(boolean file)"
  name: "setFileAccess(boolean file)"
  nameWithType: "AccountSasService.setFileAccess(boolean file)"
  summary: "Sets the access status for file resources."
  parameters:
  - description: "Access status to set"
    name: "file"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AccountSasService setFileAccess(boolean file)"
  desc: "Sets the access status for file resources."
  returns:
    description: "the updated AccountSasService object."
    type: "<xref href=\"com.azure.storage.common.sas.AccountSasService?alt=com.azure.storage.common.sas.AccountSasService&text=AccountSasService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.sas.AccountSasService.setQueueAccess(boolean)"
  fullName: "com.azure.storage.common.sas.AccountSasService.setQueueAccess(boolean queue)"
  name: "setQueueAccess(boolean queue)"
  nameWithType: "AccountSasService.setQueueAccess(boolean queue)"
  summary: "Sets the access status for queue resources."
  parameters:
  - description: "Access status to set"
    name: "queue"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AccountSasService setQueueAccess(boolean queue)"
  desc: "Sets the access status for queue resources."
  returns:
    description: "the updated AccountSasService object."
    type: "<xref href=\"com.azure.storage.common.sas.AccountSasService?alt=com.azure.storage.common.sas.AccountSasService&text=AccountSasService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.sas.AccountSasService.setTableAccess(boolean)"
  fullName: "com.azure.storage.common.sas.AccountSasService.setTableAccess(boolean table)"
  name: "setTableAccess(boolean table)"
  nameWithType: "AccountSasService.setTableAccess(boolean table)"
  summary: "Sets the access status for table resources."
  parameters:
  - description: "Access status to set"
    name: "table"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AccountSasService setTableAccess(boolean table)"
  desc: "Sets the access status for table resources."
  returns:
    description: "the updated AccountSasService object."
    type: "<xref href=\"com.azure.storage.common.sas.AccountSasService?alt=com.azure.storage.common.sas.AccountSasService&text=AccountSasService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.sas.AccountSasService.toString()"
  fullName: "com.azure.storage.common.sas.AccountSasService.toString()"
  name: "toString()"
  nameWithType: "AccountSasService.toString()"
  summary: "Converts the given services to a `String`."
  overridden: "java.lang.Object.toString()"
  syntax: "public String toString()"
  desc: "Converts the given services to a `String`. Using this method will guarantee the services are in an order accepted by the service."
  returns:
    description: "A <code>String</code> which represents the <code>AccountSASServices</code>."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "This is a helper class to construct a string representing the services accessible by an AccountSAS. Setting a value to true means that any SAS which uses these permissions will grant access to that service. Once all the values are set, this should be serialized with toString and set as the services field on an <xref uid=\"com.azure.storage.common.sas.AccountSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccountSasSignatureValues\"></xref> object. It is possible to construct the services string without this class, but the order of the services is particular and this class guarantees correctness."
metadata: {}
package: "com.azure.storage.common.sas"
artifact: com.azure:azure-storage-common:12.17.0-beta.1
