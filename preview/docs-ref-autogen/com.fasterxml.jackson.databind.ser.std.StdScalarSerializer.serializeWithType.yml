### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.serializeWithType*"
fullName: "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer<T>.serializeWithType"
name: "serializeWithType"
nameWithType: "StdScalarSerializer<T>.serializeWithType"
members:
- uid: "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
  fullName: "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer<T>.serializeWithType(T value, JsonGenerator g, SerializerProvider provider, TypeSerializer typeSer)"
  name: "serializeWithType(T value, JsonGenerator g, SerializerProvider provider, TypeSerializer typeSer)"
  nameWithType: "StdScalarSerializer<T>.serializeWithType(T value, JsonGenerator g, SerializerProvider provider, TypeSerializer typeSer)"
  summary: "Default implementation will write type prefix, call regular serialization method (since assumption is that value itself does not need JSON Array or Object start/end markers), and then write type suffix. This should work for most cases; some sub-classes may want to change this behavior."
  overridden: "com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
  parameters:
  - name: "value"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - name: "g"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  - name: "provider"
    type: "<xref href=\"com.fasterxml.jackson.databind.SerializerProvider?alt=com.fasterxml.jackson.databind.SerializerProvider&text=SerializerProvider\" data-throw-if-not-resolved=\"False\" />"
  - name: "typeSer"
    type: "<xref href=\"com.fasterxml.jackson.databind.jsontype.TypeSerializer?alt=com.fasterxml.jackson.databind.jsontype.TypeSerializer&text=TypeSerializer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void serializeWithType(T value, JsonGenerator g, SerializerProvider provider, TypeSerializer typeSer)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser.std"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
