### YamlMime:JavaMember
uid: "com.azure.analytics.synapse.spark.implementation.SparkBatchesImpl.getSparkBatchJobsWithResponseAsync*"
fullName: "com.azure.analytics.synapse.spark.implementation.SparkBatchesImpl.getSparkBatchJobsWithResponseAsync"
name: "getSparkBatchJobsWithResponseAsync"
nameWithType: "SparkBatchesImpl.getSparkBatchJobsWithResponseAsync"
members:
- uid: "com.azure.analytics.synapse.spark.implementation.SparkBatchesImpl.getSparkBatchJobsWithResponseAsync(java.lang.Integer,java.lang.Integer,java.lang.Boolean)"
  fullName: "com.azure.analytics.synapse.spark.implementation.SparkBatchesImpl.getSparkBatchJobsWithResponseAsync(Integer from, Integer size, Boolean detailed)"
  name: "getSparkBatchJobsWithResponseAsync(Integer from, Integer size, Boolean detailed)"
  nameWithType: "SparkBatchesImpl.getSparkBatchJobsWithResponseAsync(Integer from, Integer size, Boolean detailed)"
  summary: "List all spark batch jobs which are running under a particular spark pool."
  parameters:
  - description: "Optional param specifying which index the list should begin from."
    name: "from"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional param specifying the size of the returned list. By default it is 20 and that is the maximum."
    name: "size"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional query param specifying whether detailed response is returned beyond plain livy."
    name: "detailed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SparkBatchJobCollection>> getSparkBatchJobsWithResponseAsync(Integer from, Integer size, Boolean detailed)"
  returns:
    description: "response for batch list operation."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobCollection?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobCollection&text=SparkBatchJobCollection\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.spark.implementation.SparkBatchesImpl.getSparkBatchJobsWithResponseAsync(java.lang.Integer,java.lang.Integer,java.lang.Boolean,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.synapse.spark.implementation.SparkBatchesImpl.getSparkBatchJobsWithResponseAsync(Integer from, Integer size, Boolean detailed, Context context)"
  name: "getSparkBatchJobsWithResponseAsync(Integer from, Integer size, Boolean detailed, Context context)"
  nameWithType: "SparkBatchesImpl.getSparkBatchJobsWithResponseAsync(Integer from, Integer size, Boolean detailed, Context context)"
  summary: "List all spark batch jobs which are running under a particular spark pool."
  parameters:
  - description: "Optional param specifying which index the list should begin from."
    name: "from"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional param specifying the size of the returned list. By default it is 20 and that is the maximum."
    name: "size"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional query param specifying whether detailed response is returned beyond plain livy."
    name: "detailed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SparkBatchJobCollection>> getSparkBatchJobsWithResponseAsync(Integer from, Integer size, Boolean detailed, Context context)"
  returns:
    description: "response for batch list operation."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobCollection?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobCollection&text=SparkBatchJobCollection\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.analytics.synapse.spark.implementation"
artifact: com.azure:azure-analytics-synapse-spark:1.0.0-beta.3
