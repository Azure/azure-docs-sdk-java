### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner.withRefreshTimestamp*"
fullName: "com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner.withRefreshTimestamp"
name: "withRefreshTimestamp"
nameWithType: "EmergingIssuesGetResultInner.withRefreshTimestamp"
members:
- uid: "com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner.withRefreshTimestamp(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner.withRefreshTimestamp(OffsetDateTime refreshTimestamp)"
  name: "withRefreshTimestamp(OffsetDateTime refreshTimestamp)"
  nameWithType: "EmergingIssuesGetResultInner.withRefreshTimestamp(OffsetDateTime refreshTimestamp)"
  summary: "Set the refreshTimestamp property: Timestamp for when last time refreshed for ongoing emerging issue."
  parameters:
  - description: "the refreshTimestamp value to set."
    name: "refreshTimestamp"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EmergingIssuesGetResultInner withRefreshTimestamp(OffsetDateTime refreshTimestamp)"
  returns:
    description: "the EmergingIssuesGetResultInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner?alt=com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner&text=EmergingIssuesGetResultInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resourcehealth.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-resourcehealth:1.0.0-beta.1
