### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Predicates.in*"
fullName: "com.azure.cosmos.implementation.guava25.base.Predicates.<T>in"
name: "<T>in"
nameWithType: "Predicates.<T>in"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Predicates.<T>in(java.util.Collection<? extends T>)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Predicates.<T>in(Collection<? extends T> target)"
  name: "<T>in(Collection<? extends T> target)"
  nameWithType: "Predicates.<T>in(Collection<? extends T> target)"
  summary: "Returns a predicate that evaluates to `true` if the object reference being tested is a member of the given collection. It does not defensively copy the collection passed in, so future changes to it will alter the behavior of the predicate.\n\nThis method can technically accept any `Collection`, but using a typed collection helps prevent bugs. This approach doesn't block any potential users since it is always possible to use `Predicates.in().`"
  parameters:
  - description: "the collection that may contain the function input"
    name: "target"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends T?alt=? extends T&text=? extends T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Predicate<T> <T>in(Collection<? extends T> target)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Predicate?alt=com.azure.cosmos.implementation.guava25.base.Predicate&text=Predicate\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
