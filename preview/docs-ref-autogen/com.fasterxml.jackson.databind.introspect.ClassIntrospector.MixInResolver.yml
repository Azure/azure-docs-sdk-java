### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver
  id: MixInResolver
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect
  children:
  - com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver.copy()
  - com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver.findMixInClassFor(java.lang.Class<?>)
  langs:
  - java
  name: ClassIntrospector.MixInResolver
  nameWithType: ClassIntrospector.MixInResolver
  fullName: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver
  type: Interface
  package: com.fasterxml.jackson.databind.introspect
  summary: Interface used for decoupling details of how mix-in annotation definitions are accessed (via this interface), and how they are stored (defined by classes that implement the interface)
  syntax:
    content: public static interface ClassIntrospector.MixInResolver
- uid: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver.copy()
  id: copy()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver
  langs:
  - java
  name: copy()
  nameWithType: ClassIntrospector.MixInResolver.copy()
  fullName: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver.copy()
  overload: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver.copy*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method called to create a new, non-shared copy, to be used by different `ObjectMapper` instance, and one that should not be connected to this instance, if resolver has mutable state. If resolver is immutable may simply return \`this\`.
  syntax:
    content: public abstract ClassIntrospector.MixInResolver copy()
    return:
      type: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver
- uid: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver.findMixInClassFor(java.lang.Class<?>)
  id: findMixInClassFor(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver
  langs:
  - java
  name: findMixInClassFor(Class<?> cls)
  nameWithType: ClassIntrospector.MixInResolver.findMixInClassFor(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver.findMixInClassFor(Class<?> cls)
  overload: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver.findMixInClassFor*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method that will check if there are "mix-in" classes (with mix-in annotations) for given class
  syntax:
    content: public abstract Class<?> findMixInClassFor(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: java.lang.Class<?>
references:
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver.findMixInClassFor*
  name: findMixInClassFor
  nameWithType: ClassIntrospector.MixInResolver.findMixInClassFor
  fullName: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver.findMixInClassFor
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver.copy*
  name: copy
  nameWithType: ClassIntrospector.MixInResolver.copy
  fullName: com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver.copy
  package: com.fasterxml.jackson.databind.introspect
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
