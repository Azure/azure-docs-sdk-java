### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.CosmosClientException"
  id: "CosmosClientException"
  parent: "com.azure.cosmos"
  children:
  - "com.azure.cosmos.CosmosClientException.CosmosClientException(int)"
  - "com.azure.cosmos.CosmosClientException.CosmosClientException(int,com.azure.cosmos.models.CosmosError,java.util.Map<java.lang.String,java.lang.String>)"
  - "com.azure.cosmos.CosmosClientException.CosmosClientException(int,java.lang.Exception)"
  - "com.azure.cosmos.CosmosClientException.CosmosClientException(int,java.lang.String)"
  - "com.azure.cosmos.CosmosClientException.CosmosClientException(int,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.Throwable)"
  - "com.azure.cosmos.CosmosClientException.CosmosClientException(java.lang.String,int,com.azure.cosmos.models.CosmosError,java.util.Map<java.lang.String,java.lang.String>)"
  - "com.azure.cosmos.CosmosClientException.CosmosClientException(java.lang.String,java.lang.Exception,java.util.Map<java.lang.String,java.lang.String>,int,java.lang.String)"
  - "com.azure.cosmos.CosmosClientException.getActivityId()"
  - "com.azure.cosmos.CosmosClientException.getCosmosResponseDiagnostics()"
  - "com.azure.cosmos.CosmosClientException.getError()"
  - "com.azure.cosmos.CosmosClientException.getMessage()"
  - "com.azure.cosmos.CosmosClientException.getResourceAddress()"
  - "com.azure.cosmos.CosmosClientException.getResponseHeaders()"
  - "com.azure.cosmos.CosmosClientException.getRetryAfterDuration()"
  - "com.azure.cosmos.CosmosClientException.getStatusCode()"
  - "com.azure.cosmos.CosmosClientException.getSubStatusCode()"
  - "com.azure.cosmos.CosmosClientException.innerErrorMessage()"
  - "com.azure.cosmos.CosmosClientException.lsn"
  - "com.azure.cosmos.CosmosClientException.partitionKeyRangeId"
  - "com.azure.cosmos.CosmosClientException.requestHeaders"
  - "com.azure.cosmos.CosmosClientException.requestUri"
  - "com.azure.cosmos.CosmosClientException.resourceAddress"
  - "com.azure.cosmos.CosmosClientException.setCosmosResponseDiagnostics(com.azure.cosmos.CosmosResponseDiagnostics)"
  - "com.azure.cosmos.CosmosClientException.setError(com.azure.cosmos.models.CosmosError)"
  - "com.azure.cosmos.CosmosClientException.setResourceAddress(java.lang.String)"
  - "com.azure.cosmos.CosmosClientException.toString()"
  langs:
  - "java"
  name: "CosmosClientException"
  nameWithType: "CosmosClientException"
  fullName: "com.azure.cosmos.CosmosClientException"
  type: "Class"
  package: "com.azure.cosmos"
  summary: "This class defines a custom exception type for all operations on CosmosClient in the Azure Cosmos DB database service. Applications are expected to catch CosmosClientException and handle errors as appropriate when calling methods on CosmosClient.\n\nErrors coming from the service during normal execution are converted to CosmosClientException before returning to the application with the following exception:\n\nWhen a BE error is encountered during a QueryIterable<T> iteration, an IllegalStateException is thrown instead of CosmosClientException.\n\nWhen a transport level error happens that request is not able to reach the service, an IllegalStateException is thrown instead of CosmosClientException."
  syntax:
    content: "public class CosmosClientException extends RuntimeException"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Throwable"
  - "java.lang.Exception"
  - "java.lang.RuntimeException"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
  - "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
  - "java.lang.Throwable.fillInStackTrace()"
  - "java.lang.Throwable.getCause()"
  - "java.lang.Throwable.getLocalizedMessage()"
  - "java.lang.Throwable.getMessage()"
  - "java.lang.Throwable.getStackTrace()"
  - "java.lang.Throwable.getSuppressed()"
  - "java.lang.Throwable.initCause(java.lang.Throwable)"
  - "java.lang.Throwable.printStackTrace()"
  - "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
  - "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
  - "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
  - "java.lang.Throwable.toString()"
- uid: "com.azure.cosmos.CosmosClientException.CosmosClientException(int)"
  id: "CosmosClientException(int)"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "CosmosClientException(int statusCode)"
  nameWithType: "CosmosClientException.CosmosClientException(int statusCode)"
  fullName: "com.azure.cosmos.CosmosClientException.CosmosClientException(int statusCode)"
  overload: "com.azure.cosmos.CosmosClientException.CosmosClientException*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Creates a new instance of the CosmosClientException class."
  syntax:
    content: " CosmosClientException(int statusCode)"
    parameters:
    - id: "statusCode"
      type: "int"
      description: "the http status code of the response."
- uid: "com.azure.cosmos.CosmosClientException.CosmosClientException(int,com.azure.cosmos.models.CosmosError,java.util.Map<java.lang.String,java.lang.String>)"
  id: "CosmosClientException(int,com.azure.cosmos.models.CosmosError,java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "CosmosClientException(int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
  nameWithType: "CosmosClientException.CosmosClientException(int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
  fullName: "com.azure.cosmos.CosmosClientException.CosmosClientException(int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
  overload: "com.azure.cosmos.CosmosClientException.CosmosClientException*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Creates a new instance of the CosmosClientException class."
  syntax:
    content: " CosmosClientException(int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
    parameters:
    - id: "statusCode"
      type: "int"
      description: "the http status code of the response."
    - id: "cosmosErrorResource"
      type: "com.azure.cosmos.models.CosmosError"
      description: "the error resource object."
    - id: "responseHeaders"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "the response headers."
- uid: "com.azure.cosmos.CosmosClientException.CosmosClientException(int,java.lang.Exception)"
  id: "CosmosClientException(int,java.lang.Exception)"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "CosmosClientException(int statusCode, Exception innerException)"
  nameWithType: "CosmosClientException.CosmosClientException(int statusCode, Exception innerException)"
  fullName: "com.azure.cosmos.CosmosClientException.CosmosClientException(int statusCode, Exception innerException)"
  overload: "com.azure.cosmos.CosmosClientException.CosmosClientException*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Creates a new instance of the CosmosClientException class."
  syntax:
    content: " CosmosClientException(int statusCode, Exception innerException)"
    parameters:
    - id: "statusCode"
      type: "int"
      description: "the http status code of the response."
    - id: "innerException"
      type: "java.lang.Exception"
      description: "the original exception."
- uid: "com.azure.cosmos.CosmosClientException.CosmosClientException(int,java.lang.String)"
  id: "CosmosClientException(int,java.lang.String)"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "CosmosClientException(int statusCode, String errorMessage)"
  nameWithType: "CosmosClientException.CosmosClientException(int statusCode, String errorMessage)"
  fullName: "com.azure.cosmos.CosmosClientException.CosmosClientException(int statusCode, String errorMessage)"
  overload: "com.azure.cosmos.CosmosClientException.CosmosClientException*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Creates a new instance of the CosmosClientException class."
  syntax:
    content: " CosmosClientException(int statusCode, String errorMessage)"
    parameters:
    - id: "statusCode"
      type: "int"
      description: "the http status code of the response."
    - id: "errorMessage"
      type: "java.lang.String"
      description: "the error message."
- uid: "com.azure.cosmos.CosmosClientException.CosmosClientException(int,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.Throwable)"
  id: "CosmosClientException(int,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.Throwable)"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "CosmosClientException(int statusCode, String message, Map<String,String> responseHeaders, Throwable cause)"
  nameWithType: "CosmosClientException.CosmosClientException(int statusCode, String message, Map<String,String> responseHeaders, Throwable cause)"
  fullName: "com.azure.cosmos.CosmosClientException.CosmosClientException(int statusCode, String message, Map<String,String> responseHeaders, Throwable cause)"
  overload: "com.azure.cosmos.CosmosClientException.CosmosClientException*"
  type: "Constructor"
  package: "com.azure.cosmos"
  syntax:
    content: " CosmosClientException(int statusCode, String message, Map<String,String> responseHeaders, Throwable cause)"
    parameters:
    - id: "statusCode"
      type: "int"
    - id: "message"
      type: "java.lang.String"
    - id: "responseHeaders"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "cause"
      type: "java.lang.Throwable"
- uid: "com.azure.cosmos.CosmosClientException.CosmosClientException(java.lang.String,int,com.azure.cosmos.models.CosmosError,java.util.Map<java.lang.String,java.lang.String>)"
  id: "CosmosClientException(java.lang.String,int,com.azure.cosmos.models.CosmosError,java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "CosmosClientException(String resourceAddress, int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
  nameWithType: "CosmosClientException.CosmosClientException(String resourceAddress, int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
  fullName: "com.azure.cosmos.CosmosClientException.CosmosClientException(String resourceAddress, int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
  overload: "com.azure.cosmos.CosmosClientException.CosmosClientException*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Creates a new instance of the CosmosClientException class."
  syntax:
    content: " CosmosClientException(String resourceAddress, int statusCode, CosmosError cosmosErrorResource, Map<String,String> responseHeaders)"
    parameters:
    - id: "resourceAddress"
      type: "java.lang.String"
      description: "the address of the resource the request is associated with."
    - id: "statusCode"
      type: "int"
      description: "the http status code of the response."
    - id: "cosmosErrorResource"
      type: "com.azure.cosmos.models.CosmosError"
      description: "the error resource object."
    - id: "responseHeaders"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "the response headers."
- uid: "com.azure.cosmos.CosmosClientException.CosmosClientException(java.lang.String,java.lang.Exception,java.util.Map<java.lang.String,java.lang.String>,int,java.lang.String)"
  id: "CosmosClientException(java.lang.String,java.lang.Exception,java.util.Map<java.lang.String,java.lang.String>,int,java.lang.String)"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "CosmosClientException(String message, Exception exception, Map<String,String> responseHeaders, int statusCode, String resourceAddress)"
  nameWithType: "CosmosClientException.CosmosClientException(String message, Exception exception, Map<String,String> responseHeaders, int statusCode, String resourceAddress)"
  fullName: "com.azure.cosmos.CosmosClientException.CosmosClientException(String message, Exception exception, Map<String,String> responseHeaders, int statusCode, String resourceAddress)"
  overload: "com.azure.cosmos.CosmosClientException.CosmosClientException*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Creates a new instance of the CosmosClientException class."
  syntax:
    content: " CosmosClientException(String message, Exception exception, Map<String,String> responseHeaders, int statusCode, String resourceAddress)"
    parameters:
    - id: "message"
      type: "java.lang.String"
      description: "the string message."
    - id: "exception"
      type: "java.lang.Exception"
      description: "the exception object."
    - id: "responseHeaders"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "the response headers."
    - id: "statusCode"
      type: "int"
      description: "the http status code of the response."
    - id: "resourceAddress"
      type: "java.lang.String"
      description: "the address of the resource the request is associated with."
- uid: "com.azure.cosmos.CosmosClientException.getActivityId()"
  id: "getActivityId()"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "getActivityId()"
  nameWithType: "CosmosClientException.getActivityId()"
  fullName: "com.azure.cosmos.CosmosClientException.getActivityId()"
  overload: "com.azure.cosmos.CosmosClientException.getActivityId*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the activity ID associated with the request."
  syntax:
    content: "public String getActivityId()"
    return:
      type: "java.lang.String"
      description: "the activity ID."
- uid: "com.azure.cosmos.CosmosClientException.getCosmosResponseDiagnostics()"
  id: "getCosmosResponseDiagnostics()"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "getCosmosResponseDiagnostics()"
  nameWithType: "CosmosClientException.getCosmosResponseDiagnostics()"
  fullName: "com.azure.cosmos.CosmosClientException.getCosmosResponseDiagnostics()"
  overload: "com.azure.cosmos.CosmosClientException.getCosmosResponseDiagnostics*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the Cosmos Response Diagnostic Statistics associated with this exception."
  syntax:
    content: "public CosmosResponseDiagnostics getCosmosResponseDiagnostics()"
    return:
      type: "com.azure.cosmos.CosmosResponseDiagnostics"
      description: "Cosmos Response Diagnostic Statistics associated with this exception."
- uid: "com.azure.cosmos.CosmosClientException.getError()"
  id: "getError()"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "getError()"
  nameWithType: "CosmosClientException.getError()"
  fullName: "com.azure.cosmos.CosmosClientException.getError()"
  overload: "com.azure.cosmos.CosmosClientException.getError*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the error code associated with the exception."
  syntax:
    content: "public CosmosError getError()"
    return:
      type: "com.azure.cosmos.models.CosmosError"
      description: "the error."
- uid: "com.azure.cosmos.CosmosClientException.getMessage()"
  id: "getMessage()"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "getMessage()"
  nameWithType: "CosmosClientException.getMessage()"
  fullName: "com.azure.cosmos.CosmosClientException.getMessage()"
  overload: "com.azure.cosmos.CosmosClientException.getMessage*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public String getMessage()"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.CosmosClientException.getResourceAddress()"
  id: "getResourceAddress()"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "getResourceAddress()"
  nameWithType: "CosmosClientException.getResourceAddress()"
  fullName: "com.azure.cosmos.CosmosClientException.getResourceAddress()"
  overload: "com.azure.cosmos.CosmosClientException.getResourceAddress*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the resource address associated with this exception."
  syntax:
    content: " String getResourceAddress()"
    return:
      type: "java.lang.String"
      description: "the resource address associated with this exception."
- uid: "com.azure.cosmos.CosmosClientException.getResponseHeaders()"
  id: "getResponseHeaders()"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "getResponseHeaders()"
  nameWithType: "CosmosClientException.getResponseHeaders()"
  fullName: "com.azure.cosmos.CosmosClientException.getResponseHeaders()"
  overload: "com.azure.cosmos.CosmosClientException.getResponseHeaders*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the response headers as key-value pairs"
  syntax:
    content: "public Map<String,String> getResponseHeaders()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "the response headers"
- uid: "com.azure.cosmos.CosmosClientException.getRetryAfterDuration()"
  id: "getRetryAfterDuration()"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "getRetryAfterDuration()"
  nameWithType: "CosmosClientException.getRetryAfterDuration()"
  fullName: "com.azure.cosmos.CosmosClientException.getRetryAfterDuration()"
  overload: "com.azure.cosmos.CosmosClientException.getRetryAfterDuration*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the recommended time duration after which the client can retry failed requests"
  syntax:
    content: "public Duration getRetryAfterDuration()"
    return:
      type: "java.time.Duration"
      description: "the recommended time duration after which the client can retry failed\n requests."
- uid: "com.azure.cosmos.CosmosClientException.getStatusCode()"
  id: "getStatusCode()"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "getStatusCode()"
  nameWithType: "CosmosClientException.getStatusCode()"
  fullName: "com.azure.cosmos.CosmosClientException.getStatusCode()"
  overload: "com.azure.cosmos.CosmosClientException.getStatusCode*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the http status code."
  syntax:
    content: "public int getStatusCode()"
    return:
      type: "int"
      description: "the status code."
- uid: "com.azure.cosmos.CosmosClientException.getSubStatusCode()"
  id: "getSubStatusCode()"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "getSubStatusCode()"
  nameWithType: "CosmosClientException.getSubStatusCode()"
  fullName: "com.azure.cosmos.CosmosClientException.getSubStatusCode()"
  overload: "com.azure.cosmos.CosmosClientException.getSubStatusCode*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the sub status code."
  syntax:
    content: "public int getSubStatusCode()"
    return:
      type: "int"
      description: "the status code."
- uid: "com.azure.cosmos.CosmosClientException.innerErrorMessage()"
  id: "innerErrorMessage()"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "innerErrorMessage()"
  nameWithType: "CosmosClientException.innerErrorMessage()"
  fullName: "com.azure.cosmos.CosmosClientException.innerErrorMessage()"
  overload: "com.azure.cosmos.CosmosClientException.innerErrorMessage*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: " String innerErrorMessage()"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.CosmosClientException.lsn"
  id: "lsn"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "lsn"
  nameWithType: "CosmosClientException.lsn"
  fullName: "com.azure.cosmos.CosmosClientException.lsn"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: " long lsn"
    return:
      type: "long"
- uid: "com.azure.cosmos.CosmosClientException.partitionKeyRangeId"
  id: "partitionKeyRangeId"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "partitionKeyRangeId"
  nameWithType: "CosmosClientException.partitionKeyRangeId"
  fullName: "com.azure.cosmos.CosmosClientException.partitionKeyRangeId"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: " String partitionKeyRangeId"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.CosmosClientException.requestHeaders"
  id: "requestHeaders"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "requestHeaders"
  nameWithType: "CosmosClientException.requestHeaders"
  fullName: "com.azure.cosmos.CosmosClientException.requestHeaders"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: " Map<String,String> requestHeaders"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
- uid: "com.azure.cosmos.CosmosClientException.requestUri"
  id: "requestUri"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "requestUri"
  nameWithType: "CosmosClientException.requestUri"
  fullName: "com.azure.cosmos.CosmosClientException.requestUri"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: " Uri requestUri"
    return:
      type: "com.azure.cosmos.implementation.directconnectivity.Uri"
- uid: "com.azure.cosmos.CosmosClientException.resourceAddress"
  id: "resourceAddress"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "resourceAddress"
  nameWithType: "CosmosClientException.resourceAddress"
  fullName: "com.azure.cosmos.CosmosClientException.resourceAddress"
  type: "Field"
  package: "com.azure.cosmos"
  syntax:
    content: " String resourceAddress"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.CosmosClientException.setCosmosResponseDiagnostics(com.azure.cosmos.CosmosResponseDiagnostics)"
  id: "setCosmosResponseDiagnostics(com.azure.cosmos.CosmosResponseDiagnostics)"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "setCosmosResponseDiagnostics(CosmosResponseDiagnostics cosmosResponseDiagnostics)"
  nameWithType: "CosmosClientException.setCosmosResponseDiagnostics(CosmosResponseDiagnostics cosmosResponseDiagnostics)"
  fullName: "com.azure.cosmos.CosmosClientException.setCosmosResponseDiagnostics(CosmosResponseDiagnostics cosmosResponseDiagnostics)"
  overload: "com.azure.cosmos.CosmosClientException.setCosmosResponseDiagnostics*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: " CosmosClientException setCosmosResponseDiagnostics(CosmosResponseDiagnostics cosmosResponseDiagnostics)"
    parameters:
    - id: "cosmosResponseDiagnostics"
      type: "com.azure.cosmos.CosmosResponseDiagnostics"
    return:
      type: "com.azure.cosmos.CosmosClientException"
- uid: "com.azure.cosmos.CosmosClientException.setError(com.azure.cosmos.models.CosmosError)"
  id: "setError(com.azure.cosmos.models.CosmosError)"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "setError(CosmosError cosmosError)"
  nameWithType: "CosmosClientException.setError(CosmosError cosmosError)"
  fullName: "com.azure.cosmos.CosmosClientException.setError(CosmosError cosmosError)"
  overload: "com.azure.cosmos.CosmosClientException.setError*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: " void setError(CosmosError cosmosError)"
    parameters:
    - id: "cosmosError"
      type: "com.azure.cosmos.models.CosmosError"
- uid: "com.azure.cosmos.CosmosClientException.setResourceAddress(java.lang.String)"
  id: "setResourceAddress(java.lang.String)"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "setResourceAddress(String resourceAddress)"
  nameWithType: "CosmosClientException.setResourceAddress(String resourceAddress)"
  fullName: "com.azure.cosmos.CosmosClientException.setResourceAddress(String resourceAddress)"
  overload: "com.azure.cosmos.CosmosClientException.setResourceAddress*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: " void setResourceAddress(String resourceAddress)"
    parameters:
    - id: "resourceAddress"
      type: "java.lang.String"
- uid: "com.azure.cosmos.CosmosClientException.toString()"
  id: "toString()"
  parent: "com.azure.cosmos.CosmosClientException"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "CosmosClientException.toString()"
  fullName: "com.azure.cosmos.CosmosClientException.toString()"
  overload: "com.azure.cosmos.CosmosClientException.toString*"
  type: "Method"
  package: "com.azure.cosmos"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "java.lang.Throwable"
  spec.java:
  - uid: "java.lang.Throwable"
    name: "Throwable"
    fullName: "java.lang.Throwable"
- uid: "com.azure.cosmos.CosmosClientException.CosmosClientException*"
  name: "CosmosClientException"
  nameWithType: "CosmosClientException.CosmosClientException"
  fullName: "com.azure.cosmos.CosmosClientException.CosmosClientException"
  package: "com.azure.cosmos"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "com.azure.cosmos.models.CosmosError"
  name: "CosmosError"
  nameWithType: "CosmosError"
  fullName: "com.azure.cosmos.models.CosmosError"
- uid: "com.azure.cosmos.CosmosClientException.getMessage*"
  name: "getMessage"
  nameWithType: "CosmosClientException.getMessage"
  fullName: "com.azure.cosmos.CosmosClientException.getMessage"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosClientException.getActivityId*"
  name: "getActivityId"
  nameWithType: "CosmosClientException.getActivityId"
  fullName: "com.azure.cosmos.CosmosClientException.getActivityId"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosClientException.getStatusCode*"
  name: "getStatusCode"
  nameWithType: "CosmosClientException.getStatusCode"
  fullName: "com.azure.cosmos.CosmosClientException.getStatusCode"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosClientException.getSubStatusCode*"
  name: "getSubStatusCode"
  nameWithType: "CosmosClientException.getSubStatusCode"
  fullName: "com.azure.cosmos.CosmosClientException.getSubStatusCode"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosClientException.getError*"
  name: "getError"
  nameWithType: "CosmosClientException.getError"
  fullName: "com.azure.cosmos.CosmosClientException.getError"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosClientException.setError*"
  name: "setError"
  nameWithType: "CosmosClientException.setError"
  fullName: "com.azure.cosmos.CosmosClientException.setError"
  package: "com.azure.cosmos"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.cosmos.CosmosClientException.getRetryAfterDuration*"
  name: "getRetryAfterDuration"
  nameWithType: "CosmosClientException.getRetryAfterDuration"
  fullName: "com.azure.cosmos.CosmosClientException.getRetryAfterDuration"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosClientException.getResponseHeaders*"
  name: "getResponseHeaders"
  nameWithType: "CosmosClientException.getResponseHeaders"
  fullName: "com.azure.cosmos.CosmosClientException.getResponseHeaders"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosClientException.getResourceAddress*"
  name: "getResourceAddress"
  nameWithType: "CosmosClientException.getResourceAddress"
  fullName: "com.azure.cosmos.CosmosClientException.getResourceAddress"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosResponseDiagnostics"
  name: "CosmosResponseDiagnostics"
  nameWithType: "CosmosResponseDiagnostics"
  fullName: "com.azure.cosmos.CosmosResponseDiagnostics"
- uid: "com.azure.cosmos.CosmosClientException.getCosmosResponseDiagnostics*"
  name: "getCosmosResponseDiagnostics"
  nameWithType: "CosmosClientException.getCosmosResponseDiagnostics"
  fullName: "com.azure.cosmos.CosmosClientException.getCosmosResponseDiagnostics"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosClientException.setCosmosResponseDiagnostics*"
  name: "setCosmosResponseDiagnostics"
  nameWithType: "CosmosClientException.setCosmosResponseDiagnostics"
  fullName: "com.azure.cosmos.CosmosClientException.setCosmosResponseDiagnostics"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosClientException.toString*"
  name: "toString"
  nameWithType: "CosmosClientException.toString"
  fullName: "com.azure.cosmos.CosmosClientException.toString"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosClientException.innerErrorMessage*"
  name: "innerErrorMessage"
  nameWithType: "CosmosClientException.innerErrorMessage"
  fullName: "com.azure.cosmos.CosmosClientException.innerErrorMessage"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosClientException.setResourceAddress*"
  name: "setResourceAddress"
  nameWithType: "CosmosClientException.setResourceAddress"
  fullName: "com.azure.cosmos.CosmosClientException.setResourceAddress"
  package: "com.azure.cosmos"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.cosmos.implementation.directconnectivity.Uri"
  name: "Uri"
  nameWithType: "Uri"
  fullName: "com.azure.cosmos.implementation.directconnectivity.Uri"
- uid: "java.lang.RuntimeException"
  name: "RuntimeException"
  nameWithType: "RuntimeException"
  fullName: "java.lang.RuntimeException"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
  name: "Throwable.printStackTrace(PrintWriter)"
  nameWithType: "Throwable.printStackTrace(PrintWriter)"
  fullName: "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
- uid: "java.lang.Throwable.getCause()"
  name: "Throwable.getCause()"
  nameWithType: "Throwable.getCause()"
  fullName: "java.lang.Throwable.getCause()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
  name: "Throwable.addSuppressed(Throwable)"
  nameWithType: "Throwable.addSuppressed(Throwable)"
  fullName: "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
- uid: "java.lang.Throwable.fillInStackTrace()"
  name: "Throwable.fillInStackTrace()"
  nameWithType: "Throwable.fillInStackTrace()"
  fullName: "java.lang.Throwable.fillInStackTrace()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Throwable.initCause(java.lang.Throwable)"
  name: "Throwable.initCause(Throwable)"
  nameWithType: "Throwable.initCause(Throwable)"
  fullName: "java.lang.Throwable.initCause(java.lang.Throwable)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
  name: "Throwable.setStackTrace(StackTraceElement[])"
  nameWithType: "Throwable.setStackTrace(StackTraceElement[])"
  fullName: "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
- uid: "java.lang.Throwable.toString()"
  name: "Throwable.toString()"
  nameWithType: "Throwable.toString()"
  fullName: "java.lang.Throwable.toString()"
- uid: "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
  name: "Throwable.printStackTrace(PrintStream)"
  nameWithType: "Throwable.printStackTrace(PrintStream)"
  fullName: "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
- uid: "java.lang.Throwable.getMessage()"
  name: "Throwable.getMessage()"
  nameWithType: "Throwable.getMessage()"
  fullName: "java.lang.Throwable.getMessage()"
- uid: "java.lang.Throwable.getSuppressed()"
  name: "Throwable.getSuppressed()"
  nameWithType: "Throwable.getSuppressed()"
  fullName: "java.lang.Throwable.getSuppressed()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Throwable.getStackTrace()"
  name: "Throwable.getStackTrace()"
  nameWithType: "Throwable.getStackTrace()"
  fullName: "java.lang.Throwable.getStackTrace()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Throwable.getLocalizedMessage()"
  name: "Throwable.getLocalizedMessage()"
  nameWithType: "Throwable.getLocalizedMessage()"
  fullName: "java.lang.Throwable.getLocalizedMessage()"
- uid: "java.lang.Throwable.printStackTrace()"
  name: "Throwable.printStackTrace()"
  nameWithType: "Throwable.printStackTrace()"
  fullName: "java.lang.Throwable.printStackTrace()"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
