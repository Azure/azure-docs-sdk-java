### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.fluent.PrefixesClient"
fullName: "com.azure.resourcemanager.peering.fluent.PrefixesClient"
name: "PrefixesClient"
nameWithType: "PrefixesClient"
summary: "An instance of this class provides access to all the operations defined in Prefixes<wbr>Client."
syntax: "public interface PrefixesClient"
methods:
- uid: "com.azure.resourcemanager.peering.fluent.PrefixesClient.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner)"
  fullName: "com.azure.resourcemanager.peering.fluent.PrefixesClient.createOrUpdate(String resourceGroupName, String peeringServiceName, String prefixName, PeeringServicePrefixInner peeringServicePrefix)"
  name: "createOrUpdate(String resourceGroupName, String peeringServiceName, String prefixName, PeeringServicePrefixInner peeringServicePrefix)"
  nameWithType: "PrefixesClient.createOrUpdate(String resourceGroupName, String peeringServiceName, String prefixName, PeeringServicePrefixInner peeringServicePrefix)"
  summary: "Creates a new prefix with the specified name under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the prefix."
    name: "prefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The properties needed to create a prefix."
    name: "peeringServicePrefix"
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner&text=PeeringServicePrefixInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringServicePrefixInner createOrUpdate(String resourceGroupName, String peeringServiceName, String prefixName, PeeringServicePrefixInner peeringServicePrefix)"
  desc: "Creates a new prefix with the specified name under the given subscription, resource group and peering service."
  returns:
    description: "the peering service prefix class."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner&text=PeeringServicePrefixInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.PrefixesClient.createOrUpdateWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.PrefixesClient.createOrUpdateWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, PeeringServicePrefixInner peeringServicePrefix, Context context)"
  name: "createOrUpdateWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, PeeringServicePrefixInner peeringServicePrefix, Context context)"
  nameWithType: "PrefixesClient.createOrUpdateWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, PeeringServicePrefixInner peeringServicePrefix, Context context)"
  summary: "Creates a new prefix with the specified name under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the prefix."
    name: "prefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The properties needed to create a prefix."
    name: "peeringServicePrefix"
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner&text=PeeringServicePrefixInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PeeringServicePrefixInner> createOrUpdateWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, PeeringServicePrefixInner peeringServicePrefix, Context context)"
  desc: "Creates a new prefix with the specified name under the given subscription, resource group and peering service."
  returns:
    description: "the peering service prefix class."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner&text=PeeringServicePrefixInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PrefixesClient.delete(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.PrefixesClient.delete(String resourceGroupName, String peeringServiceName, String prefixName)"
  name: "delete(String resourceGroupName, String peeringServiceName, String prefixName)"
  nameWithType: "PrefixesClient.delete(String resourceGroupName, String peeringServiceName, String prefixName)"
  summary: "Deletes an existing prefix with the specified name under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the prefix."
    name: "prefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String peeringServiceName, String prefixName)"
  desc: "Deletes an existing prefix with the specified name under the given subscription, resource group and peering service."
- uid: "com.azure.resourcemanager.peering.fluent.PrefixesClient.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.PrefixesClient.deleteWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, Context context)"
  nameWithType: "PrefixesClient.deleteWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, Context context)"
  summary: "Deletes an existing prefix with the specified name under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the prefix."
    name: "prefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, Context context)"
  desc: "Deletes an existing prefix with the specified name under the given subscription, resource group and peering service."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PrefixesClient.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.PrefixesClient.get(String resourceGroupName, String peeringServiceName, String prefixName)"
  name: "get(String resourceGroupName, String peeringServiceName, String prefixName)"
  nameWithType: "PrefixesClient.get(String resourceGroupName, String peeringServiceName, String prefixName)"
  summary: "Gets an existing prefix with the specified name under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the prefix."
    name: "prefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringServicePrefixInner get(String resourceGroupName, String peeringServiceName, String prefixName)"
  desc: "Gets an existing prefix with the specified name under the given subscription, resource group and peering service."
  returns:
    description: "an existing prefix with the specified name under the given subscription, resource group and peering\n     service."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner&text=PeeringServicePrefixInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.PrefixesClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.PrefixesClient.getWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, String expand, Context context)"
  name: "getWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, String expand, Context context)"
  nameWithType: "PrefixesClient.getWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, String expand, Context context)"
  summary: "Gets an existing prefix with the specified name under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the prefix."
    name: "prefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The properties to be expanded."
    name: "expand"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PeeringServicePrefixInner> getWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, String expand, Context context)"
  desc: "Gets an existing prefix with the specified name under the given subscription, resource group and peering service."
  returns:
    description: "an existing prefix with the specified name under the given subscription, resource group and peering\n     service."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner&text=PeeringServicePrefixInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PrefixesClient.listByPeeringService(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.PrefixesClient.listByPeeringService(String resourceGroupName, String peeringServiceName)"
  name: "listByPeeringService(String resourceGroupName, String peeringServiceName)"
  nameWithType: "PrefixesClient.listByPeeringService(String resourceGroupName, String peeringServiceName)"
  summary: "Lists all prefixes under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringServicePrefixInner> listByPeeringService(String resourceGroupName, String peeringServiceName)"
  desc: "Lists all prefixes under the given subscription, resource group and peering service."
  returns:
    description: "the paginated list of peering service prefixes."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner&text=PeeringServicePrefixInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PrefixesClient.listByPeeringService(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.PrefixesClient.listByPeeringService(String resourceGroupName, String peeringServiceName, String expand, Context context)"
  name: "listByPeeringService(String resourceGroupName, String peeringServiceName, String expand, Context context)"
  nameWithType: "PrefixesClient.listByPeeringService(String resourceGroupName, String peeringServiceName, String expand, Context context)"
  summary: "Lists all prefixes under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The properties to be expanded."
    name: "expand"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringServicePrefixInner> listByPeeringService(String resourceGroupName, String peeringServiceName, String expand, Context context)"
  desc: "Lists all prefixes under the given subscription, resource group and peering service."
  returns:
    description: "the paginated list of peering service prefixes."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner&text=PeeringServicePrefixInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in PrefixesClient."
metadata: {}
package: "com.azure.resourcemanager.peering.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
