### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  id: StdDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std
  children:
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.F_MASK_ACCEPT_ARRAYS
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.F_MASK_INT_COERCIONS
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.StdDeserializer(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.StdDeserializer(com.fasterxml.jackson.databind.deser.std.StdDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.StdDeserializer(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._byteOverflow(int)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceEmptyString(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceNullToken(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceTextualNull(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coercedTypeDesc()
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeWrappedValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._failDoubleToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._hasTextualNull(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._intOverflow(long)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isEmptyOrTextualNull(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isIntNumber(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNaN(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNegInf(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isPosInf(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._neitherNull(java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._nonNullNumber(java.lang.Number)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDateFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum<?>,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._shortOverflow(int)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._valueClass
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._valueType
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyStringForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findValueNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueClass()
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType()
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.handledType()
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.parseDouble(java.lang.String)
  langs:
  - java
  name: StdDeserializer<T>
  nameWithType: StdDeserializer<T>
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>
  type: Class
  package: com.fasterxml.jackson.databind.deser.std
  summary: Base class for common deserializers. Contains shared base functionality for dealing with primitive values, such as (re)parsing from String.
  syntax:
    content: public abstract class StdDeserializer<T> extends JsonDeserializer<T> implements Serializable
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.JsonDeserializer
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,T)
  - com.fasterxml.jackson.databind.JsonDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  - com.fasterxml.jackson.databind.JsonDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,T)
  - com.fasterxml.jackson.databind.JsonDeserializer.findBackReference(java.lang.String)
  - com.fasterxml.jackson.databind.JsonDeserializer.getDelegatee()
  - com.fasterxml.jackson.databind.JsonDeserializer.getEmptyAccessPattern()
  - com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue()
  - com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.JsonDeserializer.getKnownPropertyNames()
  - com.fasterxml.jackson.databind.JsonDeserializer.getNullAccessPattern()
  - com.fasterxml.jackson.databind.JsonDeserializer.getNullValue()
  - com.fasterxml.jackson.databind.JsonDeserializer.getNullValue(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.JsonDeserializer.getObjectIdReader()
  - com.fasterxml.jackson.databind.JsonDeserializer.handledType()
  - com.fasterxml.jackson.databind.JsonDeserializer.isCachable()
  - com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.JsonDeserializer.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
  - com.fasterxml.jackson.databind.JsonDeserializer.unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.F_MASK_ACCEPT_ARRAYS
  id: F_MASK_ACCEPT_ARRAYS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: F_MASK_ACCEPT_ARRAYS
  nameWithType: StdDeserializer<T>.F_MASK_ACCEPT_ARRAYS
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.F_MASK_ACCEPT_ARRAYS
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected static final int F_MASK_ACCEPT_ARRAYS
    return:
      type: int
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.F_MASK_INT_COERCIONS
  id: F_MASK_INT_COERCIONS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: F_MASK_INT_COERCIONS
  nameWithType: StdDeserializer<T>.F_MASK_INT_COERCIONS
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.F_MASK_INT_COERCIONS
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  summary: Bitmask that covers <xref uid="com.fasterxml.jackson.databind.DeserializationFeature.USE_BIG_INTEGER_FOR_INTS" data-throw-if-not-resolved="false">DeserializationFeature#USE_BIG_INTEGER_FOR_INTS</xref> and <xref uid="com.fasterxml.jackson.databind.DeserializationFeature.USE_LONG_FOR_INTS" data-throw-if-not-resolved="false">DeserializationFeature#USE_LONG_FOR_INTS</xref>, used for more efficient cheks when coercing integral values for untyped deserialization.
  syntax:
    content: protected static final int F_MASK_INT_COERCIONS
    return:
      type: int
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.StdDeserializer(com.fasterxml.jackson.databind.JavaType)
  id: StdDeserializer(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: StdDeserializer(JavaType valueType)
  nameWithType: StdDeserializer<T>.StdDeserializer(JavaType valueType)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.StdDeserializer(JavaType valueType)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.StdDeserializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected StdDeserializer(JavaType valueType)
    parameters:
    - id: valueType
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.StdDeserializer(com.fasterxml.jackson.databind.deser.std.StdDeserializer<?>)
  id: StdDeserializer(com.fasterxml.jackson.databind.deser.std.StdDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: StdDeserializer(StdDeserializer<?> src)
  nameWithType: StdDeserializer<T>.StdDeserializer(StdDeserializer<?> src)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.StdDeserializer(StdDeserializer<?> src)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.StdDeserializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.std
  summary: Copy-constructor for sub-classes to use, most often when creating new instances for <xref uid="com.fasterxml.jackson.databind.deser.ContextualDeserializer" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.deser.ContextualDeserializer</xref>.
  syntax:
    content: protected StdDeserializer(StdDeserializer<?> src)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.deser.std.StdDeserializer<?>
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.StdDeserializer(java.lang.Class<?>)
  id: StdDeserializer(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: StdDeserializer(Class<?> vc)
  nameWithType: StdDeserializer<T>.StdDeserializer(Class<?> vc)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.StdDeserializer(Class<?> vc)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.StdDeserializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected StdDeserializer(Class<?> vc)
    parameters:
    - id: vc
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._byteOverflow(int)
  id: _byteOverflow(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _byteOverflow(int value)
  nameWithType: StdDeserializer<T>._byteOverflow(int value)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._byteOverflow(int value)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._byteOverflow*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final boolean _byteOverflow(int value)
    parameters:
    - id: value
      type: int
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceEmptyString(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  id: _coerceEmptyString(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _coerceEmptyString(DeserializationContext ctxt, boolean isPrimitive)
  nameWithType: StdDeserializer<T>._coerceEmptyString(DeserializationContext ctxt, boolean isPrimitive)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._coerceEmptyString(DeserializationContext ctxt, boolean isPrimitive)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceEmptyString*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Method called when JSON String with value "" (that is, zero length) is encountered.
  syntax:
    content: protected Object _coerceEmptyString(DeserializationContext ctxt, boolean isPrimitive)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: isPrimitive
      type: boolean
    return:
      type: java.lang.Object
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _coerceIntegral(JsonParser p, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._coerceIntegral(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._coerceIntegral(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceIntegral*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Helper method called in case where an integral number is encountered, but config settings suggest that a coercion may be needed to "upgrade" <xref uid="java.lang.Number" data-throw-if-not-resolved="false">java.lang.Number</xref> into "bigger" type like <xref uid="java.lang.Long" data-throw-if-not-resolved="false">java.lang.Long</xref> or <xref uid="java.math.BigInteger" data-throw-if-not-resolved="false">java.math.BigInteger</xref>
  syntax:
    content: protected Object _coerceIntegral(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceNullToken(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  id: _coerceNullToken(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _coerceNullToken(DeserializationContext ctxt, boolean isPrimitive)
  nameWithType: StdDeserializer<T>._coerceNullToken(DeserializationContext ctxt, boolean isPrimitive)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._coerceNullToken(DeserializationContext ctxt, boolean isPrimitive)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceNullToken*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: 'Method to call when JSON \`null\` token is encountered. Note: only called when this deserializer encounters it but NOT when reached via property'
  syntax:
    content: protected Object _coerceNullToken(DeserializationContext ctxt, boolean isPrimitive)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: isPrimitive
      type: boolean
    return:
      type: java.lang.Object
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceTextualNull(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  id: _coerceTextualNull(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _coerceTextualNull(DeserializationContext ctxt, boolean isPrimitive)
  nameWithType: StdDeserializer<T>._coerceTextualNull(DeserializationContext ctxt, boolean isPrimitive)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._coerceTextualNull(DeserializationContext ctxt, boolean isPrimitive)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceTextualNull*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Method called when JSON String with value "null" is encountered.
  syntax:
    content: protected Object _coerceTextualNull(DeserializationContext ctxt, boolean isPrimitive)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: isPrimitive
      type: boolean
    return:
      type: java.lang.Object
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coercedTypeDesc()
  id: _coercedTypeDesc()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _coercedTypeDesc()
  nameWithType: StdDeserializer<T>._coercedTypeDesc()
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._coercedTypeDesc()
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coercedTypeDesc*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Helper method called to get a description of type into which a scalar value coercion is (most likely) being applied, to be used for constructing exception messages on coerce failure.
  syntax:
    content: protected String _coercedTypeDesc()
    return:
      type: java.lang.String
      description: Message with backtick-enclosed name of type this deserializer supports
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _deserializeFromArray(JsonParser p, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._deserializeFromArray(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._deserializeFromArray(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromArray*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: >-
    Helper method that allows easy support for array-related <xref uid="com.fasterxml.jackson.databind.DeserializationFeature" data-throw-if-not-resolved="false">DeserializationFeature</xref>s \`ACCEPT\_EMPTY\_ARRAY\_AS\_NULL\_OBJECT\` and \`UNWRAP\_SINGLE\_VALUE\_ARRAYS\`: checks for either empty array, or single-value array-wrapped value (respectively), and either reports an exception (if no match, or feature(s) not enabled), or returns appropriate result value.


    This method should NOT be called if Array representation is explicitly supported for type: it should only be called in case it is otherwise unrecognized.


    NOTE: in case of unwrapped single element, will handle actual decoding by calling <xref uid="com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeWrappedValue" data-throw-if-not-resolved="false">#_deserializeWrappedValue</xref>, which by default calls <xref uid="com.fasterxml.jackson.databind.deser.std.StdDeserializer.deserialize*" data-throw-if-not-resolved="false">#deserialize(JsonParser, DeserializationContext)</xref>.
  syntax:
    content: protected T _deserializeFromArray(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _deserializeFromEmpty(JsonParser p, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._deserializeFromEmpty(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._deserializeFromEmpty(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromEmpty*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Helper method that may be used to support fallback for Empty String / Empty Array non-standard representations; usually for things serialized as JSON Objects.
  syntax:
    content: protected T _deserializeFromEmpty(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeWrappedValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _deserializeWrappedValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _deserializeWrappedValue(JsonParser p, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._deserializeWrappedValue(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._deserializeWrappedValue(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeWrappedValue*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: 'Helper called to support <xref uid="com.fasterxml.jackson.databind.DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS" data-throw-if-not-resolved="false">DeserializationFeature#UNWRAP_SINGLE_VALUE_ARRAYS</xref>: default implementation simply calls <xref uid="com.fasterxml.jackson.databind.deser.std.StdDeserializer.deserialize*" data-throw-if-not-resolved="false">#deserialize(JsonParser, DeserializationContext)</xref>, but handling may be overridden.'
  syntax:
    content: protected T _deserializeWrappedValue(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._failDoubleToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  id: _failDoubleToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _failDoubleToIntCoercion(JsonParser p, DeserializationContext ctxt, String type)
  nameWithType: StdDeserializer<T>._failDoubleToIntCoercion(JsonParser p, DeserializationContext ctxt, String type)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._failDoubleToIntCoercion(JsonParser p, DeserializationContext ctxt, String type)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._failDoubleToIntCoercion*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected void _failDoubleToIntCoercion(JsonParser p, DeserializationContext ctxt, String type)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: type
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: _findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _findNullProvider(DeserializationContext ctxt, BeanProperty prop, Nulls nulls, JsonDeserializer<?> valueDeser)
  nameWithType: StdDeserializer<T>._findNullProvider(DeserializationContext ctxt, BeanProperty prop, Nulls nulls, JsonDeserializer<?> valueDeser)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._findNullProvider(DeserializationContext ctxt, BeanProperty prop, Nulls nulls, JsonDeserializer<?> valueDeser)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final NullValueProvider _findNullProvider(DeserializationContext ctxt, BeanProperty prop, Nulls nulls, JsonDeserializer<?> valueDeser)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: prop
      type: com.fasterxml.jackson.databind.BeanProperty
    - id: nulls
      type: com.fasterxml.jackson.annotation.Nulls
    - id: valueDeser
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    return:
      type: com.fasterxml.jackson.databind.deser.NullValueProvider
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._hasTextualNull(java.lang.String)
  id: _hasTextualNull(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _hasTextualNull(String value)
  nameWithType: StdDeserializer<T>._hasTextualNull(String value)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._hasTextualNull(String value)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._hasTextualNull*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Helper method called to determine if we are seeing String value of "null", and, further, that it should be coerced to null just like null token.
  syntax:
    content: protected boolean _hasTextualNull(String value)
    parameters:
    - id: value
      type: java.lang.String
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._intOverflow(long)
  id: _intOverflow(long)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _intOverflow(long value)
  nameWithType: StdDeserializer<T>._intOverflow(long value)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._intOverflow(long value)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._intOverflow*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final boolean _intOverflow(long value)
    parameters:
    - id: value
      type: long
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isEmptyOrTextualNull(java.lang.String)
  id: _isEmptyOrTextualNull(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _isEmptyOrTextualNull(String value)
  nameWithType: StdDeserializer<T>._isEmptyOrTextualNull(String value)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._isEmptyOrTextualNull(String value)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isEmptyOrTextualNull*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected boolean _isEmptyOrTextualNull(String value)
    parameters:
    - id: value
      type: java.lang.String
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isIntNumber(java.lang.String)
  id: _isIntNumber(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _isIntNumber(String text)
  nameWithType: StdDeserializer<T>._isIntNumber(String text)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._isIntNumber(String text)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isIntNumber*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Helper method to check whether given text refers to what looks like a clean simple integer number, consisting of optional sign followed by a sequence of digits.
  syntax:
    content: protected final boolean _isIntNumber(String text)
    parameters:
    - id: text
      type: java.lang.String
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNaN(java.lang.String)
  id: _isNaN(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _isNaN(String text)
  nameWithType: StdDeserializer<T>._isNaN(String text)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._isNaN(String text)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNaN*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final boolean _isNaN(String text)
    parameters:
    - id: text
      type: java.lang.String
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNegInf(java.lang.String)
  id: _isNegInf(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _isNegInf(String text)
  nameWithType: StdDeserializer<T>._isNegInf(String text)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._isNegInf(String text)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNegInf*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final boolean _isNegInf(String text)
    parameters:
    - id: text
      type: java.lang.String
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isPosInf(java.lang.String)
  id: _isPosInf(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _isPosInf(String text)
  nameWithType: StdDeserializer<T>._isPosInf(String text)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._isPosInf(String text)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isPosInf*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final boolean _isPosInf(String text)
    parameters:
    - id: text
      type: java.lang.String
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._neitherNull(java.lang.Object,java.lang.Object)
  id: _neitherNull(java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _neitherNull(Object a, Object b)
  nameWithType: StdDeserializer<T>._neitherNull(Object a, Object b)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._neitherNull(Object a, Object b)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._neitherNull*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected static final boolean _neitherNull(Object a, Object b)
    parameters:
    - id: a
      type: java.lang.Object
    - id: b
      type: java.lang.Object
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._nonNullNumber(java.lang.Number)
  id: _nonNullNumber(java.lang.Number)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _nonNullNumber(Number n)
  nameWithType: StdDeserializer<T>._nonNullNumber(Number n)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._nonNullNumber(Number n)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._nonNullNumber*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected Number _nonNullNumber(Number n)
    parameters:
    - id: n
      type: java.lang.Number
    return:
      type: java.lang.Number
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _parseBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _parseBooleanFromInt(JsonParser p, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._parseBooleanFromInt(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseBooleanFromInt(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanFromInt*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected boolean _parseBooleanFromInt(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: boolean
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _parseBooleanPrimitive(JsonParser p, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._parseBooleanPrimitive(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseBooleanPrimitive(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final boolean _parseBooleanPrimitive(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: boolean
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class<?>)
  id: _parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _parseBooleanPrimitive(DeserializationContext ctxt, JsonParser p, Class<?> targetType)
  nameWithType: StdDeserializer<T>._parseBooleanPrimitive(DeserializationContext ctxt, JsonParser p, Class<?> targetType)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseBooleanPrimitive(DeserializationContext ctxt, JsonParser p, Class<?> targetType)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final boolean _parseBooleanPrimitive(DeserializationContext ctxt, JsonParser p, Class<?> targetType)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: targetType
      type: java.lang.Class<?>
    return:
      type: boolean
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _parseBytePrimitive(JsonParser p, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._parseBytePrimitive(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseBytePrimitive(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBytePrimitive*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final byte _parseBytePrimitive(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: byte
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _parseDate(JsonParser p, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._parseDate(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseDate(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected Date _parseDate(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.util.Date
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
  id: _parseDate(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _parseDate(String value, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._parseDate(String value, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseDate(String value, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected Date _parseDate(String value, DeserializationContext ctxt)
    parameters:
    - id: value
      type: java.lang.String
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.util.Date
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDateFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _parseDateFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _parseDateFromArray(JsonParser p, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._parseDateFromArray(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseDateFromArray(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDateFromArray*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected Date _parseDateFromArray(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.util.Date
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _parseDoublePrimitive(JsonParser p, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._parseDoublePrimitive(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseDoublePrimitive(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final double _parseDoublePrimitive(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: double
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  id: _parseDoublePrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _parseDoublePrimitive(DeserializationContext ctxt, String text)
  nameWithType: StdDeserializer<T>._parseDoublePrimitive(DeserializationContext ctxt, String text)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseDoublePrimitive(DeserializationContext ctxt, String text)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final double _parseDoublePrimitive(DeserializationContext ctxt, String text)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: text
      type: java.lang.String
    return:
      type: double
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _parseFloatPrimitive(JsonParser p, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._parseFloatPrimitive(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseFloatPrimitive(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final float _parseFloatPrimitive(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: float
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  id: _parseFloatPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _parseFloatPrimitive(DeserializationContext ctxt, String text)
  nameWithType: StdDeserializer<T>._parseFloatPrimitive(DeserializationContext ctxt, String text)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseFloatPrimitive(DeserializationContext ctxt, String text)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final float _parseFloatPrimitive(DeserializationContext ctxt, String text)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: text
      type: java.lang.String
    return:
      type: float
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _parseIntPrimitive(JsonParser p, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._parseIntPrimitive(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseIntPrimitive(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final int _parseIntPrimitive(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  id: _parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _parseIntPrimitive(DeserializationContext ctxt, String text)
  nameWithType: StdDeserializer<T>._parseIntPrimitive(DeserializationContext ctxt, String text)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseIntPrimitive(DeserializationContext ctxt, String text)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final int _parseIntPrimitive(DeserializationContext ctxt, String text)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: text
      type: java.lang.String
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _parseLongPrimitive(JsonParser p, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._parseLongPrimitive(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseLongPrimitive(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final long _parseLongPrimitive(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: long
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  id: _parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _parseLongPrimitive(DeserializationContext ctxt, String text)
  nameWithType: StdDeserializer<T>._parseLongPrimitive(DeserializationContext ctxt, String text)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseLongPrimitive(DeserializationContext ctxt, String text)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final long _parseLongPrimitive(DeserializationContext ctxt, String text)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: text
      type: java.lang.String
    return:
      type: long
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _parseShortPrimitive(JsonParser p, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._parseShortPrimitive(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseShortPrimitive(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseShortPrimitive*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final short _parseShortPrimitive(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: short
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _parseString(JsonParser p, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._parseString(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseString(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseString*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Helper method used for accessing String value, if possible, doing necessary conversion or throwing exception as necessary.
  syntax:
    content: protected final String _parseString(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum<?>,java.lang.String)
  id: _reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum<?>,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _reportFailedNullCoerce(DeserializationContext ctxt, boolean state, Enum<?> feature, String inputDesc)
  nameWithType: StdDeserializer<T>._reportFailedNullCoerce(DeserializationContext ctxt, boolean state, Enum<?> feature, String inputDesc)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._reportFailedNullCoerce(DeserializationContext ctxt, boolean state, Enum<?> feature, String inputDesc)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected void _reportFailedNullCoerce(DeserializationContext ctxt, boolean state, Enum<?> feature, String inputDesc)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: state
      type: boolean
    - id: feature
      type: java.lang.Enum<?>
    - id: inputDesc
      type: java.lang.String
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._shortOverflow(int)
  id: _shortOverflow(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _shortOverflow(int value)
  nameWithType: StdDeserializer<T>._shortOverflow(int value)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._shortOverflow(int value)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._shortOverflow*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final boolean _shortOverflow(int value)
    parameters:
    - id: value
      type: int
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._valueClass
  id: _valueClass
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _valueClass
  nameWithType: StdDeserializer<T>._valueClass
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._valueClass
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  summary: 'Type of values this deserializer handles: sometimes exact types, other time most specific supertype of types deserializer handles (which may be as generic as <xref uid="java.lang.Object" data-throw-if-not-resolved="false">Object</xref> in some case)'
  syntax:
    content: protected final Class<?> _valueClass
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._valueType
  id: _valueType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _valueType
  nameWithType: StdDeserializer<T>._valueType
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._valueType
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final JavaType _valueType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _verifyEndArrayForSingle(JsonParser p, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._verifyEndArrayForSingle(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._verifyEndArrayForSingle(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyEndArrayForSingle*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected void _verifyEndArrayForSingle(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)
  id: _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _verifyNullForPrimitive(DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>._verifyNullForPrimitive(DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._verifyNullForPrimitive(DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitive*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final void _verifyNullForPrimitive(DeserializationContext ctxt)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  id: _verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _verifyNullForPrimitiveCoercion(DeserializationContext ctxt, String str)
  nameWithType: StdDeserializer<T>._verifyNullForPrimitiveCoercion(DeserializationContext ctxt, String str)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._verifyNullForPrimitiveCoercion(DeserializationContext ctxt, String str)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitiveCoercion*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final void _verifyNullForPrimitiveCoercion(DeserializationContext ctxt, String str)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: str
      type: java.lang.String
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  id: _verifyNullForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _verifyNullForScalarCoercion(DeserializationContext ctxt, String str)
  nameWithType: StdDeserializer<T>._verifyNullForScalarCoercion(DeserializationContext ctxt, String str)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._verifyNullForScalarCoercion(DeserializationContext ctxt, String str)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForScalarCoercion*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final void _verifyNullForScalarCoercion(DeserializationContext ctxt, String str)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: str
      type: java.lang.String
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
  id: _verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _verifyNumberForScalarCoercion(DeserializationContext ctxt, JsonParser p)
  nameWithType: StdDeserializer<T>._verifyNumberForScalarCoercion(DeserializationContext ctxt, JsonParser p)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._verifyNumberForScalarCoercion(DeserializationContext ctxt, JsonParser p)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNumberForScalarCoercion*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected void _verifyNumberForScalarCoercion(DeserializationContext ctxt, JsonParser p)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyStringForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  id: _verifyStringForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: _verifyStringForScalarCoercion(DeserializationContext ctxt, String str)
  nameWithType: StdDeserializer<T>._verifyStringForScalarCoercion(DeserializationContext ctxt, String str)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._verifyStringForScalarCoercion(DeserializationContext ctxt, String str)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyStringForScalarCoercion*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected void _verifyStringForScalarCoercion(DeserializationContext ctxt, String str)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: str
      type: java.lang.String
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  id: deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)
  nameWithType: StdDeserializer<T>.deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.deserializeWithType*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Base implementation that does not assume specific type inclusion mechanism. Sub-classes are expected to override this method if they are to handle type information.
  syntax:
    content: public Object deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: typeDeserializer
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: findContentNullProvider(DeserializationContext ctxt, BeanProperty prop, JsonDeserializer<?> valueDeser)
  nameWithType: StdDeserializer<T>.findContentNullProvider(DeserializationContext ctxt, BeanProperty prop, JsonDeserializer<?> valueDeser)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.findContentNullProvider(DeserializationContext ctxt, BeanProperty prop, JsonDeserializer<?> valueDeser)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Method called to find <xref uid="com.fasterxml.jackson.databind.deser.NullValueProvider" data-throw-if-not-resolved="false">NullValueProvider</xref> for a contents of a structured primary property (Collection, Map, array), using "content nulls" setting. If no provider found (not defined), will return given value deserializer (which is a null value provider itself).
  syntax:
    content: protected NullValueProvider findContentNullProvider(DeserializationContext ctxt, BeanProperty prop, JsonDeserializer<?> valueDeser)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: prop
      type: com.fasterxml.jackson.databind.BeanProperty
    - id: valueDeser
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    return:
      type: com.fasterxml.jackson.databind.deser.NullValueProvider
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  id: findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: findContentNullStyle(DeserializationContext ctxt, BeanProperty prop)
  nameWithType: StdDeserializer<T>.findContentNullStyle(DeserializationContext ctxt, BeanProperty prop)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.findContentNullStyle(DeserializationContext ctxt, BeanProperty prop)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullStyle*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected Nulls findContentNullStyle(DeserializationContext ctxt, BeanProperty prop)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: prop
      type: com.fasterxml.jackson.databind.BeanProperty
    return:
      type: com.fasterxml.jackson.annotation.Nulls
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: findConvertingContentDeserializer(DeserializationContext ctxt, BeanProperty prop, JsonDeserializer<?> existingDeserializer)
  nameWithType: StdDeserializer<T>.findConvertingContentDeserializer(DeserializationContext ctxt, BeanProperty prop, JsonDeserializer<?> existingDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.findConvertingContentDeserializer(DeserializationContext ctxt, BeanProperty prop, JsonDeserializer<?> existingDeserializer)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Helper method that can be used to see if specified property has annotation indicating that a converter is to be used for contained values (contents of structured types; array/List/Map values)
  syntax:
    content: protected JsonDeserializer<?> findConvertingContentDeserializer(DeserializationContext ctxt, BeanProperty prop, JsonDeserializer<?> existingDeserializer)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: prop
      type: com.fasterxml.jackson.databind.BeanProperty
    - id: existingDeserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: >-
        (optional) configured content
            serializer if one already exists.
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
  id: findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: findDeserializer(DeserializationContext ctxt, JavaType type, BeanProperty property)
  nameWithType: StdDeserializer<T>.findDeserializer(DeserializationContext ctxt, JavaType type, BeanProperty property)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.findDeserializer(DeserializationContext ctxt, JavaType type, BeanProperty property)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Helper method used to locate deserializers for properties the type this deserializer handles contains (usually for properties of bean types)
  syntax:
    content: protected JsonDeserializer<Object> findDeserializer(DeserializationContext ctxt, JavaType type, BeanProperty property)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
      description: Type of property to deserialize
    - id: property
      type: com.fasterxml.jackson.databind.BeanProperty
      description: >-
        Actual property object (field, method, constuctor parameter) used
             for passing deserialized values; provided so deserializer can be contextualized if necessary
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  id: findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: findFormatFeature(DeserializationContext ctxt, BeanProperty prop, Class<?> typeForDefaults, JsonFormat.Feature feat)
  nameWithType: StdDeserializer<T>.findFormatFeature(DeserializationContext ctxt, BeanProperty prop, Class<?> typeForDefaults, JsonFormat.Feature feat)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.findFormatFeature(DeserializationContext ctxt, BeanProperty prop, Class<?> typeForDefaults, JsonFormat.Feature feat)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Convenience method that uses <xref uid="com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides" data-throw-if-not-resolved="false">#findFormatOverrides</xref> to find possible defaults and/of overrides, and then calls `JsonFormat.Value.getFeature(feat)` to find whether that feature has been specifically marked as enabled or disabled.
  syntax:
    content: protected Boolean findFormatFeature(DeserializationContext ctxt, BeanProperty prop, Class<?> typeForDefaults, JsonFormat.Feature feat)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: prop
      type: com.fasterxml.jackson.databind.BeanProperty
    - id: typeForDefaults
      type: java.lang.Class<?>
      description: Type (erased) used for finding default format settings, if any
    - id: feat
      type: com.fasterxml.jackson.annotation.JsonFormat.Feature
    return:
      type: java.lang.Boolean
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  id: findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: findFormatOverrides(DeserializationContext ctxt, BeanProperty prop, Class<?> typeForDefaults)
  nameWithType: StdDeserializer<T>.findFormatOverrides(DeserializationContext ctxt, BeanProperty prop, Class<?> typeForDefaults)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.findFormatOverrides(DeserializationContext ctxt, BeanProperty prop, Class<?> typeForDefaults)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Helper method that may be used to find if this deserializer has specific <xref uid="com.fasterxml.jackson.annotation.JsonFormat" data-throw-if-not-resolved="false">JsonFormat</xref> settings, either via property, or through type-specific defaulting.
  syntax:
    content: protected JsonFormat.Value findFormatOverrides(DeserializationContext ctxt, BeanProperty prop, Class<?> typeForDefaults)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: prop
      type: com.fasterxml.jackson.databind.BeanProperty
    - id: typeForDefaults
      type: java.lang.Class<?>
      description: Type (erased) used for finding default format settings, if any
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findValueNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata)
  id: findValueNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: findValueNullProvider(DeserializationContext ctxt, SettableBeanProperty prop, PropertyMetadata propMetadata)
  nameWithType: StdDeserializer<T>.findValueNullProvider(DeserializationContext ctxt, SettableBeanProperty prop, PropertyMetadata propMetadata)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.findValueNullProvider(DeserializationContext ctxt, SettableBeanProperty prop, PropertyMetadata propMetadata)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findValueNullProvider*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Method called to find <xref uid="com.fasterxml.jackson.databind.deser.NullValueProvider" data-throw-if-not-resolved="false">NullValueProvider</xref> for a primary property, using "value nulls" setting. If no provider found (not defined, or is "skip"), will return \`null\`.
  syntax:
    content: protected final NullValueProvider findValueNullProvider(DeserializationContext ctxt, SettableBeanProperty prop, PropertyMetadata propMetadata)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: prop
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    - id: propMetadata
      type: com.fasterxml.jackson.databind.PropertyMetadata
    return:
      type: com.fasterxml.jackson.databind.deser.NullValueProvider
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueClass()
  id: getValueClass()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: getValueClass()
  nameWithType: StdDeserializer<T>.getValueClass()
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.getValueClass()
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueClass*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: public final Class<?> getValueClass()
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType()
  id: getValueType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: getValueType()
  nameWithType: StdDeserializer<T>.getValueType()
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.getValueType()
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Exact structured type this deserializer handles, if known.
  syntax:
    content: public JavaType getValueType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType(com.fasterxml.jackson.databind.DeserializationContext)
  id: getValueType(com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: getValueType(DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>.getValueType(DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.getValueType(DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: >-
    Convenience method for getting handled type as <xref uid="com.fasterxml.jackson.databind.JavaType" data-throw-if-not-resolved="false">JavaType</xref>, regardless of whether deserializer has one already resolved (and accessible via <xref uid="com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType()" data-throw-if-not-resolved="false">#getValueType()</xref>) or not: equivalent to:


    ```java

    if (getValueType() != null) {
            return getValueType();
       }
       return ctxt.constructType(handledType());
    ```
  syntax:
    content: public JavaType getValueType(DeserializationContext ctxt)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: handleMissingEndArrayForSingle(JsonParser p, DeserializationContext ctxt)
  nameWithType: StdDeserializer<T>.handleMissingEndArrayForSingle(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.handleMissingEndArrayForSingle(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleMissingEndArrayForSingle*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected void handleMissingEndArrayForSingle(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  id: handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: handleUnknownProperty(JsonParser p, DeserializationContext ctxt, Object instanceOrClass, String propName)
  nameWithType: StdDeserializer<T>.handleUnknownProperty(JsonParser p, DeserializationContext ctxt, Object instanceOrClass, String propName)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.handleUnknownProperty(JsonParser p, DeserializationContext ctxt, Object instanceOrClass, String propName)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Method called to deal with a property that did not map to a known Bean property. Method can deal with the problem as it sees fit (ignore, throw exception); but if it does return, it has to skip the matching Json content parser has.
  syntax:
    content: protected void handleUnknownProperty(JsonParser p, DeserializationContext ctxt, Object instanceOrClass, String propName)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
      description: Parser that points to value of the unknown property
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
      description: >-
        Context for deserialization; allows access to the parser,
            error reporting functionality
    - id: instanceOrClass
      type: java.lang.Object
      description: >-
        Instance that is being populated by this
           deserializer, or if not known, Class that would be instantiated.
           If null, will assume type is what <xref uid="com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueClass" data-throw-if-not-resolved="false">#getValueClass</xref> returns.
    - id: propName
      type: java.lang.String
      description: Name of the property that cannot be mapped
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handledType()
  id: handledType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: handledType()
  nameWithType: StdDeserializer<T>.handledType()
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.handledType()
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handledType*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: >-
    Method for accessing type of values this deserializer produces. Note that this information is not guaranteed to be exact -- it may be a more generic (super-type) -- but it should not be incorrect (return a non-related type).


    Default implementation will return null, which means almost same same as returning `Object.class` would; that is, that nothing is known about handled type.
  syntax:
    content: public Class<?> handledType()
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: isDefaultDeserializer(JsonDeserializer<?> deserializer)
  nameWithType: StdDeserializer<T>.isDefaultDeserializer(JsonDeserializer<?> deserializer)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.isDefaultDeserializer(JsonDeserializer<?> deserializer)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Method that can be called to determine if given deserializer is the default deserializer Jackson uses; as opposed to a custom deserializer installed by a module or calling application. Determination is done using <xref uid="com.fasterxml.jackson.databind.annotation.JacksonStdImpl" data-throw-if-not-resolved="false">JacksonStdImpl</xref> annotation on deserializer class.
  syntax:
    content: protected boolean isDefaultDeserializer(JsonDeserializer<?> deserializer)
    parameters:
    - id: deserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer)
  id: isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: isDefaultKeyDeserializer(KeyDeserializer keyDeser)
  nameWithType: StdDeserializer<T>.isDefaultKeyDeserializer(KeyDeserializer keyDeser)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.isDefaultKeyDeserializer(KeyDeserializer keyDeser)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultKeyDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected boolean isDefaultKeyDeserializer(KeyDeserializer keyDeser)
    parameters:
    - id: keyDeser
      type: com.fasterxml.jackson.databind.KeyDeserializer
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.parseDouble(java.lang.String)
  id: parseDouble(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  langs:
  - java
  name: parseDouble(String numStr)
  nameWithType: StdDeserializer<T>.parseDouble(String numStr)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.parseDouble(String numStr)
  overload: com.fasterxml.jackson.databind.deser.std.StdDeserializer.parseDouble*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Helper method for encapsulating calls to low-level double value parsing; single place just because we need a work-around that must be applied to all calls.
  syntax:
    content: protected static final double parseDouble(String numStr)
    parameters:
    - id: numStr
      type: java.lang.String
    return:
      type: double
  exceptions:
  - type: java.lang.NumberFormatException
references:
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.StdDeserializer*
  name: StdDeserializer
  nameWithType: StdDeserializer<T>.StdDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.StdDeserializer
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer
    name: StdDeserializer
    fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handledType*
  name: handledType
  nameWithType: StdDeserializer<T>.handledType
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.handledType
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueClass*
  name: getValueClass
  nameWithType: StdDeserializer<T>.getValueClass
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.getValueClass
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType*
  name: getValueType
  nameWithType: StdDeserializer<T>.getValueType
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.getValueType
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: com.fasterxml.jackson.databind.JsonDeserializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer*
  name: isDefaultDeserializer
  nameWithType: StdDeserializer<T>.isDefaultDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.isDefaultDeserializer
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.KeyDeserializer
  name: KeyDeserializer
  nameWithType: KeyDeserializer
  fullName: com.fasterxml.jackson.databind.KeyDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultKeyDeserializer*
  name: isDefaultKeyDeserializer
  nameWithType: StdDeserializer<T>.isDefaultKeyDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.isDefaultKeyDeserializer
  package: com.fasterxml.jackson.databind.deser.std
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
  name: TypeDeserializer
  nameWithType: TypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.deserializeWithType*
  name: deserializeWithType
  nameWithType: StdDeserializer<T>.deserializeWithType
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.deserializeWithType
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive*
  name: _parseBooleanPrimitive
  nameWithType: StdDeserializer<T>._parseBooleanPrimitive
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseBooleanPrimitive
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanFromInt*
  name: _parseBooleanFromInt
  nameWithType: StdDeserializer<T>._parseBooleanFromInt
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseBooleanFromInt
  package: com.fasterxml.jackson.databind.deser.std
- uid: byte
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBytePrimitive*
  name: _parseBytePrimitive
  nameWithType: StdDeserializer<T>._parseBytePrimitive
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseBytePrimitive
  package: com.fasterxml.jackson.databind.deser.std
- uid: short
  spec.java:
  - uid: short
    name: short
    fullName: short
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseShortPrimitive*
  name: _parseShortPrimitive
  nameWithType: StdDeserializer<T>._parseShortPrimitive
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseShortPrimitive
  package: com.fasterxml.jackson.databind.deser.std
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive*
  name: _parseIntPrimitive
  nameWithType: StdDeserializer<T>._parseIntPrimitive
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseIntPrimitive
  package: com.fasterxml.jackson.databind.deser.std
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive*
  name: _parseLongPrimitive
  nameWithType: StdDeserializer<T>._parseLongPrimitive
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseLongPrimitive
  package: com.fasterxml.jackson.databind.deser.std
- uid: float
  spec.java:
  - uid: float
    name: float
    fullName: float
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive*
  name: _parseFloatPrimitive
  nameWithType: StdDeserializer<T>._parseFloatPrimitive
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseFloatPrimitive
  package: com.fasterxml.jackson.databind.deser.std
- uid: double
  spec.java:
  - uid: double
    name: double
    fullName: double
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive*
  name: _parseDoublePrimitive
  nameWithType: StdDeserializer<T>._parseDoublePrimitive
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseDoublePrimitive
  package: com.fasterxml.jackson.databind.deser.std
- uid: java.util.Date
  spec.java:
  - uid: java.util.Date
    name: Date
    fullName: java.util.Date
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate*
  name: _parseDate
  nameWithType: StdDeserializer<T>._parseDate
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseDate
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDateFromArray*
  name: _parseDateFromArray
  nameWithType: StdDeserializer<T>._parseDateFromArray
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseDateFromArray
  package: com.fasterxml.jackson.databind.deser.std
- uid: java.lang.NumberFormatException
  spec.java:
  - uid: java.lang.NumberFormatException
    name: NumberFormatException
    fullName: java.lang.NumberFormatException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.parseDouble*
  name: parseDouble
  nameWithType: StdDeserializer<T>.parseDouble
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.parseDouble
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseString*
  name: _parseString
  nameWithType: StdDeserializer<T>._parseString
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._parseString
  package: com.fasterxml.jackson.databind.deser.std
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromEmpty*
  name: _deserializeFromEmpty
  nameWithType: StdDeserializer<T>._deserializeFromEmpty
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._deserializeFromEmpty
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._hasTextualNull*
  name: _hasTextualNull
  nameWithType: StdDeserializer<T>._hasTextualNull
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._hasTextualNull
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isEmptyOrTextualNull*
  name: _isEmptyOrTextualNull
  nameWithType: StdDeserializer<T>._isEmptyOrTextualNull
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._isEmptyOrTextualNull
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNegInf*
  name: _isNegInf
  nameWithType: StdDeserializer<T>._isNegInf
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._isNegInf
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isPosInf*
  name: _isPosInf
  nameWithType: StdDeserializer<T>._isPosInf
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._isPosInf
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNaN*
  name: _isNaN
  nameWithType: StdDeserializer<T>._isNaN
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._isNaN
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromArray*
  name: _deserializeFromArray
  nameWithType: StdDeserializer<T>._deserializeFromArray
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._deserializeFromArray
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeWrappedValue*
  name: _deserializeWrappedValue
  nameWithType: StdDeserializer<T>._deserializeWrappedValue
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._deserializeWrappedValue
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._failDoubleToIntCoercion*
  name: _failDoubleToIntCoercion
  nameWithType: StdDeserializer<T>._failDoubleToIntCoercion
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._failDoubleToIntCoercion
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceIntegral*
  name: _coerceIntegral
  nameWithType: StdDeserializer<T>._coerceIntegral
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._coerceIntegral
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceNullToken*
  name: _coerceNullToken
  nameWithType: StdDeserializer<T>._coerceNullToken
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._coerceNullToken
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceTextualNull*
  name: _coerceTextualNull
  nameWithType: StdDeserializer<T>._coerceTextualNull
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._coerceTextualNull
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceEmptyString*
  name: _coerceEmptyString
  nameWithType: StdDeserializer<T>._coerceEmptyString
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._coerceEmptyString
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitive*
  name: _verifyNullForPrimitive
  nameWithType: StdDeserializer<T>._verifyNullForPrimitive
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._verifyNullForPrimitive
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitiveCoercion*
  name: _verifyNullForPrimitiveCoercion
  nameWithType: StdDeserializer<T>._verifyNullForPrimitiveCoercion
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._verifyNullForPrimitiveCoercion
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForScalarCoercion*
  name: _verifyNullForScalarCoercion
  nameWithType: StdDeserializer<T>._verifyNullForScalarCoercion
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._verifyNullForScalarCoercion
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyStringForScalarCoercion*
  name: _verifyStringForScalarCoercion
  nameWithType: StdDeserializer<T>._verifyStringForScalarCoercion
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._verifyStringForScalarCoercion
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNumberForScalarCoercion*
  name: _verifyNumberForScalarCoercion
  nameWithType: StdDeserializer<T>._verifyNumberForScalarCoercion
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._verifyNumberForScalarCoercion
  package: com.fasterxml.jackson.databind.deser.std
- uid: java.lang.Enum<?>
  spec.java:
  - uid: java.lang.Enum
    name: Enum
    fullName: java.lang.Enum
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce*
  name: _reportFailedNullCoerce
  nameWithType: StdDeserializer<T>._reportFailedNullCoerce
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._reportFailedNullCoerce
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coercedTypeDesc*
  name: _coercedTypeDesc
  nameWithType: StdDeserializer<T>._coercedTypeDesc
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._coercedTypeDesc
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.BeanProperty
  name: BeanProperty
  nameWithType: BeanProperty
  fullName: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findDeserializer*
  name: findDeserializer
  nameWithType: StdDeserializer<T>.findDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.findDeserializer
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isIntNumber*
  name: _isIntNumber
  nameWithType: StdDeserializer<T>._isIntNumber
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._isIntNumber
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer*
  name: findConvertingContentDeserializer
  nameWithType: StdDeserializer<T>.findConvertingContentDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.findConvertingContentDeserializer
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value
  name: JsonFormat.Value
  nameWithType: JsonFormat.Value
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides*
  name: findFormatOverrides
  nameWithType: StdDeserializer<T>.findFormatOverrides
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.findFormatOverrides
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.annotation.JsonFormat.Feature
  name: JsonFormat.Feature
  nameWithType: JsonFormat.Feature
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Feature
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature*
  name: findFormatFeature
  nameWithType: StdDeserializer<T>.findFormatFeature
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.findFormatFeature
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.SettableBeanProperty
  name: SettableBeanProperty
  nameWithType: SettableBeanProperty
  fullName: com.fasterxml.jackson.databind.deser.SettableBeanProperty
- uid: com.fasterxml.jackson.databind.PropertyMetadata
  name: PropertyMetadata
  nameWithType: PropertyMetadata
  fullName: com.fasterxml.jackson.databind.PropertyMetadata
- uid: com.fasterxml.jackson.databind.deser.NullValueProvider
  name: NullValueProvider
  nameWithType: NullValueProvider
  fullName: com.fasterxml.jackson.databind.deser.NullValueProvider
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findValueNullProvider*
  name: findValueNullProvider
  nameWithType: StdDeserializer<T>.findValueNullProvider
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.findValueNullProvider
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider*
  name: findContentNullProvider
  nameWithType: StdDeserializer<T>.findContentNullProvider
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.findContentNullProvider
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.annotation.Nulls
  name: Nulls
  nameWithType: Nulls
  fullName: com.fasterxml.jackson.annotation.Nulls
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullStyle*
  name: findContentNullStyle
  nameWithType: StdDeserializer<T>.findContentNullStyle
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.findContentNullStyle
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider*
  name: _findNullProvider
  nameWithType: StdDeserializer<T>._findNullProvider
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._findNullProvider
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty*
  name: handleUnknownProperty
  nameWithType: StdDeserializer<T>.handleUnknownProperty
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.handleUnknownProperty
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleMissingEndArrayForSingle*
  name: handleMissingEndArrayForSingle
  nameWithType: StdDeserializer<T>.handleMissingEndArrayForSingle
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>.handleMissingEndArrayForSingle
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyEndArrayForSingle*
  name: _verifyEndArrayForSingle
  nameWithType: StdDeserializer<T>._verifyEndArrayForSingle
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._verifyEndArrayForSingle
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._neitherNull*
  name: _neitherNull
  nameWithType: StdDeserializer<T>._neitherNull
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._neitherNull
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._byteOverflow*
  name: _byteOverflow
  nameWithType: StdDeserializer<T>._byteOverflow
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._byteOverflow
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._shortOverflow*
  name: _shortOverflow
  nameWithType: StdDeserializer<T>._shortOverflow
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._shortOverflow
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._intOverflow*
  name: _intOverflow
  nameWithType: StdDeserializer<T>._intOverflow
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._intOverflow
  package: com.fasterxml.jackson.databind.deser.std
- uid: java.lang.Number
  spec.java:
  - uid: java.lang.Number
    name: Number
    fullName: java.lang.Number
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._nonNullNumber*
  name: _nonNullNumber
  nameWithType: StdDeserializer<T>._nonNullNumber
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<T>._nonNullNumber
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.JsonDeserializer<T>
  name: JsonDeserializer<T>
  nameWithType: JsonDeserializer<T>
  fullName: com.fasterxml.jackson.databind.JsonDeserializer<T>
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: com.fasterxml.jackson.databind.JsonDeserializer.handledType()
  name: JsonDeserializer.handledType()
  nameWithType: JsonDeserializer.handledType()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.handledType()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: JsonDeserializer.deserialize(JsonParser,DeserializationContext)
  nameWithType: JsonDeserializer.deserialize(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getDelegatee()
  name: JsonDeserializer.getDelegatee()
  nameWithType: JsonDeserializer.getDelegatee()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getDelegatee()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getNullValue(com.fasterxml.jackson.databind.DeserializationContext)
  name: JsonDeserializer.getNullValue(DeserializationContext)
  nameWithType: JsonDeserializer.getNullValue(DeserializationContext)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getNullValue(com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: JsonDeserializer.replaceDelegatee(JsonDeserializer<?>)
  nameWithType: JsonDeserializer.replaceDelegatee(JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  name: JsonDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)
  nameWithType: JsonDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyAccessPattern()
  name: JsonDeserializer.getEmptyAccessPattern()
  nameWithType: JsonDeserializer.getEmptyAccessPattern()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyAccessPattern()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getNullValue()
  name: JsonDeserializer.getNullValue()
  nameWithType: JsonDeserializer.getNullValue()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getNullValue()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
  name: JsonDeserializer.unwrappingDeserializer(NameTransformer)
  nameWithType: JsonDeserializer.unwrappingDeserializer(NameTransformer)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getObjectIdReader()
  name: JsonDeserializer.getObjectIdReader()
  nameWithType: JsonDeserializer.getObjectIdReader()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getObjectIdReader()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue()
  name: JsonDeserializer.getEmptyValue()
  nameWithType: JsonDeserializer.getEmptyValue()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)
  name: JsonDeserializer.getEmptyValue(DeserializationContext)
  nameWithType: JsonDeserializer.getEmptyValue(DeserializationContext)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.isCachable()
  name: JsonDeserializer.isCachable()
  nameWithType: JsonDeserializer.isCachable()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.isCachable()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getKnownPropertyNames()
  name: JsonDeserializer.getKnownPropertyNames()
  nameWithType: JsonDeserializer.getKnownPropertyNames()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getKnownPropertyNames()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,T)
  name: JsonDeserializer.deserialize(JsonParser,DeserializationContext,T)
  nameWithType: JsonDeserializer.deserialize(JsonParser,DeserializationContext,T)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,T)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getNullAccessPattern()
  name: JsonDeserializer.getNullAccessPattern()
  nameWithType: JsonDeserializer.getNullAccessPattern()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getNullAccessPattern()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.findBackReference(java.lang.String)
  name: JsonDeserializer.findBackReference(String)
  nameWithType: JsonDeserializer.findBackReference(String)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.findBackReference(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
  name: JsonDeserializer.supportsUpdate(DeserializationConfig)
  nameWithType: JsonDeserializer.supportsUpdate(DeserializationConfig)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,T)
  name: JsonDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer,T)
  nameWithType: JsonDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer,T)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,T)
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer.replaceDelegatee(JsonDeserializer
  nameWithType: JsonDeserializer.replaceDelegatee(JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer
