### YamlMime:JavaMember
uid: "org.apache.hc.core5.http.impl.io.ChunkedInputStream.read*"
fullName: "org.apache.hc.core5.http.impl.io.ChunkedInputStream.read"
name: "read"
nameWithType: "ChunkedInputStream.read"
members:
- uid: "org.apache.hc.core5.http.impl.io.ChunkedInputStream.read()"
  fullName: "org.apache.hc.core5.http.impl.io.ChunkedInputStream.read()"
  name: "read()"
  nameWithType: "ChunkedInputStream.read()"
  summary: "Returns all the data in a chunked stream in coalesced form. A chunk is followed by a CRLF. The method returns -1 as soon as a chunksize of 0 is detected.\n\nTrailer headers are read automatically at the end of the stream and can be obtained with the getResponseFooters() method."
  overridden: "java.io.InputStream.read()"
  syntax: "public int read()"
  exceptions:
  - description: "in case of an I/O error"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "-1 of the end of the stream has been reached or the next data\n byte"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.core5.http.impl.io.ChunkedInputStream.read(byte[])"
  fullName: "org.apache.hc.core5.http.impl.io.ChunkedInputStream.read(byte[] b)"
  name: "read(byte[] b)"
  nameWithType: "ChunkedInputStream.read(byte[] b)"
  summary: "Read some bytes from the stream."
  overridden: "java.io.InputStream.read(byte[])"
  parameters:
  - description: "The byte array that will hold the contents from the stream."
    name: "b"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public int read(byte[] b)"
  exceptions:
  - description: "in case of an I/O error"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "The number of bytes returned or -1 if the end of stream has been\n reached."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.core5.http.impl.io.ChunkedInputStream.read(byte[],int,int)"
  fullName: "org.apache.hc.core5.http.impl.io.ChunkedInputStream.read(byte[] b, int off, int len)"
  name: "read(byte[] b, int off, int len)"
  nameWithType: "ChunkedInputStream.read(byte[] b, int off, int len)"
  summary: "Read some bytes from the stream."
  overridden: "java.io.InputStream.read(byte[],int,int)"
  parameters:
  - description: "The byte array that will hold the contents from the stream."
    name: "b"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "The offset into the byte array at which bytes will start to be\n placed."
    name: "off"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "the maximum number of bytes that can be returned."
    name: "len"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int read(byte[] b, int off, int len)"
  exceptions:
  - description: "in case of an I/O error"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "The number of bytes returned or -1 if the end of stream has been\n reached."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "org.apache.hc.core5.http.impl.io"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
