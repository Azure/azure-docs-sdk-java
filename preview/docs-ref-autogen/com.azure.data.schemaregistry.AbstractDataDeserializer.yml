### YamlMime:ManagedReference
items:
- uid: com.azure.data.schemaregistry.AbstractDataDeserializer
  id: AbstractDataDeserializer
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry
  children:
  - com.azure.data.schemaregistry.AbstractDataDeserializer.AbstractDataDeserializer()
  - com.azure.data.schemaregistry.AbstractDataDeserializer.AbstractDataDeserializer(com.azure.data.schemaregistry.client.SchemaRegistryClient)
  - com.azure.data.schemaregistry.AbstractDataDeserializer.deserialize(byte[])
  - com.azure.data.schemaregistry.AbstractDataDeserializer.loadByteDecoder(com.azure.data.schemaregistry.ByteDecoder)
  langs:
  - java
  name: AbstractDataDeserializer
  nameWithType: AbstractDataDeserializer
  fullName: com.azure.data.schemaregistry.AbstractDataDeserializer
  type: Class
  package: com.azure.data.schemaregistry
  summary: Common implementation for all registry-based deserializers.
  syntax:
    content: public abstract class AbstractDataDeserializer extends AbstractDataSerDe
  inheritance:
  - java.lang.Object
  - com.azure.data.schemaregistry.AbstractDataSerDe
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.data.schemaregistry.AbstractDataDeserializer.AbstractDataDeserializer()
  id: AbstractDataDeserializer()
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.AbstractDataDeserializer
  langs:
  - java
  name: AbstractDataDeserializer()
  nameWithType: AbstractDataDeserializer.AbstractDataDeserializer()
  fullName: com.azure.data.schemaregistry.AbstractDataDeserializer.AbstractDataDeserializer()
  overload: com.azure.data.schemaregistry.AbstractDataDeserializer.AbstractDataDeserializer*
  type: Constructor
  package: com.azure.data.schemaregistry
  summary: Special case constructor for Kafka deserializer's empty constructors.
  syntax:
    content: protected AbstractDataDeserializer()
- uid: com.azure.data.schemaregistry.AbstractDataDeserializer.AbstractDataDeserializer(com.azure.data.schemaregistry.client.SchemaRegistryClient)
  id: AbstractDataDeserializer(com.azure.data.schemaregistry.client.SchemaRegistryClient)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.AbstractDataDeserializer
  langs:
  - java
  name: AbstractDataDeserializer(SchemaRegistryClient schemaRegistryClient)
  nameWithType: AbstractDataDeserializer.AbstractDataDeserializer(SchemaRegistryClient schemaRegistryClient)
  fullName: com.azure.data.schemaregistry.AbstractDataDeserializer.AbstractDataDeserializer(SchemaRegistryClient schemaRegistryClient)
  overload: com.azure.data.schemaregistry.AbstractDataDeserializer.AbstractDataDeserializer*
  type: Constructor
  package: com.azure.data.schemaregistry
  summary: Constructor called by all concrete implementation constructors. Should only call parent constructor.
  syntax:
    content: protected AbstractDataDeserializer(SchemaRegistryClient schemaRegistryClient)
    parameters:
    - id: schemaRegistryClient
      type: com.azure.data.schemaregistry.client.SchemaRegistryClient
      description: client to be used for fetching schemas by ID
- uid: com.azure.data.schemaregistry.AbstractDataDeserializer.deserialize(byte[])
  id: deserialize(byte[])
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.AbstractDataDeserializer
  langs:
  - java
  name: deserialize(byte[] payload)
  nameWithType: AbstractDataDeserializer.deserialize(byte[] payload)
  fullName: com.azure.data.schemaregistry.AbstractDataDeserializer.deserialize(byte[] payload)
  overload: com.azure.data.schemaregistry.AbstractDataDeserializer.deserialize*
  type: Method
  package: com.azure.data.schemaregistry
  summary: Fetches schema referenced by prefixed ID and deserializes the subsequent payload into Java object.
  syntax:
    content: protected Object deserialize(byte[] payload)
    parameters:
    - id: payload
      type: byte[]
      description: byte payload, produced by an Azure Schema Registry client producer
    return:
      type: java.lang.Object
      description: object, deserialized with the prefixed schema
  exceptions:
  - type: com.azure.data.schemaregistry.SerializationException
    description: if deserialization of registry schema or message payload fails.
- uid: com.azure.data.schemaregistry.AbstractDataDeserializer.loadByteDecoder(com.azure.data.schemaregistry.ByteDecoder)
  id: loadByteDecoder(com.azure.data.schemaregistry.ByteDecoder)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.AbstractDataDeserializer
  langs:
  - java
  name: loadByteDecoder(ByteDecoder decoder)
  nameWithType: AbstractDataDeserializer.loadByteDecoder(ByteDecoder decoder)
  fullName: com.azure.data.schemaregistry.AbstractDataDeserializer.loadByteDecoder(ByteDecoder decoder)
  overload: com.azure.data.schemaregistry.AbstractDataDeserializer.loadByteDecoder*
  type: Method
  package: com.azure.data.schemaregistry
  summary: Loads a ByteDecoder to be used for decoding message payloads of specified schema type.
  syntax:
    content: protected void loadByteDecoder(ByteDecoder decoder)
    parameters:
    - id: decoder
      type: com.azure.data.schemaregistry.ByteDecoder
      description: ByteDecoder class instance to be loaded
references:
- uid: com.azure.data.schemaregistry.client.SchemaRegistryClient
  name: SchemaRegistryClient
  nameWithType: SchemaRegistryClient
  fullName: com.azure.data.schemaregistry.client.SchemaRegistryClient
- uid: com.azure.data.schemaregistry.AbstractDataDeserializer.AbstractDataDeserializer*
  name: AbstractDataDeserializer
  nameWithType: AbstractDataDeserializer.AbstractDataDeserializer
  fullName: com.azure.data.schemaregistry.AbstractDataDeserializer.AbstractDataDeserializer
  package: com.azure.data.schemaregistry
- uid: com.azure.data.schemaregistry.SerializationException
  name: SerializationException
  nameWithType: SerializationException
  fullName: com.azure.data.schemaregistry.SerializationException
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.data.schemaregistry.AbstractDataDeserializer.deserialize*
  name: deserialize
  nameWithType: AbstractDataDeserializer.deserialize
  fullName: com.azure.data.schemaregistry.AbstractDataDeserializer.deserialize
  package: com.azure.data.schemaregistry
- uid: com.azure.data.schemaregistry.ByteDecoder
  name: ByteDecoder
  nameWithType: ByteDecoder
  fullName: com.azure.data.schemaregistry.ByteDecoder
- uid: com.azure.data.schemaregistry.AbstractDataDeserializer.loadByteDecoder*
  name: loadByteDecoder
  nameWithType: AbstractDataDeserializer.loadByteDecoder
  fullName: com.azure.data.schemaregistry.AbstractDataDeserializer.loadByteDecoder
  package: com.azure.data.schemaregistry
- uid: com.azure.data.schemaregistry.AbstractDataSerDe
  name: AbstractDataSerDe
  nameWithType: AbstractDataSerDe
  fullName: com.azure.data.schemaregistry.AbstractDataSerDe
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
