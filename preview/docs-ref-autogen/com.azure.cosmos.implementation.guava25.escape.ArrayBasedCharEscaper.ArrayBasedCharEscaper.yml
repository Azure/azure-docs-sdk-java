### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.escape.ArrayBasedCharEscaper.ArrayBasedCharEscaper*"
fullName: "com.azure.cosmos.implementation.guava25.escape.ArrayBasedCharEscaper.ArrayBasedCharEscaper"
name: "ArrayBasedCharEscaper"
nameWithType: "ArrayBasedCharEscaper.ArrayBasedCharEscaper"
members:
- uid: "com.azure.cosmos.implementation.guava25.escape.ArrayBasedCharEscaper.ArrayBasedCharEscaper(com.azure.cosmos.implementation.guava25.escape.ArrayBasedEscaperMap,char,char)"
  fullName: "com.azure.cosmos.implementation.guava25.escape.ArrayBasedCharEscaper.ArrayBasedCharEscaper(ArrayBasedEscaperMap escaperMap, char safeMin, char safeMax)"
  name: "ArrayBasedCharEscaper(ArrayBasedEscaperMap escaperMap, char safeMin, char safeMax)"
  nameWithType: "ArrayBasedCharEscaper.ArrayBasedCharEscaper(ArrayBasedEscaperMap escaperMap, char safeMin, char safeMax)"
  summary: "Creates a new ArrayBasedCharEscaper instance with the given replacement map and specified safe range. If `safeMax < safeMin` then no characters are considered safe. This initializer is useful when explicit instances of ArrayBasedEscaperMap are used to allow the sharing of large replacement mappings.\n\nIf a character has no mapped replacement then it is checked against the safe range. If it lies outside that, then <xref uid=\"com.azure.cosmos.implementation.guava25.escape.ArrayBasedCharEscaper.escapeUnsafe*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#escapeUnsafe\"></xref> is called, otherwise no escaping is performed."
  parameters:
  - description: "the mapping of characters to be escaped"
    name: "escaperMap"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.escape.ArrayBasedEscaperMap?alt=com.azure.cosmos.implementation.guava25.escape.ArrayBasedEscaperMap&text=ArrayBasedEscaperMap\" data-throw-if-not-resolved=\"False\" />"
  - description: "the lowest character value in the safe range"
    name: "safeMin"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />"
  - description: "the highest character value in the safe range"
    name: "safeMax"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected ArrayBasedCharEscaper(ArrayBasedEscaperMap escaperMap, char safeMin, char safeMax)"
- uid: "com.azure.cosmos.implementation.guava25.escape.ArrayBasedCharEscaper.ArrayBasedCharEscaper(java.util.Map<java.lang.Character,java.lang.String>,char,char)"
  fullName: "com.azure.cosmos.implementation.guava25.escape.ArrayBasedCharEscaper.ArrayBasedCharEscaper(Map<Character,String> replacementMap, char safeMin, char safeMax)"
  name: "ArrayBasedCharEscaper(Map<Character,String> replacementMap, char safeMin, char safeMax)"
  nameWithType: "ArrayBasedCharEscaper.ArrayBasedCharEscaper(Map<Character,String> replacementMap, char safeMin, char safeMax)"
  summary: "Creates a new ArrayBasedCharEscaper instance with the given replacement map and specified safe range. If `safeMax < safeMin` then no characters are considered safe.\n\nIf a character has no mapped replacement then it is checked against the safe range. If it lies outside that, then <xref uid=\"com.azure.cosmos.implementation.guava25.escape.ArrayBasedCharEscaper.escapeUnsafe*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#escapeUnsafe\"></xref> is called, otherwise no escaping is performed."
  parameters:
  - description: "a map of characters to their escaped representations"
    name: "replacementMap"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Character?alt=java.lang.Character&text=Character\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the lowest character value in the safe range"
    name: "safeMin"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />"
  - description: "the highest character value in the safe range"
    name: "safeMax"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected ArrayBasedCharEscaper(Map<Character,String> replacementMap, char safeMin, char safeMax)"
type: "constructor"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.escape"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
