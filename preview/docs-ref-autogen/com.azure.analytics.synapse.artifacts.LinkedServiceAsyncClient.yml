### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient"
fullName: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient"
name: "LinkedServiceAsyncClient"
nameWithType: "LinkedServiceAsyncClient"
summary: "Initializes a new instance of the asynchronous Artifacts<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LinkedServiceAsyncClient"
methods:
- uid: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.createOrUpdateLinkedService(java.lang.String,com.azure.analytics.synapse.artifacts.models.LinkedServiceResource)"
  fullName: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.createOrUpdateLinkedService(String linkedServiceName, LinkedServiceResource linkedService)"
  name: "createOrUpdateLinkedService(String linkedServiceName, LinkedServiceResource linkedService)"
  nameWithType: "LinkedServiceAsyncClient.createOrUpdateLinkedService(String linkedServiceName, LinkedServiceResource linkedService)"
  summary: "Creates or updates a linked service."
  parameters:
  - description: "The linked service name."
    name: "linkedServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Linked service resource definition."
    name: "linkedService"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.LinkedServiceResource?alt=com.azure.analytics.synapse.artifacts.models.LinkedServiceResource&text=LinkedServiceResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<LinkedServiceResource> createOrUpdateLinkedService(String linkedServiceName, LinkedServiceResource linkedService)"
  desc: "Creates or updates a linked service."
  returns:
    description: "linked service resource type on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.LinkedServiceResource?alt=com.azure.analytics.synapse.artifacts.models.LinkedServiceResource&text=LinkedServiceResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.createOrUpdateLinkedService(java.lang.String,com.azure.analytics.synapse.artifacts.models.LinkedServiceResource,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.createOrUpdateLinkedService(String linkedServiceName, LinkedServiceResource linkedService, String ifMatch)"
  name: "createOrUpdateLinkedService(String linkedServiceName, LinkedServiceResource linkedService, String ifMatch)"
  nameWithType: "LinkedServiceAsyncClient.createOrUpdateLinkedService(String linkedServiceName, LinkedServiceResource linkedService, String ifMatch)"
  summary: "Creates or updates a linked service."
  parameters:
  - description: "The linked service name."
    name: "linkedServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Linked service resource definition."
    name: "linkedService"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.LinkedServiceResource?alt=com.azure.analytics.synapse.artifacts.models.LinkedServiceResource&text=LinkedServiceResource\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the linkedService entity. Should only be specified for update, for which it should match\n     existing entity or can be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<LinkedServiceResource> createOrUpdateLinkedService(String linkedServiceName, LinkedServiceResource linkedService, String ifMatch)"
  desc: "Creates or updates a linked service."
  returns:
    description: "linked service resource type on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.LinkedServiceResource?alt=com.azure.analytics.synapse.artifacts.models.LinkedServiceResource&text=LinkedServiceResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.createOrUpdateLinkedServiceWithResponse(java.lang.String,com.azure.analytics.synapse.artifacts.models.LinkedServiceResource,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.createOrUpdateLinkedServiceWithResponse(String linkedServiceName, LinkedServiceResource linkedService, String ifMatch)"
  name: "createOrUpdateLinkedServiceWithResponse(String linkedServiceName, LinkedServiceResource linkedService, String ifMatch)"
  nameWithType: "LinkedServiceAsyncClient.createOrUpdateLinkedServiceWithResponse(String linkedServiceName, LinkedServiceResource linkedService, String ifMatch)"
  summary: "Creates or updates a linked service."
  parameters:
  - description: "The linked service name."
    name: "linkedServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Linked service resource definition."
    name: "linkedService"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.LinkedServiceResource?alt=com.azure.analytics.synapse.artifacts.models.LinkedServiceResource&text=LinkedServiceResource\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the linkedService entity. Should only be specified for update, for which it should match\n     existing entity or can be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<LinkedServiceResource>> createOrUpdateLinkedServiceWithResponse(String linkedServiceName, LinkedServiceResource linkedService, String ifMatch)"
  desc: "Creates or updates a linked service."
  returns:
    description: "linked service resource type along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.LinkedServiceResource?alt=com.azure.analytics.synapse.artifacts.models.LinkedServiceResource&text=LinkedServiceResource\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.deleteLinkedService(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.deleteLinkedService(String linkedServiceName)"
  name: "deleteLinkedService(String linkedServiceName)"
  nameWithType: "LinkedServiceAsyncClient.deleteLinkedService(String linkedServiceName)"
  summary: "Deletes a linked service."
  parameters:
  - description: "The linked service name."
    name: "linkedServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> deleteLinkedService(String linkedServiceName)"
  desc: "Deletes a linked service."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.deleteLinkedServiceWithResponse(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.deleteLinkedServiceWithResponse(String linkedServiceName)"
  name: "deleteLinkedServiceWithResponse(String linkedServiceName)"
  nameWithType: "LinkedServiceAsyncClient.deleteLinkedServiceWithResponse(String linkedServiceName)"
  summary: "Deletes a linked service."
  parameters:
  - description: "The linked service name."
    name: "linkedServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> deleteLinkedServiceWithResponse(String linkedServiceName)"
  desc: "Deletes a linked service."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.getLinkedService(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.getLinkedService(String linkedServiceName)"
  name: "getLinkedService(String linkedServiceName)"
  nameWithType: "LinkedServiceAsyncClient.getLinkedService(String linkedServiceName)"
  summary: "Gets a linked service."
  parameters:
  - description: "The linked service name."
    name: "linkedServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<LinkedServiceResource> getLinkedService(String linkedServiceName)"
  desc: "Gets a linked service."
  returns:
    description: "a linked service on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.LinkedServiceResource?alt=com.azure.analytics.synapse.artifacts.models.LinkedServiceResource&text=LinkedServiceResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.getLinkedService(java.lang.String,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.getLinkedService(String linkedServiceName, String ifNoneMatch)"
  name: "getLinkedService(String linkedServiceName, String ifNoneMatch)"
  nameWithType: "LinkedServiceAsyncClient.getLinkedService(String linkedServiceName, String ifNoneMatch)"
  summary: "Gets a linked service."
  parameters:
  - description: "The linked service name."
    name: "linkedServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the linked service entity. Should only be specified for get. If the ETag matches the\n     existing entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<LinkedServiceResource> getLinkedService(String linkedServiceName, String ifNoneMatch)"
  desc: "Gets a linked service."
  returns:
    description: "a linked service on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.LinkedServiceResource?alt=com.azure.analytics.synapse.artifacts.models.LinkedServiceResource&text=LinkedServiceResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.getLinkedServiceWithResponse(java.lang.String,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.getLinkedServiceWithResponse(String linkedServiceName, String ifNoneMatch)"
  name: "getLinkedServiceWithResponse(String linkedServiceName, String ifNoneMatch)"
  nameWithType: "LinkedServiceAsyncClient.getLinkedServiceWithResponse(String linkedServiceName, String ifNoneMatch)"
  summary: "Gets a linked service."
  parameters:
  - description: "The linked service name."
    name: "linkedServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the linked service entity. Should only be specified for get. If the ETag matches the\n     existing entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<LinkedServiceResource>> getLinkedServiceWithResponse(String linkedServiceName, String ifNoneMatch)"
  desc: "Gets a linked service."
  returns:
    description: "a linked service along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.LinkedServiceResource?alt=com.azure.analytics.synapse.artifacts.models.LinkedServiceResource&text=LinkedServiceResource\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.getLinkedServicesByWorkspace()"
  fullName: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.getLinkedServicesByWorkspace()"
  name: "getLinkedServicesByWorkspace()"
  nameWithType: "LinkedServiceAsyncClient.getLinkedServicesByWorkspace()"
  summary: "Lists linked services."
  syntax: "public PagedFlux<LinkedServiceResource> getLinkedServicesByWorkspace()"
  desc: "Lists linked services."
  returns:
    description: "a list of linked service resources as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.LinkedServiceResource?alt=com.azure.analytics.synapse.artifacts.models.LinkedServiceResource&text=LinkedServiceResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.renameLinkedService(java.lang.String,com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest)"
  fullName: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.renameLinkedService(String linkedServiceName, ArtifactRenameRequest request)"
  name: "renameLinkedService(String linkedServiceName, ArtifactRenameRequest request)"
  nameWithType: "LinkedServiceAsyncClient.renameLinkedService(String linkedServiceName, ArtifactRenameRequest request)"
  summary: "Renames a linked service."
  parameters:
  - description: "The linked service name."
    name: "linkedServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "proposed new name."
    name: "request"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest?alt=com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest&text=ArtifactRenameRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> renameLinkedService(String linkedServiceName, ArtifactRenameRequest request)"
  desc: "Renames a linked service."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.renameLinkedServiceWithResponse(java.lang.String,com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest)"
  fullName: "com.azure.analytics.synapse.artifacts.LinkedServiceAsyncClient.renameLinkedServiceWithResponse(String linkedServiceName, ArtifactRenameRequest request)"
  name: "renameLinkedServiceWithResponse(String linkedServiceName, ArtifactRenameRequest request)"
  nameWithType: "LinkedServiceAsyncClient.renameLinkedServiceWithResponse(String linkedServiceName, ArtifactRenameRequest request)"
  summary: "Renames a linked service."
  parameters:
  - description: "The linked service name."
    name: "linkedServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "proposed new name."
    name: "request"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest?alt=com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest&text=ArtifactRenameRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> renameLinkedServiceWithResponse(String linkedServiceName, ArtifactRenameRequest request)"
  desc: "Renames a linked service."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous ArtifactsClient type."
metadata: {}
package: "com.azure.analytics.synapse.artifacts"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
