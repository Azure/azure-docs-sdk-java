### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.escape.CharEscaper.escapeSlow*"
fullName: "com.azure.cosmos.implementation.guava25.escape.CharEscaper.escapeSlow"
name: "escapeSlow"
nameWithType: "CharEscaper.escapeSlow"
members:
- uid: "com.azure.cosmos.implementation.guava25.escape.CharEscaper.escapeSlow(java.lang.String,int)"
  fullName: "com.azure.cosmos.implementation.guava25.escape.CharEscaper.escapeSlow(String s, int index)"
  name: "escapeSlow(String s, int index)"
  nameWithType: "CharEscaper.escapeSlow(String s, int index)"
  summary: "Returns the escaped form of a given literal string, starting at the given index. This method is called by the <xref uid=\"com.azure.cosmos.implementation.guava25.escape.CharEscaper.escape(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#escape(String)\"></xref> method when it discovers that escaping is required. It is protected to allow subclasses to override the fastpath escaping function to inline their escaping test. See <xref uid=\"com.azure.cosmos.implementation.guava25.escape.CharEscaperBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CharEscaperBuilder\"></xref> for an example usage."
  parameters:
  - description: "the literal string to be escaped"
    name: "s"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the index to start escaping from"
    name: "index"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final String escapeSlow(String s, int index)"
  returns:
    description: "the escaped form of <code>string</code>"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.escape"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
