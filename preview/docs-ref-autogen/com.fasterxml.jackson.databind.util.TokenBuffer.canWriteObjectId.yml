### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.util.TokenBuffer.canWriteObjectId*"
fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.canWriteObjectId"
name: "canWriteObjectId"
nameWithType: "TokenBuffer.canWriteObjectId"
members:
- uid: "com.fasterxml.jackson.databind.util.TokenBuffer.canWriteObjectId()"
  fullName: "com.fasterxml.jackson.databind.util.TokenBuffer.canWriteObjectId()"
  name: "canWriteObjectId()"
  nameWithType: "TokenBuffer.canWriteObjectId()"
  summary: "Introspection method that may be called to see if the underlying data format supports some kind of Object Ids natively (many do not; for example, JSON doesn't). This method **must** be called prior to calling <xref uid=\"com.fasterxml.jackson.databind.util.TokenBuffer.writeObjectId*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeObjectId\"></xref> or <xref uid=\"com.fasterxml.jackson.databind.util.TokenBuffer.writeObjectRef\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeObjectRef\"></xref>.\n\nDefault implementation returns false; overridden by data formats that do support native Object Ids. Caller is expected to either use a non-native notation (explicit property or such), or fail, in case it can not use native object ids."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.canWriteObjectId()"
  syntax: "public boolean canWriteObjectId()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.util"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
