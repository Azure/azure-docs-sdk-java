### YamlMime:JavaMember
uid: "com.azure.resourcemanager.logz.fluent.MonitorsClient.listMonitoredResources*"
fullName: "com.azure.resourcemanager.logz.fluent.MonitorsClient.listMonitoredResources"
name: "listMonitoredResources"
nameWithType: "MonitorsClient.listMonitoredResources"
members:
- uid: "com.azure.resourcemanager.logz.fluent.MonitorsClient.listMonitoredResources(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.logz.fluent.MonitorsClient.listMonitoredResources(String resourceGroupName, String monitorName)"
  name: "listMonitoredResources(String resourceGroupName, String monitorName)"
  nameWithType: "MonitorsClient.listMonitoredResources(String resourceGroupName, String monitorName)"
  summary: "List the resources currently being monitored by the Logz monitor resource."
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MonitoredResourceInner> listMonitoredResources(String resourceGroupName, String monitorName)"
  returns:
    description: "response of a list operation."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.logz.fluent.models.MonitoredResourceInner?alt=com.azure.resourcemanager.logz.fluent.models.MonitoredResourceInner&text=MonitoredResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.logz.fluent.MonitorsClient.listMonitoredResources(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.logz.fluent.MonitorsClient.listMonitoredResources(String resourceGroupName, String monitorName, Context context)"
  name: "listMonitoredResources(String resourceGroupName, String monitorName, Context context)"
  nameWithType: "MonitorsClient.listMonitoredResources(String resourceGroupName, String monitorName, Context context)"
  summary: "List the resources currently being monitored by the Logz monitor resource."
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MonitoredResourceInner> listMonitoredResources(String resourceGroupName, String monitorName, Context context)"
  returns:
    description: "response of a list operation."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.logz.fluent.models.MonitoredResourceInner?alt=com.azure.resourcemanager.logz.fluent.models.MonitoredResourceInner&text=MonitoredResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.logz.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-logz:1.0.0-beta.1
