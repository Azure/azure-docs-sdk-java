### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap"
fullName: "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap<K,V>"
name: "AbstractHashedMap<K,V>"
nameWithType: "AbstractHashedMap<K,V>"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.util.AbstractMap\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "java.util.AbstractMap.clear()"
- "java.util.AbstractMap.clone()"
- "java.util.AbstractMap.containsKey(java.lang.Object)"
- "java.util.AbstractMap.containsValue(java.lang.Object)"
- "java.util.AbstractMap.entrySet()"
- "java.util.AbstractMap.equals(java.lang.Object)"
- "java.util.AbstractMap.get(java.lang.Object)"
- "java.util.AbstractMap.hashCode()"
- "java.util.AbstractMap.isEmpty()"
- "java.util.AbstractMap.keySet()"
- "java.util.AbstractMap.put(K,V)"
- "java.util.AbstractMap.putAll(java.util.Map<? extends K,? extends V>)"
- "java.util.AbstractMap.remove(java.lang.Object)"
- "java.util.AbstractMap.size()"
- "java.util.AbstractMap.toString()"
- "java.util.AbstractMap.values()"
syntax: "public class AbstractHashedMap<K,V> extends AbstractMap<K,V> implements IterableMap<K,V>"
constructors:
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.AbstractHashedMap()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.AbstractHashedMap(int)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.AbstractHashedMap(int,float)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.AbstractHashedMap(int,float,int)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.AbstractHashedMap(java.util.Map<? extends K,? extends V>)"
fields:
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.DEFAULT_CAPACITY"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.DEFAULT_LOAD_FACTOR"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.DEFAULT_THRESHOLD"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.GETKEY_INVALID"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.GETVALUE_INVALID"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.MAXIMUM_CAPACITY"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.NO_NEXT_ENTRY"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.NO_PREVIOUS_ENTRY"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.NULL"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.REMOVE_INVALID"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.SETVALUE_INVALID"
methods:
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.addEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.addMapping(int,int,K,V)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.calculateNewCapacity(int)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.calculateThreshold(int,float)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.checkCapacity()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.clear()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.clone()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.containsKey(java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.containsValue(java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.convertKey(java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,K,V)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createEntrySetIterator()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createKeySetIterator()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createValuesIterator()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.destroyEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.doReadObject(java.io.ObjectInputStream)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.doWriteObject(java.io.ObjectOutputStream)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.ensureCapacity(int)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryHashCode(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryKey(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryNext(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entrySet()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryValue(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.equals(java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.get(java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.getEntry(java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.hash(java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.hashCode()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.hashIndex(int,int)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.init()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.isEmpty()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.isEqualKey(java.lang.Object,java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.isEqualValue(java.lang.Object,java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.keySet()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.mapIterator()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.put(K,V)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.putAll(java.util.Map<? extends K,? extends V>)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.remove(java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.removeEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.removeMapping(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.reuseEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,int,K,V)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.size()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.toString()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.updateEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,V)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.values()"
type: "class"
typeParameters:
- name: "K"
- name: "V"
implements:
- "<xref href=\"com.azure.cosmos.implementation.apachecommons.collections.IterableMap?alt=com.azure.cosmos.implementation.apachecommons.collections.IterableMap&text=IterableMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.cosmos.implementation.apachecommons.collections.map"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
