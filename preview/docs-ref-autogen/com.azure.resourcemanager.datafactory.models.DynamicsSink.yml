### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.DynamicsSink"
fullName: "com.azure.resourcemanager.datafactory.models.DynamicsSink"
name: "DynamicsSink"
nameWithType: "DynamicsSink"
summary: "A copy activity Dynamics sink."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.CopySink?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.CopySink.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.CopySink.disableMetricsCollection()"
- "com.azure.resourcemanager.datafactory.models.CopySink.maxConcurrentConnections()"
- "com.azure.resourcemanager.datafactory.models.CopySink.sinkRetryCount()"
- "com.azure.resourcemanager.datafactory.models.CopySink.sinkRetryWait()"
- "com.azure.resourcemanager.datafactory.models.CopySink.validate()"
- "com.azure.resourcemanager.datafactory.models.CopySink.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withDisableMetricsCollection(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withMaxConcurrentConnections(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withSinkRetryCount(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withSinkRetryWait(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withWriteBatchSize(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withWriteBatchTimeout(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.writeBatchSize()"
- "com.azure.resourcemanager.datafactory.models.CopySink.writeBatchTimeout()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DynamicsSink extends CopySink"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.DynamicsSink.DynamicsSink()"
  fullName: "com.azure.resourcemanager.datafactory.models.DynamicsSink.DynamicsSink()"
  name: "DynamicsSink()"
  nameWithType: "DynamicsSink.DynamicsSink()"
  syntax: "public DynamicsSink()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.DynamicsSink.alternateKeyName()"
  fullName: "com.azure.resourcemanager.datafactory.models.DynamicsSink.alternateKeyName()"
  name: "alternateKeyName()"
  nameWithType: "DynamicsSink.alternateKeyName()"
  summary: "Get the alternate<wbr>Key<wbr>Name property: The logical name of the alternate key which will be used when upserting records."
  syntax: "public Object alternateKeyName()"
  desc: "Get the alternateKeyName property: The logical name of the alternate key which will be used when upserting records. Type: string (or Expression with resultType string)."
  returns:
    description: "the alternateKeyName value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DynamicsSink.ignoreNullValues()"
  fullName: "com.azure.resourcemanager.datafactory.models.DynamicsSink.ignoreNullValues()"
  name: "ignoreNullValues()"
  nameWithType: "DynamicsSink.ignoreNullValues()"
  summary: "Get the ignore<wbr>Null<wbr>Values property: The flag indicating whether ignore null values from input dataset (except key fields) during write operation."
  syntax: "public Object ignoreNullValues()"
  desc: "Get the ignoreNullValues property: The flag indicating whether ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean)."
  returns:
    description: "the ignoreNullValues value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DynamicsSink.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.DynamicsSink.validate()"
  name: "validate()"
  nameWithType: "DynamicsSink.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withAlternateKeyName(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withAlternateKeyName(Object alternateKeyName)"
  name: "withAlternateKeyName(Object alternateKeyName)"
  nameWithType: "DynamicsSink.withAlternateKeyName(Object alternateKeyName)"
  summary: "Set the alternate<wbr>Key<wbr>Name property: The logical name of the alternate key which will be used when upserting records."
  parameters:
  - description: "the alternateKeyName value to set."
    name: "alternateKeyName"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicsSink withAlternateKeyName(Object alternateKeyName)"
  desc: "Set the alternateKeyName property: The logical name of the alternate key which will be used when upserting records. Type: string (or Expression with resultType string)."
  returns:
    description: "the DynamicsSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DynamicsSink?alt=com.azure.resourcemanager.datafactory.models.DynamicsSink&text=DynamicsSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withDisableMetricsCollection(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withDisableMetricsCollection(Object disableMetricsCollection)"
  name: "withDisableMetricsCollection(Object disableMetricsCollection)"
  nameWithType: "DynamicsSink.withDisableMetricsCollection(Object disableMetricsCollection)"
  summary: "Set the disable<wbr>Metrics<wbr>Collection property: If true, disable data store metrics collection."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withDisableMetricsCollection(java.lang.Object)"
  parameters:
  - name: "disableMetricsCollection"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicsSink withDisableMetricsCollection(Object disableMetricsCollection)"
  desc: "Set the disableMetricsCollection property: If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DynamicsSink?alt=com.azure.resourcemanager.datafactory.models.DynamicsSink&text=DynamicsSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withIgnoreNullValues(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withIgnoreNullValues(Object ignoreNullValues)"
  name: "withIgnoreNullValues(Object ignoreNullValues)"
  nameWithType: "DynamicsSink.withIgnoreNullValues(Object ignoreNullValues)"
  summary: "Set the ignore<wbr>Null<wbr>Values property: The flag indicating whether ignore null values from input dataset (except key fields) during write operation."
  parameters:
  - description: "the ignoreNullValues value to set."
    name: "ignoreNullValues"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicsSink withIgnoreNullValues(Object ignoreNullValues)"
  desc: "Set the ignoreNullValues property: The flag indicating whether ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean)."
  returns:
    description: "the DynamicsSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DynamicsSink?alt=com.azure.resourcemanager.datafactory.models.DynamicsSink&text=DynamicsSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withMaxConcurrentConnections(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withMaxConcurrentConnections(Object maxConcurrentConnections)"
  name: "withMaxConcurrentConnections(Object maxConcurrentConnections)"
  nameWithType: "DynamicsSink.withMaxConcurrentConnections(Object maxConcurrentConnections)"
  summary: "Set the max<wbr>Concurrent<wbr>Connections property: The maximum concurrent connection count for the sink data store."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withMaxConcurrentConnections(java.lang.Object)"
  parameters:
  - name: "maxConcurrentConnections"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicsSink withMaxConcurrentConnections(Object maxConcurrentConnections)"
  desc: "Set the maxConcurrentConnections property: The maximum concurrent connection count for the sink data store. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DynamicsSink?alt=com.azure.resourcemanager.datafactory.models.DynamicsSink&text=DynamicsSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withSinkRetryCount(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withSinkRetryCount(Object sinkRetryCount)"
  name: "withSinkRetryCount(Object sinkRetryCount)"
  nameWithType: "DynamicsSink.withSinkRetryCount(Object sinkRetryCount)"
  summary: "Set the sink<wbr>Retry<wbr>Count property: Sink retry count."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withSinkRetryCount(java.lang.Object)"
  parameters:
  - name: "sinkRetryCount"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicsSink withSinkRetryCount(Object sinkRetryCount)"
  desc: "Set the sinkRetryCount property: Sink retry count. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DynamicsSink?alt=com.azure.resourcemanager.datafactory.models.DynamicsSink&text=DynamicsSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withSinkRetryWait(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withSinkRetryWait(Object sinkRetryWait)"
  name: "withSinkRetryWait(Object sinkRetryWait)"
  nameWithType: "DynamicsSink.withSinkRetryWait(Object sinkRetryWait)"
  summary: "Set the sink<wbr>Retry<wbr>Wait property: Sink retry wait."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withSinkRetryWait(java.lang.Object)"
  parameters:
  - name: "sinkRetryWait"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicsSink withSinkRetryWait(Object sinkRetryWait)"
  desc: "Set the sinkRetryWait property: Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\\\\d+)\\\\.)?(\\\\d\\\\d):(60|(\\[0-5\\]\\[0-9\\])):(60|(\\[0-5\\]\\[0-9\\]))."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DynamicsSink?alt=com.azure.resourcemanager.datafactory.models.DynamicsSink&text=DynamicsSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withWriteBatchSize(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withWriteBatchSize(Object writeBatchSize)"
  name: "withWriteBatchSize(Object writeBatchSize)"
  nameWithType: "DynamicsSink.withWriteBatchSize(Object writeBatchSize)"
  summary: "Set the write<wbr>Batch<wbr>Size property: Write batch size."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withWriteBatchSize(java.lang.Object)"
  parameters:
  - name: "writeBatchSize"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicsSink withWriteBatchSize(Object writeBatchSize)"
  desc: "Set the writeBatchSize property: Write batch size. Type: integer (or Expression with resultType integer), minimum: 0."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DynamicsSink?alt=com.azure.resourcemanager.datafactory.models.DynamicsSink&text=DynamicsSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withWriteBatchTimeout(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withWriteBatchTimeout(Object writeBatchTimeout)"
  name: "withWriteBatchTimeout(Object writeBatchTimeout)"
  nameWithType: "DynamicsSink.withWriteBatchTimeout(Object writeBatchTimeout)"
  summary: "Set the write<wbr>Batch<wbr>Timeout property: Write batch timeout."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withWriteBatchTimeout(java.lang.Object)"
  parameters:
  - name: "writeBatchTimeout"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicsSink withWriteBatchTimeout(Object writeBatchTimeout)"
  desc: "Set the writeBatchTimeout property: Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\\\\d+)\\\\.)?(\\\\d\\\\d):(60|(\\[0-5\\]\\[0-9\\])):(60|(\\[0-5\\]\\[0-9\\]))."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DynamicsSink?alt=com.azure.resourcemanager.datafactory.models.DynamicsSink&text=DynamicsSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withWriteBehavior(com.azure.resourcemanager.datafactory.models.DynamicsSinkWriteBehavior)"
  fullName: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withWriteBehavior(DynamicsSinkWriteBehavior writeBehavior)"
  name: "withWriteBehavior(DynamicsSinkWriteBehavior writeBehavior)"
  nameWithType: "DynamicsSink.withWriteBehavior(DynamicsSinkWriteBehavior writeBehavior)"
  summary: "Set the write<wbr>Behavior property: The write behavior for the operation."
  parameters:
  - description: "the writeBehavior value to set."
    name: "writeBehavior"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DynamicsSinkWriteBehavior?alt=com.azure.resourcemanager.datafactory.models.DynamicsSinkWriteBehavior&text=DynamicsSinkWriteBehavior\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicsSink withWriteBehavior(DynamicsSinkWriteBehavior writeBehavior)"
  desc: "Set the writeBehavior property: The write behavior for the operation."
  returns:
    description: "the DynamicsSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DynamicsSink?alt=com.azure.resourcemanager.datafactory.models.DynamicsSink&text=DynamicsSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DynamicsSink.writeBehavior()"
  fullName: "com.azure.resourcemanager.datafactory.models.DynamicsSink.writeBehavior()"
  name: "writeBehavior()"
  nameWithType: "DynamicsSink.writeBehavior()"
  summary: "Get the write<wbr>Behavior property: The write behavior for the operation."
  syntax: "public DynamicsSinkWriteBehavior writeBehavior()"
  desc: "Get the writeBehavior property: The write behavior for the operation."
  returns:
    description: "the writeBehavior value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DynamicsSinkWriteBehavior?alt=com.azure.resourcemanager.datafactory.models.DynamicsSinkWriteBehavior&text=DynamicsSinkWriteBehavior\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A copy activity Dynamics sink."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
