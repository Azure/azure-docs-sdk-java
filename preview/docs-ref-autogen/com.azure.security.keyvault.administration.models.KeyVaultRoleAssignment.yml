### YamlMime:ManagedReference
items:
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
  id: KeyVaultRoleAssignment
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.1
  parent: com.azure.security.keyvault.administration.models
  children:
  - com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.KeyVaultRoleAssignment(java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentProperties,com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentScope)
  - com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getId()
  - com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getName()
  - com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getProperties()
  - com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getScope()
  - com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getType()
  langs:
  - java
  name: KeyVaultRoleAssignment
  nameWithType: KeyVaultRoleAssignment
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
  type: Class
  package: com.azure.security.keyvault.administration.models
  summary: A class that defines a role assignment.
  syntax:
    content: public final class KeyVaultRoleAssignment
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.KeyVaultRoleAssignment(java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentProperties,com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentScope)
  id: KeyVaultRoleAssignment(java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentProperties,com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentScope)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.1
  parent: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
  langs:
  - java
  name: KeyVaultRoleAssignment(String id, String name, String type, KeyVaultRoleAssignmentProperties properties, KeyVaultRoleAssignmentScope roleScope)
  nameWithType: KeyVaultRoleAssignment.KeyVaultRoleAssignment(String id, String name, String type, KeyVaultRoleAssignmentProperties properties, KeyVaultRoleAssignmentScope roleScope)
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.KeyVaultRoleAssignment(String id, String name, String type, KeyVaultRoleAssignmentProperties properties, KeyVaultRoleAssignmentScope roleScope)
  overload: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.KeyVaultRoleAssignment*
  type: Constructor
  package: com.azure.security.keyvault.administration.models
  summary: Creates a new <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignment</xref> with the specified details.
  syntax:
    content: public KeyVaultRoleAssignment(String id, String name, String type, KeyVaultRoleAssignmentProperties properties, KeyVaultRoleAssignmentScope roleScope)
    parameters:
    - id: id
      type: java.lang.String
      description: The ID for this <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignment</xref>.
    - id: name
      type: java.lang.String
      description: The name of this <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignment</xref>.
    - id: type
      type: java.lang.String
      description: The type of this <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignment</xref>.
    - id: properties
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentProperties
      description: <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentProperties" data-throw-if-not-resolved="false">properties</xref> of this <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignment</xref>.
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentScope
      description: >-
        The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentScope" data-throw-if-not-resolved="false">scope</xref> of this <xref uid="KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role
         assignment</xref>.
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getId()
  id: getId()
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.1
  parent: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
  langs:
  - java
  name: getId()
  nameWithType: KeyVaultRoleAssignment.getId()
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getId()
  overload: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getId*
  type: Method
  package: com.azure.security.keyvault.administration.models
  summary: Get the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignment</xref> ID.
  syntax:
    content: public String getId()
    return:
      type: java.lang.String
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignment</xref> ID.
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getName()
  id: getName()
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.1
  parent: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
  langs:
  - java
  name: getName()
  nameWithType: KeyVaultRoleAssignment.getName()
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getName()
  overload: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getName*
  type: Method
  package: com.azure.security.keyvault.administration.models
  summary: Get the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignment</xref> name.
  syntax:
    content: public String getName()
    return:
      type: java.lang.String
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignment</xref> name.
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getProperties()
  id: getProperties()
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.1
  parent: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
  langs:
  - java
  name: getProperties()
  nameWithType: KeyVaultRoleAssignment.getProperties()
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getProperties()
  overload: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getProperties*
  type: Method
  package: com.azure.security.keyvault.administration.models
  summary: Get the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignment</xref> <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentProperties" data-throw-if-not-resolved="false">properties</xref>.
  syntax:
    content: public KeyVaultRoleAssignmentProperties getProperties()
    return:
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentProperties
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignment</xref> <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentProperties" data-throw-if-not-resolved="false">properties</xref>.
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getScope()
  id: getScope()
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.1
  parent: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
  langs:
  - java
  name: getScope()
  nameWithType: KeyVaultRoleAssignment.getScope()
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getScope()
  overload: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getScope*
  type: Method
  package: com.azure.security.keyvault.administration.models
  summary: Get the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignment</xref> <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentScope" data-throw-if-not-resolved="false">scope</xref>.
  syntax:
    content: public KeyVaultRoleAssignmentScope getScope()
    return:
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignment</xref> <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentScope" data-throw-if-not-resolved="false">scope</xref>.
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getType()
  id: getType()
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.1
  parent: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
  langs:
  - java
  name: getType()
  nameWithType: KeyVaultRoleAssignment.getType()
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getType()
  overload: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getType*
  type: Method
  package: com.azure.security.keyvault.administration.models
  summary: Get the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignment</xref> type.
  syntax:
    content: public String getType()
    return:
      type: java.lang.String
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignment</xref> type.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentProperties
  name: KeyVaultRoleAssignmentProperties
  nameWithType: KeyVaultRoleAssignmentProperties
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentProperties
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentScope
  name: KeyVaultRoleAssignmentScope
  nameWithType: KeyVaultRoleAssignmentScope
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignmentScope
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.KeyVaultRoleAssignment*
  name: KeyVaultRoleAssignment
  nameWithType: KeyVaultRoleAssignment.KeyVaultRoleAssignment
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.KeyVaultRoleAssignment
  package: com.azure.security.keyvault.administration.models
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getId*
  name: getId
  nameWithType: KeyVaultRoleAssignment.getId
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getId
  package: com.azure.security.keyvault.administration.models
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getName*
  name: getName
  nameWithType: KeyVaultRoleAssignment.getName
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getName
  package: com.azure.security.keyvault.administration.models
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getType*
  name: getType
  nameWithType: KeyVaultRoleAssignment.getType
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getType
  package: com.azure.security.keyvault.administration.models
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getProperties*
  name: getProperties
  nameWithType: KeyVaultRoleAssignment.getProperties
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getProperties
  package: com.azure.security.keyvault.administration.models
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getScope*
  name: getScope
  nameWithType: KeyVaultRoleAssignment.getScope
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment.getScope
  package: com.azure.security.keyvault.administration.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
