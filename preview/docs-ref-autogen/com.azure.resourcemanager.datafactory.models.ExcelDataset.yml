### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset"
fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset"
name: "ExcelDataset"
nameWithType: "ExcelDataset"
summary: "Excel dataset."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.Dataset?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.Dataset.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.Dataset.annotations()"
- "com.azure.resourcemanager.datafactory.models.Dataset.description()"
- "com.azure.resourcemanager.datafactory.models.Dataset.folder()"
- "com.azure.resourcemanager.datafactory.models.Dataset.linkedServiceName()"
- "com.azure.resourcemanager.datafactory.models.Dataset.parameters()"
- "com.azure.resourcemanager.datafactory.models.Dataset.schema()"
- "com.azure.resourcemanager.datafactory.models.Dataset.structure()"
- "com.azure.resourcemanager.datafactory.models.Dataset.validate()"
- "com.azure.resourcemanager.datafactory.models.Dataset.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.Dataset.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.Dataset.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.Dataset.withFolder(com.azure.resourcemanager.datafactory.models.DatasetFolder)"
- "com.azure.resourcemanager.datafactory.models.Dataset.withLinkedServiceName(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
- "com.azure.resourcemanager.datafactory.models.Dataset.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
- "com.azure.resourcemanager.datafactory.models.Dataset.withSchema(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.Dataset.withStructure(java.lang.Object)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ExcelDataset extends Dataset"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.ExcelDataset()"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.ExcelDataset()"
  name: "ExcelDataset()"
  nameWithType: "ExcelDataset.ExcelDataset()"
  syntax: "public ExcelDataset()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.compression()"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.compression()"
  name: "compression()"
  nameWithType: "ExcelDataset.compression()"
  summary: "Get the compression property: The data compression method used for the json dataset."
  syntax: "public DatasetCompression compression()"
  desc: "Get the compression property: The data compression method used for the json dataset."
  returns:
    description: "the compression value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DatasetCompression?alt=com.azure.resourcemanager.datafactory.models.DatasetCompression&text=DatasetCompression\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.firstRowAsHeader()"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.firstRowAsHeader()"
  name: "firstRowAsHeader()"
  nameWithType: "ExcelDataset.firstRowAsHeader()"
  summary: "Get the first<wbr>Row<wbr>AsHeader property: When used as input, treat the first row of data as headers."
  syntax: "public Object firstRowAsHeader()"
  desc: "Get the firstRowAsHeader property: When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean)."
  returns:
    description: "the firstRowAsHeader value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.location()"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.location()"
  name: "location()"
  nameWithType: "ExcelDataset.location()"
  summary: "Get the location property: The location of the excel storage."
  syntax: "public DatasetLocation location()"
  desc: "Get the location property: The location of the excel storage."
  returns:
    description: "the location value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DatasetLocation?alt=com.azure.resourcemanager.datafactory.models.DatasetLocation&text=DatasetLocation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.nullValue()"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.nullValue()"
  name: "nullValue()"
  nameWithType: "ExcelDataset.nullValue()"
  summary: "Get the null<wbr>Value property: The null value string."
  syntax: "public Object nullValue()"
  desc: "Get the nullValue property: The null value string. Type: string (or Expression with resultType string)."
  returns:
    description: "the nullValue value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.range()"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.range()"
  name: "range()"
  nameWithType: "ExcelDataset.range()"
  summary: "Get the range property: The partial data of one sheet."
  syntax: "public Object range()"
  desc: "Get the range property: The partial data of one sheet. Type: string (or Expression with resultType string)."
  returns:
    description: "the range value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.sheetIndex()"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.sheetIndex()"
  name: "sheetIndex()"
  nameWithType: "ExcelDataset.sheetIndex()"
  summary: "Get the sheet<wbr>Index property: The sheet index of excel file and default value is 0."
  syntax: "public Object sheetIndex()"
  desc: "Get the sheetIndex property: The sheet index of excel file and default value is 0. Type: integer (or Expression with resultType integer)."
  returns:
    description: "the sheetIndex value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.sheetName()"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.sheetName()"
  name: "sheetName()"
  nameWithType: "ExcelDataset.sheetName()"
  summary: "Get the sheet<wbr>Name property: The sheet name of excel file."
  syntax: "public Object sheetName()"
  desc: "Get the sheetName property: The sheet name of excel file. Type: string (or Expression with resultType string)."
  returns:
    description: "the sheetName value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.validate()"
  name: "validate()"
  nameWithType: "ExcelDataset.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.Dataset.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "ExcelDataset.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the Dataset."
  overridden: "com.azure.resourcemanager.datafactory.models.Dataset.withAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ExcelDataset withAnnotations(List<Object> annotations)"
  desc: "Set the annotations property: List of tags that can be used for describing the Dataset."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ExcelDataset?alt=com.azure.resourcemanager.datafactory.models.ExcelDataset&text=ExcelDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withCompression(com.azure.resourcemanager.datafactory.models.DatasetCompression)"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withCompression(DatasetCompression compression)"
  name: "withCompression(DatasetCompression compression)"
  nameWithType: "ExcelDataset.withCompression(DatasetCompression compression)"
  summary: "Set the compression property: The data compression method used for the json dataset."
  parameters:
  - description: "the compression value to set."
    name: "compression"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DatasetCompression?alt=com.azure.resourcemanager.datafactory.models.DatasetCompression&text=DatasetCompression\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExcelDataset withCompression(DatasetCompression compression)"
  desc: "Set the compression property: The data compression method used for the json dataset."
  returns:
    description: "the ExcelDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ExcelDataset?alt=com.azure.resourcemanager.datafactory.models.ExcelDataset&text=ExcelDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "ExcelDataset.withDescription(String description)"
  summary: "Set the description property: Dataset description."
  overridden: "com.azure.resourcemanager.datafactory.models.Dataset.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExcelDataset withDescription(String description)"
  desc: "Set the description property: Dataset description."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ExcelDataset?alt=com.azure.resourcemanager.datafactory.models.ExcelDataset&text=ExcelDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withFirstRowAsHeader(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withFirstRowAsHeader(Object firstRowAsHeader)"
  name: "withFirstRowAsHeader(Object firstRowAsHeader)"
  nameWithType: "ExcelDataset.withFirstRowAsHeader(Object firstRowAsHeader)"
  summary: "Set the first<wbr>Row<wbr>AsHeader property: When used as input, treat the first row of data as headers."
  parameters:
  - description: "the firstRowAsHeader value to set."
    name: "firstRowAsHeader"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExcelDataset withFirstRowAsHeader(Object firstRowAsHeader)"
  desc: "Set the firstRowAsHeader property: When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean)."
  returns:
    description: "the ExcelDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ExcelDataset?alt=com.azure.resourcemanager.datafactory.models.ExcelDataset&text=ExcelDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withFolder(com.azure.resourcemanager.datafactory.models.DatasetFolder)"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withFolder(DatasetFolder folder)"
  name: "withFolder(DatasetFolder folder)"
  nameWithType: "ExcelDataset.withFolder(DatasetFolder folder)"
  summary: "Set the folder property: The folder that this Dataset is in."
  overridden: "com.azure.resourcemanager.datafactory.models.Dataset.withFolder(com.azure.resourcemanager.datafactory.models.DatasetFolder)"
  parameters:
  - name: "folder"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DatasetFolder?alt=com.azure.resourcemanager.datafactory.models.DatasetFolder&text=DatasetFolder\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExcelDataset withFolder(DatasetFolder folder)"
  desc: "Set the folder property: The folder that this Dataset is in. If not specified, Dataset will appear at the root level."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ExcelDataset?alt=com.azure.resourcemanager.datafactory.models.ExcelDataset&text=ExcelDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withLinkedServiceName(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withLinkedServiceName(LinkedServiceReference linkedServiceName)"
  name: "withLinkedServiceName(LinkedServiceReference linkedServiceName)"
  nameWithType: "ExcelDataset.withLinkedServiceName(LinkedServiceReference linkedServiceName)"
  summary: "Set the linked<wbr>Service<wbr>Name property: Linked service reference."
  overridden: "com.azure.resourcemanager.datafactory.models.Dataset.withLinkedServiceName(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
  parameters:
  - name: "linkedServiceName"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedServiceReference?alt=com.azure.resourcemanager.datafactory.models.LinkedServiceReference&text=LinkedServiceReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExcelDataset withLinkedServiceName(LinkedServiceReference linkedServiceName)"
  desc: "Set the linkedServiceName property: Linked service reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ExcelDataset?alt=com.azure.resourcemanager.datafactory.models.ExcelDataset&text=ExcelDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withLocation(com.azure.resourcemanager.datafactory.models.DatasetLocation)"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withLocation(DatasetLocation location)"
  name: "withLocation(DatasetLocation location)"
  nameWithType: "ExcelDataset.withLocation(DatasetLocation location)"
  summary: "Set the location property: The location of the excel storage."
  parameters:
  - description: "the location value to set."
    name: "location"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DatasetLocation?alt=com.azure.resourcemanager.datafactory.models.DatasetLocation&text=DatasetLocation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExcelDataset withLocation(DatasetLocation location)"
  desc: "Set the location property: The location of the excel storage."
  returns:
    description: "the ExcelDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ExcelDataset?alt=com.azure.resourcemanager.datafactory.models.ExcelDataset&text=ExcelDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withNullValue(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withNullValue(Object nullValue)"
  name: "withNullValue(Object nullValue)"
  nameWithType: "ExcelDataset.withNullValue(Object nullValue)"
  summary: "Set the null<wbr>Value property: The null value string."
  parameters:
  - description: "the nullValue value to set."
    name: "nullValue"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExcelDataset withNullValue(Object nullValue)"
  desc: "Set the nullValue property: The null value string. Type: string (or Expression with resultType string)."
  returns:
    description: "the ExcelDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ExcelDataset?alt=com.azure.resourcemanager.datafactory.models.ExcelDataset&text=ExcelDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withParameters(Map<String,ParameterSpecification> parameters)"
  name: "withParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "ExcelDataset.withParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: Parameters for dataset."
  overridden: "com.azure.resourcemanager.datafactory.models.Dataset.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ExcelDataset withParameters(Map<String,ParameterSpecification> parameters)"
  desc: "Set the parameters property: Parameters for dataset."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ExcelDataset?alt=com.azure.resourcemanager.datafactory.models.ExcelDataset&text=ExcelDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withRange(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withRange(Object range)"
  name: "withRange(Object range)"
  nameWithType: "ExcelDataset.withRange(Object range)"
  summary: "Set the range property: The partial data of one sheet."
  parameters:
  - description: "the range value to set."
    name: "range"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExcelDataset withRange(Object range)"
  desc: "Set the range property: The partial data of one sheet. Type: string (or Expression with resultType string)."
  returns:
    description: "the ExcelDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ExcelDataset?alt=com.azure.resourcemanager.datafactory.models.ExcelDataset&text=ExcelDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withSchema(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withSchema(Object schema)"
  name: "withSchema(Object schema)"
  nameWithType: "ExcelDataset.withSchema(Object schema)"
  summary: "Set the schema property: Columns that define the physical type schema of the dataset."
  overridden: "com.azure.resourcemanager.datafactory.models.Dataset.withSchema(java.lang.Object)"
  parameters:
  - name: "schema"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExcelDataset withSchema(Object schema)"
  desc: "Set the schema property: Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ExcelDataset?alt=com.azure.resourcemanager.datafactory.models.ExcelDataset&text=ExcelDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withSheetIndex(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withSheetIndex(Object sheetIndex)"
  name: "withSheetIndex(Object sheetIndex)"
  nameWithType: "ExcelDataset.withSheetIndex(Object sheetIndex)"
  summary: "Set the sheet<wbr>Index property: The sheet index of excel file and default value is 0."
  parameters:
  - description: "the sheetIndex value to set."
    name: "sheetIndex"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExcelDataset withSheetIndex(Object sheetIndex)"
  desc: "Set the sheetIndex property: The sheet index of excel file and default value is 0. Type: integer (or Expression with resultType integer)."
  returns:
    description: "the ExcelDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ExcelDataset?alt=com.azure.resourcemanager.datafactory.models.ExcelDataset&text=ExcelDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withSheetName(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withSheetName(Object sheetName)"
  name: "withSheetName(Object sheetName)"
  nameWithType: "ExcelDataset.withSheetName(Object sheetName)"
  summary: "Set the sheet<wbr>Name property: The sheet name of excel file."
  parameters:
  - description: "the sheetName value to set."
    name: "sheetName"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExcelDataset withSheetName(Object sheetName)"
  desc: "Set the sheetName property: The sheet name of excel file. Type: string (or Expression with resultType string)."
  returns:
    description: "the ExcelDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ExcelDataset?alt=com.azure.resourcemanager.datafactory.models.ExcelDataset&text=ExcelDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withStructure(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.ExcelDataset.withStructure(Object structure)"
  name: "withStructure(Object structure)"
  nameWithType: "ExcelDataset.withStructure(Object structure)"
  summary: "Set the structure property: Columns that define the structure of the dataset."
  overridden: "com.azure.resourcemanager.datafactory.models.Dataset.withStructure(java.lang.Object)"
  parameters:
  - name: "structure"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExcelDataset withStructure(Object structure)"
  desc: "Set the structure property: Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ExcelDataset?alt=com.azure.resourcemanager.datafactory.models.ExcelDataset&text=ExcelDataset\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Excel dataset."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
