### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties"
name: "HttpLinkedServiceTypeProperties"
nameWithType: "HttpLinkedServiceTypeProperties"
summary: "Properties specific to this linked service type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class HttpLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.HttpLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.HttpLinkedServiceTypeProperties()"
  name: "HttpLinkedServiceTypeProperties()"
  nameWithType: "HttpLinkedServiceTypeProperties.HttpLinkedServiceTypeProperties()"
  syntax: "public HttpLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.authHeaders()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.authHeaders()"
  name: "authHeaders()"
  nameWithType: "HttpLinkedServiceTypeProperties.authHeaders()"
  summary: "Get the auth<wbr>Headers property: The additional HTTP headers in the request to RESTful API used for authorization."
  syntax: "public Object authHeaders()"
  desc: "Get the authHeaders property: The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object)."
  returns:
    description: "the authHeaders value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.authenticationType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.authenticationType()"
  name: "authenticationType()"
  nameWithType: "HttpLinkedServiceTypeProperties.authenticationType()"
  summary: "Get the authentication<wbr>Type property: The authentication type to be used to connect to the HTTP server."
  syntax: "public HttpAuthenticationType authenticationType()"
  desc: "Get the authenticationType property: The authentication type to be used to connect to the HTTP server."
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HttpAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.HttpAuthenticationType&text=HttpAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.certThumbprint()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.certThumbprint()"
  name: "certThumbprint()"
  nameWithType: "HttpLinkedServiceTypeProperties.certThumbprint()"
  summary: "Get the cert<wbr>Thumbprint property: Thumbprint of certificate for Client<wbr>Certificate authentication."
  syntax: "public Object certThumbprint()"
  desc: "Get the certThumbprint property: Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string)."
  returns:
    description: "the certThumbprint value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.embeddedCertData()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.embeddedCertData()"
  name: "embeddedCertData()"
  nameWithType: "HttpLinkedServiceTypeProperties.embeddedCertData()"
  summary: "Get the embedded<wbr>Cert<wbr>Data property: Base64 encoded certificate data for Client<wbr>Certificate authentication."
  syntax: "public Object embeddedCertData()"
  desc: "Get the embeddedCertData property: Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string)."
  returns:
    description: "the embeddedCertData value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.enableServerCertificateValidation()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.enableServerCertificateValidation()"
  name: "enableServerCertificateValidation()"
  nameWithType: "HttpLinkedServiceTypeProperties.enableServerCertificateValidation()"
  summary: "Get the enable<wbr>Server<wbr>Certificate<wbr>Validation property: If true, validate the HTTPS server SSL certificate."
  syntax: "public Object enableServerCertificateValidation()"
  desc: "Get the enableServerCertificateValidation property: If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean)."
  returns:
    description: "the enableServerCertificateValidation value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "HttpLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public Object encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.password()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.password()"
  name: "password()"
  nameWithType: "HttpLinkedServiceTypeProperties.password()"
  summary: "Get the password property: Password for Basic, Digest, Windows, or Client<wbr>Certificate with Embedded<wbr>Cert<wbr>Data authentication."
  syntax: "public SecretBase password()"
  desc: "Get the password property: Password for Basic, Digest, Windows, or ClientCertificate with EmbeddedCertData authentication."
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.url()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.url()"
  name: "url()"
  nameWithType: "HttpLinkedServiceTypeProperties.url()"
  summary: "Get the url property: The base URL of the HTTP endpoint, e.<wbr>g."
  syntax: "public Object url()"
  desc: "Get the url property: The base URL of the HTTP endpoint, e.g. http://www.microsoft.com. Type: string (or Expression with resultType string)."
  returns:
    description: "the url value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.username()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.username()"
  name: "username()"
  nameWithType: "HttpLinkedServiceTypeProperties.username()"
  summary: "Get the username property: User name for Basic, Digest, or Windows authentication."
  syntax: "public Object username()"
  desc: "Get the username property: User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string)."
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "HttpLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withAuthHeaders(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withAuthHeaders(Object authHeaders)"
  name: "withAuthHeaders(Object authHeaders)"
  nameWithType: "HttpLinkedServiceTypeProperties.withAuthHeaders(Object authHeaders)"
  summary: "Set the auth<wbr>Headers property: The additional HTTP headers in the request to RESTful API used for authorization."
  parameters:
  - description: "the authHeaders value to set."
    name: "authHeaders"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpLinkedServiceTypeProperties withAuthHeaders(Object authHeaders)"
  desc: "Set the authHeaders property: The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object)."
  returns:
    description: "the HttpLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties&text=HttpLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withAuthenticationType(com.azure.resourcemanager.datafactory.models.HttpAuthenticationType)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withAuthenticationType(HttpAuthenticationType authenticationType)"
  name: "withAuthenticationType(HttpAuthenticationType authenticationType)"
  nameWithType: "HttpLinkedServiceTypeProperties.withAuthenticationType(HttpAuthenticationType authenticationType)"
  summary: "Set the authentication<wbr>Type property: The authentication type to be used to connect to the HTTP server."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HttpAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.HttpAuthenticationType&text=HttpAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpLinkedServiceTypeProperties withAuthenticationType(HttpAuthenticationType authenticationType)"
  desc: "Set the authenticationType property: The authentication type to be used to connect to the HTTP server."
  returns:
    description: "the HttpLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties&text=HttpLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withCertThumbprint(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withCertThumbprint(Object certThumbprint)"
  name: "withCertThumbprint(Object certThumbprint)"
  nameWithType: "HttpLinkedServiceTypeProperties.withCertThumbprint(Object certThumbprint)"
  summary: "Set the cert<wbr>Thumbprint property: Thumbprint of certificate for Client<wbr>Certificate authentication."
  parameters:
  - description: "the certThumbprint value to set."
    name: "certThumbprint"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpLinkedServiceTypeProperties withCertThumbprint(Object certThumbprint)"
  desc: "Set the certThumbprint property: Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string)."
  returns:
    description: "the HttpLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties&text=HttpLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withEmbeddedCertData(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withEmbeddedCertData(Object embeddedCertData)"
  name: "withEmbeddedCertData(Object embeddedCertData)"
  nameWithType: "HttpLinkedServiceTypeProperties.withEmbeddedCertData(Object embeddedCertData)"
  summary: "Set the embedded<wbr>Cert<wbr>Data property: Base64 encoded certificate data for Client<wbr>Certificate authentication."
  parameters:
  - description: "the embeddedCertData value to set."
    name: "embeddedCertData"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpLinkedServiceTypeProperties withEmbeddedCertData(Object embeddedCertData)"
  desc: "Set the embeddedCertData property: Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string)."
  returns:
    description: "the HttpLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties&text=HttpLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withEnableServerCertificateValidation(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withEnableServerCertificateValidation(Object enableServerCertificateValidation)"
  name: "withEnableServerCertificateValidation(Object enableServerCertificateValidation)"
  nameWithType: "HttpLinkedServiceTypeProperties.withEnableServerCertificateValidation(Object enableServerCertificateValidation)"
  summary: "Set the enable<wbr>Server<wbr>Certificate<wbr>Validation property: If true, validate the HTTPS server SSL certificate."
  parameters:
  - description: "the enableServerCertificateValidation value to set."
    name: "enableServerCertificateValidation"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpLinkedServiceTypeProperties withEnableServerCertificateValidation(Object enableServerCertificateValidation)"
  desc: "Set the enableServerCertificateValidation property: If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean)."
  returns:
    description: "the HttpLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties&text=HttpLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "HttpLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the HttpLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties&text=HttpLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "HttpLinkedServiceTypeProperties.withPassword(SecretBase password)"
  summary: "Set the password property: Password for Basic, Digest, Windows, or Client<wbr>Certificate with Embedded<wbr>Cert<wbr>Data authentication."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpLinkedServiceTypeProperties withPassword(SecretBase password)"
  desc: "Set the password property: Password for Basic, Digest, Windows, or ClientCertificate with EmbeddedCertData authentication."
  returns:
    description: "the HttpLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties&text=HttpLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withUrl(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withUrl(Object url)"
  name: "withUrl(Object url)"
  nameWithType: "HttpLinkedServiceTypeProperties.withUrl(Object url)"
  summary: "Set the url property: The base URL of the HTTP endpoint, e.<wbr>g."
  parameters:
  - description: "the url value to set."
    name: "url"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpLinkedServiceTypeProperties withUrl(Object url)"
  desc: "Set the url property: The base URL of the HTTP endpoint, e.g. http://www.microsoft.com. Type: string (or Expression with resultType string)."
  returns:
    description: "the HttpLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties&text=HttpLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "HttpLinkedServiceTypeProperties.withUsername(Object username)"
  summary: "Set the username property: User name for Basic, Digest, or Windows authentication."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpLinkedServiceTypeProperties withUsername(Object username)"
  desc: "Set the username property: User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string)."
  returns:
    description: "the HttpLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.HttpLinkedServiceTypeProperties&text=HttpLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Properties specific to this linked service type."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
