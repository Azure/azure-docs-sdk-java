### YamlMime:JavaType
uid: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset"
fullName: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset"
name: "ReportConfigDataset"
nameWithType: "ReportConfigDataset"
summary: "The definition of data present in the report."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ReportConfigDataset"
constructors:
- uid: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.ReportConfigDataset()"
  fullName: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.ReportConfigDataset()"
  name: "ReportConfigDataset()"
  nameWithType: "ReportConfigDataset.ReportConfigDataset()"
  syntax: "public ReportConfigDataset()"
methods:
- uid: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.aggregation()"
  fullName: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.aggregation()"
  name: "aggregation()"
  nameWithType: "ReportConfigDataset.aggregation()"
  summary: "Get the aggregation property: Dictionary of aggregation expression to use in the report."
  syntax: "public Map<String,ReportConfigAggregation> aggregation()"
  desc: "Get the aggregation property: Dictionary of aggregation expression to use in the report. The key of each item in the dictionary is the alias for the aggregated column. Report can have up to 2 aggregation clauses."
  returns:
    description: "the aggregation value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportConfigAggregation?alt=com.azure.resourcemanager.costmanagement.models.ReportConfigAggregation&text=ReportConfigAggregation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.configuration()"
  fullName: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.configuration()"
  name: "configuration()"
  nameWithType: "ReportConfigDataset.configuration()"
  summary: "Get the configuration property: Has configuration information for the data in the report."
  syntax: "public ReportConfigDatasetConfiguration configuration()"
  desc: "Get the configuration property: Has configuration information for the data in the report. The configuration will be ignored if aggregation and grouping are provided."
  returns:
    description: "the configuration value."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportConfigDatasetConfiguration?alt=com.azure.resourcemanager.costmanagement.models.ReportConfigDatasetConfiguration&text=ReportConfigDatasetConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.filter()"
  fullName: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.filter()"
  name: "filter()"
  nameWithType: "ReportConfigDataset.filter()"
  summary: "Get the filter property: Has filter expression to use in the report."
  syntax: "public ReportConfigFilter filter()"
  desc: "Get the filter property: Has filter expression to use in the report."
  returns:
    description: "the filter value."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportConfigFilter?alt=com.azure.resourcemanager.costmanagement.models.ReportConfigFilter&text=ReportConfigFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.granularity()"
  fullName: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.granularity()"
  name: "granularity()"
  nameWithType: "ReportConfigDataset.granularity()"
  summary: "Get the granularity property: The granularity of rows in the report."
  syntax: "public ReportGranularityType granularity()"
  desc: "Get the granularity property: The granularity of rows in the report."
  returns:
    description: "the granularity value."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportGranularityType?alt=com.azure.resourcemanager.costmanagement.models.ReportGranularityType&text=ReportGranularityType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.grouping()"
  fullName: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.grouping()"
  name: "grouping()"
  nameWithType: "ReportConfigDataset.grouping()"
  summary: "Get the grouping property: Array of group by expression to use in the report."
  syntax: "public List<ReportConfigGrouping> grouping()"
  desc: "Get the grouping property: Array of group by expression to use in the report. Report can have up to 2 group by clauses."
  returns:
    description: "the grouping value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportConfigGrouping?alt=com.azure.resourcemanager.costmanagement.models.ReportConfigGrouping&text=ReportConfigGrouping\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.sorting()"
  fullName: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.sorting()"
  name: "sorting()"
  nameWithType: "ReportConfigDataset.sorting()"
  summary: "Get the sorting property: Array of order by expression to use in the report."
  syntax: "public List<ReportConfigSorting> sorting()"
  desc: "Get the sorting property: Array of order by expression to use in the report."
  returns:
    description: "the sorting value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportConfigSorting?alt=com.azure.resourcemanager.costmanagement.models.ReportConfigSorting&text=ReportConfigSorting\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.validate()"
  fullName: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.validate()"
  name: "validate()"
  nameWithType: "ReportConfigDataset.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.withAggregation(java.util.Map<java.lang.String,com.azure.resourcemanager.costmanagement.models.ReportConfigAggregation>)"
  fullName: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.withAggregation(Map<String,ReportConfigAggregation> aggregation)"
  name: "withAggregation(Map<String,ReportConfigAggregation> aggregation)"
  nameWithType: "ReportConfigDataset.withAggregation(Map<String,ReportConfigAggregation> aggregation)"
  summary: "Set the aggregation property: Dictionary of aggregation expression to use in the report."
  parameters:
  - description: "the aggregation value to set."
    name: "aggregation"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportConfigAggregation?alt=com.azure.resourcemanager.costmanagement.models.ReportConfigAggregation&text=ReportConfigAggregation\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ReportConfigDataset withAggregation(Map<String,ReportConfigAggregation> aggregation)"
  desc: "Set the aggregation property: Dictionary of aggregation expression to use in the report. The key of each item in the dictionary is the alias for the aggregated column. Report can have up to 2 aggregation clauses."
  returns:
    description: "the ReportConfigDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportConfigDataset?alt=com.azure.resourcemanager.costmanagement.models.ReportConfigDataset&text=ReportConfigDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.withConfiguration(com.azure.resourcemanager.costmanagement.models.ReportConfigDatasetConfiguration)"
  fullName: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.withConfiguration(ReportConfigDatasetConfiguration configuration)"
  name: "withConfiguration(ReportConfigDatasetConfiguration configuration)"
  nameWithType: "ReportConfigDataset.withConfiguration(ReportConfigDatasetConfiguration configuration)"
  summary: "Set the configuration property: Has configuration information for the data in the report."
  parameters:
  - description: "the configuration value to set."
    name: "configuration"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportConfigDatasetConfiguration?alt=com.azure.resourcemanager.costmanagement.models.ReportConfigDatasetConfiguration&text=ReportConfigDatasetConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReportConfigDataset withConfiguration(ReportConfigDatasetConfiguration configuration)"
  desc: "Set the configuration property: Has configuration information for the data in the report. The configuration will be ignored if aggregation and grouping are provided."
  returns:
    description: "the ReportConfigDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportConfigDataset?alt=com.azure.resourcemanager.costmanagement.models.ReportConfigDataset&text=ReportConfigDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.withFilter(com.azure.resourcemanager.costmanagement.models.ReportConfigFilter)"
  fullName: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.withFilter(ReportConfigFilter filter)"
  name: "withFilter(ReportConfigFilter filter)"
  nameWithType: "ReportConfigDataset.withFilter(ReportConfigFilter filter)"
  summary: "Set the filter property: Has filter expression to use in the report."
  parameters:
  - description: "the filter value to set."
    name: "filter"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportConfigFilter?alt=com.azure.resourcemanager.costmanagement.models.ReportConfigFilter&text=ReportConfigFilter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReportConfigDataset withFilter(ReportConfigFilter filter)"
  desc: "Set the filter property: Has filter expression to use in the report."
  returns:
    description: "the ReportConfigDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportConfigDataset?alt=com.azure.resourcemanager.costmanagement.models.ReportConfigDataset&text=ReportConfigDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.withGranularity(com.azure.resourcemanager.costmanagement.models.ReportGranularityType)"
  fullName: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.withGranularity(ReportGranularityType granularity)"
  name: "withGranularity(ReportGranularityType granularity)"
  nameWithType: "ReportConfigDataset.withGranularity(ReportGranularityType granularity)"
  summary: "Set the granularity property: The granularity of rows in the report."
  parameters:
  - description: "the granularity value to set."
    name: "granularity"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportGranularityType?alt=com.azure.resourcemanager.costmanagement.models.ReportGranularityType&text=ReportGranularityType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReportConfigDataset withGranularity(ReportGranularityType granularity)"
  desc: "Set the granularity property: The granularity of rows in the report."
  returns:
    description: "the ReportConfigDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportConfigDataset?alt=com.azure.resourcemanager.costmanagement.models.ReportConfigDataset&text=ReportConfigDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.withGrouping(java.util.List<com.azure.resourcemanager.costmanagement.models.ReportConfigGrouping>)"
  fullName: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.withGrouping(List<ReportConfigGrouping> grouping)"
  name: "withGrouping(List<ReportConfigGrouping> grouping)"
  nameWithType: "ReportConfigDataset.withGrouping(List<ReportConfigGrouping> grouping)"
  summary: "Set the grouping property: Array of group by expression to use in the report."
  parameters:
  - description: "the grouping value to set."
    name: "grouping"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportConfigGrouping?alt=com.azure.resourcemanager.costmanagement.models.ReportConfigGrouping&text=ReportConfigGrouping\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ReportConfigDataset withGrouping(List<ReportConfigGrouping> grouping)"
  desc: "Set the grouping property: Array of group by expression to use in the report. Report can have up to 2 group by clauses."
  returns:
    description: "the ReportConfigDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportConfigDataset?alt=com.azure.resourcemanager.costmanagement.models.ReportConfigDataset&text=ReportConfigDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.withSorting(java.util.List<com.azure.resourcemanager.costmanagement.models.ReportConfigSorting>)"
  fullName: "com.azure.resourcemanager.costmanagement.models.ReportConfigDataset.withSorting(List<ReportConfigSorting> sorting)"
  name: "withSorting(List<ReportConfigSorting> sorting)"
  nameWithType: "ReportConfigDataset.withSorting(List<ReportConfigSorting> sorting)"
  summary: "Set the sorting property: Array of order by expression to use in the report."
  parameters:
  - description: "the sorting value to set."
    name: "sorting"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportConfigSorting?alt=com.azure.resourcemanager.costmanagement.models.ReportConfigSorting&text=ReportConfigSorting\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ReportConfigDataset withSorting(List<ReportConfigSorting> sorting)"
  desc: "Set the sorting property: Array of order by expression to use in the report."
  returns:
    description: "the ReportConfigDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ReportConfigDataset?alt=com.azure.resourcemanager.costmanagement.models.ReportConfigDataset&text=ReportConfigDataset\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The definition of data present in the report."
metadata: {}
package: "com.azure.resourcemanager.costmanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-costmanagement:1.0.0-beta.3
