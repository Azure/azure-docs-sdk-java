### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.annotation.JsonRootName
  id: JsonRootName
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation
  children:
  - com.fasterxml.jackson.annotation.JsonRootName.namespace()
  - com.fasterxml.jackson.annotation.JsonRootName.value()
  langs:
  - java
  name: JsonRootName
  nameWithType: JsonRootName
  fullName: com.fasterxml.jackson.annotation.JsonRootName
  type: Interface
  package: com.fasterxml.jackson.annotation
  summary: Annotation similar to `javax.xml.bind.annotation.XmlRootElement`, used to indicate name to use for root-level wrapping, if wrapping is enabled. Annotation itself does not indicate that wrapping should be used; but if it is, name used for serialization should be name specified here, and deserializer will expect the name as well.
  syntax:
    content: public interface JsonRootName implements Annotation
  implements:
  - java.lang.annotation.Annotation
- uid: com.fasterxml.jackson.annotation.JsonRootName.namespace()
  id: namespace()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonRootName
  langs:
  - java
  name: namespace()
  nameWithType: JsonRootName.namespace()
  fullName: com.fasterxml.jackson.annotation.JsonRootName.namespace()
  overload: com.fasterxml.jackson.annotation.JsonRootName.namespace*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Optional namespace to use with data formats that support such concept (specifically XML); if so, used with <xref uid="com.fasterxml.jackson.annotation.JsonRootName.value*" data-throw-if-not-resolved="false">#value</xref> to construct fully-qualified name.
  syntax:
    content: public abstract String namespace()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.annotation.JsonRootName.value()
  id: value()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonRootName
  langs:
  - java
  name: value()
  nameWithType: JsonRootName.value()
  fullName: com.fasterxml.jackson.annotation.JsonRootName.value()
  overload: com.fasterxml.jackson.annotation.JsonRootName.value*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Root name to use if root-level wrapping is enabled. For data formats that use composite names (XML), this is the "local part" of the name to use.
  syntax:
    content: public abstract String value()
    return:
      type: java.lang.String
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.annotation.JsonRootName.value*
  name: value
  nameWithType: JsonRootName.value
  fullName: com.fasterxml.jackson.annotation.JsonRootName.value
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonRootName.namespace*
  name: namespace
  nameWithType: JsonRootName.namespace
  fullName: com.fasterxml.jackson.annotation.JsonRootName.namespace
  package: com.fasterxml.jackson.annotation
- uid: java.lang.annotation.Annotation
  name: Annotation
  nameWithType: Annotation
  fullName: java.lang.annotation.Annotation
