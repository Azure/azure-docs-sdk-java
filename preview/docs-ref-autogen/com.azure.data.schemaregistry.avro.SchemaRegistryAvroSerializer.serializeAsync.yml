### YamlMime:JavaMember
uid: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.serializeAsync*"
fullName: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.serializeAsync"
name: "serializeAsync"
nameWithType: "SchemaRegistryAvroSerializer.serializeAsync"
members:
- uid: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.serializeAsync(java.io.OutputStream,java.lang.Object)"
  fullName: "com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.serializeAsync(OutputStream outputStream, Object object)"
  name: "serializeAsync(OutputStream outputStream, Object object)"
  nameWithType: "SchemaRegistryAvroSerializer.serializeAsync(OutputStream outputStream, Object object)"
  parameters:
  - name: "outputStream"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  - name: "object"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> serializeAsync(OutputStream outputStream, Object object)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.data.schemaregistry.avro"
artifact: com.azure:azure-data-schemaregistry-avro:1.0.0-beta.4
