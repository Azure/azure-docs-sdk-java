### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ObjectMapper.setConfig*"
fullName: "com.fasterxml.jackson.databind.ObjectMapper.setConfig"
name: "setConfig"
nameWithType: "ObjectMapper.setConfig"
members:
- uid: "com.fasterxml.jackson.databind.ObjectMapper.setConfig(com.fasterxml.jackson.databind.DeserializationConfig)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.setConfig(DeserializationConfig config)"
  name: "setConfig(DeserializationConfig config)"
  nameWithType: "ObjectMapper.setConfig(DeserializationConfig config)"
  summary: "Method that allows overriding of the underlying <xref uid=\"com.fasterxml.jackson.databind.DeserializationConfig\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeserializationConfig\"></xref> object. It is added as a fallback method that may be used if no other configuration modifier method works: it should not be used if there are alternatives, and its use is generally discouraged.\n\n**NOTE**: only use this method if you know what you are doing -- it allows by-passing some of checks applied to other configuration methods. Also keep in mind that as with all configuration of <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectMapper\"></xref>, this is only thread-safe if done before calling any deserialization methods."
  parameters:
  - name: "config"
    type: "<xref href=\"com.fasterxml.jackson.databind.DeserializationConfig?alt=com.fasterxml.jackson.databind.DeserializationConfig&text=DeserializationConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ObjectMapper setConfig(DeserializationConfig config)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.ObjectMapper?alt=com.fasterxml.jackson.databind.ObjectMapper&text=ObjectMapper\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectMapper.setConfig(com.fasterxml.jackson.databind.SerializationConfig)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.setConfig(SerializationConfig config)"
  name: "setConfig(SerializationConfig config)"
  nameWithType: "ObjectMapper.setConfig(SerializationConfig config)"
  summary: "Method that allows overriding of the underlying <xref uid=\"com.fasterxml.jackson.databind.SerializationConfig\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SerializationConfig\"></xref> object, which contains serialization-specific configuration settings. It is added as a fallback method that may be used if no other configuration modifier method works: it should not be used if there are alternatives, and its use is generally discouraged.\n\n**NOTE**: only use this method if you know what you are doing -- it allows by-passing some of checks applied to other configuration methods. Also keep in mind that as with all configuration of <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectMapper\"></xref>, this is only thread-safe if done before calling any serialization methods."
  parameters:
  - name: "config"
    type: "<xref href=\"com.fasterxml.jackson.databind.SerializationConfig?alt=com.fasterxml.jackson.databind.SerializationConfig&text=SerializationConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ObjectMapper setConfig(SerializationConfig config)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.ObjectMapper?alt=com.fasterxml.jackson.databind.ObjectMapper&text=ObjectMapper\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
