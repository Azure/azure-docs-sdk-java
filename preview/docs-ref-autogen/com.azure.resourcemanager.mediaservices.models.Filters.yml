### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.Filters"
fullName: "com.azure.resourcemanager.mediaservices.models.Filters"
name: "Filters"
nameWithType: "Filters"
summary: "Describes all the filtering operations, such as de-interlacing, rotation etc. that are to be applied to the input media before encoding."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Filters"
constructors:
- "com.azure.resourcemanager.mediaservices.models.Filters.Filters()"
methods:
- "com.azure.resourcemanager.mediaservices.models.Filters.crop()"
- "com.azure.resourcemanager.mediaservices.models.Filters.deinterlace()"
- "com.azure.resourcemanager.mediaservices.models.Filters.overlays()"
- "com.azure.resourcemanager.mediaservices.models.Filters.rotation()"
- "com.azure.resourcemanager.mediaservices.models.Filters.validate()"
- "com.azure.resourcemanager.mediaservices.models.Filters.withCrop(com.azure.resourcemanager.mediaservices.models.Rectangle)"
- "com.azure.resourcemanager.mediaservices.models.Filters.withDeinterlace(com.azure.resourcemanager.mediaservices.models.Deinterlace)"
- "com.azure.resourcemanager.mediaservices.models.Filters.withOverlays(java.util.List<com.azure.resourcemanager.mediaservices.models.Overlay>)"
- "com.azure.resourcemanager.mediaservices.models.Filters.withRotation(com.azure.resourcemanager.mediaservices.models.Rotation)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:1.0.0-beta.1
