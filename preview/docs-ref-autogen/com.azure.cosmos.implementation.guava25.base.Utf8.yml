### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.base.Utf8"
fullName: "com.azure.cosmos.implementation.guava25.base.Utf8"
name: "Utf8"
nameWithType: "Utf8"
summary: "Low-level, high-performance utility methods related to the <xref uid=\"com.azure.cosmos.implementation.guava25.base.Charsets.UTF_8\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UTF-8\"></xref> character encoding. UTF-8 is defined in section D92 of [The Unicode Standard Core Specification, Chapter 3][The Unicode Standard Core Specification_ Chapter 3].\n\nThe variant of UTF-8 implemented by this class is the restricted definition of UTF-8 introduced in Unicode 3.1. One implication of this is that it rejects [\"non-shortest form\"][non-shortest form] byte sequences, even though the JDK decoder may accept them.\n\n\n[The Unicode Standard Core Specification_ Chapter 3]: http://www.unicode.org/versions/Unicode6.2.0/ch03.pdf\n[non-shortest form]: http://www.unicode.org/versions/corrigendum1.html"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Utf8"
methods:
- "com.azure.cosmos.implementation.guava25.base.Utf8.encodedLength(java.lang.CharSequence)"
- "com.azure.cosmos.implementation.guava25.base.Utf8.isWellFormed(byte[])"
- "com.azure.cosmos.implementation.guava25.base.Utf8.isWellFormed(byte[],int,int)"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
