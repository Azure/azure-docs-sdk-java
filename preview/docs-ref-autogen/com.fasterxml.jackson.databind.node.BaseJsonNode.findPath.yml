### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.node.BaseJsonNode.findPath*"
fullName: "com.fasterxml.jackson.databind.node.BaseJsonNode.findPath"
name: "findPath"
nameWithType: "BaseJsonNode.findPath"
members:
- uid: "com.fasterxml.jackson.databind.node.BaseJsonNode.findPath(java.lang.String)"
  fullName: "com.fasterxml.jackson.databind.node.BaseJsonNode.findPath(String fieldName)"
  name: "findPath(String fieldName)"
  nameWithType: "BaseJsonNode.findPath(String fieldName)"
  summary: "Method similar to <xref uid=\"com.fasterxml.jackson.databind.node.BaseJsonNode.findValue\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#findValue\"></xref>, but that will return a \"missing node\" instead of null if no field is found. Missing node is a specific kind of node for which <xref uid=\"com.fasterxml.jackson.databind.node.BaseJsonNode.isMissingNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#isMissingNode\"></xref> returns true; and all value access methods return empty or missing value."
  overridden: "com.fasterxml.jackson.databind.JsonNode.findPath(java.lang.String)"
  parameters:
  - name: "fieldName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final JsonNode findPath(String fieldName)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonNode?alt=com.fasterxml.jackson.databind.JsonNode&text=JsonNode\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.node"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
