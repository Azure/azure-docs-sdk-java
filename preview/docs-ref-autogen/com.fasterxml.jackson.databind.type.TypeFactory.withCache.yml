### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.type.TypeFactory.withCache*"
fullName: "com.fasterxml.jackson.databind.type.TypeFactory.withCache"
name: "withCache"
nameWithType: "TypeFactory.withCache"
members:
- uid: "com.fasterxml.jackson.databind.type.TypeFactory.withCache(com.fasterxml.jackson.databind.util.LRUMap<java.lang.Object,com.fasterxml.jackson.databind.JavaType>)"
  fullName: "com.fasterxml.jackson.databind.type.TypeFactory.withCache(LRUMap<Object,JavaType> cache)"
  name: "withCache(LRUMap<Object,JavaType> cache)"
  nameWithType: "TypeFactory.withCache(LRUMap<Object,JavaType> cache)"
  summary: "Mutant factory method that will construct new <xref uid=\"com.fasterxml.jackson.databind.type.TypeFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeFactory\"></xref> with identical settings except for different cache; most likely one with bigger maximum size."
  parameters:
  - name: "cache"
    type: "<xref href=\"com.fasterxml.jackson.databind.util.LRUMap?alt=com.fasterxml.jackson.databind.util.LRUMap&text=LRUMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public TypeFactory withCache(LRUMap<Object,JavaType> cache)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.type.TypeFactory?alt=com.fasterxml.jackson.databind.type.TypeFactory&text=TypeFactory\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.type"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
