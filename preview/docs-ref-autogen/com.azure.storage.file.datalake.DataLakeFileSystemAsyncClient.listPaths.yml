### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.listPaths*"
fullName: "com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.listPaths"
name: "listPaths"
nameWithType: "DataLakeFileSystemAsyncClient.listPaths"
members:
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.listPaths()"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.listPaths()"
  name: "listPaths()"
  nameWithType: "DataLakeFileSystemAsyncClient.listPaths()"
  summary: "Returns a reactive Publisher emitting all the files/directories in this account lazily as needed. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nclient.listPaths().subscribe(path -> System.out.printf(\"Name: %s%n\", path.getName()));\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/filesystem/list"
  syntax: "public PagedFlux<PathItem> listPaths()"
  returns:
    description: "A reactive response emitting the list of files/directories."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.PathItem?alt=com.azure.storage.file.datalake.models.PathItem&text=PathItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.listPaths(com.azure.storage.file.datalake.models.ListPathsOptions)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.listPaths(ListPathsOptions options)"
  name: "listPaths(ListPathsOptions options)"
  nameWithType: "DataLakeFileSystemAsyncClient.listPaths(ListPathsOptions options)"
  summary: "Returns a reactive Publisher emitting all the files/directories in this account lazily as needed. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nListPathsOptions options = new ListPathsOptions()\n     .setPath(\"PathNamePrefixToMatch\")\n     .setMaxResults(10);\n \n client.listPaths(options).subscribe(path -> System.out.printf(\"Name: %s%n\", path.getName()));\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/filesystem/list"
  parameters:
  - description: "A <xref uid=\"com.azure.storage.file.datalake.models.ListPathsOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ListPathsOptions\"></xref> which specifies what data should be returned by the service."
    name: "options"
    type: "<xref href=\"com.azure.storage.file.datalake.models.ListPathsOptions?alt=com.azure.storage.file.datalake.models.ListPathsOptions&text=ListPathsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<PathItem> listPaths(ListPathsOptions options)"
  returns:
    description: "A reactive response emitting the list of files/directories."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.PathItem?alt=com.azure.storage.file.datalake.models.PathItem&text=PathItem\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.3.0-beta.1
