### YamlMime:JavaType
uid: "com.azure.analytics.purview.datamap.DiscoveryAsyncClient"
fullName: "com.azure.analytics.purview.datamap.DiscoveryAsyncClient"
name: "DiscoveryAsyncClient"
nameWithType: "DiscoveryAsyncClient"
summary: "Initializes a new instance of the asynchronous Data<wbr>Map<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **DiscoveryAsyncClient**"
methods:
- uid: "com.azure.analytics.purview.datamap.DiscoveryAsyncClient.autoComplete(com.azure.analytics.purview.datamap.models.AutoCompleteOptions)"
  fullName: "com.azure.analytics.purview.datamap.DiscoveryAsyncClient.autoComplete(AutoCompleteOptions autoCompleteOptions)"
  name: "autoComplete(AutoCompleteOptions autoCompleteOptions)"
  nameWithType: "DiscoveryAsyncClient.autoComplete(AutoCompleteOptions autoCompleteOptions)"
  summary: "Get auto complete options."
  parameters:
  - description: "The payload of autocomplete request."
    name: "autoCompleteOptions"
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.AutoCompleteOptions?alt=com.azure.analytics.purview.datamap.models.AutoCompleteOptions&text=AutoCompleteOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<AutoCompleteResult> autoComplete(AutoCompleteOptions autoCompleteOptions)"
  desc: "Get auto complete options."
  returns:
    description: "auto complete options on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.analytics.purview.datamap.models.AutoCompleteResult?alt=com.azure.analytics.purview.datamap.models.AutoCompleteResult&text=AutoCompleteResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.DiscoveryAsyncClient.autoCompleteWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.DiscoveryAsyncClient.autoCompleteWithResponse(BinaryData autoCompleteOptions, RequestOptions requestOptions)"
  name: "autoCompleteWithResponse(BinaryData autoCompleteOptions, RequestOptions requestOptions)"
  nameWithType: "DiscoveryAsyncClient.autoCompleteWithResponse(BinaryData autoCompleteOptions, RequestOptions requestOptions)"
  summary: "Get auto complete options."
  parameters:
  - description: "The payload of autocomplete request."
    name: "autoCompleteOptions"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> autoCompleteWithResponse(BinaryData autoCompleteOptions, RequestOptions requestOptions)"
  desc: "Get auto complete options.\n\n**Request Body Schema**\n\n```java\n{\n     keywords: String (Optional)\n     limit: Integer (Optional)\n     filter: Object (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     value (Optional): [\n          (Optional){\n             text: String (Optional)\n             queryPlusText: String (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "auto complete options along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.purview.datamap.DiscoveryAsyncClient.query(com.azure.analytics.purview.datamap.models.QueryOptions)"
  fullName: "com.azure.analytics.purview.datamap.DiscoveryAsyncClient.query(QueryOptions queryOptions)"
  name: "query(QueryOptions queryOptions)"
  nameWithType: "DiscoveryAsyncClient.query(QueryOptions queryOptions)"
  summary: "Get data using search."
  parameters:
  - description: "The search query of advanced search request."
    name: "queryOptions"
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.QueryOptions?alt=com.azure.analytics.purview.datamap.models.QueryOptions&text=QueryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<QueryResult> query(QueryOptions queryOptions)"
  desc: "Get data using search."
  returns:
    description: "data using search on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.analytics.purview.datamap.models.QueryResult?alt=com.azure.analytics.purview.datamap.models.QueryResult&text=QueryResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.DiscoveryAsyncClient.queryWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.DiscoveryAsyncClient.queryWithResponse(BinaryData queryOptions, RequestOptions requestOptions)"
  name: "queryWithResponse(BinaryData queryOptions, RequestOptions requestOptions)"
  nameWithType: "DiscoveryAsyncClient.queryWithResponse(BinaryData queryOptions, RequestOptions requestOptions)"
  summary: "Get data using search."
  parameters:
  - description: "The search query of advanced search request."
    name: "queryOptions"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> queryWithResponse(BinaryData queryOptions, RequestOptions requestOptions)"
  desc: "Get data using search.\n\n**Request Body Schema**\n\n```java\n{\n     keywords: String (Optional)\n     limit: Integer (Optional)\n     continuationToken: String (Optional)\n     orderby (Optional): [\n         Object (Optional)\n     ]\n     filter: Object (Optional)\n     facets (Optional): [\n          (Optional){\n             count: Integer (Optional)\n             facet: String (Optional)\n             sort (Optional): {\n                 count: String(asc/desc) (Optional)\n                 value: String(asc/desc) (Optional)\n             }\n         }\n     ]\n     taxonomySetting (Optional): {\n         assetTypes (Optional): [\n             String (Optional)\n         ]\n         facet (Optional): (recursive schema, see facet above)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     @search.count: Integer (Optional)\n     @search.count.approximate: Boolean (Optional)\n     continuationToken: String (Optional)\n     @search.facets (Optional): {\n         entityType (Optional): [\n              (Optional){\n                 count: Integer (Optional)\n                 value: String (Optional)\n             }\n         ]\n         assetType (Optional): [\n             (recursive schema, see above)\n         ]\n         classification (Optional): [\n             (recursive schema, see above)\n         ]\n         term (Optional): [\n             (recursive schema, see above)\n         ]\n         contactId (Optional): [\n             (recursive schema, see above)\n         ]\n         contactType (Optional): [\n             (recursive schema, see above)\n         ]\n         label (Optional): [\n             (recursive schema, see above)\n         ]\n         glossaryType (Optional): [\n             (recursive schema, see above)\n         ]\n         termStatus (Optional): [\n             (recursive schema, see above)\n         ]\n         termTemplate (Optional): [\n             (recursive schema, see above)\n         ]\n     }\n     value (Optional): [\n          (Optional){\n             @search.score: Double (Optional)\n             @search.highlights (Optional): {\n                 id (Optional): [\n                     String (Optional)\n                 ]\n                 qualifiedName (Optional): [\n                     String (Optional)\n                 ]\n                 name (Optional): [\n                     String (Optional)\n                 ]\n                 description (Optional): [\n                     String (Optional)\n                 ]\n                 entityType (Optional): [\n                     String (Optional)\n                 ]\n             }\n             objectType: String (Optional)\n             createTime: Long (Optional)\n             updateTime: Long (Optional)\n             id: String (Optional)\n             name: String (Optional)\n             qualifiedName: String (Optional)\n             entityType: String (Optional)\n             description: String (Optional)\n             endorsement: String (Optional)\n             owner: String (Optional)\n             classification (Optional): [\n                 String (Optional)\n             ]\n             label (Optional): [\n                 String (Optional)\n             ]\n             term (Optional): [\n                  (Optional){\n                     name: String (Optional)\n                     glossaryName: String (Optional)\n                     guid: String (Optional)\n                 }\n             ]\n             contact (Optional): [\n                  (Optional){\n                     id: String (Optional)\n                     info: String (Optional)\n                     contactType: String (Optional)\n                 }\n             ]\n             assetType (Optional): [\n                 String (Optional)\n             ]\n             glossaryType: String (Optional)\n             glossary: String (Optional)\n             termStatus: String (Optional)\n             termTemplate (Optional): [\n                 String (Optional)\n             ]\n             longDescription: String (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "data using search along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.purview.datamap.DiscoveryAsyncClient.suggest(com.azure.analytics.purview.datamap.models.SuggestOptions)"
  fullName: "com.azure.analytics.purview.datamap.DiscoveryAsyncClient.suggest(SuggestOptions suggestOptions)"
  name: "suggest(SuggestOptions suggestOptions)"
  nameWithType: "DiscoveryAsyncClient.suggest(SuggestOptions suggestOptions)"
  summary: "Get search suggestions by query criteria."
  parameters:
  - description: "The payload of suggest request."
    name: "suggestOptions"
    type: "<xref href=\"com.azure.analytics.purview.datamap.models.SuggestOptions?alt=com.azure.analytics.purview.datamap.models.SuggestOptions&text=SuggestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SuggestResult> suggest(SuggestOptions suggestOptions)"
  desc: "Get search suggestions by query criteria."
  returns:
    description: "search suggestions by query criteria on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.analytics.purview.datamap.models.SuggestResult?alt=com.azure.analytics.purview.datamap.models.SuggestResult&text=SuggestResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.datamap.DiscoveryAsyncClient.suggestWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.datamap.DiscoveryAsyncClient.suggestWithResponse(BinaryData suggestOptions, RequestOptions requestOptions)"
  name: "suggestWithResponse(BinaryData suggestOptions, RequestOptions requestOptions)"
  nameWithType: "DiscoveryAsyncClient.suggestWithResponse(BinaryData suggestOptions, RequestOptions requestOptions)"
  summary: "Get search suggestions by query criteria."
  parameters:
  - description: "The payload of suggest request."
    name: "suggestOptions"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> suggestWithResponse(BinaryData suggestOptions, RequestOptions requestOptions)"
  desc: "Get search suggestions by query criteria.\n\n**Request Body Schema**\n\n```java\n{\n     keywords: String (Optional)\n     limit: Integer (Optional)\n     filter: Object (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     value (Optional): [\n          (Optional){\n             @search.score: Double (Optional)\n             @search.text: String (Optional)\n             objectType: String (Optional)\n             createTime: Long (Optional)\n             updateTime: Long (Optional)\n             id: String (Optional)\n             name: String (Optional)\n             qualifiedName: String (Optional)\n             entityType: String (Optional)\n             description: String (Optional)\n             endorsement: String (Optional)\n             owner: String (Optional)\n             classification (Optional): [\n                 String (Optional)\n             ]\n             label (Optional): [\n                 String (Optional)\n             ]\n             term (Optional): [\n                  (Optional){\n                     name: String (Optional)\n                     glossaryName: String (Optional)\n                     guid: String (Optional)\n                 }\n             ]\n             contact (Optional): [\n                  (Optional){\n                     id: String (Optional)\n                     info: String (Optional)\n                     contactType: String (Optional)\n                 }\n             ]\n             assetType (Optional): [\n                 String (Optional)\n             ]\n             glossaryType: String (Optional)\n             glossary: String (Optional)\n             termStatus: String (Optional)\n             termTemplate (Optional): [\n                 String (Optional)\n             ]\n             longDescription: String (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "search suggestions by query criteria along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous DataMapClient type."
metadata: {}
package: "com.azure.analytics.purview.datamap"
artifact: com.azure:azure-analytics-purview-datamap:1.0.0-beta.1
