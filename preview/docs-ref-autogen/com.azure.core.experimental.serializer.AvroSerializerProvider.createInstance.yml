### YamlMime:JavaMember
uid: "com.azure.core.experimental.serializer.AvroSerializerProvider.createInstance*"
fullName: "com.azure.core.experimental.serializer.AvroSerializerProvider.createInstance"
name: "createInstance"
nameWithType: "AvroSerializerProvider.createInstance"
members:
- uid: "com.azure.core.experimental.serializer.AvroSerializerProvider.createInstance(java.lang.String)"
  fullName: "com.azure.core.experimental.serializer.AvroSerializerProvider.createInstance(String schema)"
  name: "createInstance(String schema)"
  nameWithType: "AvroSerializerProvider.createInstance(String schema)"
  summary: "Creates a new <xref uid=\"com.azure.core.experimental.serializer.AvroSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AvroSerializer\"></xref> tied to the given schema."
  parameters:
  - description: "The Avro schema that will be associated to the serializer."
    name: "schema"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AvroSerializer createInstance(String schema)"
  returns:
    description: "A new <xref uid=\"com.azure.core.experimental.serializer.AvroSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AvroSerializer\"></xref> instance."
    type: "<xref href=\"com.azure.core.experimental.serializer.AvroSerializer?alt=com.azure.core.experimental.serializer.AvroSerializer&text=AvroSerializer\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.core.experimental.serializer"
artifact: com.azure:azure-core-experimental:1.0.0-beta.9
