### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.models.ConflictResolutionMode
  id: ConflictResolutionMode
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models
  children:
  - com.azure.cosmos.models.ConflictResolutionMode.CUSTOM
  - com.azure.cosmos.models.ConflictResolutionMode.INVALID
  - com.azure.cosmos.models.ConflictResolutionMode.LAST_WRITER_WINS
  - com.azure.cosmos.models.ConflictResolutionMode.toString()
  - com.azure.cosmos.models.ConflictResolutionMode.valueOf(java.lang.String)
  - com.azure.cosmos.models.ConflictResolutionMode.values()
  langs:
  - java
  name: ConflictResolutionMode
  nameWithType: ConflictResolutionMode
  fullName: com.azure.cosmos.models.ConflictResolutionMode
  type: Enum
  package: com.azure.cosmos.models
  summary: The enum Conflict resolution mode.
  syntax:
    content: public enum ConflictResolutionMode extends Enum<ConflictResolutionMode>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.models.ConflictResolutionMode.CUSTOM
  id: CUSTOM
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ConflictResolutionMode
  langs:
  - java
  name: CUSTOM
  nameWithType: ConflictResolutionMode.CUSTOM
  fullName: com.azure.cosmos.models.ConflictResolutionMode.CUSTOM
  type: Field
  package: com.azure.cosmos.models
  summary: >-
    CUSTOM conflict resolution mode


    Setting the ConflictResolutionMode to "CUSTOM" indicates that conflict resolution is custom handled by a user. The user could elect to register a user specified <xref uid="com.azure.cosmos.implementation.StoredProcedure" data-throw-if-not-resolved="false">StoredProcedure</xref> for handling conflicting resources. Should the user not register a user specified StoredProcedure, conflicts will default to being made available as <xref uid="com.azure.cosmos.implementation.Conflict" data-throw-if-not-resolved="false">Conflict</xref> resources, which the user can inspect and manually resolve. See <xref uid="com.azure.cosmos.models.ConflictResolutionPolicy.getConflictResolutionProcedure()" data-throw-if-not-resolved="false">ConflictResolutionPolicy#getConflictResolutionProcedure()</xref> for details on how to specify the stored procedure to run for conflict resolution.
  syntax:
    content: public static final ConflictResolutionMode CUSTOM
    return:
      type: com.azure.cosmos.models.ConflictResolutionMode
- uid: com.azure.cosmos.models.ConflictResolutionMode.ConflictResolutionMode(java.lang.String)
  id: ConflictResolutionMode(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ConflictResolutionMode
  langs:
  - java
  name: ConflictResolutionMode(String overWireValue)
  nameWithType: ConflictResolutionMode.ConflictResolutionMode(String overWireValue)
  fullName: com.azure.cosmos.models.ConflictResolutionMode.ConflictResolutionMode(String overWireValue)
  overload: com.azure.cosmos.models.ConflictResolutionMode.ConflictResolutionMode*
  type: Constructor
  package: com.azure.cosmos.models
  syntax:
    content: private ConflictResolutionMode(String overWireValue)
    parameters:
    - id: overWireValue
      type: java.lang.String
- uid: com.azure.cosmos.models.ConflictResolutionMode.INVALID
  id: INVALID
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ConflictResolutionMode
  langs:
  - java
  name: INVALID
  nameWithType: ConflictResolutionMode.INVALID
  fullName: com.azure.cosmos.models.ConflictResolutionMode.INVALID
  type: Field
  package: com.azure.cosmos.models
  summary: INVALID or unknown mode.
  syntax:
    content: public static final ConflictResolutionMode INVALID
    return:
      type: com.azure.cosmos.models.ConflictResolutionMode
- uid: com.azure.cosmos.models.ConflictResolutionMode.LAST_WRITER_WINS
  id: LAST_WRITER_WINS
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ConflictResolutionMode
  langs:
  - java
  name: LAST_WRITER_WINS
  nameWithType: ConflictResolutionMode.LAST_WRITER_WINS
  fullName: com.azure.cosmos.models.ConflictResolutionMode.LAST_WRITER_WINS
  type: Field
  package: com.azure.cosmos.models
  summary: Last writer wins conflict resolution mode Setting the ConflictResolutionMode to "LAST\_WRITER\_WINS" indicates that conflict resolution should be done by inspecting a field in the conflicting items and picking the item which has the higher value in that path. See <xref uid="com.azure.cosmos.models.ConflictResolutionPolicy.getConflictResolutionPath()" data-throw-if-not-resolved="false">ConflictResolutionPolicy#getConflictResolutionPath()</xref> for details on how to specify the path
  syntax:
    content: public static final ConflictResolutionMode LAST_WRITER_WINS
    return:
      type: com.azure.cosmos.models.ConflictResolutionMode
- uid: com.azure.cosmos.models.ConflictResolutionMode.toString()
  id: toString()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ConflictResolutionMode
  langs:
  - java
  name: toString()
  nameWithType: ConflictResolutionMode.toString()
  fullName: com.azure.cosmos.models.ConflictResolutionMode.toString()
  overload: com.azure.cosmos.models.ConflictResolutionMode.toString*
  type: Method
  package: com.azure.cosmos.models
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.azure.cosmos.models.ConflictResolutionMode.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ConflictResolutionMode
  langs:
  - java
  name: valueOf(String name)
  nameWithType: ConflictResolutionMode.valueOf(String name)
  fullName: com.azure.cosmos.models.ConflictResolutionMode.valueOf(String name)
  overload: com.azure.cosmos.models.ConflictResolutionMode.valueOf*
  type: Method
  package: com.azure.cosmos.models
  syntax:
    content: public static ConflictResolutionMode valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.azure.cosmos.models.ConflictResolutionMode
- uid: com.azure.cosmos.models.ConflictResolutionMode.values()
  id: values()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ConflictResolutionMode
  langs:
  - java
  name: values()
  nameWithType: ConflictResolutionMode.values()
  fullName: com.azure.cosmos.models.ConflictResolutionMode.values()
  overload: com.azure.cosmos.models.ConflictResolutionMode.values*
  type: Method
  package: com.azure.cosmos.models
  syntax:
    content: public static ConflictResolutionMode[] values()
    return:
      type: com.azure.cosmos.models.ConflictResolutionMode[]
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.models.ConflictResolutionMode.ConflictResolutionMode*
  name: ConflictResolutionMode
  nameWithType: ConflictResolutionMode.ConflictResolutionMode
  fullName: com.azure.cosmos.models.ConflictResolutionMode.ConflictResolutionMode
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ConflictResolutionMode[]
  spec.java:
  - uid: com.azure.cosmos.models.ConflictResolutionMode
    name: ConflictResolutionMode
    fullName: com.azure.cosmos.models.ConflictResolutionMode
  - name: '[]'
    fullName: '[]'
- uid: com.azure.cosmos.models.ConflictResolutionMode.values*
  name: values
  nameWithType: ConflictResolutionMode.values
  fullName: com.azure.cosmos.models.ConflictResolutionMode.values
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ConflictResolutionMode.valueOf*
  name: valueOf
  nameWithType: ConflictResolutionMode.valueOf
  fullName: com.azure.cosmos.models.ConflictResolutionMode.valueOf
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ConflictResolutionMode.toString*
  name: toString
  nameWithType: ConflictResolutionMode.toString
  fullName: com.azure.cosmos.models.ConflictResolutionMode.toString
  package: com.azure.cosmos.models
- uid: java.lang.Enum<com.azure.cosmos.models.ConflictResolutionMode>
  name: Enum<ConflictResolutionMode>
  nameWithType: Enum<ConflictResolutionMode>
  fullName: java.lang.Enum<com.azure.cosmos.models.ConflictResolutionMode>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
