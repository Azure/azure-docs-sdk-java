### YamlMime:JavaType
uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties"
fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties"
name: "CreateDataLakeStoreAccountProperties"
nameWithType: "CreateDataLakeStoreAccountProperties"
summary: "The Create<wbr>Data<wbr>Lake<wbr>Store<wbr>Account<wbr>Properties model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **CreateDataLakeStoreAccountProperties**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties&text=CreateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.CreateDataLakeStoreAccountProperties()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.CreateDataLakeStoreAccountProperties()"
  name: "CreateDataLakeStoreAccountProperties()"
  nameWithType: "CreateDataLakeStoreAccountProperties.CreateDataLakeStoreAccountProperties()"
  summary: "Creates an instance of Create<wbr>Data<wbr>Lake<wbr>Store<wbr>Account<wbr>Properties class."
  syntax: "public CreateDataLakeStoreAccountProperties()"
  desc: "Creates an instance of CreateDataLakeStoreAccountProperties class."
methods:
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.defaultGroup()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.defaultGroup()"
  name: "defaultGroup()"
  nameWithType: "CreateDataLakeStoreAccountProperties.defaultGroup()"
  summary: "Get the default<wbr>Group property: The default owner group for all new folders and files created in the Data Lake Store account."
  syntax: "public String defaultGroup()"
  desc: "Get the defaultGroup property: The default owner group for all new folders and files created in the Data Lake Store account."
  returns:
    description: "the defaultGroup value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.encryptionConfig()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.encryptionConfig()"
  name: "encryptionConfig()"
  nameWithType: "CreateDataLakeStoreAccountProperties.encryptionConfig()"
  summary: "Get the encryption<wbr>Config property: The Key Vault encryption configuration."
  syntax: "public EncryptionConfig encryptionConfig()"
  desc: "Get the encryptionConfig property: The Key Vault encryption configuration."
  returns:
    description: "the encryptionConfig value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.EncryptionConfig&text=EncryptionConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.encryptionState()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.encryptionState()"
  name: "encryptionState()"
  nameWithType: "CreateDataLakeStoreAccountProperties.encryptionState()"
  summary: "Get the encryption<wbr>State property: The current state of encryption for this Data Lake Store account."
  syntax: "public EncryptionState encryptionState()"
  desc: "Get the encryptionState property: The current state of encryption for this Data Lake Store account."
  returns:
    description: "the encryptionState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionState?alt=com.azure.resourcemanager.datalakestore.models.EncryptionState&text=EncryptionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.firewallAllowAzureIps()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.firewallAllowAzureIps()"
  name: "firewallAllowAzureIps()"
  nameWithType: "CreateDataLakeStoreAccountProperties.firewallAllowAzureIps()"
  summary: "Get the firewall<wbr>Allow<wbr>Azure<wbr>Ips property: The current state of allowing or disallowing IPs originating within Azure through the firewall."
  syntax: "public FirewallAllowAzureIpsState firewallAllowAzureIps()"
  desc: "Get the firewallAllowAzureIps property: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced."
  returns:
    description: "the firewallAllowAzureIps value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState?alt=com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState&text=FirewallAllowAzureIpsState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.firewallRules()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.firewallRules()"
  name: "firewallRules()"
  nameWithType: "CreateDataLakeStoreAccountProperties.firewallRules()"
  summary: "Get the firewall<wbr>Rules property: The list of firewall rules associated with this Data Lake Store account."
  syntax: "public List<CreateFirewallRuleWithAccountParameters> firewallRules()"
  desc: "Get the firewallRules property: The list of firewall rules associated with this Data Lake Store account."
  returns:
    description: "the firewallRules value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateFirewallRuleWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateFirewallRuleWithAccountParameters&text=CreateFirewallRuleWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.firewallState()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.firewallState()"
  name: "firewallState()"
  nameWithType: "CreateDataLakeStoreAccountProperties.firewallState()"
  summary: "Get the firewall<wbr>State property: The current state of the IP address firewall for this Data Lake Store account."
  syntax: "public FirewallState firewallState()"
  desc: "Get the firewallState property: The current state of the IP address firewall for this Data Lake Store account."
  returns:
    description: "the firewallState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallState?alt=com.azure.resourcemanager.datalakestore.models.FirewallState&text=FirewallState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "CreateDataLakeStoreAccountProperties.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Create<wbr>Data<wbr>Lake<wbr>Store<wbr>Account<wbr>Properties from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CreateDataLakeStoreAccountProperties fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the CreateDataLakeStoreAccountProperties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of CreateDataLakeStoreAccountProperties from the JsonReader."
  returns:
    description: "An instance of CreateDataLakeStoreAccountProperties if the JsonReader was pointing to an instance of it,\n or null if it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties&text=CreateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.newTier()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.newTier()"
  name: "newTier()"
  nameWithType: "CreateDataLakeStoreAccountProperties.newTier()"
  summary: "Get the new<wbr>Tier property: The commitment tier to use for next month."
  syntax: "public TierType newTier()"
  desc: "Get the newTier property: The commitment tier to use for next month."
  returns:
    description: "the newTier value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TierType?alt=com.azure.resourcemanager.datalakestore.models.TierType&text=TierType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "CreateDataLakeStoreAccountProperties.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.trustedIdProviderState()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.trustedIdProviderState()"
  name: "trustedIdProviderState()"
  nameWithType: "CreateDataLakeStoreAccountProperties.trustedIdProviderState()"
  summary: "Get the trusted<wbr>IdProvider<wbr>State property: The current state of the trusted identity provider feature for this Data Lake Store account."
  syntax: "public TrustedIdProviderState trustedIdProviderState()"
  desc: "Get the trustedIdProviderState property: The current state of the trusted identity provider feature for this Data Lake Store account."
  returns:
    description: "the trustedIdProviderState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState?alt=com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState&text=TrustedIdProviderState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.trustedIdProviders()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.trustedIdProviders()"
  name: "trustedIdProviders()"
  nameWithType: "CreateDataLakeStoreAccountProperties.trustedIdProviders()"
  summary: "Get the trusted<wbr>IdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  syntax: "public List<CreateTrustedIdProviderWithAccountParameters> trustedIdProviders()"
  desc: "Get the trustedIdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  returns:
    description: "the trustedIdProviders value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateTrustedIdProviderWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateTrustedIdProviderWithAccountParameters&text=CreateTrustedIdProviderWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.validate()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.validate()"
  name: "validate()"
  nameWithType: "CreateDataLakeStoreAccountProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.virtualNetworkRules()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.virtualNetworkRules()"
  name: "virtualNetworkRules()"
  nameWithType: "CreateDataLakeStoreAccountProperties.virtualNetworkRules()"
  summary: "Get the virtual<wbr>Network<wbr>Rules property: The list of virtual network rules associated with this Data Lake Store account."
  syntax: "public List<CreateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules()"
  desc: "Get the virtualNetworkRules property: The list of virtual network rules associated with this Data Lake Store account."
  returns:
    description: "the virtualNetworkRules value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateVirtualNetworkRuleWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateVirtualNetworkRuleWithAccountParameters&text=CreateVirtualNetworkRuleWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withDefaultGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withDefaultGroup(String defaultGroup)"
  name: "withDefaultGroup(String defaultGroup)"
  nameWithType: "CreateDataLakeStoreAccountProperties.withDefaultGroup(String defaultGroup)"
  summary: "Set the default<wbr>Group property: The default owner group for all new folders and files created in the Data Lake Store account."
  parameters:
  - description: "the defaultGroup value to set."
    name: "defaultGroup"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public CreateDataLakeStoreAccountProperties withDefaultGroup(String defaultGroup)"
  desc: "Set the defaultGroup property: The default owner group for all new folders and files created in the Data Lake Store account."
  returns:
    description: "the CreateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties&text=CreateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withEncryptionConfig(com.azure.resourcemanager.datalakestore.models.EncryptionConfig)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withEncryptionConfig(EncryptionConfig encryptionConfig)"
  name: "withEncryptionConfig(EncryptionConfig encryptionConfig)"
  nameWithType: "CreateDataLakeStoreAccountProperties.withEncryptionConfig(EncryptionConfig encryptionConfig)"
  summary: "Set the encryption<wbr>Config property: The Key Vault encryption configuration."
  parameters:
  - description: "the encryptionConfig value to set."
    name: "encryptionConfig"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.EncryptionConfig&text=EncryptionConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateDataLakeStoreAccountProperties withEncryptionConfig(EncryptionConfig encryptionConfig)"
  desc: "Set the encryptionConfig property: The Key Vault encryption configuration."
  returns:
    description: "the CreateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties&text=CreateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withEncryptionState(com.azure.resourcemanager.datalakestore.models.EncryptionState)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withEncryptionState(EncryptionState encryptionState)"
  name: "withEncryptionState(EncryptionState encryptionState)"
  nameWithType: "CreateDataLakeStoreAccountProperties.withEncryptionState(EncryptionState encryptionState)"
  summary: "Set the encryption<wbr>State property: The current state of encryption for this Data Lake Store account."
  parameters:
  - description: "the encryptionState value to set."
    name: "encryptionState"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionState?alt=com.azure.resourcemanager.datalakestore.models.EncryptionState&text=EncryptionState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateDataLakeStoreAccountProperties withEncryptionState(EncryptionState encryptionState)"
  desc: "Set the encryptionState property: The current state of encryption for this Data Lake Store account."
  returns:
    description: "the CreateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties&text=CreateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withFirewallAllowAzureIps(com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)"
  name: "withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)"
  nameWithType: "CreateDataLakeStoreAccountProperties.withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)"
  summary: "Set the firewall<wbr>Allow<wbr>Azure<wbr>Ips property: The current state of allowing or disallowing IPs originating within Azure through the firewall."
  parameters:
  - description: "the firewallAllowAzureIps value to set."
    name: "firewallAllowAzureIps"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState?alt=com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState&text=FirewallAllowAzureIpsState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateDataLakeStoreAccountProperties withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)"
  desc: "Set the firewallAllowAzureIps property: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced."
  returns:
    description: "the CreateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties&text=CreateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withFirewallRules(java.util.List<com.azure.resourcemanager.datalakestore.models.CreateFirewallRuleWithAccountParameters>)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withFirewallRules(List<CreateFirewallRuleWithAccountParameters> firewallRules)"
  name: "withFirewallRules(List<CreateFirewallRuleWithAccountParameters> firewallRules)"
  nameWithType: "CreateDataLakeStoreAccountProperties.withFirewallRules(List<CreateFirewallRuleWithAccountParameters> firewallRules)"
  summary: "Set the firewall<wbr>Rules property: The list of firewall rules associated with this Data Lake Store account."
  parameters:
  - description: "the firewallRules value to set."
    name: "firewallRules"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateFirewallRuleWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateFirewallRuleWithAccountParameters&text=CreateFirewallRuleWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CreateDataLakeStoreAccountProperties withFirewallRules(List<CreateFirewallRuleWithAccountParameters> firewallRules)"
  desc: "Set the firewallRules property: The list of firewall rules associated with this Data Lake Store account."
  returns:
    description: "the CreateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties&text=CreateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withFirewallState(com.azure.resourcemanager.datalakestore.models.FirewallState)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withFirewallState(FirewallState firewallState)"
  name: "withFirewallState(FirewallState firewallState)"
  nameWithType: "CreateDataLakeStoreAccountProperties.withFirewallState(FirewallState firewallState)"
  summary: "Set the firewall<wbr>State property: The current state of the IP address firewall for this Data Lake Store account."
  parameters:
  - description: "the firewallState value to set."
    name: "firewallState"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallState?alt=com.azure.resourcemanager.datalakestore.models.FirewallState&text=FirewallState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateDataLakeStoreAccountProperties withFirewallState(FirewallState firewallState)"
  desc: "Set the firewallState property: The current state of the IP address firewall for this Data Lake Store account."
  returns:
    description: "the CreateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties&text=CreateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withNewTier(com.azure.resourcemanager.datalakestore.models.TierType)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withNewTier(TierType newTier)"
  name: "withNewTier(TierType newTier)"
  nameWithType: "CreateDataLakeStoreAccountProperties.withNewTier(TierType newTier)"
  summary: "Set the new<wbr>Tier property: The commitment tier to use for next month."
  parameters:
  - description: "the newTier value to set."
    name: "newTier"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TierType?alt=com.azure.resourcemanager.datalakestore.models.TierType&text=TierType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateDataLakeStoreAccountProperties withNewTier(TierType newTier)"
  desc: "Set the newTier property: The commitment tier to use for next month."
  returns:
    description: "the CreateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties&text=CreateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withTrustedIdProviderState(com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)"
  name: "withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)"
  nameWithType: "CreateDataLakeStoreAccountProperties.withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)"
  summary: "Set the trusted<wbr>IdProvider<wbr>State property: The current state of the trusted identity provider feature for this Data Lake Store account."
  parameters:
  - description: "the trustedIdProviderState value to set."
    name: "trustedIdProviderState"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState?alt=com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState&text=TrustedIdProviderState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateDataLakeStoreAccountProperties withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)"
  desc: "Set the trustedIdProviderState property: The current state of the trusted identity provider feature for this Data Lake Store account."
  returns:
    description: "the CreateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties&text=CreateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withTrustedIdProviders(java.util.List<com.azure.resourcemanager.datalakestore.models.CreateTrustedIdProviderWithAccountParameters>)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withTrustedIdProviders(List<CreateTrustedIdProviderWithAccountParameters> trustedIdProviders)"
  name: "withTrustedIdProviders(List<CreateTrustedIdProviderWithAccountParameters> trustedIdProviders)"
  nameWithType: "CreateDataLakeStoreAccountProperties.withTrustedIdProviders(List<CreateTrustedIdProviderWithAccountParameters> trustedIdProviders)"
  summary: "Set the trusted<wbr>IdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  parameters:
  - description: "the trustedIdProviders value to set."
    name: "trustedIdProviders"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateTrustedIdProviderWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateTrustedIdProviderWithAccountParameters&text=CreateTrustedIdProviderWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CreateDataLakeStoreAccountProperties withTrustedIdProviders(List<CreateTrustedIdProviderWithAccountParameters> trustedIdProviders)"
  desc: "Set the trustedIdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  returns:
    description: "the CreateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties&text=CreateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withVirtualNetworkRules(java.util.List<com.azure.resourcemanager.datalakestore.models.CreateVirtualNetworkRuleWithAccountParameters>)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties.withVirtualNetworkRules(List<CreateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules)"
  name: "withVirtualNetworkRules(List<CreateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules)"
  nameWithType: "CreateDataLakeStoreAccountProperties.withVirtualNetworkRules(List<CreateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules)"
  summary: "Set the virtual<wbr>Network<wbr>Rules property: The list of virtual network rules associated with this Data Lake Store account."
  parameters:
  - description: "the virtualNetworkRules value to set."
    name: "virtualNetworkRules"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateVirtualNetworkRuleWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateVirtualNetworkRuleWithAccountParameters&text=CreateVirtualNetworkRuleWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CreateDataLakeStoreAccountProperties withVirtualNetworkRules(List<CreateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules)"
  desc: "Set the virtualNetworkRules property: The list of virtual network rules associated with this Data Lake Store account."
  returns:
    description: "the CreateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties&text=CreateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The CreateDataLakeStoreAccountProperties model."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.CreateDataLakeStoreAccountProperties&text=CreateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.datalakestore.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datalakestore:1.0.0-beta.3
