### YamlMime:JavaType
uid: "com.azure.resourcemanager.healthcareapis.models.Services"
fullName: "com.azure.resourcemanager.healthcareapis.models.Services"
name: "Services"
nameWithType: "Services"
summary: "Resource collection API of Services."
syntax: "public interface Services"
methods:
- uid: "com.azure.resourcemanager.healthcareapis.models.Services.checkNameAvailability(com.azure.resourcemanager.healthcareapis.models.CheckNameAvailabilityParameters)"
  fullName: "com.azure.resourcemanager.healthcareapis.models.Services.checkNameAvailability(CheckNameAvailabilityParameters checkNameAvailabilityInputs)"
  name: "checkNameAvailability(CheckNameAvailabilityParameters checkNameAvailabilityInputs)"
  nameWithType: "Services.checkNameAvailability(CheckNameAvailabilityParameters checkNameAvailabilityInputs)"
  summary: "Check if a service instance name is available."
  modifiers:
  - "abstract"
  parameters:
  - description: "Set the name parameter in the CheckNameAvailabilityParameters structure to the\n     name of the service instance to check."
    name: "checkNameAvailabilityInputs"
    type: "<xref href=\"com.azure.resourcemanager.healthcareapis.models.CheckNameAvailabilityParameters?alt=com.azure.resourcemanager.healthcareapis.models.CheckNameAvailabilityParameters&text=CheckNameAvailabilityParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ServicesNameAvailabilityInfo checkNameAvailability(CheckNameAvailabilityParameters checkNameAvailabilityInputs)"
  desc: "Check if a service instance name is available."
  returns:
    description: "the properties indicating whether a given service name is available."
    type: "<xref href=\"com.azure.resourcemanager.healthcareapis.models.ServicesNameAvailabilityInfo?alt=com.azure.resourcemanager.healthcareapis.models.ServicesNameAvailabilityInfo&text=ServicesNameAvailabilityInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.healthcareapis.models.Services.checkNameAvailabilityWithResponse(com.azure.resourcemanager.healthcareapis.models.CheckNameAvailabilityParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.healthcareapis.models.Services.checkNameAvailabilityWithResponse(CheckNameAvailabilityParameters checkNameAvailabilityInputs, Context context)"
  name: "checkNameAvailabilityWithResponse(CheckNameAvailabilityParameters checkNameAvailabilityInputs, Context context)"
  nameWithType: "Services.checkNameAvailabilityWithResponse(CheckNameAvailabilityParameters checkNameAvailabilityInputs, Context context)"
  summary: "Check if a service instance name is available."
  modifiers:
  - "abstract"
  parameters:
  - description: "Set the name parameter in the CheckNameAvailabilityParameters structure to the\n     name of the service instance to check."
    name: "checkNameAvailabilityInputs"
    type: "<xref href=\"com.azure.resourcemanager.healthcareapis.models.CheckNameAvailabilityParameters?alt=com.azure.resourcemanager.healthcareapis.models.CheckNameAvailabilityParameters&text=CheckNameAvailabilityParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ServicesNameAvailabilityInfo> checkNameAvailabilityWithResponse(CheckNameAvailabilityParameters checkNameAvailabilityInputs, Context context)"
  desc: "Check if a service instance name is available."
  returns:
    description: "the properties indicating whether a given service name is available along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.healthcareapis.models.ServicesNameAvailabilityInfo?alt=com.azure.resourcemanager.healthcareapis.models.ServicesNameAvailabilityInfo&text=ServicesNameAvailabilityInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.healthcareapis.models.Services.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.healthcareapis.models.Services.define(String name)"
  name: "define(String name)"
  nameWithType: "Services.define(String name)"
  summary: "Begins definition for a new Services<wbr>Description resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ServicesDescription.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new ServicesDescription resource."
  returns:
    description: "the first stage of the new ServicesDescription definition."
    type: "<xref href=\"com.azure.resourcemanager.healthcareapis.models.ServicesDescription.DefinitionStages.Blank?alt=com.azure.resourcemanager.healthcareapis.models.ServicesDescription.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.healthcareapis.models.Services.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.healthcareapis.models.Services.delete(String resourceGroupName, String resourceName, Context context)"
  name: "delete(String resourceGroupName, String resourceName, Context context)"
  nameWithType: "Services.delete(String resourceGroupName, String resourceName, Context context)"
  summary: "Delete a service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the service instance."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the service instance."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String resourceName, Context context)"
  desc: "Delete a service instance."
- uid: "com.azure.resourcemanager.healthcareapis.models.Services.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.healthcareapis.models.Services.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Services.deleteById(String id)"
  summary: "Delete a service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Delete a service instance."
- uid: "com.azure.resourcemanager.healthcareapis.models.Services.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.healthcareapis.models.Services.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "Services.deleteByIdWithResponse(String id, Context context)"
  summary: "Delete a service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByIdWithResponse(String id, Context context)"
  desc: "Delete a service instance."
- uid: "com.azure.resourcemanager.healthcareapis.models.Services.deleteByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.healthcareapis.models.Services.deleteByResourceGroup(String resourceGroupName, String resourceName)"
  name: "deleteByResourceGroup(String resourceGroupName, String resourceName)"
  nameWithType: "Services.deleteByResourceGroup(String resourceGroupName, String resourceName)"
  summary: "Delete a service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the service instance."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the service instance."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByResourceGroup(String resourceGroupName, String resourceName)"
  desc: "Delete a service instance."
- uid: "com.azure.resourcemanager.healthcareapis.models.Services.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.healthcareapis.models.Services.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Services.getById(String id)"
  summary: "Get the metadata of a service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ServicesDescription getById(String id)"
  desc: "Get the metadata of a service instance."
  returns:
    description: "the metadata of a service instance along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.resourcemanager.healthcareapis.models.ServicesDescription?alt=com.azure.resourcemanager.healthcareapis.models.ServicesDescription&text=ServicesDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.healthcareapis.models.Services.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.healthcareapis.models.Services.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Services.getByIdWithResponse(String id, Context context)"
  summary: "Get the metadata of a service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ServicesDescription> getByIdWithResponse(String id, Context context)"
  desc: "Get the metadata of a service instance."
  returns:
    description: "the metadata of a service instance along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.healthcareapis.models.ServicesDescription?alt=com.azure.resourcemanager.healthcareapis.models.ServicesDescription&text=ServicesDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.healthcareapis.models.Services.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.healthcareapis.models.Services.getByResourceGroup(String resourceGroupName, String resourceName)"
  name: "getByResourceGroup(String resourceGroupName, String resourceName)"
  nameWithType: "Services.getByResourceGroup(String resourceGroupName, String resourceName)"
  summary: "Get the metadata of a service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the service instance."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the service instance."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ServicesDescription getByResourceGroup(String resourceGroupName, String resourceName)"
  desc: "Get the metadata of a service instance."
  returns:
    description: "the metadata of a service instance."
    type: "<xref href=\"com.azure.resourcemanager.healthcareapis.models.ServicesDescription?alt=com.azure.resourcemanager.healthcareapis.models.ServicesDescription&text=ServicesDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.healthcareapis.models.Services.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.healthcareapis.models.Services.getByResourceGroupWithResponse(String resourceGroupName, String resourceName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String resourceName, Context context)"
  nameWithType: "Services.getByResourceGroupWithResponse(String resourceGroupName, String resourceName, Context context)"
  summary: "Get the metadata of a service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the service instance."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the service instance."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ServicesDescription> getByResourceGroupWithResponse(String resourceGroupName, String resourceName, Context context)"
  desc: "Get the metadata of a service instance."
  returns:
    description: "the metadata of a service instance along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.healthcareapis.models.ServicesDescription?alt=com.azure.resourcemanager.healthcareapis.models.ServicesDescription&text=ServicesDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.healthcareapis.models.Services.list()"
  fullName: "com.azure.resourcemanager.healthcareapis.models.Services.list()"
  name: "list()"
  nameWithType: "Services.list()"
  summary: "Get all the service instances in a subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<ServicesDescription> list()"
  desc: "Get all the service instances in a subscription."
  returns:
    description: "all the service instances in a subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.healthcareapis.models.ServicesDescription?alt=com.azure.resourcemanager.healthcareapis.models.ServicesDescription&text=ServicesDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.healthcareapis.models.Services.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.healthcareapis.models.Services.list(Context context)"
  name: "list(Context context)"
  nameWithType: "Services.list(Context context)"
  summary: "Get all the service instances in a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ServicesDescription> list(Context context)"
  desc: "Get all the service instances in a subscription."
  returns:
    description: "all the service instances in a subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.healthcareapis.models.ServicesDescription?alt=com.azure.resourcemanager.healthcareapis.models.ServicesDescription&text=ServicesDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.healthcareapis.models.Services.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.healthcareapis.models.Services.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "Services.listByResourceGroup(String resourceGroupName)"
  summary: "Get all the service instances in a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the service instance."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ServicesDescription> listByResourceGroup(String resourceGroupName)"
  desc: "Get all the service instances in a resource group."
  returns:
    description: "all the service instances in a resource group as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.healthcareapis.models.ServicesDescription?alt=com.azure.resourcemanager.healthcareapis.models.ServicesDescription&text=ServicesDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.healthcareapis.models.Services.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.healthcareapis.models.Services.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "Services.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "Get all the service instances in a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group that contains the service instance."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ServicesDescription> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "Get all the service instances in a resource group."
  returns:
    description: "all the service instances in a resource group as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.healthcareapis.models.ServicesDescription?alt=com.azure.resourcemanager.healthcareapis.models.ServicesDescription&text=ServicesDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Services."
metadata: {}
package: "com.azure.resourcemanager.healthcareapis.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-healthcareapis:1.0.0-beta.2
