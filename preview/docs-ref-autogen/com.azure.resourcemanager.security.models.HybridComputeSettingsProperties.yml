### YamlMime:JavaType
uid: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties"
fullName: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties"
name: "HybridComputeSettingsProperties"
nameWithType: "HybridComputeSettingsProperties"
summary: "Settings for hybrid compute management."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class HybridComputeSettingsProperties"
constructors:
- uid: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.HybridComputeSettingsProperties()"
  fullName: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.HybridComputeSettingsProperties()"
  name: "HybridComputeSettingsProperties()"
  nameWithType: "HybridComputeSettingsProperties.HybridComputeSettingsProperties()"
  syntax: "public HybridComputeSettingsProperties()"
methods:
- uid: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.autoProvision()"
  fullName: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.autoProvision()"
  name: "autoProvision()"
  nameWithType: "HybridComputeSettingsProperties.autoProvision()"
  summary: "Get the auto<wbr>Provision property: Whether or not to automatically install Azure Arc (hybrid compute) agents on machines."
  syntax: "public AutoProvision autoProvision()"
  desc: "Get the autoProvision property: Whether or not to automatically install Azure Arc (hybrid compute) agents on machines."
  returns:
    description: "the autoProvision value."
    type: "<xref href=\"com.azure.resourcemanager.security.models.AutoProvision?alt=com.azure.resourcemanager.security.models.AutoProvision&text=AutoProvision\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.hybridComputeProvisioningState()"
  fullName: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.hybridComputeProvisioningState()"
  name: "hybridComputeProvisioningState()"
  nameWithType: "HybridComputeSettingsProperties.hybridComputeProvisioningState()"
  summary: "Get the hybrid<wbr>Compute<wbr>Provisioning<wbr>State property: State of the service principal and its secret."
  syntax: "public HybridComputeProvisioningState hybridComputeProvisioningState()"
  desc: "Get the hybridComputeProvisioningState property: State of the service principal and its secret."
  returns:
    description: "the hybridComputeProvisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.security.models.HybridComputeProvisioningState?alt=com.azure.resourcemanager.security.models.HybridComputeProvisioningState&text=HybridComputeProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.proxyServer()"
  fullName: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.proxyServer()"
  name: "proxyServer()"
  nameWithType: "HybridComputeSettingsProperties.proxyServer()"
  summary: "Get the proxy<wbr>Server property: For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use."
  syntax: "public ProxyServerProperties proxyServer()"
  desc: "Get the proxyServer property: For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use."
  returns:
    description: "the proxyServer value."
    type: "<xref href=\"com.azure.resourcemanager.security.models.ProxyServerProperties?alt=com.azure.resourcemanager.security.models.ProxyServerProperties&text=ProxyServerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.region()"
  fullName: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.region()"
  name: "region()"
  nameWithType: "HybridComputeSettingsProperties.region()"
  summary: "Get the region property: The location where the metadata of machines will be stored."
  syntax: "public String region()"
  desc: "Get the region property: The location where the metadata of machines will be stored."
  returns:
    description: "the region value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.resourceGroupName()"
  fullName: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "HybridComputeSettingsProperties.resourceGroupName()"
  summary: "Get the resource<wbr>Group<wbr>Name property: The name of the resource group where Arc (Hybrid Compute) connectors are connected."
  syntax: "public String resourceGroupName()"
  desc: "Get the resourceGroupName property: The name of the resource group where Arc (Hybrid Compute) connectors are connected."
  returns:
    description: "the resourceGroupName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.servicePrincipal()"
  fullName: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.servicePrincipal()"
  name: "servicePrincipal()"
  nameWithType: "HybridComputeSettingsProperties.servicePrincipal()"
  summary: "Get the service<wbr>Principal property: An object to access resources that are secured by an Azure AD tenant."
  syntax: "public ServicePrincipalProperties servicePrincipal()"
  desc: "Get the servicePrincipal property: An object to access resources that are secured by an Azure AD tenant."
  returns:
    description: "the servicePrincipal value."
    type: "<xref href=\"com.azure.resourcemanager.security.models.ServicePrincipalProperties?alt=com.azure.resourcemanager.security.models.ServicePrincipalProperties&text=ServicePrincipalProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.validate()"
  fullName: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.validate()"
  name: "validate()"
  nameWithType: "HybridComputeSettingsProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.withAutoProvision(com.azure.resourcemanager.security.models.AutoProvision)"
  fullName: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.withAutoProvision(AutoProvision autoProvision)"
  name: "withAutoProvision(AutoProvision autoProvision)"
  nameWithType: "HybridComputeSettingsProperties.withAutoProvision(AutoProvision autoProvision)"
  summary: "Set the auto<wbr>Provision property: Whether or not to automatically install Azure Arc (hybrid compute) agents on machines."
  parameters:
  - description: "the autoProvision value to set."
    name: "autoProvision"
    type: "<xref href=\"com.azure.resourcemanager.security.models.AutoProvision?alt=com.azure.resourcemanager.security.models.AutoProvision&text=AutoProvision\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HybridComputeSettingsProperties withAutoProvision(AutoProvision autoProvision)"
  desc: "Set the autoProvision property: Whether or not to automatically install Azure Arc (hybrid compute) agents on machines."
  returns:
    description: "the HybridComputeSettingsProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.security.models.HybridComputeSettingsProperties?alt=com.azure.resourcemanager.security.models.HybridComputeSettingsProperties&text=HybridComputeSettingsProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.withProxyServer(com.azure.resourcemanager.security.models.ProxyServerProperties)"
  fullName: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.withProxyServer(ProxyServerProperties proxyServer)"
  name: "withProxyServer(ProxyServerProperties proxyServer)"
  nameWithType: "HybridComputeSettingsProperties.withProxyServer(ProxyServerProperties proxyServer)"
  summary: "Set the proxy<wbr>Server property: For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use."
  parameters:
  - description: "the proxyServer value to set."
    name: "proxyServer"
    type: "<xref href=\"com.azure.resourcemanager.security.models.ProxyServerProperties?alt=com.azure.resourcemanager.security.models.ProxyServerProperties&text=ProxyServerProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HybridComputeSettingsProperties withProxyServer(ProxyServerProperties proxyServer)"
  desc: "Set the proxyServer property: For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use."
  returns:
    description: "the HybridComputeSettingsProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.security.models.HybridComputeSettingsProperties?alt=com.azure.resourcemanager.security.models.HybridComputeSettingsProperties&text=HybridComputeSettingsProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.withRegion(java.lang.String)"
  fullName: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.withRegion(String region)"
  name: "withRegion(String region)"
  nameWithType: "HybridComputeSettingsProperties.withRegion(String region)"
  summary: "Set the region property: The location where the metadata of machines will be stored."
  parameters:
  - description: "the region value to set."
    name: "region"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HybridComputeSettingsProperties withRegion(String region)"
  desc: "Set the region property: The location where the metadata of machines will be stored."
  returns:
    description: "the HybridComputeSettingsProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.security.models.HybridComputeSettingsProperties?alt=com.azure.resourcemanager.security.models.HybridComputeSettingsProperties&text=HybridComputeSettingsProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.withResourceGroupName(java.lang.String)"
  fullName: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.withResourceGroupName(String resourceGroupName)"
  name: "withResourceGroupName(String resourceGroupName)"
  nameWithType: "HybridComputeSettingsProperties.withResourceGroupName(String resourceGroupName)"
  summary: "Set the resource<wbr>Group<wbr>Name property: The name of the resource group where Arc (Hybrid Compute) connectors are connected."
  parameters:
  - description: "the resourceGroupName value to set."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HybridComputeSettingsProperties withResourceGroupName(String resourceGroupName)"
  desc: "Set the resourceGroupName property: The name of the resource group where Arc (Hybrid Compute) connectors are connected."
  returns:
    description: "the HybridComputeSettingsProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.security.models.HybridComputeSettingsProperties?alt=com.azure.resourcemanager.security.models.HybridComputeSettingsProperties&text=HybridComputeSettingsProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.withServicePrincipal(com.azure.resourcemanager.security.models.ServicePrincipalProperties)"
  fullName: "com.azure.resourcemanager.security.models.HybridComputeSettingsProperties.withServicePrincipal(ServicePrincipalProperties servicePrincipal)"
  name: "withServicePrincipal(ServicePrincipalProperties servicePrincipal)"
  nameWithType: "HybridComputeSettingsProperties.withServicePrincipal(ServicePrincipalProperties servicePrincipal)"
  summary: "Set the service<wbr>Principal property: An object to access resources that are secured by an Azure AD tenant."
  parameters:
  - description: "the servicePrincipal value to set."
    name: "servicePrincipal"
    type: "<xref href=\"com.azure.resourcemanager.security.models.ServicePrincipalProperties?alt=com.azure.resourcemanager.security.models.ServicePrincipalProperties&text=ServicePrincipalProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HybridComputeSettingsProperties withServicePrincipal(ServicePrincipalProperties servicePrincipal)"
  desc: "Set the servicePrincipal property: An object to access resources that are secured by an Azure AD tenant."
  returns:
    description: "the HybridComputeSettingsProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.security.models.HybridComputeSettingsProperties?alt=com.azure.resourcemanager.security.models.HybridComputeSettingsProperties&text=HybridComputeSettingsProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Settings for hybrid compute management."
metadata: {}
package: "com.azure.resourcemanager.security.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-security:1.0.0-beta.1
