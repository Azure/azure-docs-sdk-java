### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.storage.models.StorageAccount
  id: StorageAccount
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models
  children:
  - com.azure.resourcemanager.storage.models.StorageAccount.Definition
  - com.azure.resourcemanager.storage.models.StorageAccount.DefinitionStages
  - com.azure.resourcemanager.storage.models.StorageAccount.Update
  - com.azure.resourcemanager.storage.models.StorageAccount.UpdateStages
  - com.azure.resourcemanager.storage.models.StorageAccount.accessTier()
  - com.azure.resourcemanager.storage.models.StorageAccount.accountStatuses()
  - com.azure.resourcemanager.storage.models.StorageAccount.canAccessFromAzureServices()
  - com.azure.resourcemanager.storage.models.StorageAccount.canReadLogEntriesFromAnyNetwork()
  - com.azure.resourcemanager.storage.models.StorageAccount.canReadMetricsFromAnyNetwork()
  - com.azure.resourcemanager.storage.models.StorageAccount.creationTime()
  - com.azure.resourcemanager.storage.models.StorageAccount.customDomain()
  - com.azure.resourcemanager.storage.models.StorageAccount.encryption()
  - com.azure.resourcemanager.storage.models.StorageAccount.encryptionKeySource()
  - com.azure.resourcemanager.storage.models.StorageAccount.encryptionStatuses()
  - com.azure.resourcemanager.storage.models.StorageAccount.endPoints()
  - com.azure.resourcemanager.storage.models.StorageAccount.getKeys()
  - com.azure.resourcemanager.storage.models.StorageAccount.getKeysAsync()
  - com.azure.resourcemanager.storage.models.StorageAccount.ipAddressRangesWithAccess()
  - com.azure.resourcemanager.storage.models.StorageAccount.ipAddressesWithAccess()
  - com.azure.resourcemanager.storage.models.StorageAccount.isAccessAllowedFromAllNetworks()
  - com.azure.resourcemanager.storage.models.StorageAccount.isAzureFilesAadIntegrationEnabled()
  - com.azure.resourcemanager.storage.models.StorageAccount.isHnsEnabled()
  - com.azure.resourcemanager.storage.models.StorageAccount.isLargeFileSharesEnabled()
  - com.azure.resourcemanager.storage.models.StorageAccount.kind()
  - com.azure.resourcemanager.storage.models.StorageAccount.lastGeoFailoverTime()
  - com.azure.resourcemanager.storage.models.StorageAccount.networkSubnetsWithAccess()
  - com.azure.resourcemanager.storage.models.StorageAccount.provisioningState()
  - com.azure.resourcemanager.storage.models.StorageAccount.regenerateKey(java.lang.String)
  - com.azure.resourcemanager.storage.models.StorageAccount.regenerateKeyAsync(java.lang.String)
  - com.azure.resourcemanager.storage.models.StorageAccount.skuType()
  - com.azure.resourcemanager.storage.models.StorageAccount.systemAssignedManagedServiceIdentityPrincipalId()
  - com.azure.resourcemanager.storage.models.StorageAccount.systemAssignedManagedServiceIdentityTenantId()
  langs:
  - java
  name: StorageAccount
  nameWithType: StorageAccount
  fullName: com.azure.resourcemanager.storage.models.StorageAccount
  type: Interface
  package: com.azure.resourcemanager.storage.models
  summary: An immutable client-side representation of an Azure storage account.
  syntax:
    content: public interface StorageAccount extends GroupableResource<StorageManager,StorageAccountInner>, Refreshable<StorageAccount>, Updatable<StorageAccount.Update>
  implements:
  - com.azure.resourcemanager.resources.fluentcore.arm.models.GroupableResource<com.azure.resourcemanager.storage.StorageManager,com.azure.resourcemanager.storage.fluent.inner.StorageAccountInner>
  - com.azure.resourcemanager.resources.fluentcore.model.Refreshable<com.azure.resourcemanager.storage.models.StorageAccount>
  - com.azure.resourcemanager.resources.fluentcore.model.Updatable<com.azure.resourcemanager.storage.models.StorageAccount.Update>
- uid: com.azure.resourcemanager.storage.models.StorageAccount.accessTier()
  id: accessTier()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: accessTier()
  nameWithType: StorageAccount.accessTier()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.accessTier()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.accessTier*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract AccessTier accessTier()
    return:
      type: com.azure.resourcemanager.storage.models.AccessTier
      description: >-
        access tier used for billing. Access tier cannot be changed more than once every 7 days (168 hours).
             Access tier cannot be set for StandardLRS, StandardGRS, StandardRAGRS, or PremiumLRS account types. Possible
             values include: 'Hot', 'Cool'.
- uid: com.azure.resourcemanager.storage.models.StorageAccount.accountStatuses()
  id: accountStatuses()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: accountStatuses()
  nameWithType: StorageAccount.accountStatuses()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.accountStatuses()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.accountStatuses*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract AccountStatuses accountStatuses()
    return:
      type: com.azure.resourcemanager.storage.models.AccountStatuses
      description: >-
        the status indicating whether the primary and secondary location of the storage account is available or
             unavailable. Possible values include: 'Available', 'Unavailable'
- uid: com.azure.resourcemanager.storage.models.StorageAccount.canAccessFromAzureServices()
  id: canAccessFromAzureServices()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: canAccessFromAzureServices()
  nameWithType: StorageAccount.canAccessFromAzureServices()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.canAccessFromAzureServices()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.canAccessFromAzureServices*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Checks storage account can be accessed from applications running on azure.
  syntax:
    content: public abstract boolean canAccessFromAzureServices()
    return:
      type: boolean
      description: true if storage can be accessed from application running on azure, false otherwise
- uid: com.azure.resourcemanager.storage.models.StorageAccount.canReadLogEntriesFromAnyNetwork()
  id: canReadLogEntriesFromAnyNetwork()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: canReadLogEntriesFromAnyNetwork()
  nameWithType: StorageAccount.canReadLogEntriesFromAnyNetwork()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.canReadLogEntriesFromAnyNetwork()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.canReadLogEntriesFromAnyNetwork*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Checks storage log entries can be read from any network.
  syntax:
    content: public abstract boolean canReadLogEntriesFromAnyNetwork()
    return:
      type: boolean
      description: true if storage log entries can be read from any network, false otherwise
- uid: com.azure.resourcemanager.storage.models.StorageAccount.canReadMetricsFromAnyNetwork()
  id: canReadMetricsFromAnyNetwork()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: canReadMetricsFromAnyNetwork()
  nameWithType: StorageAccount.canReadMetricsFromAnyNetwork()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.canReadMetricsFromAnyNetwork()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.canReadMetricsFromAnyNetwork*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Checks storage metrics can be read from any network.
  syntax:
    content: public abstract boolean canReadMetricsFromAnyNetwork()
    return:
      type: boolean
      description: true if storage metrics can be read from any network, false otherwise
- uid: com.azure.resourcemanager.storage.models.StorageAccount.creationTime()
  id: creationTime()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: creationTime()
  nameWithType: StorageAccount.creationTime()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.creationTime()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.creationTime*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract OffsetDateTime creationTime()
    return:
      type: java.time.OffsetDateTime
      description: the creation date and time of the storage account in UTC
- uid: com.azure.resourcemanager.storage.models.StorageAccount.customDomain()
  id: customDomain()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: customDomain()
  nameWithType: StorageAccount.customDomain()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.customDomain()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.customDomain*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract CustomDomain customDomain()
    return:
      type: com.azure.resourcemanager.storage.models.CustomDomain
      description: the user assigned custom domain assigned to this storage account
- uid: com.azure.resourcemanager.storage.models.StorageAccount.encryption()
  id: encryption()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: encryption()
  nameWithType: StorageAccount.encryption()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.encryption()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.encryption*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract Encryption encryption()
    return:
      type: com.azure.resourcemanager.storage.models.Encryption
      description: the encryption settings on the account.
- uid: com.azure.resourcemanager.storage.models.StorageAccount.encryptionKeySource()
  id: encryptionKeySource()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: encryptionKeySource()
  nameWithType: StorageAccount.encryptionKeySource()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.encryptionKeySource()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.encryptionKeySource*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract StorageAccountEncryptionKeySource encryptionKeySource()
    return:
      type: com.azure.resourcemanager.storage.models.StorageAccountEncryptionKeySource
      description: the source of the key used for encryption.
- uid: com.azure.resourcemanager.storage.models.StorageAccount.encryptionStatuses()
  id: encryptionStatuses()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: encryptionStatuses()
  nameWithType: StorageAccount.encryptionStatuses()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.encryptionStatuses()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.encryptionStatuses*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract Map<StorageService,StorageAccountEncryptionStatus> encryptionStatuses()
    return:
      type: java.util.Map<com.azure.resourcemanager.storage.models.StorageService,com.azure.resourcemanager.storage.models.StorageAccountEncryptionStatus>
      description: the encryption statuses indexed by storage service type.
- uid: com.azure.resourcemanager.storage.models.StorageAccount.endPoints()
  id: endPoints()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: endPoints()
  nameWithType: StorageAccount.endPoints()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.endPoints()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.endPoints*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract PublicEndpoints endPoints()
    return:
      type: com.azure.resourcemanager.storage.models.PublicEndpoints
      description: >-
        the URLs that are used to perform a retrieval of a public blob, queue or table object. Note that
             StandardZRS and PremiumLRS accounts only return the blob endpoint
- uid: com.azure.resourcemanager.storage.models.StorageAccount.getKeys()
  id: getKeys()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: getKeys()
  nameWithType: StorageAccount.getKeys()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.getKeys()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.getKeys*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Fetch the up-to-date access keys from Azure for this storage account.
  syntax:
    content: public abstract List<StorageAccountKey> getKeys()
    return:
      type: java.util.List<com.azure.resourcemanager.storage.models.StorageAccountKey>
      description: the access keys for this storage account
- uid: com.azure.resourcemanager.storage.models.StorageAccount.getKeysAsync()
  id: getKeysAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: getKeysAsync()
  nameWithType: StorageAccount.getKeysAsync()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.getKeysAsync()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.getKeysAsync*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Fetch the up-to-date access keys from Azure for this storage account asynchronously.
  syntax:
    content: public abstract Mono<List<StorageAccountKey>> getKeysAsync()
    return:
      type: reactor.core.publisher.Mono<java.util.List<com.azure.resourcemanager.storage.models.StorageAccountKey>>
      description: a representation of the deferred computation of this call, returning the access keys
- uid: com.azure.resourcemanager.storage.models.StorageAccount.ipAddressRangesWithAccess()
  id: ipAddressRangesWithAccess()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: ipAddressRangesWithAccess()
  nameWithType: StorageAccount.ipAddressRangesWithAccess()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.ipAddressRangesWithAccess()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.ipAddressRangesWithAccess*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract List<String> ipAddressRangesWithAccess()
    return:
      type: java.util.List<java.lang.String>
      description: the list of ip address ranges having access to the storage account.
- uid: com.azure.resourcemanager.storage.models.StorageAccount.ipAddressesWithAccess()
  id: ipAddressesWithAccess()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: ipAddressesWithAccess()
  nameWithType: StorageAccount.ipAddressesWithAccess()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.ipAddressesWithAccess()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.ipAddressesWithAccess*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract List<String> ipAddressesWithAccess()
    return:
      type: java.util.List<java.lang.String>
      description: the list of ip addresses having access to the storage account.
- uid: com.azure.resourcemanager.storage.models.StorageAccount.isAccessAllowedFromAllNetworks()
  id: isAccessAllowedFromAllNetworks()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: isAccessAllowedFromAllNetworks()
  nameWithType: StorageAccount.isAccessAllowedFromAllNetworks()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.isAccessAllowedFromAllNetworks()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.isAccessAllowedFromAllNetworks*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract boolean isAccessAllowedFromAllNetworks()
    return:
      type: boolean
      description: >-
        true if authenticated application from any network is allowed to access the storage account, false if
             only application from whitelisted network (subnet, ip address, ip address range) can access the storage
             account.
- uid: com.azure.resourcemanager.storage.models.StorageAccount.isAzureFilesAadIntegrationEnabled()
  id: isAzureFilesAadIntegrationEnabled()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: isAzureFilesAadIntegrationEnabled()
  nameWithType: StorageAccount.isAzureFilesAadIntegrationEnabled()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.isAzureFilesAadIntegrationEnabled()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.isAzureFilesAadIntegrationEnabled*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Checks whether Aad Integration is enabled for files on this storage account.
  syntax:
    content: public abstract boolean isAzureFilesAadIntegrationEnabled()
    return:
      type: boolean
      description: true if Aad integration is enabled, false otherwise
- uid: com.azure.resourcemanager.storage.models.StorageAccount.isHnsEnabled()
  id: isHnsEnabled()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: isHnsEnabled()
  nameWithType: StorageAccount.isHnsEnabled()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.isHnsEnabled()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.isHnsEnabled*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Checks whether Hns is enabled on this storage account.
  syntax:
    content: public abstract boolean isHnsEnabled()
    return:
      type: boolean
      description: true if Hns is enabled, false otherwise
- uid: com.azure.resourcemanager.storage.models.StorageAccount.isLargeFileSharesEnabled()
  id: isLargeFileSharesEnabled()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: isLargeFileSharesEnabled()
  nameWithType: StorageAccount.isLargeFileSharesEnabled()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.isLargeFileSharesEnabled()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.isLargeFileSharesEnabled*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Checks whether large file shares enabled on this storage account.
  syntax:
    content: public abstract boolean isLargeFileSharesEnabled()
    return:
      type: boolean
      description: true if large file shares is enabled, false otherwise
- uid: com.azure.resourcemanager.storage.models.StorageAccount.kind()
  id: kind()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: kind()
  nameWithType: StorageAccount.kind()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.kind()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.kind*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract Kind kind()
    return:
      type: com.azure.resourcemanager.storage.models.Kind
      description: the kind of the storage account. Possible values are 'Storage', 'BlobStorage'.
- uid: com.azure.resourcemanager.storage.models.StorageAccount.lastGeoFailoverTime()
  id: lastGeoFailoverTime()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: lastGeoFailoverTime()
  nameWithType: StorageAccount.lastGeoFailoverTime()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.lastGeoFailoverTime()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.lastGeoFailoverTime*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract OffsetDateTime lastGeoFailoverTime()
    return:
      type: java.time.OffsetDateTime
      description: >-
        the timestamp of the most recent instance of a failover to the secondary location. Only the most recent
             timestamp is retained. This element is not returned if there has never been a failover instance. Only
             available if the accountType is StandardGRS or StandardRAGRS
- uid: com.azure.resourcemanager.storage.models.StorageAccount.networkSubnetsWithAccess()
  id: networkSubnetsWithAccess()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: networkSubnetsWithAccess()
  nameWithType: StorageAccount.networkSubnetsWithAccess()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.networkSubnetsWithAccess()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.networkSubnetsWithAccess*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract List<String> networkSubnetsWithAccess()
    return:
      type: java.util.List<java.lang.String>
      description: the list of resource id of virtual network subnet having access to the storage account.
- uid: com.azure.resourcemanager.storage.models.StorageAccount.provisioningState()
  id: provisioningState()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: provisioningState()
  nameWithType: StorageAccount.provisioningState()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.provisioningState()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.provisioningState*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract ProvisioningState provisioningState()
    return:
      type: com.azure.resourcemanager.storage.models.ProvisioningState
      description: >-
        the status of the storage account at the time the operation was called. Possible values include:
             'Creating', 'ResolvingDNS', 'Succeeded'
- uid: com.azure.resourcemanager.storage.models.StorageAccount.regenerateKey(java.lang.String)
  id: regenerateKey(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: regenerateKey(String keyName)
  nameWithType: StorageAccount.regenerateKey(String keyName)
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.regenerateKey(String keyName)
  overload: com.azure.resourcemanager.storage.models.StorageAccount.regenerateKey*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Regenerates the access keys for this storage account.
  syntax:
    content: public abstract List<StorageAccountKey> regenerateKey(String keyName)
    parameters:
    - id: keyName
      type: java.lang.String
      description: if the key name
    return:
      type: java.util.List<com.azure.resourcemanager.storage.models.StorageAccountKey>
      description: the generated access keys for this storage account
- uid: com.azure.resourcemanager.storage.models.StorageAccount.regenerateKeyAsync(java.lang.String)
  id: regenerateKeyAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: regenerateKeyAsync(String keyName)
  nameWithType: StorageAccount.regenerateKeyAsync(String keyName)
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.regenerateKeyAsync(String keyName)
  overload: com.azure.resourcemanager.storage.models.StorageAccount.regenerateKeyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Regenerates the access keys for this storage account asynchronously.
  syntax:
    content: public abstract Mono<List<StorageAccountKey>> regenerateKeyAsync(String keyName)
    parameters:
    - id: keyName
      type: java.lang.String
      description: if the key name
    return:
      type: reactor.core.publisher.Mono<java.util.List<com.azure.resourcemanager.storage.models.StorageAccountKey>>
      description: a representation of the deferred computation of this call, returning the regenerated access key
- uid: com.azure.resourcemanager.storage.models.StorageAccount.skuType()
  id: skuType()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: skuType()
  nameWithType: StorageAccount.skuType()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.skuType()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.skuType*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract StorageAccountSkuType skuType()
    return:
      type: com.azure.resourcemanager.storage.models.StorageAccountSkuType
      description: the sku of this storage account.
- uid: com.azure.resourcemanager.storage.models.StorageAccount.systemAssignedManagedServiceIdentityPrincipalId()
  id: systemAssignedManagedServiceIdentityPrincipalId()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: systemAssignedManagedServiceIdentityPrincipalId()
  nameWithType: StorageAccount.systemAssignedManagedServiceIdentityPrincipalId()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.systemAssignedManagedServiceIdentityPrincipalId()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.systemAssignedManagedServiceIdentityPrincipalId*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract String systemAssignedManagedServiceIdentityPrincipalId()
    return:
      type: java.lang.String
      description: >-
        the Managed Service Identity specific Active Directory service principal ID assigned to the storage
             account.
- uid: com.azure.resourcemanager.storage.models.StorageAccount.systemAssignedManagedServiceIdentityTenantId()
  id: systemAssignedManagedServiceIdentityTenantId()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.StorageAccount
  langs:
  - java
  name: systemAssignedManagedServiceIdentityTenantId()
  nameWithType: StorageAccount.systemAssignedManagedServiceIdentityTenantId()
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.systemAssignedManagedServiceIdentityTenantId()
  overload: com.azure.resourcemanager.storage.models.StorageAccount.systemAssignedManagedServiceIdentityTenantId*
  type: Method
  package: com.azure.resourcemanager.storage.models
  syntax:
    content: public abstract String systemAssignedManagedServiceIdentityTenantId()
    return:
      type: java.lang.String
      description: the Managed Service Identity specific Active Directory tenant ID assigned to the storage account.
references:
- uid: com.azure.resourcemanager.storage.models.AccountStatuses
  name: AccountStatuses
  nameWithType: AccountStatuses
  fullName: com.azure.resourcemanager.storage.models.AccountStatuses
- uid: com.azure.resourcemanager.storage.models.StorageAccount.accountStatuses*
  name: accountStatuses
  nameWithType: StorageAccount.accountStatuses
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.accountStatuses
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.StorageAccountSkuType
  name: StorageAccountSkuType
  nameWithType: StorageAccountSkuType
  fullName: com.azure.resourcemanager.storage.models.StorageAccountSkuType
- uid: com.azure.resourcemanager.storage.models.StorageAccount.skuType*
  name: skuType
  nameWithType: StorageAccount.skuType
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.skuType
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.Kind
  name: Kind
  nameWithType: Kind
  fullName: com.azure.resourcemanager.storage.models.Kind
- uid: com.azure.resourcemanager.storage.models.StorageAccount.kind*
  name: kind
  nameWithType: StorageAccount.kind
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.kind
  package: com.azure.resourcemanager.storage.models
- uid: java.time.OffsetDateTime
  spec.java:
  - uid: java.time.OffsetDateTime
    name: OffsetDateTime
    fullName: java.time.OffsetDateTime
- uid: com.azure.resourcemanager.storage.models.StorageAccount.creationTime*
  name: creationTime
  nameWithType: StorageAccount.creationTime
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.creationTime
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.CustomDomain
  name: CustomDomain
  nameWithType: CustomDomain
  fullName: com.azure.resourcemanager.storage.models.CustomDomain
- uid: com.azure.resourcemanager.storage.models.StorageAccount.customDomain*
  name: customDomain
  nameWithType: StorageAccount.customDomain
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.customDomain
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.StorageAccount.lastGeoFailoverTime*
  name: lastGeoFailoverTime
  nameWithType: StorageAccount.lastGeoFailoverTime
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.lastGeoFailoverTime
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.ProvisioningState
  name: ProvisioningState
  nameWithType: ProvisioningState
  fullName: com.azure.resourcemanager.storage.models.ProvisioningState
- uid: com.azure.resourcemanager.storage.models.StorageAccount.provisioningState*
  name: provisioningState
  nameWithType: StorageAccount.provisioningState
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.provisioningState
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.PublicEndpoints
  name: PublicEndpoints
  nameWithType: PublicEndpoints
  fullName: com.azure.resourcemanager.storage.models.PublicEndpoints
- uid: com.azure.resourcemanager.storage.models.StorageAccount.endPoints*
  name: endPoints
  nameWithType: StorageAccount.endPoints
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.endPoints
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.Encryption
  name: Encryption
  nameWithType: Encryption
  fullName: com.azure.resourcemanager.storage.models.Encryption
- uid: com.azure.resourcemanager.storage.models.StorageAccount.encryption*
  name: encryption
  nameWithType: StorageAccount.encryption
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.encryption
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.StorageAccountEncryptionKeySource
  name: StorageAccountEncryptionKeySource
  nameWithType: StorageAccountEncryptionKeySource
  fullName: com.azure.resourcemanager.storage.models.StorageAccountEncryptionKeySource
- uid: com.azure.resourcemanager.storage.models.StorageAccount.encryptionKeySource*
  name: encryptionKeySource
  nameWithType: StorageAccount.encryptionKeySource
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.encryptionKeySource
  package: com.azure.resourcemanager.storage.models
- uid: java.util.Map<com.azure.resourcemanager.storage.models.StorageService,com.azure.resourcemanager.storage.models.StorageAccountEncryptionStatus>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.models.StorageService
    name: StorageService
    fullName: com.azure.resourcemanager.storage.models.StorageService
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.storage.models.StorageAccountEncryptionStatus
    name: StorageAccountEncryptionStatus
    fullName: com.azure.resourcemanager.storage.models.StorageAccountEncryptionStatus
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.models.StorageAccount.encryptionStatuses*
  name: encryptionStatuses
  nameWithType: StorageAccount.encryptionStatuses
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.encryptionStatuses
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.AccessTier
  name: AccessTier
  nameWithType: AccessTier
  fullName: com.azure.resourcemanager.storage.models.AccessTier
- uid: com.azure.resourcemanager.storage.models.StorageAccount.accessTier*
  name: accessTier
  nameWithType: StorageAccount.accessTier
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.accessTier
  package: com.azure.resourcemanager.storage.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.storage.models.StorageAccount.systemAssignedManagedServiceIdentityTenantId*
  name: systemAssignedManagedServiceIdentityTenantId
  nameWithType: StorageAccount.systemAssignedManagedServiceIdentityTenantId
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.systemAssignedManagedServiceIdentityTenantId
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.StorageAccount.systemAssignedManagedServiceIdentityPrincipalId*
  name: systemAssignedManagedServiceIdentityPrincipalId
  nameWithType: StorageAccount.systemAssignedManagedServiceIdentityPrincipalId
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.systemAssignedManagedServiceIdentityPrincipalId
  package: com.azure.resourcemanager.storage.models
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.resourcemanager.storage.models.StorageAccount.isAccessAllowedFromAllNetworks*
  name: isAccessAllowedFromAllNetworks
  nameWithType: StorageAccount.isAccessAllowedFromAllNetworks
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.isAccessAllowedFromAllNetworks
  package: com.azure.resourcemanager.storage.models
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.models.StorageAccount.networkSubnetsWithAccess*
  name: networkSubnetsWithAccess
  nameWithType: StorageAccount.networkSubnetsWithAccess
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.networkSubnetsWithAccess
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.StorageAccount.ipAddressesWithAccess*
  name: ipAddressesWithAccess
  nameWithType: StorageAccount.ipAddressesWithAccess
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.ipAddressesWithAccess
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.StorageAccount.ipAddressRangesWithAccess*
  name: ipAddressRangesWithAccess
  nameWithType: StorageAccount.ipAddressRangesWithAccess
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.ipAddressRangesWithAccess
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.StorageAccount.canReadLogEntriesFromAnyNetwork*
  name: canReadLogEntriesFromAnyNetwork
  nameWithType: StorageAccount.canReadLogEntriesFromAnyNetwork
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.canReadLogEntriesFromAnyNetwork
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.StorageAccount.canReadMetricsFromAnyNetwork*
  name: canReadMetricsFromAnyNetwork
  nameWithType: StorageAccount.canReadMetricsFromAnyNetwork
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.canReadMetricsFromAnyNetwork
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.StorageAccount.canAccessFromAzureServices*
  name: canAccessFromAzureServices
  nameWithType: StorageAccount.canAccessFromAzureServices
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.canAccessFromAzureServices
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.StorageAccount.isAzureFilesAadIntegrationEnabled*
  name: isAzureFilesAadIntegrationEnabled
  nameWithType: StorageAccount.isAzureFilesAadIntegrationEnabled
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.isAzureFilesAadIntegrationEnabled
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.StorageAccount.isHnsEnabled*
  name: isHnsEnabled
  nameWithType: StorageAccount.isHnsEnabled
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.isHnsEnabled
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.StorageAccount.isLargeFileSharesEnabled*
  name: isLargeFileSharesEnabled
  nameWithType: StorageAccount.isLargeFileSharesEnabled
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.isLargeFileSharesEnabled
  package: com.azure.resourcemanager.storage.models
- uid: java.util.List<com.azure.resourcemanager.storage.models.StorageAccountKey>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.models.StorageAccountKey
    name: StorageAccountKey
    fullName: com.azure.resourcemanager.storage.models.StorageAccountKey
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.models.StorageAccount.getKeys*
  name: getKeys
  nameWithType: StorageAccount.getKeys
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.getKeys
  package: com.azure.resourcemanager.storage.models
- uid: reactor.core.publisher.Mono<java.util.List<com.azure.resourcemanager.storage.models.StorageAccountKey>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.models.StorageAccountKey
    name: StorageAccountKey
    fullName: com.azure.resourcemanager.storage.models.StorageAccountKey
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.models.StorageAccount.getKeysAsync*
  name: getKeysAsync
  nameWithType: StorageAccount.getKeysAsync
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.getKeysAsync
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.StorageAccount.regenerateKey*
  name: regenerateKey
  nameWithType: StorageAccount.regenerateKey
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.regenerateKey
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.StorageAccount.regenerateKeyAsync*
  name: regenerateKeyAsync
  nameWithType: StorageAccount.regenerateKeyAsync
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.regenerateKeyAsync
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.resources.fluentcore.arm.models.GroupableResource<com.azure.resourcemanager.storage.StorageManager,com.azure.resourcemanager.storage.fluent.inner.StorageAccountInner>
  name: GroupableResource<StorageManager,StorageAccountInner>
  nameWithType: GroupableResource<StorageManager,StorageAccountInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.models.GroupableResource<com.azure.resourcemanager.storage.StorageManager,com.azure.resourcemanager.storage.fluent.inner.StorageAccountInner>
- uid: com.azure.resourcemanager.resources.fluentcore.model.Refreshable<com.azure.resourcemanager.storage.models.StorageAccount>
  name: Refreshable<StorageAccount>
  nameWithType: Refreshable<StorageAccount>
  fullName: com.azure.resourcemanager.resources.fluentcore.model.Refreshable<com.azure.resourcemanager.storage.models.StorageAccount>
- uid: com.azure.resourcemanager.resources.fluentcore.model.Updatable<com.azure.resourcemanager.storage.models.StorageAccount.Update>
  name: Updatable<StorageAccount.Update>
  nameWithType: Updatable<StorageAccount.Update>
  fullName: com.azure.resourcemanager.resources.fluentcore.model.Updatable<com.azure.resourcemanager.storage.models.StorageAccount.Update>
- uid: com.azure.resourcemanager.storage.models.StorageAccount.Definition
  name: StorageAccount.Definition
  nameWithType: StorageAccount.Definition
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.Definition
- uid: com.azure.resourcemanager.storage.models.StorageAccount.DefinitionStages
  name: StorageAccount.DefinitionStages
  nameWithType: StorageAccount.DefinitionStages
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.DefinitionStages
- uid: com.azure.resourcemanager.storage.models.StorageAccount.Update
  name: StorageAccount.Update
  nameWithType: StorageAccount.Update
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.Update
- uid: com.azure.resourcemanager.storage.models.StorageAccount.UpdateStages
  name: StorageAccount.UpdateStages
  nameWithType: StorageAccount.UpdateStages
  fullName: com.azure.resourcemanager.storage.models.StorageAccount.UpdateStages
- uid: com.azure.resourcemanager.storage.models.StorageService,com.azure.resourcemanager.storage.models.StorageAccountEncryptionStatus
  name: StorageService,StorageAccountEncryptionStatus
  nameWithType: StorageService,StorageAccountEncryptionStatus
  fullName: com.azure.resourcemanager.storage.models.StorageService,com.azure.resourcemanager.storage.models.StorageAccountEncryptionStatus
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.resourcemanager.storage.models.StorageAccountKey
  name: StorageAccountKey
  nameWithType: StorageAccountKey
  fullName: com.azure.resourcemanager.storage.models.StorageAccountKey
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.resourcemanager.storage.StorageManager,com.azure.resourcemanager.storage.fluent.inner.StorageAccountInner
  name: StorageManager,StorageAccountInner
  nameWithType: StorageManager,StorageAccountInner
  fullName: com.azure.resourcemanager.storage.StorageManager,com.azure.resourcemanager.storage.fluent.inner.StorageAccountInner
- uid: com.azure.resourcemanager.resources.fluentcore.arm.models.GroupableResource
  name: GroupableResource
  nameWithType: GroupableResource
  fullName: com.azure.resourcemanager.resources.fluentcore.arm.models.GroupableResource
- uid: com.azure.resourcemanager.resources.fluentcore.model.Refreshable
  name: Refreshable
  nameWithType: Refreshable
  fullName: com.azure.resourcemanager.resources.fluentcore.model.Refreshable
- uid: com.azure.resourcemanager.resources.fluentcore.model.Updatable
  name: Updatable
  nameWithType: Updatable
  fullName: com.azure.resourcemanager.resources.fluentcore.model.Updatable
