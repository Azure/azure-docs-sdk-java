### YamlMime:ManagedReference
items:
- uid: com.azure.core.implementation.annotation.HeaderParam
  id: HeaderParam
  parent: com.azure.core.implementation.annotation
  children:
  - com.azure.core.implementation.annotation.HeaderParam.value()
  href: com.azure.core.implementation.annotation.HeaderParam.yml
  langs:
  - java
  name: HeaderParam
  nameWithType: HeaderParam
  fullName: com.azure.core.implementation.annotation.HeaderParam
  type: Interface
  source:
    remote: &o0
      path: sdk/core/azure-core/src/main/java/com/azure/core/implementation/annotation/HeaderParam.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/core/azure-core/src/main/java/com/azure/core/implementation/annotation/HeaderParam.java
    startLine: 53
  package: com.azure.core.implementation.annotation
  summary: "<p>Replaces the header with the value of its target. The value specified here replaces headers specified statically in the <xref uid=\"com.azure.core.implementation.annotation.Headers\" data-throw-if-not-resolved=\"false\">Headers</xref>. If the parameter this annotation is attached to is a Map type, then this will be treated as a header collection. In that case each of the entries in the argument's map will be individual header values that use the value of this annotation as a prefix to their key/header name.</p>\r\n<p>\r\n  <b>Example 1:</b>\r\n</p>\r\n<p>\r\n  <pre>\r\n    <code>@PUT(\"{functionId}\") \r\n    </code>\r\n    <code>Mono&lt;RestResponseBase&lt;Headers, Body&gt;&gt; \r\n    </code>  createOrReplace((\"functionId\", encoded = true) String functionId,  FunctionInner function, (\"If-Match\") String ifMatch);</pre>\r\n</p>\r\n<p>\"If-Match: user passed value\" will show up as one of the headers.</p>\r\n<p>\r\n  <b>Example 2:</b>\r\n</p>\r\n<p>\r\n  <pre>\r\n    <code>@\r\n    </code> GET(\"subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces\")\r\n<code>Mono&lt;RestResponseBase&lt;Headers, Body&gt;&gt; \r\n    </code>  list((\"subscriptionId\") String subscriptionId, (\"accept-language\") String acceptLanguage, (\"User-Agent\") String userAgent);</pre>\r\n</p>\r\n<p>\"accept-language\" generated by the HTTP client will be overwritten by the user passed value.</p>\r\n<p>\r\n  <b>Example 3:</b>\r\n</p>\r\n<p>\r\n  <pre>\r\n    <code>@GET(\"subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces\") \r\n    </code>\r\n    <code>Mono&lt;RestResponseBase&lt;Headers, Body&gt;&gt; \r\n    </code>  list((\"subscriptionId\") String subscriptionId, (\"Authorization\") String token);</pre>\r\n</p>\r\n<p>The token parameter will replace the effect of any credentials in the HTTP pipeline.</p>\r\n<p>\r\n  <b>Example 4:</b>\r\n</p>\r\n<p>\r\n  <pre>\r\n    <code>@PUT(\"{containerName}/{blob}\") \r\n    </code>\r\n    <code>@ExpectedResponses({200}) \r\n    </code>\r\n    <code>Mono&lt;RestResponseBase&lt;BlobSetMetadataHeaders, Void&gt;&gt; setMetadata(@HostParam(\"url\") String url, @QueryParam(\"timeout\") Integer timeout, @HeaderParam(\"x-ms-meta-\") Map&lt;String, String&gt; metadata, @HeaderParam(\"x-ms-lease-id\") String leaseId, @HeaderParam(\"If-Modified-Since\") String ifModifiedSince, @HeaderParam(\"If-Unmodified-Since\") String ifUnmodifiedSince, @HeaderParam(\"If-Match\") String ifMatches, @HeaderParam(\"If-None-Match\") String ifNoneMatch, @HeaderParam(\"x-ms-version\") String version, @HeaderParam(\"x-ms-client-request-id\") String requestId, @QueryParam(\"comp\") String comp); \r\n    </code>\r\n  </pre>\r\n</p>\r\n<p>The metadata parameter will be expanded out so that each entry becomes \"x-ms-meta-{@literal &lt;entryKey&gt;}: {@literal &lt;entryValue&gt;}\".</p>"
  syntax:
    content: public interface HeaderParam
- uid: com.azure.core.implementation.annotation.HeaderParam.value()
  id: value()
  parent: com.azure.core.implementation.annotation.HeaderParam
  href: com.azure.core.implementation.annotation.HeaderParam.yml
  langs:
  - java
  name: value()
  nameWithType: HeaderParam.value()
  fullName: com.azure.core.implementation.annotation.HeaderParam.value()
  overload: com.azure.core.implementation.annotation.HeaderParam.value*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/implementation/annotation/HeaderParam.java
    startLine: 60
  package: com.azure.core.implementation.annotation
  summary: "<p>The name of the variable in the endpoint uri template which will be replaced with the value of the parameter annotated with this annotation. </p>"
  syntax:
    content: public String value()
    return:
      type: "26831127"
      description: <p>The name of the variable in the endpoint uri template which will be replaced with the value of the parameter annotated with this annotation. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.azure.core.implementation.annotation.HeaderParam.value*
  name: value
  nameWithType: HeaderParam.value
  fullName: com.azure.core.implementation.annotation.HeaderParam.value
  package: com.azure.core.implementation.annotation
- uid: com.azure.core.implementation.annotation.Headers
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.Headers.yml
  name: Headers
  nameWithType: Headers
  fullName: com.azure.core.implementation.annotation.Headers
  type: Interface
  summary: "<p>POST(\"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/images/getEntityTypeImageUploadUrl\") void getUploadUrlForEntityType((\"resourceGroupName\") String resourceGroupName, (\"hubName\") String hubName, (\"subscriptionId\") String subscriptionId,  GetImageUploadUrlInputInner parameters); </p>"
  syntax:
    content: public interface Headers
