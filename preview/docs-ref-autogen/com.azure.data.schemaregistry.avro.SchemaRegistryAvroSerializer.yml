### YamlMime:ManagedReference
items:
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer
  id: SchemaRegistryAvroSerializer
  artifact: com.azure:azure-data-schemaregistry-avro:1.0.0-beta.3
  parent: com.azure.data.schemaregistry.avro
  children:
  - com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.<T>deserialize(java.io.InputStream,com.azure.core.util.serializer.TypeReference<T>)
  - com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.<T>deserializeAsync(java.io.InputStream,com.azure.core.util.serializer.TypeReference<T>)
  - com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.serialize(java.io.OutputStream,java.lang.Object)
  - com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.serializeAsync(java.io.OutputStream,java.lang.Object)
  langs:
  - java
  name: SchemaRegistryAvroSerializer
  nameWithType: SchemaRegistryAvroSerializer
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer
  type: Class
  package: com.azure.data.schemaregistry.avro
  summary: Schema Registry-based serializer implementation for Avro data format.
  syntax:
    content: public final class SchemaRegistryAvroSerializer implements ObjectSerializer
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.core.util.serializer.ObjectSerializer
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.<T>deserialize(java.io.InputStream,com.azure.core.util.serializer.TypeReference<T>)
  id: <T>deserialize(java.io.InputStream,com.azure.core.util.serializer.TypeReference<T>)
  artifact: com.azure:azure-data-schemaregistry-avro:1.0.0-beta.3
  parent: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer
  langs:
  - java
  name: <T>deserialize(InputStream stream, TypeReference<T> typeReference)
  nameWithType: SchemaRegistryAvroSerializer.<T>deserialize(InputStream stream, TypeReference<T> typeReference)
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.<T>deserialize(InputStream stream, TypeReference<T> typeReference)
  overload: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.deserialize*
  type: Method
  package: com.azure.data.schemaregistry.avro
  syntax:
    content: public T <T>deserialize(InputStream stream, TypeReference<T> typeReference)
    parameters:
    - id: stream
      type: java.io.InputStream
    - id: typeReference
      type: com.azure.core.util.serializer.TypeReference<T>
    return:
      type: T
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.<T>deserializeAsync(java.io.InputStream,com.azure.core.util.serializer.TypeReference<T>)
  id: <T>deserializeAsync(java.io.InputStream,com.azure.core.util.serializer.TypeReference<T>)
  artifact: com.azure:azure-data-schemaregistry-avro:1.0.0-beta.3
  parent: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer
  langs:
  - java
  name: <T>deserializeAsync(InputStream stream, TypeReference<T> typeReference)
  nameWithType: SchemaRegistryAvroSerializer.<T>deserializeAsync(InputStream stream, TypeReference<T> typeReference)
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.<T>deserializeAsync(InputStream stream, TypeReference<T> typeReference)
  overload: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.deserializeAsync*
  type: Method
  package: com.azure.data.schemaregistry.avro
  syntax:
    content: public Mono<T> <T>deserializeAsync(InputStream stream, TypeReference<T> typeReference)
    parameters:
    - id: stream
      type: java.io.InputStream
    - id: typeReference
      type: com.azure.core.util.serializer.TypeReference<T>
    return:
      type: reactor.core.publisher.Mono<T>
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.SchemaRegistryAvroSerializer(com.azure.data.schemaregistry.SchemaRegistryAsyncClient,com.azure.data.schemaregistry.avro.AvroSchemaRegistryUtils,java.lang.String,java.lang.Boolean)
  id: SchemaRegistryAvroSerializer(com.azure.data.schemaregistry.SchemaRegistryAsyncClient,com.azure.data.schemaregistry.avro.AvroSchemaRegistryUtils,java.lang.String,java.lang.Boolean)
  artifact: com.azure:azure-data-schemaregistry-avro:1.0.0-beta.3
  parent: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer
  langs:
  - java
  name: SchemaRegistryAvroSerializer(SchemaRegistryAsyncClient registryClient, AvroSchemaRegistryUtils codec, String schemaGroup, Boolean autoRegisterSchemas)
  nameWithType: SchemaRegistryAvroSerializer.SchemaRegistryAvroSerializer(SchemaRegistryAsyncClient registryClient, AvroSchemaRegistryUtils codec, String schemaGroup, Boolean autoRegisterSchemas)
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.SchemaRegistryAvroSerializer(SchemaRegistryAsyncClient registryClient, AvroSchemaRegistryUtils codec, String schemaGroup, Boolean autoRegisterSchemas)
  overload: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.SchemaRegistryAvroSerializer*
  type: Constructor
  package: com.azure.data.schemaregistry.avro
  syntax:
    content: " SchemaRegistryAvroSerializer(SchemaRegistryAsyncClient registryClient, AvroSchemaRegistryUtils codec, String schemaGroup, Boolean autoRegisterSchemas)"
    parameters:
    - id: registryClient
      type: com.azure.data.schemaregistry.SchemaRegistryAsyncClient
    - id: codec
      type: com.azure.data.schemaregistry.avro.AvroSchemaRegistryUtils
    - id: schemaGroup
      type: java.lang.String
    - id: autoRegisterSchemas
      type: java.lang.Boolean
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.serialize(java.io.OutputStream,java.lang.Object)
  id: serialize(java.io.OutputStream,java.lang.Object)
  artifact: com.azure:azure-data-schemaregistry-avro:1.0.0-beta.3
  parent: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer
  langs:
  - java
  name: serialize(OutputStream outputStream, Object value)
  nameWithType: SchemaRegistryAvroSerializer.serialize(OutputStream outputStream, Object value)
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.serialize(OutputStream outputStream, Object value)
  overload: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.serialize*
  type: Method
  package: com.azure.data.schemaregistry.avro
  syntax:
    content: public void serialize(OutputStream outputStream, Object value)
    parameters:
    - id: outputStream
      type: java.io.OutputStream
    - id: value
      type: java.lang.Object
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.serializeAsync(java.io.OutputStream,java.lang.Object)
  id: serializeAsync(java.io.OutputStream,java.lang.Object)
  artifact: com.azure:azure-data-schemaregistry-avro:1.0.0-beta.3
  parent: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer
  langs:
  - java
  name: serializeAsync(OutputStream outputStream, Object object)
  nameWithType: SchemaRegistryAvroSerializer.serializeAsync(OutputStream outputStream, Object object)
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.serializeAsync(OutputStream outputStream, Object object)
  overload: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.serializeAsync*
  type: Method
  package: com.azure.data.schemaregistry.avro
  syntax:
    content: public Mono<Void> serializeAsync(OutputStream outputStream, Object object)
    parameters:
    - id: outputStream
      type: java.io.OutputStream
    - id: object
      type: java.lang.Object
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
references:
- uid: com.azure.data.schemaregistry.SchemaRegistryAsyncClient
  spec.java:
  - uid: com.azure.data.schemaregistry.SchemaRegistryAsyncClient
    name: SchemaRegistryAsyncClient
    fullName: com.azure.data.schemaregistry.SchemaRegistryAsyncClient
- uid: com.azure.data.schemaregistry.avro.AvroSchemaRegistryUtils
  spec.java:
  - uid: com.azure.data.schemaregistry.avro.AvroSchemaRegistryUtils
    name: AvroSchemaRegistryUtils
    fullName: com.azure.data.schemaregistry.avro.AvroSchemaRegistryUtils
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.SchemaRegistryAvroSerializer*
  name: SchemaRegistryAvroSerializer
  nameWithType: SchemaRegistryAvroSerializer.SchemaRegistryAvroSerializer
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.SchemaRegistryAvroSerializer
  package: com.azure.data.schemaregistry.avro
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: com.azure.core.util.serializer.TypeReference<T>
  spec.java:
  - uid: com.azure.core.util.serializer.TypeReference
    name: TypeReference
    fullName: com.azure.core.util.serializer.TypeReference
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.deserialize*
  name: <T>deserialize
  nameWithType: SchemaRegistryAvroSerializer.<T>deserialize
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.<T>deserialize
  package: com.azure.data.schemaregistry.avro
- uid: reactor.core.publisher.Mono<T>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.deserializeAsync*
  name: <T>deserializeAsync
  nameWithType: SchemaRegistryAvroSerializer.<T>deserializeAsync
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.<T>deserializeAsync
  package: com.azure.data.schemaregistry.avro
- uid: java.io.OutputStream
  spec.java:
  - uid: java.io.OutputStream
    name: OutputStream
    fullName: java.io.OutputStream
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.serialize*
  name: serialize
  nameWithType: SchemaRegistryAvroSerializer.serialize
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.serialize
  package: com.azure.data.schemaregistry.avro
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.serializeAsync*
  name: serializeAsync
  nameWithType: SchemaRegistryAvroSerializer.serializeAsync
  fullName: com.azure.data.schemaregistry.avro.SchemaRegistryAvroSerializer.serializeAsync
  package: com.azure.data.schemaregistry.avro
- uid: com.azure.core.util.serializer.ObjectSerializer
  name: ObjectSerializer
  nameWithType: ObjectSerializer
  fullName: com.azure.core.util.serializer.ObjectSerializer
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.util.serializer.TypeReference
  name: TypeReference
  nameWithType: TypeReference
  fullName: com.azure.core.util.serializer.TypeReference
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
