### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Multimaps.asMap*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>asMap"
name: "<K,V>asMap"
nameWithType: "Multimaps.<K,V>asMap"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>asMap(com.azure.cosmos.implementation.guava25.collect.ListMultimap<K,V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>asMap(ListMultimap<K,V> multimap)"
  name: "<K,V>asMap(ListMultimap<K,V> multimap)"
  nameWithType: "Multimaps.<K,V>asMap(ListMultimap<K,V> multimap)"
  summary: "Returns <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ListMultimap.asMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"multimap.asMap()\"></xref>, with its type corrected from `Map>` to `Map>`."
  parameters:
  - name: "multimap"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ListMultimap?alt=com.azure.cosmos.implementation.guava25.collect.ListMultimap&text=ListMultimap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Map<K,List<V>> <K,V>asMap(ListMultimap<K,V> multimap)"
  returns:
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>asMap(com.azure.cosmos.implementation.guava25.collect.Multimap<K,V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>asMap(Multimap<K,V> multimap)"
  name: "<K,V>asMap(Multimap<K,V> multimap)"
  nameWithType: "Multimaps.<K,V>asMap(Multimap<K,V> multimap)"
  summary: "Returns <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multimap.asMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"multimap.asMap()\"></xref>. This is provided for parity with the other more strongly-typed `asMap()` implementations."
  parameters:
  - name: "multimap"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Multimap?alt=com.azure.cosmos.implementation.guava25.collect.Multimap&text=Multimap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Map<K,Collection<V>> <K,V>asMap(Multimap<K,V> multimap)"
  returns:
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>asMap(com.azure.cosmos.implementation.guava25.collect.SetMultimap<K,V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>asMap(SetMultimap<K,V> multimap)"
  name: "<K,V>asMap(SetMultimap<K,V> multimap)"
  nameWithType: "Multimaps.<K,V>asMap(SetMultimap<K,V> multimap)"
  summary: "Returns <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SetMultimap.asMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"multimap.asMap()\"></xref>, with its type corrected from `Map>` to `Map>`."
  parameters:
  - name: "multimap"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.SetMultimap?alt=com.azure.cosmos.implementation.guava25.collect.SetMultimap&text=SetMultimap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Map<K,Set<V>> <K,V>asMap(SetMultimap<K,V> multimap)"
  returns:
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>asMap(com.azure.cosmos.implementation.guava25.collect.SortedSetMultimap<K,V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>asMap(SortedSetMultimap<K,V> multimap)"
  name: "<K,V>asMap(SortedSetMultimap<K,V> multimap)"
  nameWithType: "Multimaps.<K,V>asMap(SortedSetMultimap<K,V> multimap)"
  summary: "Returns <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SortedSetMultimap.asMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"multimap.asMap()\"></xref>, with its type corrected from `Map>` to `Map>`."
  parameters:
  - name: "multimap"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.SortedSetMultimap?alt=com.azure.cosmos.implementation.guava25.collect.SortedSetMultimap&text=SortedSetMultimap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Map<K,SortedSet<V>> <K,V>asMap(SortedSetMultimap<K,V> multimap)"
  returns:
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.util.SortedSet?alt=java.util.SortedSet&text=SortedSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
