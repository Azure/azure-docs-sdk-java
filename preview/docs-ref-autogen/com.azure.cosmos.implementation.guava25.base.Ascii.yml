### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.base.Ascii
  id: Ascii
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base
  children:
  - com.azure.cosmos.implementation.guava25.base.Ascii.ACK
  - com.azure.cosmos.implementation.guava25.base.Ascii.BEL
  - com.azure.cosmos.implementation.guava25.base.Ascii.BS
  - com.azure.cosmos.implementation.guava25.base.Ascii.CAN
  - com.azure.cosmos.implementation.guava25.base.Ascii.CR
  - com.azure.cosmos.implementation.guava25.base.Ascii.DC1
  - com.azure.cosmos.implementation.guava25.base.Ascii.DC2
  - com.azure.cosmos.implementation.guava25.base.Ascii.DC3
  - com.azure.cosmos.implementation.guava25.base.Ascii.DC4
  - com.azure.cosmos.implementation.guava25.base.Ascii.DEL
  - com.azure.cosmos.implementation.guava25.base.Ascii.DLE
  - com.azure.cosmos.implementation.guava25.base.Ascii.EM
  - com.azure.cosmos.implementation.guava25.base.Ascii.ENQ
  - com.azure.cosmos.implementation.guava25.base.Ascii.EOT
  - com.azure.cosmos.implementation.guava25.base.Ascii.ESC
  - com.azure.cosmos.implementation.guava25.base.Ascii.ETB
  - com.azure.cosmos.implementation.guava25.base.Ascii.ETX
  - com.azure.cosmos.implementation.guava25.base.Ascii.FF
  - com.azure.cosmos.implementation.guava25.base.Ascii.FS
  - com.azure.cosmos.implementation.guava25.base.Ascii.GS
  - com.azure.cosmos.implementation.guava25.base.Ascii.HT
  - com.azure.cosmos.implementation.guava25.base.Ascii.LF
  - com.azure.cosmos.implementation.guava25.base.Ascii.MAX
  - com.azure.cosmos.implementation.guava25.base.Ascii.MIN
  - com.azure.cosmos.implementation.guava25.base.Ascii.NAK
  - com.azure.cosmos.implementation.guava25.base.Ascii.NL
  - com.azure.cosmos.implementation.guava25.base.Ascii.NUL
  - com.azure.cosmos.implementation.guava25.base.Ascii.RS
  - com.azure.cosmos.implementation.guava25.base.Ascii.SI
  - com.azure.cosmos.implementation.guava25.base.Ascii.SO
  - com.azure.cosmos.implementation.guava25.base.Ascii.SOH
  - com.azure.cosmos.implementation.guava25.base.Ascii.SP
  - com.azure.cosmos.implementation.guava25.base.Ascii.SPACE
  - com.azure.cosmos.implementation.guava25.base.Ascii.STX
  - com.azure.cosmos.implementation.guava25.base.Ascii.SUB
  - com.azure.cosmos.implementation.guava25.base.Ascii.SYN
  - com.azure.cosmos.implementation.guava25.base.Ascii.US
  - com.azure.cosmos.implementation.guava25.base.Ascii.VT
  - com.azure.cosmos.implementation.guava25.base.Ascii.XOFF
  - com.azure.cosmos.implementation.guava25.base.Ascii.XON
  - com.azure.cosmos.implementation.guava25.base.Ascii.equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)
  - com.azure.cosmos.implementation.guava25.base.Ascii.isLowerCase(char)
  - com.azure.cosmos.implementation.guava25.base.Ascii.isUpperCase(char)
  - com.azure.cosmos.implementation.guava25.base.Ascii.toLowerCase(char)
  - com.azure.cosmos.implementation.guava25.base.Ascii.toLowerCase(java.lang.CharSequence)
  - com.azure.cosmos.implementation.guava25.base.Ascii.toLowerCase(java.lang.String)
  - com.azure.cosmos.implementation.guava25.base.Ascii.toUpperCase(char)
  - com.azure.cosmos.implementation.guava25.base.Ascii.toUpperCase(java.lang.CharSequence)
  - com.azure.cosmos.implementation.guava25.base.Ascii.toUpperCase(java.lang.String)
  - com.azure.cosmos.implementation.guava25.base.Ascii.truncate(java.lang.CharSequence,int,java.lang.String)
  langs:
  - java
  name: Ascii
  nameWithType: Ascii
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii
  type: Class
  package: com.azure.cosmos.implementation.guava25.base
  summary: >-
    Static methods pertaining to ASCII characters (those in the range of values `0x00` through `0x7F`), and to strings containing such characters.


    ASCII utilities also exist in other classes of this package:

     *  <xref uid="com.azure.cosmos.implementation.guava25.base.Charsets.US_ASCII" data-throw-if-not-resolved="false">Charsets#US_ASCII</xref> specifies the `Charset` of ASCII characters.
     *  <xref uid="com.azure.cosmos.implementation.guava25.base.CharMatcher.ascii*" data-throw-if-not-resolved="false">CharMatcher#ascii</xref> matches ASCII characters and provides text processing methods which operate only on the ASCII characters of a string.
  syntax:
    content: public final class Ascii
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.ACK
  id: ACK
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: ACK
  nameWithType: Ascii.ACK
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.ACK
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Acknowledge: A communication control character transmitted by a receiver as an affirmative response to a sender.'
  syntax:
    content: public static final byte ACK
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.Ascii()
  id: Ascii()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: Ascii()
  nameWithType: Ascii.Ascii()
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.Ascii()
  overload: com.azure.cosmos.implementation.guava25.base.Ascii.Ascii*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.base
  syntax:
    content: private Ascii()
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.BEL
  id: BEL
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: BEL
  nameWithType: Ascii.BEL
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.BEL
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: "Bell ('\\\\a'): A character for use when there is a need to call for human attention. It may control alarm or attention devices."
  syntax:
    content: public static final byte BEL
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.BS
  id: BS
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: BS
  nameWithType: Ascii.BS
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.BS
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: "Backspace ('\\\\b'): A format effector which controls the movement of the printing position one printing space backward on the same printing line. (Applicable also to display devices.)"
  syntax:
    content: public static final byte BS
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.CAN
  id: CAN
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: CAN
  nameWithType: Ascii.CAN
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.CAN
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Cancel: A control character used to indicate that the data with which it is sent is in error or is to be disregarded.'
  syntax:
    content: public static final byte CAN
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.CR
  id: CR
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: CR
  nameWithType: Ascii.CR
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.CR
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: "Carriage Return ('\\\\r'): A format effector which controls the movement of the printing position to the first printing position on the same printing line. (Applicable also to display devices.)"
  syntax:
    content: public static final byte CR
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.DC1
  id: DC1
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: DC1
  nameWithType: Ascii.DC1
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.DC1
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: Device Control 1. Characters for the control of ancillary devices associated with data processing or telecommunication systems, more especially switching devices "on" or "off." (If a single "stop" control is required to interrupt or turn off ancillary devices, DC4 is the preferred assignment.)
  syntax:
    content: public static final byte DC1
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.DC2
  id: DC2
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: DC2
  nameWithType: Ascii.DC2
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.DC2
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: Device Control 2. Characters for the control of ancillary devices associated with data processing or telecommunication systems, more especially switching devices "on" or "off." (If a single "stop" control is required to interrupt or turn off ancillary devices, DC4 is the preferred assignment.)
  syntax:
    content: public static final byte DC2
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.DC3
  id: DC3
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: DC3
  nameWithType: Ascii.DC3
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.DC3
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: Device Control 3. Characters for the control of ancillary devices associated with data processing or telecommunication systems, more especially switching devices "on" or "off." (If a single "stop" control is required to interrupt or turn off ancillary devices, DC4 is the preferred assignment.)
  syntax:
    content: public static final byte DC3
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.DC4
  id: DC4
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: DC4
  nameWithType: Ascii.DC4
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.DC4
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: Device Control 4. Characters for the control of ancillary devices associated with data processing or telecommunication systems, more especially switching devices "on" or "off." (If a single "stop" control is required to interrupt or turn off ancillary devices, DC4 is the preferred assignment.)
  syntax:
    content: public static final byte DC4
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.DEL
  id: DEL
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: DEL
  nameWithType: Ascii.DEL
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.DEL
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Delete: This character is used primarily to "erase" or "obliterate" erroneous or unwanted characters in perforated tape.'
  syntax:
    content: public static final byte DEL
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.DLE
  id: DLE
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: DLE
  nameWithType: Ascii.DLE
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.DLE
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Data Link Escape: A communication control character which will change the meaning of a limited number of contiguously following characters. It is used exclusively to provide supplementary controls in data communication networks.'
  syntax:
    content: public static final byte DLE
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.EM
  id: EM
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: EM
  nameWithType: Ascii.EM
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.EM
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'End of Medium: A control character associated with the sent data which may be used to identify the physical end of the medium, or the end of the used, or wanted, portion of information recorded on a medium. (The position of this character does not necessarily correspond to the physical end of the medium.)'
  syntax:
    content: public static final byte EM
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.ENQ
  id: ENQ
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: ENQ
  nameWithType: Ascii.ENQ
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.ENQ
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Enquiry: A communication control character used in data communication systems as a request for a response from a remote station. It may be used as a "Who Are You" (WRU) to obtain identification, or may be used to obtain station status, or both.'
  syntax:
    content: public static final byte ENQ
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.EOT
  id: EOT
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: EOT
  nameWithType: Ascii.EOT
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.EOT
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'End of Transmission: A communication control character used to indicate the conclusion of a transmission, which may have contained one or more texts and any associated headings.'
  syntax:
    content: public static final byte EOT
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.ESC
  id: ESC
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: ESC
  nameWithType: Ascii.ESC
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.ESC
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Escape: A control character intended to provide code extension (supplementary characters) in general information interchange. The Escape character itself is a prefix affecting the interpretation of a limited number of contiguously following characters.'
  syntax:
    content: public static final byte ESC
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.ETB
  id: ETB
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: ETB
  nameWithType: Ascii.ETB
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.ETB
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'End of Transmission Block: A communication control character used to indicate the end of a block of data for communication purposes. ETB is used for blocking data where the block structure is not necessarily related to the processing format.'
  syntax:
    content: public static final byte ETB
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.ETX
  id: ETX
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: ETX
  nameWithType: Ascii.ETX
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.ETX
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'End of Text: A communication control character used to terminate a sequence of characters started with STX and transmitted as an entity.'
  syntax:
    content: public static final byte ETX
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.FF
  id: FF
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: FF
  nameWithType: Ascii.FF
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.FF
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: "Form Feed ('\\\\f'): A format effector which controls the movement of the printing position to the first pre-determined printing line on the next form or page. (Applicable also to display devices.)"
  syntax:
    content: public static final byte FF
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.FS
  id: FS
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: FS
  nameWithType: Ascii.FS
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.FS
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'File Separator: These four information separators may be used within data in optional fashion, except that their hierarchical relationship shall be: FS is the most inclusive, then GS, then RS, and US is least inclusive. (The content and length of a File, Group, Record, or Unit are not specified.)'
  syntax:
    content: public static final byte FS
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.GS
  id: GS
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: GS
  nameWithType: Ascii.GS
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.GS
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Group Separator: These four information separators may be used within data in optional fashion, except that their hierarchical relationship shall be: FS is the most inclusive, then GS, then RS, and US is least inclusive. (The content and length of a File, Group, Record, or Unit are not specified.)'
  syntax:
    content: public static final byte GS
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.HT
  id: HT
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: HT
  nameWithType: Ascii.HT
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.HT
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: "Horizontal Tabulation ('\\\\t'): A format effector which controls the movement of the printing position to the next in a series of predetermined positions along the printing line. (Applicable also to display devices and the skip function on punched cards.)"
  syntax:
    content: public static final byte HT
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.LF
  id: LF
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: LF
  nameWithType: Ascii.LF
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.LF
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: "Line Feed ('\\\\n'): A format effector which controls the movement of the printing position to the next printing line. (Applicable also to display devices.) Where appropriate, this character may have the meaning \"New Line\" (NL), a format effector which controls the movement of the printing point to the first printing position on the next printing line. Use of this convention requires agreement between sender and recipient of data."
  syntax:
    content: public static final byte LF
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.MAX
  id: MAX
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: MAX
  nameWithType: Ascii.MAX
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.MAX
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: The maximum value of an ASCII character.
  syntax:
    content: public static final char MAX
    return:
      type: char
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.MIN
  id: MIN
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: MIN
  nameWithType: Ascii.MIN
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.MIN
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: The minimum value of an ASCII character.
  syntax:
    content: public static final char MIN
    return:
      type: char
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.NAK
  id: NAK
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: NAK
  nameWithType: Ascii.NAK
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.NAK
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Negative Acknowledge: A communication control character transmitted by a receiver as a negative response to the sender.'
  syntax:
    content: public static final byte NAK
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.NL
  id: NL
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: NL
  nameWithType: Ascii.NL
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.NL
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: Alternate name for <xref uid="com.azure.cosmos.implementation.guava25.base.Ascii.LF" data-throw-if-not-resolved="false">#LF</xref>. (`LF` is preferred.)
  syntax:
    content: public static final byte NL
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.NUL
  id: NUL
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: NUL
  nameWithType: Ascii.NUL
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.NUL
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: >-
    Null ('\\0'): The all-zeros character which may serve to accomplish time fill and media fill. Normally used as a C string terminator.


    Although RFC 20 names this as "Null", note that it is distinct from the C/C++ "NULL" pointer.
  syntax:
    content: public static final byte NUL
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.RS
  id: RS
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: RS
  nameWithType: Ascii.RS
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.RS
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Record Separator: These four information separators may be used within data in optional fashion, except that their hierarchical relationship shall be: FS is the most inclusive, then GS, then RS, and US is least inclusive. (The content and length of a File, Group, Record, or Unit are not specified.)'
  syntax:
    content: public static final byte RS
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.SI
  id: SI
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: SI
  nameWithType: Ascii.SI
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.SI
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Shift In: A control character indicating that the code combinations which follow shall be interpreted according to the standard code table.'
  syntax:
    content: public static final byte SI
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.SO
  id: SO
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: SO
  nameWithType: Ascii.SO
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.SO
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Shift Out: A control character indicating that the code combinations which follow shall be interpreted as outside of the character set of the standard code table until a Shift In character is reached.'
  syntax:
    content: public static final byte SO
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.SOH
  id: SOH
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: SOH
  nameWithType: Ascii.SOH
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.SOH
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Start of Heading: A communication control character used at the beginning of a sequence of characters which constitute a machine-sensible address or routing information. Such a sequence is referred to as the "heading." An STX character has the effect of terminating a heading.'
  syntax:
    content: public static final byte SOH
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.SP
  id: SP
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: SP
  nameWithType: Ascii.SP
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.SP
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Space: A normally non-printing graphic character used to separate words. It is also a format effector which controls the movement of the printing position, one printing position forward. (Applicable also to display devices.)'
  syntax:
    content: public static final byte SP
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.SPACE
  id: SPACE
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: SPACE
  nameWithType: Ascii.SPACE
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.SPACE
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: Alternate name for <xref uid="com.azure.cosmos.implementation.guava25.base.Ascii.SP" data-throw-if-not-resolved="false">#SP</xref>.
  syntax:
    content: public static final byte SPACE
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.STX
  id: STX
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: STX
  nameWithType: Ascii.STX
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.STX
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Start of Text: A communication control character which precedes a sequence of characters that is to be treated as an entity and entirely transmitted through to the ultimate destination. Such a sequence is referred to as "text." STX may be used to terminate a sequence of characters started by SOH.'
  syntax:
    content: public static final byte STX
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.SUB
  id: SUB
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: SUB
  nameWithType: Ascii.SUB
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.SUB
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Substitute: A character that may be substituted for a character which is determined to be invalid or in error.'
  syntax:
    content: public static final byte SUB
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.SYN
  id: SYN
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: SYN
  nameWithType: Ascii.SYN
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.SYN
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Synchronous Idle: A communication control character used by a synchronous transmission system in the absence of any other character to provide a signal from which synchronism may be achieved or retained.'
  syntax:
    content: public static final byte SYN
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.US
  id: US
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: US
  nameWithType: Ascii.US
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.US
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Unit Separator: These four information separators may be used within data in optional fashion, except that their hierarchical relationship shall be: FS is the most inclusive, then GS, then RS, and US is least inclusive. (The content and length of a File, Group, Record, or Unit are not specified.)'
  syntax:
    content: public static final byte US
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.VT
  id: VT
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: VT
  nameWithType: Ascii.VT
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.VT
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: "Vertical Tabulation ('\\\\v'): A format effector which controls the movement of the printing position to the next in a series of predetermined printing lines. (Applicable also to display devices.)"
  syntax:
    content: public static final byte VT
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.XOFF
  id: XOFF
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: XOFF
  nameWithType: Ascii.XOFF
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.XOFF
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: Transmission off. See <xref uid="com.azure.cosmos.implementation.guava25.base.Ascii.XON" data-throw-if-not-resolved="false">#XON</xref> for explanation.
  syntax:
    content: public static final byte XOFF
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.XON
  id: XON
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: XON
  nameWithType: Ascii.XON
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.XON
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: 'Transmission On: Although originally defined as DC1, this ASCII control character is now better known as the XON code used for software flow control in serial communications. The main use is restarting the transmission after the communication has been stopped by the XOFF control code.'
  syntax:
    content: public static final byte XON
    return:
      type: byte
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)
  id: equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: equalsIgnoreCase(CharSequence s1, CharSequence s2)
  nameWithType: Ascii.equalsIgnoreCase(CharSequence s1, CharSequence s2)
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.equalsIgnoreCase(CharSequence s1, CharSequence s2)
  overload: com.azure.cosmos.implementation.guava25.base.Ascii.equalsIgnoreCase*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: >-
    Indicates whether the contents of the given character sequences `s1` and `s2` are equal, ignoring the case of any ASCII alphabetic characters between `'a'` and `'z'` or `'A'` and `'Z'` inclusive.


    This method is significantly faster than <xref uid="java.lang.String.equalsIgnoreCase" data-throw-if-not-resolved="false">String#equalsIgnoreCase</xref> and should be used in preference if at least one of the parameters is known to contain only ASCII characters.


    Note however that this method does not always behave identically to expressions such as:

     *  `string.toUpperCase().equals("UPPER CASE ASCII")`
     *  `string.toLowerCase().equals("lower case ascii")`

    due to case-folding of some non-ASCII characters (which does not occur in <xref uid="java.lang.String.equalsIgnoreCase" data-throw-if-not-resolved="false">String#equalsIgnoreCase</xref>). However in almost all cases that ASCII strings are used, the author probably wanted the behavior provided by this method rather than the subtle and sometimes surprising behavior of `toUpperCase()` and `toLowerCase()`.
  syntax:
    content: public static boolean equalsIgnoreCase(CharSequence s1, CharSequence s2)
    parameters:
    - id: s1
      type: java.lang.CharSequence
    - id: s2
      type: java.lang.CharSequence
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.isLowerCase(char)
  id: isLowerCase(char)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: isLowerCase(char c)
  nameWithType: Ascii.isLowerCase(char c)
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.isLowerCase(char c)
  overload: com.azure.cosmos.implementation.guava25.base.Ascii.isLowerCase*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Indicates whether `c` is one of the twenty-six lowercase ASCII alphabetic characters between `'a'` and `'z'` inclusive. All others (including non-ASCII characters) return `false`.
  syntax:
    content: public static boolean isLowerCase(char c)
    parameters:
    - id: c
      type: char
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.isUpperCase(char)
  id: isUpperCase(char)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: isUpperCase(char c)
  nameWithType: Ascii.isUpperCase(char c)
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.isUpperCase(char c)
  overload: com.azure.cosmos.implementation.guava25.base.Ascii.isUpperCase*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Indicates whether `c` is one of the twenty-six uppercase ASCII alphabetic characters between `'A'` and `'Z'` inclusive. All others (including non-ASCII characters) return `false`.
  syntax:
    content: public static boolean isUpperCase(char c)
    parameters:
    - id: c
      type: char
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.toLowerCase(char)
  id: toLowerCase(char)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: toLowerCase(char c)
  nameWithType: Ascii.toLowerCase(char c)
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.toLowerCase(char c)
  overload: com.azure.cosmos.implementation.guava25.base.Ascii.toLowerCase*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: If the argument is an <xref uid="com.azure.cosmos.implementation.guava25.base.Ascii.isUpperCase(char)" data-throw-if-not-resolved="false">uppercase ASCII character</xref> returns the lowercase equivalent. Otherwise returns the argument.
  syntax:
    content: public static char toLowerCase(char c)
    parameters:
    - id: c
      type: char
    return:
      type: char
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.toLowerCase(java.lang.CharSequence)
  id: toLowerCase(java.lang.CharSequence)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: toLowerCase(CharSequence chars)
  nameWithType: Ascii.toLowerCase(CharSequence chars)
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.toLowerCase(CharSequence chars)
  overload: com.azure.cosmos.implementation.guava25.base.Ascii.toLowerCase*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Returns a copy of the input character sequence in which all <xref uid="com.azure.cosmos.implementation.guava25.base.Ascii.isUpperCase(char)" data-throw-if-not-resolved="false">uppercase ASCII characters</xref> have been converted to lowercase. All other characters are copied without modification.
  syntax:
    content: public static String toLowerCase(CharSequence chars)
    parameters:
    - id: chars
      type: java.lang.CharSequence
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.toLowerCase(java.lang.String)
  id: toLowerCase(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: toLowerCase(String string)
  nameWithType: Ascii.toLowerCase(String string)
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.toLowerCase(String string)
  overload: com.azure.cosmos.implementation.guava25.base.Ascii.toLowerCase*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: >-
    Returns a copy of the input string in which all <xref uid="#isUpperCase(char)" data-throw-if-not-resolved="false">uppercase ASCII
     characters</xref> have been converted to lowercase. All other characters are copied without modification.
  syntax:
    content: public static String toLowerCase(String string)
    parameters:
    - id: string
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.toUpperCase(char)
  id: toUpperCase(char)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: toUpperCase(char c)
  nameWithType: Ascii.toUpperCase(char c)
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.toUpperCase(char c)
  overload: com.azure.cosmos.implementation.guava25.base.Ascii.toUpperCase*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: If the argument is a <xref uid="com.azure.cosmos.implementation.guava25.base.Ascii.isLowerCase(char)" data-throw-if-not-resolved="false">lowercase ASCII character</xref> returns the uppercase equivalent. Otherwise returns the argument.
  syntax:
    content: public static char toUpperCase(char c)
    parameters:
    - id: c
      type: char
    return:
      type: char
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.toUpperCase(java.lang.CharSequence)
  id: toUpperCase(java.lang.CharSequence)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: toUpperCase(CharSequence chars)
  nameWithType: Ascii.toUpperCase(CharSequence chars)
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.toUpperCase(CharSequence chars)
  overload: com.azure.cosmos.implementation.guava25.base.Ascii.toUpperCase*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Returns a copy of the input character sequence in which all <xref uid="com.azure.cosmos.implementation.guava25.base.Ascii.isLowerCase(char)" data-throw-if-not-resolved="false">lowercase ASCII characters</xref> have been converted to uppercase. All other characters are copied without modification.
  syntax:
    content: public static String toUpperCase(CharSequence chars)
    parameters:
    - id: chars
      type: java.lang.CharSequence
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.toUpperCase(java.lang.String)
  id: toUpperCase(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: toUpperCase(String string)
  nameWithType: Ascii.toUpperCase(String string)
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.toUpperCase(String string)
  overload: com.azure.cosmos.implementation.guava25.base.Ascii.toUpperCase*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: >-
    Returns a copy of the input string in which all <xref uid="#isLowerCase(char)" data-throw-if-not-resolved="false">lowercase ASCII
     characters</xref> have been converted to uppercase. All other characters are copied without modification.
  syntax:
    content: public static String toUpperCase(String string)
    parameters:
    - id: string
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.truncate(java.lang.CharSequence,int,java.lang.String)
  id: truncate(java.lang.CharSequence,int,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ascii
  langs:
  - java
  name: truncate(CharSequence seq, int maxLength, String truncationIndicator)
  nameWithType: Ascii.truncate(CharSequence seq, int maxLength, String truncationIndicator)
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.truncate(CharSequence seq, int maxLength, String truncationIndicator)
  overload: com.azure.cosmos.implementation.guava25.base.Ascii.truncate*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: >-
    Truncates the given character sequence to the given maximum length. If the length of the sequence is greater than `maxLength`, the returned string will be exactly `maxLength` chars in length and will end with the given `truncationIndicator`. Otherwise, the sequence will be returned as a string with no changes to the content.


    Examples:


    ```java

    Ascii.truncate("foobar", 7, "..."); // returns "foobar"
     Ascii.truncate("foobar", 5, "..."); // returns "fo..."
    ```


    **Note:** This method *may* work with certain non-ASCII text but is not safe for use with arbitrary Unicode text. It is mostly intended for use with text that is known to be safe for use with it (such as all-ASCII text) and for simple debugging text. When using this method, consider the following:

     *  it may split surrogate pairs
     *  it may split characters and combining characters
     *  it does not consider word boundaries
     *  if truncating for display to users, there are other considerations that must be taken into account
     *  the appropriate truncation indicator may be locale-dependent
     *  it is safe to use non-ASCII characters in the truncation indicator
  syntax:
    content: public static String truncate(CharSequence seq, int maxLength, String truncationIndicator)
    parameters:
    - id: seq
      type: java.lang.CharSequence
    - id: maxLength
      type: int
    - id: truncationIndicator
      type: java.lang.String
    return:
      type: java.lang.String
references:
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.Ascii*
  name: Ascii
  nameWithType: Ascii.Ascii
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.Ascii
  package: com.azure.cosmos.implementation.guava25.base
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.toLowerCase*
  name: toLowerCase
  nameWithType: Ascii.toLowerCase
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.toLowerCase
  package: com.azure.cosmos.implementation.guava25.base
- uid: java.lang.CharSequence
  spec.java:
  - uid: java.lang.CharSequence
    name: CharSequence
    fullName: java.lang.CharSequence
- uid: char
  spec.java:
  - uid: char
    name: char
    fullName: char
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.toUpperCase*
  name: toUpperCase
  nameWithType: Ascii.toUpperCase
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.toUpperCase
  package: com.azure.cosmos.implementation.guava25.base
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.isLowerCase*
  name: isLowerCase
  nameWithType: Ascii.isLowerCase
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.isLowerCase
  package: com.azure.cosmos.implementation.guava25.base
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.isUpperCase*
  name: isUpperCase
  nameWithType: Ascii.isUpperCase
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.isUpperCase
  package: com.azure.cosmos.implementation.guava25.base
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.truncate*
  name: truncate
  nameWithType: Ascii.truncate
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.truncate
  package: com.azure.cosmos.implementation.guava25.base
- uid: com.azure.cosmos.implementation.guava25.base.Ascii.equalsIgnoreCase*
  name: equalsIgnoreCase
  nameWithType: Ascii.equalsIgnoreCase
  fullName: com.azure.cosmos.implementation.guava25.base.Ascii.equalsIgnoreCase
  package: com.azure.cosmos.implementation.guava25.base
- uid: byte
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
