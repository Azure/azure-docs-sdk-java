### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.ParquetSink"
fullName: "com.azure.resourcemanager.datafactory.models.ParquetSink"
name: "ParquetSink"
nameWithType: "ParquetSink"
summary: "A copy activity Parquet sink."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.CopySink?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.CopySink.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.CopySink.disableMetricsCollection()"
- "com.azure.resourcemanager.datafactory.models.CopySink.maxConcurrentConnections()"
- "com.azure.resourcemanager.datafactory.models.CopySink.sinkRetryCount()"
- "com.azure.resourcemanager.datafactory.models.CopySink.sinkRetryWait()"
- "com.azure.resourcemanager.datafactory.models.CopySink.validate()"
- "com.azure.resourcemanager.datafactory.models.CopySink.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withDisableMetricsCollection(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withMaxConcurrentConnections(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withSinkRetryCount(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withSinkRetryWait(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withWriteBatchSize(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withWriteBatchTimeout(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.writeBatchSize()"
- "com.azure.resourcemanager.datafactory.models.CopySink.writeBatchTimeout()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ParquetSink extends CopySink"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.ParquetSink.ParquetSink()"
  fullName: "com.azure.resourcemanager.datafactory.models.ParquetSink.ParquetSink()"
  name: "ParquetSink()"
  nameWithType: "ParquetSink.ParquetSink()"
  syntax: "public ParquetSink()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.ParquetSink.formatSettings()"
  fullName: "com.azure.resourcemanager.datafactory.models.ParquetSink.formatSettings()"
  name: "formatSettings()"
  nameWithType: "ParquetSink.formatSettings()"
  summary: "Get the format<wbr>Settings property: Parquet format settings."
  syntax: "public ParquetWriteSettings formatSettings()"
  desc: "Get the formatSettings property: Parquet format settings."
  returns:
    description: "the formatSettings value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ParquetWriteSettings?alt=com.azure.resourcemanager.datafactory.models.ParquetWriteSettings&text=ParquetWriteSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ParquetSink.storeSettings()"
  fullName: "com.azure.resourcemanager.datafactory.models.ParquetSink.storeSettings()"
  name: "storeSettings()"
  nameWithType: "ParquetSink.storeSettings()"
  summary: "Get the store<wbr>Settings property: Parquet store settings."
  syntax: "public StoreWriteSettings storeSettings()"
  desc: "Get the storeSettings property: Parquet store settings."
  returns:
    description: "the storeSettings value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.StoreWriteSettings?alt=com.azure.resourcemanager.datafactory.models.StoreWriteSettings&text=StoreWriteSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ParquetSink.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.ParquetSink.validate()"
  name: "validate()"
  nameWithType: "ParquetSink.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.ParquetSink.withDisableMetricsCollection(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.ParquetSink.withDisableMetricsCollection(Object disableMetricsCollection)"
  name: "withDisableMetricsCollection(Object disableMetricsCollection)"
  nameWithType: "ParquetSink.withDisableMetricsCollection(Object disableMetricsCollection)"
  summary: "Set the disable<wbr>Metrics<wbr>Collection property: If true, disable data store metrics collection."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withDisableMetricsCollection(java.lang.Object)"
  parameters:
  - name: "disableMetricsCollection"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ParquetSink withDisableMetricsCollection(Object disableMetricsCollection)"
  desc: "Set the disableMetricsCollection property: If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ParquetSink?alt=com.azure.resourcemanager.datafactory.models.ParquetSink&text=ParquetSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ParquetSink.withFormatSettings(com.azure.resourcemanager.datafactory.models.ParquetWriteSettings)"
  fullName: "com.azure.resourcemanager.datafactory.models.ParquetSink.withFormatSettings(ParquetWriteSettings formatSettings)"
  name: "withFormatSettings(ParquetWriteSettings formatSettings)"
  nameWithType: "ParquetSink.withFormatSettings(ParquetWriteSettings formatSettings)"
  summary: "Set the format<wbr>Settings property: Parquet format settings."
  parameters:
  - description: "the formatSettings value to set."
    name: "formatSettings"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ParquetWriteSettings?alt=com.azure.resourcemanager.datafactory.models.ParquetWriteSettings&text=ParquetWriteSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ParquetSink withFormatSettings(ParquetWriteSettings formatSettings)"
  desc: "Set the formatSettings property: Parquet format settings."
  returns:
    description: "the ParquetSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ParquetSink?alt=com.azure.resourcemanager.datafactory.models.ParquetSink&text=ParquetSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ParquetSink.withMaxConcurrentConnections(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.ParquetSink.withMaxConcurrentConnections(Object maxConcurrentConnections)"
  name: "withMaxConcurrentConnections(Object maxConcurrentConnections)"
  nameWithType: "ParquetSink.withMaxConcurrentConnections(Object maxConcurrentConnections)"
  summary: "Set the max<wbr>Concurrent<wbr>Connections property: The maximum concurrent connection count for the sink data store."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withMaxConcurrentConnections(java.lang.Object)"
  parameters:
  - name: "maxConcurrentConnections"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ParquetSink withMaxConcurrentConnections(Object maxConcurrentConnections)"
  desc: "Set the maxConcurrentConnections property: The maximum concurrent connection count for the sink data store. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ParquetSink?alt=com.azure.resourcemanager.datafactory.models.ParquetSink&text=ParquetSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ParquetSink.withSinkRetryCount(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.ParquetSink.withSinkRetryCount(Object sinkRetryCount)"
  name: "withSinkRetryCount(Object sinkRetryCount)"
  nameWithType: "ParquetSink.withSinkRetryCount(Object sinkRetryCount)"
  summary: "Set the sink<wbr>Retry<wbr>Count property: Sink retry count."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withSinkRetryCount(java.lang.Object)"
  parameters:
  - name: "sinkRetryCount"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ParquetSink withSinkRetryCount(Object sinkRetryCount)"
  desc: "Set the sinkRetryCount property: Sink retry count. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ParquetSink?alt=com.azure.resourcemanager.datafactory.models.ParquetSink&text=ParquetSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ParquetSink.withSinkRetryWait(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.ParquetSink.withSinkRetryWait(Object sinkRetryWait)"
  name: "withSinkRetryWait(Object sinkRetryWait)"
  nameWithType: "ParquetSink.withSinkRetryWait(Object sinkRetryWait)"
  summary: "Set the sink<wbr>Retry<wbr>Wait property: Sink retry wait."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withSinkRetryWait(java.lang.Object)"
  parameters:
  - name: "sinkRetryWait"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ParquetSink withSinkRetryWait(Object sinkRetryWait)"
  desc: "Set the sinkRetryWait property: Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\\\\d+)\\\\.)?(\\\\d\\\\d):(60|(\\[0-5\\]\\[0-9\\])):(60|(\\[0-5\\]\\[0-9\\]))."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ParquetSink?alt=com.azure.resourcemanager.datafactory.models.ParquetSink&text=ParquetSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ParquetSink.withStoreSettings(com.azure.resourcemanager.datafactory.models.StoreWriteSettings)"
  fullName: "com.azure.resourcemanager.datafactory.models.ParquetSink.withStoreSettings(StoreWriteSettings storeSettings)"
  name: "withStoreSettings(StoreWriteSettings storeSettings)"
  nameWithType: "ParquetSink.withStoreSettings(StoreWriteSettings storeSettings)"
  summary: "Set the store<wbr>Settings property: Parquet store settings."
  parameters:
  - description: "the storeSettings value to set."
    name: "storeSettings"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.StoreWriteSettings?alt=com.azure.resourcemanager.datafactory.models.StoreWriteSettings&text=StoreWriteSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ParquetSink withStoreSettings(StoreWriteSettings storeSettings)"
  desc: "Set the storeSettings property: Parquet store settings."
  returns:
    description: "the ParquetSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ParquetSink?alt=com.azure.resourcemanager.datafactory.models.ParquetSink&text=ParquetSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ParquetSink.withWriteBatchSize(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.ParquetSink.withWriteBatchSize(Object writeBatchSize)"
  name: "withWriteBatchSize(Object writeBatchSize)"
  nameWithType: "ParquetSink.withWriteBatchSize(Object writeBatchSize)"
  summary: "Set the write<wbr>Batch<wbr>Size property: Write batch size."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withWriteBatchSize(java.lang.Object)"
  parameters:
  - name: "writeBatchSize"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ParquetSink withWriteBatchSize(Object writeBatchSize)"
  desc: "Set the writeBatchSize property: Write batch size. Type: integer (or Expression with resultType integer), minimum: 0."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ParquetSink?alt=com.azure.resourcemanager.datafactory.models.ParquetSink&text=ParquetSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.ParquetSink.withWriteBatchTimeout(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.ParquetSink.withWriteBatchTimeout(Object writeBatchTimeout)"
  name: "withWriteBatchTimeout(Object writeBatchTimeout)"
  nameWithType: "ParquetSink.withWriteBatchTimeout(Object writeBatchTimeout)"
  summary: "Set the write<wbr>Batch<wbr>Timeout property: Write batch timeout."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withWriteBatchTimeout(java.lang.Object)"
  parameters:
  - name: "writeBatchTimeout"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ParquetSink withWriteBatchTimeout(Object writeBatchTimeout)"
  desc: "Set the writeBatchTimeout property: Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\\\\d+)\\\\.)?(\\\\d\\\\d):(60|(\\[0-5\\]\\[0-9\\])):(60|(\\[0-5\\]\\[0-9\\]))."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ParquetSink?alt=com.azure.resourcemanager.datafactory.models.ParquetSink&text=ParquetSink\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A copy activity Parquet sink."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
