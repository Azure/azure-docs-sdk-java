### YamlMime:JavaType
uid: "com.azure.resourcemanager.botservice.models.Bots"
fullName: "com.azure.resourcemanager.botservice.models.Bots"
name: "Bots"
nameWithType: "Bots"
summary: "Resource collection API of Bots."
syntax: "public interface Bots"
methods:
- uid: "com.azure.resourcemanager.botservice.models.Bots.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.botservice.models.Bots.define(String name)"
  name: "define(String name)"
  nameWithType: "Bots.define(String name)"
  summary: "Begins definition for a new Bot resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Bot.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new Bot resource."
  returns:
    description: "the first stage of the new Bot definition."
    type: "<xref href=\"com.azure.resourcemanager.botservice.models.Bot.DefinitionStages.Blank?alt=com.azure.resourcemanager.botservice.models.Bot.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.Bots.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.botservice.models.Bots.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Bots.deleteById(String id)"
  summary: "Deletes a Bot Service from the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Deletes a Bot Service from the resource group."
- uid: "com.azure.resourcemanager.botservice.models.Bots.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.botservice.models.Bots.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "Bots.deleteByIdWithResponse(String id, Context context)"
  summary: "Deletes a Bot Service from the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByIdWithResponse(String id, Context context)"
  desc: "Deletes a Bot Service from the resource group."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.botservice.models.Bots.deleteByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.botservice.models.Bots.deleteByResourceGroup(String resourceGroupName, String resourceName)"
  name: "deleteByResourceGroup(String resourceGroupName, String resourceName)"
  nameWithType: "Bots.deleteByResourceGroup(String resourceGroupName, String resourceName)"
  summary: "Deletes a Bot Service from the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Bot resource group in the user subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Bot resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByResourceGroup(String resourceGroupName, String resourceName)"
  desc: "Deletes a Bot Service from the resource group."
- uid: "com.azure.resourcemanager.botservice.models.Bots.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.botservice.models.Bots.deleteWithResponse(String resourceGroupName, String resourceName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String resourceName, Context context)"
  nameWithType: "Bots.deleteWithResponse(String resourceGroupName, String resourceName, Context context)"
  summary: "Deletes a Bot Service from the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Bot resource group in the user subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Bot resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String resourceName, Context context)"
  desc: "Deletes a Bot Service from the resource group."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.botservice.models.Bots.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.botservice.models.Bots.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Bots.getById(String id)"
  summary: "Returns a Bot<wbr>Service specified by the parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Bot getById(String id)"
  desc: "Returns a BotService specified by the parameters."
  returns:
    description: "bot resource definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.resourcemanager.botservice.models.Bot?alt=com.azure.resourcemanager.botservice.models.Bot&text=Bot\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.Bots.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.botservice.models.Bots.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Bots.getByIdWithResponse(String id, Context context)"
  summary: "Returns a Bot<wbr>Service specified by the parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Bot> getByIdWithResponse(String id, Context context)"
  desc: "Returns a BotService specified by the parameters."
  returns:
    description: "bot resource definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.botservice.models.Bot?alt=com.azure.resourcemanager.botservice.models.Bot&text=Bot\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.botservice.models.Bots.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.botservice.models.Bots.getByResourceGroup(String resourceGroupName, String resourceName)"
  name: "getByResourceGroup(String resourceGroupName, String resourceName)"
  nameWithType: "Bots.getByResourceGroup(String resourceGroupName, String resourceName)"
  summary: "Returns a Bot<wbr>Service specified by the parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Bot resource group in the user subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Bot resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Bot getByResourceGroup(String resourceGroupName, String resourceName)"
  desc: "Returns a BotService specified by the parameters."
  returns:
    description: "bot resource definition."
    type: "<xref href=\"com.azure.resourcemanager.botservice.models.Bot?alt=com.azure.resourcemanager.botservice.models.Bot&text=Bot\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.Bots.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.botservice.models.Bots.getByResourceGroupWithResponse(String resourceGroupName, String resourceName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String resourceName, Context context)"
  nameWithType: "Bots.getByResourceGroupWithResponse(String resourceGroupName, String resourceName, Context context)"
  summary: "Returns a Bot<wbr>Service specified by the parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Bot resource group in the user subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Bot resource."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Bot> getByResourceGroupWithResponse(String resourceGroupName, String resourceName, Context context)"
  desc: "Returns a BotService specified by the parameters."
  returns:
    description: "bot resource definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.botservice.models.Bot?alt=com.azure.resourcemanager.botservice.models.Bot&text=Bot\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.botservice.models.Bots.getCheckNameAvailability(com.azure.resourcemanager.botservice.models.CheckNameAvailabilityRequestBody)"
  fullName: "com.azure.resourcemanager.botservice.models.Bots.getCheckNameAvailability(CheckNameAvailabilityRequestBody parameters)"
  name: "getCheckNameAvailability(CheckNameAvailabilityRequestBody parameters)"
  nameWithType: "Bots.getCheckNameAvailability(CheckNameAvailabilityRequestBody parameters)"
  summary: "Check whether a bot name is available."
  modifiers:
  - "abstract"
  parameters:
  - description: "The request body parameters to provide for the check name availability request."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.botservice.models.CheckNameAvailabilityRequestBody?alt=com.azure.resourcemanager.botservice.models.CheckNameAvailabilityRequestBody&text=CheckNameAvailabilityRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CheckNameAvailabilityResponseBody getCheckNameAvailability(CheckNameAvailabilityRequestBody parameters)"
  desc: "Check whether a bot name is available."
  returns:
    description: "the response body returned for a request to Bot Service Management to check availability of a bot name."
    type: "<xref href=\"com.azure.resourcemanager.botservice.models.CheckNameAvailabilityResponseBody?alt=com.azure.resourcemanager.botservice.models.CheckNameAvailabilityResponseBody&text=CheckNameAvailabilityResponseBody\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.Bots.getCheckNameAvailabilityWithResponse(com.azure.resourcemanager.botservice.models.CheckNameAvailabilityRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.botservice.models.Bots.getCheckNameAvailabilityWithResponse(CheckNameAvailabilityRequestBody parameters, Context context)"
  name: "getCheckNameAvailabilityWithResponse(CheckNameAvailabilityRequestBody parameters, Context context)"
  nameWithType: "Bots.getCheckNameAvailabilityWithResponse(CheckNameAvailabilityRequestBody parameters, Context context)"
  summary: "Check whether a bot name is available."
  modifiers:
  - "abstract"
  parameters:
  - description: "The request body parameters to provide for the check name availability request."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.botservice.models.CheckNameAvailabilityRequestBody?alt=com.azure.resourcemanager.botservice.models.CheckNameAvailabilityRequestBody&text=CheckNameAvailabilityRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<CheckNameAvailabilityResponseBody> getCheckNameAvailabilityWithResponse(CheckNameAvailabilityRequestBody parameters, Context context)"
  desc: "Check whether a bot name is available."
  returns:
    description: "the response body returned for a request to Bot Service Management to check availability of a bot name\n     along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.botservice.models.CheckNameAvailabilityResponseBody?alt=com.azure.resourcemanager.botservice.models.CheckNameAvailabilityResponseBody&text=CheckNameAvailabilityResponseBody\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.botservice.models.Bots.list()"
  fullName: "com.azure.resourcemanager.botservice.models.Bots.list()"
  name: "list()"
  nameWithType: "Bots.list()"
  summary: "Returns all the resources of a particular type belonging to a subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<Bot> list()"
  desc: "Returns all the resources of a particular type belonging to a subscription."
  returns:
    description: "the list of bot service operation response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.botservice.models.Bot?alt=com.azure.resourcemanager.botservice.models.Bot&text=Bot\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.botservice.models.Bots.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.botservice.models.Bots.list(Context context)"
  name: "list(Context context)"
  nameWithType: "Bots.list(Context context)"
  summary: "Returns all the resources of a particular type belonging to a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Bot> list(Context context)"
  desc: "Returns all the resources of a particular type belonging to a subscription."
  returns:
    description: "the list of bot service operation response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.botservice.models.Bot?alt=com.azure.resourcemanager.botservice.models.Bot&text=Bot\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.botservice.models.Bots.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.botservice.models.Bots.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "Bots.listByResourceGroup(String resourceGroupName)"
  summary: "Returns all the resources of a particular type belonging to a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Bot resource group in the user subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Bot> listByResourceGroup(String resourceGroupName)"
  desc: "Returns all the resources of a particular type belonging to a resource group."
  returns:
    description: "the list of bot service operation response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.botservice.models.Bot?alt=com.azure.resourcemanager.botservice.models.Bot&text=Bot\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.botservice.models.Bots.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.botservice.models.Bots.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "Bots.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "Returns all the resources of a particular type belonging to a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Bot resource group in the user subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Bot> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "Returns all the resources of a particular type belonging to a resource group."
  returns:
    description: "the list of bot service operation response as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.botservice.models.Bot?alt=com.azure.resourcemanager.botservice.models.Bot&text=Bot\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Bots."
metadata: {}
package: "com.azure.resourcemanager.botservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-botservice:1.0.0-beta.5
