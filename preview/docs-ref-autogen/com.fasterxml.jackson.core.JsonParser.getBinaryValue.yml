### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.JsonParser.getBinaryValue*"
fullName: "com.fasterxml.jackson.core.JsonParser.getBinaryValue"
name: "getBinaryValue"
nameWithType: "JsonParser.getBinaryValue"
members:
- uid: "com.fasterxml.jackson.core.JsonParser.getBinaryValue()"
  fullName: "com.fasterxml.jackson.core.JsonParser.getBinaryValue()"
  name: "getBinaryValue()"
  nameWithType: "JsonParser.getBinaryValue()"
  summary: "Convenience alternative to <xref uid=\"com.fasterxml.jackson.core.JsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getBinaryValue(Base64Variant)\"></xref> that defaults to using <xref uid=\"com.fasterxml.jackson.core.Base64Variants.getDefaultVariant*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Base64Variants#getDefaultVariant\"></xref> as the default encoding."
  syntax: "public byte[] getBinaryValue()"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.fasterxml.jackson.core.JsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)"
  fullName: "com.fasterxml.jackson.core.JsonParser.getBinaryValue(Base64Variant bv)"
  name: "getBinaryValue(Base64Variant bv)"
  nameWithType: "JsonParser.getBinaryValue(Base64Variant bv)"
  summary: "Method that can be used to read (and consume -- results may not be accessible using other methods after the call) base64-encoded binary data included in the current textual JSON value. It works similar to getting String value via <xref uid=\"com.fasterxml.jackson.core.JsonParser.getText*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getText\"></xref> and decoding result (except for decoding part), but should be significantly more performant.\n\nNote that non-decoded textual contents of the current token are not guaranteed to be accessible after this method is called. Current implementation, for example, clears up textual content during decoding. Decoded binary content, however, will be retained until parser is advanced to the next event."
  parameters:
  - description: "Expected variant of base64 encoded\n   content (see <xref uid=\"com.fasterxml.jackson.core.Base64Variants\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Base64Variants\"></xref> for definitions\n   of \"standard\" variants)."
    name: "bv"
    type: "<xref href=\"com.fasterxml.jackson.core.Base64Variant?alt=com.fasterxml.jackson.core.Base64Variant&text=Base64Variant\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract byte[] getBinaryValue(Base64Variant bv)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Decoded binary data"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
