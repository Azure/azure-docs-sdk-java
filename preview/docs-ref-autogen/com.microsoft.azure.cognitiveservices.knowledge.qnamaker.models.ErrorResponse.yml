### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.ErrorResponse"
fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.ErrorResponse"
name: "ErrorResponse"
nameWithType: "ErrorResponse"
summary: "Error response."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ErrorResponse"
constructors:
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.ErrorResponse.ErrorResponse()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.ErrorResponse.ErrorResponse()"
  name: "ErrorResponse()"
  nameWithType: "ErrorResponse.ErrorResponse()"
  syntax: "public ErrorResponse()"
methods:
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.ErrorResponse.error()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.ErrorResponse.error()"
  name: "error()"
  nameWithType: "ErrorResponse.error()"
  summary: "Get the error value."
  syntax: "public ErrorResponseError error()"
  desc: "Get the error value."
  returns:
    description: "the error value"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.ErrorResponseError?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.ErrorResponseError&text=ErrorResponseError\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.ErrorResponse.withError(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.ErrorResponseError)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.ErrorResponse.withError(ErrorResponseError error)"
  name: "withError(ErrorResponseError error)"
  nameWithType: "ErrorResponse.withError(ErrorResponseError error)"
  summary: "Set the error value."
  parameters:
  - description: "the error value to set"
    name: "error"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.ErrorResponseError?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.ErrorResponseError&text=ErrorResponseError\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ErrorResponse withError(ErrorResponseError error)"
  desc: "Set the error value."
  returns:
    description: "the ErrorResponse object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.ErrorResponse?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.ErrorResponse&text=ErrorResponse\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Error response. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md\\#7102-error-condition-responses."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
