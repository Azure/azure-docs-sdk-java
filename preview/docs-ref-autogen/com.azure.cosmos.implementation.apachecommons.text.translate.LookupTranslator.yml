### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.LookupTranslator
  id: LookupTranslator
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.text.translate
  children:
  - com.azure.cosmos.implementation.apachecommons.text.translate.LookupTranslator.LookupTranslator(java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)
  - com.azure.cosmos.implementation.apachecommons.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)
  langs:
  - java
  name: LookupTranslator
  nameWithType: LookupTranslator
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.LookupTranslator
  type: Class
  package: com.azure.cosmos.implementation.apachecommons.text.translate
  syntax:
    content: public class LookupTranslator extends CharSequenceTranslator
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator
  inheritedMembers:
  - com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.hex(int)
  - com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence)
  - com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,int,java.io.Writer)
  - com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)
  - com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.with(com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator...)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.LookupTranslator.LookupTranslator(java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)
  id: LookupTranslator(java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.text.translate.LookupTranslator
  langs:
  - java
  name: LookupTranslator(Map<CharSequence,CharSequence> lookupMap)
  nameWithType: LookupTranslator.LookupTranslator(Map<CharSequence,CharSequence> lookupMap)
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.LookupTranslator.LookupTranslator(Map<CharSequence,CharSequence> lookupMap)
  overload: com.azure.cosmos.implementation.apachecommons.text.translate.LookupTranslator.LookupTranslator*
  type: Constructor
  package: com.azure.cosmos.implementation.apachecommons.text.translate
  summary: Define the lookup table to be used in translation Note that, as of Lang 3.1 (the origin of this code), the key to the lookup table is converted to a java.lang.String. This is because we need the key to support hashCode and equals(Object), allowing it to be the key for a HashMap. See LANG-882.
  syntax:
    content: public LookupTranslator(Map<CharSequence,CharSequence> lookupMap)
    parameters:
    - id: lookupMap
      type: java.util.Map<java.lang.CharSequence,java.lang.CharSequence>
      description: >-
        Map&lt;CharSequence, CharSequence&gt; table of translator
                          mappings
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)
  id: translate(java.lang.CharSequence,int,java.io.Writer)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.text.translate.LookupTranslator
  langs:
  - java
  name: translate(CharSequence input, int index, Writer out)
  nameWithType: LookupTranslator.translate(CharSequence input, int index, Writer out)
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.LookupTranslator.translate(CharSequence input, int index, Writer out)
  overload: com.azure.cosmos.implementation.apachecommons.text.translate.LookupTranslator.translate*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.text.translate
  summary: Translate a set of codepoints, represented by an int index into a CharSequence, into another set of codepoints. The number of codepoints consumed must be returned, and the only IOExceptions thrown must be from interacting with the Writer so that the top level API may reliably ignore StringWriter IOExceptions.
  syntax:
    content: public int translate(CharSequence input, int index, Writer out)
    parameters:
    - id: input
      type: java.lang.CharSequence
    - id: index
      type: int
    - id: out
      type: java.io.Writer
    return:
      type: int
  exceptions:
  - type: java.io.IOException
references:
- uid: java.util.Map<java.lang.CharSequence,java.lang.CharSequence>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.CharSequence
    name: CharSequence
    fullName: java.lang.CharSequence
  - name: ','
    fullName: ','
  - uid: java.lang.CharSequence
    name: CharSequence
    fullName: java.lang.CharSequence
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.LookupTranslator.LookupTranslator*
  name: LookupTranslator
  nameWithType: LookupTranslator.LookupTranslator
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.LookupTranslator.LookupTranslator
  package: com.azure.cosmos.implementation.apachecommons.text.translate
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.lang.CharSequence
  spec.java:
  - uid: java.lang.CharSequence
    name: CharSequence
    fullName: java.lang.CharSequence
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.io.Writer
  spec.java:
  - uid: java.io.Writer
    name: Writer
    fullName: java.io.Writer
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.LookupTranslator.translate*
  name: translate
  nameWithType: LookupTranslator.translate
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.LookupTranslator.translate
  package: com.azure.cosmos.implementation.apachecommons.text.translate
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator
  name: CharSequenceTranslator
  nameWithType: CharSequenceTranslator
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.with(com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator...)
  name: CharSequenceTranslator.with(CharSequenceTranslator)
  nameWithType: CharSequenceTranslator.with(CharSequenceTranslator)
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.with(com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator...)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.hex(int)
  name: CharSequenceTranslator.hex(int)
  nameWithType: CharSequenceTranslator.hex(int)
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.hex(int)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)
  name: CharSequenceTranslator.translate(CharSequence,Writer)
  nameWithType: CharSequenceTranslator.translate(CharSequence,Writer)
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence)
  name: CharSequenceTranslator.translate(CharSequence)
  nameWithType: CharSequenceTranslator.translate(CharSequence)
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,int,java.io.Writer)
  name: CharSequenceTranslator.translate(CharSequence,int,Writer)
  nameWithType: CharSequenceTranslator.translate(CharSequence,int,Writer)
  fullName: com.azure.cosmos.implementation.apachecommons.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,int,java.io.Writer)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.CharSequence,java.lang.CharSequence
  name: CharSequence,CharSequence
  nameWithType: CharSequence,CharSequence
  fullName: java.lang.CharSequence,java.lang.CharSequence
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
