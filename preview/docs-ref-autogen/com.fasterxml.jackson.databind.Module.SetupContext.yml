### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.Module.SetupContext
  id: SetupContext
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind
  children:
  - com.fasterxml.jackson.databind.Module.SetupContext.<C>getOwner()
  - com.fasterxml.jackson.databind.Module.SetupContext.addAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver)
  - com.fasterxml.jackson.databind.Module.SetupContext.addBeanDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier)
  - com.fasterxml.jackson.databind.Module.SetupContext.addBeanSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier)
  - com.fasterxml.jackson.databind.Module.SetupContext.addDeserializationProblemHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler)
  - com.fasterxml.jackson.databind.Module.SetupContext.addDeserializers(com.fasterxml.jackson.databind.deser.Deserializers)
  - com.fasterxml.jackson.databind.Module.SetupContext.addKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers)
  - com.fasterxml.jackson.databind.Module.SetupContext.addKeySerializers(com.fasterxml.jackson.databind.ser.Serializers)
  - com.fasterxml.jackson.databind.Module.SetupContext.addSerializers(com.fasterxml.jackson.databind.ser.Serializers)
  - com.fasterxml.jackson.databind.Module.SetupContext.addTypeModifier(com.fasterxml.jackson.databind.type.TypeModifier)
  - com.fasterxml.jackson.databind.Module.SetupContext.addValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators)
  - com.fasterxml.jackson.databind.Module.SetupContext.appendAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)
  - com.fasterxml.jackson.databind.Module.SetupContext.configOverride(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.Module.SetupContext.getMapperVersion()
  - com.fasterxml.jackson.databind.Module.SetupContext.getTypeFactory()
  - com.fasterxml.jackson.databind.Module.SetupContext.insertAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)
  - com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(com.fasterxml.jackson.core.JsonFactory.Feature)
  - com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  - com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
  - com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  - com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
  - com.fasterxml.jackson.databind.Module.SetupContext.registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType...)
  - com.fasterxml.jackson.databind.Module.SetupContext.registerSubtypes(java.lang.Class<?>...)
  - com.fasterxml.jackson.databind.Module.SetupContext.registerSubtypes(java.util.Collection<java.lang.Class<?>>)
  - com.fasterxml.jackson.databind.Module.SetupContext.setClassIntrospector(com.fasterxml.jackson.databind.introspect.ClassIntrospector)
  - com.fasterxml.jackson.databind.Module.SetupContext.setMixInAnnotations(java.lang.Class<?>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.Module.SetupContext.setNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy)
  langs:
  - java
  name: Module.SetupContext
  nameWithType: Module.SetupContext
  fullName: com.fasterxml.jackson.databind.Module.SetupContext
  type: Interface
  package: com.fasterxml.jackson.databind
  summary: Interface Jackson exposes to modules for purpose of registering extended functionality. Usually implemented by <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref>, but modules should NOT rely on this -- if they do require access to mapper instance, they need to call <xref uid="" data-throw-if-not-resolved="false">SetupContext#getOwner</xref> method.
  syntax:
    content: public static interface Module.SetupContext
- uid: com.fasterxml.jackson.databind.Module.SetupContext.<C>getOwner()
  id: <C>getOwner()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: <C>getOwner()
  nameWithType: Module.SetupContext.<C>getOwner()
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.<C>getOwner()
  overload: com.fasterxml.jackson.databind.Module.SetupContext.getOwner*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Fallback access method that allows modules to refer to the <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref> that provided this context. It should NOT be needed by most modules; and ideally should not be used -- however, there may be cases where this may be necessary due to various design constraints.


    NOTE: use of this method is discouraged, as it allows access to things Modules typically should not modify. It is included, however, to allow access to new features in cases where Module API has not yet been extended, or there are oversights.


    Return value is chosen to not leak dependency to <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref>; however, instance will always be of that type. This is why return value is declared generic, to allow caller to specify context to often avoid casting.
  syntax:
    content: public abstract C <C>getOwner()
    return:
      type: C
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver)
  id: addAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: addAbstractTypeResolver(AbstractTypeResolver resolver)
  nameWithType: Module.SetupContext.addAbstractTypeResolver(AbstractTypeResolver resolver)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addAbstractTypeResolver(AbstractTypeResolver resolver)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.addAbstractTypeResolver*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that module can use to register additional <xref uid="com.fasterxml.jackson.databind.AbstractTypeResolver" data-throw-if-not-resolved="false">AbstractTypeResolver</xref> instance, to handle resolution of abstract to concrete types (either by defaulting, or by materializing).
  syntax:
    content: public abstract void addAbstractTypeResolver(AbstractTypeResolver resolver)
    parameters:
    - id: resolver
      type: com.fasterxml.jackson.databind.AbstractTypeResolver
      description: Resolver to add.
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addBeanDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier)
  id: addBeanDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: addBeanDeserializerModifier(BeanDeserializerModifier mod)
  nameWithType: Module.SetupContext.addBeanDeserializerModifier(BeanDeserializerModifier mod)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addBeanDeserializerModifier(BeanDeserializerModifier mod)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.addBeanDeserializerModifier*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that module can use to register additional modifier objects to customize configuration and construction of bean deserializers.
  syntax:
    content: public abstract void addBeanDeserializerModifier(BeanDeserializerModifier mod)
    parameters:
    - id: mod
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
      description: Modifier to register
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addBeanSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier)
  id: addBeanSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: addBeanSerializerModifier(BeanSerializerModifier mod)
  nameWithType: Module.SetupContext.addBeanSerializerModifier(BeanSerializerModifier mod)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addBeanSerializerModifier(BeanSerializerModifier mod)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.addBeanSerializerModifier*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that module can use to register additional modifier objects to customize configuration and construction of bean serializers.
  syntax:
    content: public abstract void addBeanSerializerModifier(BeanSerializerModifier mod)
    parameters:
    - id: mod
      type: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
      description: Modifier to register
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addDeserializationProblemHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler)
  id: addDeserializationProblemHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: addDeserializationProblemHandler(DeserializationProblemHandler handler)
  nameWithType: Module.SetupContext.addDeserializationProblemHandler(DeserializationProblemHandler handler)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addDeserializationProblemHandler(DeserializationProblemHandler handler)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.addDeserializationProblemHandler*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Add a deserialization problem handler
  syntax:
    content: public abstract void addDeserializationProblemHandler(DeserializationProblemHandler handler)
    parameters:
    - id: handler
      type: com.fasterxml.jackson.databind.deser.DeserializationProblemHandler
      description: The deserialization problem handler
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addDeserializers(com.fasterxml.jackson.databind.deser.Deserializers)
  id: addDeserializers(com.fasterxml.jackson.databind.deser.Deserializers)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: addDeserializers(Deserializers d)
  nameWithType: Module.SetupContext.addDeserializers(Deserializers d)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addDeserializers(Deserializers d)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.addDeserializers*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that module can use to register additional deserializers to use for handling types.
  syntax:
    content: public abstract void addDeserializers(Deserializers d)
    parameters:
    - id: d
      type: com.fasterxml.jackson.databind.deser.Deserializers
      description: >-
        Object that can be called to find deserializer for types supported
           by module (null returned for non-supported types)
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers)
  id: addKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: addKeyDeserializers(KeyDeserializers s)
  nameWithType: Module.SetupContext.addKeyDeserializers(KeyDeserializers s)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addKeyDeserializers(KeyDeserializers s)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.addKeyDeserializers*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that module can use to register additional deserializers to use for handling Map key values (which are separate from value deserializers because they are always serialized from String values)
  syntax:
    content: public abstract void addKeyDeserializers(KeyDeserializers s)
    parameters:
    - id: s
      type: com.fasterxml.jackson.databind.deser.KeyDeserializers
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addKeySerializers(com.fasterxml.jackson.databind.ser.Serializers)
  id: addKeySerializers(com.fasterxml.jackson.databind.ser.Serializers)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: addKeySerializers(Serializers s)
  nameWithType: Module.SetupContext.addKeySerializers(Serializers s)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addKeySerializers(Serializers s)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.addKeySerializers*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that module can use to register additional serializers to use for handling Map key values (which are separate from value serializers because they must write `JsonToken.FIELD_NAME` instead of String value).
  syntax:
    content: public abstract void addKeySerializers(Serializers s)
    parameters:
    - id: s
      type: com.fasterxml.jackson.databind.ser.Serializers
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addSerializers(com.fasterxml.jackson.databind.ser.Serializers)
  id: addSerializers(com.fasterxml.jackson.databind.ser.Serializers)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: addSerializers(Serializers s)
  nameWithType: Module.SetupContext.addSerializers(Serializers s)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addSerializers(Serializers s)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.addSerializers*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that module can use to register additional serializers to use for handling types.
  syntax:
    content: public abstract void addSerializers(Serializers s)
    parameters:
    - id: s
      type: com.fasterxml.jackson.databind.ser.Serializers
      description: >-
        Object that can be called to find serializer for types supported
           by module (null returned for non-supported types)
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addTypeModifier(com.fasterxml.jackson.databind.type.TypeModifier)
  id: addTypeModifier(com.fasterxml.jackson.databind.type.TypeModifier)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: addTypeModifier(TypeModifier modifier)
  nameWithType: Module.SetupContext.addTypeModifier(TypeModifier modifier)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addTypeModifier(TypeModifier modifier)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.addTypeModifier*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that module can use to register additional <xref uid="com.fasterxml.jackson.databind.type.TypeModifier" data-throw-if-not-resolved="false">TypeModifier</xref> instance, which can augment <xref uid="com.fasterxml.jackson.databind.JavaType" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.JavaType</xref> instances constructed by <xref uid="com.fasterxml.jackson.databind.type.TypeFactory" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.type.TypeFactory</xref>.
  syntax:
    content: public abstract void addTypeModifier(TypeModifier modifier)
    parameters:
    - id: modifier
      type: com.fasterxml.jackson.databind.type.TypeModifier
      description: to add
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators)
  id: addValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: addValueInstantiators(ValueInstantiators instantiators)
  nameWithType: Module.SetupContext.addValueInstantiators(ValueInstantiators instantiators)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addValueInstantiators(ValueInstantiators instantiators)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.addValueInstantiators*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that module can use to register additional <xref uid="com.fasterxml.jackson.databind.deser.ValueInstantiator" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.deser.ValueInstantiator</xref>s, by adding <xref uid="com.fasterxml.jackson.databind.deser.ValueInstantiators" data-throw-if-not-resolved="false">ValueInstantiators</xref> object that gets called when instantatiator is needed by a deserializer.
  syntax:
    content: public abstract void addValueInstantiators(ValueInstantiators instantiators)
    parameters:
    - id: instantiators
      type: com.fasterxml.jackson.databind.deser.ValueInstantiators
      description: >-
        Object that can provide <xref uid="com.fasterxml.jackson.databind.deser.ValueInstantiator" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.deser.ValueInstantiator</xref>s for
            constructing POJO values during deserialization
- uid: com.fasterxml.jackson.databind.Module.SetupContext.appendAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)
  id: appendAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: appendAnnotationIntrospector(AnnotationIntrospector ai)
  nameWithType: Module.SetupContext.appendAnnotationIntrospector(AnnotationIntrospector ai)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.appendAnnotationIntrospector(AnnotationIntrospector ai)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.appendAnnotationIntrospector*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for registering specified <xref uid="com.fasterxml.jackson.databind.AnnotationIntrospector" data-throw-if-not-resolved="false">AnnotationIntrospector</xref> as the lowest priority introspector, chained with existing introspector(s) and called as fallback for cases not otherwise handled.
  syntax:
    content: public abstract void appendAnnotationIntrospector(AnnotationIntrospector ai)
    parameters:
    - id: ai
      type: com.fasterxml.jackson.databind.AnnotationIntrospector
      description: Annotation introspector to register.
- uid: com.fasterxml.jackson.databind.Module.SetupContext.configOverride(java.lang.Class<?>)
  id: configOverride(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: configOverride(Class<?> type)
  nameWithType: Module.SetupContext.configOverride(Class<?> type)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.configOverride(Class<?> type)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.configOverride*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: "\"Mutant accessor\" for getting a mutable configuration override object for given type, needed to add or change per-type overrides applied to properties of given type. Usage is through returned object by colling \"setter\" methods, which directly modify override object and take effect directly. For example you can do\n\n```java\nmapper.configOverride(java.util.Date.class)\n       .setFormat(JsonFormat.Value.forPattern(\"yyyy-MM-dd\"));\n```\n\nto change the default format to use for properties of type <xref uid=\"java.util.Date\" data-throw-if-not-resolved=\"false\">java.util.Date</xref> (possibly further overridden by per-property annotations)"
  syntax:
    content: public abstract MutableConfigOverride configOverride(Class<?> type)
    parameters:
    - id: type
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.cfg.MutableConfigOverride
- uid: com.fasterxml.jackson.databind.Module.SetupContext.getMapperVersion()
  id: getMapperVersion()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: getMapperVersion()
  nameWithType: Module.SetupContext.getMapperVersion()
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.getMapperVersion()
  overload: com.fasterxml.jackson.databind.Module.SetupContext.getMapperVersion*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that returns version information about <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref> that implements this context. Modules can use this to choose different settings or initialization order; or even decide to fail set up completely if version is compatible with module.
  syntax:
    content: public abstract Version getMapperVersion()
    return:
      type: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.databind.Module.SetupContext.getTypeFactory()
  id: getTypeFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: getTypeFactory()
  nameWithType: Module.SetupContext.getTypeFactory()
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.getTypeFactory()
  overload: com.fasterxml.jackson.databind.Module.SetupContext.getTypeFactory*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Accessor for finding <xref uid="com.fasterxml.jackson.databind.type.TypeFactory" data-throw-if-not-resolved="false">TypeFactory</xref> that is currently configured by the context.


    NOTE: since it is possible that other modules might change or replace TypeFactory, use of this method adds order-dependency for registrations.
  syntax:
    content: public abstract TypeFactory getTypeFactory()
    return:
      type: com.fasterxml.jackson.databind.type.TypeFactory
- uid: com.fasterxml.jackson.databind.Module.SetupContext.insertAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)
  id: insertAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: insertAnnotationIntrospector(AnnotationIntrospector ai)
  nameWithType: Module.SetupContext.insertAnnotationIntrospector(AnnotationIntrospector ai)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.insertAnnotationIntrospector(AnnotationIntrospector ai)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.insertAnnotationIntrospector*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for registering specified <xref uid="com.fasterxml.jackson.databind.AnnotationIntrospector" data-throw-if-not-resolved="false">AnnotationIntrospector</xref> as the highest priority introspector (will be chained with existing introspector(s) which will be used as fallbacks for cases this introspector does not handle)
  syntax:
    content: public abstract void insertAnnotationIntrospector(AnnotationIntrospector ai)
    parameters:
    - id: ai
      type: com.fasterxml.jackson.databind.AnnotationIntrospector
      description: Annotation introspector to register.
- uid: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(com.fasterxml.jackson.core.JsonFactory.Feature)
  id: isEnabled(com.fasterxml.jackson.core.JsonFactory.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: isEnabled(JsonFactory.Feature f)
  nameWithType: Module.SetupContext.isEnabled(JsonFactory.Feature f)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(JsonFactory.Feature f)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public abstract boolean isEnabled(JsonFactory.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.JsonFactory.Feature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  id: isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: isEnabled(JsonGenerator.Feature f)
  nameWithType: Module.SetupContext.isEnabled(JsonGenerator.Feature f)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(JsonGenerator.Feature f)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public abstract boolean isEnabled(JsonGenerator.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.JsonGenerator.Feature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  id: isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: isEnabled(JsonParser.Feature f)
  nameWithType: Module.SetupContext.isEnabled(JsonParser.Feature f)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(JsonParser.Feature f)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public abstract boolean isEnabled(JsonParser.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.JsonParser.Feature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
  id: isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: isEnabled(DeserializationFeature f)
  nameWithType: Module.SetupContext.isEnabled(DeserializationFeature f)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(DeserializationFeature f)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public abstract boolean isEnabled(DeserializationFeature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.databind.DeserializationFeature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  id: isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: isEnabled(MapperFeature f)
  nameWithType: Module.SetupContext.isEnabled(MapperFeature f)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(MapperFeature f)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public abstract boolean isEnabled(MapperFeature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.databind.MapperFeature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
  id: isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: isEnabled(SerializationFeature f)
  nameWithType: Module.SetupContext.isEnabled(SerializationFeature f)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled(SerializationFeature f)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public abstract boolean isEnabled(SerializationFeature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.databind.SerializationFeature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.Module.SetupContext.registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType...)
  id: registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: registerSubtypes(NamedType[] subtypes)
  nameWithType: Module.SetupContext.registerSubtypes(NamedType[] subtypes)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.registerSubtypes(NamedType[] subtypes)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.registerSubtypes*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for registering specified classes as subtypes (of supertype(s) they have), using specified type names.
  syntax:
    content: public abstract void registerSubtypes(NamedType[] subtypes)
    parameters:
    - id: subtypes
      type: com.fasterxml.jackson.databind.jsontype.NamedType[]
- uid: com.fasterxml.jackson.databind.Module.SetupContext.registerSubtypes(java.lang.Class<?>...)
  id: registerSubtypes(java.lang.Class<?>...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: registerSubtypes(Class<?>[] subtypes)
  nameWithType: Module.SetupContext.registerSubtypes(Class<?>[] subtypes)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.registerSubtypes(Class<?>[] subtypes)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.registerSubtypes*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for registering specified classes as subtypes (of supertype(s) they have)
  syntax:
    content: public abstract void registerSubtypes(Class<?>[] subtypes)
    parameters:
    - id: subtypes
      type: java.lang.Class<?>[]
- uid: com.fasterxml.jackson.databind.Module.SetupContext.registerSubtypes(java.util.Collection<java.lang.Class<?>>)
  id: registerSubtypes(java.util.Collection<java.lang.Class<?>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: registerSubtypes(Collection<Class<?>> subtypes)
  nameWithType: Module.SetupContext.registerSubtypes(Collection<Class<?>> subtypes)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.registerSubtypes(Collection<Class<?>> subtypes)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.registerSubtypes*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for registering specified classes as subtypes (of supertype(s) they have)
  syntax:
    content: public abstract void registerSubtypes(Collection<Class<?>> subtypes)
    parameters:
    - id: subtypes
      type: java.util.Collection<java.lang.Class<?>>
- uid: com.fasterxml.jackson.databind.Module.SetupContext.setClassIntrospector(com.fasterxml.jackson.databind.introspect.ClassIntrospector)
  id: setClassIntrospector(com.fasterxml.jackson.databind.introspect.ClassIntrospector)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: setClassIntrospector(ClassIntrospector ci)
  nameWithType: Module.SetupContext.setClassIntrospector(ClassIntrospector ci)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.setClassIntrospector(ClassIntrospector ci)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.setClassIntrospector*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for replacing the default class introspector with a derived class that overrides specific behavior.
  syntax:
    content: public abstract void setClassIntrospector(ClassIntrospector ci)
    parameters:
    - id: ci
      type: com.fasterxml.jackson.databind.introspect.ClassIntrospector
      description: Derived class of ClassIntrospector with overriden behavior
- uid: com.fasterxml.jackson.databind.Module.SetupContext.setMixInAnnotations(java.lang.Class<?>,java.lang.Class<?>)
  id: setMixInAnnotations(java.lang.Class<?>,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: setMixInAnnotations(Class<?> target, Class<?> mixinSource)
  nameWithType: Module.SetupContext.setMixInAnnotations(Class<?> target, Class<?> mixinSource)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.setMixInAnnotations(Class<?> target, Class<?> mixinSource)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.setMixInAnnotations*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method used for defining mix-in annotations to use for augmenting specified class or interface. All annotations from `mixinSource` are taken to override annotations that `target` (or its supertypes) has.


    Note: mix-ins are registered both for serialization and deserialization (which can be different internally).


    Note: currently only one set of mix-in annotations can be defined for a single class; so if multiple modules register mix-ins, highest priority one (last one registered) will have priority over other modules.
  syntax:
    content: public abstract void setMixInAnnotations(Class<?> target, Class<?> mixinSource)
    parameters:
    - id: target
      type: java.lang.Class<?>
      description: Class (or interface) whose annotations to effectively override
    - id: mixinSource
      type: java.lang.Class<?>
      description: >-
        Class (or interface) whose annotations are to
           be "added" to target's annotations, overriding as necessary
- uid: com.fasterxml.jackson.databind.Module.SetupContext.setNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy)
  id: setNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.Module.SetupContext
  langs:
  - java
  name: setNamingStrategy(PropertyNamingStrategy naming)
  nameWithType: Module.SetupContext.setNamingStrategy(PropertyNamingStrategy naming)
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.setNamingStrategy(PropertyNamingStrategy naming)
  overload: com.fasterxml.jackson.databind.Module.SetupContext.setNamingStrategy*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that may be used to override naming strategy that is used by <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref>.
  syntax:
    content: public abstract void setNamingStrategy(PropertyNamingStrategy naming)
    parameters:
    - id: naming
      type: com.fasterxml.jackson.databind.PropertyNamingStrategy
references:
- uid: com.fasterxml.jackson.core.Version
  name: Version
  nameWithType: Version
  fullName: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.databind.Module.SetupContext.getMapperVersion*
  name: getMapperVersion
  nameWithType: Module.SetupContext.getMapperVersion
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.getMapperVersion
  package: com.fasterxml.jackson.databind
- uid: C
  spec.java:
  - uid: C
    name: C
    fullName: C
- uid: com.fasterxml.jackson.databind.Module.SetupContext.getOwner*
  name: <C>getOwner
  nameWithType: Module.SetupContext.<C>getOwner
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.<C>getOwner
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.type.TypeFactory
  name: TypeFactory
  nameWithType: TypeFactory
  fullName: com.fasterxml.jackson.databind.type.TypeFactory
- uid: com.fasterxml.jackson.databind.Module.SetupContext.getTypeFactory*
  name: getTypeFactory
  nameWithType: Module.SetupContext.getTypeFactory
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.getTypeFactory
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.MapperFeature
  name: MapperFeature
  nameWithType: MapperFeature
  fullName: com.fasterxml.jackson.databind.MapperFeature
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled*
  name: isEnabled
  nameWithType: Module.SetupContext.isEnabled
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.isEnabled
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.DeserializationFeature
  name: DeserializationFeature
  nameWithType: DeserializationFeature
  fullName: com.fasterxml.jackson.databind.DeserializationFeature
- uid: com.fasterxml.jackson.databind.SerializationFeature
  name: SerializationFeature
  nameWithType: SerializationFeature
  fullName: com.fasterxml.jackson.databind.SerializationFeature
- uid: com.fasterxml.jackson.core.JsonFactory.Feature
  name: JsonFactory.Feature
  nameWithType: JsonFactory.Feature
  fullName: com.fasterxml.jackson.core.JsonFactory.Feature
- uid: com.fasterxml.jackson.core.JsonParser.Feature
  name: JsonParser.Feature
  nameWithType: JsonParser.Feature
  fullName: com.fasterxml.jackson.core.JsonParser.Feature
- uid: com.fasterxml.jackson.core.JsonGenerator.Feature
  name: JsonGenerator.Feature
  nameWithType: JsonGenerator.Feature
  fullName: com.fasterxml.jackson.core.JsonGenerator.Feature
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.cfg.MutableConfigOverride
  name: MutableConfigOverride
  nameWithType: MutableConfigOverride
  fullName: com.fasterxml.jackson.databind.cfg.MutableConfigOverride
- uid: com.fasterxml.jackson.databind.Module.SetupContext.configOverride*
  name: configOverride
  nameWithType: Module.SetupContext.configOverride
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.configOverride
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.deser.Deserializers
  name: Deserializers
  nameWithType: Deserializers
  fullName: com.fasterxml.jackson.databind.deser.Deserializers
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addDeserializers*
  name: addDeserializers
  nameWithType: Module.SetupContext.addDeserializers
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addDeserializers
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.deser.KeyDeserializers
  name: KeyDeserializers
  nameWithType: KeyDeserializers
  fullName: com.fasterxml.jackson.databind.deser.KeyDeserializers
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addKeyDeserializers*
  name: addKeyDeserializers
  nameWithType: Module.SetupContext.addKeyDeserializers
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addKeyDeserializers
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ser.Serializers
  name: Serializers
  nameWithType: Serializers
  fullName: com.fasterxml.jackson.databind.ser.Serializers
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addSerializers*
  name: addSerializers
  nameWithType: Module.SetupContext.addSerializers
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addSerializers
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addKeySerializers*
  name: addKeySerializers
  nameWithType: Module.SetupContext.addKeySerializers
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addKeySerializers
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
  name: BeanDeserializerModifier
  nameWithType: BeanDeserializerModifier
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addBeanDeserializerModifier*
  name: addBeanDeserializerModifier
  nameWithType: Module.SetupContext.addBeanDeserializerModifier
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addBeanDeserializerModifier
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
  name: BeanSerializerModifier
  nameWithType: BeanSerializerModifier
  fullName: com.fasterxml.jackson.databind.ser.BeanSerializerModifier
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addBeanSerializerModifier*
  name: addBeanSerializerModifier
  nameWithType: Module.SetupContext.addBeanSerializerModifier
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addBeanSerializerModifier
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.AbstractTypeResolver
  name: AbstractTypeResolver
  nameWithType: AbstractTypeResolver
  fullName: com.fasterxml.jackson.databind.AbstractTypeResolver
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addAbstractTypeResolver*
  name: addAbstractTypeResolver
  nameWithType: Module.SetupContext.addAbstractTypeResolver
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addAbstractTypeResolver
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.type.TypeModifier
  name: TypeModifier
  nameWithType: TypeModifier
  fullName: com.fasterxml.jackson.databind.type.TypeModifier
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addTypeModifier*
  name: addTypeModifier
  nameWithType: Module.SetupContext.addTypeModifier
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addTypeModifier
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.deser.ValueInstantiators
  name: ValueInstantiators
  nameWithType: ValueInstantiators
  fullName: com.fasterxml.jackson.databind.deser.ValueInstantiators
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addValueInstantiators*
  name: addValueInstantiators
  nameWithType: Module.SetupContext.addValueInstantiators
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addValueInstantiators
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.introspect.ClassIntrospector
  name: ClassIntrospector
  nameWithType: ClassIntrospector
  fullName: com.fasterxml.jackson.databind.introspect.ClassIntrospector
- uid: com.fasterxml.jackson.databind.Module.SetupContext.setClassIntrospector*
  name: setClassIntrospector
  nameWithType: Module.SetupContext.setClassIntrospector
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.setClassIntrospector
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.AnnotationIntrospector
  name: AnnotationIntrospector
  nameWithType: AnnotationIntrospector
  fullName: com.fasterxml.jackson.databind.AnnotationIntrospector
- uid: com.fasterxml.jackson.databind.Module.SetupContext.insertAnnotationIntrospector*
  name: insertAnnotationIntrospector
  nameWithType: Module.SetupContext.insertAnnotationIntrospector
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.insertAnnotationIntrospector
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.Module.SetupContext.appendAnnotationIntrospector*
  name: appendAnnotationIntrospector
  nameWithType: Module.SetupContext.appendAnnotationIntrospector
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.appendAnnotationIntrospector
  package: com.fasterxml.jackson.databind
- uid: java.lang.Class<?>[]
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.Module.SetupContext.registerSubtypes*
  name: registerSubtypes
  nameWithType: Module.SetupContext.registerSubtypes
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.registerSubtypes
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.jsontype.NamedType[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.jsontype.NamedType
    name: NamedType
    fullName: com.fasterxml.jackson.databind.jsontype.NamedType
  - name: '[]'
    fullName: '[]'
- uid: java.util.Collection<java.lang.Class<?>>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.Module.SetupContext.setMixInAnnotations*
  name: setMixInAnnotations
  nameWithType: Module.SetupContext.setMixInAnnotations
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.setMixInAnnotations
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.deser.DeserializationProblemHandler
  name: DeserializationProblemHandler
  nameWithType: DeserializationProblemHandler
  fullName: com.fasterxml.jackson.databind.deser.DeserializationProblemHandler
- uid: com.fasterxml.jackson.databind.Module.SetupContext.addDeserializationProblemHandler*
  name: addDeserializationProblemHandler
  nameWithType: Module.SetupContext.addDeserializationProblemHandler
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.addDeserializationProblemHandler
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy
  name: PropertyNamingStrategy
  nameWithType: PropertyNamingStrategy
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy
- uid: com.fasterxml.jackson.databind.Module.SetupContext.setNamingStrategy*
  name: setNamingStrategy
  nameWithType: Module.SetupContext.setNamingStrategy
  fullName: com.fasterxml.jackson.databind.Module.SetupContext.setNamingStrategy
  package: com.fasterxml.jackson.databind
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: ?>[]
  name: ?>[]
  nameWithType: ?>[]
  fullName: ?>[]
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
