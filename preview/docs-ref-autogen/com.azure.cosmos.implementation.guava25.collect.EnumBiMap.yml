### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.EnumBiMap
  id: EnumBiMap
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.EnumBiMap.<K,V>create(java.lang.Class<K>,java.lang.Class<V>)
  - com.azure.cosmos.implementation.guava25.collect.EnumBiMap.<K,V>create(java.util.Map<K,V>)
  - com.azure.cosmos.implementation.guava25.collect.EnumBiMap.keyType()
  - com.azure.cosmos.implementation.guava25.collect.EnumBiMap.valueType()
  langs:
  - java
  name: EnumBiMap<K,V>
  nameWithType: EnumBiMap<K,V>
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumBiMap<K,V>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A `BiMap` backed by two `EnumMap` instances. Null keys and values are not permitted. An `EnumBiMap` and its inverse are both serializable.


    See the Guava User Guide article on [ `BiMap`][_BiMap].



    [_BiMap]: https://github.com/google/guava/wiki/NewCollectionTypesExplained#bimap
  syntax:
    content: public final class EnumBiMap<K,V> extends AbstractBiMap<K,V>
    typeParameters:
    - id: K
    - id: V
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.clear()
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.containsValue(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.delegate()
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.entrySet()
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.forcePut(K,V)
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.inverse()
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.keySet()
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.put(K,V)
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.putAll(java.util.Map<? extends K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.remove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.replaceAll(java.util.function.BiFunction<? super K,? super V,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.values()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.get(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardClear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsKey(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardEquals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardHashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardIsEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map<? extends K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardRemove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardToString()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.EnumBiMap.<K,V>create(java.lang.Class<K>,java.lang.Class<V>)
  id: <K,V>create(java.lang.Class<K>,java.lang.Class<V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumBiMap
  langs:
  - java
  name: <K,V>create(Class<K> keyType, Class<V> valueType)
  nameWithType: EnumBiMap<K,V>.<K,V>create(Class<K> keyType, Class<V> valueType)
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumBiMap<K,V>.<K,V>create(Class<K> keyType, Class<V> valueType)
  overload: com.azure.cosmos.implementation.guava25.collect.EnumBiMap.create*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a new, empty `EnumBiMap` using the specified key and value types.
  syntax:
    content: public static EnumBiMap<K,V> <K,V>create(Class<K> keyType, Class<V> valueType)
    parameters:
    - id: keyType
      type: java.lang.Class<K>
      description: the key type
    - id: valueType
      type: java.lang.Class<V>
      description: the value type
    return:
      type: com.azure.cosmos.implementation.guava25.collect.EnumBiMap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.EnumBiMap.<K,V>create(java.util.Map<K,V>)
  id: <K,V>create(java.util.Map<K,V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumBiMap
  langs:
  - java
  name: <K,V>create(Map<K,V> map)
  nameWithType: EnumBiMap<K,V>.<K,V>create(Map<K,V> map)
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumBiMap<K,V>.<K,V>create(Map<K,V> map)
  overload: com.azure.cosmos.implementation.guava25.collect.EnumBiMap.create*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a new bimap with the same mappings as the specified map. If the specified map is an `EnumBiMap`, the new bimap has the same types as the provided map. Otherwise, the specified map must contain at least one mapping, in order to determine the key and value types.
  syntax:
    content: public static EnumBiMap<K,V> <K,V>create(Map<K,V> map)
    parameters:
    - id: map
      type: java.util.Map<K,V>
      description: the map whose mappings are to be placed in this map
    return:
      type: com.azure.cosmos.implementation.guava25.collect.EnumBiMap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.EnumBiMap.EnumBiMap(java.lang.Class<K>,java.lang.Class<V>)
  id: EnumBiMap(java.lang.Class<K>,java.lang.Class<V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumBiMap
  langs:
  - java
  name: EnumBiMap(Class<K> keyType, Class<V> valueType)
  nameWithType: EnumBiMap<K,V>.EnumBiMap(Class<K> keyType, Class<V> valueType)
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumBiMap<K,V>.EnumBiMap(Class<K> keyType, Class<V> valueType)
  overload: com.azure.cosmos.implementation.guava25.collect.EnumBiMap.EnumBiMap*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: private EnumBiMap(Class<K> keyType, Class<V> valueType)
    parameters:
    - id: keyType
      type: java.lang.Class<K>
    - id: valueType
      type: java.lang.Class<V>
- uid: com.azure.cosmos.implementation.guava25.collect.EnumBiMap.keyType()
  id: keyType()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumBiMap
  langs:
  - java
  name: keyType()
  nameWithType: EnumBiMap<K,V>.keyType()
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumBiMap<K,V>.keyType()
  overload: com.azure.cosmos.implementation.guava25.collect.EnumBiMap.keyType*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the associated key type.
  syntax:
    content: public Class<K> keyType()
    return:
      type: java.lang.Class<K>
- uid: com.azure.cosmos.implementation.guava25.collect.EnumBiMap.valueType()
  id: valueType()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.EnumBiMap
  langs:
  - java
  name: valueType()
  nameWithType: EnumBiMap<K,V>.valueType()
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumBiMap<K,V>.valueType()
  overload: com.azure.cosmos.implementation.guava25.collect.EnumBiMap.valueType*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the associated value type.
  syntax:
    content: public Class<V> valueType()
    return:
      type: java.lang.Class<V>
references:
- uid: java.lang.Class<K>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: '>'
    fullName: '>'
- uid: java.lang.Class<V>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.EnumBiMap.EnumBiMap*
  name: EnumBiMap
  nameWithType: EnumBiMap<K,V>.EnumBiMap
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumBiMap<K,V>.EnumBiMap
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.EnumBiMap<K,V>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.EnumBiMap
    name: EnumBiMap
    fullName: com.azure.cosmos.implementation.guava25.collect.EnumBiMap
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.EnumBiMap.create*
  name: <K,V>create
  nameWithType: EnumBiMap<K,V>.<K,V>create
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumBiMap<K,V>.<K,V>create
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Map<K,V>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.EnumBiMap.keyType*
  name: keyType
  nameWithType: EnumBiMap<K,V>.keyType
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumBiMap<K,V>.keyType
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.EnumBiMap.valueType*
  name: valueType
  nameWithType: EnumBiMap<K,V>.valueType
  fullName: com.azure.cosmos.implementation.guava25.collect.EnumBiMap<K,V>.valueType
  package: com.azure.cosmos.implementation.guava25.collect
- uid: K
  name: K
  nameWithType: K
  fullName: K
- uid: V
  name: V
  nameWithType: V
  fullName: V
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap<K,V>
  name: AbstractBiMap<K,V>
  nameWithType: AbstractBiMap<K,V>
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap<K,V>
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals(java.lang.Object)
  name: ForwardingMap.equals(Object)
  nameWithType: ForwardingMap.equals(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals(java.lang.Object)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.containsValue(java.lang.Object)
  name: AbstractBiMap.containsValue(Object)
  nameWithType: AbstractBiMap.containsValue(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.containsValue(java.lang.Object)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.values()
  name: AbstractBiMap.values()
  nameWithType: AbstractBiMap.values()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.values()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardHashCode()
  name: ForwardingMap.standardHashCode()
  nameWithType: ForwardingMap.standardHashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardHashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.putAll(java.util.Map<? extends K,? extends V>)
  name: AbstractBiMap.putAll(Map<? extends K,? extends V>)
  nameWithType: AbstractBiMap.putAll(Map<? extends K,? extends V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.putAll(java.util.Map<? extends K,? extends V>)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.forcePut(K,V)
  name: AbstractBiMap.forcePut(K,V)
  nameWithType: AbstractBiMap.forcePut(K,V)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.forcePut(K,V)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue(java.lang.Object)
  name: ForwardingMap.standardContainsValue(Object)
  nameWithType: ForwardingMap.standardContainsValue(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.clear()
  name: AbstractBiMap.clear()
  nameWithType: AbstractBiMap.clear()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.clear()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.put(K,V)
  name: AbstractBiMap.put(K,V)
  nameWithType: AbstractBiMap.put(K,V)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.put(K,V)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardClear()
  name: ForwardingMap.standardClear()
  nameWithType: ForwardingMap.standardClear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardClear()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size()
  name: ForwardingMap.size()
  nameWithType: ForwardingMap.size()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode()
  name: ForwardingMap.hashCode()
  nameWithType: ForwardingMap.hashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.replaceAll(java.util.function.BiFunction<? super K,? super V,? extends V>)
  name: AbstractBiMap.replaceAll(BiFunction<? super K,? super V,? extends V>)
  nameWithType: AbstractBiMap.replaceAll(BiFunction<? super K,? super V,? extends V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.replaceAll(java.util.function.BiFunction<? super K,? super V,? extends V>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsKey(java.lang.Object)
  name: ForwardingMap.standardContainsKey(Object)
  nameWithType: ForwardingMap.standardContainsKey(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsKey(java.lang.Object)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.keySet()
  name: AbstractBiMap.keySet()
  nameWithType: AbstractBiMap.keySet()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.keySet()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardToString()
  name: ForwardingMap.standardToString()
  nameWithType: ForwardingMap.standardToString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardToString()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map<? extends K,? extends V>)
  name: ForwardingMap.standardPutAll(Map<? extends K,? extends V>)
  nameWithType: ForwardingMap.standardPutAll(Map<? extends K,? extends V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map<? extends K,? extends V>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.get(java.lang.Object)
  name: ForwardingMap.get(Object)
  nameWithType: ForwardingMap.get(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.get(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.delegate()
  name: AbstractBiMap.delegate()
  nameWithType: AbstractBiMap.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.delegate()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.inverse()
  name: AbstractBiMap.inverse()
  nameWithType: AbstractBiMap.inverse()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.inverse()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardRemove(java.lang.Object)
  name: ForwardingMap.standardRemove(Object)
  nameWithType: ForwardingMap.standardRemove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardRemove(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.entrySet()
  name: AbstractBiMap.entrySet()
  nameWithType: AbstractBiMap.entrySet()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.entrySet()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardIsEmpty()
  name: ForwardingMap.standardIsEmpty()
  nameWithType: ForwardingMap.standardIsEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardIsEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  name: ForwardingObject.toString()
  nameWithType: ForwardingObject.toString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty()
  name: ForwardingMap.isEmpty()
  nameWithType: ForwardingMap.isEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.remove(java.lang.Object)
  name: AbstractBiMap.remove(Object)
  nameWithType: AbstractBiMap.remove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.remove(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardEquals(java.lang.Object)
  name: ForwardingMap.standardEquals(Object)
  nameWithType: ForwardingMap.standardEquals(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardEquals(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey(java.lang.Object)
  name: ForwardingMap.containsKey(Object)
  nameWithType: ForwardingMap.containsKey(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey(java.lang.Object)
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: K,V
  name: K,V
  nameWithType: K,V
  fullName: K,V
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap
  name: AbstractBiMap
  nameWithType: AbstractBiMap
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap
- uid: '? extends K,? extends V>)'
  name: '? extends K,? extends V>)'
  nameWithType: '? extends K,? extends V>)'
  fullName: '? extends K,? extends V>)'
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.putAll(java.util.Map
  name: AbstractBiMap.putAll(Map
  nameWithType: AbstractBiMap.putAll(Map
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.putAll(java.util.Map
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.replaceAll(java.util.function.BiFunction
  name: AbstractBiMap.replaceAll(BiFunction
  nameWithType: AbstractBiMap.replaceAll(BiFunction
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractBiMap.replaceAll(java.util.function.BiFunction
- uid: '? super K,? super V,? extends V>)'
  name: '? super K,? super V,? extends V>)'
  nameWithType: '? super K,? super V,? extends V>)'
  fullName: '? super K,? super V,? extends V>)'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map
  name: ForwardingMap.standardPutAll(Map
  nameWithType: ForwardingMap.standardPutAll(Map
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map
