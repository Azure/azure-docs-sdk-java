### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.Multimaps"
fullName: "com.azure.cosmos.implementation.guava25.collect.Multimaps"
name: "Multimaps"
nameWithType: "Multimaps"
summary: "Provides static methods acting on or generating a `Multimap`.\n\nSee the Guava User Guide article on [ `Multimaps`][_Multimaps].\n\n\n[_Multimaps]: https://github.com/google/guava/wiki/CollectionUtilitiesExplained#multimaps"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Multimaps"
methods:
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V,M>invertFrom(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends V,? extends K>,M)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V1,V2>transformEntries(com.azure.cosmos.implementation.guava25.collect.ListMultimap<K,V1>,com.azure.cosmos.implementation.guava25.collect.Maps.EntryTransformer<? super K,? super V1,V2>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V1,V2>transformEntries(com.azure.cosmos.implementation.guava25.collect.Multimap<K,V1>,com.azure.cosmos.implementation.guava25.collect.Maps.EntryTransformer<? super K,? super V1,V2>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V1,V2>transformValues(com.azure.cosmos.implementation.guava25.collect.ListMultimap<K,V1>,com.azure.cosmos.implementation.guava25.base.Function<? super V1,V2>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V1,V2>transformValues(com.azure.cosmos.implementation.guava25.collect.Multimap<K,V1>,com.azure.cosmos.implementation.guava25.base.Function<? super V1,V2>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>asMap(com.azure.cosmos.implementation.guava25.collect.ListMultimap<K,V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>asMap(com.azure.cosmos.implementation.guava25.collect.Multimap<K,V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>asMap(com.azure.cosmos.implementation.guava25.collect.SetMultimap<K,V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>asMap(com.azure.cosmos.implementation.guava25.collect.SortedSetMultimap<K,V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>filterEntries(com.azure.cosmos.implementation.guava25.collect.Multimap<K,V>,com.azure.cosmos.implementation.guava25.base.Predicate<? super java.util.Map.Entry<K,V>>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>filterEntries(com.azure.cosmos.implementation.guava25.collect.SetMultimap<K,V>,com.azure.cosmos.implementation.guava25.base.Predicate<? super java.util.Map.Entry<K,V>>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>filterKeys(com.azure.cosmos.implementation.guava25.collect.ListMultimap<K,V>,com.azure.cosmos.implementation.guava25.base.Predicate<? super K>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>filterKeys(com.azure.cosmos.implementation.guava25.collect.Multimap<K,V>,com.azure.cosmos.implementation.guava25.base.Predicate<? super K>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>filterKeys(com.azure.cosmos.implementation.guava25.collect.SetMultimap<K,V>,com.azure.cosmos.implementation.guava25.base.Predicate<? super K>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>filterValues(com.azure.cosmos.implementation.guava25.collect.Multimap<K,V>,com.azure.cosmos.implementation.guava25.base.Predicate<? super V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>filterValues(com.azure.cosmos.implementation.guava25.collect.SetMultimap<K,V>,com.azure.cosmos.implementation.guava25.base.Predicate<? super V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>forMap(java.util.Map<K,V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>index(java.lang.Iterable<V>,com.azure.cosmos.implementation.guava25.base.Function<? super V,K>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>index(java.util.Iterator<V>,com.azure.cosmos.implementation.guava25.base.Function<? super V,K>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>newListMultimap(java.util.Map<K,java.util.Collection<V>>,com.azure.cosmos.implementation.guava25.base.Supplier<? extends java.util.List<V>>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>newMultimap(java.util.Map<K,java.util.Collection<V>>,com.azure.cosmos.implementation.guava25.base.Supplier<? extends java.util.Collection<V>>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>newSetMultimap(java.util.Map<K,java.util.Collection<V>>,com.azure.cosmos.implementation.guava25.base.Supplier<? extends java.util.Set<V>>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>newSortedSetMultimap(java.util.Map<K,java.util.Collection<V>>,com.azure.cosmos.implementation.guava25.base.Supplier<? extends java.util.SortedSet<V>>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>synchronizedListMultimap(com.azure.cosmos.implementation.guava25.collect.ListMultimap<K,V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>synchronizedMultimap(com.azure.cosmos.implementation.guava25.collect.Multimap<K,V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>synchronizedSetMultimap(com.azure.cosmos.implementation.guava25.collect.SetMultimap<K,V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>synchronizedSortedSetMultimap(com.azure.cosmos.implementation.guava25.collect.SortedSetMultimap<K,V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>unmodifiableListMultimap(com.azure.cosmos.implementation.guava25.collect.ImmutableListMultimap<K,V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>unmodifiableListMultimap(com.azure.cosmos.implementation.guava25.collect.ListMultimap<K,V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>unmodifiableMultimap(com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap<K,V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>unmodifiableMultimap(com.azure.cosmos.implementation.guava25.collect.Multimap<K,V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>unmodifiableSetMultimap(com.azure.cosmos.implementation.guava25.collect.ImmutableSetMultimap<K,V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>unmodifiableSetMultimap(com.azure.cosmos.implementation.guava25.collect.SetMultimap<K,V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>unmodifiableSortedSetMultimap(com.azure.cosmos.implementation.guava25.collect.SortedSetMultimap<K,V>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<T,K,V,M>flatteningToMultimap(java.util.function.Function<? super T,? extends K>,java.util.function.Function<? super T,? extends java.util.stream.Stream<? extends V>>,java.util.function.Supplier<M>)"
- "com.azure.cosmos.implementation.guava25.collect.Multimaps.<T,K,V,M>toMultimap(java.util.function.Function<? super T,? extends K>,java.util.function.Function<? super T,? extends V>,java.util.function.Supplier<M>)"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
