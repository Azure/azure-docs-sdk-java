### YamlMime:JavaMember
uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainWithServiceResponseAsync*"
fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainWithServiceResponseAsync"
name: "trainWithServiceResponseAsync"
nameWithType: "KnowledgebasesImpl.trainWithServiceResponseAsync"
members:
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainWithServiceResponseAsync(String kbId, TrainOptionalParameter trainOptionalParameter)"
  name: "trainWithServiceResponseAsync(String kbId, TrainOptionalParameter trainOptionalParameter)"
  nameWithType: "KnowledgebasesImpl.trainWithServiceResponseAsync(String kbId, TrainOptionalParameter trainOptionalParameter)"
  summary: "Train call to add suggestions to knowledgebase (QnAMaker Managed)."
  parameters:
  - description: "Knowledgebase id."
    name: "kbId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "trainOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter&text=TrainOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Observable<ServiceResponse<Void>> trainWithServiceResponseAsync(String kbId, TrainOptionalParameter trainOptionalParameter)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponse\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponse?alt=com.microsoft.rest.ServiceResponse&text=ServiceResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainWithServiceResponseAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.FeedbackRecordDTO>)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainWithServiceResponseAsync(String kbId, List<FeedbackRecordDTO> feedbackRecords)"
  name: "trainWithServiceResponseAsync(String kbId, List<FeedbackRecordDTO> feedbackRecords)"
  nameWithType: "KnowledgebasesImpl.trainWithServiceResponseAsync(String kbId, List<FeedbackRecordDTO> feedbackRecords)"
  summary: "Train call to add suggestions to knowledgebase (QnAMaker Managed)."
  parameters:
  - description: "Knowledgebase id."
    name: "kbId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "List of feedback records."
    name: "feedbackRecords"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.FeedbackRecordDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.FeedbackRecordDTO&text=FeedbackRecordDTO\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Observable<ServiceResponse<Void>> trainWithServiceResponseAsync(String kbId, List<FeedbackRecordDTO> feedbackRecords)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponse\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponse?alt=com.microsoft.rest.ServiceResponse&text=ServiceResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
