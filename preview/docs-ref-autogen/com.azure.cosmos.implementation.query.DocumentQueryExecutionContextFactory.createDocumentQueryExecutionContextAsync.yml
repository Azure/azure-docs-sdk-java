### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.createDocumentQueryExecutionContextAsync*"
fullName: "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.<T>createDocumentQueryExecutionContextAsync"
name: "<T>createDocumentQueryExecutionContextAsync"
nameWithType: "DocumentQueryExecutionContextFactory.<T>createDocumentQueryExecutionContextAsync"
members:
- uid: "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.<T>createDocumentQueryExecutionContextAsync(com.azure.cosmos.implementation.DiagnosticsClientContext,com.azure.cosmos.implementation.query.IDocumentQueryClient,com.azure.cosmos.implementation.ResourceType,java.lang.Class<T>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.String,boolean,java.util.UUID,boolean,java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.query.PartitionedQueryExecutionInfo>)"
  fullName: "com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.<T>createDocumentQueryExecutionContextAsync(DiagnosticsClientContext diagnosticsClientContext, IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceLink, boolean isContinuationExpected, UUID correlatedActivityId, boolean queryPlanCachingEnabled, ConcurrentMap<String,PartitionedQueryExecutionInfo> queryPlanCache)"
  name: "<T>createDocumentQueryExecutionContextAsync(DiagnosticsClientContext diagnosticsClientContext, IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceLink, boolean isContinuationExpected, UUID correlatedActivityId, boolean queryPlanCachingEnabled, ConcurrentMap<String,PartitionedQueryExecutionInfo> queryPlanCache)"
  nameWithType: "DocumentQueryExecutionContextFactory.<T>createDocumentQueryExecutionContextAsync(DiagnosticsClientContext diagnosticsClientContext, IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceLink, boolean isContinuationExpected, UUID correlatedActivityId, boolean queryPlanCachingEnabled, ConcurrentMap<String,PartitionedQueryExecutionInfo> queryPlanCache)"
  parameters:
  - name: "diagnosticsClientContext"
    type: "<xref href=\"com.azure.cosmos.implementation.DiagnosticsClientContext?alt=com.azure.cosmos.implementation.DiagnosticsClientContext&text=DiagnosticsClientContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "client"
    type: "<xref href=\"com.azure.cosmos.implementation.query.IDocumentQueryClient?alt=com.azure.cosmos.implementation.query.IDocumentQueryClient&text=IDocumentQueryClient\" data-throw-if-not-resolved=\"False\" />"
  - name: "resourceTypeEnum"
    type: "<xref href=\"com.azure.cosmos.implementation.ResourceType?alt=com.azure.cosmos.implementation.ResourceType&text=ResourceType\" data-throw-if-not-resolved=\"False\" />"
  - name: "resourceType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "query"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - name: "cosmosQueryRequestOptions"
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - name: "resourceLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "isContinuationExpected"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - name: "correlatedActivityId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - name: "queryPlanCachingEnabled"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - name: "queryPlanCache"
    type: "<xref href=\"java.util.concurrent.ConcurrentMap?alt=java.util.concurrent.ConcurrentMap&text=ConcurrentMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.cosmos.implementation.query.PartitionedQueryExecutionInfo?alt=com.azure.cosmos.implementation.query.PartitionedQueryExecutionInfo&text=PartitionedQueryExecutionInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Flux<? extends IDocumentQueryExecutionContext<T>> <T>createDocumentQueryExecutionContextAsync(DiagnosticsClientContext diagnosticsClientContext, IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceLink, boolean isContinuationExpected, UUID correlatedActivityId, boolean queryPlanCachingEnabled, ConcurrentMap<String,PartitionedQueryExecutionInfo> queryPlanCache)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends com.azure.cosmos.implementation.query.IDocumentQueryExecutionContext?alt=? extends com.azure.cosmos.implementation.query.IDocumentQueryExecutionContext&text=IDocumentQueryExecutionContext\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.query"
artifact: com.azure:azure-cosmos:4.15.0-beta.2
