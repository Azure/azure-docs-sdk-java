### YamlMime:JavaMember
uid: "com.azure.resourcemanager.peering.implementation.ResourceProvidersImpl.checkServiceProviderAvailability*"
fullName: "com.azure.resourcemanager.peering.implementation.ResourceProvidersImpl.checkServiceProviderAvailability"
name: "checkServiceProviderAvailability"
nameWithType: "ResourceProvidersImpl.checkServiceProviderAvailability"
members:
- uid: "com.azure.resourcemanager.peering.implementation.ResourceProvidersImpl.checkServiceProviderAvailability(com.azure.resourcemanager.peering.models.CheckServiceProviderAvailabilityInput)"
  fullName: "com.azure.resourcemanager.peering.implementation.ResourceProvidersImpl.checkServiceProviderAvailability(CheckServiceProviderAvailabilityInput checkServiceProviderAvailabilityInput)"
  name: "checkServiceProviderAvailability(CheckServiceProviderAvailabilityInput checkServiceProviderAvailabilityInput)"
  nameWithType: "ResourceProvidersImpl.checkServiceProviderAvailability(CheckServiceProviderAvailabilityInput checkServiceProviderAvailabilityInput)"
  summary: "Checks if the peering service provider is present within 1000 miles of customer's location."
  parameters:
  - name: "checkServiceProviderAvailabilityInput"
    type: "<xref href=\"com.azure.resourcemanager.peering.models.CheckServiceProviderAvailabilityInput?alt=com.azure.resourcemanager.peering.models.CheckServiceProviderAvailabilityInput&text=CheckServiceProviderAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Enum0 checkServiceProviderAvailability(CheckServiceProviderAvailabilityInput checkServiceProviderAvailabilityInput)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.peering.models.Enum0?alt=com.azure.resourcemanager.peering.models.Enum0&text=Enum0\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.peering.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
