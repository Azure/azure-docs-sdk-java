### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.annotation.ThreadingBehavior
  id: ThreadingBehavior
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.annotation
  children:
  - org.apache.hc.core5.annotation.ThreadingBehavior.IMMUTABLE
  - org.apache.hc.core5.annotation.ThreadingBehavior.IMMUTABLE_CONDITIONAL
  - org.apache.hc.core5.annotation.ThreadingBehavior.SAFE
  - org.apache.hc.core5.annotation.ThreadingBehavior.SAFE_CONDITIONAL
  - org.apache.hc.core5.annotation.ThreadingBehavior.STATELESS
  - org.apache.hc.core5.annotation.ThreadingBehavior.UNSAFE
  - org.apache.hc.core5.annotation.ThreadingBehavior.valueOf(java.lang.String)
  - org.apache.hc.core5.annotation.ThreadingBehavior.values()
  langs:
  - java
  name: ThreadingBehavior
  nameWithType: ThreadingBehavior
  fullName: org.apache.hc.core5.annotation.ThreadingBehavior
  type: Enum
  package: org.apache.hc.core5.annotation
  summary: Defines types of threading behavior enforced at runtime.
  syntax:
    content: public enum ThreadingBehavior extends Enum<ThreadingBehavior>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.annotation.ThreadingBehavior.IMMUTABLE
  id: IMMUTABLE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.annotation.ThreadingBehavior
  langs:
  - java
  name: IMMUTABLE
  nameWithType: ThreadingBehavior.IMMUTABLE
  fullName: org.apache.hc.core5.annotation.ThreadingBehavior.IMMUTABLE
  type: Field
  package: org.apache.hc.core5.annotation
  summary: Instances of classes with the given contract are expected to be fully immutable and thread-safe.
  syntax:
    content: public static final ThreadingBehavior IMMUTABLE
    return:
      type: org.apache.hc.core5.annotation.ThreadingBehavior
- uid: org.apache.hc.core5.annotation.ThreadingBehavior.IMMUTABLE_CONDITIONAL
  id: IMMUTABLE_CONDITIONAL
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.annotation.ThreadingBehavior
  langs:
  - java
  name: IMMUTABLE_CONDITIONAL
  nameWithType: ThreadingBehavior.IMMUTABLE_CONDITIONAL
  fullName: org.apache.hc.core5.annotation.ThreadingBehavior.IMMUTABLE_CONDITIONAL
  type: Field
  package: org.apache.hc.core5.annotation
  summary: Instances of classes with the given contract are expected to be immutable if their dependencies injected at construction time are immutable and are expected to be thread-safe if their dependencies are thread-safe.
  syntax:
    content: public static final ThreadingBehavior IMMUTABLE_CONDITIONAL
    return:
      type: org.apache.hc.core5.annotation.ThreadingBehavior
- uid: org.apache.hc.core5.annotation.ThreadingBehavior.SAFE
  id: SAFE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.annotation.ThreadingBehavior
  langs:
  - java
  name: SAFE
  nameWithType: ThreadingBehavior.SAFE
  fullName: org.apache.hc.core5.annotation.ThreadingBehavior.SAFE
  type: Field
  package: org.apache.hc.core5.annotation
  summary: Instances of classes with the given contract are expected to be fully thread-safe.
  syntax:
    content: public static final ThreadingBehavior SAFE
    return:
      type: org.apache.hc.core5.annotation.ThreadingBehavior
- uid: org.apache.hc.core5.annotation.ThreadingBehavior.SAFE_CONDITIONAL
  id: SAFE_CONDITIONAL
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.annotation.ThreadingBehavior
  langs:
  - java
  name: SAFE_CONDITIONAL
  nameWithType: ThreadingBehavior.SAFE_CONDITIONAL
  fullName: org.apache.hc.core5.annotation.ThreadingBehavior.SAFE_CONDITIONAL
  type: Field
  package: org.apache.hc.core5.annotation
  summary: Instances of classes with the given contract are expected to be thread-safe if their dependencies injected at construction time are thread-safe.
  syntax:
    content: public static final ThreadingBehavior SAFE_CONDITIONAL
    return:
      type: org.apache.hc.core5.annotation.ThreadingBehavior
- uid: org.apache.hc.core5.annotation.ThreadingBehavior.STATELESS
  id: STATELESS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.annotation.ThreadingBehavior
  langs:
  - java
  name: STATELESS
  nameWithType: ThreadingBehavior.STATELESS
  fullName: org.apache.hc.core5.annotation.ThreadingBehavior.STATELESS
  type: Field
  package: org.apache.hc.core5.annotation
  summary: Instances of classes with the given contract are expected to maintain no state and to be thread-safe.
  syntax:
    content: public static final ThreadingBehavior STATELESS
    return:
      type: org.apache.hc.core5.annotation.ThreadingBehavior
- uid: org.apache.hc.core5.annotation.ThreadingBehavior.ThreadingBehavior()
  id: ThreadingBehavior()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.annotation.ThreadingBehavior
  langs:
  - java
  name: ThreadingBehavior()
  nameWithType: ThreadingBehavior.ThreadingBehavior()
  fullName: org.apache.hc.core5.annotation.ThreadingBehavior.ThreadingBehavior()
  overload: org.apache.hc.core5.annotation.ThreadingBehavior.ThreadingBehavior*
  type: Constructor
  package: org.apache.hc.core5.annotation
  syntax:
    content: private ThreadingBehavior()
- uid: org.apache.hc.core5.annotation.ThreadingBehavior.UNSAFE
  id: UNSAFE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.annotation.ThreadingBehavior
  langs:
  - java
  name: UNSAFE
  nameWithType: ThreadingBehavior.UNSAFE
  fullName: org.apache.hc.core5.annotation.ThreadingBehavior.UNSAFE
  type: Field
  package: org.apache.hc.core5.annotation
  summary: Instances of classes with the given contract are expected to be non thread-safe.
  syntax:
    content: public static final ThreadingBehavior UNSAFE
    return:
      type: org.apache.hc.core5.annotation.ThreadingBehavior
- uid: org.apache.hc.core5.annotation.ThreadingBehavior.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.annotation.ThreadingBehavior
  langs:
  - java
  name: valueOf(String name)
  nameWithType: ThreadingBehavior.valueOf(String name)
  fullName: org.apache.hc.core5.annotation.ThreadingBehavior.valueOf(String name)
  overload: org.apache.hc.core5.annotation.ThreadingBehavior.valueOf*
  type: Method
  package: org.apache.hc.core5.annotation
  syntax:
    content: public static ThreadingBehavior valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: org.apache.hc.core5.annotation.ThreadingBehavior
- uid: org.apache.hc.core5.annotation.ThreadingBehavior.values()
  id: values()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.annotation.ThreadingBehavior
  langs:
  - java
  name: values()
  nameWithType: ThreadingBehavior.values()
  fullName: org.apache.hc.core5.annotation.ThreadingBehavior.values()
  overload: org.apache.hc.core5.annotation.ThreadingBehavior.values*
  type: Method
  package: org.apache.hc.core5.annotation
  syntax:
    content: public static ThreadingBehavior[] values()
    return:
      type: org.apache.hc.core5.annotation.ThreadingBehavior[]
references:
- uid: org.apache.hc.core5.annotation.ThreadingBehavior.ThreadingBehavior*
  name: ThreadingBehavior
  nameWithType: ThreadingBehavior.ThreadingBehavior
  fullName: org.apache.hc.core5.annotation.ThreadingBehavior.ThreadingBehavior
  package: org.apache.hc.core5.annotation
- uid: org.apache.hc.core5.annotation.ThreadingBehavior[]
  spec.java:
  - uid: org.apache.hc.core5.annotation.ThreadingBehavior
    name: ThreadingBehavior
    fullName: org.apache.hc.core5.annotation.ThreadingBehavior
  - name: '[]'
    fullName: '[]'
- uid: org.apache.hc.core5.annotation.ThreadingBehavior.values*
  name: values
  nameWithType: ThreadingBehavior.values
  fullName: org.apache.hc.core5.annotation.ThreadingBehavior.values
  package: org.apache.hc.core5.annotation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.hc.core5.annotation.ThreadingBehavior.valueOf*
  name: valueOf
  nameWithType: ThreadingBehavior.valueOf
  fullName: org.apache.hc.core5.annotation.ThreadingBehavior.valueOf
  package: org.apache.hc.core5.annotation
- uid: java.lang.Enum<org.apache.hc.core5.annotation.ThreadingBehavior>
  name: Enum<ThreadingBehavior>
  nameWithType: Enum<ThreadingBehavior>
  fullName: java.lang.Enum<org.apache.hc.core5.annotation.ThreadingBehavior>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
