### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
  id: TypeSerializerBase
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl
  children:
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.TypeSerializerBase(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._generateTypeId(com.fasterxml.jackson.core.type.WritableTypeId)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._idResolver
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._property
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getPropertyName()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeIdResolver()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeInclusion()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.handleMissingId(java.lang.Object)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValue(java.lang.Object)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValueAndType(java.lang.Object,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  langs:
  - java
  name: TypeSerializerBase
  nameWithType: TypeSerializerBase
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
  type: Class
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: public abstract class TypeSerializerBase extends TypeSerializer
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer
  inheritedMembers:
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer._writeLegacySuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.getPropertyName()
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.getTypeIdResolver()
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.getTypeInclusion()
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken,java.lang.Object)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.TypeSerializerBase(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)
  id: TypeSerializerBase(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
  langs:
  - java
  name: TypeSerializerBase(TypeIdResolver idRes, BeanProperty property)
  nameWithType: TypeSerializerBase.TypeSerializerBase(TypeIdResolver idRes, BeanProperty property)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.TypeSerializerBase(TypeIdResolver idRes, BeanProperty property)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.TypeSerializerBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected TypeSerializerBase(TypeIdResolver idRes, BeanProperty property)
    parameters:
    - id: idRes
      type: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
    - id: property
      type: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._generateTypeId(com.fasterxml.jackson.core.type.WritableTypeId)
  id: _generateTypeId(com.fasterxml.jackson.core.type.WritableTypeId)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
  langs:
  - java
  name: _generateTypeId(WritableTypeId idMetadata)
  nameWithType: TypeSerializerBase._generateTypeId(WritableTypeId idMetadata)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._generateTypeId(WritableTypeId idMetadata)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._generateTypeId*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Helper method that will generate type id to use, if not already passed.
  syntax:
    content: protected void _generateTypeId(WritableTypeId idMetadata)
    parameters:
    - id: idMetadata
      type: com.fasterxml.jackson.core.type.WritableTypeId
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._idResolver
  id: _idResolver
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
  langs:
  - java
  name: _idResolver
  nameWithType: TypeSerializerBase._idResolver
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._idResolver
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected final TypeIdResolver _idResolver
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._property
  id: _property
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
  langs:
  - java
  name: _property
  nameWithType: TypeSerializerBase._property
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._property
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected final BeanProperty _property
    return:
      type: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getPropertyName()
  id: getPropertyName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
  langs:
  - java
  name: getPropertyName()
  nameWithType: TypeSerializerBase.getPropertyName()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getPropertyName()
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getPropertyName*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Name of property that contains type information, if property-based inclusion is used.
  syntax:
    content: public String getPropertyName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeIdResolver()
  id: getTypeIdResolver()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
  langs:
  - java
  name: getTypeIdResolver()
  nameWithType: TypeSerializerBase.getTypeIdResolver()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeIdResolver()
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeIdResolver*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Accessor for object that handles conversions between types and matching type ids.
  syntax:
    content: public TypeIdResolver getTypeIdResolver()
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeInclusion()
  id: getTypeInclusion()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
  langs:
  - java
  name: getTypeInclusion()
  nameWithType: TypeSerializerBase.getTypeInclusion()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeInclusion()
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeInclusion*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Accessor for type information inclusion method that serializer uses; indicates how type information is embedded in resulting JSON.
  syntax:
    content: public abstract JsonTypeInfo.As getTypeInclusion()
    return:
      type: com.fasterxml.jackson.annotation.JsonTypeInfo.As
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.handleMissingId(java.lang.Object)
  id: handleMissingId(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
  langs:
  - java
  name: handleMissingId(Object value)
  nameWithType: TypeSerializerBase.handleMissingId(Object value)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.handleMissingId(Object value)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.handleMissingId*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected void handleMissingId(Object value)
    parameters:
    - id: value
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValue(java.lang.Object)
  id: idFromValue(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
  langs:
  - java
  name: idFromValue(Object value)
  nameWithType: TypeSerializerBase.idFromValue(Object value)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValue(Object value)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValue*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected String idFromValue(Object value)
    parameters:
    - id: value
      type: java.lang.Object
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValueAndType(java.lang.Object,java.lang.Class<?>)
  id: idFromValueAndType(java.lang.Object,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
  langs:
  - java
  name: idFromValueAndType(Object value, Class<?> type)
  nameWithType: TypeSerializerBase.idFromValueAndType(Object value, Class<?> type)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValueAndType(Object value, Class<?> type)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValueAndType*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected String idFromValueAndType(Object value, Class<?> type)
    parameters:
    - id: value
      type: java.lang.Object
    - id: type
      type: java.lang.Class<?>
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  id: writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
  langs:
  - java
  name: writeTypePrefix(JsonGenerator g, WritableTypeId idMetadata)
  nameWithType: TypeSerializerBase.writeTypePrefix(JsonGenerator g, WritableTypeId idMetadata)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypePrefix(JsonGenerator g, WritableTypeId idMetadata)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypePrefix*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: >-
    Method called to write initial part of type information for given value, along with possible wrapping to use: details are specified by \`typeId\` argument. Note that for structured types (Object, Array), this call will add necessary start token so it should NOT be explicitly written, unlike with non-type-id value writes.


    See <xref uid="com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)" data-throw-if-not-resolved="false">#writeTypeSuffix(JsonGenerator, WritableTypeId)</xref> for a complete example of typical usage.
  syntax:
    content: public WritableTypeId writeTypePrefix(JsonGenerator g, WritableTypeId idMetadata)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: idMetadata
      type: com.fasterxml.jackson.core.type.WritableTypeId
    return:
      type: com.fasterxml.jackson.core.type.WritableTypeId
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  id: writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
  langs:
  - java
  name: writeTypeSuffix(JsonGenerator g, WritableTypeId idMetadata)
  nameWithType: TypeSerializerBase.writeTypeSuffix(JsonGenerator g, WritableTypeId idMetadata)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypeSuffix(JsonGenerator g, WritableTypeId idMetadata)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypeSuffix*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: "Method that should be called after <xref uid=\"com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)\" data-throw-if-not-resolved=\"false\">#writeTypePrefix(JsonGenerator, WritableTypeId)</xref> and matching value write have been called, passing <xref uid=\"com.fasterxml.jackson.core.type.WritableTypeId\" data-throw-if-not-resolved=\"false\">WritableTypeId</xref> returned. Usual idiom is:\n\n```java\n// Indicator generator that type identifier may be needed; generator may write\n // one as suggested, modify information, or take some other action \n // NOTE! For Object/Array types, this will ALSO write start marker!\n WritableTypeId typeIdDef = typeSer.writeTypePrefix(gen,\n          typeSer.typeId(value, JsonToken.START_OBJECT));\n\n // serializing actual value for which TypeId may have been written... like\n // NOTE: do NOT write START_OBJECT before OR END_OBJECT after:\n g.writeStringField(\"message\", \"Hello, world!\"\n\n // matching type suffix call to let generator chance to add suffix, if any\n // NOTE! For Object/Array types, this will ALSO write end marker!\n typeSer.writeTypeSuffix(gen, typeIdDef);\n```"
  syntax:
    content: public WritableTypeId writeTypeSuffix(JsonGenerator g, WritableTypeId idMetadata)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: idMetadata
      type: com.fasterxml.jackson.core.type.WritableTypeId
    return:
      type: com.fasterxml.jackson.core.type.WritableTypeId
  exceptions:
  - type: java.io.IOException
references:
- uid: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
  name: TypeIdResolver
  nameWithType: TypeIdResolver
  fullName: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
- uid: com.fasterxml.jackson.databind.BeanProperty
  name: BeanProperty
  nameWithType: BeanProperty
  fullName: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.TypeSerializerBase*
  name: TypeSerializerBase
  nameWithType: TypeSerializerBase.TypeSerializerBase
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.TypeSerializerBase
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.annotation.JsonTypeInfo.As
  name: JsonTypeInfo.As
  nameWithType: JsonTypeInfo.As
  fullName: com.fasterxml.jackson.annotation.JsonTypeInfo.As
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeInclusion*
  name: getTypeInclusion
  nameWithType: TypeSerializerBase.getTypeInclusion
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeInclusion
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getPropertyName*
  name: getPropertyName
  nameWithType: TypeSerializerBase.getPropertyName
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getPropertyName
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeIdResolver*
  name: getTypeIdResolver
  nameWithType: TypeSerializerBase.getTypeIdResolver
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.getTypeIdResolver
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.core.type.WritableTypeId
  name: WritableTypeId
  nameWithType: WritableTypeId
  fullName: com.fasterxml.jackson.core.type.WritableTypeId
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypePrefix*
  name: writeTypePrefix
  nameWithType: TypeSerializerBase.writeTypePrefix
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypePrefix
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypeSuffix*
  name: writeTypeSuffix
  nameWithType: TypeSerializerBase.writeTypeSuffix
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypeSuffix
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._generateTypeId*
  name: _generateTypeId
  nameWithType: TypeSerializerBase._generateTypeId
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._generateTypeId
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValue*
  name: idFromValue
  nameWithType: TypeSerializerBase.idFromValue
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValue
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValueAndType*
  name: idFromValueAndType
  nameWithType: TypeSerializerBase.idFromValueAndType
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValueAndType
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.handleMissingId*
  name: handleMissingId
  nameWithType: TypeSerializerBase.handleMissingId
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.handleMissingId
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  name: TypeSerializer.writeTypePrefixForScalar(Object,JsonGenerator)
  nameWithType: TypeSerializer.writeTypePrefixForScalar(Object,JsonGenerator)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  name: TypeSerializer.writeTypeSuffixForScalar(Object,JsonGenerator)
  nameWithType: TypeSerializer.writeTypeSuffixForScalar(Object,JsonGenerator)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.getTypeInclusion()
  name: TypeSerializer.getTypeInclusion()
  nameWithType: TypeSerializer.getTypeInclusion()
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.getTypeInclusion()
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.getPropertyName()
  name: TypeSerializer.getPropertyName()
  nameWithType: TypeSerializer.getPropertyName()
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.getPropertyName()
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken)
  name: TypeSerializer.typeId(Object,Class<?>,JsonToken)
  nameWithType: TypeSerializer.typeId(Object,Class<?>,JsonToken)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  name: TypeSerializer.writeTypeSuffix(JsonGenerator,WritableTypeId)
  nameWithType: TypeSerializer.writeTypeSuffix(JsonGenerator,WritableTypeId)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  name: TypeSerializer.writeTypePrefixForObject(Object,JsonGenerator)
  nameWithType: TypeSerializer.writeTypePrefixForObject(Object,JsonGenerator)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
  name: TypeSerializer.writeTypePrefixForArray(Object,JsonGenerator,Class<?>)
  nameWithType: TypeSerializer.writeTypePrefixForArray(Object,JsonGenerator,Class<?>)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.getTypeIdResolver()
  name: TypeSerializer.getTypeIdResolver()
  nameWithType: TypeSerializer.getTypeIdResolver()
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.getTypeIdResolver()
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken,java.lang.Object)
  name: TypeSerializer.typeId(Object,JsonToken,Object)
  nameWithType: TypeSerializer.typeId(Object,JsonToken,Object)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken,java.lang.Object)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  name: TypeSerializer.writeTypeSuffixForObject(Object,JsonGenerator)
  nameWithType: TypeSerializer.writeTypeSuffixForObject(Object,JsonGenerator)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
  name: TypeSerializer.writeTypePrefixForObject(Object,JsonGenerator,Class<?>)
  nameWithType: TypeSerializer.writeTypePrefixForObject(Object,JsonGenerator,Class<?>)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  name: TypeSerializer.writeCustomTypePrefixForScalar(Object,JsonGenerator,String)
  nameWithType: TypeSerializer.writeCustomTypePrefixForScalar(Object,JsonGenerator,String)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  name: TypeSerializer.writeCustomTypeSuffixForScalar(Object,JsonGenerator,String)
  nameWithType: TypeSerializer.writeCustomTypeSuffixForScalar(Object,JsonGenerator,String)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  name: TypeSerializer.writeCustomTypeSuffixForObject(Object,JsonGenerator,String)
  nameWithType: TypeSerializer.writeCustomTypeSuffixForObject(Object,JsonGenerator,String)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  name: TypeSerializer.forProperty(BeanProperty)
  nameWithType: TypeSerializer.forProperty(BeanProperty)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  name: TypeSerializer.writeCustomTypePrefixForArray(Object,JsonGenerator,String)
  nameWithType: TypeSerializer.writeCustomTypePrefixForArray(Object,JsonGenerator,String)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  name: TypeSerializer.writeCustomTypeSuffixForArray(Object,JsonGenerator,String)
  nameWithType: TypeSerializer.writeCustomTypeSuffixForArray(Object,JsonGenerator,String)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  name: TypeSerializer.writeTypePrefixForArray(Object,JsonGenerator)
  nameWithType: TypeSerializer.writeTypePrefixForArray(Object,JsonGenerator)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer._writeLegacySuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  name: TypeSerializer._writeLegacySuffix(JsonGenerator,WritableTypeId)
  nameWithType: TypeSerializer._writeLegacySuffix(JsonGenerator,WritableTypeId)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer._writeLegacySuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken)
  name: TypeSerializer.typeId(Object,JsonToken)
  nameWithType: TypeSerializer.typeId(Object,JsonToken)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
  name: TypeSerializer.writeTypePrefixForScalar(Object,JsonGenerator,Class<?>)
  nameWithType: TypeSerializer.writeTypePrefixForScalar(Object,JsonGenerator,Class<?>)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
  name: TypeSerializer.writeTypePrefix(JsonGenerator,WritableTypeId)
  nameWithType: TypeSerializer.writeTypePrefix(JsonGenerator,WritableTypeId)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  name: TypeSerializer.writeCustomTypePrefixForObject(Object,JsonGenerator,String)
  nameWithType: TypeSerializer.writeCustomTypePrefixForObject(Object,JsonGenerator,String)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
  name: TypeSerializer.writeTypeSuffixForArray(Object,JsonGenerator)
  nameWithType: TypeSerializer.writeTypeSuffixForArray(Object,JsonGenerator)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,java.lang.Class
  name: TypeSerializer.typeId(Object,Class
  nameWithType: TypeSerializer.typeId(Object,Class
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(java.lang.Object,java.lang.Class
- uid: ?>,com.fasterxml.jackson.core.JsonToken)
  name: ?>,JsonToken)
  nameWithType: ?>,JsonToken)
  fullName: ?>,com.fasterxml.jackson.core.JsonToken)
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class
  name: TypeSerializer.writeTypePrefixForArray(Object,JsonGenerator,Class
  nameWithType: TypeSerializer.writeTypePrefixForArray(Object,JsonGenerator,Class
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class
  name: TypeSerializer.writeTypePrefixForObject(Object,JsonGenerator,Class
  nameWithType: TypeSerializer.writeTypePrefixForObject(Object,JsonGenerator,Class
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class
  name: TypeSerializer.writeTypePrefixForScalar(Object,JsonGenerator,Class
  nameWithType: TypeSerializer.writeTypePrefixForScalar(Object,JsonGenerator,Class
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class
