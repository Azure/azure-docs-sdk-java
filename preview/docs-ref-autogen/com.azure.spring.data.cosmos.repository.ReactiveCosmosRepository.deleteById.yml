### YamlMime:JavaMember
uid: "com.azure.spring.data.cosmos.repository.ReactiveCosmosRepository.deleteById*"
fullName: "com.azure.spring.data.cosmos.repository.ReactiveCosmosRepository<T,K>.deleteById"
name: "deleteById"
nameWithType: "ReactiveCosmosRepository<T,K>.deleteById"
members:
- uid: "com.azure.spring.data.cosmos.repository.ReactiveCosmosRepository.deleteById(K,com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.repository.ReactiveCosmosRepository<T,K>.deleteById(K id, PartitionKey partitionKey)"
  name: "deleteById(K id, PartitionKey partitionKey)"
  nameWithType: "ReactiveCosmosRepository<T,K>.deleteById(K id, PartitionKey partitionKey)"
  summary: "Deletes an entity by its id and partition key."
  parameters:
  - description: "must not be null."
    name: "id"
    type: "<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />"
  - description: "partition key value of the entity, must not be null."
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteById(K id, PartitionKey partitionKey)"
  returns:
    description: "<xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> emitting the void Mono."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.spring.data.cosmos.repository"
artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
