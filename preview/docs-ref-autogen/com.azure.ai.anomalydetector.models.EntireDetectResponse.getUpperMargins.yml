### YamlMime:JavaMember
uid: "com.azure.ai.anomalydetector.models.EntireDetectResponse.getUpperMargins*"
fullName: "com.azure.ai.anomalydetector.models.EntireDetectResponse.getUpperMargins"
name: "getUpperMargins"
nameWithType: "EntireDetectResponse.getUpperMargins"
members:
- uid: "com.azure.ai.anomalydetector.models.EntireDetectResponse.getUpperMargins()"
  fullName: "com.azure.ai.anomalydetector.models.EntireDetectResponse.getUpperMargins()"
  name: "getUpperMargins()"
  nameWithType: "EntireDetectResponse.getUpperMargins()"
  summary: "Get the upperMargins property: UpperMargins contain upper margin of each input point. UpperMargin is used to calculate upperBoundary, which equals to expectedValue + (100 - marginScale)\\*upperMargin. Anomalies in response can be filtered by upperBoundary and lowerBoundary. By adjusting marginScale value, less significant anomalies can be filtered in client side. The index of the array is consistent with the input series."
  syntax: "public List<Float> getUpperMargins()"
  returns:
    description: "the upperMargins value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.anomalydetector.models"
artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
