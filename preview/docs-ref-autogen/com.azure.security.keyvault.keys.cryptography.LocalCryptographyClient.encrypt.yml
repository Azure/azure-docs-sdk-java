### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.cryptography.LocalCryptographyClient.encrypt*"
fullName: "com.azure.security.keyvault.keys.cryptography.LocalCryptographyClient.encrypt"
name: "encrypt"
nameWithType: "LocalCryptographyClient.encrypt"
members:
- uid: "com.azure.security.keyvault.keys.cryptography.LocalCryptographyClient.encrypt(com.azure.security.keyvault.keys.cryptography.EncryptOptions)"
  fullName: "com.azure.security.keyvault.keys.cryptography.LocalCryptographyClient.encrypt(EncryptOptions encryptOptions)"
  name: "encrypt(EncryptOptions encryptOptions)"
  nameWithType: "LocalCryptographyClient.encrypt(EncryptOptions encryptOptions)"
  summary: "Encrypts an arbitrary sequence of bytes using the configured key. Note that the encrypt operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The encrypt operation is supported for both symmetric keys and asymmetric keys. In case of asymmetric keys public portion of the key is used for encryption. This operation requires the keys/encrypt permission.\n\nThe <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm\" data-throw-if-not-resolved=\"false\" data-raw-source=\"encryption algorithm\"></xref> indicates the type of algorithm to use for decrypting the specified encrypted content. Possible values for asymmetric keys include: <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.RSA1_5\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RSA1_5\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.RSA_OAEP\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RSA_OAEP\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.RSA_OAEP_256\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RSA_OAEP_256\"></xref>. Possible values for symmetric keys include: <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A128CBC\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A128CBC\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A128CBCPAD\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A128CBCPAD\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A128CBC_HS256\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A128CBC-HS256\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A128GCM\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A128GCM\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A192CBC\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A192CBC\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A192CBCPAD\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A192CBCPAD\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A192CBC_HS384\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A192CBC-HS384\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A192GCM\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A192GCM\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A256CBC\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A256CBC\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A256CBCPAD\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A256CBPAD\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A256CBC_HS512\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A256CBC-HS512\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A256GCM\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A256GCM\"></xref>.\n\n**Code Samples**\n\nEncrypts the content. Subscribes to the call asynchronously and prints out the encrypted content details when a response has been received.\n\n```java\nbyte[] plainTextBytes = new byte[100];\n new Random(0x1234567L).nextBytes(plainTextBytes);\n byte[] iv = {\n     (byte) 0x1a, (byte) 0xf3, (byte) 0x8c, (byte) 0x2d, (byte) 0xc2, (byte) 0xb9, (byte) 0x6f, (byte) 0xfd,\n     (byte) 0xd8, (byte) 0x66, (byte) 0x94, (byte) 0x09, (byte) 0x23, (byte) 0x41, (byte) 0xbc, (byte) 0x04\n };\n EncryptOptions encryptOptions = EncryptOptions.createAes128CbcOptions(plainTextBytes, iv);\n EncryptResult encryptedResult = cryptographyClient.encrypt(encryptOptions);\n \n System.out.printf(\"Received encrypted content of length %d with algorithm %s \\n\",\n     encryptedResult.getCipherText().length, encryptedResult.getAlgorithm().toString());\n```"
  parameters:
  - description: "The parameters to use in the encryption operation."
    name: "encryptOptions"
    type: "<xref href=\"com.azure.security.keyvault.keys.cryptography.EncryptOptions?alt=com.azure.security.keyvault.keys.cryptography.EncryptOptions&text=EncryptOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EncryptResult encrypt(EncryptOptions encryptOptions)"
  returns:
    description: "The <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EncryptResult\"></xref> whose <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptResult.getCipherText()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"cipher text\"></xref> contains the encrypted\n     content."
    type: "<xref href=\"com.azure.security.keyvault.keys.cryptography.models.EncryptResult?alt=com.azure.security.keyvault.keys.cryptography.models.EncryptResult&text=EncryptResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.cryptography.LocalCryptographyClient.encrypt(com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm,byte[])"
  fullName: "com.azure.security.keyvault.keys.cryptography.LocalCryptographyClient.encrypt(EncryptionAlgorithm algorithm, byte[] plainText)"
  name: "encrypt(EncryptionAlgorithm algorithm, byte[] plainText)"
  nameWithType: "LocalCryptographyClient.encrypt(EncryptionAlgorithm algorithm, byte[] plainText)"
  summary: "Encrypts an arbitrary sequence of bytes using the configured key. Note that the encrypt operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The encrypt operation is supported for both symmetric keys and asymmetric keys. In case of asymmetric keys public portion of the key is used for encryption. This operation requires the keys/encrypt permission.\n\nThe <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm\" data-throw-if-not-resolved=\"false\" data-raw-source=\"encryption algorithm\"></xref> indicates the type of algorithm to use for decrypting the specified encrypted content. Possible values for asymmetric keys include: <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.RSA1_5\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RSA1_5\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.RSA_OAEP\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RSA_OAEP\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.RSA_OAEP_256\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RSA_OAEP_256\"></xref>. Possible values for symmetric keys include: <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A128CBC\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A128CBC\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A128CBCPAD\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A128CBCPAD\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A128CBC_HS256\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A128CBC-HS256\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A128GCM\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A128GCM\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A192CBC\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A192CBC\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A192CBCPAD\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A192CBCPAD\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A192CBC_HS384\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A192CBC-HS384\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A192GCM\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A192GCM\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A256CBC\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A256CBC\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A256CBCPAD\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A256CBPAD\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A256CBC_HS512\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A256CBC-HS512\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A256GCM\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A256GCM\"></xref>.\n\n**Code Samples**\n\nEncrypts the content. Subscribes to the call asynchronously and prints out the encrypted content details when a response has been received.\n\n```java\nbyte[] plainText = new byte[100];\n new Random(0x1234567L).nextBytes(plainText);\n EncryptResult encryptResult = cryptographyClient.encrypt(EncryptionAlgorithm.RSA_OAEP, plainText);\n System.out.printf(\"Received encrypted content of length %d with algorithm %s \\n\",\n     encryptResult.getCipherText().length, encryptResult.getAlgorithm().toString());\n```"
  parameters:
  - description: "The algorithm to be used for encryption."
    name: "algorithm"
    type: "<xref href=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm?alt=com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm&text=EncryptionAlgorithm\" data-throw-if-not-resolved=\"False\" />"
  - description: "The content to be encrypted."
    name: "plainText"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public EncryptResult encrypt(EncryptionAlgorithm algorithm, byte[] plainText)"
  returns:
    description: "The <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EncryptResult\"></xref> whose <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptResult.getCipherText()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"cipher text\"></xref> contains the encrypted\n     content."
    type: "<xref href=\"com.azure.security.keyvault.keys.cryptography.models.EncryptResult?alt=com.azure.security.keyvault.keys.cryptography.models.EncryptResult&text=EncryptResult\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys.cryptography"
artifact: com.azure:azure-security-keyvault-keys:4.3.0-beta.3
