### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.copyOf*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>copyOf"
name: "<E>copyOf"
nameWithType: "ImmutableSortedSet<E>.<E>copyOf"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.<E>copyOf(E[])"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>copyOf(E[] elements)"
  name: "<E>copyOf(E[] elements)"
  nameWithType: "ImmutableSortedSet<E>.<E>copyOf(E[] elements)"
  summary: "Returns an immutable sorted set containing the given elements sorted by their natural ordering. When multiple elements are equivalent according to <xref uid=\"java.lang.Comparable.compareTo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparable#compareTo\"></xref>, only the first one specified is included."
  parameters:
  - name: "elements"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static ImmutableSortedSet<E> <E>copyOf(E[] elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet&text=ImmutableSortedSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.<E>copyOf(java.lang.Iterable<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>copyOf(Iterable<? extends E> elements)"
  name: "<E>copyOf(Iterable<? extends E> elements)"
  nameWithType: "ImmutableSortedSet<E>.<E>copyOf(Iterable<? extends E> elements)"
  summary: "Returns an immutable sorted set containing the given elements sorted by their natural ordering. When multiple elements are equivalent according to `compareTo()`, only the first one specified is included. To create a copy of a `SortedSet` that preserves the comparator, call <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.copyOfSorted\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#copyOfSorted\"></xref> instead. This method iterates over `elements` at most once.\n\nNote that if `s` is a `Set`, then `ImmutableSortedSet.copyOf(s)` returns an `ImmutableSortedSet` containing each of the strings in `s`, while `ImmutableSortedSet.of(s)` returns an `ImmutableSortedSet>` containing one element (the given set itself).\n\nDespite the method name, this method attempts to avoid actually copying the data when it is safe to do so. The exact circumstances under which a copy will or will not be performed are undocumented and subject to change.\n\nThis method is not type-safe, as it may be called on elements that are not mutually comparable."
  parameters:
  - name: "elements"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableSortedSet<E> <E>copyOf(Iterable<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet&text=ImmutableSortedSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.<E>copyOf(java.util.Collection<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>copyOf(Collection<? extends E> elements)"
  name: "<E>copyOf(Collection<? extends E> elements)"
  nameWithType: "ImmutableSortedSet<E>.<E>copyOf(Collection<? extends E> elements)"
  summary: "Returns an immutable sorted set containing the given elements sorted by their natural ordering. When multiple elements are equivalent according to `compareTo()`, only the first one specified is included. To create a copy of a `SortedSet` that preserves the comparator, call <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.copyOfSorted\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#copyOfSorted\"></xref> instead. This method iterates over `elements` at most once.\n\nNote that if `s` is a `Set`, then `ImmutableSortedSet.copyOf(s)` returns an `ImmutableSortedSet` containing each of the strings in `s`, while `ImmutableSortedSet.of(s)` returns an `ImmutableSortedSet>` containing one element (the given set itself).\n\n**Note:** Despite what the method name suggests, if `elements` is an `ImmutableSortedSet`, it may be returned instead of a copy.\n\nThis method is not type-safe, as it may be called on elements that are not mutually comparable.\n\nThis method is safe to use even when `elements` is a synchronized or concurrent collection that is currently being modified by another thread."
  parameters:
  - name: "elements"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableSortedSet<E> <E>copyOf(Collection<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet&text=ImmutableSortedSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.<E>copyOf(java.util.Comparator<? super E>,java.lang.Iterable<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)"
  name: "<E>copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)"
  nameWithType: "ImmutableSortedSet<E>.<E>copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)"
  summary: "Returns an immutable sorted set containing the given elements sorted by the given `Comparator`. When multiple elements are equivalent according to `compare()`, only the first one specified is included. This method iterates over `elements` at most once.\n\nDespite the method name, this method attempts to avoid actually copying the data when it is safe to do so. The exact circumstances under which a copy will or will not be performed are undocumented and subject to change."
  parameters:
  - name: "comparator"
    type: "<xref href=\"java.util.Comparator?alt=java.util.Comparator&text=Comparator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? super E?alt=? super E&text=? super E\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "elements"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableSortedSet<E> <E>copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet&text=ImmutableSortedSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.<E>copyOf(java.util.Comparator<? super E>,java.util.Collection<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>copyOf(Comparator<? super E> comparator, Collection<? extends E> elements)"
  name: "<E>copyOf(Comparator<? super E> comparator, Collection<? extends E> elements)"
  nameWithType: "ImmutableSortedSet<E>.<E>copyOf(Comparator<? super E> comparator, Collection<? extends E> elements)"
  summary: "Returns an immutable sorted set containing the given elements sorted by the given `Comparator`. When multiple elements are equivalent according to `compareTo()`, only the first one specified is included.\n\nDespite the method name, this method attempts to avoid actually copying the data when it is safe to do so. The exact circumstances under which a copy will or will not be performed are undocumented and subject to change.\n\nThis method is safe to use even when `elements` is a synchronized or concurrent collection that is currently being modified by another thread."
  parameters:
  - name: "comparator"
    type: "<xref href=\"java.util.Comparator?alt=java.util.Comparator&text=Comparator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? super E?alt=? super E&text=? super E\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "elements"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableSortedSet<E> <E>copyOf(Comparator<? super E> comparator, Collection<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet&text=ImmutableSortedSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.<E>copyOf(java.util.Comparator<? super E>,java.util.Iterator<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)"
  name: "<E>copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)"
  nameWithType: "ImmutableSortedSet<E>.<E>copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)"
  summary: "Returns an immutable sorted set containing the given elements sorted by the given `Comparator`. When multiple elements are equivalent according to `compareTo()`, only the first one specified is included."
  parameters:
  - name: "comparator"
    type: "<xref href=\"java.util.Comparator?alt=java.util.Comparator&text=Comparator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? super E?alt=? super E&text=? super E\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "elements"
    type: "<xref href=\"java.util.Iterator?alt=java.util.Iterator&text=Iterator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableSortedSet<E> <E>copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet&text=ImmutableSortedSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.<E>copyOf(java.util.Iterator<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>copyOf(Iterator<? extends E> elements)"
  name: "<E>copyOf(Iterator<? extends E> elements)"
  nameWithType: "ImmutableSortedSet<E>.<E>copyOf(Iterator<? extends E> elements)"
  summary: "Returns an immutable sorted set containing the given elements sorted by their natural ordering. When multiple elements are equivalent according to `compareTo()`, only the first one specified is included.\n\nThis method is not type-safe, as it may be called on elements that are not mutually comparable."
  parameters:
  - name: "elements"
    type: "<xref href=\"java.util.Iterator?alt=java.util.Iterator&text=Iterator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableSortedSet<E> <E>copyOf(Iterator<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet&text=ImmutableSortedSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
