### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.DataFlows"
fullName: "com.azure.resourcemanager.datafactory.models.DataFlows"
name: "DataFlows"
nameWithType: "DataFlows"
summary: "Resource collection API of Data<wbr>Flows."
syntax: "public interface DataFlows"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.DataFlows.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlows.define(String name)"
  name: "define(String name)"
  nameWithType: "DataFlows.define(String name)"
  summary: "Begins definition for a new Data<wbr>Flow<wbr>Resource resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DataFlowResource.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new DataFlowResource resource."
  returns:
    description: "the first stage of the new DataFlowResource definition."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowResource.DefinitionStages.Blank?alt=com.azure.resourcemanager.datafactory.models.DataFlowResource.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DataFlows.delete(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlows.delete(String resourceGroupName, String factoryName, String dataFlowName)"
  name: "delete(String resourceGroupName, String factoryName, String dataFlowName)"
  nameWithType: "DataFlows.delete(String resourceGroupName, String factoryName, String dataFlowName)"
  summary: "Deletes a data flow."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The factory name."
    name: "factoryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The data flow name."
    name: "dataFlowName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String factoryName, String dataFlowName)"
  desc: "Deletes a data flow."
- uid: "com.azure.resourcemanager.datafactory.models.DataFlows.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlows.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "DataFlows.deleteById(String id)"
  summary: "Deletes a data flow."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Deletes a data flow."
- uid: "com.azure.resourcemanager.datafactory.models.DataFlows.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlows.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "DataFlows.deleteByIdWithResponse(String id, Context context)"
  summary: "Deletes a data flow."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByIdWithResponse(String id, Context context)"
  desc: "Deletes a data flow."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.DataFlows.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlows.deleteWithResponse(String resourceGroupName, String factoryName, String dataFlowName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String factoryName, String dataFlowName, Context context)"
  nameWithType: "DataFlows.deleteWithResponse(String resourceGroupName, String factoryName, String dataFlowName, Context context)"
  summary: "Deletes a data flow."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The factory name."
    name: "factoryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The data flow name."
    name: "dataFlowName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String factoryName, String dataFlowName, Context context)"
  desc: "Deletes a data flow."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.DataFlows.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlows.get(String resourceGroupName, String factoryName, String dataFlowName)"
  name: "get(String resourceGroupName, String factoryName, String dataFlowName)"
  nameWithType: "DataFlows.get(String resourceGroupName, String factoryName, String dataFlowName)"
  summary: "Gets a data flow."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The factory name."
    name: "factoryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The data flow name."
    name: "dataFlowName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DataFlowResource get(String resourceGroupName, String factoryName, String dataFlowName)"
  desc: "Gets a data flow."
  returns:
    description: "a data flow."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowResource?alt=com.azure.resourcemanager.datafactory.models.DataFlowResource&text=DataFlowResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DataFlows.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlows.getById(String id)"
  name: "getById(String id)"
  nameWithType: "DataFlows.getById(String id)"
  summary: "Gets a data flow."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DataFlowResource getById(String id)"
  desc: "Gets a data flow."
  returns:
    description: "a data flow along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowResource?alt=com.azure.resourcemanager.datafactory.models.DataFlowResource&text=DataFlowResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DataFlows.getByIdWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlows.getByIdWithResponse(String id, String ifNoneMatch, Context context)"
  name: "getByIdWithResponse(String id, String ifNoneMatch, Context context)"
  nameWithType: "DataFlows.getByIdWithResponse(String id, String ifNoneMatch, Context context)"
  summary: "Gets a data flow."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the data flow entity. Should only be specified for get. If the ETag matches the\n     existing entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DataFlowResource> getByIdWithResponse(String id, String ifNoneMatch, Context context)"
  desc: "Gets a data flow."
  returns:
    description: "a data flow along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowResource?alt=com.azure.resourcemanager.datafactory.models.DataFlowResource&text=DataFlowResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.DataFlows.getWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlows.getWithResponse(String resourceGroupName, String factoryName, String dataFlowName, String ifNoneMatch, Context context)"
  name: "getWithResponse(String resourceGroupName, String factoryName, String dataFlowName, String ifNoneMatch, Context context)"
  nameWithType: "DataFlows.getWithResponse(String resourceGroupName, String factoryName, String dataFlowName, String ifNoneMatch, Context context)"
  summary: "Gets a data flow."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The factory name."
    name: "factoryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The data flow name."
    name: "dataFlowName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the data flow entity. Should only be specified for get. If the ETag matches the\n     existing entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DataFlowResource> getWithResponse(String resourceGroupName, String factoryName, String dataFlowName, String ifNoneMatch, Context context)"
  desc: "Gets a data flow."
  returns:
    description: "a data flow along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowResource?alt=com.azure.resourcemanager.datafactory.models.DataFlowResource&text=DataFlowResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.DataFlows.listByFactory(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlows.listByFactory(String resourceGroupName, String factoryName)"
  name: "listByFactory(String resourceGroupName, String factoryName)"
  nameWithType: "DataFlows.listByFactory(String resourceGroupName, String factoryName)"
  summary: "Lists data flows."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The factory name."
    name: "factoryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<DataFlowResource> listByFactory(String resourceGroupName, String factoryName)"
  desc: "Lists data flows."
  returns:
    description: "a list of data flow resources as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowResource?alt=com.azure.resourcemanager.datafactory.models.DataFlowResource&text=DataFlowResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.DataFlows.listByFactory(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlows.listByFactory(String resourceGroupName, String factoryName, Context context)"
  name: "listByFactory(String resourceGroupName, String factoryName, Context context)"
  nameWithType: "DataFlows.listByFactory(String resourceGroupName, String factoryName, Context context)"
  summary: "Lists data flows."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The factory name."
    name: "factoryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<DataFlowResource> listByFactory(String resourceGroupName, String factoryName, Context context)"
  desc: "Lists data flows."
  returns:
    description: "a list of data flow resources as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowResource?alt=com.azure.resourcemanager.datafactory.models.DataFlowResource&text=DataFlowResource\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of DataFlows."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
