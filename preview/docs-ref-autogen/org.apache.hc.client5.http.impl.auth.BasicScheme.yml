### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme
  id: BasicScheme
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth
  children:
  - org.apache.hc.client5.http.impl.auth.BasicScheme.BasicScheme()
  - org.apache.hc.client5.http.impl.auth.BasicScheme.BasicScheme(java.nio.charset.Charset)
  - org.apache.hc.client5.http.impl.auth.BasicScheme.generateAuthResponse(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.impl.auth.BasicScheme.getName()
  - org.apache.hc.client5.http.impl.auth.BasicScheme.getPrincipal()
  - org.apache.hc.client5.http.impl.auth.BasicScheme.getRealm()
  - org.apache.hc.client5.http.impl.auth.BasicScheme.initPreemptive(org.apache.hc.client5.http.auth.Credentials)
  - org.apache.hc.client5.http.impl.auth.BasicScheme.isChallengeComplete()
  - org.apache.hc.client5.http.impl.auth.BasicScheme.isConnectionBased()
  - org.apache.hc.client5.http.impl.auth.BasicScheme.isResponseReady(org.apache.hc.core5.http.HttpHost,org.apache.hc.client5.http.auth.CredentialsProvider,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.impl.auth.BasicScheme.processChallenge(org.apache.hc.client5.http.auth.AuthChallenge,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.impl.auth.BasicScheme.toString()
  langs:
  - java
  name: BasicScheme
  nameWithType: BasicScheme
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme
  type: Class
  package: org.apache.hc.client5.http.impl.auth
  summary: Basic authentication scheme as defined in RFC 2617.
  syntax:
    content: public class BasicScheme implements AuthScheme, Serializable
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.client5.http.auth.AuthScheme
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.BasicScheme()
  id: BasicScheme()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.BasicScheme
  langs:
  - java
  name: BasicScheme()
  nameWithType: BasicScheme.BasicScheme()
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.BasicScheme()
  overload: org.apache.hc.client5.http.impl.auth.BasicScheme.BasicScheme*
  type: Constructor
  package: org.apache.hc.client5.http.impl.auth
  syntax:
    content: public BasicScheme()
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.BasicScheme(java.nio.charset.Charset)
  id: BasicScheme(java.nio.charset.Charset)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.BasicScheme
  langs:
  - java
  name: BasicScheme(Charset charset)
  nameWithType: BasicScheme.BasicScheme(Charset charset)
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.BasicScheme(Charset charset)
  overload: org.apache.hc.client5.http.impl.auth.BasicScheme.BasicScheme*
  type: Constructor
  package: org.apache.hc.client5.http.impl.auth
  syntax:
    content: public BasicScheme(Charset charset)
    parameters:
    - id: charset
      type: java.nio.charset.Charset
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.generateAuthResponse(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.protocol.HttpContext)
  id: generateAuthResponse(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.BasicScheme
  langs:
  - java
  name: generateAuthResponse(HttpHost host, HttpRequest request, HttpContext context)
  nameWithType: BasicScheme.generateAuthResponse(HttpHost host, HttpRequest request, HttpContext context)
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.generateAuthResponse(HttpHost host, HttpRequest request, HttpContext context)
  overload: org.apache.hc.client5.http.impl.auth.BasicScheme.generateAuthResponse*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  summary: Generates an authorization response based on the current state. Some authentication schemes may need to load user credentials required to generate an authorization response from a <xref uid="org.apache.hc.client5.http.auth.CredentialsProvider" data-throw-if-not-resolved="false">CredentialsProvider</xref> prior to this method call.
  syntax:
    content: public String generateAuthResponse(HttpHost host, HttpRequest request, HttpContext context)
    parameters:
    - id: host
      type: org.apache.hc.core5.http.HttpHost
    - id: request
      type: org.apache.hc.core5.http.HttpRequest
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
    return:
      type: java.lang.String
  exceptions:
  - type: org.apache.hc.client5.http.auth.AuthenticationException
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.getName()
  id: getName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.BasicScheme
  langs:
  - java
  name: getName()
  nameWithType: BasicScheme.getName()
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.getName()
  overload: org.apache.hc.client5.http.impl.auth.BasicScheme.getName*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  summary: Returns textual designation of the given authentication scheme.
  syntax:
    content: public String getName()
    return:
      type: java.lang.String
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.getPrincipal()
  id: getPrincipal()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.BasicScheme
  langs:
  - java
  name: getPrincipal()
  nameWithType: BasicScheme.getPrincipal()
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.getPrincipal()
  overload: org.apache.hc.client5.http.impl.auth.BasicScheme.getPrincipal*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  summary: Returns <xref uid="java.security.Principal" data-throw-if-not-resolved="false">Principal</xref> whose credentials are used to generate an authentication response. Connection based schemes are required to return a user <xref uid="java.security.Principal" data-throw-if-not-resolved="false">Principal</xref> if authorization applies to for the entire life span of connection.
  syntax:
    content: public Principal getPrincipal()
    return:
      type: java.security.Principal
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.getRealm()
  id: getRealm()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.BasicScheme
  langs:
  - java
  name: getRealm()
  nameWithType: BasicScheme.getRealm()
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.getRealm()
  overload: org.apache.hc.client5.http.impl.auth.BasicScheme.getRealm*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  summary: Returns authentication realm. If the concept of an authentication realm is not applicable to the given authentication scheme, returns `null`.
  syntax:
    content: public String getRealm()
    return:
      type: java.lang.String
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.initPreemptive(org.apache.hc.client5.http.auth.Credentials)
  id: initPreemptive(org.apache.hc.client5.http.auth.Credentials)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.BasicScheme
  langs:
  - java
  name: initPreemptive(Credentials credentials)
  nameWithType: BasicScheme.initPreemptive(Credentials credentials)
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.initPreemptive(Credentials credentials)
  overload: org.apache.hc.client5.http.impl.auth.BasicScheme.initPreemptive*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  syntax:
    content: public void initPreemptive(Credentials credentials)
    parameters:
    - id: credentials
      type: org.apache.hc.client5.http.auth.Credentials
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.isChallengeComplete()
  id: isChallengeComplete()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.BasicScheme
  langs:
  - java
  name: isChallengeComplete()
  nameWithType: BasicScheme.isChallengeComplete()
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.isChallengeComplete()
  overload: org.apache.hc.client5.http.impl.auth.BasicScheme.isChallengeComplete*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  summary: Authentication process may involve a series of challenge-response exchanges. This method tests if the authorization process has been fully completed (either successfully or unsuccessfully), that is, all the required authorization challenges have been processed in their entirety.
  syntax:
    content: public boolean isChallengeComplete()
    return:
      type: boolean
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.isConnectionBased()
  id: isConnectionBased()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.BasicScheme
  langs:
  - java
  name: isConnectionBased()
  nameWithType: BasicScheme.isConnectionBased()
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.isConnectionBased()
  overload: org.apache.hc.client5.http.impl.auth.BasicScheme.isConnectionBased*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  summary: Determines if the authentication scheme is expected to provide an authorization response on a per connection basis instead of the standard per request basis
  syntax:
    content: public boolean isConnectionBased()
    return:
      type: boolean
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.isResponseReady(org.apache.hc.core5.http.HttpHost,org.apache.hc.client5.http.auth.CredentialsProvider,org.apache.hc.core5.http.protocol.HttpContext)
  id: isResponseReady(org.apache.hc.core5.http.HttpHost,org.apache.hc.client5.http.auth.CredentialsProvider,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.BasicScheme
  langs:
  - java
  name: isResponseReady(HttpHost host, CredentialsProvider credentialsProvider, HttpContext context)
  nameWithType: BasicScheme.isResponseReady(HttpHost host, CredentialsProvider credentialsProvider, HttpContext context)
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.isResponseReady(HttpHost host, CredentialsProvider credentialsProvider, HttpContext context)
  overload: org.apache.hc.client5.http.impl.auth.BasicScheme.isResponseReady*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  summary: Determines whether or not an authorization response can be generated based on the actual authentication state. Generally the outcome of this method will depend upon availability of user credentials necessary to produce an authorization response.
  syntax:
    content: public boolean isResponseReady(HttpHost host, CredentialsProvider credentialsProvider, HttpContext context)
    parameters:
    - id: host
      type: org.apache.hc.core5.http.HttpHost
    - id: credentialsProvider
      type: org.apache.hc.client5.http.auth.CredentialsProvider
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
    return:
      type: boolean
  exceptions:
  - type: org.apache.hc.client5.http.auth.AuthenticationException
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.processChallenge(org.apache.hc.client5.http.auth.AuthChallenge,org.apache.hc.core5.http.protocol.HttpContext)
  id: processChallenge(org.apache.hc.client5.http.auth.AuthChallenge,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.BasicScheme
  langs:
  - java
  name: processChallenge(AuthChallenge authChallenge, HttpContext context)
  nameWithType: BasicScheme.processChallenge(AuthChallenge authChallenge, HttpContext context)
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.processChallenge(AuthChallenge authChallenge, HttpContext context)
  overload: org.apache.hc.client5.http.impl.auth.BasicScheme.processChallenge*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  summary: Processes the given auth challenge. Some authentication schemes may involve multiple challenge-response exchanges. Such schemes must be able to maintain internal state when dealing with sequential challenges
  syntax:
    content: public void processChallenge(AuthChallenge authChallenge, HttpContext context)
    parameters:
    - id: authChallenge
      type: org.apache.hc.client5.http.auth.AuthChallenge
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
  exceptions:
  - type: org.apache.hc.client5.http.auth.MalformedChallengeException
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.BasicScheme
  langs:
  - java
  name: toString()
  nameWithType: BasicScheme.toString()
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.toString()
  overload: org.apache.hc.client5.http.impl.auth.BasicScheme.toString*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
references:
- uid: java.nio.charset.Charset
  spec.java:
  - uid: java.nio.charset.Charset
    name: Charset
    fullName: java.nio.charset.Charset
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.BasicScheme*
  name: BasicScheme
  nameWithType: BasicScheme.BasicScheme
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.BasicScheme
  package: org.apache.hc.client5.http.impl.auth
- uid: org.apache.hc.client5.http.auth.Credentials
  name: Credentials
  nameWithType: Credentials
  fullName: org.apache.hc.client5.http.auth.Credentials
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.initPreemptive*
  name: initPreemptive
  nameWithType: BasicScheme.initPreemptive
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.initPreemptive
  package: org.apache.hc.client5.http.impl.auth
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.getName*
  name: getName
  nameWithType: BasicScheme.getName
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.getName
  package: org.apache.hc.client5.http.impl.auth
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.isConnectionBased*
  name: isConnectionBased
  nameWithType: BasicScheme.isConnectionBased
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.isConnectionBased
  package: org.apache.hc.client5.http.impl.auth
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.getRealm*
  name: getRealm
  nameWithType: BasicScheme.getRealm
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.getRealm
  package: org.apache.hc.client5.http.impl.auth
- uid: org.apache.hc.client5.http.auth.MalformedChallengeException
  name: MalformedChallengeException
  nameWithType: MalformedChallengeException
  fullName: org.apache.hc.client5.http.auth.MalformedChallengeException
- uid: org.apache.hc.client5.http.auth.AuthChallenge
  name: AuthChallenge
  nameWithType: AuthChallenge
  fullName: org.apache.hc.client5.http.auth.AuthChallenge
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.processChallenge*
  name: processChallenge
  nameWithType: BasicScheme.processChallenge
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.processChallenge
  package: org.apache.hc.client5.http.impl.auth
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.isChallengeComplete*
  name: isChallengeComplete
  nameWithType: BasicScheme.isChallengeComplete
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.isChallengeComplete
  package: org.apache.hc.client5.http.impl.auth
- uid: org.apache.hc.client5.http.auth.AuthenticationException
  name: AuthenticationException
  nameWithType: AuthenticationException
  fullName: org.apache.hc.client5.http.auth.AuthenticationException
- uid: org.apache.hc.core5.http.HttpHost
  name: HttpHost
  nameWithType: HttpHost
  fullName: org.apache.hc.core5.http.HttpHost
- uid: org.apache.hc.client5.http.auth.CredentialsProvider
  name: CredentialsProvider
  nameWithType: CredentialsProvider
  fullName: org.apache.hc.client5.http.auth.CredentialsProvider
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.isResponseReady*
  name: isResponseReady
  nameWithType: BasicScheme.isResponseReady
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.isResponseReady
  package: org.apache.hc.client5.http.impl.auth
- uid: java.security.Principal
  spec.java:
  - uid: java.security.Principal
    name: Principal
    fullName: java.security.Principal
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.getPrincipal*
  name: getPrincipal
  nameWithType: BasicScheme.getPrincipal
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.getPrincipal
  package: org.apache.hc.client5.http.impl.auth
- uid: org.apache.hc.core5.http.HttpRequest
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: org.apache.hc.core5.http.HttpRequest
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.generateAuthResponse*
  name: generateAuthResponse
  nameWithType: BasicScheme.generateAuthResponse
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.generateAuthResponse
  package: org.apache.hc.client5.http.impl.auth
- uid: org.apache.hc.client5.http.impl.auth.BasicScheme.toString*
  name: toString
  nameWithType: BasicScheme.toString
  fullName: org.apache.hc.client5.http.impl.auth.BasicScheme.toString
  package: org.apache.hc.client5.http.impl.auth
- uid: org.apache.hc.client5.http.auth.AuthScheme
  name: AuthScheme
  nameWithType: AuthScheme
  fullName: org.apache.hc.client5.http.auth.AuthScheme
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
