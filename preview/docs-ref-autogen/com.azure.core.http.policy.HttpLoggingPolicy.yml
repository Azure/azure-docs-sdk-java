### YamlMime:ManagedReference
items:
- uid: com.azure.core.http.policy.HttpLoggingPolicy
  id: HttpLoggingPolicy
  parent: com.azure.core.http.policy
  children:
  - com.azure.core.http.policy.HttpLoggingPolicy.HttpLoggingPolicy(HttpLogDetailLevel)
  - com.azure.core.http.policy.HttpLoggingPolicy.HttpLoggingPolicy(HttpLogDetailLevel,boolean)
  - com.azure.core.http.policy.HttpLoggingPolicy.process(HttpPipelineCallContext,HttpPipelineNextPolicy)
  href: com.azure.core.http.policy.HttpLoggingPolicy.yml
  langs:
  - java
  name: HttpLoggingPolicy
  nameWithType: HttpLoggingPolicy
  fullName: com.azure.core.http.policy.HttpLoggingPolicy
  type: Class
  source:
    remote: &o0
      path: sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpLoggingPolicy.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpLoggingPolicy.java
    startLine: 27
  package: com.azure.core.http.policy
  summary: "<p>The Pipeline policy that handles logging of HTTP requests and responses. </p>"
  syntax:
    content: public class HttpLoggingPolicy implements HttpPipelinePolicy
  inheritance:
  - java.lang.Object
  - com.azure.core.http.policy.HttpPipelinePolicy
- uid: com.azure.core.http.policy.HttpLoggingPolicy.HttpLoggingPolicy(HttpLogDetailLevel)
  id: HttpLoggingPolicy(HttpLogDetailLevel)
  parent: com.azure.core.http.policy.HttpLoggingPolicy
  href: com.azure.core.http.policy.HttpLoggingPolicy.yml
  langs:
  - java
  name: HttpLoggingPolicy(HttpLogDetailLevel detailLevel)
  nameWithType: HttpLoggingPolicy.HttpLoggingPolicy(HttpLogDetailLevel detailLevel)
  fullName: com.azure.core.http.policy.HttpLoggingPolicy.HttpLoggingPolicy(HttpLogDetailLevel detailLevel)
  overload: com.azure.core.http.policy.HttpLoggingPolicy.HttpLoggingPolicy*
  type: Constructor
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpLoggingPolicy.java
    startLine: 38
  package: com.azure.core.http.policy
  summary: "<p>Creates an HttpLoggingPolicy with the given log level.</p>\r\n<p></p>"
  syntax:
    content: public HttpLoggingPolicy(HttpLogDetailLevel detailLevel)
    parameters:
    - id: detailLevel
      type: com.azure.core.http.policy.HttpLogDetailLevel
      description: <p>The HTTP logging detail level. </p>
- uid: com.azure.core.http.policy.HttpLoggingPolicy.HttpLoggingPolicy(HttpLogDetailLevel,boolean)
  id: HttpLoggingPolicy(HttpLogDetailLevel,boolean)
  parent: com.azure.core.http.policy.HttpLoggingPolicy
  href: com.azure.core.http.policy.HttpLoggingPolicy.yml
  langs:
  - java
  name: HttpLoggingPolicy(HttpLogDetailLevel detailLevel, boolean prettyPrintJSON)
  nameWithType: HttpLoggingPolicy.HttpLoggingPolicy(HttpLogDetailLevel detailLevel, boolean prettyPrintJSON)
  fullName: com.azure.core.http.policy.HttpLoggingPolicy.HttpLoggingPolicy(HttpLogDetailLevel detailLevel, boolean prettyPrintJSON)
  overload: com.azure.core.http.policy.HttpLoggingPolicy.HttpLoggingPolicy*
  type: Constructor
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpLoggingPolicy.java
    startLine: 49
  package: com.azure.core.http.policy
  summary: "<p>Creates an HttpLoggingPolicy with the given log level and pretty printing setting.</p>\r\n<p></p>"
  syntax:
    content: public HttpLoggingPolicy(HttpLogDetailLevel detailLevel, boolean prettyPrintJSON)
    parameters:
    - id: detailLevel
      type: com.azure.core.http.policy.HttpLogDetailLevel
      description: <p>The HTTP logging detail level. </p>
    - id: prettyPrintJSON
      type: 4fc6e284
      description: <p>If true, pretty prints JSON message bodies when logging. If the detailLevel does not include body logging, this flag does nothing. </p>
- uid: com.azure.core.http.policy.HttpLoggingPolicy.process(HttpPipelineCallContext,HttpPipelineNextPolicy)
  id: process(HttpPipelineCallContext,HttpPipelineNextPolicy)
  parent: com.azure.core.http.policy.HttpLoggingPolicy
  href: com.azure.core.http.policy.HttpLoggingPolicy.yml
  langs:
  - java
  name: process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)
  nameWithType: HttpLoggingPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)
  fullName: com.azure.core.http.policy.HttpLoggingPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)
  overload: com.azure.core.http.policy.HttpLoggingPolicy.process*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpLoggingPolicy.java
    startLine: 55
  package: com.azure.core.http.policy
  summary: "<p>Process provided request context and invokes the next policy.</p>\r\n<p></p>"
  syntax:
    content: public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)
    parameters:
    - id: context
      type: com.azure.core.http.HttpPipelineCallContext
      description: <p>request context </p>
    - id: next
      type: com.azure.core.http.HttpPipelineNextPolicy
      description: <p>the next policy to invoke </p>
    return:
      type: 744507a1com.azure.core.http.HttpResponsea08ddfce
      description: <p>publisher that initiate the request upon subscription and emits response on completion. </p>
  overridden: com.azure.core.http.policy.HttpPipelinePolicy.process(HttpPipelineCallContext,HttpPipelineNextPolicy)
references:
- uid: com.azure.core.http.policy.HttpLoggingPolicy.HttpLoggingPolicy*
  name: HttpLoggingPolicy
  nameWithType: HttpLoggingPolicy.HttpLoggingPolicy
  fullName: com.azure.core.http.policy.HttpLoggingPolicy.HttpLoggingPolicy
  package: com.azure.core.http.policy
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: 744507a1com.azure.core.http.HttpResponsea08ddfce
  spec.java:
  - name: Mono<
    fullName: Mono<
  - uid: com.azure.core.http.HttpResponse
    name: HttpResponse
    fullName: com.azure.core.http.HttpResponse
    href: com.azure.core.http.HttpResponse.yml
  - name: '>'
    fullName: '>'
- uid: com.azure.core.http.policy.HttpLoggingPolicy.process*
  name: process
  nameWithType: HttpLoggingPolicy.process
  fullName: com.azure.core.http.policy.HttpLoggingPolicy.process
  package: com.azure.core.http.policy
- uid: com.azure.core.http.policy.HttpPipelinePolicy
  parent: com.azure.core.http.policy
  href: com.azure.core.http.policy.HttpPipelinePolicy.yml
  name: HttpPipelinePolicy
  nameWithType: HttpPipelinePolicy
  fullName: com.azure.core.http.policy.HttpPipelinePolicy
  type: Interface
  summary: "<p>Pipeline policy. </p>"
  syntax:
    content: public interface HttpPipelinePolicy
- uid: com.azure.core.http.policy.HttpLogDetailLevel
  parent: com.azure.core.http.policy
  href: com.azure.core.http.policy.HttpLogDetailLevel.yml
  name: HttpLogDetailLevel
  nameWithType: HttpLogDetailLevel
  fullName: com.azure.core.http.policy.HttpLogDetailLevel
  type: Enum
  summary: "<p>The level of detail to log on HTTP messages. </p>"
  syntax:
    content: public enum HttpLogDetailLevel
- uid: com.azure.core.http.HttpResponse
  parent: com.azure.core.http
  href: com.azure.core.http.HttpResponse.yml
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: com.azure.core.http.HttpResponse
  type: Class
  summary: "<p>The type representing response of <xref uid=\"com.azure.core.http.HttpRequest\" data-throw-if-not-resolved=\"false\">HttpRequest</xref>. </p>"
  syntax:
    content: public class HttpResponse
- uid: com.azure.core.http.policy.HttpPipelinePolicy.process(HttpPipelineCallContext,HttpPipelineNextPolicy)
  parent: com.azure.core.http.policy.HttpPipelinePolicy
  href: com.azure.core.http.policy.HttpPipelinePolicy.yml
  name: process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)
  nameWithType: HttpPipelinePolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)
  fullName: com.azure.core.http.policy.HttpPipelinePolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)
  type: Method
  summary: "<p>Process provided request context and invokes the next policy.</p>\r\n<p></p>"
  syntax:
    content: public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)
    parameters:
    - id: context
      type: com.azure.core.http.HttpPipelineCallContext
      description: <p>request context </p>
    - id: next
      type: com.azure.core.http.HttpPipelineNextPolicy
      description: <p>the next policy to invoke </p>
    return:
      type: 744507a1com.azure.core.http.HttpResponsea08ddfce
      description: <p>publisher that initiate the request upon subscription and emits response on completion. </p>
- uid: com.azure.core.http.HttpPipelineCallContext
  parent: com.azure.core.http
  href: com.azure.core.http.HttpPipelineCallContext.yml
  name: HttpPipelineCallContext
  nameWithType: HttpPipelineCallContext
  fullName: com.azure.core.http.HttpPipelineCallContext
  type: Class
  summary: "<p>Type representing context local to a single http request and it's response. </p>"
  syntax:
    content: public class HttpPipelineCallContext
- uid: com.azure.core.http.HttpPipelineNextPolicy
  parent: com.azure.core.http
  href: com.azure.core.http.HttpPipelineNextPolicy.yml
  name: HttpPipelineNextPolicy
  nameWithType: HttpPipelineNextPolicy
  fullName: com.azure.core.http.HttpPipelineNextPolicy
  type: Class
  summary: "<p>A type that invokes next policy in the pipeline. </p>"
  syntax:
    content: public class HttpPipelineNextPolicy
- uid: com.azure.core.util.logging.ClientLogger
  parent: com.azure.core.util.logging
  href: com.azure.core.util.logging.ClientLogger.yml
  name: ClientLogger
  nameWithType: ClientLogger
  fullName: com.azure.core.util.logging.ClientLogger
  type: Class
  summary: "<p>This is a fluent logger helper class that wraps a plug-able <xref uid=\"\" data-throw-if-not-resolved=\"false\">Logger</xref>.</p>\r\n<p>This logger logs formattable messages that use<code>{} \r\n    </code> as the placeholder. When a throwable is the last argument of the format varargs and the logger is enabled for <xref uid=\"\" data-throw-if-not-resolved=\"false\">verbose</xref> logging the stack trace for the throwable will be included in the log message.</p>\r\n<p>A minimum logging level threshold is determined by the <xref uid=\"com.azure.core.util.configuration.BaseConfigurations.AZURE_LOG_LEVEL\" data-throw-if-not-resolved=\"false\">AZURE_LOG_LEVEL</xref> environment configuration, by default logging is disabled.</p>\r\n<p>\r\n  <b>Log level hierarchy</b>\r\n</p>\r\n<p>\r\n  <orderedlist>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Error</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Warning</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Info</xref>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\">Verbose</xref>\r\n      </p>\r\n    </li>\r\n  </orderedlist>\r\n</p>\r\n<p></p>"
  syntax:
    content: public class ClientLogger
- uid: com.azure.core.http.HttpRequest
  parent: com.azure.core.http
  href: com.azure.core.http.HttpRequest.yml
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: com.azure.core.http.HttpRequest
  type: Class
  summary: "<p>The outgoing Http request. </p>"
  syntax:
    content: public class HttpRequest
- uid: com.azure.core.http.HttpHeaders
  parent: com.azure.core.http
  href: com.azure.core.http.HttpHeaders.yml
  name: HttpHeaders
  nameWithType: HttpHeaders
  fullName: com.azure.core.http.HttpHeaders
  type: Class
  summary: "<p>A collection of headers on an HTTP request or response. </p>"
  syntax:
    content: public class HttpHeaders
