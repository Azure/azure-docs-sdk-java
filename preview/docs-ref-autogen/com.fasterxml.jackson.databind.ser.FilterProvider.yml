### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.ser.FilterProvider"
fullName: "com.fasterxml.jackson.databind.ser.FilterProvider"
name: "FilterProvider"
nameWithType: "FilterProvider"
summary: "Interface for objects that providers instances of <xref uid=\"com.fasterxml.jackson.databind.ser.PropertyFilter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PropertyFilter\"></xref> that match given ids. A provider is configured to be used during serialization, to find filter to used based on id specified by <xref uid=\"com.fasterxml.jackson.annotation.JsonFilter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.annotation.JsonFilter\"></xref> annotation on bean class."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class FilterProvider"
constructors:
- "com.fasterxml.jackson.databind.ser.FilterProvider.FilterProvider()"
methods:
- "com.fasterxml.jackson.databind.ser.FilterProvider.findFilter(java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.FilterProvider.findPropertyFilter(java.lang.Object,java.lang.Object)"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.databind.ser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
