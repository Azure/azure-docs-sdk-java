### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies"
fullName: "com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies"
name: "CrossSiteAccessPolicies"
nameWithType: "CrossSiteAccessPolicies"
summary: "The client access policy."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CrossSiteAccessPolicies"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies.CrossSiteAccessPolicies()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies.CrossSiteAccessPolicies()"
  name: "CrossSiteAccessPolicies()"
  nameWithType: "CrossSiteAccessPolicies.CrossSiteAccessPolicies()"
  syntax: "public CrossSiteAccessPolicies()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies.clientAccessPolicy()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies.clientAccessPolicy()"
  name: "clientAccessPolicy()"
  nameWithType: "CrossSiteAccessPolicies.clientAccessPolicy()"
  summary: "Get the client<wbr>Access<wbr>Policy property: The content of clientaccesspolicy.<wbr>xml used by Silverlight."
  syntax: "public String clientAccessPolicy()"
  desc: "Get the clientAccessPolicy property: The content of clientaccesspolicy.xml used by Silverlight."
  returns:
    description: "the clientAccessPolicy value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies.crossDomainPolicy()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies.crossDomainPolicy()"
  name: "crossDomainPolicy()"
  nameWithType: "CrossSiteAccessPolicies.crossDomainPolicy()"
  summary: "Get the cross<wbr>Domain<wbr>Policy property: The content of crossdomain.<wbr>xml used by Silverlight."
  syntax: "public String crossDomainPolicy()"
  desc: "Get the crossDomainPolicy property: The content of crossdomain.xml used by Silverlight."
  returns:
    description: "the crossDomainPolicy value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies.validate()"
  name: "validate()"
  nameWithType: "CrossSiteAccessPolicies.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies.withClientAccessPolicy(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies.withClientAccessPolicy(String clientAccessPolicy)"
  name: "withClientAccessPolicy(String clientAccessPolicy)"
  nameWithType: "CrossSiteAccessPolicies.withClientAccessPolicy(String clientAccessPolicy)"
  summary: "Set the client<wbr>Access<wbr>Policy property: The content of clientaccesspolicy.<wbr>xml used by Silverlight."
  parameters:
  - description: "the clientAccessPolicy value to set."
    name: "clientAccessPolicy"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CrossSiteAccessPolicies withClientAccessPolicy(String clientAccessPolicy)"
  desc: "Set the clientAccessPolicy property: The content of clientaccesspolicy.xml used by Silverlight."
  returns:
    description: "the CrossSiteAccessPolicies object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies?alt=com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies&text=CrossSiteAccessPolicies\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies.withCrossDomainPolicy(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies.withCrossDomainPolicy(String crossDomainPolicy)"
  name: "withCrossDomainPolicy(String crossDomainPolicy)"
  nameWithType: "CrossSiteAccessPolicies.withCrossDomainPolicy(String crossDomainPolicy)"
  summary: "Set the cross<wbr>Domain<wbr>Policy property: The content of crossdomain.<wbr>xml used by Silverlight."
  parameters:
  - description: "the crossDomainPolicy value to set."
    name: "crossDomainPolicy"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CrossSiteAccessPolicies withCrossDomainPolicy(String crossDomainPolicy)"
  desc: "Set the crossDomainPolicy property: The content of crossdomain.xml used by Silverlight."
  returns:
    description: "the CrossSiteAccessPolicies object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies?alt=com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies&text=CrossSiteAccessPolicies\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The client access policy."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0-beta.1
