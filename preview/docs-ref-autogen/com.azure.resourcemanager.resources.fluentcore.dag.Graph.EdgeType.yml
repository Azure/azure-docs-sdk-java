### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType
  id: EdgeType
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag
  children:
  - com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.BACK
  - com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.CROSS
  - com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.FORWARD
  - com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.TREE
  - com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.valueOf(java.lang.String)
  - com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.values()
  langs:
  - java
  name: Graph.EdgeType
  nameWithType: Graph.EdgeType
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType
  type: Enum
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: The edge types in a graph.
  syntax:
    content: protected enum Graph.EdgeType extends Enum<Graph.EdgeType>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.BACK
  id: BACK
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType
  langs:
  - java
  name: BACK
  nameWithType: Graph.EdgeType.BACK
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.BACK
  type: Field
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: An edge (u, v) is a back edge if v is ancestor of u.
  syntax:
    content: public static final Graph.EdgeType BACK
    return:
      type: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType
- uid: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.CROSS
  id: CROSS
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType
  langs:
  - java
  name: CROSS
  nameWithType: Graph.EdgeType.CROSS
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.CROSS
  type: Field
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: An edge (u, v) is a cross edge if v is neither ancestor or descendant of u.
  syntax:
    content: public static final Graph.EdgeType CROSS
    return:
      type: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType
- uid: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.EdgeType()
  id: EdgeType()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType
  langs:
  - java
  name: EdgeType()
  nameWithType: Graph.EdgeType.EdgeType()
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.EdgeType()
  overload: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.EdgeType*
  type: Constructor
  package: com.azure.resourcemanager.resources.fluentcore.dag
  syntax:
    content: private EdgeType()
- uid: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.FORWARD
  id: FORWARD
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType
  langs:
  - java
  name: FORWARD
  nameWithType: Graph.EdgeType.FORWARD
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.FORWARD
  type: Field
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: An edge (u, v) is a forward edge if v is descendant of u.
  syntax:
    content: public static final Graph.EdgeType FORWARD
    return:
      type: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType
- uid: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.TREE
  id: TREE
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType
  langs:
  - java
  name: TREE
  nameWithType: Graph.EdgeType.TREE
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.TREE
  type: Field
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: An edge (u, v) is a tree edge if v is visited the first time.
  syntax:
    content: public static final Graph.EdgeType TREE
    return:
      type: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType
- uid: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType
  langs:
  - java
  name: valueOf(String name)
  nameWithType: Graph.EdgeType.valueOf(String name)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.valueOf(String name)
  overload: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.valueOf*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  syntax:
    content: public static Graph.EdgeType valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType
- uid: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.values()
  id: values()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType
  langs:
  - java
  name: values()
  nameWithType: Graph.EdgeType.values()
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.values()
  overload: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.values*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  syntax:
    content: public static Graph.EdgeType[] values()
    return:
      type: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType[]
references:
- uid: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.EdgeType*
  name: EdgeType
  nameWithType: Graph.EdgeType.EdgeType
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.EdgeType
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType[]
  spec.java:
  - uid: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType
    name: EdgeType
    fullName: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType
  - name: '[]'
    fullName: '[]'
- uid: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.values*
  name: values
  nameWithType: Graph.EdgeType.values
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.values
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.valueOf*
  name: valueOf
  nameWithType: Graph.EdgeType.valueOf
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.valueOf
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: java.lang.Enum<com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType>
  name: Enum<Graph.EdgeType>
  nameWithType: Enum<Graph.EdgeType>
  fullName: java.lang.Enum<com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
