### YamlMime:JavaMember
uid: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.uploadBlob*"
fullName: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.uploadBlob"
name: "uploadBlob"
nameWithType: "ContainerRegistryBlobAsyncClient.uploadBlob"
members:
- uid: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.uploadBlob(com.azure.core.util.BinaryData)"
  fullName: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.uploadBlob(BinaryData data)"
  name: "uploadBlob(BinaryData data)"
  nameWithType: "ContainerRegistryBlobAsyncClient.uploadBlob(BinaryData data)"
  summary: "Uploads a blob to the repository. The client currently uploads the entire blob\\\\layer as a single unit.\n\nThe blob is read into memory and then an upload operation is performed as a single operation. We currently do not support breaking the layer into multiple chunks and uploading them one at a time"
  parameters:
  - description: "The blob\\image content that needs to be uploaded."
    name: "data"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<UploadBlobResult> uploadBlob(BinaryData data)"
  returns:
    description: "The operation result."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.containers.containerregistry.models.UploadBlobResult?alt=com.azure.containers.containerregistry.models.UploadBlobResult&text=UploadBlobResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.containers.containerregistry.specialized"
artifact: com.azure:azure-containers-containerregistry:1.1.0-beta.1
