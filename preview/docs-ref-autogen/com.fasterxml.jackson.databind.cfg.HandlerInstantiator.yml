### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
  id: HandlerInstantiator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg
  children:
  - com.fasterxml.jackson.databind.cfg.HandlerInstantiator.HandlerInstantiator()
  - com.fasterxml.jackson.databind.cfg.HandlerInstantiator.converterInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.HandlerInstantiator.deserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.HandlerInstantiator.includeFilterInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.HandlerInstantiator.keyDeserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.HandlerInstantiator.namingStrategyInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.HandlerInstantiator.objectIdGeneratorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.HandlerInstantiator.resolverIdGeneratorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.HandlerInstantiator.serializerInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.HandlerInstantiator.typeIdResolverInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.HandlerInstantiator.typeResolverBuilderInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.HandlerInstantiator.valueInstantiatorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.cfg.HandlerInstantiator.virtualPropertyWriterInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  langs:
  - java
  name: HandlerInstantiator
  nameWithType: HandlerInstantiator
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
  type: Class
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Helper class used for handling details of creating handler instances (things like <xref uid="com.fasterxml.jackson.databind.JsonSerializer" data-throw-if-not-resolved="false">JsonSerializer</xref>s, <xref uid="com.fasterxml.jackson.databind.JsonDeserializer" data-throw-if-not-resolved="false">JsonDeserializer</xref>s, various type handlers) of specific types. Actual handler type has been resolved at this point, so instantiator is strictly responsible for providing a configured instance by constructing and configuring a new instance, or possibly by recycling a shared instance. One use case is that of allowing dependency injection, which would otherwise be difficult to do.


    Custom instances are allowed to return null to indicate that caller should use the default instantiation handling (which just means calling no-argument constructor via reflection).


    Care has to be taken to ensure that if instance returned is shared, it will be thread-safe; caller will not synchronize access to returned instances.
  syntax:
    content: public abstract class HandlerInstantiator
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.HandlerInstantiator()
  id: HandlerInstantiator()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
  langs:
  - java
  name: HandlerInstantiator()
  nameWithType: HandlerInstantiator.HandlerInstantiator()
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.HandlerInstantiator()
  overload: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.HandlerInstantiator*
  type: Constructor
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public HandlerInstantiator()
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.converterInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  id: converterInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
  langs:
  - java
  name: converterInstance(MapperConfig<?> config, Annotated annotated, Class<?> implClass)
  nameWithType: HandlerInstantiator.converterInstance(MapperConfig<?> config, Annotated annotated, Class<?> implClass)
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.converterInstance(MapperConfig<?> config, Annotated annotated, Class<?> implClass)
  overload: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.converterInstance*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method called to construct a Converter instance used for specified class.
  syntax:
    content: public Converter<?,?> converterInstance(MapperConfig<?> config, Annotated annotated, Class<?> implClass)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: annotated
      type: com.fasterxml.jackson.databind.introspect.Annotated
    - id: implClass
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.util.Converter<?,?>
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.deserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  id: deserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
  langs:
  - java
  name: deserializerInstance(DeserializationConfig config, Annotated annotated, Class<?> deserClass)
  nameWithType: HandlerInstantiator.deserializerInstance(DeserializationConfig config, Annotated annotated, Class<?> deserClass)
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.deserializerInstance(DeserializationConfig config, Annotated annotated, Class<?> deserClass)
  overload: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.deserializerInstance*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method called to get an instance of deserializer of specified type.
  syntax:
    content: public abstract JsonDeserializer<?> deserializerInstance(DeserializationConfig config, Annotated annotated, Class<?> deserClass)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
      description: Deserialization configuration in effect
    - id: annotated
      type: com.fasterxml.jackson.databind.introspect.Annotated
      description: >-
        Element (Class, Method, Field, constructor parameter) that
            had annotation defining class of deserializer to construct (to allow
            implementation use information from other annotations)
    - id: deserClass
      type: java.lang.Class<?>
      description: Class of deserializer instance to return
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: Deserializer instance to use
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.includeFilterInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class<?>)
  id: includeFilterInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
  langs:
  - java
  name: includeFilterInstance(SerializationConfig config, BeanPropertyDefinition forProperty, Class<?> filterClass)
  nameWithType: HandlerInstantiator.includeFilterInstance(SerializationConfig config, BeanPropertyDefinition forProperty, Class<?> filterClass)
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.includeFilterInstance(SerializationConfig config, BeanPropertyDefinition forProperty, Class<?> filterClass)
  overload: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.includeFilterInstance*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: >-
    Method called to construct a Filter (any Object with implementation of `equals(Object)` that determines if given value is to be excluded (true) or included (false)) to be used based on <xref uid="com.fasterxml.jackson.annotation.JsonInclude" data-throw-if-not-resolved="false">com.fasterxml.jackson.annotation.JsonInclude</xref> annotation (or equivalent).


    Default implementation returns \`null\` to indicate that default instantiation (use zero-arg constructor of the `filterClass`) should be used.
  syntax:
    content: public Object includeFilterInstance(SerializationConfig config, BeanPropertyDefinition forProperty, Class<?> filterClass)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: forProperty
      type: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
    - id: filterClass
      type: java.lang.Class<?>
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.keyDeserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  id: keyDeserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
  langs:
  - java
  name: keyDeserializerInstance(DeserializationConfig config, Annotated annotated, Class<?> keyDeserClass)
  nameWithType: HandlerInstantiator.keyDeserializerInstance(DeserializationConfig config, Annotated annotated, Class<?> keyDeserClass)
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.keyDeserializerInstance(DeserializationConfig config, Annotated annotated, Class<?> keyDeserClass)
  overload: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.keyDeserializerInstance*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method called to get an instance of key deserializer of specified type.
  syntax:
    content: public abstract KeyDeserializer keyDeserializerInstance(DeserializationConfig config, Annotated annotated, Class<?> keyDeserClass)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
      description: Deserialization configuration in effect
    - id: annotated
      type: com.fasterxml.jackson.databind.introspect.Annotated
      description: >-
        Element (Class, Method, Field, constructor parameter) that
            had annotation defining class of key deserializer to construct (to allow
            implementation use information from other annotations)
    - id: keyDeserClass
      type: java.lang.Class<?>
      description: Class of key deserializer instance to return
    return:
      type: com.fasterxml.jackson.databind.KeyDeserializer
      description: Key deserializer instance to use
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.namingStrategyInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  id: namingStrategyInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
  langs:
  - java
  name: namingStrategyInstance(MapperConfig<?> config, Annotated annotated, Class<?> implClass)
  nameWithType: HandlerInstantiator.namingStrategyInstance(MapperConfig<?> config, Annotated annotated, Class<?> implClass)
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.namingStrategyInstance(MapperConfig<?> config, Annotated annotated, Class<?> implClass)
  overload: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.namingStrategyInstance*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method called to construct a NamingStrategy instance used for specified class.
  syntax:
    content: public PropertyNamingStrategy namingStrategyInstance(MapperConfig<?> config, Annotated annotated, Class<?> implClass)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: annotated
      type: com.fasterxml.jackson.databind.introspect.Annotated
    - id: implClass
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.PropertyNamingStrategy
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.objectIdGeneratorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  id: objectIdGeneratorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
  langs:
  - java
  name: objectIdGeneratorInstance(MapperConfig<?> config, Annotated annotated, Class<?> implClass)
  nameWithType: HandlerInstantiator.objectIdGeneratorInstance(MapperConfig<?> config, Annotated annotated, Class<?> implClass)
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.objectIdGeneratorInstance(MapperConfig<?> config, Annotated annotated, Class<?> implClass)
  overload: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.objectIdGeneratorInstance*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method called to construct a ObjectIdHandler instance of specified type.
  syntax:
    content: public ObjectIdGenerator<?> objectIdGeneratorInstance(MapperConfig<?> config, Annotated annotated, Class<?> implClass)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: annotated
      type: com.fasterxml.jackson.databind.introspect.Annotated
    - id: implClass
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.annotation.ObjectIdGenerator<?>
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.resolverIdGeneratorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  id: resolverIdGeneratorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
  langs:
  - java
  name: resolverIdGeneratorInstance(MapperConfig<?> config, Annotated annotated, Class<?> implClass)
  nameWithType: HandlerInstantiator.resolverIdGeneratorInstance(MapperConfig<?> config, Annotated annotated, Class<?> implClass)
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.resolverIdGeneratorInstance(MapperConfig<?> config, Annotated annotated, Class<?> implClass)
  overload: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.resolverIdGeneratorInstance*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  syntax:
    content: public ObjectIdResolver resolverIdGeneratorInstance(MapperConfig<?> config, Annotated annotated, Class<?> implClass)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: annotated
      type: com.fasterxml.jackson.databind.introspect.Annotated
    - id: implClass
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.annotation.ObjectIdResolver
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.serializerInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  id: serializerInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
  langs:
  - java
  name: serializerInstance(SerializationConfig config, Annotated annotated, Class<?> serClass)
  nameWithType: HandlerInstantiator.serializerInstance(SerializationConfig config, Annotated annotated, Class<?> serClass)
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.serializerInstance(SerializationConfig config, Annotated annotated, Class<?> serClass)
  overload: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.serializerInstance*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method called to get an instance of serializer of specified type.
  syntax:
    content: public abstract JsonSerializer<?> serializerInstance(SerializationConfig config, Annotated annotated, Class<?> serClass)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
      description: Serialization configuration in effect
    - id: annotated
      type: com.fasterxml.jackson.databind.introspect.Annotated
      description: >-
        Element (Class, Method, Field) that
            had annotation defining class of serializer to construct (to allow
            implementation use information from other annotations)
    - id: serClass
      type: java.lang.Class<?>
      description: Class of serializer instance to return
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
      description: Serializer instance to use
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.typeIdResolverInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  id: typeIdResolverInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
  langs:
  - java
  name: typeIdResolverInstance(MapperConfig<?> config, Annotated annotated, Class<?> resolverClass)
  nameWithType: HandlerInstantiator.typeIdResolverInstance(MapperConfig<?> config, Annotated annotated, Class<?> resolverClass)
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.typeIdResolverInstance(MapperConfig<?> config, Annotated annotated, Class<?> resolverClass)
  overload: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.typeIdResolverInstance*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method called to get an instance of TypeIdResolver of specified type.
  syntax:
    content: public abstract TypeIdResolver typeIdResolverInstance(MapperConfig<?> config, Annotated annotated, Class<?> resolverClass)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
      description: >-
        Mapper configuration in effect (either SerializationConfig or
           DeserializationConfig, depending on when instance is being constructed)
    - id: annotated
      type: com.fasterxml.jackson.databind.introspect.Annotated
      description: >-
        annotated Element (Class, Method, Field) that
            had annotation defining class of resolver to construct (to allow
            implementation use information from other annotations)
    - id: resolverClass
      type: java.lang.Class<?>
      description: Class of resolver instance to return
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
      description: TypeResolverBuilder instance to use
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.typeResolverBuilderInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  id: typeResolverBuilderInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
  langs:
  - java
  name: typeResolverBuilderInstance(MapperConfig<?> config, Annotated annotated, Class<?> builderClass)
  nameWithType: HandlerInstantiator.typeResolverBuilderInstance(MapperConfig<?> config, Annotated annotated, Class<?> builderClass)
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.typeResolverBuilderInstance(MapperConfig<?> config, Annotated annotated, Class<?> builderClass)
  overload: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.typeResolverBuilderInstance*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method called to get an instance of TypeResolverBuilder of specified type.
  syntax:
    content: public abstract TypeResolverBuilder<?> typeResolverBuilderInstance(MapperConfig<?> config, Annotated annotated, Class<?> builderClass)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
      description: >-
        Mapper configuration in effect (either SerializationConfig or
           DeserializationConfig, depending on when instance is being constructed)
    - id: annotated
      type: com.fasterxml.jackson.databind.introspect.Annotated
      description: >-
        annotated Element (Class, Method, Field) that
            had annotation defining class of builder to construct (to allow
            implementation use information from other annotations)
    - id: builderClass
      type: java.lang.Class<?>
      description: Class of builder instance to return
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?>
      description: TypeResolverBuilder instance to use
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.valueInstantiatorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  id: valueInstantiatorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
  langs:
  - java
  name: valueInstantiatorInstance(MapperConfig<?> config, Annotated annotated, Class<?> resolverClass)
  nameWithType: HandlerInstantiator.valueInstantiatorInstance(MapperConfig<?> config, Annotated annotated, Class<?> resolverClass)
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.valueInstantiatorInstance(MapperConfig<?> config, Annotated annotated, Class<?> resolverClass)
  overload: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.valueInstantiatorInstance*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method called to construct an instance of ValueInstantiator of specified type.
  syntax:
    content: public ValueInstantiator valueInstantiatorInstance(MapperConfig<?> config, Annotated annotated, Class<?> resolverClass)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: annotated
      type: com.fasterxml.jackson.databind.introspect.Annotated
    - id: resolverClass
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.deser.ValueInstantiator
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.virtualPropertyWriterInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  id: virtualPropertyWriterInstance(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.cfg.HandlerInstantiator
  langs:
  - java
  name: virtualPropertyWriterInstance(MapperConfig<?> config, Class<?> implClass)
  nameWithType: HandlerInstantiator.virtualPropertyWriterInstance(MapperConfig<?> config, Class<?> implClass)
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.virtualPropertyWriterInstance(MapperConfig<?> config, Class<?> implClass)
  overload: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.virtualPropertyWriterInstance*
  type: Method
  package: com.fasterxml.jackson.databind.cfg
  summary: Method called to construct a <xref uid="com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter" data-throw-if-not-resolved="false">VirtualBeanPropertyWriter</xref> instance of specified type.
  syntax:
    content: public VirtualBeanPropertyWriter virtualPropertyWriterInstance(MapperConfig<?> config, Class<?> implClass)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: implClass
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
references:
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.HandlerInstantiator*
  name: HandlerInstantiator
  nameWithType: HandlerInstantiator.HandlerInstantiator
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.HandlerInstantiator
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.DeserializationConfig
  name: DeserializationConfig
  nameWithType: DeserializationConfig
  fullName: com.fasterxml.jackson.databind.DeserializationConfig
- uid: com.fasterxml.jackson.databind.introspect.Annotated
  name: Annotated
  nameWithType: Annotated
  fullName: com.fasterxml.jackson.databind.introspect.Annotated
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.JsonDeserializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.deserializerInstance*
  name: deserializerInstance
  nameWithType: HandlerInstantiator.deserializerInstance
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.deserializerInstance
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.KeyDeserializer
  name: KeyDeserializer
  nameWithType: KeyDeserializer
  fullName: com.fasterxml.jackson.databind.KeyDeserializer
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.keyDeserializerInstance*
  name: keyDeserializerInstance
  nameWithType: HandlerInstantiator.keyDeserializerInstance
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.keyDeserializerInstance
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.SerializationConfig
  name: SerializationConfig
  nameWithType: SerializationConfig
  fullName: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.JsonSerializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.serializerInstance*
  name: serializerInstance
  nameWithType: HandlerInstantiator.serializerInstance
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.serializerInstance
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.cfg.MapperConfig
    name: MapperConfig
    fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder
    name: TypeResolverBuilder
    fullName: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.typeResolverBuilderInstance*
  name: typeResolverBuilderInstance
  nameWithType: HandlerInstantiator.typeResolverBuilderInstance
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.typeResolverBuilderInstance
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
  name: TypeIdResolver
  nameWithType: TypeIdResolver
  fullName: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.typeIdResolverInstance*
  name: typeIdResolverInstance
  nameWithType: HandlerInstantiator.typeIdResolverInstance
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.typeIdResolverInstance
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.deser.ValueInstantiator
  name: ValueInstantiator
  nameWithType: ValueInstantiator
  fullName: com.fasterxml.jackson.databind.deser.ValueInstantiator
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.valueInstantiatorInstance*
  name: valueInstantiatorInstance
  nameWithType: HandlerInstantiator.valueInstantiatorInstance
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.valueInstantiatorInstance
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator<?>
  spec.java:
  - uid: com.fasterxml.jackson.annotation.ObjectIdGenerator
    name: ObjectIdGenerator
    fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.objectIdGeneratorInstance*
  name: objectIdGeneratorInstance
  nameWithType: HandlerInstantiator.objectIdGeneratorInstance
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.objectIdGeneratorInstance
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.annotation.ObjectIdResolver
  name: ObjectIdResolver
  nameWithType: ObjectIdResolver
  fullName: com.fasterxml.jackson.annotation.ObjectIdResolver
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.resolverIdGeneratorInstance*
  name: resolverIdGeneratorInstance
  nameWithType: HandlerInstantiator.resolverIdGeneratorInstance
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.resolverIdGeneratorInstance
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy
  name: PropertyNamingStrategy
  nameWithType: PropertyNamingStrategy
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.namingStrategyInstance*
  name: namingStrategyInstance
  nameWithType: HandlerInstantiator.namingStrategyInstance
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.namingStrategyInstance
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.util.Converter<?,?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.util.Converter
    name: Converter
    fullName: com.fasterxml.jackson.databind.util.Converter
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: ','
    fullName: ','
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.converterInstance*
  name: converterInstance
  nameWithType: HandlerInstantiator.converterInstance
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.converterInstance
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
  name: VirtualBeanPropertyWriter
  nameWithType: VirtualBeanPropertyWriter
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.virtualPropertyWriterInstance*
  name: virtualPropertyWriterInstance
  nameWithType: HandlerInstantiator.virtualPropertyWriterInstance
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.virtualPropertyWriterInstance
  package: com.fasterxml.jackson.databind.cfg
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  name: BeanPropertyDefinition
  nameWithType: BeanPropertyDefinition
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.includeFilterInstance*
  name: includeFilterInstance
  nameWithType: HandlerInstantiator.includeFilterInstance
  fullName: com.fasterxml.jackson.databind.cfg.HandlerInstantiator.includeFilterInstance
  package: com.fasterxml.jackson.databind.cfg
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig
  name: MapperConfig
  nameWithType: MapperConfig
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder
  name: TypeResolverBuilder
  nameWithType: TypeResolverBuilder
  fullName: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator
  name: ObjectIdGenerator
  nameWithType: ObjectIdGenerator
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator
- uid: ?,?
  name: ?,?
  nameWithType: ?,?
  fullName: ?,?
- uid: com.fasterxml.jackson.databind.util.Converter
  name: Converter
  nameWithType: Converter
  fullName: com.fasterxml.jackson.databind.util.Converter
