### YamlMime:JavaType
uid: "com.azure.verticals.agrifood.farming.SensorEventsAsyncClient"
fullName: "com.azure.verticals.agrifood.farming.SensorEventsAsyncClient"
name: "SensorEventsAsyncClient"
nameWithType: "SensorEventsAsyncClient"
summary: "Initializes a new instance of the asynchronous Farm<wbr>Beats<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **SensorEventsAsyncClient**"
methods:
- uid: "com.azure.verticals.agrifood.farming.SensorEventsAsyncClient.listWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.verticals.agrifood.farming.SensorEventsAsyncClient.listWithResponse(String sensorId, String sensorPartnerId, RequestOptions requestOptions)"
  name: "listWithResponse(String sensorId, String sensorPartnerId, RequestOptions requestOptions)"
  nameWithType: "SensorEventsAsyncClient.listWithResponse(String sensorId, String sensorPartnerId, RequestOptions requestOptions)"
  summary: "Returns a list of sensor events data."
  parameters:
  - description: "Id of the associated sensor."
    name: "sensorId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Id of the associated sensor partner."
    name: "sensorPartnerId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> listWithResponse(String sensorId, String sensorPartnerId, RequestOptions requestOptions)"
  desc: "Returns a list of sensor events data. Time span for query is limited to 90 days at a time. Returns last 90 days events when startDateTime and endDateTime are not provided.\n\n**Query Parameters**\n\n    | ---------------------- | -------------- | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name                   | Type           | Required | Description                                                                                                                                     |\n    | startDateTime          | OffsetDateTime | No       | Search span start time of sensor events (inclusive), sample format: yyyy-MM-ddTHH:mm:ssZ. It is truncated upto seconds if fraction is provided. |\n    | endDateTime            | OffsetDateTime | No       | Search span end time of sensor events (inclusive), sample format: yyyy-MM-ddTHH:mm:ssZ. It is truncated upto seconds if fraction is provided.   |\n    | excludeDuplicateEvents | Boolean        | No       | Flag to exclude duplicate events and take the latest ones only (Default: true).                                                                 |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     value (Required): [\n          (Required){\n             sensorId: String (Optional)\n             sensorPartnerId: String (Optional)\n             partyId: String (Optional)\n             boundaryId: String (Optional)\n             eventDateTime: OffsetDateTime (Optional)\n             ingestionDateTime: OffsetDateTime (Optional)\n             measures (Optional): {\n                 String: Object (Optional)\n             }\n         }\n     ]\n     skipToken: String (Optional)\n     nextLink: String (Optional)\n }\n```"
  returns:
    description: "paged response contains list of requested objects and a URL link to get the next set of results along\n     with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous FarmBeatsClient type."
metadata: {}
package: "com.azure.verticals.agrifood.farming"
artifact: com.azure:azure-verticals-agrifood-farming:1.0.0-beta.3
