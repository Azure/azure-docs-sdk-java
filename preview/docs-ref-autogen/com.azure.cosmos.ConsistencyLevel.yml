### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.ConsistencyLevel
  id: ConsistencyLevel
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos
  children:
  - com.azure.cosmos.ConsistencyLevel.BOUNDED_STALENESS
  - com.azure.cosmos.ConsistencyLevel.CONSISTENT_PREFIX
  - com.azure.cosmos.ConsistencyLevel.EVENTUAL
  - com.azure.cosmos.ConsistencyLevel.SESSION
  - com.azure.cosmos.ConsistencyLevel.STRONG
  - com.azure.cosmos.ConsistencyLevel.toString()
  - com.azure.cosmos.ConsistencyLevel.valueOf(java.lang.String)
  - com.azure.cosmos.ConsistencyLevel.values()
  langs:
  - java
  name: ConsistencyLevel
  nameWithType: ConsistencyLevel
  fullName: com.azure.cosmos.ConsistencyLevel
  type: Enum
  package: com.azure.cosmos
  summary: >-
    Represents the consistency levels supported for Azure Cosmos DB client operations in the Azure Cosmos DB service.


    The requested ConsistencyLevel must match or be weaker than that provisioned for the database account. Consistency levels by order of strength are STRONG, BOUNDED\_STALENESS, SESSION and EVENTUAL. Refer to consistency level documentation for additional details: https://docs.microsoft.com/en-us/azure/cosmos-db/consistency-levels
  syntax:
    content: public enum ConsistencyLevel extends Enum<ConsistencyLevel>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.ConsistencyLevel.BOUNDED_STALENESS
  id: BOUNDED_STALENESS
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.ConsistencyLevel
  langs:
  - java
  name: BOUNDED_STALENESS
  nameWithType: ConsistencyLevel.BOUNDED_STALENESS
  fullName: com.azure.cosmos.ConsistencyLevel.BOUNDED_STALENESS
  type: Field
  package: com.azure.cosmos
  summary: Bounded Staleness guarantees that reads are not too out-of-date. This can be configured based on number of operations (MaxStalenessPrefix) or time (MaxStalenessIntervalInSeconds)
  syntax:
    content: public static final ConsistencyLevel BOUNDED_STALENESS
    return:
      type: com.azure.cosmos.ConsistencyLevel
- uid: com.azure.cosmos.ConsistencyLevel.CONSISTENT_PREFIX
  id: CONSISTENT_PREFIX
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.ConsistencyLevel
  langs:
  - java
  name: CONSISTENT_PREFIX
  nameWithType: ConsistencyLevel.CONSISTENT_PREFIX
  fullName: com.azure.cosmos.ConsistencyLevel.CONSISTENT_PREFIX
  type: Field
  package: com.azure.cosmos
  summary: CONSISTENT\_PREFIX Consistency guarantees that reads will return some prefix of all writes with no gaps. ALL writes will be eventually be available for reads.
  syntax:
    content: public static final ConsistencyLevel CONSISTENT_PREFIX
    return:
      type: com.azure.cosmos.ConsistencyLevel
- uid: com.azure.cosmos.ConsistencyLevel.ConsistencyLevel(java.lang.String)
  id: ConsistencyLevel(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.ConsistencyLevel
  langs:
  - java
  name: ConsistencyLevel(String overWireValue)
  nameWithType: ConsistencyLevel.ConsistencyLevel(String overWireValue)
  fullName: com.azure.cosmos.ConsistencyLevel.ConsistencyLevel(String overWireValue)
  overload: com.azure.cosmos.ConsistencyLevel.ConsistencyLevel*
  type: Constructor
  package: com.azure.cosmos
  syntax:
    content: private ConsistencyLevel(String overWireValue)
    parameters:
    - id: overWireValue
      type: java.lang.String
- uid: com.azure.cosmos.ConsistencyLevel.EVENTUAL
  id: EVENTUAL
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.ConsistencyLevel
  langs:
  - java
  name: EVENTUAL
  nameWithType: ConsistencyLevel.EVENTUAL
  fullName: com.azure.cosmos.ConsistencyLevel.EVENTUAL
  type: Field
  package: com.azure.cosmos
  summary: EVENTUAL Consistency guarantees that reads will return a subset of writes. ALL writes will be eventually be available for reads.
  syntax:
    content: public static final ConsistencyLevel EVENTUAL
    return:
      type: com.azure.cosmos.ConsistencyLevel
- uid: com.azure.cosmos.ConsistencyLevel.SESSION
  id: SESSION
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.ConsistencyLevel
  langs:
  - java
  name: SESSION
  nameWithType: ConsistencyLevel.SESSION
  fullName: com.azure.cosmos.ConsistencyLevel.SESSION
  type: Field
  package: com.azure.cosmos
  summary: SESSION Consistency guarantees monotonic reads (you never read old data, then new, then old again), monotonic writes (writes are ordered) and read your writes (your writes are immediately visible to your reads) within any single session.
  syntax:
    content: public static final ConsistencyLevel SESSION
    return:
      type: com.azure.cosmos.ConsistencyLevel
- uid: com.azure.cosmos.ConsistencyLevel.STRONG
  id: STRONG
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.ConsistencyLevel
  langs:
  - java
  name: STRONG
  nameWithType: ConsistencyLevel.STRONG
  fullName: com.azure.cosmos.ConsistencyLevel.STRONG
  type: Field
  package: com.azure.cosmos
  summary: STRONG Consistency guarantees that read operations always return the value that was last written.
  syntax:
    content: public static final ConsistencyLevel STRONG
    return:
      type: com.azure.cosmos.ConsistencyLevel
- uid: com.azure.cosmos.ConsistencyLevel.toString()
  id: toString()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.ConsistencyLevel
  langs:
  - java
  name: toString()
  nameWithType: ConsistencyLevel.toString()
  fullName: com.azure.cosmos.ConsistencyLevel.toString()
  overload: com.azure.cosmos.ConsistencyLevel.toString*
  type: Method
  package: com.azure.cosmos
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.azure.cosmos.ConsistencyLevel.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.ConsistencyLevel
  langs:
  - java
  name: valueOf(String name)
  nameWithType: ConsistencyLevel.valueOf(String name)
  fullName: com.azure.cosmos.ConsistencyLevel.valueOf(String name)
  overload: com.azure.cosmos.ConsistencyLevel.valueOf*
  type: Method
  package: com.azure.cosmos
  syntax:
    content: public static ConsistencyLevel valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.azure.cosmos.ConsistencyLevel
- uid: com.azure.cosmos.ConsistencyLevel.values()
  id: values()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.ConsistencyLevel
  langs:
  - java
  name: values()
  nameWithType: ConsistencyLevel.values()
  fullName: com.azure.cosmos.ConsistencyLevel.values()
  overload: com.azure.cosmos.ConsistencyLevel.values*
  type: Method
  package: com.azure.cosmos
  syntax:
    content: public static ConsistencyLevel[] values()
    return:
      type: com.azure.cosmos.ConsistencyLevel[]
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.ConsistencyLevel.ConsistencyLevel*
  name: ConsistencyLevel
  nameWithType: ConsistencyLevel.ConsistencyLevel
  fullName: com.azure.cosmos.ConsistencyLevel.ConsistencyLevel
  package: com.azure.cosmos
- uid: com.azure.cosmos.ConsistencyLevel[]
  spec.java:
  - uid: com.azure.cosmos.ConsistencyLevel
    name: ConsistencyLevel
    fullName: com.azure.cosmos.ConsistencyLevel
  - name: '[]'
    fullName: '[]'
- uid: com.azure.cosmos.ConsistencyLevel.values*
  name: values
  nameWithType: ConsistencyLevel.values
  fullName: com.azure.cosmos.ConsistencyLevel.values
  package: com.azure.cosmos
- uid: com.azure.cosmos.ConsistencyLevel.valueOf*
  name: valueOf
  nameWithType: ConsistencyLevel.valueOf
  fullName: com.azure.cosmos.ConsistencyLevel.valueOf
  package: com.azure.cosmos
- uid: com.azure.cosmos.ConsistencyLevel.toString*
  name: toString
  nameWithType: ConsistencyLevel.toString
  fullName: com.azure.cosmos.ConsistencyLevel.toString
  package: com.azure.cosmos
- uid: java.lang.Enum<com.azure.cosmos.ConsistencyLevel>
  name: Enum<ConsistencyLevel>
  nameWithType: Enum<ConsistencyLevel>
  fullName: java.lang.Enum<com.azure.cosmos.ConsistencyLevel>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
