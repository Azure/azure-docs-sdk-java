### YamlMime:JavaType
uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService"
fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService"
name: "DataMigrationService"
nameWithType: "DataMigrationService"
summary: "An immutable client-side representation of DataMigrationService."
syntax: "public interface DataMigrationService"
methods:
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.checkStatus()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.checkStatus()"
  name: "checkStatus()"
  nameWithType: "DataMigrationService.checkStatus()"
  summary: "The services resource is the top-level resource that represents the Database Migration Service. This action performs a health check and returns the status of the service and virtual machine size."
  modifiers:
  - "abstract"
  syntax: "public abstract DataMigrationServiceStatusResponse checkStatus()"
  returns:
    description: "service health status."
    type: "<xref href=\"com.azure.resourcemanager.datamigration.models.DataMigrationServiceStatusResponse?alt=com.azure.resourcemanager.datamigration.models.DataMigrationServiceStatusResponse&text=DataMigrationServiceStatusResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.checkStatusWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.checkStatusWithResponse(Context context)"
  name: "checkStatusWithResponse(Context context)"
  nameWithType: "DataMigrationService.checkStatusWithResponse(Context context)"
  summary: "The services resource is the top-level resource that represents the Database Migration Service. This action performs a health check and returns the status of the service and virtual machine size."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DataMigrationServiceStatusResponse> checkStatusWithResponse(Context context)"
  returns:
    description: "service health status."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datamigration.models.DataMigrationServiceStatusResponse?alt=com.azure.resourcemanager.datamigration.models.DataMigrationServiceStatusResponse&text=DataMigrationServiceStatusResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.etag()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.etag()"
  name: "etag()"
  nameWithType: "DataMigrationService.etag()"
  summary: "Gets the etag property: HTTP strong entity tag value. Ignored if submitted."
  modifiers:
  - "abstract"
  syntax: "public abstract String etag()"
  returns:
    description: "the etag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.id()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.id()"
  name: "id()"
  nameWithType: "DataMigrationService.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.innerModel()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.innerModel()"
  name: "innerModel()"
  nameWithType: "DataMigrationService.innerModel()"
  summary: "Gets the inner com.azure.resourcemanager.datamigration.fluent.models.DataMigrationServiceInner object."
  modifiers:
  - "abstract"
  syntax: "public abstract DataMigrationServiceInner innerModel()"
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.datamigration.fluent.models.DataMigrationServiceInner?alt=com.azure.resourcemanager.datamigration.fluent.models.DataMigrationServiceInner&text=DataMigrationServiceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.kind()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.kind()"
  name: "kind()"
  nameWithType: "DataMigrationService.kind()"
  summary: "Gets the kind property: The resource kind. Only 'vm' (the default) is supported."
  modifiers:
  - "abstract"
  syntax: "public abstract String kind()"
  returns:
    description: "the kind value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.location()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.location()"
  name: "location()"
  nameWithType: "DataMigrationService.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.name()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.name()"
  name: "name()"
  nameWithType: "DataMigrationService.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.nestedCheckNameAvailability(com.azure.resourcemanager.datamigration.models.NameAvailabilityRequest)"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.nestedCheckNameAvailability(NameAvailabilityRequest parameters)"
  name: "nestedCheckNameAvailability(NameAvailabilityRequest parameters)"
  nameWithType: "DataMigrationService.nestedCheckNameAvailability(NameAvailabilityRequest parameters)"
  summary: "This method checks whether a proposed nested resource name is valid and available."
  modifiers:
  - "abstract"
  parameters:
  - description: "Requested name to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.datamigration.models.NameAvailabilityRequest?alt=com.azure.resourcemanager.datamigration.models.NameAvailabilityRequest&text=NameAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract NameAvailabilityResponse nestedCheckNameAvailability(NameAvailabilityRequest parameters)"
  returns:
    description: "indicates whether a proposed resource name is available."
    type: "<xref href=\"com.azure.resourcemanager.datamigration.models.NameAvailabilityResponse?alt=com.azure.resourcemanager.datamigration.models.NameAvailabilityResponse&text=NameAvailabilityResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.nestedCheckNameAvailabilityWithResponse(com.azure.resourcemanager.datamigration.models.NameAvailabilityRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.nestedCheckNameAvailabilityWithResponse(NameAvailabilityRequest parameters, Context context)"
  name: "nestedCheckNameAvailabilityWithResponse(NameAvailabilityRequest parameters, Context context)"
  nameWithType: "DataMigrationService.nestedCheckNameAvailabilityWithResponse(NameAvailabilityRequest parameters, Context context)"
  summary: "This method checks whether a proposed nested resource name is valid and available."
  modifiers:
  - "abstract"
  parameters:
  - description: "Requested name to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.datamigration.models.NameAvailabilityRequest?alt=com.azure.resourcemanager.datamigration.models.NameAvailabilityRequest&text=NameAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<NameAvailabilityResponse> nestedCheckNameAvailabilityWithResponse(NameAvailabilityRequest parameters, Context context)"
  returns:
    description: "indicates whether a proposed resource name is available."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datamigration.models.NameAvailabilityResponse?alt=com.azure.resourcemanager.datamigration.models.NameAvailabilityResponse&text=NameAvailabilityResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.provisioningState()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.provisioningState()"
  name: "provisioningState()"
  nameWithType: "DataMigrationService.provisioningState()"
  summary: "Gets the provisioningState property: The resource's provisioning state."
  modifiers:
  - "abstract"
  syntax: "public abstract ServiceProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.datamigration.models.ServiceProvisioningState?alt=com.azure.resourcemanager.datamigration.models.ServiceProvisioningState&text=ServiceProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.publicKey()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.publicKey()"
  name: "publicKey()"
  nameWithType: "DataMigrationService.publicKey()"
  summary: "Gets the publicKey property: The public key of the service, used to encrypt secrets sent to the service."
  modifiers:
  - "abstract"
  syntax: "public abstract String publicKey()"
  returns:
    description: "the publicKey value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.refresh()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.refresh()"
  name: "refresh()"
  nameWithType: "DataMigrationService.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract DataMigrationService refresh()"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.datamigration.models.DataMigrationService?alt=com.azure.resourcemanager.datamigration.models.DataMigrationService&text=DataMigrationService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "DataMigrationService.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DataMigrationService refresh(Context context)"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.datamigration.models.DataMigrationService?alt=com.azure.resourcemanager.datamigration.models.DataMigrationService&text=DataMigrationService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.region()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.region()"
  name: "region()"
  nameWithType: "DataMigrationService.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.regionName()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.regionName()"
  name: "regionName()"
  nameWithType: "DataMigrationService.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.sku()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.sku()"
  name: "sku()"
  nameWithType: "DataMigrationService.sku()"
  summary: "Gets the sku property: Service SKU."
  modifiers:
  - "abstract"
  syntax: "public abstract ServiceSku sku()"
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.datamigration.models.ServiceSku?alt=com.azure.resourcemanager.datamigration.models.ServiceSku&text=ServiceSku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.start()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.start()"
  name: "start()"
  nameWithType: "DataMigrationService.start()"
  summary: "The services resource is the top-level resource that represents the Database Migration Service. This action starts the service and the service can be used for data migration."
  modifiers:
  - "abstract"
  syntax: "public abstract void start()"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.start(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.start(Context context)"
  name: "start(Context context)"
  nameWithType: "DataMigrationService.start(Context context)"
  summary: "The services resource is the top-level resource that represents the Database Migration Service. This action starts the service and the service can be used for data migration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void start(Context context)"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.stop()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.stop()"
  name: "stop()"
  nameWithType: "DataMigrationService.stop()"
  summary: "The services resource is the top-level resource that represents the Database Migration Service. This action stops the service and the service cannot be used for data migration. The service owner won't be billed when the service is stopped."
  modifiers:
  - "abstract"
  syntax: "public abstract void stop()"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.stop(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.stop(Context context)"
  name: "stop(Context context)"
  nameWithType: "DataMigrationService.stop(Context context)"
  summary: "The services resource is the top-level resource that represents the Database Migration Service. This action stops the service and the service cannot be used for data migration. The service owner won't be billed when the service is stopped."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void stop(Context context)"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.tags()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.tags()"
  name: "tags()"
  nameWithType: "DataMigrationService.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.type()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.type()"
  name: "type()"
  nameWithType: "DataMigrationService.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.update()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.update()"
  name: "update()"
  nameWithType: "DataMigrationService.update()"
  summary: "Begins update for the DataMigrationService resource."
  modifiers:
  - "abstract"
  syntax: "public abstract DataMigrationService.Update update()"
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.datamigration.models.DataMigrationService.Update?alt=com.azure.resourcemanager.datamigration.models.DataMigrationService.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datamigration.models.DataMigrationService.virtualSubnetId()"
  fullName: "com.azure.resourcemanager.datamigration.models.DataMigrationService.virtualSubnetId()"
  name: "virtualSubnetId()"
  nameWithType: "DataMigrationService.virtualSubnetId()"
  summary: "Gets the virtualSubnetId property: The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined."
  modifiers:
  - "abstract"
  syntax: "public abstract String virtualSubnetId()"
  returns:
    description: "the virtualSubnetId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.datamigration.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datamigration:1.0.0-beta.1
