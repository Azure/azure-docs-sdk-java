### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.Interners
  id: Interners
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.Interners.<E>asFunction(com.azure.cosmos.implementation.guava25.collect.Interner<E>)
  - com.azure.cosmos.implementation.guava25.collect.Interners.<E>newStrongInterner()
  - com.azure.cosmos.implementation.guava25.collect.Interners.<E>newWeakInterner()
  - com.azure.cosmos.implementation.guava25.collect.Interners.InternerBuilder
  - com.azure.cosmos.implementation.guava25.collect.Interners.newBuilder()
  langs:
  - java
  name: Interners
  nameWithType: Interners
  fullName: com.azure.cosmos.implementation.guava25.collect.Interners
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Contains static methods pertaining to instances of <xref uid="com.azure.cosmos.implementation.guava25.collect.Interner" data-throw-if-not-resolved="false">Interner</xref>.
  syntax:
    content: public final class Interners
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.Interners.<E>asFunction(com.azure.cosmos.implementation.guava25.collect.Interner<E>)
  id: <E>asFunction(com.azure.cosmos.implementation.guava25.collect.Interner<E>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.Interners
  langs:
  - java
  name: <E>asFunction(Interner<E> interner)
  nameWithType: Interners.<E>asFunction(Interner<E> interner)
  fullName: com.azure.cosmos.implementation.guava25.collect.Interners.<E>asFunction(Interner<E> interner)
  overload: com.azure.cosmos.implementation.guava25.collect.Interners.asFunction*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a function that delegates to the <xref uid="com.azure.cosmos.implementation.guava25.collect.Interner.intern" data-throw-if-not-resolved="false">Interner#intern</xref> method of the given interner.
  syntax:
    content: public static Function<E,E> <E>asFunction(Interner<E> interner)
    parameters:
    - id: interner
      type: com.azure.cosmos.implementation.guava25.collect.Interner<E>
    return:
      type: com.azure.cosmos.implementation.guava25.base.Function<E,E>
- uid: com.azure.cosmos.implementation.guava25.collect.Interners.<E>newStrongInterner()
  id: <E>newStrongInterner()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.Interners
  langs:
  - java
  name: <E>newStrongInterner()
  nameWithType: Interners.<E>newStrongInterner()
  fullName: com.azure.cosmos.implementation.guava25.collect.Interners.<E>newStrongInterner()
  overload: com.azure.cosmos.implementation.guava25.collect.Interners.newStrongInterner*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a new thread-safe interner which retains a strong reference to each instance it has interned, thus preventing these instances from being garbage-collected. If this retention is acceptable, this implementation may perform better than <xref uid="com.azure.cosmos.implementation.guava25.collect.Interners.newWeakInterner" data-throw-if-not-resolved="false">#newWeakInterner</xref>.
  syntax:
    content: public static Interner<E> <E>newStrongInterner()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.Interner<E>
- uid: com.azure.cosmos.implementation.guava25.collect.Interners.<E>newWeakInterner()
  id: <E>newWeakInterner()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.Interners
  langs:
  - java
  name: <E>newWeakInterner()
  nameWithType: Interners.<E>newWeakInterner()
  fullName: com.azure.cosmos.implementation.guava25.collect.Interners.<E>newWeakInterner()
  overload: com.azure.cosmos.implementation.guava25.collect.Interners.newWeakInterner*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a new thread-safe interner which retains a weak reference to each instance it has interned, and so does not prevent these instances from being garbage-collected. This most likely does not perform as well as <xref uid="com.azure.cosmos.implementation.guava25.collect.Interners.newStrongInterner" data-throw-if-not-resolved="false">#newStrongInterner</xref>, but is the best alternative when the memory usage of that implementation is unacceptable.
  syntax:
    content: public static Interner<E> <E>newWeakInterner()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.Interner<E>
- uid: com.azure.cosmos.implementation.guava25.collect.Interners.Interners()
  id: Interners()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.Interners
  langs:
  - java
  name: Interners()
  nameWithType: Interners.Interners()
  fullName: com.azure.cosmos.implementation.guava25.collect.Interners.Interners()
  overload: com.azure.cosmos.implementation.guava25.collect.Interners.Interners*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: private Interners()
- uid: com.azure.cosmos.implementation.guava25.collect.Interners.newBuilder()
  id: newBuilder()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.Interners
  langs:
  - java
  name: newBuilder()
  nameWithType: Interners.newBuilder()
  fullName: com.azure.cosmos.implementation.guava25.collect.Interners.newBuilder()
  overload: com.azure.cosmos.implementation.guava25.collect.Interners.newBuilder*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a fresh <xref uid="" data-throw-if-not-resolved="false">InternerBuilder</xref> instance.
  syntax:
    content: public static Interners.InternerBuilder newBuilder()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.Interners.InternerBuilder
references:
- uid: com.azure.cosmos.implementation.guava25.collect.Interners.Interners*
  name: Interners
  nameWithType: Interners.Interners
  fullName: com.azure.cosmos.implementation.guava25.collect.Interners.Interners
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.Interners.InternerBuilder
  name: Interners.InternerBuilder
  nameWithType: Interners.InternerBuilder
  fullName: com.azure.cosmos.implementation.guava25.collect.Interners.InternerBuilder
- uid: com.azure.cosmos.implementation.guava25.collect.Interners.newBuilder*
  name: newBuilder
  nameWithType: Interners.newBuilder
  fullName: com.azure.cosmos.implementation.guava25.collect.Interners.newBuilder
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.Interner<E>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.Interner
    name: Interner
    fullName: com.azure.cosmos.implementation.guava25.collect.Interner
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.Interners.newStrongInterner*
  name: <E>newStrongInterner
  nameWithType: Interners.<E>newStrongInterner
  fullName: com.azure.cosmos.implementation.guava25.collect.Interners.<E>newStrongInterner
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.Interners.newWeakInterner*
  name: <E>newWeakInterner
  nameWithType: Interners.<E>newWeakInterner
  fullName: com.azure.cosmos.implementation.guava25.collect.Interners.<E>newWeakInterner
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.base.Function<E,E>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.base.Function
    name: Function
    fullName: com.azure.cosmos.implementation.guava25.base.Function
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: ','
    fullName: ','
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.Interners.asFunction*
  name: <E>asFunction
  nameWithType: Interners.<E>asFunction
  fullName: com.azure.cosmos.implementation.guava25.collect.Interners.<E>asFunction
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: E
  name: E
  nameWithType: E
  fullName: E
- uid: com.azure.cosmos.implementation.guava25.collect.Interner
  name: Interner
  nameWithType: Interner
  fullName: com.azure.cosmos.implementation.guava25.collect.Interner
- uid: com.azure.cosmos.implementation.guava25.base.Function
  name: Function
  nameWithType: Function
  fullName: com.azure.cosmos.implementation.guava25.base.Function
- uid: E,E
  name: E,E
  nameWithType: E,E
  fullName: E,E
