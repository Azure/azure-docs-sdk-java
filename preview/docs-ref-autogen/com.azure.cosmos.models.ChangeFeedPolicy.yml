### YamlMime:JavaType
uid: "com.azure.cosmos.models.ChangeFeedPolicy"
fullName: "com.azure.cosmos.models.ChangeFeedPolicy"
name: "ChangeFeedPolicy"
nameWithType: "ChangeFeedPolicy"
summary: "Represents the change feed policy configuration for the container in the Azure Cosmos DB service.\n\nThe example below creates a new container with a change feed policy for full fidelity change feed with a retention window of 8 minutes - so intermediary snapshots of changes as well as deleted documents would be available for processing for 8 minutes before they vanish. Processing the change feed with full fidelity mode will only be able within this retention window - if you attempt to process a change feed after more than the retention window (8 minutes in this sample) an error (Status Code 400) will be returned. It would still be possible to process changes using Incremental mode even when configuring a full fidelity change feed policy with retention window on the container and when using Incremental mode it doesn't matter whether your are out of the retention window or not.\n\n```java\nCosmosContainerProperties containerProperties =\n      new CosmosContainerProperties(\"ContainerName\", \"/somePartitionKeyProperty\");\n containerProperties.setChangeFeedPolicy(ChangeFeedPolicy.createFullFidelityPolicy(8));\n\n CosmosAsyncDatabase database = client.createDatabase(databaseProperties).block().getDatabase();\n CosmosAsyncContainer container = database.createContainer(containerProperties).block().getContainer();\n```\n\nThe example below creates a new container with a change feed policy for incremental change feed. Processing the change feed with full fidelity mode will not be possible for this container. It would still be possible to process changes using Incremental mode. The Incremental change feed policy is also the default that is used when not explicitly specifying a change feed policy.\n\n```java\nCosmosContainerProperties containerProperties =\n      new CosmosContainerProperties(\"ContainerName\", \"/somePartitionKeyProperty\");\n containerProperties.setChangeFeedPolicy(ChangeFeedPolicy.createIncrementalPolicy());\n\n CosmosAsyncDatabase database = client.createDatabase(databaseProperties).block().getDatabase();\n CosmosAsyncContainer container = database.createContainer(containerProperties).block().getContainer();\n```"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ChangeFeedPolicy"
methods:
- "com.azure.cosmos.models.ChangeFeedPolicy.createFullFidelityPolicy(java.time.Duration)"
- "com.azure.cosmos.models.ChangeFeedPolicy.createIncrementalPolicy()"
- "com.azure.cosmos.models.ChangeFeedPolicy.getFullFidelityRetentionDuration()"
type: "class"
metadata: {}
package: "com.azure.cosmos.models"
artifact: com.azure:azure-cosmos:4.15.0-beta.2
