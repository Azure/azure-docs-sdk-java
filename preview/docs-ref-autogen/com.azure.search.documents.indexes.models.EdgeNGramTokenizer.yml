### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer"
fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer"
name: "EdgeNGramTokenizer"
nameWithType: "EdgeNGramTokenizer"
summary: "Tokenizes the input from an edge into n-grams of the given size(s)."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizer?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizer?alt=com.azure.search.documents.indexes.models.LexicalTokenizer&text=LexicalTokenizer\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizer.fromJson(com.azure.json.JsonReader)?alt=com.azure.search.documents.indexes.models.LexicalTokenizer.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizer.getName()?alt=com.azure.search.documents.indexes.models.LexicalTokenizer.getName&text=getName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizer.getOdataType()?alt=com.azure.search.documents.indexes.models.LexicalTokenizer.getOdataType&text=getOdataType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizer.toJson(com.azure.json.JsonWriter)?alt=com.azure.search.documents.indexes.models.LexicalTokenizer.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **EdgeNGramTokenizer**</br> extends <xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizer?alt=com.azure.search.documents.indexes.models.LexicalTokenizer&text=LexicalTokenizer\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.EdgeNGramTokenizer(java.lang.String)"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.EdgeNGramTokenizer(String name)"
  name: "EdgeNGramTokenizer(String name)"
  nameWithType: "EdgeNGramTokenizer.EdgeNGramTokenizer(String name)"
  summary: "Creates an instance of Edge<wbr>NGram<wbr>Tokenizer class."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public EdgeNGramTokenizer(String name)"
  desc: "Creates an instance of EdgeNGramTokenizer class."
methods:
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "EdgeNGramTokenizer.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Edge<wbr>NGram<wbr>Tokenizer from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static EdgeNGramTokenizer fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of EdgeNGramTokenizer from the JsonReader."
  returns:
    description: "An instance of EdgeNGramTokenizer if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.search.documents.indexes.models.EdgeNGramTokenizer?alt=com.azure.search.documents.indexes.models.EdgeNGramTokenizer&text=EdgeNGramTokenizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.getMaxGram()"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.getMaxGram()"
  name: "getMaxGram()"
  nameWithType: "EdgeNGramTokenizer.getMaxGram()"
  summary: "Get the max<wbr>Gram property: The maximum n-gram length."
  syntax: "public Integer getMaxGram()"
  desc: "Get the maxGram property: The maximum n-gram length. Default is 2. Maximum is 300."
  returns:
    description: "the maxGram value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.getMinGram()"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.getMinGram()"
  name: "getMinGram()"
  nameWithType: "EdgeNGramTokenizer.getMinGram()"
  summary: "Get the min<wbr>Gram property: The minimum n-gram length."
  syntax: "public Integer getMinGram()"
  desc: "Get the minGram property: The minimum n-gram length. Default is 1. Maximum is 300. Must be less than the value of maxGram."
  returns:
    description: "the minGram value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.getOdataType()"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.getOdataType()"
  name: "getOdataType()"
  nameWithType: "EdgeNGramTokenizer.getOdataType()"
  summary: "Get the odata<wbr>Type property: A URI fragment specifying the type of tokenizer."
  overridden: "com.azure.search.documents.indexes.models.LexicalTokenizer.getOdataType()"
  syntax: "public String getOdataType()"
  desc: "Get the odataType property: A URI fragment specifying the type of tokenizer."
  returns:
    description: "the odataType value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.getTokenChars()"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.getTokenChars()"
  name: "getTokenChars()"
  nameWithType: "EdgeNGramTokenizer.getTokenChars()"
  summary: "Get the token<wbr>Chars property: Character classes to keep in the tokens."
  syntax: "public List<TokenCharacterKind> getTokenChars()"
  desc: "Get the tokenChars property: Character classes to keep in the tokens."
  returns:
    description: "the tokenChars value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.search.documents.indexes.models.TokenCharacterKind?alt=com.azure.search.documents.indexes.models.TokenCharacterKind&text=TokenCharacterKind\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.setMaxGram(java.lang.Integer)"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.setMaxGram(Integer maxGram)"
  name: "setMaxGram(Integer maxGram)"
  nameWithType: "EdgeNGramTokenizer.setMaxGram(Integer maxGram)"
  summary: "Set the max<wbr>Gram property: The maximum n-gram length."
  parameters:
  - description: "the maxGram value to set."
    name: "maxGram"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public EdgeNGramTokenizer setMaxGram(Integer maxGram)"
  desc: "Set the maxGram property: The maximum n-gram length. Default is 2. Maximum is 300."
  returns:
    description: "the EdgeNGramTokenizer object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.EdgeNGramTokenizer?alt=com.azure.search.documents.indexes.models.EdgeNGramTokenizer&text=EdgeNGramTokenizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.setMinGram(java.lang.Integer)"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.setMinGram(Integer minGram)"
  name: "setMinGram(Integer minGram)"
  nameWithType: "EdgeNGramTokenizer.setMinGram(Integer minGram)"
  summary: "Set the min<wbr>Gram property: The minimum n-gram length."
  parameters:
  - description: "the minGram value to set."
    name: "minGram"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public EdgeNGramTokenizer setMinGram(Integer minGram)"
  desc: "Set the minGram property: The minimum n-gram length. Default is 1. Maximum is 300. Must be less than the value of maxGram."
  returns:
    description: "the EdgeNGramTokenizer object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.EdgeNGramTokenizer?alt=com.azure.search.documents.indexes.models.EdgeNGramTokenizer&text=EdgeNGramTokenizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.setTokenChars(com.azure.search.documents.indexes.models.TokenCharacterKind...)"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.setTokenChars(TokenCharacterKind[] tokenChars)"
  name: "setTokenChars(TokenCharacterKind[] tokenChars)"
  nameWithType: "EdgeNGramTokenizer.setTokenChars(TokenCharacterKind[] tokenChars)"
  summary: "Set the token<wbr>Chars property: Character classes to keep in the tokens."
  parameters:
  - description: "the tokenChars value to set."
    name: "tokenChars"
    type: "<xref href=\"com.azure.search.documents.indexes.models.TokenCharacterKind?alt=com.azure.search.documents.indexes.models.TokenCharacterKind&text=TokenCharacterKind\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public EdgeNGramTokenizer setTokenChars(TokenCharacterKind[] tokenChars)"
  desc: "Set the tokenChars property: Character classes to keep in the tokens."
  returns:
    description: "the EdgeNGramTokenizer object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.EdgeNGramTokenizer?alt=com.azure.search.documents.indexes.models.EdgeNGramTokenizer&text=EdgeNGramTokenizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.setTokenChars(java.util.List<com.azure.search.documents.indexes.models.TokenCharacterKind>)"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.setTokenChars(List<TokenCharacterKind> tokenChars)"
  name: "setTokenChars(List<TokenCharacterKind> tokenChars)"
  nameWithType: "EdgeNGramTokenizer.setTokenChars(List<TokenCharacterKind> tokenChars)"
  summary: "Set the token<wbr>Chars property: Character classes to keep in the tokens."
  parameters:
  - description: "the tokenChars value to set."
    name: "tokenChars"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.search.documents.indexes.models.TokenCharacterKind?alt=com.azure.search.documents.indexes.models.TokenCharacterKind&text=TokenCharacterKind\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EdgeNGramTokenizer setTokenChars(List<TokenCharacterKind> tokenChars)"
  desc: "Set the tokenChars property: Character classes to keep in the tokens."
  returns:
    description: "the EdgeNGramTokenizer object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.EdgeNGramTokenizer?alt=com.azure.search.documents.indexes.models.EdgeNGramTokenizer&text=EdgeNGramTokenizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "EdgeNGramTokenizer.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.search.documents.indexes.models.LexicalTokenizer.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Tokenizes the input from an edge into n-grams of the given size(s). This tokenizer is implemented using Apache Lucene."
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.8.0-beta.1
