### YamlMime:ManagedReference
items:
- uid: org.slf4j.helpers.NOPLogger
  id: NOPLogger
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers
  children:
  - org.slf4j.helpers.NOPLogger.NOPLogger()
  - org.slf4j.helpers.NOPLogger.NOP_LOGGER
  - org.slf4j.helpers.NOPLogger.debug(java.lang.String)
  - org.slf4j.helpers.NOPLogger.debug(java.lang.String,java.lang.Object)
  - org.slf4j.helpers.NOPLogger.debug(java.lang.String,java.lang.Object,java.lang.Object)
  - org.slf4j.helpers.NOPLogger.debug(java.lang.String,java.lang.Object...)
  - org.slf4j.helpers.NOPLogger.debug(java.lang.String,java.lang.Throwable)
  - org.slf4j.helpers.NOPLogger.error(java.lang.String)
  - org.slf4j.helpers.NOPLogger.error(java.lang.String,java.lang.Object)
  - org.slf4j.helpers.NOPLogger.error(java.lang.String,java.lang.Object,java.lang.Object)
  - org.slf4j.helpers.NOPLogger.error(java.lang.String,java.lang.Object...)
  - org.slf4j.helpers.NOPLogger.error(java.lang.String,java.lang.Throwable)
  - org.slf4j.helpers.NOPLogger.getName()
  - org.slf4j.helpers.NOPLogger.info(java.lang.String)
  - org.slf4j.helpers.NOPLogger.info(java.lang.String,java.lang.Object)
  - org.slf4j.helpers.NOPLogger.info(java.lang.String,java.lang.Object,java.lang.Object)
  - org.slf4j.helpers.NOPLogger.info(java.lang.String,java.lang.Object...)
  - org.slf4j.helpers.NOPLogger.info(java.lang.String,java.lang.Throwable)
  - org.slf4j.helpers.NOPLogger.isDebugEnabled()
  - org.slf4j.helpers.NOPLogger.isErrorEnabled()
  - org.slf4j.helpers.NOPLogger.isInfoEnabled()
  - org.slf4j.helpers.NOPLogger.isTraceEnabled()
  - org.slf4j.helpers.NOPLogger.isWarnEnabled()
  - org.slf4j.helpers.NOPLogger.trace(java.lang.String)
  - org.slf4j.helpers.NOPLogger.trace(java.lang.String,java.lang.Object)
  - org.slf4j.helpers.NOPLogger.trace(java.lang.String,java.lang.Object,java.lang.Object)
  - org.slf4j.helpers.NOPLogger.trace(java.lang.String,java.lang.Object...)
  - org.slf4j.helpers.NOPLogger.trace(java.lang.String,java.lang.Throwable)
  - org.slf4j.helpers.NOPLogger.warn(java.lang.String)
  - org.slf4j.helpers.NOPLogger.warn(java.lang.String,java.lang.Object)
  - org.slf4j.helpers.NOPLogger.warn(java.lang.String,java.lang.Object,java.lang.Object)
  - org.slf4j.helpers.NOPLogger.warn(java.lang.String,java.lang.Object...)
  - org.slf4j.helpers.NOPLogger.warn(java.lang.String,java.lang.Throwable)
  langs:
  - java
  name: NOPLogger
  nameWithType: NOPLogger
  fullName: org.slf4j.helpers.NOPLogger
  type: Class
  package: org.slf4j.helpers
  summary: A direct NOP (no operation) implementation of <xref uid="org.slf4j.Logger" data-throw-if-not-resolved="false">Logger</xref>.
  syntax:
    content: public class NOPLogger extends MarkerIgnoringBase
  inheritance:
  - java.lang.Object
  - org.slf4j.helpers.NamedLoggerBase
  - org.slf4j.helpers.MarkerIgnoringBase
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String)
  - org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  - org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  - org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String)
  - org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  - org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  - org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String)
  - org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  - org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  - org.slf4j.helpers.MarkerIgnoringBase.isDebugEnabled(org.slf4j.Marker)
  - org.slf4j.helpers.MarkerIgnoringBase.isErrorEnabled(org.slf4j.Marker)
  - org.slf4j.helpers.MarkerIgnoringBase.isInfoEnabled(org.slf4j.Marker)
  - org.slf4j.helpers.MarkerIgnoringBase.isTraceEnabled(org.slf4j.Marker)
  - org.slf4j.helpers.MarkerIgnoringBase.isWarnEnabled(org.slf4j.Marker)
  - org.slf4j.helpers.MarkerIgnoringBase.toString()
  - org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String)
  - org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  - org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  - org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String)
  - org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  - org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  - org.slf4j.helpers.NamedLoggerBase.getName()
  - org.slf4j.helpers.NamedLoggerBase.readResolve()
- uid: org.slf4j.helpers.NOPLogger.NOPLogger()
  id: NOPLogger()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: NOPLogger()
  nameWithType: NOPLogger.NOPLogger()
  fullName: org.slf4j.helpers.NOPLogger.NOPLogger()
  overload: org.slf4j.helpers.NOPLogger.NOPLogger*
  type: Constructor
  package: org.slf4j.helpers
  summary: There is no point in creating multiple instances of NOPLogger, except by derived classes, hence the protected access for the constructor.
  syntax:
    content: protected NOPLogger()
- uid: org.slf4j.helpers.NOPLogger.NOP_LOGGER
  id: NOP_LOGGER
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: NOP_LOGGER
  nameWithType: NOPLogger.NOP_LOGGER
  fullName: org.slf4j.helpers.NOPLogger.NOP_LOGGER
  type: Field
  package: org.slf4j.helpers
  summary: The unique instance of NOPLogger.
  syntax:
    content: public static final NOPLogger NOP_LOGGER
    return:
      type: org.slf4j.helpers.NOPLogger
- uid: org.slf4j.helpers.NOPLogger.debug(java.lang.String)
  id: debug(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: debug(String msg)
  nameWithType: NOPLogger.debug(String msg)
  fullName: org.slf4j.helpers.NOPLogger.debug(String msg)
  overload: org.slf4j.helpers.NOPLogger.debug*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void debug(String msg)
    parameters:
    - id: msg
      type: java.lang.String
- uid: org.slf4j.helpers.NOPLogger.debug(java.lang.String,java.lang.Object)
  id: debug(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: debug(String format, Object arg)
  nameWithType: NOPLogger.debug(String format, Object arg)
  fullName: org.slf4j.helpers.NOPLogger.debug(String format, Object arg)
  overload: org.slf4j.helpers.NOPLogger.debug*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void debug(String format, Object arg)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg
      type: java.lang.Object
- uid: org.slf4j.helpers.NOPLogger.debug(java.lang.String,java.lang.Object,java.lang.Object)
  id: debug(java.lang.String,java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: debug(String format, Object arg1, Object arg2)
  nameWithType: NOPLogger.debug(String format, Object arg1, Object arg2)
  fullName: org.slf4j.helpers.NOPLogger.debug(String format, Object arg1, Object arg2)
  overload: org.slf4j.helpers.NOPLogger.debug*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void debug(String format, Object arg1, Object arg2)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg1
      type: java.lang.Object
    - id: arg2
      type: java.lang.Object
- uid: org.slf4j.helpers.NOPLogger.debug(java.lang.String,java.lang.Object...)
  id: debug(java.lang.String,java.lang.Object...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: debug(String format, Object[] argArray)
  nameWithType: NOPLogger.debug(String format, Object[] argArray)
  fullName: org.slf4j.helpers.NOPLogger.debug(String format, Object[] argArray)
  overload: org.slf4j.helpers.NOPLogger.debug*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void debug(String format, Object[] argArray)
    parameters:
    - id: format
      type: java.lang.String
    - id: argArray
      type: java.lang.Object[]
- uid: org.slf4j.helpers.NOPLogger.debug(java.lang.String,java.lang.Throwable)
  id: debug(java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: debug(String msg, Throwable t)
  nameWithType: NOPLogger.debug(String msg, Throwable t)
  fullName: org.slf4j.helpers.NOPLogger.debug(String msg, Throwable t)
  overload: org.slf4j.helpers.NOPLogger.debug*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void debug(String msg, Throwable t)
    parameters:
    - id: msg
      type: java.lang.String
    - id: t
      type: java.lang.Throwable
- uid: org.slf4j.helpers.NOPLogger.error(java.lang.String)
  id: error(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: error(String msg)
  nameWithType: NOPLogger.error(String msg)
  fullName: org.slf4j.helpers.NOPLogger.error(String msg)
  overload: org.slf4j.helpers.NOPLogger.error*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void error(String msg)
    parameters:
    - id: msg
      type: java.lang.String
- uid: org.slf4j.helpers.NOPLogger.error(java.lang.String,java.lang.Object)
  id: error(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: error(String format, Object arg1)
  nameWithType: NOPLogger.error(String format, Object arg1)
  fullName: org.slf4j.helpers.NOPLogger.error(String format, Object arg1)
  overload: org.slf4j.helpers.NOPLogger.error*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void error(String format, Object arg1)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg1
      type: java.lang.Object
- uid: org.slf4j.helpers.NOPLogger.error(java.lang.String,java.lang.Object,java.lang.Object)
  id: error(java.lang.String,java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: error(String format, Object arg1, Object arg2)
  nameWithType: NOPLogger.error(String format, Object arg1, Object arg2)
  fullName: org.slf4j.helpers.NOPLogger.error(String format, Object arg1, Object arg2)
  overload: org.slf4j.helpers.NOPLogger.error*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void error(String format, Object arg1, Object arg2)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg1
      type: java.lang.Object
    - id: arg2
      type: java.lang.Object
- uid: org.slf4j.helpers.NOPLogger.error(java.lang.String,java.lang.Object...)
  id: error(java.lang.String,java.lang.Object...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: error(String format, Object[] argArray)
  nameWithType: NOPLogger.error(String format, Object[] argArray)
  fullName: org.slf4j.helpers.NOPLogger.error(String format, Object[] argArray)
  overload: org.slf4j.helpers.NOPLogger.error*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void error(String format, Object[] argArray)
    parameters:
    - id: format
      type: java.lang.String
    - id: argArray
      type: java.lang.Object[]
- uid: org.slf4j.helpers.NOPLogger.error(java.lang.String,java.lang.Throwable)
  id: error(java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: error(String msg, Throwable t)
  nameWithType: NOPLogger.error(String msg, Throwable t)
  fullName: org.slf4j.helpers.NOPLogger.error(String msg, Throwable t)
  overload: org.slf4j.helpers.NOPLogger.error*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void error(String msg, Throwable t)
    parameters:
    - id: msg
      type: java.lang.String
    - id: t
      type: java.lang.Throwable
- uid: org.slf4j.helpers.NOPLogger.getName()
  id: getName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: getName()
  nameWithType: NOPLogger.getName()
  fullName: org.slf4j.helpers.NOPLogger.getName()
  overload: org.slf4j.helpers.NOPLogger.getName*
  type: Method
  package: org.slf4j.helpers
  summary: Always returns the string value "NOP".
  syntax:
    content: public String getName()
    return:
      type: java.lang.String
- uid: org.slf4j.helpers.NOPLogger.info(java.lang.String)
  id: info(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: info(String msg)
  nameWithType: NOPLogger.info(String msg)
  fullName: org.slf4j.helpers.NOPLogger.info(String msg)
  overload: org.slf4j.helpers.NOPLogger.info*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void info(String msg)
    parameters:
    - id: msg
      type: java.lang.String
- uid: org.slf4j.helpers.NOPLogger.info(java.lang.String,java.lang.Object)
  id: info(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: info(String format, Object arg1)
  nameWithType: NOPLogger.info(String format, Object arg1)
  fullName: org.slf4j.helpers.NOPLogger.info(String format, Object arg1)
  overload: org.slf4j.helpers.NOPLogger.info*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void info(String format, Object arg1)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg1
      type: java.lang.Object
- uid: org.slf4j.helpers.NOPLogger.info(java.lang.String,java.lang.Object,java.lang.Object)
  id: info(java.lang.String,java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: info(String format, Object arg1, Object arg2)
  nameWithType: NOPLogger.info(String format, Object arg1, Object arg2)
  fullName: org.slf4j.helpers.NOPLogger.info(String format, Object arg1, Object arg2)
  overload: org.slf4j.helpers.NOPLogger.info*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void info(String format, Object arg1, Object arg2)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg1
      type: java.lang.Object
    - id: arg2
      type: java.lang.Object
- uid: org.slf4j.helpers.NOPLogger.info(java.lang.String,java.lang.Object...)
  id: info(java.lang.String,java.lang.Object...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: info(String format, Object[] argArray)
  nameWithType: NOPLogger.info(String format, Object[] argArray)
  fullName: org.slf4j.helpers.NOPLogger.info(String format, Object[] argArray)
  overload: org.slf4j.helpers.NOPLogger.info*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void info(String format, Object[] argArray)
    parameters:
    - id: format
      type: java.lang.String
    - id: argArray
      type: java.lang.Object[]
- uid: org.slf4j.helpers.NOPLogger.info(java.lang.String,java.lang.Throwable)
  id: info(java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: info(String msg, Throwable t)
  nameWithType: NOPLogger.info(String msg, Throwable t)
  fullName: org.slf4j.helpers.NOPLogger.info(String msg, Throwable t)
  overload: org.slf4j.helpers.NOPLogger.info*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void info(String msg, Throwable t)
    parameters:
    - id: msg
      type: java.lang.String
    - id: t
      type: java.lang.Throwable
- uid: org.slf4j.helpers.NOPLogger.isDebugEnabled()
  id: isDebugEnabled()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: isDebugEnabled()
  nameWithType: NOPLogger.isDebugEnabled()
  fullName: org.slf4j.helpers.NOPLogger.isDebugEnabled()
  overload: org.slf4j.helpers.NOPLogger.isDebugEnabled*
  type: Method
  package: org.slf4j.helpers
  summary: Always returns false.
  syntax:
    content: public final boolean isDebugEnabled()
    return:
      type: boolean
      description: always false
- uid: org.slf4j.helpers.NOPLogger.isErrorEnabled()
  id: isErrorEnabled()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: isErrorEnabled()
  nameWithType: NOPLogger.isErrorEnabled()
  fullName: org.slf4j.helpers.NOPLogger.isErrorEnabled()
  overload: org.slf4j.helpers.NOPLogger.isErrorEnabled*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final boolean isErrorEnabled()
    return:
      type: boolean
- uid: org.slf4j.helpers.NOPLogger.isInfoEnabled()
  id: isInfoEnabled()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: isInfoEnabled()
  nameWithType: NOPLogger.isInfoEnabled()
  fullName: org.slf4j.helpers.NOPLogger.isInfoEnabled()
  overload: org.slf4j.helpers.NOPLogger.isInfoEnabled*
  type: Method
  package: org.slf4j.helpers
  summary: Always returns false.
  syntax:
    content: public final boolean isInfoEnabled()
    return:
      type: boolean
      description: always false
- uid: org.slf4j.helpers.NOPLogger.isTraceEnabled()
  id: isTraceEnabled()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: isTraceEnabled()
  nameWithType: NOPLogger.isTraceEnabled()
  fullName: org.slf4j.helpers.NOPLogger.isTraceEnabled()
  overload: org.slf4j.helpers.NOPLogger.isTraceEnabled*
  type: Method
  package: org.slf4j.helpers
  summary: Always returns false.
  syntax:
    content: public final boolean isTraceEnabled()
    return:
      type: boolean
      description: always false
- uid: org.slf4j.helpers.NOPLogger.isWarnEnabled()
  id: isWarnEnabled()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: isWarnEnabled()
  nameWithType: NOPLogger.isWarnEnabled()
  fullName: org.slf4j.helpers.NOPLogger.isWarnEnabled()
  overload: org.slf4j.helpers.NOPLogger.isWarnEnabled*
  type: Method
  package: org.slf4j.helpers
  summary: Always returns false.
  syntax:
    content: public final boolean isWarnEnabled()
    return:
      type: boolean
      description: always false
- uid: org.slf4j.helpers.NOPLogger.trace(java.lang.String)
  id: trace(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: trace(String msg)
  nameWithType: NOPLogger.trace(String msg)
  fullName: org.slf4j.helpers.NOPLogger.trace(String msg)
  overload: org.slf4j.helpers.NOPLogger.trace*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void trace(String msg)
    parameters:
    - id: msg
      type: java.lang.String
- uid: org.slf4j.helpers.NOPLogger.trace(java.lang.String,java.lang.Object)
  id: trace(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: trace(String format, Object arg)
  nameWithType: NOPLogger.trace(String format, Object arg)
  fullName: org.slf4j.helpers.NOPLogger.trace(String format, Object arg)
  overload: org.slf4j.helpers.NOPLogger.trace*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void trace(String format, Object arg)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg
      type: java.lang.Object
- uid: org.slf4j.helpers.NOPLogger.trace(java.lang.String,java.lang.Object,java.lang.Object)
  id: trace(java.lang.String,java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: trace(String format, Object arg1, Object arg2)
  nameWithType: NOPLogger.trace(String format, Object arg1, Object arg2)
  fullName: org.slf4j.helpers.NOPLogger.trace(String format, Object arg1, Object arg2)
  overload: org.slf4j.helpers.NOPLogger.trace*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void trace(String format, Object arg1, Object arg2)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg1
      type: java.lang.Object
    - id: arg2
      type: java.lang.Object
- uid: org.slf4j.helpers.NOPLogger.trace(java.lang.String,java.lang.Object...)
  id: trace(java.lang.String,java.lang.Object...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: trace(String format, Object[] argArray)
  nameWithType: NOPLogger.trace(String format, Object[] argArray)
  fullName: org.slf4j.helpers.NOPLogger.trace(String format, Object[] argArray)
  overload: org.slf4j.helpers.NOPLogger.trace*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void trace(String format, Object[] argArray)
    parameters:
    - id: format
      type: java.lang.String
    - id: argArray
      type: java.lang.Object[]
- uid: org.slf4j.helpers.NOPLogger.trace(java.lang.String,java.lang.Throwable)
  id: trace(java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: trace(String msg, Throwable t)
  nameWithType: NOPLogger.trace(String msg, Throwable t)
  fullName: org.slf4j.helpers.NOPLogger.trace(String msg, Throwable t)
  overload: org.slf4j.helpers.NOPLogger.trace*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void trace(String msg, Throwable t)
    parameters:
    - id: msg
      type: java.lang.String
    - id: t
      type: java.lang.Throwable
- uid: org.slf4j.helpers.NOPLogger.warn(java.lang.String)
  id: warn(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: warn(String msg)
  nameWithType: NOPLogger.warn(String msg)
  fullName: org.slf4j.helpers.NOPLogger.warn(String msg)
  overload: org.slf4j.helpers.NOPLogger.warn*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void warn(String msg)
    parameters:
    - id: msg
      type: java.lang.String
- uid: org.slf4j.helpers.NOPLogger.warn(java.lang.String,java.lang.Object)
  id: warn(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: warn(String format, Object arg1)
  nameWithType: NOPLogger.warn(String format, Object arg1)
  fullName: org.slf4j.helpers.NOPLogger.warn(String format, Object arg1)
  overload: org.slf4j.helpers.NOPLogger.warn*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void warn(String format, Object arg1)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg1
      type: java.lang.Object
- uid: org.slf4j.helpers.NOPLogger.warn(java.lang.String,java.lang.Object,java.lang.Object)
  id: warn(java.lang.String,java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: warn(String format, Object arg1, Object arg2)
  nameWithType: NOPLogger.warn(String format, Object arg1, Object arg2)
  fullName: org.slf4j.helpers.NOPLogger.warn(String format, Object arg1, Object arg2)
  overload: org.slf4j.helpers.NOPLogger.warn*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void warn(String format, Object arg1, Object arg2)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg1
      type: java.lang.Object
    - id: arg2
      type: java.lang.Object
- uid: org.slf4j.helpers.NOPLogger.warn(java.lang.String,java.lang.Object...)
  id: warn(java.lang.String,java.lang.Object...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: warn(String format, Object[] argArray)
  nameWithType: NOPLogger.warn(String format, Object[] argArray)
  fullName: org.slf4j.helpers.NOPLogger.warn(String format, Object[] argArray)
  overload: org.slf4j.helpers.NOPLogger.warn*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void warn(String format, Object[] argArray)
    parameters:
    - id: format
      type: java.lang.String
    - id: argArray
      type: java.lang.Object[]
- uid: org.slf4j.helpers.NOPLogger.warn(java.lang.String,java.lang.Throwable)
  id: warn(java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.NOPLogger
  langs:
  - java
  name: warn(String msg, Throwable t)
  nameWithType: NOPLogger.warn(String msg, Throwable t)
  fullName: org.slf4j.helpers.NOPLogger.warn(String msg, Throwable t)
  overload: org.slf4j.helpers.NOPLogger.warn*
  type: Method
  package: org.slf4j.helpers
  summary: A NOP implementation.
  syntax:
    content: public final void warn(String msg, Throwable t)
    parameters:
    - id: msg
      type: java.lang.String
    - id: t
      type: java.lang.Throwable
references:
- uid: org.slf4j.helpers.NOPLogger.NOPLogger*
  name: NOPLogger
  nameWithType: NOPLogger.NOPLogger
  fullName: org.slf4j.helpers.NOPLogger.NOPLogger
  package: org.slf4j.helpers
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.slf4j.helpers.NOPLogger.getName*
  name: getName
  nameWithType: NOPLogger.getName
  fullName: org.slf4j.helpers.NOPLogger.getName
  package: org.slf4j.helpers
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.slf4j.helpers.NOPLogger.isTraceEnabled*
  name: isTraceEnabled
  nameWithType: NOPLogger.isTraceEnabled
  fullName: org.slf4j.helpers.NOPLogger.isTraceEnabled
  package: org.slf4j.helpers
- uid: org.slf4j.helpers.NOPLogger.trace*
  name: trace
  nameWithType: NOPLogger.trace
  fullName: org.slf4j.helpers.NOPLogger.trace
  package: org.slf4j.helpers
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: java.lang.Object[]
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '[]'
    fullName: '[]'
- uid: java.lang.Throwable
  spec.java:
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
- uid: org.slf4j.helpers.NOPLogger.isDebugEnabled*
  name: isDebugEnabled
  nameWithType: NOPLogger.isDebugEnabled
  fullName: org.slf4j.helpers.NOPLogger.isDebugEnabled
  package: org.slf4j.helpers
- uid: org.slf4j.helpers.NOPLogger.debug*
  name: debug
  nameWithType: NOPLogger.debug
  fullName: org.slf4j.helpers.NOPLogger.debug
  package: org.slf4j.helpers
- uid: org.slf4j.helpers.NOPLogger.isInfoEnabled*
  name: isInfoEnabled
  nameWithType: NOPLogger.isInfoEnabled
  fullName: org.slf4j.helpers.NOPLogger.isInfoEnabled
  package: org.slf4j.helpers
- uid: org.slf4j.helpers.NOPLogger.info*
  name: info
  nameWithType: NOPLogger.info
  fullName: org.slf4j.helpers.NOPLogger.info
  package: org.slf4j.helpers
- uid: org.slf4j.helpers.NOPLogger.isWarnEnabled*
  name: isWarnEnabled
  nameWithType: NOPLogger.isWarnEnabled
  fullName: org.slf4j.helpers.NOPLogger.isWarnEnabled
  package: org.slf4j.helpers
- uid: org.slf4j.helpers.NOPLogger.warn*
  name: warn
  nameWithType: NOPLogger.warn
  fullName: org.slf4j.helpers.NOPLogger.warn
  package: org.slf4j.helpers
- uid: org.slf4j.helpers.NOPLogger.isErrorEnabled*
  name: isErrorEnabled
  nameWithType: NOPLogger.isErrorEnabled
  fullName: org.slf4j.helpers.NOPLogger.isErrorEnabled
  package: org.slf4j.helpers
- uid: org.slf4j.helpers.NOPLogger.error*
  name: error
  nameWithType: NOPLogger.error
  fullName: org.slf4j.helpers.NOPLogger.error
  package: org.slf4j.helpers
- uid: org.slf4j.helpers.MarkerIgnoringBase
  name: MarkerIgnoringBase
  nameWithType: MarkerIgnoringBase
  fullName: org.slf4j.helpers.MarkerIgnoringBase
- uid: org.slf4j.helpers.MarkerIgnoringBase.isDebugEnabled(org.slf4j.Marker)
  name: MarkerIgnoringBase.isDebugEnabled(Marker)
  nameWithType: MarkerIgnoringBase.isDebugEnabled(Marker)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.isDebugEnabled(org.slf4j.Marker)
- uid: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object)
  name: MarkerIgnoringBase.info(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.info(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object)
- uid: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  name: MarkerIgnoringBase.info(Marker,String,Throwable)
  nameWithType: MarkerIgnoringBase.info(Marker,String,Throwable)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  name: MarkerIgnoringBase.trace(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.trace(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object...)
- uid: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object)
  name: MarkerIgnoringBase.error(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.error(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  name: MarkerIgnoringBase.info(Marker,String,Object,Object)
  nameWithType: MarkerIgnoringBase.info(Marker,String,Object,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
- uid: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  name: MarkerIgnoringBase.error(Marker,String,Throwable)
  nameWithType: MarkerIgnoringBase.error(Marker,String,Throwable)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
- uid: org.slf4j.helpers.NamedLoggerBase.getName()
  name: NamedLoggerBase.getName()
  nameWithType: NamedLoggerBase.getName()
  fullName: org.slf4j.helpers.NamedLoggerBase.getName()
- uid: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String)
  name: MarkerIgnoringBase.info(Marker,String)
  nameWithType: MarkerIgnoringBase.info(Marker,String)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String)
- uid: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String)
  name: MarkerIgnoringBase.error(Marker,String)
  nameWithType: MarkerIgnoringBase.error(Marker,String)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String)
- uid: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  name: MarkerIgnoringBase.trace(Marker,String,Throwable)
  nameWithType: MarkerIgnoringBase.trace(Marker,String,Throwable)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
- uid: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  name: MarkerIgnoringBase.info(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.info(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object...)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: org.slf4j.helpers.MarkerIgnoringBase.isErrorEnabled(org.slf4j.Marker)
  name: MarkerIgnoringBase.isErrorEnabled(Marker)
  nameWithType: MarkerIgnoringBase.isErrorEnabled(Marker)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.isErrorEnabled(org.slf4j.Marker)
- uid: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  name: MarkerIgnoringBase.warn(Marker,String,Throwable)
  nameWithType: MarkerIgnoringBase.warn(Marker,String,Throwable)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
- uid: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  name: MarkerIgnoringBase.trace(Marker,String,Object,Object)
  nameWithType: MarkerIgnoringBase.trace(Marker,String,Object,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  name: MarkerIgnoringBase.debug(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.debug(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object...)
- uid: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String)
  name: MarkerIgnoringBase.debug(Marker,String)
  nameWithType: MarkerIgnoringBase.debug(Marker,String)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: org.slf4j.helpers.MarkerIgnoringBase.isInfoEnabled(org.slf4j.Marker)
  name: MarkerIgnoringBase.isInfoEnabled(Marker)
  nameWithType: MarkerIgnoringBase.isInfoEnabled(Marker)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.isInfoEnabled(org.slf4j.Marker)
- uid: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  name: MarkerIgnoringBase.error(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.error(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object...)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object)
  name: MarkerIgnoringBase.warn(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.warn(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object)
- uid: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String)
  name: MarkerIgnoringBase.warn(Marker,String)
  nameWithType: MarkerIgnoringBase.warn(Marker,String)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  name: MarkerIgnoringBase.warn(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.warn(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object...)
- uid: org.slf4j.helpers.MarkerIgnoringBase.isTraceEnabled(org.slf4j.Marker)
  name: MarkerIgnoringBase.isTraceEnabled(Marker)
  nameWithType: MarkerIgnoringBase.isTraceEnabled(Marker)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.isTraceEnabled(org.slf4j.Marker)
- uid: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  name: MarkerIgnoringBase.debug(Marker,String,Throwable)
  nameWithType: MarkerIgnoringBase.debug(Marker,String,Throwable)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
- uid: org.slf4j.helpers.NamedLoggerBase.readResolve()
  name: NamedLoggerBase.readResolve()
  nameWithType: NamedLoggerBase.readResolve()
  fullName: org.slf4j.helpers.NamedLoggerBase.readResolve()
- uid: org.slf4j.helpers.MarkerIgnoringBase.isWarnEnabled(org.slf4j.Marker)
  name: MarkerIgnoringBase.isWarnEnabled(Marker)
  nameWithType: MarkerIgnoringBase.isWarnEnabled(Marker)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.isWarnEnabled(org.slf4j.Marker)
- uid: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object)
  name: MarkerIgnoringBase.trace(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.trace(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object)
- uid: org.slf4j.helpers.MarkerIgnoringBase.toString()
  name: MarkerIgnoringBase.toString()
  nameWithType: MarkerIgnoringBase.toString()
  fullName: org.slf4j.helpers.MarkerIgnoringBase.toString()
- uid: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object)
  name: MarkerIgnoringBase.debug(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.debug(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object)
- uid: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String)
  name: MarkerIgnoringBase.trace(Marker,String)
  nameWithType: MarkerIgnoringBase.trace(Marker,String)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String)
- uid: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  name: MarkerIgnoringBase.error(Marker,String,Object,Object)
  nameWithType: MarkerIgnoringBase.error(Marker,String,Object,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
- uid: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  name: MarkerIgnoringBase.warn(Marker,String,Object,Object)
  nameWithType: MarkerIgnoringBase.warn(Marker,String,Object,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
- uid: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  name: MarkerIgnoringBase.debug(Marker,String,Object,Object)
  nameWithType: MarkerIgnoringBase.debug(Marker,String,Object,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
