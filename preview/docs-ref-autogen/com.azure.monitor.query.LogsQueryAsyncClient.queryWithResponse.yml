### YamlMime:JavaMember
uid: "com.azure.monitor.query.LogsQueryAsyncClient.queryWithResponse*"
fullName: "com.azure.monitor.query.LogsQueryAsyncClient.<T>queryWithResponse"
name: "<T>queryWithResponse"
nameWithType: "LogsQueryAsyncClient.<T>queryWithResponse"
members:
- uid: "com.azure.monitor.query.LogsQueryAsyncClient.<T>queryWithResponse(java.lang.String,java.lang.String,com.azure.core.experimental.models.TimeInterval,java.lang.Class<T>,com.azure.monitor.query.models.LogsQueryOptions)"
  fullName: "com.azure.monitor.query.LogsQueryAsyncClient.<T>queryWithResponse(String workspaceId, String query, TimeInterval timeInterval, Class<T> type, LogsQueryOptions options)"
  name: "<T>queryWithResponse(String workspaceId, String query, TimeInterval timeInterval, Class<T> type, LogsQueryOptions options)"
  nameWithType: "LogsQueryAsyncClient.<T>queryWithResponse(String workspaceId, String query, TimeInterval timeInterval, Class<T> type, LogsQueryOptions options)"
  summary: "Returns all the Azure Monitor logs matching the given query in the specified workspaceId."
  parameters:
  - description: "The workspaceId where the query should be executed."
    name: "workspaceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Kusto query to fetch the logs."
    name: "query"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The time period for which the logs should be looked up."
    name: "timeInterval"
    type: "<xref href=\"com.azure.core.experimental.models.TimeInterval?alt=com.azure.core.experimental.models.TimeInterval&text=TimeInterval\" data-throw-if-not-resolved=\"False\" />"
  - description: "The type the result of this query should be mapped to."
    name: "type"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The log query options to configure server timeout, set additional workspaces or enable\n statistics and rendering information in response."
    name: "options"
    type: "<xref href=\"com.azure.monitor.query.models.LogsQueryOptions?alt=com.azure.monitor.query.models.LogsQueryOptions&text=LogsQueryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<List<T>>> <T>queryWithResponse(String workspaceId, String query, TimeInterval timeInterval, Class<T> type, LogsQueryOptions options)"
  returns:
    description: "The logs matching the query including the HTTP response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.monitor.query.LogsQueryAsyncClient.queryWithResponse(java.lang.String,java.lang.String,com.azure.core.experimental.models.TimeInterval,com.azure.monitor.query.models.LogsQueryOptions)"
  fullName: "com.azure.monitor.query.LogsQueryAsyncClient.queryWithResponse(String workspaceId, String query, TimeInterval timeInterval, LogsQueryOptions options)"
  name: "queryWithResponse(String workspaceId, String query, TimeInterval timeInterval, LogsQueryOptions options)"
  nameWithType: "LogsQueryAsyncClient.queryWithResponse(String workspaceId, String query, TimeInterval timeInterval, LogsQueryOptions options)"
  summary: "Returns all the Azure Monitor logs matching the given query in the specified workspaceId.\n\n**Query logs from the last 7 days and set the service timeout to 2 minutes**\n\n```java\nMono<Response<LogsQueryResult>> queryResult = logsQueryAsyncClient.queryWithResponse(\"{workspace-id}\",\n         \"{kusto-query}\",\n         TimeInterval.LAST_7_DAYS,\n         new LogsQueryOptions().setServerTimeout(Duration.ofMinutes(2)));\n \n queryResult.subscribe(result -> {\n     for (LogsTableRow row : result.getValue().getTable().getRows()) {\n         System.out.println(row.getRow()\n                 .stream()\n                 .map(LogsTableCell::getValueAsString)\n                 .collect(Collectors.joining(\",\")));\n     }\n });\n```"
  parameters:
  - description: "The workspaceId where the query should be executed."
    name: "workspaceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Kusto query to fetch the logs."
    name: "query"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The time period for which the logs should be looked up."
    name: "timeInterval"
    type: "<xref href=\"com.azure.core.experimental.models.TimeInterval?alt=com.azure.core.experimental.models.TimeInterval&text=TimeInterval\" data-throw-if-not-resolved=\"False\" />"
  - description: "The log query options to configure server timeout, set additional workspaces or enable\n statistics and rendering information in response."
    name: "options"
    type: "<xref href=\"com.azure.monitor.query.models.LogsQueryOptions?alt=com.azure.monitor.query.models.LogsQueryOptions&text=LogsQueryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<LogsQueryResult>> queryWithResponse(String workspaceId, String query, TimeInterval timeInterval, LogsQueryOptions options)"
  returns:
    description: "The logs matching the query."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.monitor.query.models.LogsQueryResult?alt=com.azure.monitor.query.models.LogsQueryResult&text=LogsQueryResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.monitor.query"
artifact: com.azure:azure-monitor-query:1.0.0-beta.4
