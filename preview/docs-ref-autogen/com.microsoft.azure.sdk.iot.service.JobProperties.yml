### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.JobProperties"
fullName: "com.microsoft.azure.sdk.iot.service.JobProperties"
name: "JobProperties"
nameWithType: "JobProperties"
summary: "Contains properties of a Job."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class JobProperties"
constructors:
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.JobProperties()"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.JobProperties()"
  name: "JobProperties()"
  nameWithType: "JobProperties.JobProperties()"
  syntax: "public JobProperties()"
methods:
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.createForExportJob(java.lang.String,java.lang.Boolean)"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.createForExportJob(String outputBlobContainerUri, Boolean excludeKeysInExport)"
  name: "createForExportJob(String outputBlobContainerUri, Boolean excludeKeysInExport)"
  nameWithType: "JobProperties.createForExportJob(String outputBlobContainerUri, Boolean excludeKeysInExport)"
  summary: "Creates an instance of Job<wbr>Properties with parameters ready to start an Export job"
  modifiers:
  - "static"
  parameters:
  - description: "URI to a blob container. This is used to output the status of the job and the results.\n                               Including a SAS token is dependent on the StorageAuthenticationType"
    name: "outputBlobContainerUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Indicates if authorization keys are included in export output"
    name: "excludeKeysInExport"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static JobProperties createForExportJob(String outputBlobContainerUri, Boolean excludeKeysInExport)"
  desc: "Creates an instance of JobProperties with parameters ready to start an Export job"
  returns:
    description: "An instance of JobProperties"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.createForExportJob(java.lang.String,java.lang.Boolean,com.microsoft.azure.sdk.iot.deps.serializer.StorageAuthenticationType)"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.createForExportJob(String outputBlobContainerUri, Boolean excludeKeysInExport, StorageAuthenticationType storageAuthenticationType)"
  name: "createForExportJob(String outputBlobContainerUri, Boolean excludeKeysInExport, StorageAuthenticationType storageAuthenticationType)"
  nameWithType: "JobProperties.createForExportJob(String outputBlobContainerUri, Boolean excludeKeysInExport, StorageAuthenticationType storageAuthenticationType)"
  summary: "Creates an instance of Job<wbr>Properties with parameters ready to start an Export job"
  modifiers:
  - "static"
  parameters:
  - description: "URI to a blob container. This is used to output the status of the job and the results.\n                               Including a SAS token is dependent on the StorageAuthenticationType"
    name: "outputBlobContainerUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Indicates if authorization keys are included in export output"
    name: "excludeKeysInExport"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specifies authentication type being used for connecting to storage account"
    name: "storageAuthenticationType"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.StorageAuthenticationType?alt=com.microsoft.azure.sdk.iot.deps.serializer.StorageAuthenticationType&text=StorageAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static JobProperties createForExportJob(String outputBlobContainerUri, Boolean excludeKeysInExport, StorageAuthenticationType storageAuthenticationType)"
  desc: "Creates an instance of JobProperties with parameters ready to start an Export job"
  returns:
    description: "An instance of JobProperties"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.createForImportJob(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri)"
  name: "createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri)"
  nameWithType: "JobProperties.createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri)"
  summary: "Creates an instance of Job<wbr>Properties with parameters ready to start an Import job"
  modifiers:
  - "static"
  parameters:
  - description: "URI to a blob container that contains registry data to sync.\n                              Including a SAS token is dependent on the StorageAuthenticationType"
    name: "inputBlobContainerUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "URI to a blob container. This is used to output the status of the job and the results.\n                               Including a SAS token is dependent on the StorageAuthenticationType"
    name: "outputBlobContainerUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static JobProperties createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri)"
  desc: "Creates an instance of JobProperties with parameters ready to start an Import job"
  returns:
    description: "An instance of JobProperties"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.createForImportJob(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.deps.serializer.StorageAuthenticationType)"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri, StorageAuthenticationType storageAuthenticationType)"
  name: "createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri, StorageAuthenticationType storageAuthenticationType)"
  nameWithType: "JobProperties.createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri, StorageAuthenticationType storageAuthenticationType)"
  summary: "Creates an instance of Job<wbr>Properties with parameters ready to start an Import job"
  modifiers:
  - "static"
  parameters:
  - description: "URI to a blob container that contains registry data to sync.\n                              Including a SAS token is dependent on the StorageAuthenticationType"
    name: "inputBlobContainerUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "URI to a blob container. This is used to output the status of the job and the results.\n                               Including a SAS token is dependent on the StorageAuthenticationType"
    name: "outputBlobContainerUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specifies authentication type being used for connecting to storage account"
    name: "storageAuthenticationType"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.StorageAuthenticationType?alt=com.microsoft.azure.sdk.iot.deps.serializer.StorageAuthenticationType&text=StorageAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static JobProperties createForImportJob(String inputBlobContainerUri, String outputBlobContainerUri, StorageAuthenticationType storageAuthenticationType)"
  desc: "Creates an instance of JobProperties with parameters ready to start an Import job"
  returns:
    description: "An instance of JobProperties"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.getEndTimeUtc()"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.getEndTimeUtc()"
  name: "getEndTimeUtc()"
  nameWithType: "JobProperties.getEndTimeUtc()"
  syntax: "public Date getEndTimeUtc()"
  returns:
    description: "the UTC job end time. Ignored at creation.\n Represents the time the job stopped processing."
    type: "<xref href=\"java.util.Date?alt=java.util.Date&text=Date\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.getExcludeKeysInExport()"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.getExcludeKeysInExport()"
  name: "getExcludeKeysInExport()"
  nameWithType: "JobProperties.getExcludeKeysInExport()"
  syntax: "public boolean getExcludeKeysInExport()"
  returns:
    description: "whether the keys are included in export or not."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.getFailureReason()"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.getFailureReason()"
  name: "getFailureReason()"
  nameWithType: "JobProperties.getFailureReason()"
  syntax: "public String getFailureReason()"
  returns:
    description: "System generated. Ignored at creation.\n If status == failure, this represents a string containing the reason."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.getInputBlobContainerUri()"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.getInputBlobContainerUri()"
  name: "getInputBlobContainerUri()"
  nameWithType: "JobProperties.getInputBlobContainerUri()"
  syntax: "public String getInputBlobContainerUri()"
  returns:
    description: "URI to a blob container that contains registry data to sync.\n Including a SAS token is dependent on the StorageAuthenticationType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.getJobId()"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.getJobId()"
  name: "getJobId()"
  nameWithType: "JobProperties.getJobId()"
  syntax: "public String getJobId()"
  returns:
    description: "the system generated job id. Ignored at creation."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.getOutputBlobContainerUri()"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.getOutputBlobContainerUri()"
  name: "getOutputBlobContainerUri()"
  nameWithType: "JobProperties.getOutputBlobContainerUri()"
  syntax: "public String getOutputBlobContainerUri()"
  returns:
    description: "URI to a blob container. This is used to output the status of the job and the results.\n Including a SAS token is dependent on the StorageAuthenticationType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.getProgress()"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.getProgress()"
  name: "getProgress()"
  nameWithType: "JobProperties.getProgress()"
  syntax: "public int getProgress()"
  returns:
    description: "the system generated job progress. Ignored at creation.\n Represents the completion percentage."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.getStartTimeUtc()"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.getStartTimeUtc()"
  name: "getStartTimeUtc()"
  nameWithType: "JobProperties.getStartTimeUtc()"
  syntax: "public Date getStartTimeUtc()"
  returns:
    description: "the system generated UTC job start time. Ignored at creation."
    type: "<xref href=\"java.util.Date?alt=java.util.Date&text=Date\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.getStatus()"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.getStatus()"
  name: "getStatus()"
  nameWithType: "JobProperties.getStatus()"
  syntax: "public JobProperties.JobStatus getStatus()"
  returns:
    description: "the system generated job status. Ignored at creation."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties.JobStatus?alt=com.microsoft.azure.sdk.iot.service.JobProperties.JobStatus&text=JobStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.getStorageAuthenticationType()"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.getStorageAuthenticationType()"
  name: "getStorageAuthenticationType()"
  nameWithType: "JobProperties.getStorageAuthenticationType()"
  syntax: "public StorageAuthenticationType getStorageAuthenticationType()"
  returns:
    description: "authentication type being used for connecting to storage account"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.StorageAuthenticationType?alt=com.microsoft.azure.sdk.iot.deps.serializer.StorageAuthenticationType&text=StorageAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.getType()"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.getType()"
  name: "getType()"
  nameWithType: "JobProperties.getType()"
  syntax: "public JobProperties.JobType getType()"
  returns:
    description: "the type of job to execute."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties.JobType?alt=com.microsoft.azure.sdk.iot.service.JobProperties.JobType&text=JobType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.setEndTimeUtc(java.util.Date)"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.setEndTimeUtc(Date endTimeUtc)"
  name: "setEndTimeUtc(Date endTimeUtc)"
  nameWithType: "JobProperties.setEndTimeUtc(Date endTimeUtc)"
  parameters:
  - description: "the UTC job end time."
    name: "endTimeUtc"
    type: "<xref href=\"java.util.Date?alt=java.util.Date&text=Date\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setEndTimeUtc(Date endTimeUtc)"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.setExcludeKeysInExport(boolean)"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.setExcludeKeysInExport(boolean excludeKeysInExport)"
  name: "setExcludeKeysInExport(boolean excludeKeysInExport)"
  nameWithType: "JobProperties.setExcludeKeysInExport(boolean excludeKeysInExport)"
  parameters:
  - description: "optional for export jobs; ignored for other jobs.  Default: false.\n If false, authorization keys are included in export output.  Keys are exported as null otherwise."
    name: "excludeKeysInExport"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setExcludeKeysInExport(boolean excludeKeysInExport)"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.setFailureReason(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.setFailureReason(String failureReason)"
  name: "setFailureReason(String failureReason)"
  nameWithType: "JobProperties.setFailureReason(String failureReason)"
  parameters:
  - description: "the failure reason."
    name: "failureReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setFailureReason(String failureReason)"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.setInputBlobContainerUri(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.setInputBlobContainerUri(String inputBlobContainerUri)"
  name: "setInputBlobContainerUri(String inputBlobContainerUri)"
  nameWithType: "JobProperties.setInputBlobContainerUri(String inputBlobContainerUri)"
  parameters:
  - description: "URI to a blob container that contains registry data to sync.\n                              Including a SAS token is dependent on the StorageAuthenticationType"
    name: "inputBlobContainerUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setInputBlobContainerUri(String inputBlobContainerUri)"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.setJobId(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.setJobId(String jobId)"
  name: "setJobId(String jobId)"
  nameWithType: "JobProperties.setJobId(String jobId)"
  parameters:
  - description: "the job id"
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic void setJobId(String jobId)"
  exceptions:
  - description: "if the provided jobId is null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.setJobIdFinal(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.setJobIdFinal(String jobId)"
  name: "setJobIdFinal(String jobId)"
  nameWithType: "JobProperties.setJobIdFinal(String jobId)"
  modifiers:
  - "final"
  parameters:
  - description: "the job id"
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final void setJobIdFinal(String jobId)"
  exceptions:
  - description: "if the provided jobId is null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.setOutputBlobContainerUri(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.setOutputBlobContainerUri(String outputBlobContainerUri)"
  name: "setOutputBlobContainerUri(String outputBlobContainerUri)"
  nameWithType: "JobProperties.setOutputBlobContainerUri(String outputBlobContainerUri)"
  parameters:
  - description: "URI to a blob container. This is used to output the status of the job and the results.\n                               Including a SAS token is dependent on the StorageAuthenticationType"
    name: "outputBlobContainerUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setOutputBlobContainerUri(String outputBlobContainerUri)"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.setProgress(int)"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.setProgress(int progress)"
  name: "setProgress(int progress)"
  nameWithType: "JobProperties.setProgress(int progress)"
  parameters:
  - description: "the job progress."
    name: "progress"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setProgress(int progress)"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.setStartTimeUtc(java.util.Date)"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.setStartTimeUtc(Date startTimeUtc)"
  name: "setStartTimeUtc(Date startTimeUtc)"
  nameWithType: "JobProperties.setStartTimeUtc(Date startTimeUtc)"
  parameters:
  - description: "the UTC job start time."
    name: "startTimeUtc"
    type: "<xref href=\"java.util.Date?alt=java.util.Date&text=Date\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setStartTimeUtc(Date startTimeUtc)"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.setStatus(com.microsoft.azure.sdk.iot.service.JobProperties.JobStatus)"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.setStatus(JobProperties.JobStatus status)"
  name: "setStatus(JobProperties.JobStatus status)"
  nameWithType: "JobProperties.setStatus(JobProperties.JobStatus status)"
  parameters:
  - description: "the job status."
    name: "status"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties.JobStatus?alt=com.microsoft.azure.sdk.iot.service.JobProperties.JobStatus&text=JobStatus\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setStatus(JobProperties.JobStatus status)"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.setStorageAuthenticationType(com.microsoft.azure.sdk.iot.deps.serializer.StorageAuthenticationType)"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.setStorageAuthenticationType(StorageAuthenticationType storageAuthenticationType)"
  name: "setStorageAuthenticationType(StorageAuthenticationType storageAuthenticationType)"
  nameWithType: "JobProperties.setStorageAuthenticationType(StorageAuthenticationType storageAuthenticationType)"
  parameters:
  - description: "Specifies authentication type being used for connecting to storage account"
    name: "storageAuthenticationType"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.StorageAuthenticationType?alt=com.microsoft.azure.sdk.iot.deps.serializer.StorageAuthenticationType&text=StorageAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setStorageAuthenticationType(StorageAuthenticationType storageAuthenticationType)"
- uid: "com.microsoft.azure.sdk.iot.service.JobProperties.setType(com.microsoft.azure.sdk.iot.service.JobProperties.JobType)"
  fullName: "com.microsoft.azure.sdk.iot.service.JobProperties.setType(JobProperties.JobType type)"
  name: "setType(JobProperties.JobType type)"
  nameWithType: "JobProperties.setType(JobProperties.JobType type)"
  parameters:
  - description: "the type of job to execute."
    name: "type"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties.JobType?alt=com.microsoft.azure.sdk.iot.service.JobProperties.JobType&text=JobType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setType(JobProperties.JobType type)"
type: "class"
desc: "Contains properties of a Job. See online [documentation][] for more infomration.\n\n\n[documentation]: https://docs.microsoft.com/en-us/rest/api/iothub/service/createimportexportjob"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service"
artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.2.0
