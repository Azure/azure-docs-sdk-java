### YamlMime:JavaMember
uid: "com.azure.storage.file.share.ShareFileClient.listRangesDiffWithResponse*"
fullName: "com.azure.storage.file.share.ShareFileClient.listRangesDiffWithResponse"
name: "listRangesDiffWithResponse"
nameWithType: "ShareFileClient.listRangesDiffWithResponse"
members:
- uid: "com.azure.storage.file.share.ShareFileClient.listRangesDiffWithResponse(com.azure.storage.file.share.options.ShareFileListRangesDiffOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.listRangesDiffWithResponse(ShareFileListRangesDiffOptions options, Duration timeout, Context context)"
  name: "listRangesDiffWithResponse(ShareFileListRangesDiffOptions options, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.listRangesDiffWithResponse(ShareFileListRangesDiffOptions options, Duration timeout, Context context)"
  summary: "List of valid ranges for a file.\n\n**Code Samples**\n\nList all ranges within the file range from 1KB to 2KB.\n\n```java\nShareFileRangeList rangeList = fileClient.listRangesDiffWithResponse(\n     new ShareFileListRangesDiffOptions(\"previoussnapshot\")\n     .setRange(new ShareFileRange(1024, 2048L)), Duration.ofSeconds(1), new Context(key1, value1)).getValue();\n System.out.println(\"Valid Share File Ranges are:\");\n for (FileRange range : rangeList.getRanges()) {\n     System.out.printf(\"Start: %s, End: %s%n\", range.getStart(), range.getEnd());\n }\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-ranges"
  parameters:
  - description: "<xref uid=\"com.azure.storage.file.share.options.ShareFileListRangesDiffOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ShareFileListRangesDiffOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.file.share.options.ShareFileListRangesDiffOptions?alt=com.azure.storage.file.share.options.ShareFileListRangesDiffOptions&text=ShareFileListRangesDiffOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be thrown."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ShareFileRangeList> listRangesDiffWithResponse(ShareFileListRangesDiffOptions options, Duration timeout, Context context)"
  returns:
    description: "<xref uid=\"com.azure.storage.file.share.models.ShareFileRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ranges\"></xref> in the files that satisfy the requirements"
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.models.ShareFileRangeList?alt=com.azure.storage.file.share.models.ShareFileRangeList&text=ShareFileRangeList\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.share"
artifact: com.azure:azure-storage-file-share:12.7.0-beta.1
