### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.JsonMappingException.fromUnexpectedIOE*"
fullName: "com.fasterxml.jackson.databind.JsonMappingException.fromUnexpectedIOE"
name: "fromUnexpectedIOE"
nameWithType: "JsonMappingException.fromUnexpectedIOE"
members:
- uid: "com.fasterxml.jackson.databind.JsonMappingException.fromUnexpectedIOE(java.io.IOException)"
  fullName: "com.fasterxml.jackson.databind.JsonMappingException.fromUnexpectedIOE(IOException src)"
  name: "fromUnexpectedIOE(IOException src)"
  nameWithType: "JsonMappingException.fromUnexpectedIOE(IOException src)"
  summary: "Factory method used when \"upgrading\" an <xref uid=\"java.io.IOException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IOException\"></xref> into <xref uid=\"com.fasterxml.jackson.databind.JsonMappingException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonMappingException\"></xref>: usually only needed to comply with a signature.\n\nNOTE: since 2.9 should usually NOT be used on input-side (deserialization) exceptions; instead use method(s) of `InputMismatchException`"
  parameters:
  - name: "src"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static JsonMappingException fromUnexpectedIOE(IOException src)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
