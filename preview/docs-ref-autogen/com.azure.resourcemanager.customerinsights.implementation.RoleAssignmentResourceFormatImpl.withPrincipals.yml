### YamlMime:JavaMember
uid: "com.azure.resourcemanager.customerinsights.implementation.RoleAssignmentResourceFormatImpl.withPrincipals*"
fullName: "com.azure.resourcemanager.customerinsights.implementation.RoleAssignmentResourceFormatImpl.withPrincipals"
name: "withPrincipals"
nameWithType: "RoleAssignmentResourceFormatImpl.withPrincipals"
members:
- uid: "com.azure.resourcemanager.customerinsights.implementation.RoleAssignmentResourceFormatImpl.withPrincipals(java.util.List<com.azure.resourcemanager.customerinsights.models.AssignmentPrincipal>)"
  fullName: "com.azure.resourcemanager.customerinsights.implementation.RoleAssignmentResourceFormatImpl.withPrincipals(List<AssignmentPrincipal> principals)"
  name: "withPrincipals(List<AssignmentPrincipal> principals)"
  nameWithType: "RoleAssignmentResourceFormatImpl.withPrincipals(List<AssignmentPrincipal> principals)"
  summary: "Specifies the principals property: The principals being assigned to.."
  parameters:
  - name: "principals"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.customerinsights.models.AssignmentPrincipal?alt=com.azure.resourcemanager.customerinsights.models.AssignmentPrincipal&text=AssignmentPrincipal\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RoleAssignmentResourceFormatImpl withPrincipals(List<AssignmentPrincipal> principals)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.customerinsights.implementation.RoleAssignmentResourceFormatImpl?alt=com.azure.resourcemanager.customerinsights.implementation.RoleAssignmentResourceFormatImpl&text=RoleAssignmentResourceFormatImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.customerinsights.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-customerinsights:1.0.0-beta.1
