### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  id: SqlResourcesClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent
  children:
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.SqlResourcesClient(com.azure.resourcemanager.cosmos.CosmosDBManagementClient)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainers(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainers(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersSinglePageAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabases(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabases(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesSinglePageAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProcedures(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProcedures(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggers(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctions(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  langs:
  - java
  name: SqlResourcesClient
  nameWithType: SqlResourcesClient
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  type: Class
  package: com.azure.resourcemanager.cosmos.fluent
  summary: An instance of this class provides access to all the operations defined in SqlResources.
  syntax:
    content: public final class SqlResourcesClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.SqlResourcesClient(com.azure.resourcemanager.cosmos.CosmosDBManagementClient)
  id: SqlResourcesClient(com.azure.resourcemanager.cosmos.CosmosDBManagementClient)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: SqlResourcesClient(CosmosDBManagementClient client)
  nameWithType: SqlResourcesClient.SqlResourcesClient(CosmosDBManagementClient client)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.SqlResourcesClient(CosmosDBManagementClient client)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.SqlResourcesClient*
  type: Constructor
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Initializes an instance of SqlResourcesClient.
  syntax:
    content: public SqlResourcesClient(CosmosDBManagementClient client)
    parameters:
    - id: client
      type: com.azure.resourcemanager.cosmos.CosmosDBManagementClient
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  id: beginCreateUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public PollerFlux<PollResult<SqlContainerGetResultsInner>,SqlContainerGetResultsInner> beginCreateUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public PollerFlux<PollResult<SqlContainerGetResultsInner>,SqlContainerGetResultsInner> beginCreateUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  id: beginCreateUpdateSqlContainerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlContainerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public SqlContainerGetResultsInner beginCreateUpdateSqlContainerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlContainerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlContainerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public SqlContainerGetResultsInner beginCreateUpdateSqlContainerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  id: beginCreateUpdateSqlContainerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlContainerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<SqlContainerGetResultsInner> beginCreateUpdateSqlContainerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlContainerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlContainerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<SqlContainerGetResultsInner> beginCreateUpdateSqlContainerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  id: beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Response<SqlContainerGetResultsInner>> beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>>
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Response<SqlContainerGetResultsInner>> beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>>
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  id: beginCreateUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public PollerFlux<PollResult<SqlDatabaseGetResultsInner>,SqlDatabaseGetResultsInner> beginCreateUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public PollerFlux<PollResult<SqlDatabaseGetResultsInner>,SqlDatabaseGetResultsInner> beginCreateUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  id: beginCreateUpdateSqlDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public SqlDatabaseGetResultsInner beginCreateUpdateSqlDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public SqlDatabaseGetResultsInner beginCreateUpdateSqlDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  id: beginCreateUpdateSqlDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<SqlDatabaseGetResultsInner> beginCreateUpdateSqlDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<SqlDatabaseGetResultsInner> beginCreateUpdateSqlDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  id: beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Response<SqlDatabaseGetResultsInner>> beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>>
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Response<SqlDatabaseGetResultsInner>> beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>>
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  id: beginCreateUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public PollerFlux<PollResult<SqlStoredProcedureGetResultsInner>,SqlStoredProcedureGetResultsInner> beginCreateUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public PollerFlux<PollResult<SqlStoredProcedureGetResultsInner>,SqlStoredProcedureGetResultsInner> beginCreateUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  id: beginCreateUpdateSqlStoredProcedureWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlStoredProcedureWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public SqlStoredProcedureGetResultsInner beginCreateUpdateSqlStoredProcedureWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlStoredProcedureWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlStoredProcedureWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public SqlStoredProcedureGetResultsInner beginCreateUpdateSqlStoredProcedureWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  id: beginCreateUpdateSqlStoredProcedureWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlStoredProcedureWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<SqlStoredProcedureGetResultsInner> beginCreateUpdateSqlStoredProcedureWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlStoredProcedureWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlStoredProcedureWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<SqlStoredProcedureGetResultsInner> beginCreateUpdateSqlStoredProcedureWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  id: beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<Response<SqlStoredProcedureGetResultsInner>> beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>>
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<Response<SqlStoredProcedureGetResultsInner>> beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>>
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  id: beginCreateUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public PollerFlux<PollResult<SqlTriggerGetResultsInner>,SqlTriggerGetResultsInner> beginCreateUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public PollerFlux<PollResult<SqlTriggerGetResultsInner>,SqlTriggerGetResultsInner> beginCreateUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  id: beginCreateUpdateSqlTriggerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlTriggerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public SqlTriggerGetResultsInner beginCreateUpdateSqlTriggerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlTriggerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlTriggerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public SqlTriggerGetResultsInner beginCreateUpdateSqlTriggerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  id: beginCreateUpdateSqlTriggerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlTriggerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<SqlTriggerGetResultsInner> beginCreateUpdateSqlTriggerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlTriggerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlTriggerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<SqlTriggerGetResultsInner> beginCreateUpdateSqlTriggerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  id: beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<Response<SqlTriggerGetResultsInner>> beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>>
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<Response<SqlTriggerGetResultsInner>> beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>>
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  id: beginCreateUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public PollerFlux<PollResult<SqlUserDefinedFunctionGetResultsInner>,SqlUserDefinedFunctionGetResultsInner> beginCreateUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public PollerFlux<PollResult<SqlUserDefinedFunctionGetResultsInner>,SqlUserDefinedFunctionGetResultsInner> beginCreateUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  id: beginCreateUpdateSqlUserDefinedFunctionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlUserDefinedFunctionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public SqlUserDefinedFunctionGetResultsInner beginCreateUpdateSqlUserDefinedFunctionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlUserDefinedFunctionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlUserDefinedFunctionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public SqlUserDefinedFunctionGetResultsInner beginCreateUpdateSqlUserDefinedFunctionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  id: beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<SqlUserDefinedFunctionGetResultsInner> beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<SqlUserDefinedFunctionGetResultsInner> beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  id: beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<Response<SqlUserDefinedFunctionGetResultsInner>> beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>>
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<Response<SqlUserDefinedFunctionGetResultsInner>> beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>>
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.beginDeleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlContainerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlContainerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.beginDeleteSqlContainerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public void beginDeleteSqlContainerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlContainerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlContainerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlContainerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public void beginDeleteSqlContainerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlContainerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlContainerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.beginDeleteSqlContainerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Void> beginDeleteSqlContainerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlContainerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlContainerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlContainerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Void> beginDeleteSqlContainerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlContainerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.beginDeleteSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Response<Void>> beginDeleteSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlContainerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Response<Void>> beginDeleteSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClient.beginDeleteSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteSqlDatabase(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClient.beginDeleteSqlDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public void beginDeleteSqlDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public void beginDeleteSqlDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Void> beginDeleteSqlDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Void> beginDeleteSqlDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Response<Void>> beginDeleteSqlDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Response<Void>> beginDeleteSqlDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClient.beginDeleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlStoredProcedureWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlStoredProcedureWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public void beginDeleteSqlStoredProcedureWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlStoredProcedureWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlStoredProcedureWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public void beginDeleteSqlStoredProcedureWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlStoredProcedureWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlStoredProcedureWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<Void> beginDeleteSqlStoredProcedureWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlStoredProcedureWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlStoredProcedureWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<Void> beginDeleteSqlStoredProcedureWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<Response<Void>> beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<Response<Void>> beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClient.beginDeleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlTriggerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlTriggerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClient.beginDeleteSqlTriggerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public void beginDeleteSqlTriggerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlTriggerWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlTriggerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlTriggerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public void beginDeleteSqlTriggerWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlTriggerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlTriggerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<Void> beginDeleteSqlTriggerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlTriggerWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlTriggerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<Void> beginDeleteSqlTriggerWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlTriggerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlTriggerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<Response<Void>> beginDeleteSqlTriggerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlTriggerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlTriggerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<Response<Void>> beginDeleteSqlTriggerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClient.beginDeleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlUserDefinedFunctionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlUserDefinedFunctionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public void beginDeleteSqlUserDefinedFunctionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlUserDefinedFunctionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlUserDefinedFunctionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public void beginDeleteSqlUserDefinedFunctionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlUserDefinedFunctionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlUserDefinedFunctionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<Void> beginDeleteSqlUserDefinedFunctionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlUserDefinedFunctionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlUserDefinedFunctionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<Void> beginDeleteSqlUserDefinedFunctionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<Response<Void>> beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  nameWithType: SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<Response<Void>> beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginUpdateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClient.beginUpdateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public PollerFlux<PollResult<ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner> beginUpdateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginUpdateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClient.beginUpdateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public PollerFlux<PollResult<ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner> beginUpdateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateSqlContainerThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginUpdateSqlContainerThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public ThroughputSettingsGetResultsInner beginUpdateSqlContainerThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateSqlContainerThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginUpdateSqlContainerThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public ThroughputSettingsGetResultsInner beginUpdateSqlContainerThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateSqlContainerThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginUpdateSqlContainerThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> beginUpdateSqlContainerThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateSqlContainerThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginUpdateSqlContainerThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> beginUpdateSqlContainerThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginUpdateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClient.beginUpdateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public PollerFlux<PollResult<ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner> beginUpdateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginUpdateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClient.beginUpdateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public PollerFlux<PollResult<ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner> beginUpdateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateSqlDatabaseThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginUpdateSqlDatabaseThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public ThroughputSettingsGetResultsInner beginUpdateSqlDatabaseThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateSqlDatabaseThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginUpdateSqlDatabaseThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public ThroughputSettingsGetResultsInner beginUpdateSqlDatabaseThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateSqlDatabaseThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginUpdateSqlDatabaseThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> beginUpdateSqlDatabaseThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateSqlDatabaseThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginUpdateSqlDatabaseThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> beginUpdateSqlDatabaseThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  id: createUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  nameWithType: SqlResourcesClient.createUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public SqlContainerGetResultsInner createUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  nameWithType: SqlResourcesClient.createUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public SqlContainerGetResultsInner createUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  id: createUpdateSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  nameWithType: SqlResourcesClient.createUpdateSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<SqlContainerGetResultsInner> createUpdateSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  nameWithType: SqlResourcesClient.createUpdateSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<SqlContainerGetResultsInner> createUpdateSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  id: createUpdateSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  nameWithType: SqlResourcesClient.createUpdateSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  nameWithType: SqlResourcesClient.createUpdateSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  id: createUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  nameWithType: SqlResourcesClient.createUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public SqlDatabaseGetResultsInner createUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  nameWithType: SqlResourcesClient.createUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public SqlDatabaseGetResultsInner createUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  id: createUpdateSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  nameWithType: SqlResourcesClient.createUpdateSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<SqlDatabaseGetResultsInner> createUpdateSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  nameWithType: SqlResourcesClient.createUpdateSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<SqlDatabaseGetResultsInner> createUpdateSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  id: createUpdateSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  nameWithType: SqlResourcesClient.createUpdateSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  nameWithType: SqlResourcesClient.createUpdateSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  id: createUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  nameWithType: SqlResourcesClient.createUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public SqlStoredProcedureGetResultsInner createUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  nameWithType: SqlResourcesClient.createUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public SqlStoredProcedureGetResultsInner createUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  id: createUpdateSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  nameWithType: SqlResourcesClient.createUpdateSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<SqlStoredProcedureGetResultsInner> createUpdateSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  nameWithType: SqlResourcesClient.createUpdateSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<SqlStoredProcedureGetResultsInner> createUpdateSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  id: createUpdateSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  nameWithType: SqlResourcesClient.createUpdateSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  nameWithType: SqlResourcesClient.createUpdateSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  id: createUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  nameWithType: SqlResourcesClient.createUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public SqlTriggerGetResultsInner createUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  nameWithType: SqlResourcesClient.createUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public SqlTriggerGetResultsInner createUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  id: createUpdateSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  nameWithType: SqlResourcesClient.createUpdateSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<SqlTriggerGetResultsInner> createUpdateSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  nameWithType: SqlResourcesClient.createUpdateSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<SqlTriggerGetResultsInner> createUpdateSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  id: createUpdateSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  nameWithType: SqlResourcesClient.createUpdateSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  nameWithType: SqlResourcesClient.createUpdateSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  id: createUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  nameWithType: SqlResourcesClient.createUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public SqlUserDefinedFunctionGetResultsInner createUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  nameWithType: SqlResourcesClient.createUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public SqlUserDefinedFunctionGetResultsInner createUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  id: createUpdateSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  nameWithType: SqlResourcesClient.createUpdateSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<SqlUserDefinedFunctionGetResultsInner> createUpdateSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  nameWithType: SqlResourcesClient.createUpdateSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<SqlUserDefinedFunctionGetResultsInner> createUpdateSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  id: createUpdateSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  nameWithType: SqlResourcesClient.createUpdateSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: createUpdateSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  nameWithType: SqlResourcesClient.createUpdateSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.deleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public void deleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.deleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public void deleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.deleteSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Void> deleteSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.deleteSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Void> deleteSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.deleteSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.deleteSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClient.deleteSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public void deleteSqlDatabase(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClient.deleteSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public void deleteSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClient.deleteSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Void> deleteSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClient.deleteSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Void> deleteSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClient.deleteSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClient.deleteSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClient.deleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public void deleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  nameWithType: SqlResourcesClient.deleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public void deleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClient.deleteSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<Void> deleteSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  nameWithType: SqlResourcesClient.deleteSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<Void> deleteSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClient.deleteSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  nameWithType: SqlResourcesClient.deleteSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClient.deleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public void deleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  nameWithType: SqlResourcesClient.deleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public void deleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClient.deleteSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<Void> deleteSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  nameWithType: SqlResourcesClient.deleteSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<Void> deleteSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClient.deleteSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  nameWithType: SqlResourcesClient.deleteSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClient.deleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public void deleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  nameWithType: SqlResourcesClient.deleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public void deleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClient.deleteSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<Void> deleteSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  nameWithType: SqlResourcesClient.deleteSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<Void> deleteSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClient.deleteSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: deleteSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  nameWithType: SqlResourcesClient.deleteSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.getSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public SqlContainerGetResultsInner getSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
      description: the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.getSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public SqlContainerGetResultsInner getSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
      description: the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.getSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<SqlContainerGetResultsInner> getSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>
      description: the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.getSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<SqlContainerGetResultsInner> getSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>
      description: the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.getSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public ThroughputSettingsGetResultsInner getSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.getSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public ThroughputSettingsGetResultsInner getSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.getSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> getSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
      description: the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.getSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> getSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
      description: the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.getSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<Response<SqlContainerGetResultsInner>> getSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>>
      description: the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.getSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<Response<SqlContainerGetResultsInner>> getSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>>
      description: the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  id: getSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClient.getSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public SqlDatabaseGetResultsInner getSqlDatabase(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
      description: the SQL database under an existing Azure Cosmos DB database account with the provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClient.getSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public SqlDatabaseGetResultsInner getSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
      description: the SQL database under an existing Azure Cosmos DB database account with the provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClient.getSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<SqlDatabaseGetResultsInner> getSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>
      description: the SQL database under an existing Azure Cosmos DB database account with the provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClient.getSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<SqlDatabaseGetResultsInner> getSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>
      description: the SQL database under an existing Azure Cosmos DB database account with the provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String)
  id: getSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClient.getSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public ThroughputSettingsGetResultsInner getSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: >-
        the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClient.getSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public ThroughputSettingsGetResultsInner getSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: >-
        the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClient.getSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> getSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: >-
        the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClient.getSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> getSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: >-
        the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClient.getSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> getSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
      description: >-
        the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClient.getSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> getSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
      description: >-
        the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClient.getSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<Response<SqlDatabaseGetResultsInner>> getSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>>
      description: the SQL database under an existing Azure Cosmos DB database account with the provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClient.getSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<Response<SqlDatabaseGetResultsInner>> getSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>>
      description: the SQL database under an existing Azure Cosmos DB database account with the provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClient.getSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public SqlStoredProcedureGetResultsInner getSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
      description: the SQL storedProcedure under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  nameWithType: SqlResourcesClient.getSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public SqlStoredProcedureGetResultsInner getSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
      description: the SQL storedProcedure under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClient.getSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<SqlStoredProcedureGetResultsInner> getSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>
      description: the SQL storedProcedure under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  nameWithType: SqlResourcesClient.getSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<SqlStoredProcedureGetResultsInner> getSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>
      description: the SQL storedProcedure under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClient.getSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<Response<SqlStoredProcedureGetResultsInner>> getSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>>
      description: the SQL storedProcedure under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  nameWithType: SqlResourcesClient.getSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<Response<SqlStoredProcedureGetResultsInner>> getSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>>
      description: the SQL storedProcedure under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClient.getSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public SqlTriggerGetResultsInner getSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
      description: the SQL trigger under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  nameWithType: SqlResourcesClient.getSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public SqlTriggerGetResultsInner getSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
      description: the SQL trigger under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClient.getSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<SqlTriggerGetResultsInner> getSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>
      description: the SQL trigger under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  nameWithType: SqlResourcesClient.getSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<SqlTriggerGetResultsInner> getSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>
      description: the SQL trigger under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClient.getSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<Response<SqlTriggerGetResultsInner>> getSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>>
      description: the SQL trigger under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  nameWithType: SqlResourcesClient.getSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<Response<SqlTriggerGetResultsInner>> getSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>>
      description: the SQL trigger under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClient.getSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public SqlUserDefinedFunctionGetResultsInner getSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
      description: the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  nameWithType: SqlResourcesClient.getSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public SqlUserDefinedFunctionGetResultsInner getSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
      description: the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClient.getSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<SqlUserDefinedFunctionGetResultsInner> getSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>
      description: the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  nameWithType: SqlResourcesClient.getSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<SqlUserDefinedFunctionGetResultsInner> getSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>
      description: the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClient.getSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<Response<SqlUserDefinedFunctionGetResultsInner>> getSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>>
      description: the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: getSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  nameWithType: SqlResourcesClient.getSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<Response<SqlUserDefinedFunctionGetResultsInner>> getSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>>
      description: the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainers(java.lang.String,java.lang.String,java.lang.String)
  id: listSqlContainers(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlContainers(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClient.listSqlContainers(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainers(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainers*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlContainerGetResultsInner> listSqlContainers(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>
      description: the List operation response, that contains the containers and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainers(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlContainers(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlContainers(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClient.listSqlContainers(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainers(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainers*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlContainerGetResultsInner> listSqlContainers(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>
      description: the List operation response, that contains the containers and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersAsync(java.lang.String,java.lang.String,java.lang.String)
  id: listSqlContainersAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlContainersAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClient.listSqlContainersAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<SqlContainerGetResultsInner> listSqlContainersAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>
      description: the List operation response, that contains the containers and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlContainersAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlContainersAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClient.listSqlContainersAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<SqlContainerGetResultsInner> listSqlContainersAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>
      description: the List operation response, that contains the containers and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersSinglePageAsync(java.lang.String,java.lang.String,java.lang.String)
  id: listSqlContainersSinglePageAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlContainersSinglePageAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClient.listSqlContainersSinglePageAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersSinglePageAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<PagedResponse<SqlContainerGetResultsInner>> listSqlContainersSinglePageAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>>
      description: the List operation response, that contains the containers and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlContainersSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlContainersSinglePageAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClient.listSqlContainersSinglePageAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersSinglePageAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<PagedResponse<SqlContainerGetResultsInner>> listSqlContainersSinglePageAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>>
      description: the List operation response, that contains the containers and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabases(java.lang.String,java.lang.String)
  id: listSqlDatabases(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlDatabases(String resourceGroupName, String accountName)
  nameWithType: SqlResourcesClient.listSqlDatabases(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabases(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabases*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL databases under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlDatabaseGetResultsInner> listSqlDatabases(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>
      description: the List operation response, that contains the SQL databases and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabases(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlDatabases(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlDatabases(String resourceGroupName, String accountName, Context context)
  nameWithType: SqlResourcesClient.listSqlDatabases(String resourceGroupName, String accountName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabases(String resourceGroupName, String accountName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabases*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL databases under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlDatabaseGetResultsInner> listSqlDatabases(String resourceGroupName, String accountName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>
      description: the List operation response, that contains the SQL databases and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesAsync(java.lang.String,java.lang.String)
  id: listSqlDatabasesAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlDatabasesAsync(String resourceGroupName, String accountName)
  nameWithType: SqlResourcesClient.listSqlDatabasesAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL databases under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<SqlDatabaseGetResultsInner> listSqlDatabasesAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>
      description: the List operation response, that contains the SQL databases and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlDatabasesAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlDatabasesAsync(String resourceGroupName, String accountName, Context context)
  nameWithType: SqlResourcesClient.listSqlDatabasesAsync(String resourceGroupName, String accountName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesAsync(String resourceGroupName, String accountName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL databases under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<SqlDatabaseGetResultsInner> listSqlDatabasesAsync(String resourceGroupName, String accountName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>
      description: the List operation response, that contains the SQL databases and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesSinglePageAsync(java.lang.String,java.lang.String)
  id: listSqlDatabasesSinglePageAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlDatabasesSinglePageAsync(String resourceGroupName, String accountName)
  nameWithType: SqlResourcesClient.listSqlDatabasesSinglePageAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesSinglePageAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL databases under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<PagedResponse<SqlDatabaseGetResultsInner>> listSqlDatabasesSinglePageAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>>
      description: the List operation response, that contains the SQL databases and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlDatabasesSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlDatabasesSinglePageAsync(String resourceGroupName, String accountName, Context context)
  nameWithType: SqlResourcesClient.listSqlDatabasesSinglePageAsync(String resourceGroupName, String accountName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesSinglePageAsync(String resourceGroupName, String accountName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL databases under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<PagedResponse<SqlDatabaseGetResultsInner>> listSqlDatabasesSinglePageAsync(String resourceGroupName, String accountName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>>
      description: the List operation response, that contains the SQL databases and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProcedures(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listSqlStoredProcedures(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlStoredProcedures(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.listSqlStoredProcedures(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProcedures(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProcedures*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlStoredProcedureGetResultsInner> listSqlStoredProcedures(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>
      description: the List operation response, that contains the storedProcedures and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProcedures(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlStoredProcedures(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlStoredProcedures(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.listSqlStoredProcedures(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProcedures(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProcedures*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlStoredProcedureGetResultsInner> listSqlStoredProcedures(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>
      description: the List operation response, that contains the storedProcedures and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listSqlStoredProceduresAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlStoredProceduresAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.listSqlStoredProceduresAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<SqlStoredProcedureGetResultsInner> listSqlStoredProceduresAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>
      description: the List operation response, that contains the storedProcedures and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlStoredProceduresAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlStoredProceduresAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.listSqlStoredProceduresAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<SqlStoredProcedureGetResultsInner> listSqlStoredProceduresAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>
      description: the List operation response, that contains the storedProcedures and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listSqlStoredProceduresSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlStoredProceduresSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.listSqlStoredProceduresSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<PagedResponse<SqlStoredProcedureGetResultsInner>> listSqlStoredProceduresSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>>
      description: the List operation response, that contains the storedProcedures and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlStoredProceduresSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlStoredProceduresSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.listSqlStoredProceduresSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<PagedResponse<SqlStoredProcedureGetResultsInner>> listSqlStoredProceduresSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>>
      description: the List operation response, that contains the storedProcedures and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggers(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listSqlTriggers(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlTriggers(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.listSqlTriggers(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggers(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggers*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlTriggerGetResultsInner> listSqlTriggers(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>
      description: the List operation response, that contains the triggers and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlTriggers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlTriggers(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.listSqlTriggers(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggers(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggers*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlTriggerGetResultsInner> listSqlTriggers(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>
      description: the List operation response, that contains the triggers and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listSqlTriggersAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlTriggersAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.listSqlTriggersAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<SqlTriggerGetResultsInner> listSqlTriggersAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>
      description: the List operation response, that contains the triggers and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlTriggersAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlTriggersAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.listSqlTriggersAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<SqlTriggerGetResultsInner> listSqlTriggersAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>
      description: the List operation response, that contains the triggers and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listSqlTriggersSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlTriggersSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.listSqlTriggersSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<PagedResponse<SqlTriggerGetResultsInner>> listSqlTriggersSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>>
      description: the List operation response, that contains the triggers and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlTriggersSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlTriggersSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.listSqlTriggersSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<PagedResponse<SqlTriggerGetResultsInner>> listSqlTriggersSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>>
      description: the List operation response, that contains the triggers and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctions(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listSqlUserDefinedFunctions(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlUserDefinedFunctions(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.listSqlUserDefinedFunctions(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctions(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctions*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlUserDefinedFunctionGetResultsInner> listSqlUserDefinedFunctions(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>
      description: the List operation response, that contains the userDefinedFunctions and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlUserDefinedFunctions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlUserDefinedFunctions(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.listSqlUserDefinedFunctions(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctions(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctions*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlUserDefinedFunctionGetResultsInner> listSqlUserDefinedFunctions(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>
      description: the List operation response, that contains the userDefinedFunctions and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listSqlUserDefinedFunctionsAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlUserDefinedFunctionsAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.listSqlUserDefinedFunctionsAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<SqlUserDefinedFunctionGetResultsInner> listSqlUserDefinedFunctionsAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>
      description: the List operation response, that contains the userDefinedFunctions and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlUserDefinedFunctionsAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlUserDefinedFunctionsAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.listSqlUserDefinedFunctionsAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<SqlUserDefinedFunctionGetResultsInner> listSqlUserDefinedFunctionsAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>
      description: the List operation response, that contains the userDefinedFunctions and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listSqlUserDefinedFunctionsSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlUserDefinedFunctionsSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.listSqlUserDefinedFunctionsSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<PagedResponse<SqlUserDefinedFunctionGetResultsInner>> listSqlUserDefinedFunctionsSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>>
      description: the List operation response, that contains the userDefinedFunctions and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlUserDefinedFunctionsSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: listSqlUserDefinedFunctionsSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.listSqlUserDefinedFunctionsSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<PagedResponse<SqlUserDefinedFunctionGetResultsInner>> listSqlUserDefinedFunctionsSinglePageAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>>
      description: the List operation response, that contains the userDefinedFunctions and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: updateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClient.updateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public ThroughputSettingsGetResultsInner updateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: updateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: updateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClient.updateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public ThroughputSettingsGetResultsInner updateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: updateSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClient.updateSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> updateSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: updateSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: updateSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClient.updateSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> updateSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: updateSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClient.updateSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: updateSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: updateSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClient.updateSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: updateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClient.updateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public ThroughputSettingsGetResultsInner updateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: updateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: updateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClient.updateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public ThroughputSettingsGetResultsInner updateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: updateSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClient.updateSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> updateSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: updateSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: updateSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClient.updateSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> updateSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: updateSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClient.updateSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: updateSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  langs:
  - java
  name: updateSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClient.updateSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB resource throughput.
references:
- uid: com.azure.resourcemanager.cosmos.CosmosDBManagementClient
  name: CosmosDBManagementClient
  nameWithType: CosmosDBManagementClient
  fullName: com.azure.resourcemanager.cosmos.CosmosDBManagementClient
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.SqlResourcesClient*
  name: SqlResourcesClient
  nameWithType: SqlResourcesClient.SqlResourcesClient
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.SqlResourcesClient
  package: com.azure.resourcemanager.cosmos.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
    name: SqlDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesSinglePageAsync*
  name: listSqlDatabasesSinglePageAsync
  nameWithType: SqlResourcesClient.listSqlDatabasesSinglePageAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesSinglePageAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
    name: SqlDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesAsync*
  name: listSqlDatabasesAsync
  nameWithType: SqlResourcesClient.listSqlDatabasesAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabasesAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
    name: SqlDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabases*
  name: listSqlDatabases
  nameWithType: SqlResourcesClient.listSqlDatabases
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlDatabases
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
    name: SqlDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseWithResponseAsync*
  name: getSqlDatabaseWithResponseAsync
  nameWithType: SqlResourcesClient.getSqlDatabaseWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
    name: SqlDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseAsync*
  name: getSqlDatabaseAsync
  nameWithType: SqlResourcesClient.getSqlDatabaseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
  name: SqlDatabaseGetResultsInner
  nameWithType: SqlDatabaseGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabase*
  name: getSqlDatabase
  nameWithType: SqlResourcesClient.getSqlDatabase
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabase
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
  name: SqlDatabaseCreateUpdateParameters
  nameWithType: SqlDatabaseCreateUpdateParameters
  fullName: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseWithResponseAsync*
  name: createUpdateSqlDatabaseWithResponseAsync
  nameWithType: SqlResourcesClient.createUpdateSqlDatabaseWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
    name: SqlDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
    name: SqlDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabase*
  name: beginCreateUpdateSqlDatabase
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlDatabase
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabase
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseAsync*
  name: createUpdateSqlDatabaseAsync
  nameWithType: SqlResourcesClient.createUpdateSqlDatabaseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabaseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabase*
  name: createUpdateSqlDatabase
  nameWithType: SqlResourcesClient.createUpdateSqlDatabase
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlDatabase
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseWithResponseAsync*
  name: deleteSqlDatabaseWithResponseAsync
  nameWithType: SqlResourcesClient.deleteSqlDatabaseWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabase*
  name: beginDeleteSqlDatabase
  nameWithType: SqlResourcesClient.beginDeleteSqlDatabase
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabase
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseAsync*
  name: deleteSqlDatabaseAsync
  nameWithType: SqlResourcesClient.deleteSqlDatabaseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabaseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabase*
  name: deleteSqlDatabase
  nameWithType: SqlResourcesClient.deleteSqlDatabase
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlDatabase
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
    name: ThroughputSettingsGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputWithResponseAsync*
  name: getSqlDatabaseThroughputWithResponseAsync
  nameWithType: SqlResourcesClient.getSqlDatabaseThroughputWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
    name: ThroughputSettingsGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputAsync*
  name: getSqlDatabaseThroughputAsync
  nameWithType: SqlResourcesClient.getSqlDatabaseThroughputAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughputAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
  name: ThroughputSettingsGetResultsInner
  nameWithType: ThroughputSettingsGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughput*
  name: getSqlDatabaseThroughput
  nameWithType: SqlResourcesClient.getSqlDatabaseThroughput
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlDatabaseThroughput
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
  name: ThroughputSettingsUpdateParameters
  nameWithType: ThroughputSettingsUpdateParameters
  fullName: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputWithResponseAsync*
  name: updateSqlDatabaseThroughputWithResponseAsync
  nameWithType: SqlResourcesClient.updateSqlDatabaseThroughputWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
    name: ThroughputSettingsGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
    name: ThroughputSettingsGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughput*
  name: beginUpdateSqlDatabaseThroughput
  nameWithType: SqlResourcesClient.beginUpdateSqlDatabaseThroughput
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughput
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputAsync*
  name: updateSqlDatabaseThroughputAsync
  nameWithType: SqlResourcesClient.updateSqlDatabaseThroughputAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughputAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughput*
  name: updateSqlDatabaseThroughput
  nameWithType: SqlResourcesClient.updateSqlDatabaseThroughput
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlDatabaseThroughput
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
    name: SqlContainerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersSinglePageAsync*
  name: listSqlContainersSinglePageAsync
  nameWithType: SqlResourcesClient.listSqlContainersSinglePageAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersSinglePageAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
    name: SqlContainerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersAsync*
  name: listSqlContainersAsync
  nameWithType: SqlResourcesClient.listSqlContainersAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainersAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
    name: SqlContainerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainers*
  name: listSqlContainers
  nameWithType: SqlResourcesClient.listSqlContainers
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlContainers
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
    name: SqlContainerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerWithResponseAsync*
  name: getSqlContainerWithResponseAsync
  nameWithType: SqlResourcesClient.getSqlContainerWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
    name: SqlContainerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerAsync*
  name: getSqlContainerAsync
  nameWithType: SqlResourcesClient.getSqlContainerAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
  name: SqlContainerGetResultsInner
  nameWithType: SqlContainerGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainer*
  name: getSqlContainer
  nameWithType: SqlResourcesClient.getSqlContainer
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainer
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
  name: SqlContainerCreateUpdateParameters
  nameWithType: SqlContainerCreateUpdateParameters
  fullName: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerWithResponseAsync*
  name: createUpdateSqlContainerWithResponseAsync
  nameWithType: SqlResourcesClient.createUpdateSqlContainerWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
    name: SqlContainerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
    name: SqlContainerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainer*
  name: beginCreateUpdateSqlContainer
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlContainer
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainer
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerAsync*
  name: createUpdateSqlContainerAsync
  nameWithType: SqlResourcesClient.createUpdateSqlContainerAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainerAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainer*
  name: createUpdateSqlContainer
  nameWithType: SqlResourcesClient.createUpdateSqlContainer
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlContainer
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerWithResponseAsync*
  name: deleteSqlContainerWithResponseAsync
  nameWithType: SqlResourcesClient.deleteSqlContainerWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainer*
  name: beginDeleteSqlContainer
  nameWithType: SqlResourcesClient.beginDeleteSqlContainer
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainer
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerAsync*
  name: deleteSqlContainerAsync
  nameWithType: SqlResourcesClient.deleteSqlContainerAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainerAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainer*
  name: deleteSqlContainer
  nameWithType: SqlResourcesClient.deleteSqlContainer
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlContainer
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputWithResponseAsync*
  name: getSqlContainerThroughputWithResponseAsync
  nameWithType: SqlResourcesClient.getSqlContainerThroughputWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputAsync*
  name: getSqlContainerThroughputAsync
  nameWithType: SqlResourcesClient.getSqlContainerThroughputAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughput*
  name: getSqlContainerThroughput
  nameWithType: SqlResourcesClient.getSqlContainerThroughput
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughput
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputWithResponseAsync*
  name: updateSqlContainerThroughputWithResponseAsync
  nameWithType: SqlResourcesClient.updateSqlContainerThroughputWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughput*
  name: beginUpdateSqlContainerThroughput
  nameWithType: SqlResourcesClient.beginUpdateSqlContainerThroughput
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughput
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputAsync*
  name: updateSqlContainerThroughputAsync
  nameWithType: SqlResourcesClient.updateSqlContainerThroughputAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughputAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughput*
  name: updateSqlContainerThroughput
  nameWithType: SqlResourcesClient.updateSqlContainerThroughput
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.updateSqlContainerThroughput
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
    name: SqlStoredProcedureGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresSinglePageAsync*
  name: listSqlStoredProceduresSinglePageAsync
  nameWithType: SqlResourcesClient.listSqlStoredProceduresSinglePageAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresSinglePageAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
    name: SqlStoredProcedureGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresAsync*
  name: listSqlStoredProceduresAsync
  nameWithType: SqlResourcesClient.listSqlStoredProceduresAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProceduresAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
    name: SqlStoredProcedureGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProcedures*
  name: listSqlStoredProcedures
  nameWithType: SqlResourcesClient.listSqlStoredProcedures
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlStoredProcedures
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
    name: SqlStoredProcedureGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureWithResponseAsync*
  name: getSqlStoredProcedureWithResponseAsync
  nameWithType: SqlResourcesClient.getSqlStoredProcedureWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
    name: SqlStoredProcedureGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureAsync*
  name: getSqlStoredProcedureAsync
  nameWithType: SqlResourcesClient.getSqlStoredProcedureAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedureAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
  name: SqlStoredProcedureGetResultsInner
  nameWithType: SqlStoredProcedureGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedure*
  name: getSqlStoredProcedure
  nameWithType: SqlResourcesClient.getSqlStoredProcedure
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlStoredProcedure
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
  name: SqlStoredProcedureCreateUpdateParameters
  nameWithType: SqlStoredProcedureCreateUpdateParameters
  fullName: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureWithResponseAsync*
  name: createUpdateSqlStoredProcedureWithResponseAsync
  nameWithType: SqlResourcesClient.createUpdateSqlStoredProcedureWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
    name: SqlStoredProcedureGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
    name: SqlStoredProcedureGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedure*
  name: beginCreateUpdateSqlStoredProcedure
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlStoredProcedure
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedure
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureAsync*
  name: createUpdateSqlStoredProcedureAsync
  nameWithType: SqlResourcesClient.createUpdateSqlStoredProcedureAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedureAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedure*
  name: createUpdateSqlStoredProcedure
  nameWithType: SqlResourcesClient.createUpdateSqlStoredProcedure
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlStoredProcedure
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureWithResponseAsync*
  name: deleteSqlStoredProcedureWithResponseAsync
  nameWithType: SqlResourcesClient.deleteSqlStoredProcedureWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedure*
  name: beginDeleteSqlStoredProcedure
  nameWithType: SqlResourcesClient.beginDeleteSqlStoredProcedure
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedure
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureAsync*
  name: deleteSqlStoredProcedureAsync
  nameWithType: SqlResourcesClient.deleteSqlStoredProcedureAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedureAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedure*
  name: deleteSqlStoredProcedure
  nameWithType: SqlResourcesClient.deleteSqlStoredProcedure
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlStoredProcedure
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
    name: SqlUserDefinedFunctionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsSinglePageAsync*
  name: listSqlUserDefinedFunctionsSinglePageAsync
  nameWithType: SqlResourcesClient.listSqlUserDefinedFunctionsSinglePageAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsSinglePageAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
    name: SqlUserDefinedFunctionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsAsync*
  name: listSqlUserDefinedFunctionsAsync
  nameWithType: SqlResourcesClient.listSqlUserDefinedFunctionsAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctionsAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
    name: SqlUserDefinedFunctionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctions*
  name: listSqlUserDefinedFunctions
  nameWithType: SqlResourcesClient.listSqlUserDefinedFunctions
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlUserDefinedFunctions
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
    name: SqlUserDefinedFunctionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionWithResponseAsync*
  name: getSqlUserDefinedFunctionWithResponseAsync
  nameWithType: SqlResourcesClient.getSqlUserDefinedFunctionWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
    name: SqlUserDefinedFunctionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionAsync*
  name: getSqlUserDefinedFunctionAsync
  nameWithType: SqlResourcesClient.getSqlUserDefinedFunctionAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunctionAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
  name: SqlUserDefinedFunctionGetResultsInner
  nameWithType: SqlUserDefinedFunctionGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunction*
  name: getSqlUserDefinedFunction
  nameWithType: SqlResourcesClient.getSqlUserDefinedFunction
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlUserDefinedFunction
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
  name: SqlUserDefinedFunctionCreateUpdateParameters
  nameWithType: SqlUserDefinedFunctionCreateUpdateParameters
  fullName: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionWithResponseAsync*
  name: createUpdateSqlUserDefinedFunctionWithResponseAsync
  nameWithType: SqlResourcesClient.createUpdateSqlUserDefinedFunctionWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
    name: SqlUserDefinedFunctionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
    name: SqlUserDefinedFunctionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunction*
  name: beginCreateUpdateSqlUserDefinedFunction
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunction
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunction
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionAsync*
  name: createUpdateSqlUserDefinedFunctionAsync
  nameWithType: SqlResourcesClient.createUpdateSqlUserDefinedFunctionAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunctionAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunction*
  name: createUpdateSqlUserDefinedFunction
  nameWithType: SqlResourcesClient.createUpdateSqlUserDefinedFunction
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlUserDefinedFunction
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionWithResponseAsync*
  name: deleteSqlUserDefinedFunctionWithResponseAsync
  nameWithType: SqlResourcesClient.deleteSqlUserDefinedFunctionWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunction*
  name: beginDeleteSqlUserDefinedFunction
  nameWithType: SqlResourcesClient.beginDeleteSqlUserDefinedFunction
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunction
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionAsync*
  name: deleteSqlUserDefinedFunctionAsync
  nameWithType: SqlResourcesClient.deleteSqlUserDefinedFunctionAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunctionAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunction*
  name: deleteSqlUserDefinedFunction
  nameWithType: SqlResourcesClient.deleteSqlUserDefinedFunction
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlUserDefinedFunction
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
    name: SqlTriggerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersSinglePageAsync*
  name: listSqlTriggersSinglePageAsync
  nameWithType: SqlResourcesClient.listSqlTriggersSinglePageAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersSinglePageAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
    name: SqlTriggerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersAsync*
  name: listSqlTriggersAsync
  nameWithType: SqlResourcesClient.listSqlTriggersAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggersAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
    name: SqlTriggerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggers*
  name: listSqlTriggers
  nameWithType: SqlResourcesClient.listSqlTriggers
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.listSqlTriggers
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
    name: SqlTriggerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerWithResponseAsync*
  name: getSqlTriggerWithResponseAsync
  nameWithType: SqlResourcesClient.getSqlTriggerWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
    name: SqlTriggerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerAsync*
  name: getSqlTriggerAsync
  nameWithType: SqlResourcesClient.getSqlTriggerAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTriggerAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
  name: SqlTriggerGetResultsInner
  nameWithType: SqlTriggerGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTrigger*
  name: getSqlTrigger
  nameWithType: SqlResourcesClient.getSqlTrigger
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlTrigger
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
  name: SqlTriggerCreateUpdateParameters
  nameWithType: SqlTriggerCreateUpdateParameters
  fullName: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerWithResponseAsync*
  name: createUpdateSqlTriggerWithResponseAsync
  nameWithType: SqlResourcesClient.createUpdateSqlTriggerWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
    name: SqlTriggerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
    name: SqlTriggerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTrigger*
  name: beginCreateUpdateSqlTrigger
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlTrigger
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTrigger
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerAsync*
  name: createUpdateSqlTriggerAsync
  nameWithType: SqlResourcesClient.createUpdateSqlTriggerAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTriggerAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTrigger*
  name: createUpdateSqlTrigger
  nameWithType: SqlResourcesClient.createUpdateSqlTrigger
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.createUpdateSqlTrigger
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerWithResponseAsync*
  name: deleteSqlTriggerWithResponseAsync
  nameWithType: SqlResourcesClient.deleteSqlTriggerWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTrigger*
  name: beginDeleteSqlTrigger
  nameWithType: SqlResourcesClient.beginDeleteSqlTrigger
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTrigger
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerAsync*
  name: deleteSqlTriggerAsync
  nameWithType: SqlResourcesClient.deleteSqlTriggerAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTriggerAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTrigger*
  name: deleteSqlTrigger
  nameWithType: SqlResourcesClient.deleteSqlTrigger
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.deleteSqlTrigger
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync*
  name: beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingAsync*
  name: beginCreateUpdateSqlDatabaseWithoutPollingAsync
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPolling*
  name: beginCreateUpdateSqlDatabaseWithoutPolling
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlDatabaseWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingWithResponseAsync*
  name: beginDeleteSqlDatabaseWithoutPollingWithResponseAsync
  nameWithType: SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingAsync*
  name: beginDeleteSqlDatabaseWithoutPollingAsync
  nameWithType: SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPolling*
  name: beginDeleteSqlDatabaseWithoutPolling
  nameWithType: SqlResourcesClient.beginDeleteSqlDatabaseWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlDatabaseWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync*
  name: beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync
  nameWithType: SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingAsync*
  name: beginUpdateSqlDatabaseThroughputWithoutPollingAsync
  nameWithType: SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPolling*
  name: beginUpdateSqlDatabaseThroughputWithoutPolling
  nameWithType: SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlDatabaseThroughputWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync*
  name: beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingAsync*
  name: beginCreateUpdateSqlContainerWithoutPollingAsync
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPolling*
  name: beginCreateUpdateSqlContainerWithoutPolling
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingWithResponseAsync*
  name: beginDeleteSqlContainerWithoutPollingWithResponseAsync
  nameWithType: SqlResourcesClient.beginDeleteSqlContainerWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingAsync*
  name: beginDeleteSqlContainerWithoutPollingAsync
  nameWithType: SqlResourcesClient.beginDeleteSqlContainerWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPolling*
  name: beginDeleteSqlContainerWithoutPolling
  nameWithType: SqlResourcesClient.beginDeleteSqlContainerWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlContainerWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync*
  name: beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync
  nameWithType: SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingAsync*
  name: beginUpdateSqlContainerThroughputWithoutPollingAsync
  nameWithType: SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPolling*
  name: beginUpdateSqlContainerThroughputWithoutPolling
  nameWithType: SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginUpdateSqlContainerThroughputWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync*
  name: beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingAsync*
  name: beginCreateUpdateSqlStoredProcedureWithoutPollingAsync
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPolling*
  name: beginCreateUpdateSqlStoredProcedureWithoutPolling
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlStoredProcedureWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync*
  name: beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync
  nameWithType: SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingAsync*
  name: beginDeleteSqlStoredProcedureWithoutPollingAsync
  nameWithType: SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPolling*
  name: beginDeleteSqlStoredProcedureWithoutPolling
  nameWithType: SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlStoredProcedureWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync*
  name: beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync*
  name: beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPolling*
  name: beginCreateUpdateSqlUserDefinedFunctionWithoutPolling
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlUserDefinedFunctionWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync*
  name: beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync
  nameWithType: SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingAsync*
  name: beginDeleteSqlUserDefinedFunctionWithoutPollingAsync
  nameWithType: SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPolling*
  name: beginDeleteSqlUserDefinedFunctionWithoutPolling
  nameWithType: SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlUserDefinedFunctionWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync*
  name: beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingAsync*
  name: beginCreateUpdateSqlTriggerWithoutPollingAsync
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPolling*
  name: beginCreateUpdateSqlTriggerWithoutPolling
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlTriggerWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingWithResponseAsync*
  name: beginDeleteSqlTriggerWithoutPollingWithResponseAsync
  nameWithType: SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingAsync*
  name: beginDeleteSqlTriggerWithoutPollingAsync
  nameWithType: SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPolling*
  name: beginDeleteSqlTriggerWithoutPolling
  nameWithType: SqlResourcesClient.beginDeleteSqlTriggerWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginDeleteSqlTriggerWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
  name: SqlDatabaseGetResultsInner>,SqlDatabaseGetResultsInner
  nameWithType: SqlDatabaseGetResultsInner>,SqlDatabaseGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlDatabaseGetResultsInner
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
  name: ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner
  nameWithType: ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
  name: SqlContainerGetResultsInner>,SqlContainerGetResultsInner
  nameWithType: SqlContainerGetResultsInner>,SqlContainerGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
  name: SqlStoredProcedureGetResultsInner>,SqlStoredProcedureGetResultsInner
  nameWithType: SqlStoredProcedureGetResultsInner>,SqlStoredProcedureGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlStoredProcedureGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
  name: SqlUserDefinedFunctionGetResultsInner>,SqlUserDefinedFunctionGetResultsInner
  nameWithType: SqlUserDefinedFunctionGetResultsInner>,SqlUserDefinedFunctionGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlUserDefinedFunctionGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
  name: SqlTriggerGetResultsInner>,SqlTriggerGetResultsInner
  nameWithType: SqlTriggerGetResultsInner>,SqlTriggerGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.SqlTriggerGetResultsInner
