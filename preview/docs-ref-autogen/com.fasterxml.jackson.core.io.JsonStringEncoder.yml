### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.io.JsonStringEncoder
  id: JsonStringEncoder
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io
  children:
  - com.fasterxml.jackson.core.io.JsonStringEncoder.JsonStringEncoder()
  - com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.CharSequence)
  - com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)
  - com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()
  - com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.CharSequence)
  - com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.CharSequence,java.lang.StringBuilder)
  - com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)
  - com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)
  langs:
  - java
  name: JsonStringEncoder
  nameWithType: JsonStringEncoder
  fullName: com.fasterxml.jackson.core.io.JsonStringEncoder
  type: Class
  package: com.fasterxml.jackson.core.io
  summary: >-
    Helper class used for efficient encoding of JSON String values (including JSON field names) into Strings or UTF-8 byte arrays.


    Note that methods in here are somewhat optimized, but not ridiculously so. Reason is that conversion method results are expected to be cached so that these methods will not be hot spots during normal operation.
  syntax:
    content: public final class JsonStringEncoder
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.io.JsonStringEncoder.JsonStringEncoder()
  id: JsonStringEncoder()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.JsonStringEncoder
  langs:
  - java
  name: JsonStringEncoder()
  nameWithType: JsonStringEncoder.JsonStringEncoder()
  fullName: com.fasterxml.jackson.core.io.JsonStringEncoder.JsonStringEncoder()
  overload: com.fasterxml.jackson.core.io.JsonStringEncoder.JsonStringEncoder*
  type: Constructor
  package: com.fasterxml.jackson.core.io
  syntax:
    content: public JsonStringEncoder()
- uid: com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.CharSequence)
  id: encodeAsUTF8(java.lang.CharSequence)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.JsonStringEncoder
  langs:
  - java
  name: encodeAsUTF8(CharSequence text)
  nameWithType: JsonStringEncoder.encodeAsUTF8(CharSequence text)
  fullName: com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(CharSequence text)
  overload: com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8*
  type: Method
  package: com.fasterxml.jackson.core.io
  summary: Overloaded variant of <xref uid="com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)" data-throw-if-not-resolved="false">#encodeAsUTF8(String)</xref>.
  syntax:
    content: public byte[] encodeAsUTF8(CharSequence text)
    parameters:
    - id: text
      type: java.lang.CharSequence
    return:
      type: byte[]
- uid: com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(java.lang.String)
  id: encodeAsUTF8(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.JsonStringEncoder
  langs:
  - java
  name: encodeAsUTF8(String text)
  nameWithType: JsonStringEncoder.encodeAsUTF8(String text)
  fullName: com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8(String text)
  overload: com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8*
  type: Method
  package: com.fasterxml.jackson.core.io
  summary: Will encode given String as UTF-8 (without any quoting), return resulting byte array.
  syntax:
    content: public byte[] encodeAsUTF8(String text)
    parameters:
    - id: text
      type: java.lang.String
    return:
      type: byte[]
- uid: com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()
  id: getInstance()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.JsonStringEncoder
  langs:
  - java
  name: getInstance()
  nameWithType: JsonStringEncoder.getInstance()
  fullName: com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance()
  overload: com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance*
  type: Method
  package: com.fasterxml.jackson.core.io
  summary: Factory method for getting an instance; this is either recycled per-thread instance, or a newly constructed one.
  syntax:
    content: public static JsonStringEncoder getInstance()
    return:
      type: com.fasterxml.jackson.core.io.JsonStringEncoder
- uid: com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.CharSequence)
  id: quoteAsString(java.lang.CharSequence)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.JsonStringEncoder
  langs:
  - java
  name: quoteAsString(CharSequence input)
  nameWithType: JsonStringEncoder.quoteAsString(CharSequence input)
  fullName: com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(CharSequence input)
  overload: com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString*
  type: Method
  package: com.fasterxml.jackson.core.io
  summary: Overloaded variant of <xref uid="com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)" data-throw-if-not-resolved="false">#quoteAsString(String)</xref>.
  syntax:
    content: public char[] quoteAsString(CharSequence input)
    parameters:
    - id: input
      type: java.lang.CharSequence
    return:
      type: char[]
- uid: com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.CharSequence,java.lang.StringBuilder)
  id: quoteAsString(java.lang.CharSequence,java.lang.StringBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.JsonStringEncoder
  langs:
  - java
  name: quoteAsString(CharSequence input, StringBuilder output)
  nameWithType: JsonStringEncoder.quoteAsString(CharSequence input, StringBuilder output)
  fullName: com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(CharSequence input, StringBuilder output)
  overload: com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString*
  type: Method
  package: com.fasterxml.jackson.core.io
  summary: Method that will quote text contents using JSON standard quoting, and append results to a supplied <xref uid="java.lang.StringBuilder" data-throw-if-not-resolved="false">StringBuilder</xref>. Use this variant if you have e.g. a <xref uid="java.lang.StringBuilder" data-throw-if-not-resolved="false">StringBuilder</xref> and want to avoid superfluous copying of it.
  syntax:
    content: public void quoteAsString(CharSequence input, StringBuilder output)
    parameters:
    - id: input
      type: java.lang.CharSequence
    - id: output
      type: java.lang.StringBuilder
- uid: com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(java.lang.String)
  id: quoteAsString(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.JsonStringEncoder
  langs:
  - java
  name: quoteAsString(String input)
  nameWithType: JsonStringEncoder.quoteAsString(String input)
  fullName: com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(String input)
  overload: com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString*
  type: Method
  package: com.fasterxml.jackson.core.io
  summary: Method that will quote text contents using JSON standard quoting, and return results as a character array
  syntax:
    content: public char[] quoteAsString(String input)
    parameters:
    - id: input
      type: java.lang.String
    return:
      type: char[]
- uid: com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(java.lang.String)
  id: quoteAsUTF8(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.JsonStringEncoder
  langs:
  - java
  name: quoteAsUTF8(String text)
  nameWithType: JsonStringEncoder.quoteAsUTF8(String text)
  fullName: com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8(String text)
  overload: com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8*
  type: Method
  package: com.fasterxml.jackson.core.io
  summary: Will quote given JSON String value using standard quoting, encode results as UTF-8, and return result as a byte array.
  syntax:
    content: public byte[] quoteAsUTF8(String text)
    parameters:
    - id: text
      type: java.lang.String
    return:
      type: byte[]
references:
- uid: com.fasterxml.jackson.core.io.JsonStringEncoder.JsonStringEncoder*
  name: JsonStringEncoder
  nameWithType: JsonStringEncoder.JsonStringEncoder
  fullName: com.fasterxml.jackson.core.io.JsonStringEncoder.JsonStringEncoder
  package: com.fasterxml.jackson.core.io
- uid: com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance*
  name: getInstance
  nameWithType: JsonStringEncoder.getInstance
  fullName: com.fasterxml.jackson.core.io.JsonStringEncoder.getInstance
  package: com.fasterxml.jackson.core.io
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString*
  name: quoteAsString
  nameWithType: JsonStringEncoder.quoteAsString
  fullName: com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString
  package: com.fasterxml.jackson.core.io
- uid: java.lang.CharSequence
  spec.java:
  - uid: java.lang.CharSequence
    name: CharSequence
    fullName: java.lang.CharSequence
- uid: java.lang.StringBuilder
  spec.java:
  - uid: java.lang.StringBuilder
    name: StringBuilder
    fullName: java.lang.StringBuilder
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8*
  name: quoteAsUTF8
  nameWithType: JsonStringEncoder.quoteAsUTF8
  fullName: com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsUTF8
  package: com.fasterxml.jackson.core.io
- uid: com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8*
  name: encodeAsUTF8
  nameWithType: JsonStringEncoder.encodeAsUTF8
  fullName: com.fasterxml.jackson.core.io.JsonStringEncoder.encodeAsUTF8
  package: com.fasterxml.jackson.core.io
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
