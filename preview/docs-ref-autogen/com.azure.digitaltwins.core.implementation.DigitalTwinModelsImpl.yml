### YamlMime:ManagedReference
items:
- uid: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl
  id: DigitalTwinModelsImpl
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.implementation
  children:
  - com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.addWithResponseAsync(java.util.List<java.lang.Object>,com.azure.core.util.Context)
  - com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.deleteWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.getByIdWithResponseAsync(java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.listSinglePageAsync(java.util.List<java.lang.String>,java.lang.Boolean,com.azure.digitaltwins.core.implementation.models.DigitalTwinModelsListOptions,com.azure.core.util.Context)
  - com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.updateWithResponseAsync(java.lang.String,java.util.List<java.lang.Object>,com.azure.core.util.Context)
  langs:
  - java
  name: DigitalTwinModelsImpl
  nameWithType: DigitalTwinModelsImpl
  fullName: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl
  type: Class
  package: com.azure.digitaltwins.core.implementation
  summary: An instance of this class provides access to all the operations defined in DigitalTwinModels.
  syntax:
    content: public final class DigitalTwinModelsImpl
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.DigitalTwinModelsImpl(com.azure.digitaltwins.core.implementation.AzureDigitalTwinsAPIImpl)
  id: DigitalTwinModelsImpl(com.azure.digitaltwins.core.implementation.AzureDigitalTwinsAPIImpl)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl
  langs:
  - java
  name: DigitalTwinModelsImpl(AzureDigitalTwinsAPIImpl client)
  nameWithType: DigitalTwinModelsImpl.DigitalTwinModelsImpl(AzureDigitalTwinsAPIImpl client)
  fullName: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.DigitalTwinModelsImpl(AzureDigitalTwinsAPIImpl client)
  overload: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.DigitalTwinModelsImpl*
  type: Constructor
  package: com.azure.digitaltwins.core.implementation
  summary: Initializes an instance of DigitalTwinModelsImpl.
  syntax:
    content: " DigitalTwinModelsImpl(AzureDigitalTwinsAPIImpl client)"
    parameters:
    - id: client
      type: com.azure.digitaltwins.core.implementation.AzureDigitalTwinsAPIImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.addWithResponseAsync(java.util.List<java.lang.Object>,com.azure.core.util.Context)
  id: addWithResponseAsync(java.util.List<java.lang.Object>,com.azure.core.util.Context)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl
  langs:
  - java
  name: addWithResponseAsync(List<Object> models, Context context)
  nameWithType: DigitalTwinModelsImpl.addWithResponseAsync(List<Object> models, Context context)
  fullName: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.addWithResponseAsync(List<Object> models, Context context)
  overload: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.addWithResponseAsync*
  type: Method
  package: com.azure.digitaltwins.core.implementation
  summary: 'Uploads one or more models. When any error occurs, no models are uploaded. Status codes: 200 (OK): Success. 400 (Bad Request): The request is invalid. 409 (Conflict): One or more of the provided models already exist.'
  syntax:
    content: public Mono<Response<List<ModelData>>> addWithResponseAsync(List<Object> models, Context context)
    parameters:
    - id: models
      type: java.util.List<java.lang.Object>
      description: Array of any.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.util.List<com.azure.digitaltwins.core.implementation.models.ModelData>>>
      description: a collection of ModelData objects.
- uid: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.deleteWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl
  langs:
  - java
  name: deleteWithResponseAsync(String id, Context context)
  nameWithType: DigitalTwinModelsImpl.deleteWithResponseAsync(String id, Context context)
  fullName: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.deleteWithResponseAsync(String id, Context context)
  overload: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.digitaltwins.core.implementation
  summary: 'Deletes a model. A model can only be deleted if no other models reference it. Status codes: 204 (No Content): Success. 400 (Bad Request): The request is invalid. 404 (Not Found): There is no model with the provided id. 409 (Conflict): There are dependencies on the model that prevent it from being deleted.'
  syntax:
    content: public Mono<Response<Void>> deleteWithResponseAsync(String id, Context context)
    parameters:
    - id: id
      type: java.lang.String
      description: The id for the model. The id is globally unique and case sensitive.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.getByIdWithResponseAsync(java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  id: getByIdWithResponseAsync(java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl
  langs:
  - java
  name: getByIdWithResponseAsync(String id, Boolean includeModelDefinition, Context context)
  nameWithType: DigitalTwinModelsImpl.getByIdWithResponseAsync(String id, Boolean includeModelDefinition, Context context)
  fullName: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.getByIdWithResponseAsync(String id, Boolean includeModelDefinition, Context context)
  overload: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.getByIdWithResponseAsync*
  type: Method
  package: com.azure.digitaltwins.core.implementation
  summary: 'Retrieves model metadata and optionally the model definition. Status codes: 200 (OK): Success. 404 (Not Found): There is no model with the provided id.'
  syntax:
    content: public Mono<Response<ModelData>> getByIdWithResponseAsync(String id, Boolean includeModelDefinition, Context context)
    parameters:
    - id: id
      type: java.lang.String
      description: The id for the model. The id is globally unique and case sensitive.
    - id: includeModelDefinition
      type: java.lang.Boolean
      description: When true the model definition will be returned as part of the result.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.digitaltwins.core.implementation.models.ModelData>>
      description: a model definition and metadata for that model.
- uid: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink, Context context)
  nameWithType: DigitalTwinModelsImpl.listNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.listNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.listNextSinglePageAsync*
  type: Method
  package: com.azure.digitaltwins.core.implementation
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ModelData>> listNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.digitaltwins.core.implementation.models.ModelData>>
      description: a collection of ModelData objects.
- uid: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.listSinglePageAsync(java.util.List<java.lang.String>,java.lang.Boolean,com.azure.digitaltwins.core.implementation.models.DigitalTwinModelsListOptions,com.azure.core.util.Context)
  id: listSinglePageAsync(java.util.List<java.lang.String>,java.lang.Boolean,com.azure.digitaltwins.core.implementation.models.DigitalTwinModelsListOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl
  langs:
  - java
  name: listSinglePageAsync(List<String> dependenciesFor, Boolean includeModelDefinition, DigitalTwinModelsListOptions digitalTwinModelsListOptions, Context context)
  nameWithType: DigitalTwinModelsImpl.listSinglePageAsync(List<String> dependenciesFor, Boolean includeModelDefinition, DigitalTwinModelsListOptions digitalTwinModelsListOptions, Context context)
  fullName: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.listSinglePageAsync(List<String> dependenciesFor, Boolean includeModelDefinition, DigitalTwinModelsListOptions digitalTwinModelsListOptions, Context context)
  overload: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.listSinglePageAsync*
  type: Method
  package: com.azure.digitaltwins.core.implementation
  summary: 'Retrieves model metadata and, optionally, model definitions. Status codes: 200 (OK): Success. 400 (Bad Request): The request is invalid.'
  syntax:
    content: public Mono<PagedResponse<ModelData>> listSinglePageAsync(List<String> dependenciesFor, Boolean includeModelDefinition, DigitalTwinModelsListOptions digitalTwinModelsListOptions, Context context)
    parameters:
    - id: dependenciesFor
      type: java.util.List<java.lang.String>
      description: Array of Get0ItemsItem.
    - id: includeModelDefinition
      type: java.lang.Boolean
      description: When true the model definition will be returned as part of the result.
    - id: digitalTwinModelsListOptions
      type: com.azure.digitaltwins.core.implementation.models.DigitalTwinModelsListOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.digitaltwins.core.implementation.models.ModelData>>
      description: a collection of ModelData objects.
- uid: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.updateWithResponseAsync(java.lang.String,java.util.List<java.lang.Object>,com.azure.core.util.Context)
  id: updateWithResponseAsync(java.lang.String,java.util.List<java.lang.Object>,com.azure.core.util.Context)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl
  langs:
  - java
  name: updateWithResponseAsync(String id, List<Object> updateModel, Context context)
  nameWithType: DigitalTwinModelsImpl.updateWithResponseAsync(String id, List<Object> updateModel, Context context)
  fullName: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.updateWithResponseAsync(String id, List<Object> updateModel, Context context)
  overload: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.updateWithResponseAsync*
  type: Method
  package: com.azure.digitaltwins.core.implementation
  summary: 'Updates the metadata for a model. Status codes: 200 (OK): Success. 400 (Bad Request): The request is invalid. 404 (Not Found): There is no model with the provided id.'
  syntax:
    content: public Mono<Response<Void>> updateWithResponseAsync(String id, List<Object> updateModel, Context context)
    parameters:
    - id: id
      type: java.lang.String
      description: The id for the model. The id is globally unique and case sensitive.
    - id: updateModel
      type: java.util.List<java.lang.Object>
      description: Array of any.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
references:
- uid: com.azure.digitaltwins.core.implementation.AzureDigitalTwinsAPIImpl
  name: AzureDigitalTwinsAPIImpl
  nameWithType: AzureDigitalTwinsAPIImpl
  fullName: com.azure.digitaltwins.core.implementation.AzureDigitalTwinsAPIImpl
- uid: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.DigitalTwinModelsImpl*
  name: DigitalTwinModelsImpl
  nameWithType: DigitalTwinModelsImpl.DigitalTwinModelsImpl
  fullName: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.DigitalTwinModelsImpl
  package: com.azure.digitaltwins.core.implementation
- uid: java.util.List<java.lang.Object>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.util.List<com.azure.digitaltwins.core.implementation.models.ModelData>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.digitaltwins.core.implementation.models.ModelData
    name: ModelData
    fullName: com.azure.digitaltwins.core.implementation.models.ModelData
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.addWithResponseAsync*
  name: addWithResponseAsync
  nameWithType: DigitalTwinModelsImpl.addWithResponseAsync
  fullName: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.addWithResponseAsync
  package: com.azure.digitaltwins.core.implementation
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.digitaltwins.core.implementation.models.DigitalTwinModelsListOptions
  name: DigitalTwinModelsListOptions
  nameWithType: DigitalTwinModelsListOptions
  fullName: com.azure.digitaltwins.core.implementation.models.DigitalTwinModelsListOptions
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.digitaltwins.core.implementation.models.ModelData>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.digitaltwins.core.implementation.models.ModelData
    name: ModelData
    fullName: com.azure.digitaltwins.core.implementation.models.ModelData
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.listSinglePageAsync*
  name: listSinglePageAsync
  nameWithType: DigitalTwinModelsImpl.listSinglePageAsync
  fullName: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.listSinglePageAsync
  package: com.azure.digitaltwins.core.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.digitaltwins.core.implementation.models.ModelData>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.digitaltwins.core.implementation.models.ModelData
    name: ModelData
    fullName: com.azure.digitaltwins.core.implementation.models.ModelData
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.getByIdWithResponseAsync*
  name: getByIdWithResponseAsync
  nameWithType: DigitalTwinModelsImpl.getByIdWithResponseAsync
  fullName: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.getByIdWithResponseAsync
  package: com.azure.digitaltwins.core.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: DigitalTwinModelsImpl.updateWithResponseAsync
  fullName: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.updateWithResponseAsync
  package: com.azure.digitaltwins.core.implementation
- uid: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: DigitalTwinModelsImpl.deleteWithResponseAsync
  fullName: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.deleteWithResponseAsync
  package: com.azure.digitaltwins.core.implementation
- uid: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.listNextSinglePageAsync*
  name: listNextSinglePageAsync
  nameWithType: DigitalTwinModelsImpl.listNextSinglePageAsync
  fullName: com.azure.digitaltwins.core.implementation.DigitalTwinModelsImpl.listNextSinglePageAsync
  package: com.azure.digitaltwins.core.implementation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.lang.Object
  name: Object
  nameWithType: Object
  fullName: java.lang.Object
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.digitaltwins.core.implementation.models.ModelData
  name: ModelData
  nameWithType: ModelData
  fullName: com.azure.digitaltwins.core.implementation.models.ModelData
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
