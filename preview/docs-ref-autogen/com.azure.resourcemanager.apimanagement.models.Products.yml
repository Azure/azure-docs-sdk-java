### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.models.Products"
fullName: "com.azure.resourcemanager.apimanagement.models.Products"
name: "Products"
nameWithType: "Products"
summary: "Resource collection API of Products."
syntax: "public interface Products"
methods:
- uid: "com.azure.resourcemanager.apimanagement.models.Products.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Products.define(String name)"
  name: "define(String name)"
  nameWithType: "Products.define(String name)"
  summary: "Begins definition for a new Product<wbr>Contract resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ProductContract.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new ProductContract resource."
  returns:
    description: "the first stage of the new ProductContract definition."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.ProductContract.DefinitionStages.Blank?alt=com.azure.resourcemanager.apimanagement.models.ProductContract.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.Products.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Products.delete(String resourceGroupName, String serviceName, String productId, String ifMatch)"
  name: "delete(String resourceGroupName, String serviceName, String productId, String ifMatch)"
  nameWithType: "Products.delete(String resourceGroupName, String serviceName, String productId, String ifMatch)"
  summary: "Delete product."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Product identifier. Must be unique in the current API Management service instance."
    name: "productId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET\n     request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String serviceName, String productId, String ifMatch)"
  desc: "Delete product."
- uid: "com.azure.resourcemanager.apimanagement.models.Products.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Products.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Products.deleteById(String id)"
  summary: "Delete product."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Delete product."
- uid: "com.azure.resourcemanager.apimanagement.models.Products.deleteByIdWithResponse(java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Products.deleteByIdWithResponse(String id, String ifMatch, Boolean deleteSubscriptions, Context context)"
  name: "deleteByIdWithResponse(String id, String ifMatch, Boolean deleteSubscriptions, Context context)"
  nameWithType: "Products.deleteByIdWithResponse(String id, String ifMatch, Boolean deleteSubscriptions, Context context)"
  summary: "Delete product."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET\n     request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Delete existing subscriptions associated with the product or not."
    name: "deleteSubscriptions"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByIdWithResponse(String id, String ifMatch, Boolean deleteSubscriptions, Context context)"
  desc: "Delete product."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Products.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Products.deleteWithResponse(String resourceGroupName, String serviceName, String productId, String ifMatch, Boolean deleteSubscriptions, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String serviceName, String productId, String ifMatch, Boolean deleteSubscriptions, Context context)"
  nameWithType: "Products.deleteWithResponse(String resourceGroupName, String serviceName, String productId, String ifMatch, Boolean deleteSubscriptions, Context context)"
  summary: "Delete product."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Product identifier. Must be unique in the current API Management service instance."
    name: "productId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET\n     request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Delete existing subscriptions associated with the product or not."
    name: "deleteSubscriptions"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String serviceName, String productId, String ifMatch, Boolean deleteSubscriptions, Context context)"
  desc: "Delete product."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Products.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Products.get(String resourceGroupName, String serviceName, String productId)"
  name: "get(String resourceGroupName, String serviceName, String productId)"
  nameWithType: "Products.get(String resourceGroupName, String serviceName, String productId)"
  summary: "Gets the details of the product specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Product identifier. Must be unique in the current API Management service instance."
    name: "productId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ProductContract get(String resourceGroupName, String serviceName, String productId)"
  desc: "Gets the details of the product specified by its identifier."
  returns:
    description: "the details of the product specified by its identifier."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.ProductContract?alt=com.azure.resourcemanager.apimanagement.models.ProductContract&text=ProductContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.Products.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Products.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Products.getById(String id)"
  summary: "Gets the details of the product specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ProductContract getById(String id)"
  desc: "Gets the details of the product specified by its identifier."
  returns:
    description: "the details of the product specified by its identifier."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.ProductContract?alt=com.azure.resourcemanager.apimanagement.models.ProductContract&text=ProductContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.Products.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Products.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Products.getByIdWithResponse(String id, Context context)"
  summary: "Gets the details of the product specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ProductContract> getByIdWithResponse(String id, Context context)"
  desc: "Gets the details of the product specified by its identifier."
  returns:
    description: "the details of the product specified by its identifier."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.models.ProductContract?alt=com.azure.resourcemanager.apimanagement.models.ProductContract&text=ProductContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Products.getEntityTag(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Products.getEntityTag(String resourceGroupName, String serviceName, String productId)"
  name: "getEntityTag(String resourceGroupName, String serviceName, String productId)"
  nameWithType: "Products.getEntityTag(String resourceGroupName, String serviceName, String productId)"
  summary: "Gets the entity state (Etag) version of the product specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Product identifier. Must be unique in the current API Management service instance."
    name: "productId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void getEntityTag(String resourceGroupName, String serviceName, String productId)"
  desc: "Gets the entity state (Etag) version of the product specified by its identifier."
- uid: "com.azure.resourcemanager.apimanagement.models.Products.getEntityTagWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Products.getEntityTagWithResponse(String resourceGroupName, String serviceName, String productId, Context context)"
  name: "getEntityTagWithResponse(String resourceGroupName, String serviceName, String productId, Context context)"
  nameWithType: "Products.getEntityTagWithResponse(String resourceGroupName, String serviceName, String productId, Context context)"
  summary: "Gets the entity state (Etag) version of the product specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Product identifier. Must be unique in the current API Management service instance."
    name: "productId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ProductsGetEntityTagResponse getEntityTagWithResponse(String resourceGroupName, String serviceName, String productId, Context context)"
  desc: "Gets the entity state (Etag) version of the product specified by its identifier."
  returns:
    description: "the entity state (Etag) version of the product specified by its identifier."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.ProductsGetEntityTagResponse?alt=com.azure.resourcemanager.apimanagement.models.ProductsGetEntityTagResponse&text=ProductsGetEntityTagResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.Products.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Products.getWithResponse(String resourceGroupName, String serviceName, String productId, Context context)"
  name: "getWithResponse(String resourceGroupName, String serviceName, String productId, Context context)"
  nameWithType: "Products.getWithResponse(String resourceGroupName, String serviceName, String productId, Context context)"
  summary: "Gets the details of the product specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Product identifier. Must be unique in the current API Management service instance."
    name: "productId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ProductContract> getWithResponse(String resourceGroupName, String serviceName, String productId, Context context)"
  desc: "Gets the details of the product specified by its identifier."
  returns:
    description: "the details of the product specified by its identifier."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.models.ProductContract?alt=com.azure.resourcemanager.apimanagement.models.ProductContract&text=ProductContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Products.listByService(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Products.listByService(String resourceGroupName, String serviceName)"
  name: "listByService(String resourceGroupName, String serviceName)"
  nameWithType: "Products.listByService(String resourceGroupName, String serviceName)"
  summary: "Lists a collection of products in the specified service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ProductContract> listByService(String resourceGroupName, String serviceName)"
  desc: "Lists a collection of products in the specified service instance."
  returns:
    description: "paged Products list representation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.models.ProductContract?alt=com.azure.resourcemanager.apimanagement.models.ProductContract&text=ProductContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Products.listByService(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Products.listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Boolean expandGroups, String tags, Context context)"
  name: "listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Boolean expandGroups, String tags, Context context)"
  nameWithType: "Products.listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Boolean expandGroups, String tags, Context context)"
  summary: "Lists a collection of products in the specified service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "| Field | Usage | Supported operators | Supported functions\n     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq,\n     ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| displayName | filter | ge, le, eq, ne,\n     gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| description | filter | ge, le, eq, ne, gt,\n     lt | substringof, contains, startswith, endswith |&lt;/br&gt;| terms | filter | ge, le, eq, ne, gt, lt |\n     substringof, contains, startswith, endswith |&lt;/br&gt;| state | filter | eq | |&lt;/br&gt;| groups | expand\n     | | |&lt;/br&gt;."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Number of records to skip."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "When set to true, the response contains an array of groups that have visibility to the\n     product. The default is false."
    name: "expandGroups"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Products which are part of a specific tag."
    name: "tags"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ProductContract> listByService(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Boolean expandGroups, String tags, Context context)"
  desc: "Lists a collection of products in the specified service instance."
  returns:
    description: "paged Products list representation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.models.ProductContract?alt=com.azure.resourcemanager.apimanagement.models.ProductContract&text=ProductContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Products.listByTags(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Products.listByTags(String resourceGroupName, String serviceName)"
  name: "listByTags(String resourceGroupName, String serviceName)"
  nameWithType: "Products.listByTags(String resourceGroupName, String serviceName)"
  summary: "Lists a collection of products associated with tags."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<TagResourceContract> listByTags(String resourceGroupName, String serviceName)"
  desc: "Lists a collection of products associated with tags."
  returns:
    description: "paged Tag list representation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.models.TagResourceContract?alt=com.azure.resourcemanager.apimanagement.models.TagResourceContract&text=TagResourceContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.apimanagement.models.Products.listByTags(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Boolean,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.apimanagement.models.Products.listByTags(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Boolean includeNotTaggedProducts, Context context)"
  name: "listByTags(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Boolean includeNotTaggedProducts, Context context)"
  nameWithType: "Products.listByTags(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Boolean includeNotTaggedProducts, Context context)"
  summary: "Lists a collection of products associated with tags."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "| Field | Usage | Supported operators | Supported functions\n     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq,\n     ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| displayName | filter | ge, le, eq, ne,\n     gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| description | filter | ge, le, eq, ne, gt,\n     lt | substringof, contains, startswith, endswith |&lt;/br&gt;| terms | filter | ge, le, eq, ne, gt, lt |\n     substringof, contains, startswith, endswith |&lt;/br&gt;| state | filter | eq | substringof, contains,\n     startswith, endswith |&lt;/br&gt;."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Number of records to skip."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include not tagged Products."
    name: "includeNotTaggedProducts"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<TagResourceContract> listByTags(String resourceGroupName, String serviceName, String filter, Integer top, Integer skip, Boolean includeNotTaggedProducts, Context context)"
  desc: "Lists a collection of products associated with tags."
  returns:
    description: "paged Tag list representation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.apimanagement.models.TagResourceContract?alt=com.azure.resourcemanager.apimanagement.models.TagResourceContract&text=TagResourceContract\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Products."
metadata: {}
package: "com.azure.resourcemanager.apimanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.3
