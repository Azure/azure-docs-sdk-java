### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.SerializerProvider.findTypedValueSerializer*"
fullName: "com.fasterxml.jackson.databind.SerializerProvider.findTypedValueSerializer"
name: "findTypedValueSerializer"
nameWithType: "SerializerProvider.findTypedValueSerializer"
members:
- uid: "com.fasterxml.jackson.databind.SerializerProvider.findTypedValueSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.BeanProperty)"
  fullName: "com.fasterxml.jackson.databind.SerializerProvider.findTypedValueSerializer(JavaType valueType, boolean cache, BeanProperty property)"
  name: "findTypedValueSerializer(JavaType valueType, boolean cache, BeanProperty property)"
  nameWithType: "SerializerProvider.findTypedValueSerializer(JavaType valueType, boolean cache, BeanProperty property)"
  summary: "Method called to locate regular serializer, matching type serializer, and if both found, wrap them in a serializer that calls both in correct sequence. This method is currently only used for root-level serializer handling to allow for simpler caching. A call can always be replaced by equivalent calls to access serializer and type serializer separately."
  parameters:
  - description: "Declared type of value being serialized (which may not\n    be actual runtime type); used for finding both value serializer and\n    type serializer to use for adding polymorphic type (if any)"
    name: "valueType"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether resulting value serializer should be cached or not; this is just\n    a hint"
    name: "cache"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "When creating secondary serializers, property for which\n   serializer is needed: annotations of the property (or bean that contains it)\n   may be checked to create contextual serializers."
    name: "property"
    type: "<xref href=\"com.fasterxml.jackson.databind.BeanProperty?alt=com.fasterxml.jackson.databind.BeanProperty&text=BeanProperty\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonSerializer<Object> findTypedValueSerializer(JavaType valueType, boolean cache, BeanProperty property)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.fasterxml.jackson.databind.SerializerProvider.findTypedValueSerializer(java.lang.Class<?>,boolean,com.fasterxml.jackson.databind.BeanProperty)"
  fullName: "com.fasterxml.jackson.databind.SerializerProvider.findTypedValueSerializer(Class<?> valueType, boolean cache, BeanProperty property)"
  name: "findTypedValueSerializer(Class<?> valueType, boolean cache, BeanProperty property)"
  nameWithType: "SerializerProvider.findTypedValueSerializer(Class<?> valueType, boolean cache, BeanProperty property)"
  summary: "Method called to locate regular serializer, matching type serializer, and if both found, wrap them in a serializer that calls both in correct sequence. This method is currently only used for root-level serializer handling to allow for simpler caching. A call can always be replaced by equivalent calls to access serializer and type serializer separately."
  parameters:
  - description: "Type for purpose of locating a serializer; usually dynamic\n   runtime type, but can also be static declared type, depending on configuration"
    name: "valueType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - description: "Whether resulting value serializer should be cached or not; this is just\n    a hint"
    name: "cache"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "When creating secondary serializers, property for which\n   serializer is needed: annotations of the property (or bean that contains it)\n   may be checked to create contextual serializers."
    name: "property"
    type: "<xref href=\"com.fasterxml.jackson.databind.BeanProperty?alt=com.fasterxml.jackson.databind.BeanProperty&text=BeanProperty\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonSerializer<Object> findTypedValueSerializer(Class<?> valueType, boolean cache, BeanProperty property)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
