### YamlMime:JavaType
uid: "com.azure.resourcemanager.appcontainers.models.CertificateProperties"
fullName: "com.azure.resourcemanager.appcontainers.models.CertificateProperties"
name: "CertificateProperties"
nameWithType: "CertificateProperties"
summary: "Certificate resource specific properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CertificateProperties"
constructors:
- uid: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.CertificateProperties()"
  fullName: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.CertificateProperties()"
  name: "CertificateProperties()"
  nameWithType: "CertificateProperties.CertificateProperties()"
  syntax: "public CertificateProperties()"
methods:
- uid: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.expirationDate()"
  fullName: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.expirationDate()"
  name: "expirationDate()"
  nameWithType: "CertificateProperties.expirationDate()"
  summary: "Get the expiration<wbr>Date property: Certificate expiration date."
  syntax: "public OffsetDateTime expirationDate()"
  desc: "Get the expirationDate property: Certificate expiration date."
  returns:
    description: "the expirationDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.issueDate()"
  fullName: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.issueDate()"
  name: "issueDate()"
  nameWithType: "CertificateProperties.issueDate()"
  summary: "Get the issue<wbr>Date property: Certificate issue Date."
  syntax: "public OffsetDateTime issueDate()"
  desc: "Get the issueDate property: Certificate issue Date."
  returns:
    description: "the issueDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.issuer()"
  fullName: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.issuer()"
  name: "issuer()"
  nameWithType: "CertificateProperties.issuer()"
  summary: "Get the issuer property: Certificate issuer."
  syntax: "public String issuer()"
  desc: "Get the issuer property: Certificate issuer."
  returns:
    description: "the issuer value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.password()"
  fullName: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.password()"
  name: "password()"
  nameWithType: "CertificateProperties.password()"
  summary: "Get the password property: Certificate password."
  syntax: "public String password()"
  desc: "Get the password property: Certificate password."
  returns:
    description: "the password value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "CertificateProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Provisioning state of the certificate."
  syntax: "public CertificateProvisioningState provisioningState()"
  desc: "Get the provisioningState property: Provisioning state of the certificate."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.CertificateProvisioningState?alt=com.azure.resourcemanager.appcontainers.models.CertificateProvisioningState&text=CertificateProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.publicKeyHash()"
  fullName: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.publicKeyHash()"
  name: "publicKeyHash()"
  nameWithType: "CertificateProperties.publicKeyHash()"
  summary: "Get the public<wbr>Key<wbr>Hash property: Public key hash."
  syntax: "public String publicKeyHash()"
  desc: "Get the publicKeyHash property: Public key hash."
  returns:
    description: "the publicKeyHash value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.subjectName()"
  fullName: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.subjectName()"
  name: "subjectName()"
  nameWithType: "CertificateProperties.subjectName()"
  summary: "Get the subject<wbr>Name property: Subject name of the certificate."
  syntax: "public String subjectName()"
  desc: "Get the subjectName property: Subject name of the certificate."
  returns:
    description: "the subjectName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.thumbprint()"
  fullName: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.thumbprint()"
  name: "thumbprint()"
  nameWithType: "CertificateProperties.thumbprint()"
  summary: "Get the thumbprint property: Certificate thumbprint."
  syntax: "public String thumbprint()"
  desc: "Get the thumbprint property: Certificate thumbprint."
  returns:
    description: "the thumbprint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.valid()"
  fullName: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.valid()"
  name: "valid()"
  nameWithType: "CertificateProperties.valid()"
  summary: "Get the valid property: Is the certificate valid?."
  syntax: "public Boolean valid()"
  desc: "Get the valid property: Is the certificate valid?."
  returns:
    description: "the valid value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.validate()"
  fullName: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.validate()"
  name: "validate()"
  nameWithType: "CertificateProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.value()"
  fullName: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.value()"
  name: "value()"
  nameWithType: "CertificateProperties.value()"
  summary: "Get the value property: PFX or PEM blob."
  syntax: "public byte[] value()"
  desc: "Get the value property: PFX or PEM blob."
  returns:
    description: "the value value."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.withPassword(java.lang.String)"
  fullName: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.withPassword(String password)"
  name: "withPassword(String password)"
  nameWithType: "CertificateProperties.withPassword(String password)"
  summary: "Set the password property: Certificate password."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificateProperties withPassword(String password)"
  desc: "Set the password property: Certificate password."
  returns:
    description: "the CertificateProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.CertificateProperties?alt=com.azure.resourcemanager.appcontainers.models.CertificateProperties&text=CertificateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.withValue(byte[])"
  fullName: "com.azure.resourcemanager.appcontainers.models.CertificateProperties.withValue(byte[] value)"
  name: "withValue(byte[] value)"
  nameWithType: "CertificateProperties.withValue(byte[] value)"
  summary: "Set the value property: PFX or PEM blob."
  parameters:
  - description: "the value value to set."
    name: "value"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public CertificateProperties withValue(byte[] value)"
  desc: "Set the value property: PFX or PEM blob."
  returns:
    description: "the CertificateProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.CertificateProperties?alt=com.azure.resourcemanager.appcontainers.models.CertificateProperties&text=CertificateProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Certificate resource specific properties."
metadata: {}
package: "com.azure.resourcemanager.appcontainers.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appcontainers:1.0.0-beta.3
