### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.appservice.WebApp.Definition
  id: Definition
  parent: com.microsoft.azure.management.appservice
  href: com.microsoft.azure.management.appservice.WebApp.Definition.yml
  langs:
  - java
  name: WebApp.Definition
  nameWithType: WebApp.Definition
  fullName: com.microsoft.azure.management.appservice.WebApp.Definition
  type: Interface
  source:
    remote:
      path: azure-mgmt-appservice/src/main/java/com/microsoft/azure/management/appservice/WebApp.java
      branch: v1.3.0
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-appservice/src/main/java/com/microsoft/azure/management/appservice/WebApp.java
    startLine: 38
  package: com.microsoft.azure.management.appservice
  summary: "<p>Container interface for all the definitions that need to be implemented. </p>"
  syntax:
    content: public interface Definition extends WebApp.DefinitionStages.Blank,WebApp.DefinitionStages.NewAppServicePlanWithGroup,WebApp.DefinitionStages.WithNewAppServicePlan,WebApp.DefinitionStages.WithDockerContainerImage,WebApp.DefinitionStages.WithCredentials,WebApp.DefinitionStages.WithStartUpCommand,WebApp.DefinitionStages.WithCreate
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
  - com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  - com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage.withBuiltInImage(RuntimeStack)
  - com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCredentials.withCredentials(String,String)
  - com.microsoft.azure.management.appservice.WebApp.DefinitionStages.Blank.withExistingLinuxPlan(AppServicePlan)
  - com.microsoft.azure.management.appservice.WebApp.DefinitionStages.Blank.withExistingWindowsPlan(AppServicePlan)
  - com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewFreeAppServicePlan()
  - com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewLinuxPlan(PricingTier)
  - com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewLinuxPlan(Creatable<AppServicePlan>)
  - com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewSharedAppServicePlan()
  - com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewWindowsPlan(PricingTier)
  - com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewWindowsPlan(Creatable<AppServicePlan>)
  - com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage.withPrivateDockerHubImage(String)
  - com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage.withPrivateRegistryImage(String,String)
  - com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage.withPublicDockerHubImage(String)
  - com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithStartUpCommand.withStartUpCommand(String)
references:
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: create()
  nameWithType: Creatable<T>.create()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.create()
  type: Method
  summary: "<p>Execute the create request.</p>\r\n<p></p>"
  syntax:
    content: public T create()
    return:
      type: 8ce1ecb9
      description: <p>the create resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: createAsync(final ServiceCallback<T> callback)
  nameWithType: Creatable<T>.createAsync(final ServiceCallback<T> callback)
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync(final ServiceCallback<T> callback)
  type: Method
  summary: "<p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<T> createAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback to handle success and failure </p>
    return:
      type: c0371a4e
      description: <p>a handle to cancel the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: createAsync()
  nameWithType: Creatable<T>.createAsync()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync()
  type: Method
  summary: "<p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Indexable> createAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.management.resources.fluentcore.model.Indexablea08ddfce
      description: <p>an observable of the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Indexable
  href: com.microsoft.azure.management.resources.fluentcore.model.Indexable.yml
  name: key()
  nameWithType: Indexable.key()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>the index key. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.yml
  name: name()
  nameWithType: HasName.name()
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  type: Method
  syntax:
    content: public String name()
    return:
      type: "26831127"
      description: <p>the name of the resource </p>
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage.withBuiltInImage(RuntimeStack)
  parent: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage.yml
  name: withBuiltInImage(RuntimeStack runtimeStack)
  nameWithType: WebApp.DefinitionStages.WithDockerContainerImage.withBuiltInImage(RuntimeStack runtimeStack)
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage.withBuiltInImage(RuntimeStack runtimeStack)
  type: Method
  summary: "<p>Specifies the docker container image to be a built in one. </p>"
  syntax:
    content: public WithCreate withBuiltInImage(RuntimeStack runtimeStack)
    parameters:
    - id: runtimeStack
      type: com.microsoft.azure.management.appservice.RuntimeStack
      description: <p>the runtime stack installed on the image </p>
    return:
      type: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCredentials.withCredentials(String,String)
  parent: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCredentials
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCredentials.yml
  name: withCredentials(String username, String password)
  nameWithType: WebApp.DefinitionStages.WithCredentials.withCredentials(String username, String password)
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCredentials.withCredentials(String username, String password)
  type: Method
  summary: "<p>Specifies the username and password for Docker Hub or the docker registry. </p>"
  syntax:
    content: public WithStartUpCommand withCredentials(String username, String password)
    parameters:
    - id: username
      type: "26831127"
      description: <p>the username for Docker Hub or the docker registry </p>
    - id: password
      type: "26831127"
      description: <p>the password for Docker Hub or the docker registry </p>
    return:
      type: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithStartUpCommand
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.Blank.withExistingLinuxPlan(AppServicePlan)
  parent: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.Blank
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.Blank.yml
  name: withExistingLinuxPlan(AppServicePlan appServicePlan)
  nameWithType: WebApp.DefinitionStages.Blank.withExistingLinuxPlan(AppServicePlan appServicePlan)
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.Blank.withExistingLinuxPlan(AppServicePlan appServicePlan)
  type: Method
  summary: "<p>Uses an existing app service plan for the web app. </p>"
  syntax:
    content: public ExistingLinuxPlanWithGroup withExistingLinuxPlan(AppServicePlan appServicePlan)
    parameters:
    - id: appServicePlan
      type: com.microsoft.azure.management.appservice.AppServicePlan
      description: <p>the existing app service plan </p>
    return:
      type: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.ExistingLinuxPlanWithGroup
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.Blank.withExistingWindowsPlan(AppServicePlan)
  parent: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.Blank
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.Blank.yml
  name: withExistingWindowsPlan(AppServicePlan appServicePlan)
  nameWithType: WebApp.DefinitionStages.Blank.withExistingWindowsPlan(AppServicePlan appServicePlan)
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.Blank.withExistingWindowsPlan(AppServicePlan appServicePlan)
  type: Method
  summary: "<p>Uses an existing app service plan for the web app. </p>"
  syntax:
    content: public ExistingWindowsPlanWithGroup withExistingWindowsPlan(AppServicePlan appServicePlan)
    parameters:
    - id: appServicePlan
      type: com.microsoft.azure.management.appservice.AppServicePlan
      description: <p>the existing app service plan </p>
    return:
      type: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.ExistingWindowsPlanWithGroup
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewFreeAppServicePlan()
  parent: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.yml
  name: withNewFreeAppServicePlan()
  nameWithType: WebApp.DefinitionStages.WithNewAppServicePlan.withNewFreeAppServicePlan()
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewFreeAppServicePlan()
  type: Method
  summary: "<p>Creates a new free app service plan. This will fail if there are 10 or more free plans in the current subscription.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withNewFreeAppServicePlan()
    return:
      type: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewLinuxPlan(PricingTier)
  parent: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.yml
  name: withNewLinuxPlan(PricingTier pricingTier)
  nameWithType: WebApp.DefinitionStages.WithNewAppServicePlan.withNewLinuxPlan(PricingTier pricingTier)
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewLinuxPlan(PricingTier pricingTier)
  type: Method
  summary: "<p>Creates a new app service plan to use.</p>\r\n<p></p>"
  syntax:
    content: public WithDockerContainerImage withNewLinuxPlan(PricingTier pricingTier)
    parameters:
    - id: pricingTier
      type: com.microsoft.azure.management.appservice.PricingTier
      description: <p>the sku of the app service plan </p>
    return:
      type: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewLinuxPlan(Creatable<AppServicePlan>)
  parent: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.yml
  name: withNewLinuxPlan(Creatable<AppServicePlan> appServicePlanCreatable)
  nameWithType: WebApp.DefinitionStages.WithNewAppServicePlan.withNewLinuxPlan(Creatable<AppServicePlan> appServicePlanCreatable)
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewLinuxPlan(Creatable<AppServicePlan> appServicePlanCreatable)
  type: Method
  summary: "<p>Creates a new app service plan to use.</p>\r\n<p></p>"
  syntax:
    content: public WithDockerContainerImage withNewLinuxPlan(Creatable<AppServicePlan> appServicePlanCreatable)
    parameters:
    - id: appServicePlanCreatable
      type: com.microsoft.azure.management.resources.fluentcore.model.Creatable78504a52com.microsoft.azure.management.appservice.AppServicePlana08ddfce
      description: <p>the new app service plan creatable </p>
    return:
      type: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewSharedAppServicePlan()
  parent: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.yml
  name: withNewSharedAppServicePlan()
  nameWithType: WebApp.DefinitionStages.WithNewAppServicePlan.withNewSharedAppServicePlan()
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewSharedAppServicePlan()
  type: Method
  summary: "<p>Creates a new shared app service plan.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withNewSharedAppServicePlan()
    return:
      type: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewWindowsPlan(PricingTier)
  parent: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.yml
  name: withNewWindowsPlan(PricingTier pricingTier)
  nameWithType: WebApp.DefinitionStages.WithNewAppServicePlan.withNewWindowsPlan(PricingTier pricingTier)
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewWindowsPlan(PricingTier pricingTier)
  type: Method
  summary: "<p>Creates a new app service plan to use.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withNewWindowsPlan(PricingTier pricingTier)
    parameters:
    - id: pricingTier
      type: com.microsoft.azure.management.appservice.PricingTier
      description: <p>the sku of the app service plan </p>
    return:
      type: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewWindowsPlan(Creatable<AppServicePlan>)
  parent: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.yml
  name: withNewWindowsPlan(Creatable<AppServicePlan> appServicePlanCreatable)
  nameWithType: WebApp.DefinitionStages.WithNewAppServicePlan.withNewWindowsPlan(Creatable<AppServicePlan> appServicePlanCreatable)
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.withNewWindowsPlan(Creatable<AppServicePlan> appServicePlanCreatable)
  type: Method
  summary: "<p>Creates a new app service plan to use.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withNewWindowsPlan(Creatable<AppServicePlan> appServicePlanCreatable)
    parameters:
    - id: appServicePlanCreatable
      type: com.microsoft.azure.management.resources.fluentcore.model.Creatable78504a52com.microsoft.azure.management.appservice.AppServicePlana08ddfce
      description: <p>the new app service plan creatable </p>
    return:
      type: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage.withPrivateDockerHubImage(String)
  parent: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage.yml
  name: withPrivateDockerHubImage(String imageAndTag)
  nameWithType: WebApp.DefinitionStages.WithDockerContainerImage.withPrivateDockerHubImage(String imageAndTag)
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage.withPrivateDockerHubImage(String imageAndTag)
  type: Method
  summary: "<p>Specifies the docker container image to be one from Docker Hub. </p>"
  syntax:
    content: public WithCredentials withPrivateDockerHubImage(String imageAndTag)
    parameters:
    - id: imageAndTag
      type: "26831127"
      description: <p>image and optional tag (eg 'image:tag') </p>
    return:
      type: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCredentials
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage.withPrivateRegistryImage(String,String)
  parent: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage.yml
  name: withPrivateRegistryImage(String imageAndTag, String serverUrl)
  nameWithType: WebApp.DefinitionStages.WithDockerContainerImage.withPrivateRegistryImage(String imageAndTag, String serverUrl)
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage.withPrivateRegistryImage(String imageAndTag, String serverUrl)
  type: Method
  summary: "<p>Specifies the docker container image to be one from a private registry. </p>"
  syntax:
    content: public WithCredentials withPrivateRegistryImage(String imageAndTag, String serverUrl)
    parameters:
    - id: imageAndTag
      type: "26831127"
      description: <p>image and optional tag (eg 'image:tag') </p>
    - id: serverUrl
      type: "26831127"
      description: <p>the URL to the private registry server </p>
    return:
      type: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCredentials
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage.withPublicDockerHubImage(String)
  parent: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage.yml
  name: withPublicDockerHubImage(String imageAndTag)
  nameWithType: WebApp.DefinitionStages.WithDockerContainerImage.withPublicDockerHubImage(String imageAndTag)
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage.withPublicDockerHubImage(String imageAndTag)
  type: Method
  summary: "<p>Specifies the docker container image to be one from Docker Hub. </p>"
  syntax:
    content: public WithStartUpCommand withPublicDockerHubImage(String imageAndTag)
    parameters:
    - id: imageAndTag
      type: "26831127"
      description: <p>image and optional tag (eg 'image:tag') </p>
    return:
      type: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithStartUpCommand
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithStartUpCommand.withStartUpCommand(String)
  parent: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithStartUpCommand
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithStartUpCommand.yml
  name: withStartUpCommand(String startUpCommand)
  nameWithType: WebApp.DefinitionStages.WithStartUpCommand.withStartUpCommand(String startUpCommand)
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithStartUpCommand.withStartUpCommand(String startUpCommand)
  type: Method
  summary: "<p>Specifies the startup command. </p>"
  syntax:
    content: public WithCreate withStartUpCommand(String startUpCommand)
    parameters:
    - id: startUpCommand
      type: "26831127"
      description: <p>startup command to replace "CMD" in Dockerfile </p>
    return:
      type: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.Blank
  parent: com.microsoft.azure.management.appservice
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.Blank.yml
  name: WebApp.DefinitionStages.Blank
  nameWithType: WebApp.DefinitionStages.Blank
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.Blank
  type: Interface
  summary: "<p>The first stage of the web app definition. </p>"
  syntax:
    content: public interface Blank
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.NewAppServicePlanWithGroup
  parent: com.microsoft.azure.management.appservice
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.NewAppServicePlanWithGroup.yml
  name: WebApp.DefinitionStages.NewAppServicePlanWithGroup
  nameWithType: WebApp.DefinitionStages.NewAppServicePlanWithGroup
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.NewAppServicePlanWithGroup
  type: Interface
  summary: "<p>A web app definition allowing resource group to be specified when an existing app service plan is used. </p>"
  syntax:
    content: public interface NewAppServicePlanWithGroup
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan
  parent: com.microsoft.azure.management.appservice
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan.yml
  name: WebApp.DefinitionStages.WithNewAppServicePlan
  nameWithType: WebApp.DefinitionStages.WithNewAppServicePlan
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithNewAppServicePlan
  type: Interface
  summary: "<p>A web app definition allowing app service plan to be set. </p>"
  syntax:
    content: public interface WithNewAppServicePlan
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage
  parent: com.microsoft.azure.management.appservice
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage.yml
  name: WebApp.DefinitionStages.WithDockerContainerImage
  nameWithType: WebApp.DefinitionStages.WithDockerContainerImage
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithDockerContainerImage
  type: Interface
  summary: "<p>A web app definition allowing docker image source to be specified. </p>"
  syntax:
    content: public interface WithDockerContainerImage
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCredentials
  parent: com.microsoft.azure.management.appservice
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCredentials.yml
  name: WebApp.DefinitionStages.WithCredentials
  nameWithType: WebApp.DefinitionStages.WithCredentials
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCredentials
  type: Interface
  summary: "<p>A web app definition allowing docker registry credentials to be set. </p>"
  syntax:
    content: public interface WithCredentials
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithStartUpCommand
  parent: com.microsoft.azure.management.appservice
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithStartUpCommand.yml
  name: WebApp.DefinitionStages.WithStartUpCommand
  nameWithType: WebApp.DefinitionStages.WithStartUpCommand
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithStartUpCommand
  type: Interface
  summary: "<p>A web app definition allowing docker startup command to be specified. This will replace the \"CMD\" section in the Dockerfile. </p>"
  syntax:
    content: public interface WithStartUpCommand
- uid: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCreate
  parent: com.microsoft.azure.management.appservice
  href: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCreate.yml
  name: WebApp.DefinitionStages.WithCreate
  nameWithType: WebApp.DefinitionStages.WithCreate
  fullName: com.microsoft.azure.management.appservice.WebApp.DefinitionStages.WithCreate
  type: Interface
  summary: "<p>A site definition with sufficient inputs to create a new web app / deployments slot in the cloud, but exposing additional optional inputs to specify. </p>"
  syntax:
    content: public interface WithCreate
