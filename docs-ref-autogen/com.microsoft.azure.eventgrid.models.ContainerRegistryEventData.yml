### YamlMime:JavaType
uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData"
fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData"
name: "ContainerRegistryEventData"
nameWithType: "ContainerRegistryEventData"
summary: "The content of the event request message."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ContainerRegistryEventData"
constructors:
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.ContainerRegistryEventData()"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.ContainerRegistryEventData()"
  name: "ContainerRegistryEventData()"
  nameWithType: "ContainerRegistryEventData.ContainerRegistryEventData()"
  syntax: "public ContainerRegistryEventData()"
methods:
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.action()"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.action()"
  name: "action()"
  nameWithType: "ContainerRegistryEventData.action()"
  summary: "Get the action that encompasses the provided event."
  syntax: "public String action()"
  desc: "Get the action that encompasses the provided event."
  returns:
    description: "the action value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.actor()"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.actor()"
  name: "actor()"
  nameWithType: "ContainerRegistryEventData.actor()"
  summary: "Get the agent that initiated the event."
  syntax: "public ContainerRegistryEventActor actor()"
  desc: "Get the agent that initiated the event. For most situations, this could be from the authorization context of the request."
  returns:
    description: "the actor value"
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.ContainerRegistryEventActor?alt=com.microsoft.azure.eventgrid.models.ContainerRegistryEventActor&text=ContainerRegistryEventActor\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.id()"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.id()"
  name: "id()"
  nameWithType: "ContainerRegistryEventData.id()"
  summary: "Get the event ID."
  syntax: "public String id()"
  desc: "Get the event ID."
  returns:
    description: "the id value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.request()"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.request()"
  name: "request()"
  nameWithType: "ContainerRegistryEventData.request()"
  summary: "Get the request that generated the event."
  syntax: "public ContainerRegistryEventRequest request()"
  desc: "Get the request that generated the event."
  returns:
    description: "the request value"
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.ContainerRegistryEventRequest?alt=com.microsoft.azure.eventgrid.models.ContainerRegistryEventRequest&text=ContainerRegistryEventRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.source()"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.source()"
  name: "source()"
  nameWithType: "ContainerRegistryEventData.source()"
  summary: "Get the registry node that generated the event."
  syntax: "public ContainerRegistryEventSource source()"
  desc: "Get the registry node that generated the event. Put differently, while the actor initiates the event, the source generates it."
  returns:
    description: "the source value"
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource?alt=com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource&text=ContainerRegistryEventSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.target()"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.target()"
  name: "target()"
  nameWithType: "ContainerRegistryEventData.target()"
  summary: "Get the target of the event."
  syntax: "public ContainerRegistryEventTarget target()"
  desc: "Get the target of the event."
  returns:
    description: "the target value"
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.ContainerRegistryEventTarget?alt=com.microsoft.azure.eventgrid.models.ContainerRegistryEventTarget&text=ContainerRegistryEventTarget\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.timestamp()"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.timestamp()"
  name: "timestamp()"
  nameWithType: "ContainerRegistryEventData.timestamp()"
  summary: "Get the time at which the event occurred."
  syntax: "public DateTime timestamp()"
  desc: "Get the time at which the event occurred."
  returns:
    description: "the timestamp value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.withAction(java.lang.String)"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.withAction(String action)"
  name: "withAction(String action)"
  nameWithType: "ContainerRegistryEventData.withAction(String action)"
  summary: "Set the action that encompasses the provided event."
  parameters:
  - description: "the action value to set"
    name: "action"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerRegistryEventData withAction(String action)"
  desc: "Set the action that encompasses the provided event."
  returns:
    description: "the ContainerRegistryEventData object itself."
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.ContainerRegistryEventData?alt=com.microsoft.azure.eventgrid.models.ContainerRegistryEventData&text=ContainerRegistryEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.withActor(com.microsoft.azure.eventgrid.models.ContainerRegistryEventActor)"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.withActor(ContainerRegistryEventActor actor)"
  name: "withActor(ContainerRegistryEventActor actor)"
  nameWithType: "ContainerRegistryEventData.withActor(ContainerRegistryEventActor actor)"
  summary: "Set the agent that initiated the event."
  parameters:
  - description: "the actor value to set"
    name: "actor"
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.ContainerRegistryEventActor?alt=com.microsoft.azure.eventgrid.models.ContainerRegistryEventActor&text=ContainerRegistryEventActor\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerRegistryEventData withActor(ContainerRegistryEventActor actor)"
  desc: "Set the agent that initiated the event. For most situations, this could be from the authorization context of the request."
  returns:
    description: "the ContainerRegistryEventData object itself."
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.ContainerRegistryEventData?alt=com.microsoft.azure.eventgrid.models.ContainerRegistryEventData&text=ContainerRegistryEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.withId(java.lang.String)"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.withId(String id)"
  name: "withId(String id)"
  nameWithType: "ContainerRegistryEventData.withId(String id)"
  summary: "Set the event ID."
  parameters:
  - description: "the id value to set"
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerRegistryEventData withId(String id)"
  desc: "Set the event ID."
  returns:
    description: "the ContainerRegistryEventData object itself."
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.ContainerRegistryEventData?alt=com.microsoft.azure.eventgrid.models.ContainerRegistryEventData&text=ContainerRegistryEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.withRequest(com.microsoft.azure.eventgrid.models.ContainerRegistryEventRequest)"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.withRequest(ContainerRegistryEventRequest request)"
  name: "withRequest(ContainerRegistryEventRequest request)"
  nameWithType: "ContainerRegistryEventData.withRequest(ContainerRegistryEventRequest request)"
  summary: "Set the request that generated the event."
  parameters:
  - description: "the request value to set"
    name: "request"
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.ContainerRegistryEventRequest?alt=com.microsoft.azure.eventgrid.models.ContainerRegistryEventRequest&text=ContainerRegistryEventRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerRegistryEventData withRequest(ContainerRegistryEventRequest request)"
  desc: "Set the request that generated the event."
  returns:
    description: "the ContainerRegistryEventData object itself."
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.ContainerRegistryEventData?alt=com.microsoft.azure.eventgrid.models.ContainerRegistryEventData&text=ContainerRegistryEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.withSource(com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource)"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.withSource(ContainerRegistryEventSource source)"
  name: "withSource(ContainerRegistryEventSource source)"
  nameWithType: "ContainerRegistryEventData.withSource(ContainerRegistryEventSource source)"
  summary: "Set the registry node that generated the event."
  parameters:
  - description: "the source value to set"
    name: "source"
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource?alt=com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource&text=ContainerRegistryEventSource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerRegistryEventData withSource(ContainerRegistryEventSource source)"
  desc: "Set the registry node that generated the event. Put differently, while the actor initiates the event, the source generates it."
  returns:
    description: "the ContainerRegistryEventData object itself."
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.ContainerRegistryEventData?alt=com.microsoft.azure.eventgrid.models.ContainerRegistryEventData&text=ContainerRegistryEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.withTarget(com.microsoft.azure.eventgrid.models.ContainerRegistryEventTarget)"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.withTarget(ContainerRegistryEventTarget target)"
  name: "withTarget(ContainerRegistryEventTarget target)"
  nameWithType: "ContainerRegistryEventData.withTarget(ContainerRegistryEventTarget target)"
  summary: "Set the target of the event."
  parameters:
  - description: "the target value to set"
    name: "target"
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.ContainerRegistryEventTarget?alt=com.microsoft.azure.eventgrid.models.ContainerRegistryEventTarget&text=ContainerRegistryEventTarget\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerRegistryEventData withTarget(ContainerRegistryEventTarget target)"
  desc: "Set the target of the event."
  returns:
    description: "the ContainerRegistryEventData object itself."
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.ContainerRegistryEventData?alt=com.microsoft.azure.eventgrid.models.ContainerRegistryEventData&text=ContainerRegistryEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.withTimestamp(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventData.withTimestamp(DateTime timestamp)"
  name: "withTimestamp(DateTime timestamp)"
  nameWithType: "ContainerRegistryEventData.withTimestamp(DateTime timestamp)"
  summary: "Set the time at which the event occurred."
  parameters:
  - description: "the timestamp value to set"
    name: "timestamp"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerRegistryEventData withTimestamp(DateTime timestamp)"
  desc: "Set the time at which the event occurred."
  returns:
    description: "the ContainerRegistryEventData object itself."
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.ContainerRegistryEventData?alt=com.microsoft.azure.eventgrid.models.ContainerRegistryEventData&text=ContainerRegistryEventData\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The content of the event request message."
metadata: {}
package: "com.microsoft.azure.eventgrid.models"
artifact: com.microsoft.azure:azure-eventgrid:1.3.0
