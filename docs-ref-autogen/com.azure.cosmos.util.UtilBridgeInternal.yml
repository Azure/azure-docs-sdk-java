### YamlMime:JavaType
uid: "com.azure.cosmos.util.UtilBridgeInternal"
fullName: "com.azure.cosmos.util.UtilBridgeInternal"
name: "UtilBridgeInternal"
nameWithType: "UtilBridgeInternal"
summary: "DO NOT USE."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class UtilBridgeInternal"
methods:
- uid: "com.azure.cosmos.util.UtilBridgeInternal.<T>createCosmosPagedFlux(java.util.function.Function<com.azure.cosmos.implementation.CosmosPagedFluxOptions,reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>>)"
  fullName: "com.azure.cosmos.util.UtilBridgeInternal.<T>createCosmosPagedFlux(Function<CosmosPagedFluxOptions,Flux<FeedResponse<T>>> pagedFluxOptionsFluxFunction)"
  name: "<T>createCosmosPagedFlux(Function<CosmosPagedFluxOptions,Flux<FeedResponse<T>>> pagedFluxOptionsFluxFunction)"
  nameWithType: "UtilBridgeInternal.<T>createCosmosPagedFlux(Function<CosmosPagedFluxOptions,Flux<FeedResponse<T>>> pagedFluxOptionsFluxFunction)"
  modifiers:
  - "static"
  parameters:
  - name: "pagedFluxOptionsFluxFunction"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.CosmosPagedFluxOptions?alt=com.azure.cosmos.implementation.CosmosPagedFluxOptions&text=CosmosPagedFluxOptions\" data-throw-if-not-resolved=\"False\" />,<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.FeedResponse?alt=com.azure.cosmos.models.FeedResponse&text=FeedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
  syntax: "public static CosmosPagedFlux<T> <T>createCosmosPagedFlux(Function<CosmosPagedFluxOptions,Flux<FeedResponse<T>>> pagedFluxOptionsFluxFunction)"
  returns:
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedFlux?alt=com.azure.cosmos.util.CosmosPagedFlux&text=CosmosPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.util.UtilBridgeInternal.<T>createCosmosPagedIterable(com.azure.cosmos.util.CosmosPagedFlux<T>)"
  fullName: "com.azure.cosmos.util.UtilBridgeInternal.<T>createCosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux)"
  name: "<T>createCosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux)"
  nameWithType: "UtilBridgeInternal.<T>createCosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux)"
  modifiers:
  - "static"
  parameters:
  - name: "cosmosPagedFlux"
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedFlux?alt=com.azure.cosmos.util.CosmosPagedFlux&text=CosmosPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static CosmosPagedIterable<T> <T>createCosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux)"
  returns:
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedIterable?alt=com.azure.cosmos.util.CosmosPagedIterable&text=CosmosPagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.util.UtilBridgeInternal.initializeAllAccessors()"
  fullName: "com.azure.cosmos.util.UtilBridgeInternal.initializeAllAccessors()"
  name: "initializeAllAccessors()"
  nameWithType: "UtilBridgeInternal.initializeAllAccessors()"
  modifiers:
  - "static"
  syntax: "public static void initializeAllAccessors()"
type: "class"
desc: "DO NOT USE. This is meant to be used only internally as a bridge access to classes in com.azure.cosmos.util package"
metadata: {}
package: "com.azure.cosmos.util"
artifact: com.azure:azure-cosmos:4.35.0
