### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation"
fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation"
name: "TaskExecutionInformation"
nameWithType: "TaskExecutionInformation"
summary: "Information about the execution of a Task."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class TaskExecutionInformation"
constructors:
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.TaskExecutionInformation()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.TaskExecutionInformation()"
  name: "TaskExecutionInformation()"
  nameWithType: "TaskExecutionInformation.TaskExecutionInformation()"
  syntax: "public TaskExecutionInformation()"
methods:
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.containerInfo()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.containerInfo()"
  name: "containerInfo()"
  nameWithType: "TaskExecutionInformation.containerInfo()"
  summary: "Get this property is set only if the Task runs in a container context."
  syntax: "public TaskContainerExecutionInformation containerInfo()"
  returns:
    description: "the containerInfo value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation&text=TaskContainerExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.endTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.endTime()"
  name: "endTime()"
  nameWithType: "TaskExecutionInformation.endTime()"
  summary: "Get this property is set only if the Task is in the Completed state."
  syntax: "public DateTime endTime()"
  returns:
    description: "the endTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.exitCode()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.exitCode()"
  name: "exitCode()"
  nameWithType: "TaskExecutionInformation.exitCode()"
  summary: "Get this property is set only if the Task is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the Task (due to timeout, or user termination via the API) you may see an operating system-defined exit code."
  syntax: "public Integer exitCode()"
  returns:
    description: "the exitCode value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.failureInfo()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.failureInfo()"
  name: "failureInfo()"
  nameWithType: "TaskExecutionInformation.failureInfo()"
  summary: "Get this property is set only if the Task is in the completed state and encountered a failure."
  syntax: "public TaskFailureInformation failureInfo()"
  returns:
    description: "the failureInfo value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskFailureInformation?alt=com.microsoft.azure.batch.protocol.models.TaskFailureInformation&text=TaskFailureInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.lastRequeueTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.lastRequeueTime()"
  name: "lastRequeueTime()"
  nameWithType: "TaskExecutionInformation.lastRequeueTime()"
  summary: "Get this property is set only if the requeueCount is nonzero."
  syntax: "public DateTime lastRequeueTime()"
  returns:
    description: "the lastRequeueTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.lastRetryTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.lastRetryTime()"
  name: "lastRetryTime()"
  nameWithType: "TaskExecutionInformation.lastRetryTime()"
  summary: "Get this element is present only if the Task was retried (i.e. retryCount is nonzero). If present, this is typically the same as startTime, but may be different if the Task has been restarted for reasons other than retry; for example, if the Compute Node was rebooted during a retry, then the startTime is updated but the lastRetryTime is not."
  syntax: "public DateTime lastRetryTime()"
  returns:
    description: "the lastRetryTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.requeueCount()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.requeueCount()"
  name: "requeueCount()"
  nameWithType: "TaskExecutionInformation.requeueCount()"
  summary: "Get when the user removes Compute Nodes from a Pool (by resizing/shrinking the pool) or when the Job is being disabled, the user can specify that running Tasks on the Compute Nodes be requeued for execution. This count tracks how many times the Task has been requeued for these reasons."
  syntax: "public int requeueCount()"
  returns:
    description: "the requeueCount value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.result()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.result()"
  name: "result()"
  nameWithType: "TaskExecutionInformation.result()"
  summary: "Get if the value is 'failed', then the details of the failure can be found in the failureInfo property. Possible values include: 'success', 'failure'."
  syntax: "public TaskExecutionResult result()"
  returns:
    description: "the result value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionResult?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionResult&text=TaskExecutionResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.retryCount()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.retryCount()"
  name: "retryCount()"
  nameWithType: "TaskExecutionInformation.retryCount()"
  summary: "Get task application failures (non-zero exit code) are retried, pre-processing errors (the Task could not be run) and file upload errors are not retried. The Batch service will retry the Task up to the limit specified by the constraints."
  syntax: "public int retryCount()"
  returns:
    description: "the retryCount value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.startTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.startTime()"
  name: "startTime()"
  nameWithType: "TaskExecutionInformation.startTime()"
  summary: "Get 'Running' corresponds to the running state, so if the Task specifies resource files or Packages, then the start time reflects the time at which the Task started downloading or deploying these. If the Task has been restarted or retried, this is the most recent time at which the Task started running. This property is present only for Tasks that are in the running or completed state."
  syntax: "public DateTime startTime()"
  returns:
    description: "the startTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withContainerInfo(com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withContainerInfo(TaskContainerExecutionInformation containerInfo)"
  name: "withContainerInfo(TaskContainerExecutionInformation containerInfo)"
  nameWithType: "TaskExecutionInformation.withContainerInfo(TaskContainerExecutionInformation containerInfo)"
  summary: "Set this property is set only if the Task runs in a container context."
  parameters:
  - description: "the containerInfo value to set"
    name: "containerInfo"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation&text=TaskContainerExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskExecutionInformation withContainerInfo(TaskContainerExecutionInformation containerInfo)"
  returns:
    description: "the TaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionInformation&text=TaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withEndTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withEndTime(DateTime endTime)"
  name: "withEndTime(DateTime endTime)"
  nameWithType: "TaskExecutionInformation.withEndTime(DateTime endTime)"
  summary: "Set this property is set only if the Task is in the Completed state."
  parameters:
  - description: "the endTime value to set"
    name: "endTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskExecutionInformation withEndTime(DateTime endTime)"
  returns:
    description: "the TaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionInformation&text=TaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withExitCode(java.lang.Integer)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withExitCode(Integer exitCode)"
  name: "withExitCode(Integer exitCode)"
  nameWithType: "TaskExecutionInformation.withExitCode(Integer exitCode)"
  summary: "Set this property is set only if the Task is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the Task (due to timeout, or user termination via the API) you may see an operating system-defined exit code."
  parameters:
  - description: "the exitCode value to set"
    name: "exitCode"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskExecutionInformation withExitCode(Integer exitCode)"
  returns:
    description: "the TaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionInformation&text=TaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withFailureInfo(com.microsoft.azure.batch.protocol.models.TaskFailureInformation)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withFailureInfo(TaskFailureInformation failureInfo)"
  name: "withFailureInfo(TaskFailureInformation failureInfo)"
  nameWithType: "TaskExecutionInformation.withFailureInfo(TaskFailureInformation failureInfo)"
  summary: "Set this property is set only if the Task is in the completed state and encountered a failure."
  parameters:
  - description: "the failureInfo value to set"
    name: "failureInfo"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskFailureInformation?alt=com.microsoft.azure.batch.protocol.models.TaskFailureInformation&text=TaskFailureInformation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskExecutionInformation withFailureInfo(TaskFailureInformation failureInfo)"
  returns:
    description: "the TaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionInformation&text=TaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withLastRequeueTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withLastRequeueTime(DateTime lastRequeueTime)"
  name: "withLastRequeueTime(DateTime lastRequeueTime)"
  nameWithType: "TaskExecutionInformation.withLastRequeueTime(DateTime lastRequeueTime)"
  summary: "Set this property is set only if the requeueCount is nonzero."
  parameters:
  - description: "the lastRequeueTime value to set"
    name: "lastRequeueTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskExecutionInformation withLastRequeueTime(DateTime lastRequeueTime)"
  returns:
    description: "the TaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionInformation&text=TaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withLastRetryTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withLastRetryTime(DateTime lastRetryTime)"
  name: "withLastRetryTime(DateTime lastRetryTime)"
  nameWithType: "TaskExecutionInformation.withLastRetryTime(DateTime lastRetryTime)"
  summary: "Set this element is present only if the Task was retried (i.e. retryCount is nonzero). If present, this is typically the same as startTime, but may be different if the Task has been restarted for reasons other than retry; for example, if the Compute Node was rebooted during a retry, then the startTime is updated but the lastRetryTime is not."
  parameters:
  - description: "the lastRetryTime value to set"
    name: "lastRetryTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskExecutionInformation withLastRetryTime(DateTime lastRetryTime)"
  returns:
    description: "the TaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionInformation&text=TaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withRequeueCount(int)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withRequeueCount(int requeueCount)"
  name: "withRequeueCount(int requeueCount)"
  nameWithType: "TaskExecutionInformation.withRequeueCount(int requeueCount)"
  summary: "Set when the user removes Compute Nodes from a Pool (by resizing/shrinking the pool) or when the Job is being disabled, the user can specify that running Tasks on the Compute Nodes be requeued for execution. This count tracks how many times the Task has been requeued for these reasons."
  parameters:
  - description: "the requeueCount value to set"
    name: "requeueCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskExecutionInformation withRequeueCount(int requeueCount)"
  returns:
    description: "the TaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionInformation&text=TaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withResult(com.microsoft.azure.batch.protocol.models.TaskExecutionResult)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withResult(TaskExecutionResult result)"
  name: "withResult(TaskExecutionResult result)"
  nameWithType: "TaskExecutionInformation.withResult(TaskExecutionResult result)"
  summary: "Set if the value is 'failed', then the details of the failure can be found in the failureInfo property. Possible values include: 'success', 'failure'."
  parameters:
  - description: "the result value to set"
    name: "result"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionResult?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionResult&text=TaskExecutionResult\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskExecutionInformation withResult(TaskExecutionResult result)"
  returns:
    description: "the TaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionInformation&text=TaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withRetryCount(int)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withRetryCount(int retryCount)"
  name: "withRetryCount(int retryCount)"
  nameWithType: "TaskExecutionInformation.withRetryCount(int retryCount)"
  summary: "Set task application failures (non-zero exit code) are retried, pre-processing errors (the Task could not be run) and file upload errors are not retried. The Batch service will retry the Task up to the limit specified by the constraints."
  parameters:
  - description: "the retryCount value to set"
    name: "retryCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskExecutionInformation withRetryCount(int retryCount)"
  returns:
    description: "the TaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionInformation&text=TaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withStartTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withStartTime(DateTime startTime)"
  name: "withStartTime(DateTime startTime)"
  nameWithType: "TaskExecutionInformation.withStartTime(DateTime startTime)"
  summary: "Set 'Running' corresponds to the running state, so if the Task specifies resource files or Packages, then the start time reflects the time at which the Task started downloading or deploying these. If the Task has been restarted or retried, this is the most recent time at which the Task started running. This property is present only for Tasks that are in the running or completed state."
  parameters:
  - description: "the startTime value to set"
    name: "startTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskExecutionInformation withStartTime(DateTime startTime)"
  returns:
    description: "the TaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionInformation&text=TaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:9.0.0
