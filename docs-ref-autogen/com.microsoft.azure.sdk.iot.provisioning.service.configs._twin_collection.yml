### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
  id: _twin_collection
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  children:
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.getTwinMetadata()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.getTwinMetadata(String)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.getVersion()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.put(String,Object)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.putAll(Map<? extends String, ?>)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.toJsonElement()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.TwinCollection()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.TwinCollection(Map<? extends String, Object>)
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.yml
  langs:
  - java
  name: TwinCollection
  nameWithType: TwinCollection
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection
  type: Class
  source:
    remote: &o0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinCollection.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinCollection.java
    startLine: 96
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: "<p>Representation of a single Twin collection for Provisioning.</p>\r\n<p>The <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> is an extension of a<code>HashMap \r\n    </code> of<code>String \r\n    </code> and <code>Object \r\n    </code> that contain individual and general versioning mechanism.</p>\r\n<p>By the Twin definition, the<code>Object \r\n    </code> can contain types of<code>Boolean \r\n    </code> , <code>Number \r\n    </code> ,<code>String \r\n    </code> ,<code>Object \r\n    </code> , or a sub-TwinCollection, but it cannot be types defined by the user or arrays.</p>\r\n<p>A <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> can contain up to 5 levels of sub TwinCollections. Once the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> is a extension of the<code>HashMap \r\n    </code> , both <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> as well as its sub-TwinCollections can be casted to Map of String and Object.</p>\r\n<p>The collection will be represented in the rest API as a JSON in the body. It can or cannot contain the metadata (identified by the <b>$</b> character at the beginning of the key.</p>\r\n<p>Because of the Twin metadata, the character <b>$</b> is not allowed in the entry key.</p>\r\n<p>For instance, the following JSON is a valid <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> with its metadata. <pre><code>{\r\n        \"Color\":\"White\",\r\n        \"MaxSpeed\":{\r\n            \"Value\":500,\r\n            \"NewValue\":300\r\n        },\r\n        \"$metadata\":{\r\n            \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n            \"$lastUpdatedVersion\":4,\r\n            \"Color\":{\r\n                \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                \"$lastUpdatedVersion\":4,\r\n            },\r\n            \"MaxSpeed\":{\r\n                \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                \"$lastUpdatedVersion\":4,\r\n                \"Value\":{\r\n                    \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                    \"$lastUpdatedVersion\":4\r\n                },\r\n                \"NewValue\":{\r\n                    \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                    \"$lastUpdatedVersion\":4\r\n                }\r\n            }\r\n        },\r\n        \"$version\":4\r\n    }\r\n    </code></pre></p>\r\n<p>This class exposes the Twin collection with or without metadata as a Map here user can gat both the value and the metadata. For instance, in the above <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\">get(Object)</xref> for <b>Color</b> will return <b>White</b> and the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.getTwinMetadata(String)\" data-throw-if-not-resolved=\"false\">getTwinMetadata(String)</xref> for <b>Color</b> will return the Object TwinMetadata that contain <xref uid=\"\" data-throw-if-not-resolved=\"false\">TwinMetadata#getLastUpdated()</xref> that will returns the<code>Date \r\n    </code><b>2017-09-21T02:07:44.238Z</b> and <xref uid=\"\" data-throw-if-not-resolved=\"false\">TwinMetadata#getLastUpdatedVersion()</xref> that will returns the<code>Integer \r\n    </code><b>4</b>.</p>\r\n<p>For the nested <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref>, you can do the same, for instance, the following code will return the value and metadata of the <b>NewValue</b> nested in <b>MaxSpeed</b>: <pre><code>// Get the value of the MaxSpeed, which is a inner TwinCollection.\r\n    TwinCollection innerMaxSpeed = (TwinCollection) twinCollection.get(\"MaxSpeed\");\r\n    \r\n    // From the inner TwinCollection, get the value of the NewValue.\r\n    Long maxSpeedNewValue = innerMaxSpeed.get(\"NewValue\");\r\n    \r\n    // As in the root TwinCollection, the inner TwinCollection contain its own metadata.\r\n    // So, get the metadata information for the inner NewValue.\r\n    TwinMetadata maxSpeedNewValueMetadata = innerMaxSpeed.getTwinMetadata(\"NewValue\");\r\n    Date newValueLastUpdated = maxSpeedNewValueMetadata.getLastUpdated(); //Shall contain `2017-09-21T02:07:44.238Z`\r\n    Integer newValueLastUpdatedVersion = maxSpeedNewValueMetadata.getLastUpdatedVersion(); //Shall contain `4`\r\n    </code></pre></p>\r\n<p></p>"
  syntax: &o2
    content: public class TwinCollection
  inheritance:
  - java.lang.Object
  - java.util.HashMap<String, Object>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.getTwinMetadata()
  id: getTwinMetadata()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.yml
  langs:
  - java
  name: getTwinMetadata()
  nameWithType: TwinCollection.getTwinMetadata()
  fullName: TwinMetadata com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.getTwinMetadata()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.getTwinMetadata*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinCollection.java
    startLine: 419
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Getter for the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref> metadata</p>

    <p></p>
  syntax:
    content: public TwinMetadata getTwinMetadata()
    return:
      type: dc8b9d1a
      description: >-
        <p>the <xref uid="" data-throw-if-not-resolved="false">TwinMetadata</xref> of the Whole <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref>. It can be<code>null 

            </code> . </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.getTwinMetadata(String)
  id: getTwinMetadata(String)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.yml
  langs:
  - java
  name: getTwinMetadata(String key)
  nameWithType: TwinCollection.getTwinMetadata(String key)
  fullName: TwinMetadata com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.getTwinMetadata(String key)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.getTwinMetadata*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinCollection.java
    startLine: 431
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Getter for the entry metadata in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref>.</p>

    <p></p>
  syntax: &o3
    content: public TwinMetadata getTwinMetadata(String key)
    parameters:
    - id: key
      type: "26831127"
      description: >-
        <p>the<code>String 

            </code> with the name of the entry to retrieve the metadata. </p>
    return:
      type: dc8b9d1a
      description: >-
        <p>the <xref uid="" data-throw-if-not-resolved="false">TwinMetadata</xref> ot the specific entry in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref>. It can be<code>null 

            </code> . </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.getVersion()
  id: getVersion()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.yml
  langs:
  - java
  name: getVersion()
  nameWithType: TwinCollection.getVersion()
  fullName: Integer com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.getVersion()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.getVersion*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinCollection.java
    startLine: 408
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Getter for the version.</p>

    <p></p>
  syntax:
    content: public Integer getVersion()
    return:
      type: 08effaa0
      description: >-
        <p>The<code>Integer 

            </code> with the version content. It can be<code>null 

            </code> . </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.put(String,Object)
  id: put(String,Object)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.yml
  langs:
  - java
  name: put(String key, Object value)
  nameWithType: TwinCollection.put(String key, Object value)
  fullName: Object com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.put(String key, Object value)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.put*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinCollection.java
    startLine: 185
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Add a single new entry in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref>.</p>

    <p>Override<code>HashMap.put(String, Object) 

        </code> .</p>

    <p>This function will add a single pair key value to the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref>. By the Twin definition, the<code>Object 

        </code> can contain types of<code>Boolean 

        </code> , <code>Number 

        </code> ,<code>String 

        </code> ,<code>Object 

        </code> , or up to 5 levels of sub-TwinCollection, but it cannot be types defined by the user or arrays.</p>

    <p></p>
  syntax: &o1
    content: public Object put(String key, Object value)
    parameters:
    - id: key
      type: "26831127"
      description: >-
        <p>the<code>String 

            </code> that represent the key of the new entry. It cannot be {#code null} or empty. </p>
    - id: value
      type: "79317049"
      description: >-
        <p>the<code>Object 

            </code> that represents the value of the new entry. It cannot be user defined type or array. </p>
    return:
      type: "79317049"
      description: >-
        <p>The<code>Object 

            </code> that correspond to the last value of this key. It will be<code>null 

            </code> if there is no previous value. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.putAll(Map<? extends String, ?>)
  id: putAll(Map<? extends String, ?>)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.yml
  langs:
  - java
  name: putAll(Map<? extends String, ?> map)
  nameWithType: TwinCollection.putAll(Map<? extends String, ?> map)
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.putAll(Map<? extends String, ?> map)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.putAll*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinCollection.java
    startLine: 155
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Add all information in the provided Map to the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref>.</p>

    <p>Override<code>HashMap.putAll(Map) 

        </code> .</p>

    <p>This function will add all entries in the Map to the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref>. If the provided key already exists, it will replace the value by the new one. This function will not delete or change the content of the other keys in the Map.</p>

    <p>As defined by the Twin, the value of a entry can be an inner Map. <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref> will accept up to 5 levels of inner Maps.</p>

    <p></p>
  syntax:
    content: public void putAll(Map<? extends String, ?> map)
    parameters:
    - id: map
      type: b3e9f05a
      description: >-
        <p>A<code>Map 

            </code> of entries to add to the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref>. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.toJsonElement()
  id: toJsonElement()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.yml
  langs:
  - java
  name: toJsonElement()
  nameWithType: TwinCollection.toJsonElement()
  fullName: JsonElement com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.toJsonElement()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.toJsonElement*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinCollection.java
    startLine: 346
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Serializer</p>

    <p>Creates a<code>JsonElement 

        </code> , which the content represents the information in this class and its subclasses in a JSON format.</p>

    <p>This is useful if the caller will integrate this JSON with JSON from other classes to generate a consolidated JSON.</p>

    <p></p>
  syntax:
    content: public JsonElement toJsonElement()
    return:
      type: 8585b2e7
      description: >-
        <p>The<code>JsonElement 

            </code> with the content of this class. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.TwinCollection()
  id: TwinCollection()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.yml
  langs:
  - java
  name: TwinCollection()
  nameWithType: TwinCollection.TwinCollection()
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.TwinCollection()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.TwinCollection*
  type: Constructor
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinCollection.java
    startLine: 116
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Constructor</p>

    <p>Creates an empty collection. Fill it with <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.put(String,Object)" data-throw-if-not-resolved="false">put(String, Object)</xref> or <xref uid="" data-throw-if-not-resolved="false">putAll(Map)</xref>. </p>
  syntax:
    content: public TwinCollection()
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.TwinCollection(Map<? extends String, Object>)
  id: TwinCollection(Map<? extends String, Object>)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.yml
  langs:
  - java
  name: TwinCollection(Map<? extends String, Object> map)
  nameWithType: TwinCollection.TwinCollection(Map<? extends String, Object> map)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.TwinCollection(Map<? extends String, Object> map)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.TwinCollection*
  type: Constructor
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinCollection.java
    startLine: 130
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Constructor</p>

    <p>Creates a new Twin collection coping the provided Map. Once <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref> extends Map, this method can copy another <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref>.</p>

    <p></p>
  syntax:
    content: public TwinCollection(Map<? extends String, Object> map)
    parameters:
    - id: map
      type: 59e5fddd
      description: >-
        <p>the Map of<code>? extends String 

            </code> and<code>Object 

            </code> with the Twin collection </p>
references:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.TwinCollection*
  name: TwinCollection
  nameWithType: TwinCollection.TwinCollection
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.TwinCollection
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: 59e5fddd
  spec.java:
  - name: Map<? extends String, Object>
    fullName: Map<? extends String, Object>
- uid: b3e9f05a
  spec.java:
  - name: Map<? extends String, ?>
    fullName: Map<? extends String, ?>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.putAll*
  name: putAll
  nameWithType: TwinCollection.putAll
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.putAll
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.put*
  name: put
  nameWithType: TwinCollection.put
  fullName: Object com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.put
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: 8585b2e7
  spec.java:
  - name: JsonElement
    fullName: JsonElement
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.toJsonElement*
  name: toJsonElement
  nameWithType: TwinCollection.toJsonElement
  fullName: JsonElement com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.toJsonElement
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.getVersion*
  name: getVersion
  nameWithType: TwinCollection.getVersion
  fullName: Integer com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.getVersion
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: dc8b9d1a
  spec.java:
  - name: TwinMetadata
    fullName: TwinMetadata
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.getTwinMetadata*
  name: getTwinMetadata
  nameWithType: TwinCollection.getTwinMetadata
  fullName: TwinMetadata com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.getTwinMetadata
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.put(String,Object)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.yml
  name: put(String key, Object value)
  nameWithType: TwinCollection.put(String key, Object value)
  fullName: Object com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.put(String key, Object value)
  type: Method
  summary: >-
    <p>Add a single new entry in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref>.</p>

    <p>Override<code>HashMap.put(String, Object) 

        </code> .</p>

    <p>This function will add a single pair key value to the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref>. By the Twin definition, the<code>Object 

        </code> can contain types of<code>Boolean 

        </code> , <code>Number 

        </code> ,<code>String 

        </code> ,<code>Object 

        </code> , or up to 5 levels of sub-TwinCollection, but it cannot be types defined by the user or arrays.</p>

    <p></p>
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.yml
  name: TwinCollection
  nameWithType: TwinCollection
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection
  type: Class
  summary: "<p>Representation of a single Twin collection for Provisioning.</p>\r\n<p>The <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> is an extension of a<code>HashMap \r\n    </code> of<code>String \r\n    </code> and <code>Object \r\n    </code> that contain individual and general versioning mechanism.</p>\r\n<p>By the Twin definition, the<code>Object \r\n    </code> can contain types of<code>Boolean \r\n    </code> , <code>Number \r\n    </code> ,<code>String \r\n    </code> ,<code>Object \r\n    </code> , or a sub-TwinCollection, but it cannot be types defined by the user or arrays.</p>\r\n<p>A <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> can contain up to 5 levels of sub TwinCollections. Once the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> is a extension of the<code>HashMap \r\n    </code> , both <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> as well as its sub-TwinCollections can be casted to Map of String and Object.</p>\r\n<p>The collection will be represented in the rest API as a JSON in the body. It can or cannot contain the metadata (identified by the <b>$</b> character at the beginning of the key.</p>\r\n<p>Because of the Twin metadata, the character <b>$</b> is not allowed in the entry key.</p>\r\n<p>For instance, the following JSON is a valid <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> with its metadata. <pre><code>{\r\n        \"Color\":\"White\",\r\n        \"MaxSpeed\":{\r\n            \"Value\":500,\r\n            \"NewValue\":300\r\n        },\r\n        \"$metadata\":{\r\n            \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n            \"$lastUpdatedVersion\":4,\r\n            \"Color\":{\r\n                \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                \"$lastUpdatedVersion\":4,\r\n            },\r\n            \"MaxSpeed\":{\r\n                \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                \"$lastUpdatedVersion\":4,\r\n                \"Value\":{\r\n                    \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                    \"$lastUpdatedVersion\":4\r\n                },\r\n                \"NewValue\":{\r\n                    \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                    \"$lastUpdatedVersion\":4\r\n                }\r\n            }\r\n        },\r\n        \"$version\":4\r\n    }\r\n    </code></pre></p>\r\n<p>This class exposes the Twin collection with or without metadata as a Map here user can gat both the value and the metadata. For instance, in the above <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\">get(Object)</xref> for <b>Color</b> will return <b>White</b> and the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.getTwinMetadata(String)\" data-throw-if-not-resolved=\"false\">getTwinMetadata(String)</xref> for <b>Color</b> will return the Object TwinMetadata that contain <xref uid=\"\" data-throw-if-not-resolved=\"false\">TwinMetadata#getLastUpdated()</xref> that will returns the<code>Date \r\n    </code><b>2017-09-21T02:07:44.238Z</b> and <xref uid=\"\" data-throw-if-not-resolved=\"false\">TwinMetadata#getLastUpdatedVersion()</xref> that will returns the<code>Integer \r\n    </code><b>4</b>.</p>\r\n<p>For the nested <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref>, you can do the same, for instance, the following code will return the value and metadata of the <b>NewValue</b> nested in <b>MaxSpeed</b>: <pre><code>// Get the value of the MaxSpeed, which is a inner TwinCollection.\r\n    TwinCollection innerMaxSpeed = (TwinCollection) twinCollection.get(\"MaxSpeed\");\r\n    \r\n    // From the inner TwinCollection, get the value of the NewValue.\r\n    Long maxSpeedNewValue = innerMaxSpeed.get(\"NewValue\");\r\n    \r\n    // As in the root TwinCollection, the inner TwinCollection contain its own metadata.\r\n    // So, get the metadata information for the inner NewValue.\r\n    TwinMetadata maxSpeedNewValueMetadata = innerMaxSpeed.getTwinMetadata(\"NewValue\");\r\n    Date newValueLastUpdated = maxSpeedNewValueMetadata.getLastUpdated(); //Shall contain `2017-09-21T02:07:44.238Z`\r\n    Integer newValueLastUpdatedVersion = maxSpeedNewValueMetadata.getLastUpdatedVersion(); //Shall contain `4`\r\n    </code></pre></p>\r\n<p></p>"
  syntax: *o2
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  name: Enrollment
  nameWithType: Enrollment
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service enrollment with a JSON serializer and deserializer.</p>

    <p>This object is used to send <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> information to the provisioning service, or receive <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> information from the provisioning service.</p>

    <p>To create or update an <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> on the provisioning service you should fill this object and call the public API <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createOrUpdateIndividualEnrollment(Enrollment)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createOrUpdateIndividualEnrollment(Enrollment)</xref>. The minimum information required by the provisioning service is the<code>registrationId 

        </code> and the <code>attestation 

        </code> .</p>

    <p>A new device can be provisioned by two attestation mechanisms, Trust Platform Module (see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation" data-throw-if-not-resolved="false">TpmAttestation</xref>) or DICE (see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>). The definition of each one you should use depending on the physical authentication hardware that the device contains.</p>

    <p>The content of this class will be serialized in a JSON format and sent as a body of the rest API to the provisioning service.</p>

    <p>When serialized, an <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> will look like the following example: <pre>

    *<code>*{

             "registrationId":"validRegistrationId",

             "deviceId":"ContosoDevice-123",

             "attestation":{

                 "type":"tpm",

                 "tpm":{

                     "endorsementKey":"validEndorsementKey"

                 }

             },

             "iotHubHostName":"ContosoIoTHub.azure-devices.net",

             "provisioningStatus":"enabled"

        *}

        </code></pre></p>

    <p>The content of this class can be filled by a JSON, received from the provisioning service, as result of a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> operation like create, update, or query enrollment.</p>

    <p>The following JSON is a sample or the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> response, received from the provisioning service. <pre>

    *<code>*{

             "registrationId":"validRegistrationId",

             "deviceId":"ContosoDevice-123",

             "attestation":{

                 "type":"tpm",

                 "tpm":{

                     "endorsementKey":"validEndorsementKey"

                 }

             },

             "iotHubHostName":"ContosoIoTHub.azure-devices.net",

             "provisioningStatus":"enabled"

             "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

             "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

             "etag": "\"00000000-0000-0000-0000-00000000000\""

        *}

        </code></pre></p>

    <p></p>
  syntax:
    content: public class Enrollment extends Serializable
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group.yml
  name: EnrollmentGroup
  nameWithType: EnrollmentGroup
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service enrollment group with a JSON serializer and deserializer.</p>

    <p>This object is used to send <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> information to the provisioning service, or receive <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> information from the provisioning service.</p>

    <p>To create or update an <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> on the provisioning service you should fill this object and call the public API <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createOrUpdateEnrollmentGroup(EnrollmentGroup)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createOrUpdateEnrollmentGroup(EnrollmentGroup)</xref>. The minimum information required by the provisioning service is the <xref uid="" data-throw-if-not-resolved="false">enrollmentGroupId</xref> and the <xref uid="" data-throw-if-not-resolved="false">attestation</xref>.</p>

    <p>To provision a device using <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref>, it must contain a DICE chip with a signingCertificate for the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref> mechanism.</p>

    <p>The content of this class will be serialized in a JSON format and sent as a body of the rest API to the provisioning service.</p>

    <p>When serialized, an <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> will look like the following example: <pre><code>{

            "enrollmentGroupId":"validEnrollmentGroupId",

            "attestation":{

                "type":"x509",

                "signingCertificates":{

                    "primary":{

                        "certificate":"[valid certificate]"

                    }

                }

            },

            "iotHubHostName":"ContosoIoTHub.azure-devices.net",

            "provisioningStatus":"enabled"

        }

        </code></pre></p>

    <p>The content of this class can be filled by a JSON, received from the provisioning service, as result of a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> operation like create, update, or query <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref>.</p>

    <p>The following JSON is a sample of the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> response, received from the provisioning service. <pre><code>{

            "enrollmentGroupId":"validEnrollmentGroupId",

            "attestation":{

                "type":"x509",

                "signingCertificates":{

                    "primary":{

                        "certificate":"[valid certificate]",

                        "info": {

                            "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

                            "sha1Thumbprint": "0000000000000000000000000000000000",

                            "sha256Thumbprint": "validEnrollmentGroupId",

                            "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

                            "notBeforeUtc": "2017-11-14T12:34:18Z",

                            "notAfterUtc": "2017-11-20T12:34:18Z",

                            "serialNumber": "000000000000000000",

                            "version": 3

                        }

                    }

                }

            },

            "iotHubHostName":"ContosoIoTHub.azure-devices.net",

            "provisioningStatus":"enabled",

            "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

            "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

            "etag": "\"00000000-0000-0000-0000-00000000000\""

        }

        </code></pre></p>

    <p></p>
  syntax:
    content: public class EnrollmentGroup extends Serializable
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.getTwinMetadata(String)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.yml
  name: getTwinMetadata(String key)
  nameWithType: TwinCollection.getTwinMetadata(String key)
  fullName: TwinMetadata com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.getTwinMetadata(String key)
  type: Method
  summary: >-
    <p>Getter for the entry metadata in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref>.</p>

    <p></p>
  syntax: *o3
