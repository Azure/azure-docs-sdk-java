### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.implementation.models.FileSystemList.setFilesystems*"
fullName: "com.azure.storage.file.datalake.implementation.models.FileSystemList.setFilesystems"
name: "setFilesystems"
nameWithType: "FileSystemList.setFilesystems"
members:
- uid: "com.azure.storage.file.datalake.implementation.models.FileSystemList.setFilesystems(java.util.List<com.azure.storage.file.datalake.implementation.models.FileSystem>)"
  fullName: "com.azure.storage.file.datalake.implementation.models.FileSystemList.setFilesystems(List<FileSystem> filesystems)"
  name: "setFilesystems(List<FileSystem> filesystems)"
  nameWithType: "FileSystemList.setFilesystems(List<FileSystem> filesystems)"
  summary: "Set the filesystems property: The filesystems property."
  parameters:
  - description: "the filesystems value to set."
    name: "filesystems"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.implementation.models.FileSystem?alt=com.azure.storage.file.datalake.implementation.models.FileSystem&text=FileSystem\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public FileSystemList setFilesystems(List<FileSystem> filesystems)"
  returns:
    description: "the FileSystemList object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.implementation.models.FileSystemList?alt=com.azure.storage.file.datalake.implementation.models.FileSystemList&text=FileSystemList\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake.implementation.models"
artifact: com.azure:azure-storage-file-datalake:12.4.1
