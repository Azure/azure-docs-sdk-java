### YamlMime:JavaType
uid: "com.azure.storage.common.policy.ScrubEtagPolicy"
fullName: "com.azure.storage.common.policy.ScrubEtagPolicy"
name: "ScrubEtagPolicy"
nameWithType: "ScrubEtagPolicy"
summary: "Wraps any potential error responses from the service and applies post-processing of the response's e<wbr>Tag header to standardize the value."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ScrubEtagPolicy implements HttpPipelinePolicy"
constructors:
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.ScrubEtagPolicy()"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.ScrubEtagPolicy()"
  name: "ScrubEtagPolicy()"
  nameWithType: "ScrubEtagPolicy.ScrubEtagPolicy()"
  syntax: "public ScrubEtagPolicy()"
methods:
- uid: "com.azure.storage.common.policy.ScrubEtagPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)"
  fullName: "com.azure.storage.common.policy.ScrubEtagPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  name: "process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  nameWithType: "ScrubEtagPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  summary: "Wraps any potential error responses from the service and applies post-processing of the response's e<wbr>Tag header to standardize the value."
  parameters:
  - name: "context"
    type: "<xref href=\"com.azure.core.http.HttpPipelineCallContext?alt=com.azure.core.http.HttpPipelineCallContext&text=HttpPipelineCallContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "next"
    type: "<xref href=\"com.azure.core.http.HttpPipelineNextPolicy?alt=com.azure.core.http.HttpPipelineNextPolicy&text=HttpPipelineNextPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  desc: "Wraps any potential error responses from the service and applies post-processing of the response's eTag header to standardize the value."
  returns:
    description: "an updated response with post-processing steps applied."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Wraps any potential error responses from the service and applies post-processing of the response's eTag header to standardize the value."
implements:
- "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.storage.common.policy"
artifact: com.azure:azure-storage-common:12.18.0
