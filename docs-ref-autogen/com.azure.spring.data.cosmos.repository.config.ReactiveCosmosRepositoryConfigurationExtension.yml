### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension"
fullName: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension"
name: "ReactiveCosmosRepositoryConfigurationExtension"
nameWithType: "ReactiveCosmosRepositoryConfigurationExtension"
summary: "Configuration extension class based on <xref uid=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RepositoryConfigurationExtensionSupport\"></xref> provide options to set reactive repository support."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
- classRef: "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport&text=RepositoryConfigurationExtensionSupport\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfiguration(org.springframework.beans.factory.config.BeanDefinition,T)?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfiguration&text=<T>getRepositoryConfiguration\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfigurations(T,org.springframework.core.io.ResourceLoader)?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfigurations&text=<T>getRepositoryConfigurations\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfigurations(T,org.springframework.core.io.ResourceLoader,boolean)?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfigurations&text=<T>getRepositoryConfigurations\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getConfigurationInspectionClassLoader(org.springframework.core.io.ResourceLoader)?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getConfigurationInspectionClassLoader&text=getConfigurationInspectionClassLoader\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getDefaultNamedQueryLocation()?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getDefaultNamedQueryLocation&text=getDefaultNamedQueryLocation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getIdentifyingAnnotations()?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getIdentifyingAnnotations&text=getIdentifyingAnnotations\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getIdentifyingTypes()?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getIdentifyingTypes&text=getIdentifyingTypes\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getModuleName()?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getModuleName&text=getModuleName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getModulePrefix()?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getModulePrefix&text=getModulePrefix\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.hasBean(java.lang.Class<?>,org.springframework.beans.factory.support.BeanDefinitionRegistry)?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.hasBean&text=hasBean\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(org.springframework.data.repository.core.RepositoryMetadata)?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate&text=isStrictRepositoryCandidate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource)?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess&text=postProcess\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.RepositoryConfigurationSource)?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess&text=postProcess\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.XmlRepositoryConfigurationSource)?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess&text=postProcess\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerBeansForRoot(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.data.repository.config.RepositoryConfigurationSource)?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerBeansForRoot&text=registerBeansForRoot\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerIfNotAlreadyRegistered(java.util.function.Supplier<org.springframework.beans.factory.support.AbstractBeanDefinition>,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.String,java.lang.Object)?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerIfNotAlreadyRegistered&text=registerIfNotAlreadyRegistered\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerLazyIfNotAlreadyRegistered(java.util.function.Supplier<org.springframework.beans.factory.support.AbstractBeanDefinition>,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.String,java.lang.Object)?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerLazyIfNotAlreadyRegistered&text=registerLazyIfNotAlreadyRegistered\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerWithSourceAndGeneratedBeanName(org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerWithSourceAndGeneratedBeanName&text=registerWithSourceAndGeneratedBeanName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.useRepositoryConfiguration(org.springframework.data.repository.core.RepositoryMetadata)?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.useRepositoryConfiguration&text=useRepositoryConfiguration\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **ReactiveCosmosRepositoryConfigurationExtension**</br> extends <xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport?alt=org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport&text=RepositoryConfigurationExtensionSupport\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.ReactiveCosmosRepositoryConfigurationExtension()"
  fullName: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.ReactiveCosmosRepositoryConfigurationExtension()"
  name: "ReactiveCosmosRepositoryConfigurationExtension()"
  nameWithType: "ReactiveCosmosRepositoryConfigurationExtension.ReactiveCosmosRepositoryConfigurationExtension()"
  syntax: "public ReactiveCosmosRepositoryConfigurationExtension()"
methods:
- uid: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingAnnotations()"
  fullName: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingAnnotations()"
  name: "getIdentifyingAnnotations()"
  nameWithType: "ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingAnnotations()"
  modifiers:
  - "protected"
  overridden: "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getIdentifyingAnnotations()"
  syntax: "protected Collection<Class<? extends Annotation>> getIdentifyingAnnotations()"
  returns:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html\">Collection</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"? extends java.lang.annotation.Annotation?alt=? extends java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingTypes()"
  fullName: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingTypes()"
  name: "getIdentifyingTypes()"
  nameWithType: "ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingTypes()"
  modifiers:
  - "protected"
  overridden: "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getIdentifyingTypes()"
  syntax: "protected Collection<Class<?>> getIdentifyingTypes()"
  returns:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html\">Collection</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;&gt;"
- uid: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModuleName()"
  fullName: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModuleName()"
  name: "getModuleName()"
  nameWithType: "ReactiveCosmosRepositoryConfigurationExtension.getModuleName()"
  overridden: "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getModuleName()"
  syntax: "public String getModuleName()"
  returns:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModulePrefix()"
  fullName: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModulePrefix()"
  name: "getModulePrefix()"
  nameWithType: "ReactiveCosmosRepositoryConfigurationExtension.getModulePrefix()"
  overridden: "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getModulePrefix()"
  syntax: "public String getModulePrefix()"
  returns:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getRepositoryFactoryBeanClassName()"
  fullName: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getRepositoryFactoryBeanClassName()"
  name: "getRepositoryFactoryBeanClassName()"
  nameWithType: "ReactiveCosmosRepositoryConfigurationExtension.getRepositoryFactoryBeanClassName()"
  summary: "Return the name of the repository factory bean class."
  syntax: "public String getRepositoryFactoryBeanClassName()"
  desc: "Return the name of the repository factory bean class."
  returns:
    description: "String value of bean name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource)"
  fullName: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.postProcess(BeanDefinitionBuilder builder, AnnotationRepositoryConfigurationSource source)"
  name: "postProcess(BeanDefinitionBuilder builder, AnnotationRepositoryConfigurationSource source)"
  nameWithType: "ReactiveCosmosRepositoryConfigurationExtension.postProcess(BeanDefinitionBuilder builder, AnnotationRepositoryConfigurationSource source)"
  overridden: "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource)"
  parameters:
  - name: "builder"
    type: "<xref href=\"org.springframework.beans.factory.support.BeanDefinitionBuilder?alt=org.springframework.beans.factory.support.BeanDefinitionBuilder&text=BeanDefinitionBuilder\" data-throw-if-not-resolved=\"False\" />"
  - name: "source"
    type: "<xref href=\"org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource?alt=org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource&text=AnnotationRepositoryConfigurationSource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void postProcess(BeanDefinitionBuilder builder, AnnotationRepositoryConfigurationSource source)"
- uid: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.registerBeansForRoot(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.data.repository.config.RepositoryConfigurationSource)"
  fullName: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.registerBeansForRoot(BeanDefinitionRegistry registry, RepositoryConfigurationSource config)"
  name: "registerBeansForRoot(BeanDefinitionRegistry registry, RepositoryConfigurationSource config)"
  nameWithType: "ReactiveCosmosRepositoryConfigurationExtension.registerBeansForRoot(BeanDefinitionRegistry registry, RepositoryConfigurationSource config)"
  overridden: "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerBeansForRoot(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.data.repository.config.RepositoryConfigurationSource)"
  parameters:
  - name: "registry"
    type: "<xref href=\"org.springframework.beans.factory.support.BeanDefinitionRegistry?alt=org.springframework.beans.factory.support.BeanDefinitionRegistry&text=BeanDefinitionRegistry\" data-throw-if-not-resolved=\"False\" />"
  - name: "config"
    type: "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationSource?alt=org.springframework.data.repository.config.RepositoryConfigurationSource&text=RepositoryConfigurationSource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void registerBeansForRoot(BeanDefinitionRegistry registry, RepositoryConfigurationSource config)"
- uid: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.useRepositoryConfiguration(org.springframework.data.repository.core.RepositoryMetadata)"
  fullName: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.useRepositoryConfiguration(RepositoryMetadata metadata)"
  name: "useRepositoryConfiguration(RepositoryMetadata metadata)"
  nameWithType: "ReactiveCosmosRepositoryConfigurationExtension.useRepositoryConfiguration(RepositoryMetadata metadata)"
  modifiers:
  - "protected"
  overridden: "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.useRepositoryConfiguration(org.springframework.data.repository.core.RepositoryMetadata)"
  parameters:
  - name: "metadata"
    type: "<xref href=\"org.springframework.data.repository.core.RepositoryMetadata?alt=org.springframework.data.repository.core.RepositoryMetadata&text=RepositoryMetadata\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected boolean useRepositoryConfiguration(RepositoryMetadata metadata)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Configuration extension class based on <xref uid=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RepositoryConfigurationExtensionSupport\"></xref> provide options to set reactive repository support."
metadata: {}
package: "com.azure.spring.data.cosmos.repository.config"
artifact: com.azure:azure-spring-data-cosmos:3.44.0
