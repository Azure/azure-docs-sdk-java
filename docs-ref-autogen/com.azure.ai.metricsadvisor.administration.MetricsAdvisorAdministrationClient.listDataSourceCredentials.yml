### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.listDataSourceCredentials*"
fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.listDataSourceCredentials"
name: "listDataSourceCredentials"
nameWithType: "MetricsAdvisorAdministrationClient.listDataSourceCredentials"
members:
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.listDataSourceCredentials()"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.listDataSourceCredentials()"
  name: "listDataSourceCredentials()"
  nameWithType: "MetricsAdvisorAdministrationClient.listDataSourceCredentials()"
  summary: "List information of all data source credential entities on the metrics advisor account.\n\n**Code sample**\n\n```java\nmetricsAdvisorAdminClient.listDataSourceCredentials()\n     .forEach(datasourceCredentialEntity -> {\n         if (datasourceCredentialEntity instanceof DataSourceServicePrincipalInKeyVault) {\n             DataSourceServicePrincipalInKeyVault actualCredentialSPInKV\n                 = (DataSourceServicePrincipalInKeyVault) datasourceCredentialEntity;\n             System.out\n                 .printf(\"Actual credential entity key vault endpoint: %s%n\",\n                     actualCredentialSPInKV.getKeyVaultEndpoint());\n             System.out.printf(\"Actual credential entity key vault client Id: %s%n\",\n                 actualCredentialSPInKV.getKeyVaultClientId());\n             System.out.printf(\"Actual credential entity key vault secret name for data source: %s%n\",\n                 actualCredentialSPInKV.getSecretNameForDataSourceClientId());\n             System.out.printf(\"Actual credential entity key vault secret for data source: %s%n\",\n                 actualCredentialSPInKV.getSecretNameForDataSourceClientSecret());\n         }\n     });\n```"
  syntax: "public PagedIterable<DataSourceCredentialEntity> listDataSourceCredentials()"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> containing information of all the <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceCredentialEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataSourceCredentialEntity\"></xref>\n in the account."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.administration.models.DataSourceCredentialEntity?alt=com.azure.ai.metricsadvisor.administration.models.DataSourceCredentialEntity&text=DataSourceCredentialEntity\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.listDataSourceCredentials(com.azure.ai.metricsadvisor.administration.models.ListCredentialEntityOptions,com.azure.core.util.Context)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.listDataSourceCredentials(ListCredentialEntityOptions options, Context context)"
  name: "listDataSourceCredentials(ListCredentialEntityOptions options, Context context)"
  nameWithType: "MetricsAdvisorAdministrationClient.listDataSourceCredentials(ListCredentialEntityOptions options, Context context)"
  summary: "List information of all data source credential entities on the metrics advisor account.\n\n**Code sample**\n\n```java\nmetricsAdvisorAdminClient.listDataSourceCredentials(\n         new ListCredentialEntityOptions()\n             .setMaxPageSize(3),\n         Context.NONE)\n     .forEach(datasourceCredentialEntity -> {\n         if (datasourceCredentialEntity instanceof DataSourceServicePrincipalInKeyVault) {\n             DataSourceServicePrincipalInKeyVault actualCredentialSPInKV\n                 = (DataSourceServicePrincipalInKeyVault) datasourceCredentialEntity;\n             System.out\n                 .printf(\"Actual credential entity key vault endpoint: %s%n\",\n                     actualCredentialSPInKV.getKeyVaultEndpoint());\n             System.out.printf(\"Actual credential entity key vault client Id: %s%n\",\n                 actualCredentialSPInKV.getKeyVaultClientId());\n             System.out.printf(\"Actual credential entity key vault secret name for data source: %s%n\",\n                 actualCredentialSPInKV.getSecretNameForDataSourceClientId());\n             System.out.printf(\"Actual credential entity key vault secret for data source: %s%n\",\n                 actualCredentialSPInKV.getSecretNameForDataSourceClientSecret());\n         }\n     });\n```"
  parameters:
  - description: "The configurable <xref uid=\"com.azure.ai.metricsadvisor.administration.models.ListCredentialEntityOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref> to pass for filtering the output\n result."
    name: "options"
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.ListCredentialEntityOptions?alt=com.azure.ai.metricsadvisor.administration.models.ListCredentialEntityOptions&text=ListCredentialEntityOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<DataSourceCredentialEntity> listDataSourceCredentials(ListCredentialEntityOptions options, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> containing information of all the <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceCredentialEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataSourceCredentialEntity\"></xref>\n in the account."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.administration.models.DataSourceCredentialEntity?alt=com.azure.ai.metricsadvisor.administration.models.DataSourceCredentialEntity&text=DataSourceCredentialEntity\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration"
artifact: com.azure:azure-ai-metricsadvisor:1.1.1
