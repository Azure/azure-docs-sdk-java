### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.functions.annotation
  id: annotation
  children:
  - com.microsoft.azure.functions.annotation._access_rights
  - com.microsoft.azure.functions.annotation._authorization_level
  - com.microsoft.azure.functions.annotation._binding_name
  - com.microsoft.azure.functions.annotation._binding_test
  - com.microsoft.azure.functions.annotation._blob_input
  - com.microsoft.azure.functions.annotation._blob_output
  - com.microsoft.azure.functions.annotation._blob_trigger
  - com.microsoft.azure.functions.annotation._cardinality
  - com.microsoft.azure.functions.annotation._cosmos_d_b_input
  - com.microsoft.azure.functions.annotation._cosmos_d_b_output
  - com.microsoft.azure.functions.annotation._cosmos_d_b_trigger
  - com.microsoft.azure.functions.annotation._event_grid_trigger
  - com.microsoft.azure.functions.annotation._event_hub_output
  - com.microsoft.azure.functions.annotation._event_hub_trigger
  - com.microsoft.azure.functions.annotation._function_name
  - com.microsoft.azure.functions.annotation._http_output
  - com.microsoft.azure.functions.annotation._http_trigger
  - com.microsoft.azure.functions.annotation._mobile_table_input
  - com.microsoft.azure.functions.annotation._mobile_table_output
  - com.microsoft.azure.functions.annotation._queue_output
  - com.microsoft.azure.functions.annotation._queue_trigger
  - com.microsoft.azure.functions.annotation._send_grid_output
  - com.microsoft.azure.functions.annotation._service_bus_queue_output
  - com.microsoft.azure.functions.annotation._service_bus_queue_trigger
  - com.microsoft.azure.functions.annotation._service_bus_topic_output
  - com.microsoft.azure.functions.annotation._service_bus_topic_trigger
  - com.microsoft.azure.functions.annotation._storage_account
  - com.microsoft.azure.functions.annotation._table_input
  - com.microsoft.azure.functions.annotation._table_output
  - com.microsoft.azure.functions.annotation._timer_trigger
  - com.microsoft.azure.functions.annotation._twilio_sms_output
  href: com.microsoft.azure.functions.annotation.yml
  langs:
  - java
  name: com.microsoft.azure.functions.annotation
  nameWithType: com.microsoft.azure.functions.annotation
  fullName: com.microsoft.azure.functions.annotation
  type: Namespace
  source:
    remote:
      path: src/main/java/com/microsoft/azure/functions/annotation/AccessRights.java
      branch: master
      repo: https://github.com/Azure/azure-functions-java-library
    path: src/main/java/com/microsoft/azure/functions/annotation/AccessRights.java
    startLine: 6
  summary: "<p>Annotations and support classes for use as part of the Java API for Azure Functions. </p>"
  syntax:
    content: package com.microsoft.azure.functions.annotation
references:
- uid: com.microsoft.azure.functions.annotation._access_rights
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._access_rights.yml
  name: AccessRights
  nameWithType: AccessRights
  fullName: com.microsoft.azure.functions.annotation.AccessRights
  type: Enum
  summary: >-
    <p>Azure Service Bus permission.</p>

    <p></p>
  syntax:
    content: public enum AccessRights
- uid: com.microsoft.azure.functions.annotation._authorization_level
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._authorization_level.yml
  name: AuthorizationLevel
  nameWithType: AuthorizationLevel
  fullName: com.microsoft.azure.functions.annotation.AuthorizationLevel
  type: Enum
  summary: >-
    <p>Azure HTTP authorization level, Determines what keys, if any, need to be present on the request in order to invoke the function.</p>

    <p></p>
  syntax:
    content: public enum AuthorizationLevel
- uid: com.microsoft.azure.functions.annotation._binding_name
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._binding_name.yml
  name: BindingName
  nameWithType: BindingName
  fullName: com.microsoft.azure.functions.annotation.BindingName
  type: Interface
  summary: >-
    <p>Place this on a parameter whose value would come from Azure Functions runtime. Use this annotation when you want to get the value of trigger metadata, or when you defined your own bindings in function.json manually.</p>

    <p></p>
  syntax:
    content: public interface BindingName
- uid: com.microsoft.azure.functions.annotation._binding_test
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._binding_test.yml
  name: BindingTest
  nameWithType: BindingTest
  fullName: com.microsoft.azure.functions.annotation.BindingTest
  type: Class
  summary: <p>Unit tests that enforce annotation contracts and conventions for Functions </p>
  syntax:
    content: public class BindingTest
- uid: com.microsoft.azure.functions.annotation._blob_input
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._blob_input.yml
  name: BlobInput
  nameWithType: BlobInput
  fullName: com.microsoft.azure.functions.annotation.BlobInput
  type: Interface
  summary: >-
    <p>BlobInput(name = "file", dataType = "binary", path = "samples-workitems/{queueTrigger}") byte[] content, final ExecutionContext context ) { context.getLogger().info("The size of \"" + filename + "" is: " + content.length + " bytes"); }</p>

    <p></p>
  syntax:
    content: public interface BlobInput
- uid: com.microsoft.azure.functions.annotation._blob_output
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._blob_output.yml
  name: BlobOutput
  nameWithType: BlobOutput
  fullName: com.microsoft.azure.functions.annotation.BlobOutput
  type: Interface
  summary: >-
    <p>BlobInput(name = "source", path = "samples-workitems/{queueTrigger}") String content ) { return content; }</p>

    <p></p>
  syntax:
    content: public interface BlobOutput
- uid: com.microsoft.azure.functions.annotation._blob_trigger
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._blob_trigger.yml
  name: BlobTrigger
  nameWithType: BlobTrigger
  fullName: com.microsoft.azure.functions.annotation.BlobTrigger
  type: Interface
  summary: >-
    <p>BindingName("name") String filename, final ExecutionContext context ) { context.getLogger().info("Name: " + filename + ", Size: " + content.length + " bytes"); }</p>

    <p></p>
  syntax:
    content: public interface BlobTrigger
- uid: com.microsoft.azure.functions.annotation._cardinality
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._cardinality.yml
  name: Cardinality
  nameWithType: Cardinality
  fullName: com.microsoft.azure.functions.annotation.Cardinality
  type: Enum
  summary: >-
    <p>Cardinality of the EventHubTrigger input. Choose 'ONE' if the input is a single message or 'Many' if the input is an array of messages. 'Many' is the default if unspecified</p>

    <p></p>
  syntax:
    content: public enum Cardinality
- uid: com.microsoft.azure.functions.annotation._cosmos_d_b_input
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._cosmos_d_b_input.yml
  name: CosmosDBInput
  nameWithType: CosmosDBInput
  fullName: com.microsoft.azure.functions.annotation.CosmosDBInput
  type: Interface
  summary: >-
    <p>CosmosDBInput(name = "database", databaseName = "ToDoList", collectionName = "Items", id = "{Query.id}", connectionStringSetting = "AzureCosmosDBConnection") Optional&lt;String&gt; item ) { return item.orElse("Not found"); } </p>

    <p></p>
  syntax:
    content: public interface CosmosDBInput
- uid: com.microsoft.azure.functions.annotation._cosmos_d_b_output
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._cosmos_d_b_output.yml
  name: CosmosDBOutput
  nameWithType: CosmosDBOutput
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput
  type: Interface
  summary: >-
    <p>HttpTrigger(name = "request", methods = {HttpMethod.POST}, authLevel = AuthorizationLevel.ANONYMOUS) final String message ) { return "{ \"id": "" + System.currentTimeMillis() + "", "description": "" + message + "" }"; } </p>

    <p></p>
  syntax:
    content: public interface CosmosDBOutput
- uid: com.microsoft.azure.functions.annotation._cosmos_d_b_trigger
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._cosmos_d_b_trigger.yml
  name: CosmosDBTrigger
  nameWithType: CosmosDBTrigger
  fullName: com.microsoft.azure.functions.annotation.CosmosDBTrigger
  type: Interface
  summary: >-
    <p>CosmosDBTrigger(name = "database", databaseName = "ToDoList", collectionName = "Items", leaseCollectionName = "leases", createLeaseCollectionIfNotExists = true, connectionStringSetting = "AzureCosmosDBConnection") List&lt;Map&lt;String, String&gt;&gt; items, final ExecutionContext context ) { context.getLogger().info(items.size() + " item(s) is/are inserted."); if (!items.isEmpty()) { context.getLogger().info("The ID of the first item is: " + items.get(0).get("id")); } } </p>

    <p></p>
  syntax:
    content: public interface CosmosDBTrigger
- uid: com.microsoft.azure.functions.annotation._event_grid_trigger
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._event_grid_trigger.yml
  name: EventGridTrigger
  nameWithType: EventGridTrigger
  fullName: com.microsoft.azure.functions.annotation.EventGridTrigger
  type: Interface
  summary: >-
    <p>EventGridTrigger(name = "event") String content, final ExecutionContext context ) { context.getLogger().info(content); }</p>

    <p></p>
  syntax:
    content: public interface EventGridTrigger
- uid: com.microsoft.azure.functions.annotation._event_hub_output
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._event_hub_output.yml
  name: EventHubOutput
  nameWithType: EventHubOutput
  fullName: com.microsoft.azure.functions.annotation.EventHubOutput
  type: Interface
  summary: >-
    <p>TimerTrigger(name = "sendTimeTrigger", schedule = "0 *&amp;#47;5 * * * *") String timerInfo ) { return LocalDateTime.now().toString(); }</p>

    <p></p>
  syntax:
    content: public interface EventHubOutput
- uid: com.microsoft.azure.functions.annotation._event_hub_trigger
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._event_hub_trigger.yml
  name: EventHubTrigger
  nameWithType: EventHubTrigger
  fullName: com.microsoft.azure.functions.annotation.EventHubTrigger
  type: Interface
  summary: >-
    <p>EventHubTrigger(name = "event", eventHubName = "samples-workitems", connection = "AzureEventHubConnection") String message, final ExecutionContext context ) { context.getLogger().info("Event hub message received: " + message); }</p>

    <p></p>
  syntax:
    content: public interface EventHubTrigger
- uid: com.microsoft.azure.functions.annotation._function_name
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._function_name.yml
  name: FunctionName
  nameWithType: FunctionName
  fullName: com.microsoft.azure.functions.annotation.FunctionName
  type: Interface
  summary: >-
    <p>HttpTrigger(name = "req", methods = {"get"}, authLevel = AuthorizationLevel.ANONYMOUS) HttpRequestMessage&lt;Optional&lt;String&gt;&gt; request) { .... }</p>

    <p></p>
  syntax:
    content: public interface FunctionName
- uid: com.microsoft.azure.functions.annotation._http_output
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._http_output.yml
  name: HttpOutput
  nameWithType: HttpOutput
  fullName: com.microsoft.azure.functions.annotation.HttpOutput
  type: Interface
  summary: >-
    <p>Place this on a parameter whose value would be send back to the user as an HTTP response. The parameter type should be OutputBinding&lt;T&gt;, where T could be one of:</p>

    <p>

      <ul>

        <li>

          <p>

            <xref uid="com.microsoft.azure.functions._http_response_message" data-throw-if-not-resolved="false">HttpResponseMessage</xref>

          </p>

        </li>

        <li>

          <p>Any native Java types such as int, String, byte[] </p>

        </li>

        <li>

          <p>Any POJO type </p>

        </li>

      </ul>

    </p>

    <p></p>
  syntax:
    content: public interface HttpOutput
- uid: com.microsoft.azure.functions.annotation._http_trigger
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._http_trigger.yml
  name: HttpTrigger
  nameWithType: HttpTrigger
  fullName: com.microsoft.azure.functions.annotation.HttpTrigger
  type: Interface
  summary: >-
    <p>HttpTrigger(name = "req", methods = {HttpMethod.GET, HttpMethod.POST}, authLevel = AuthorizationLevel.ANONYMOUS) final HttpRequestMessage&lt;Optional&lt;String&gt;&gt; request ) { String name = request.getBody().orElseGet(() -&gt; request.getQueryParameters().get("name")); return name == null ? "Please pass a name on the query string or in the request body" : "Hello " + name; }</p>

    <p></p>
  syntax:
    content: public interface HttpTrigger
- uid: com.microsoft.azure.functions.annotation._mobile_table_input
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._mobile_table_input.yml
  name: MobileTableInput
  nameWithType: MobileTableInput
  fullName: com.microsoft.azure.functions.annotation.MobileTableInput
  type: Interface
  summary: >-
    <p>Place this on a parameter whose value would come from mobile table. The parameter type can be one of the following:</p>

    <p>

      <ul>

        <li>

          <p>Any native Java types such as int, String, byte[] </p>

        </li>

        <li>

          <p>Nullable values using Optional&lt;T&gt; </p>

        </li>

        <li>

          <p>Any POJO type </p>

        </li>

      </ul>

    </p>

    <p></p>
  syntax:
    content: public interface MobileTableInput
- uid: com.microsoft.azure.functions.annotation._mobile_table_output
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._mobile_table_output.yml
  name: MobileTableOutput
  nameWithType: MobileTableOutput
  fullName: com.microsoft.azure.functions.annotation.MobileTableOutput
  type: Interface
  summary: >-
    <p>Place this on a parameter whose value would be written to mobile table. The parameter type should be OutputBinding&lt;T&gt;, where T could be one of:</p>

    <p>

      <ul>

        <li>

          <p>Any native Java types such as int, String, byte[] </p>

        </li>

        <li>

          <p>Any POJO type </p>

        </li>

      </ul>

    </p>

    <p></p>
  syntax:
    content: public interface MobileTableOutput
- uid: com.microsoft.azure.functions.annotation._queue_output
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._queue_output.yml
  name: QueueOutput
  nameWithType: QueueOutput
  fullName: com.microsoft.azure.functions.annotation.QueueOutput
  type: Interface
  summary: >-
    <p>HttpOutput(name = "response") final OutputBinding&lt;String&gt; result ) { result.setValue(message + " has been added."); return message; }</p>

    <p></p>
  syntax:
    content: public interface QueueOutput
- uid: com.microsoft.azure.functions.annotation._queue_trigger
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._queue_trigger.yml
  name: QueueTrigger
  nameWithType: QueueTrigger
  fullName: com.microsoft.azure.functions.annotation.QueueTrigger
  type: Interface
  summary: >-
    <p>QueueTrigger(name = "msg", queueName = "myqueue-items", connection = "AzureWebJobsStorage") String message, final ExecutionContext context ) { context.getLogger().info("Queue message processed: " + message); }</p>

    <p></p>
  syntax:
    content: public interface QueueTrigger
- uid: com.microsoft.azure.functions.annotation._send_grid_output
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._send_grid_output.yml
  name: SendGridOutput
  nameWithType: SendGridOutput
  fullName: com.microsoft.azure.functions.annotation.SendGridOutput
  type: Interface
  summary: >-
    <p>Place this on a parameter whose value would be written to SendGrid. The parameter type should be OutputBinding&lt;T&gt;, where T could be one of:</p>

    <p>

      <ul>

        <li>

          <p>Any native Java types such as int, String, byte[] </p>

        </li>

        <li>

          <p>Any POJO type </p>

        </li>

      </ul>

    </p>

    <p></p>
  syntax:
    content: public interface SendGridOutput
- uid: com.microsoft.azure.functions.annotation._service_bus_queue_output
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._service_bus_queue_output.yml
  name: ServiceBusQueueOutput
  nameWithType: ServiceBusQueueOutput
  fullName: com.microsoft.azure.functions.annotation.ServiceBusQueueOutput
  type: Interface
  summary: >-
    <p>HttpOutput(name = "response") final OutputBinding&lt;String&gt; result ) { result.setValue(message + " has been sent."); return message; }</p>

    <p></p>
  syntax:
    content: public interface ServiceBusQueueOutput
- uid: com.microsoft.azure.functions.annotation._service_bus_queue_trigger
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._service_bus_queue_trigger.yml
  name: ServiceBusQueueTrigger
  nameWithType: ServiceBusQueueTrigger
  fullName: com.microsoft.azure.functions.annotation.ServiceBusQueueTrigger
  type: Interface
  summary: >-
    <p>ServiceBusQueueTrigger(name = "msg", queueName = "myqueue", connection = "AzureServiceBusConnection") final String message, final ExecutionContext context ) { context.getLogger().info("Message is received: " + message); }</p>

    <p></p>
  syntax:
    content: public interface ServiceBusQueueTrigger
- uid: com.microsoft.azure.functions.annotation._service_bus_topic_output
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._service_bus_topic_output.yml
  name: ServiceBusTopicOutput
  nameWithType: ServiceBusTopicOutput
  fullName: com.microsoft.azure.functions.annotation.ServiceBusTopicOutput
  type: Interface
  summary: >-
    <p>Place this on a parameter whose value would be written to a service bus topic. The parameter type should be OutputBinding&lt;T&gt;, where T could be one of:</p>

    <p>

      <ul>

        <li>

          <p>Any native Java types such as int, String, byte[] </p>

        </li>

        <li>

          <p>Any POJO type </p>

        </li>

      </ul>

    </p>

    <p></p>
  syntax:
    content: public interface ServiceBusTopicOutput
- uid: com.microsoft.azure.functions.annotation._service_bus_topic_trigger
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._service_bus_topic_trigger.yml
  name: ServiceBusTopicTrigger
  nameWithType: ServiceBusTopicTrigger
  fullName: com.microsoft.azure.functions.annotation.ServiceBusTopicTrigger
  type: Interface
  summary: >-
    <p>ServiceBusTopicTrigger(name = "msg", topicName = "mytopicname", subscriptionName = "mysubname", connection = "myconnvarname") String message, final ExecutionContext context ) { context.getLogger().info(message); }</p>

    <p></p>
  syntax:
    content: public interface ServiceBusTopicTrigger
- uid: com.microsoft.azure.functions.annotation._storage_account
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._storage_account.yml
  name: StorageAccount
  nameWithType: StorageAccount
  fullName: com.microsoft.azure.functions.annotation.StorageAccount
  type: Interface
  summary: >-
    <p>Apply this annotation to a method if you have multiple Azure Storage triggers/input/output in that method which share the same app setting name of Azure Storage connection string.</p>

    <p></p>
  syntax:
    content: public interface StorageAccount
- uid: com.microsoft.azure.functions.annotation._table_input
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._table_input.yml
  name: TableInput
  nameWithType: TableInput
  fullName: com.microsoft.azure.functions.annotation.TableInput
  type: Interface
  summary: >-
    <p>TableInput(name = "items", tableName = "mytablename", partitionKey = "myparkey", connection = "myconnvarname") MyItem[] items ) { return items.length; }</p>

    <p></p>
  syntax:
    content: public interface TableInput
- uid: com.microsoft.azure.functions.annotation._table_output
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._table_output.yml
  name: TableOutput
  nameWithType: TableOutput
  fullName: com.microsoft.azure.functions.annotation.TableOutput
  type: Interface
  summary: >-
    <p>Place this on a parameter whose value would be written to a storage table. The parameter type should be OutputBinding&lt;T&gt;, where T could be one of:</p>

    <p>

      <ul>

        <li>

          <p>Any native Java types such as int, String, byte[] </p>

        </li>

        <li>

          <p>Any POJO type </p>

        </li>

      </ul>

    </p>

    <p></p>
  syntax:
    content: public interface TableOutput
- uid: com.microsoft.azure.functions.annotation._timer_trigger
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._timer_trigger.yml
  name: TimerTrigger
  nameWithType: TimerTrigger
  fullName: com.microsoft.azure.functions.annotation.TimerTrigger
  type: Interface
  summary: >-
    <p>TimerTrigger(name = "keepAliveTrigger", schedule = "0 *&amp;#47;5 * * * *") String timerInfo, ExecutionContext context ) { // timeInfo is a JSON string, you can deserialize it to an object using your favorite JSON library context.getLogger().info("Timer is triggered: " + timerInfo); }</p>

    <p></p>
  syntax:
    content: public interface TimerTrigger
- uid: com.microsoft.azure.functions.annotation._twilio_sms_output
  parent: com.microsoft.azure.functions.annotation
  href: com.microsoft.azure.functions.annotation._twilio_sms_output.yml
  name: TwilioSmsOutput
  nameWithType: TwilioSmsOutput
  fullName: com.microsoft.azure.functions.annotation.TwilioSmsOutput
  type: Interface
  summary: >-
    <p>Place this on a parameter whose value would be sent through twilio SMS. The parameter type should be OutputBinding&lt;T&gt;, where T could be one of:</p>

    <p>

      <ul>

        <li>

          <p>Any native Java types such as int, String, byte[] </p>

        </li>

        <li>

          <p>Any POJO type </p>

        </li>

      </ul>

    </p>

    <p></p>
  syntax:
    content: public interface TwilioSmsOutput
