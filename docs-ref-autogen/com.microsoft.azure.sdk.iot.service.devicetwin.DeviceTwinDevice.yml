### YamlMime:JavaType
constructors:
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.DeviceTwinDevice()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.DeviceTwinDevice(String)
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.DeviceTwinDevice(String,String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.clearDesiredProperties()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.clearTags()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.clearTwin()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.desiredPropertiesToString()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getCapabilities()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getConfigurations()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getConnectionState()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getDesiredMap()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getDesiredProperties()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getDesiredPropertiesVersion()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getDeviceId()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getETag()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getModuleId()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getReportedMap()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getReportedProperties()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getReportedPropertiesVersion()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getTags()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getTagsMap()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getTagsVersion()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getVersion()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.reportedPropertiesToString()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setCapabilities(DeviceCapabilities)
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setConfigurations(Map<String, ConfigurationInfo>)
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setConnectionState(String)
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setDesiredProperties(Set<Pair>)
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setDesiredProperties(TwinCollection)
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setETag(String)
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setReportedProperties(TwinCollection)
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setTags(Set<Pair>)
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setTags(TwinCollection)
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.tagsToString()
- com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.toString()
nameWithType: DeviceTwinDevice
syntax: public class DeviceTwinDevice
type: class
uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
name: DeviceTwinDevice
package: com.microsoft.azure.sdk.iot.service.devicetwin
summary: <p>The DeviceTwinDevice class represent the twin on iotHub. implementing constructors and serialization functionality. If object is a representation of the module twin if and only if the moduleId is set. </p>
metadata: {}
