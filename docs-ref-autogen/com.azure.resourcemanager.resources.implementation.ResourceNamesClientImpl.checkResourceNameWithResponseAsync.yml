### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.implementation.ResourceNamesClientImpl.checkResourceNameWithResponseAsync*"
fullName: "com.azure.resourcemanager.resources.implementation.ResourceNamesClientImpl.checkResourceNameWithResponseAsync"
name: "checkResourceNameWithResponseAsync"
nameWithType: "ResourceNamesClientImpl.checkResourceNameWithResponseAsync"
members:
- uid: "com.azure.resourcemanager.resources.implementation.ResourceNamesClientImpl.checkResourceNameWithResponseAsync(com.azure.resourcemanager.resources.models.ResourceName)"
  fullName: "com.azure.resourcemanager.resources.implementation.ResourceNamesClientImpl.checkResourceNameWithResponseAsync(ResourceName resourceNameDefinition)"
  name: "checkResourceNameWithResponseAsync(ResourceName resourceNameDefinition)"
  nameWithType: "ResourceNamesClientImpl.checkResourceNameWithResponseAsync(ResourceName resourceNameDefinition)"
  summary: "A resource name is valid if it is not a reserved word, does not contains a reserved word and does not start with a reserved word."
  parameters:
  - description: "Name and Type of the Resource."
    name: "resourceNameDefinition"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ResourceName?alt=com.azure.resourcemanager.resources.models.ResourceName&text=ResourceName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<CheckResourceNameResultInner>> checkResourceNameWithResponseAsync(ResourceName resourceNameDefinition)"
  returns:
    description: "resource Name valid if not a reserved word, does not contain a reserved word and does not start with a\n     reserved word."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.CheckResourceNameResultInner?alt=com.azure.resourcemanager.resources.fluent.models.CheckResourceNameResultInner&text=CheckResourceNameResultInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
