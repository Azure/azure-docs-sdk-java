### YamlMime:ManagedReference
items:
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty
  id: BasicCosmosPersistentProperty
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.core.mapping
  children:
  - com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.BasicCosmosPersistentProperty(org.springframework.data.mapping.model.Property,com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity<?>,org.springframework.data.mapping.model.SimpleTypeHolder)
  - com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.createAssociation()
  - com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.isIdProperty()
  langs:
  - java
  name: BasicCosmosPersistentProperty
  nameWithType: BasicCosmosPersistentProperty
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty
  type: Class
  package: com.azure.spring.data.cosmos.core.mapping
  summary: Special <xref uid="com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty" data-throw-if-not-resolved="false">CosmosPersistentProperty</xref> that takes annotations at a property into account.
  syntax:
    content: public class BasicCosmosPersistentProperty extends AnnotationBasedPersistentProperty<CosmosPersistentProperty> implements CosmosPersistentProperty
  inheritance:
  - java.lang.Object
  - org.springframework.data.mapping.model.AbstractPersistentProperty
  - org.springframework.data.mapping.model.AnnotationBasedPersistentProperty
  implements:
  - com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.springframework.data.mapping.model.AbstractPersistentProperty.createAssociation()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.equals(java.lang.Object)
  - org.springframework.data.mapping.model.AbstractPersistentProperty.getActualType()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.getAssociation()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.getComponentType()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.getField()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.getGetter()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.getMapValueType()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.getName()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.getOwner()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.getPersistentEntityTypes()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.getProperty()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.getRawType()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.getSetter()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.getType()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.getTypeInformation()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.getWither()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.hashCode()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.isArray()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.isCollectionLike()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.isEntity()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.isImmutable()
  - org.springframework.data.mapping.model.AbstractPersistentProperty.isMap()
  - org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.<A>findAnnotation(java.lang.Class<A>)
  - org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.<A>findPropertyOrOwnerAnnotation(java.lang.Class<A>)
  - org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.getAssociationTargetType()
  - org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.getSpelExpression()
  - org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isAnnotationPresent(java.lang.Class<? extends java.lang.annotation.Annotation>)
  - org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isAssociation()
  - org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isIdProperty()
  - org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isTransient()
  - org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isVersionProperty()
  - org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isWritable()
  - org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.toString()
  - org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.usePropertyAccess()
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.BasicCosmosPersistentProperty(org.springframework.data.mapping.model.Property,com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity<?>,org.springframework.data.mapping.model.SimpleTypeHolder)
  id: BasicCosmosPersistentProperty(org.springframework.data.mapping.model.Property,com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity<?>,org.springframework.data.mapping.model.SimpleTypeHolder)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty
  langs:
  - java
  name: BasicCosmosPersistentProperty(Property property, CosmosPersistentEntity<?> owner, SimpleTypeHolder simpleTypeHolder)
  nameWithType: BasicCosmosPersistentProperty.BasicCosmosPersistentProperty(Property property, CosmosPersistentEntity<?> owner, SimpleTypeHolder simpleTypeHolder)
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.BasicCosmosPersistentProperty(Property property, CosmosPersistentEntity<?> owner, SimpleTypeHolder simpleTypeHolder)
  overload: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.BasicCosmosPersistentProperty*
  type: Constructor
  package: com.azure.spring.data.cosmos.core.mapping
  summary: Creates a new <xref uid="com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty" data-throw-if-not-resolved="false">BasicCosmosPersistentProperty</xref>.
  syntax:
    content: public BasicCosmosPersistentProperty(Property property, CosmosPersistentEntity<?> owner, SimpleTypeHolder simpleTypeHolder)
    parameters:
    - id: property
      type: org.springframework.data.mapping.model.Property
      description: must not be null.
    - id: owner
      type: com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity<?>
      description: must not be null.
    - id: simpleTypeHolder
      type: org.springframework.data.mapping.model.SimpleTypeHolder
      description: must not be null.
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.createAssociation()
  id: createAssociation()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty
  langs:
  - java
  name: createAssociation()
  nameWithType: BasicCosmosPersistentProperty.createAssociation()
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.createAssociation()
  overload: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.createAssociation*
  type: Method
  package: com.azure.spring.data.cosmos.core.mapping
  syntax:
    content: protected Association<CosmosPersistentProperty> createAssociation()
    return:
      type: org.springframework.data.mapping.Association<com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty>
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.isIdProperty()
  id: isIdProperty()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty
  langs:
  - java
  name: isIdProperty()
  nameWithType: BasicCosmosPersistentProperty.isIdProperty()
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.isIdProperty()
  overload: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.isIdProperty*
  type: Method
  package: com.azure.spring.data.cosmos.core.mapping
  syntax:
    content: public boolean isIdProperty()
    return:
      type: boolean
references:
- uid: org.springframework.data.mapping.model.Property
  spec.java:
  - uid: org.springframework.data.mapping.model.Property
    name: Property
    fullName: org.springframework.data.mapping.model.Property
- uid: com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity<?>
  spec.java:
  - uid: com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity
    name: CosmosPersistentEntity
    fullName: com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: org.springframework.data.mapping.model.SimpleTypeHolder
  spec.java:
  - uid: org.springframework.data.mapping.model.SimpleTypeHolder
    name: SimpleTypeHolder
    fullName: org.springframework.data.mapping.model.SimpleTypeHolder
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.BasicCosmosPersistentProperty*
  name: BasicCosmosPersistentProperty
  nameWithType: BasicCosmosPersistentProperty.BasicCosmosPersistentProperty
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.BasicCosmosPersistentProperty
  package: com.azure.spring.data.cosmos.core.mapping
- uid: org.springframework.data.mapping.Association<com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty>
  spec.java:
  - uid: org.springframework.data.mapping.Association
    name: Association
    fullName: org.springframework.data.mapping.Association
  - name: <
    fullName: <
  - uid: com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty
    name: CosmosPersistentProperty
    fullName: com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.createAssociation*
  name: createAssociation
  nameWithType: BasicCosmosPersistentProperty.createAssociation
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.createAssociation
  package: com.azure.spring.data.cosmos.core.mapping
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.isIdProperty*
  name: isIdProperty
  nameWithType: BasicCosmosPersistentProperty.isIdProperty
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.isIdProperty
  package: com.azure.spring.data.cosmos.core.mapping
- uid: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty<com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty>
  name: AnnotationBasedPersistentProperty<CosmosPersistentProperty>
  nameWithType: AnnotationBasedPersistentProperty<CosmosPersistentProperty>
  fullName: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty<com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty>
- uid: com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty
  name: CosmosPersistentProperty
  nameWithType: CosmosPersistentProperty
  fullName: com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isAssociation()
  name: AnnotationBasedPersistentProperty.isAssociation()
  nameWithType: AnnotationBasedPersistentProperty.isAssociation()
  fullName: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isAssociation()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.isMap()
  name: AbstractPersistentProperty.isMap()
  nameWithType: AbstractPersistentProperty.isMap()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.isMap()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.getTypeInformation()
  name: AbstractPersistentProperty.getTypeInformation()
  nameWithType: AbstractPersistentProperty.getTypeInformation()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.getTypeInformation()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.getAssociation()
  name: AbstractPersistentProperty.getAssociation()
  nameWithType: AbstractPersistentProperty.getAssociation()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.getAssociation()
- uid: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isVersionProperty()
  name: AnnotationBasedPersistentProperty.isVersionProperty()
  nameWithType: AnnotationBasedPersistentProperty.isVersionProperty()
  fullName: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isVersionProperty()
- uid: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.getAssociationTargetType()
  name: AnnotationBasedPersistentProperty.getAssociationTargetType()
  nameWithType: AnnotationBasedPersistentProperty.getAssociationTargetType()
  fullName: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.getAssociationTargetType()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.createAssociation()
  name: AbstractPersistentProperty.createAssociation()
  nameWithType: AbstractPersistentProperty.createAssociation()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.createAssociation()
- uid: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isAnnotationPresent(java.lang.Class<? extends java.lang.annotation.Annotation>)
  name: AnnotationBasedPersistentProperty.isAnnotationPresent(Class<? extends Annotation>)
  nameWithType: AnnotationBasedPersistentProperty.isAnnotationPresent(Class<? extends Annotation>)
  fullName: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isAnnotationPresent(java.lang.Class<? extends java.lang.annotation.Annotation>)
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.getPersistentEntityTypes()
  name: AbstractPersistentProperty.getPersistentEntityTypes()
  nameWithType: AbstractPersistentProperty.getPersistentEntityTypes()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.getPersistentEntityTypes()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isIdProperty()
  name: AnnotationBasedPersistentProperty.isIdProperty()
  nameWithType: AnnotationBasedPersistentProperty.isIdProperty()
  fullName: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isIdProperty()
- uid: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isTransient()
  name: AnnotationBasedPersistentProperty.isTransient()
  nameWithType: AnnotationBasedPersistentProperty.isTransient()
  fullName: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isTransient()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.getWither()
  name: AbstractPersistentProperty.getWither()
  nameWithType: AbstractPersistentProperty.getWither()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.getWither()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.getProperty()
  name: AbstractPersistentProperty.getProperty()
  nameWithType: AbstractPersistentProperty.getProperty()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.getProperty()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.isArray()
  name: AbstractPersistentProperty.isArray()
  nameWithType: AbstractPersistentProperty.isArray()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.isArray()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.isCollectionLike()
  name: AbstractPersistentProperty.isCollectionLike()
  nameWithType: AbstractPersistentProperty.isCollectionLike()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.isCollectionLike()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.getField()
  name: AbstractPersistentProperty.getField()
  nameWithType: AbstractPersistentProperty.getField()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.getField()
- uid: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.<A>findAnnotation(java.lang.Class<A>)
  name: AnnotationBasedPersistentProperty.<A>findAnnotation(Class<A>)
  nameWithType: AnnotationBasedPersistentProperty.<A>findAnnotation(Class<A>)
  fullName: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.<A>findAnnotation(java.lang.Class<A>)
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.getComponentType()
  name: AbstractPersistentProperty.getComponentType()
  nameWithType: AbstractPersistentProperty.getComponentType()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.getComponentType()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.getOwner()
  name: AbstractPersistentProperty.getOwner()
  nameWithType: AbstractPersistentProperty.getOwner()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.getOwner()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.hashCode()
  name: AbstractPersistentProperty.hashCode()
  nameWithType: AbstractPersistentProperty.hashCode()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.hashCode()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.getRawType()
  name: AbstractPersistentProperty.getRawType()
  nameWithType: AbstractPersistentProperty.getRawType()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.getRawType()
- uid: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.getSpelExpression()
  name: AnnotationBasedPersistentProperty.getSpelExpression()
  nameWithType: AnnotationBasedPersistentProperty.getSpelExpression()
  fullName: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.getSpelExpression()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.equals(java.lang.Object)
  name: AbstractPersistentProperty.equals(Object)
  nameWithType: AbstractPersistentProperty.equals(Object)
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.equals(java.lang.Object)
- uid: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.<A>findPropertyOrOwnerAnnotation(java.lang.Class<A>)
  name: AnnotationBasedPersistentProperty.<A>findPropertyOrOwnerAnnotation(Class<A>)
  nameWithType: AnnotationBasedPersistentProperty.<A>findPropertyOrOwnerAnnotation(Class<A>)
  fullName: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.<A>findPropertyOrOwnerAnnotation(java.lang.Class<A>)
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.getGetter()
  name: AbstractPersistentProperty.getGetter()
  nameWithType: AbstractPersistentProperty.getGetter()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.getGetter()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.getMapValueType()
  name: AbstractPersistentProperty.getMapValueType()
  nameWithType: AbstractPersistentProperty.getMapValueType()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.getMapValueType()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.getActualType()
  name: AbstractPersistentProperty.getActualType()
  nameWithType: AbstractPersistentProperty.getActualType()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.getActualType()
- uid: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.usePropertyAccess()
  name: AnnotationBasedPersistentProperty.usePropertyAccess()
  nameWithType: AnnotationBasedPersistentProperty.usePropertyAccess()
  fullName: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.usePropertyAccess()
- uid: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isWritable()
  name: AnnotationBasedPersistentProperty.isWritable()
  nameWithType: AnnotationBasedPersistentProperty.isWritable()
  fullName: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isWritable()
- uid: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.toString()
  name: AnnotationBasedPersistentProperty.toString()
  nameWithType: AnnotationBasedPersistentProperty.toString()
  fullName: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.toString()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.isEntity()
  name: AbstractPersistentProperty.isEntity()
  nameWithType: AbstractPersistentProperty.isEntity()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.isEntity()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.getType()
  name: AbstractPersistentProperty.getType()
  nameWithType: AbstractPersistentProperty.getType()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.getType()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.getSetter()
  name: AbstractPersistentProperty.getSetter()
  nameWithType: AbstractPersistentProperty.getSetter()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.getSetter()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.getName()
  name: AbstractPersistentProperty.getName()
  nameWithType: AbstractPersistentProperty.getName()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.getName()
- uid: org.springframework.data.mapping.model.AbstractPersistentProperty.isImmutable()
  name: AbstractPersistentProperty.isImmutable()
  nameWithType: AbstractPersistentProperty.isImmutable()
  fullName: org.springframework.data.mapping.model.AbstractPersistentProperty.isImmutable()
- uid: com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity
  name: CosmosPersistentEntity
  nameWithType: CosmosPersistentEntity
  fullName: com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: org.springframework.data.mapping.Association
  name: Association
  nameWithType: Association
  fullName: org.springframework.data.mapping.Association
- uid: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty
  name: AnnotationBasedPersistentProperty
  nameWithType: AnnotationBasedPersistentProperty
  fullName: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty
- uid: '? extends java.lang.annotation.Annotation>)'
  name: '? extends Annotation>)'
  nameWithType: '? extends Annotation>)'
  fullName: '? extends java.lang.annotation.Annotation>)'
- uid: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isAnnotationPresent(java.lang.Class
  name: AnnotationBasedPersistentProperty.isAnnotationPresent(Class
  nameWithType: AnnotationBasedPersistentProperty.isAnnotationPresent(Class
  fullName: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isAnnotationPresent(java.lang.Class
- uid: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.
  name: AnnotationBasedPersistentProperty.
  nameWithType: AnnotationBasedPersistentProperty.
  fullName: org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.
- uid: A>findAnnotation(java.lang.Class
  name: A>findAnnotation(Class
  nameWithType: A>findAnnotation(Class
  fullName: A>findAnnotation(java.lang.Class
- uid: A>)
  name: A>)
  nameWithType: A>)
  fullName: A>)
- uid: A>findPropertyOrOwnerAnnotation(java.lang.Class
  name: A>findPropertyOrOwnerAnnotation(Class
  nameWithType: A>findPropertyOrOwnerAnnotation(Class
  fullName: A>findPropertyOrOwnerAnnotation(java.lang.Class
