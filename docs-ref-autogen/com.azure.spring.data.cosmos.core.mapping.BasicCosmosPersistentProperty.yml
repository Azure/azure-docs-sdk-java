### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty"
fullName: "com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty"
name: "BasicCosmosPersistentProperty"
nameWithType: "BasicCosmosPersistentProperty"
summary: "Special <xref uid=\"com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPersistentProperty\"></xref> that takes annotations at a property into account."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.data.mapping.model.AnnotationBasedPersistentProperty?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
- classRef: "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty?alt=org.springframework.data.mapping.model.AbstractPersistentProperty&text=AbstractPersistentProperty\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.createAssociation()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.createAssociation&text=createAssociation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.equals(java.lang.Object)?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getActualType()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getActualType&text=getActualType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getActualTypeInformation()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getActualTypeInformation&text=getActualTypeInformation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getAssociation()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getAssociation&text=getAssociation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getAssociationTargetType()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getAssociationTargetType&text=getAssociationTargetType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getComponentType()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getComponentType&text=getComponentType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getField()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getField&text=getField\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getGetter()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getGetter&text=getGetter\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getMapValueType()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getMapValueType&text=getMapValueType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getName()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getName&text=getName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getOwner()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getOwner&text=getOwner\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getPersistentEntityTypeInformation()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getPersistentEntityTypeInformation&text=getPersistentEntityTypeInformation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getPersistentEntityTypes()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getPersistentEntityTypes&text=getPersistentEntityTypes\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getProperty()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getProperty&text=getProperty\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getRawType()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getRawType&text=getRawType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getSetter()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getSetter&text=getSetter\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getType()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getType&text=getType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getTypeInformation()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getTypeInformation&text=getTypeInformation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.getWither()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.getWither&text=getWither\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.hashCode()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.isArray()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.isArray&text=isArray\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.isCollectionLike()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.isCollectionLike&text=isCollectionLike\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.isEntity()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.isEntity&text=isEntity\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.isImmutable()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.isImmutable&text=isImmutable\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty.isMap()?alt=org.springframework.data.mapping.model.AbstractPersistentProperty.isMap&text=isMap\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"org.springframework.data.mapping.model.AnnotationBasedPersistentProperty?alt=org.springframework.data.mapping.model.AnnotationBasedPersistentProperty&text=AnnotationBasedPersistentProperty\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.<A>findAnnotation(java.lang.Class<A>)?alt=org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.<A>findAnnotation&text=<A>findAnnotation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.<A>findPropertyOrOwnerAnnotation(java.lang.Class<A>)?alt=org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.<A>findPropertyOrOwnerAnnotation&text=<A>findPropertyOrOwnerAnnotation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.getAssociationTargetTypeInformation()?alt=org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.getAssociationTargetTypeInformation&text=getAssociationTargetTypeInformation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.getSpelExpression()?alt=org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.getSpelExpression&text=getSpelExpression\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isAnnotationPresent(java.lang.Class<? extends java.lang.annotation.Annotation>)?alt=org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isAnnotationPresent&text=isAnnotationPresent\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isAssociation()?alt=org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isAssociation&text=isAssociation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isIdProperty()?alt=org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isIdProperty&text=isIdProperty\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isTransient()?alt=org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isTransient&text=isTransient\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isVersionProperty()?alt=org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isVersionProperty&text=isVersionProperty\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isWritable()?alt=org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isWritable&text=isWritable\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.toString()?alt=org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.usePropertyAccess()?alt=org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.usePropertyAccess&text=usePropertyAccess\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **BasicCosmosPersistentProperty**</br> extends <xref href=\"org.springframework.data.mapping.model.AnnotationBasedPersistentProperty?alt=org.springframework.data.mapping.model.AnnotationBasedPersistentProperty&text=AnnotationBasedPersistentProperty\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty?alt=com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty&text=CosmosPersistentProperty\" data-throw-if-not-resolved=\"False\" />&gt;</br> implements <xref href=\"com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty?alt=com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty&text=CosmosPersistentProperty\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.BasicCosmosPersistentProperty(org.springframework.data.mapping.model.Property,com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity<?>,org.springframework.data.mapping.model.SimpleTypeHolder)"
  fullName: "com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.BasicCosmosPersistentProperty(Property property, CosmosPersistentEntity<?> owner, SimpleTypeHolder simpleTypeHolder)"
  name: "BasicCosmosPersistentProperty(Property property, CosmosPersistentEntity<?> owner, SimpleTypeHolder simpleTypeHolder)"
  nameWithType: "BasicCosmosPersistentProperty.BasicCosmosPersistentProperty(Property property, CosmosPersistentEntity<?> owner, SimpleTypeHolder simpleTypeHolder)"
  summary: "Creates a new <xref uid=\"com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BasicCosmosPersistentProperty\"></xref>."
  parameters:
  - description: "must not be null."
    name: "property"
    type: "<xref href=\"org.springframework.data.mapping.model.Property?alt=org.springframework.data.mapping.model.Property&text=Property\" data-throw-if-not-resolved=\"False\" />"
  - description: "must not be null."
    name: "owner"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity?alt=com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity&text=CosmosPersistentEntity\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - description: "must not be null."
    name: "simpleTypeHolder"
    type: "<xref href=\"org.springframework.data.mapping.model.SimpleTypeHolder?alt=org.springframework.data.mapping.model.SimpleTypeHolder&text=SimpleTypeHolder\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BasicCosmosPersistentProperty(Property property, CosmosPersistentEntity<?> owner, SimpleTypeHolder simpleTypeHolder)"
  desc: "Creates a new <xref uid=\"com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BasicCosmosPersistentProperty\"></xref>."
methods:
- uid: "com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.createAssociation()"
  fullName: "com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.createAssociation()"
  name: "createAssociation()"
  nameWithType: "BasicCosmosPersistentProperty.createAssociation()"
  modifiers:
  - "protected"
  overridden: "org.springframework.data.mapping.model.AbstractPersistentProperty.createAssociation()"
  syntax: "protected Association<CosmosPersistentProperty> createAssociation()"
  returns:
    type: "<xref href=\"org.springframework.data.mapping.Association?alt=org.springframework.data.mapping.Association&text=Association\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty?alt=com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty&text=CosmosPersistentProperty\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.isIdProperty()"
  fullName: "com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.isIdProperty()"
  name: "isIdProperty()"
  nameWithType: "BasicCosmosPersistentProperty.isIdProperty()"
  overridden: "org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isIdProperty()"
  syntax: "public boolean isIdProperty()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Special <xref uid=\"com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPersistentProperty\"></xref> that takes annotations at a property into account."
implements:
- "<xref href=\"com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty?alt=com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty&text=CosmosPersistentProperty\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.spring.data.cosmos.core.mapping"
artifact: com.azure:azure-spring-data-cosmos:3.46.0
