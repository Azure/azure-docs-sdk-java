### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCreateAfterElasticPoolOptions
  id: WithCreateAfterElasticPoolOptions
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCreateAfterElasticPoolOptions.yml
  langs:
  - java
  name: SqlDatabaseOperations.DefinitionStages.WithCreateAfterElasticPoolOptions
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithCreateAfterElasticPoolOptions
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCreateAfterElasticPoolOptions
  type: Interface
  source:
    remote:
      path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabaseOperations.java
      branch: master
      repo: https://github.com/Azure/azure-libraries-for-java
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabaseOperations.java
    startLine: 410
  package: com.microsoft.azure.management.sql
  summary: "<p>The final stage of the SQL Database definition after the SQL Elastic Pool definition. </p>"
  syntax:
    content: public interface WithCreateAfterElasticPoolOptions extends SqlDatabaseOperations.DefinitionStages.WithCollationAfterElasticPoolOptions,SqlDatabaseOperations.DefinitionStages.WithMaxSizeBytesAfterElasticPoolOptions,SqlDatabaseOperations.DefinitionStages.WithCreateFinal
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
  - com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  - com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCollationAfterElasticPoolOptions.withCollation(String)
  - com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithMaxSizeBytesAfterElasticPoolOptions.withMaxSizeBytes(long)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTag(String,String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTags(Map<String, String>)
references:
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: create()
  nameWithType: Creatable<T>.create()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.create()
  type: Method
  summary: "<p>Execute the create request.</p>\r\n<p></p>"
  syntax:
    content: public T create()
    return:
      type: 8ce1ecb9
      description: <p>the create resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: createAsync(final ServiceCallback<T> callback)
  nameWithType: Creatable<T>.createAsync(final ServiceCallback<T> callback)
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync(final ServiceCallback<T> callback)
  type: Method
  summary: "<p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<T> createAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback to handle success and failure </p>
    return:
      type: c0371a4e
      description: <p>a handle to cancel the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: createAsync()
  nameWithType: Creatable<T>.createAsync()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync()
  type: Method
  summary: "<p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Indexable> createAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.management.resources.fluentcore.model.Indexablea08ddfce
      description: <p>an observable of the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Indexable
  href: com.microsoft.azure.management.resources.fluentcore.model.Indexable.yml
  name: key()
  nameWithType: Indexable.key()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>the index key. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.yml
  name: name()
  nameWithType: HasName.name()
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  type: Method
  syntax:
    content: public String name()
    return:
      type: "26831127"
      description: <p>the name of the resource </p>
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCollationAfterElasticPoolOptions.withCollation(String)
  parent: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCollationAfterElasticPoolOptions
  href: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCollationAfterElasticPoolOptions.yml
  name: withCollation(String collation)
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithCollationAfterElasticPoolOptions.withCollation(String collation)
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCollationAfterElasticPoolOptions.withCollation(String collation)
  type: Method
  summary: "<p>Sets the collation for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public WithCreateAfterElasticPoolOptions withCollation(String collation)
    parameters:
    - id: collation
      type: "26831127"
      description: <p>collation to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCreateAfterElasticPoolOptions
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithMaxSizeBytesAfterElasticPoolOptions.withMaxSizeBytes(long)
  parent: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithMaxSizeBytesAfterElasticPoolOptions
  href: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithMaxSizeBytesAfterElasticPoolOptions.yml
  name: withMaxSizeBytes(long maxSizeBytes)
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithMaxSizeBytesAfterElasticPoolOptions.withMaxSizeBytes(long maxSizeBytes)
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithMaxSizeBytesAfterElasticPoolOptions.withMaxSizeBytes(long maxSizeBytes)
  type: Method
  summary: "<p>Sets the max size in bytes for SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public WithCreateAfterElasticPoolOptions withMaxSizeBytes(long maxSizeBytes)
    parameters:
    - id: maxSizeBytes
      type: 0364520f
      description: '<p>max size of the Azure SQL Database expressed in bytes. Note: Only the following sizes are supported (in addition to limitations being placed on each edition): { 100 MB | 500 MB |1 GB | 5 GB | 10 GB | 20 GB | 30 GB … 150 GB | 200 GB … 500 GB } </p>'
    return:
      type: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCreateAfterElasticPoolOptions
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTag(String,String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.yml
  name: withTag(String key, String value)
  nameWithType: Resource.DefinitionWithTags<T>.withTag(String key, String value)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTag(String key, String value)
  type: Method
  summary: "<p>Adds a tag to the resource. </p>"
  syntax:
    content: public T withTag(String key, String value)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key for the tag </p>
    - id: value
      type: "26831127"
      description: <p>the value for the tag </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTags(Map<String, String>)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.yml
  name: withTags(Map<String, String> tags)
  nameWithType: Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  type: Method
  summary: "<p>Specifies tags for the resource as a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref>. </p>"
  syntax:
    content: public T withTags(Map<String, String> tags)
    parameters:
    - id: tags
      type: 689c8cb5
      description: <p>a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Map"></xref> of tags </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCollationAfterElasticPoolOptions
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCollationAfterElasticPoolOptions.yml
  name: SqlDatabaseOperations.DefinitionStages.WithCollationAfterElasticPoolOptions
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithCollationAfterElasticPoolOptions
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCollationAfterElasticPoolOptions
  type: Interface
  summary: "<p>The SQL Database definition to set the collation for database. </p>"
  syntax:
    content: public interface WithCollationAfterElasticPoolOptions
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithMaxSizeBytesAfterElasticPoolOptions
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithMaxSizeBytesAfterElasticPoolOptions.yml
  name: SqlDatabaseOperations.DefinitionStages.WithMaxSizeBytesAfterElasticPoolOptions
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithMaxSizeBytesAfterElasticPoolOptions
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithMaxSizeBytesAfterElasticPoolOptions
  type: Interface
  summary: "<p>The SQL Database definition to set the Max Size in Bytes for database. </p>"
  syntax:
    content: public interface WithMaxSizeBytesAfterElasticPoolOptions
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCreateFinal
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCreateFinal.yml
  name: SqlDatabaseOperations.DefinitionStages.WithCreateFinal
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithCreateFinal
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCreateFinal
  type: Interface
  summary: "<p>A SQL Database definition with sufficient inputs to create a new SQL Server in the cloud, but exposing additional optional inputs to specify. </p>"
  syntax:
    content: public interface WithCreateFinal
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithExistingDatabaseAfterElasticPool
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithExistingDatabaseAfterElasticPool.yml
  name: SqlDatabaseOperations.DefinitionStages.WithExistingDatabaseAfterElasticPool
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithExistingDatabaseAfterElasticPool
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithExistingDatabaseAfterElasticPool
  type: Interface
  summary: "<p>The stage to decide whether using existing database or not. </p>"
  syntax:
    content: public interface WithExistingDatabaseAfterElasticPool
