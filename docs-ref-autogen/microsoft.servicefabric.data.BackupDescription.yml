### YamlMime:JavaType
constructors:
- fullName: microsoft.servicefabric.data.BackupDescription.BackupDescription(BackupOption backupOption, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  name: BackupDescription(BackupOption backupOption, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  nameWithType: BackupDescription.BackupDescription(BackupOption backupOption, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  parameters:
  - description: <p>The backup option for the callback. </p>
    name: backupOption
    type: <xref href="microsoft.servicefabric.data.BackupOption?alt=microsoft.servicefabric.data.BackupOption&text=BackupOption" data-throw-if-not-resolved="False"/>
  - description: <p>Callback to be called when the backup folder has been created and populated locally by the system. This folder is now ready to be moved out of the node. </p>
    name: backupCallback
    type: BiFunction&lt;<xref href="microsoft.servicefabric.data.BackupInfo?alt=microsoft.servicefabric.data.BackupInfo&text=BackupInfo" data-throw-if-not-resolved="False"/>, <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>, CompletableFuture&lt;Boolean&gt;&gt;
  summary: >-
    <p>Initializes a new instance of the <xref uid="microsoft.servicefabric.data.BackupDescription" data-throw-if-not-resolved="false" data-raw-source="BackupDescription"></xref> structure.</p>

    <p></p>
  syntax: public BackupDescription(BackupOption backupOption, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  uid: microsoft.servicefabric.data.BackupDescription.BackupDescription(BackupOption,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
- fullName: microsoft.servicefabric.data.BackupDescription.BackupDescription(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  name: BackupDescription(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  nameWithType: BackupDescription.BackupDescription(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  parameters:
  - description: <p>Callback to be called when the backup folder has been created and populated locally by the system. This folder is now ready to be moved out of the node. </p>
    name: backupCallback
    type: BiFunction&lt;<xref href="microsoft.servicefabric.data.BackupInfo?alt=microsoft.servicefabric.data.BackupInfo&text=BackupInfo" data-throw-if-not-resolved="False"/>, <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>, CompletableFuture&lt;Boolean&gt;&gt;
  summary: >-
    <p>Initializes a new instance of the <xref uid="microsoft.servicefabric.data.BackupDescription" data-throw-if-not-resolved="false" data-raw-source="BackupDescription"></xref> structure.</p>

    <p></p>
  syntax: public BackupDescription(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  uid: microsoft.servicefabric.data.BackupDescription.BackupDescription(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.data.BackupDescription.getBackupCallback()
  name: getBackupCallback()
  nameWithType: BackupDescription.getBackupCallback()
  returns:
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Function"></xref>

      </p>
    type: BiFunction&lt;<xref href="microsoft.servicefabric.data.BackupInfo?alt=microsoft.servicefabric.data.BackupInfo&text=BackupInfo" data-throw-if-not-resolved="False"/>, <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>, CompletableFuture&lt;Boolean&gt;&gt;
  summary: >-
    <p>Gets the callback to be called when the backup folder has been created locally and is ready to be moved out of the node. </p>

    <p>

      <b>Remarks:</b>Boolean returned by the backupCallback indicate whether the service was able to successfully move the backup folder to an external location. If false is returned, BackupAsync throws InvalidOperationException with the relevant message indicating backupCallback returned false. Also, backup will be marked as unsuccessful. </p>

    <p></p>
  syntax: public BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> getBackupCallback()
  uid: microsoft.servicefabric.data.BackupDescription.getBackupCallback()
- fullName: microsoft.servicefabric.data.BackupDescription.getBackupOption()
  name: getBackupOption()
  nameWithType: BackupDescription.getBackupOption()
  returns:
    description: >-
      <p>

        <xref uid="microsoft.servicefabric.data.BackupOption" data-throw-if-not-resolved="false" data-raw-source="BackupOption"></xref>

      </p>
    type: <xref href="microsoft.servicefabric.data.BackupOption?alt=microsoft.servicefabric.data.BackupOption&text=BackupOption" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The type of backup to perform.</p>

    <p></p>
  syntax: public BackupOption getBackupOption()
  uid: microsoft.servicefabric.data.BackupDescription.getBackupOption()
nameWithType: BackupDescription
syntax: public class BackupDescription
type: class
uid: microsoft.servicefabric.data.BackupDescription
fullName: microsoft.servicefabric.data.BackupDescription
name: BackupDescription
package: microsoft.servicefabric.data
summary: <p>A BackupDescription contains all of the information necessary to backup a stateful service replica. </p>
metadata: {}
