### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  id: ReliableStateManagerReplicatorSettings
  parent: microsoft.servicefabric.replicator
  children:
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getBatchAcknowledgementInterval()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getCheckpointThresholdInMB()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialCopyQueueSize()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialPrimaryReplicationQueueSize()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialSecondaryReplicationQueueSize()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxAccumulatedBackupLogSizeInMB()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxCopyQueueSize()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxMetadataSizeInKB()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxPrimaryReplicationQueueSize()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxRecordSizeInKB()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxReplicationMessageSize()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxSecondaryReplicationQueueSize()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxWriteQueueDepthInKB()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMinLogSizeInMB()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getOptimizeLogForLowerDiskUsage()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorAddress()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorListenAddress()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorPublishAddress()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getRetryInterval()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSecondaryClearAcknowledgedOperations()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSecurityCredentials()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSharedLogId()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSharedLogPath()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSlowApiMonitoringDuration()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getThrottlingThresholdFactor()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getTruncationThresholdFactor()
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setBatchAcknowledgementInterval(Duration)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setCheckpointThresholdInMB(Integer)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialCopyQueueSize(Long)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialPrimaryReplicationQueueSize(Long)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialSecondaryReplicationQueueSize(Long)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxAccumulatedBackupLogSizeInMB(Integer)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxCopyQueueSize(Long)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxMetadataSizeInKB(Integer)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxPrimaryReplicationQueueMemorySize(Long)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxPrimaryReplicationQueueSize(Long)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxRecordSizeInKB(Integer)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxReplicationMessageSize(Long)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxSecondaryReplicationQueueMemorySize(Long)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxSecondaryReplicationQueueSize(Long)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxWriteQueueDepthInKB(Integer)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMinLogSizeInMB(Integer)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setOptimizeLogForLowerDiskUsage(Boolean)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorAddress(String)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorListenAddress(String)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorPublishAddress(String)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setRetryInterval(Duration)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSecondaryClearAcknowledgedOperations(Boolean)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSecurityCredentials(SecurityCredentials)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSharedLogId(String)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSharedLogPath(String)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSlowApiMonitoringDuration(Duration)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setThrottlingThresholdFactor(Integer)
  - microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setTruncationThresholdFactor(Integer)
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: ReliableStateManagerReplicatorSettings
  nameWithType: ReliableStateManagerReplicatorSettings
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 12
  package: microsoft.servicefabric.replicator
  summary: "<p>Settings that configure the replicator. </p>"
  syntax:
    content: public class ReliableStateManagerReplicatorSettings
  inheritance:
  - java.lang.Object
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getBatchAcknowledgementInterval()
  id: getBatchAcknowledgementInterval()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getBatchAcknowledgementInterval()
  nameWithType: ReliableStateManagerReplicatorSettings.getBatchAcknowledgementInterval()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getBatchAcknowledgementInterval()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getBatchAcknowledgementInterval*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 100
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the amount of time that the replicator waits after receiving an operation before sending back an acknowledgment. The default value is 5 milliseconds.</p>\r\n<p></p>"
  syntax:
    content: public Duration getBatchAcknowledgementInterval()
    return:
      type: e02a2de0
      description: <p>The batch acknowledgment interval. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getCheckpointThresholdInMB()
  id: getCheckpointThresholdInMB()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getCheckpointThresholdInMB()
  nameWithType: ReliableStateManagerReplicatorSettings.getCheckpointThresholdInMB()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getCheckpointThresholdInMB()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getCheckpointThresholdInMB*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 520
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the checkpoint threshold. A checkpoint will be initiated when the log usage exceeds this value. Default value is 50. The unit is MB.</p>\r\n<p></p>"
  syntax:
    content: public Integer getCheckpointThresholdInMB()
    return:
      type: 08effaa0
      description: <p>The checkpoint threshold. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialCopyQueueSize()
  id: getInitialCopyQueueSize()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getInitialCopyQueueSize()
  nameWithType: ReliableStateManagerReplicatorSettings.getInitialCopyQueueSize()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialCopyQueueSize()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialCopyQueueSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 205
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the initial size of the copy operation queue inside the replicator, which contains copy operations. Default value is 64. The value is the number of operations in the copy operation queue. Must be a power of 2.</p>\r\n<p></p>"
  syntax:
    content: public Long getInitialCopyQueueSize()
    return:
      type: 34f09483
      description: <p>The initial copy queue size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialPrimaryReplicationQueueSize()
  id: getInitialPrimaryReplicationQueueSize()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getInitialPrimaryReplicationQueueSize()
  nameWithType: ReliableStateManagerReplicatorSettings.getInitialPrimaryReplicationQueueSize()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialPrimaryReplicationQueueSize()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialPrimaryReplicationQueueSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 271
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the initial primary replication queue size. Default value is 64. The value is the number of operations in the primary replication queue. Must be a power of 2.</p>\r\n<p></p>"
  syntax:
    content: public Long getInitialPrimaryReplicationQueueSize()
    return:
      type: 34f09483
      description: <p>The initial primary replication queue size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialSecondaryReplicationQueueSize()
  id: getInitialSecondaryReplicationQueueSize()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getInitialSecondaryReplicationQueueSize()
  nameWithType: ReliableStateManagerReplicatorSettings.getInitialSecondaryReplicationQueueSize()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialSecondaryReplicationQueueSize()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialSecondaryReplicationQueueSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 334
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the initial secondary replication queue size. Default value is 64. The value is the number of operations in the secondary replication queue. Must be a power of 2.</p>\r\n<p></p>"
  syntax:
    content: public Long getInitialSecondaryReplicationQueueSize()
    return:
      type: 34f09483
      description: <p>The initial secondary replication queue size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxAccumulatedBackupLogSizeInMB()
  id: getMaxAccumulatedBackupLogSizeInMB()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getMaxAccumulatedBackupLogSizeInMB()
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxAccumulatedBackupLogSizeInMB()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxAccumulatedBackupLogSizeInMB()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxAccumulatedBackupLogSizeInMB*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 544
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the max size for an accumulated backup log across backups. An incremental backup requests will fail if the backup logs generated by the request causes the total amount of logs accumulated including the last full backup to be greater than MaxAccumulatedBackupLogSizeInMB. In such cases, user is required to take a full backup. Default value is 800. The unit is MB.</p>\r\n<p></p>"
  syntax:
    content: public Integer getMaxAccumulatedBackupLogSizeInMB()
    return:
      type: 08effaa0
      description: <p>The max accumulated backup log size in MB. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxCopyQueueSize()
  id: getMaxCopyQueueSize()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getMaxCopyQueueSize()
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxCopyQueueSize()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxCopyQueueSize()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxCopyQueueSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 227
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the maximum size of the copy operation queue inside replicator, which contains copy operations. Default value is 1024. The value is the max number of operations in the copy operation queue. Must be a power of 2.</p>\r\n<p></p>"
  syntax:
    content: public Long getMaxCopyQueueSize()
    return:
      type: 34f09483
      description: <p>The max copy queue size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxMetadataSizeInKB()
  id: getMaxMetadataSizeInKB()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getMaxMetadataSizeInKB()
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxMetadataSizeInKB()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxMetadataSizeInKB()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxMetadataSizeInKB*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 446
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the amount of extra persistent storage space reserved for the replicator specified in kilobytes that is associated with this replica. This value must be a multiple of 4. The default value is 4. The unit is KB.</p>\r\n<p></p>"
  syntax:
    content: public Integer getMaxMetadataSizeInKB()
    return:
      type: 08effaa0
      description: <p>The max metadata size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize()
  id: getMaxPrimaryReplicationQueueMemorySize()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getMaxPrimaryReplicationQueueMemorySize()
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 313
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the max primary replication queue memory size. Default value is 0, which implies there is no memory limitation. The unit is Bytes.</p>\r\n<p></p>"
  syntax:
    content: public Long getMaxPrimaryReplicationQueueMemorySize()
    return:
      type: 34f09483
      description: <p>The max primary replication queue memory size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxPrimaryReplicationQueueSize()
  id: getMaxPrimaryReplicationQueueSize()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getMaxPrimaryReplicationQueueSize()
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxPrimaryReplicationQueueSize()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxPrimaryReplicationQueueSize()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxPrimaryReplicationQueueSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 292
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the max primary replication queue size. Default value is 1024. The value is the max number of operations in the primary replication queue. Must be a power of 2.</p>\r\n<p></p>"
  syntax:
    content: public Long getMaxPrimaryReplicationQueueSize()
    return:
      type: 34f09483
      description: <p>The max primary replication queue size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxRecordSizeInKB()
  id: getMaxRecordSizeInKB()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getMaxRecordSizeInKB()
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxRecordSizeInKB()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxRecordSizeInKB()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxRecordSizeInKB*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 470
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the largest record size which the replicator may write specified in kilobytes for the log that is associated with this replica. This value must be a multiple of 4 and greater than or equal to 128. The default value is 1024. The unit is KB.</p>\r\n<p></p>"
  syntax:
    content: public Integer getMaxRecordSizeInKB()
    return:
      type: 08effaa0
      description: <p>The max record size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxReplicationMessageSize()
  id: getMaxReplicationMessageSize()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getMaxReplicationMessageSize()
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxReplicationMessageSize()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxReplicationMessageSize()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxReplicationMessageSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 249
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the max replication message size. Default value is 50MB. The unit is Bytes.</p>\r\n<p></p>"
  syntax:
    content: public Long getMaxReplicationMessageSize()
    return:
      type: 34f09483
      description: <p>The max replication message size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize()
  id: getMaxSecondaryReplicationQueueMemorySize()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getMaxSecondaryReplicationQueueMemorySize()
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 378
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the max secondary replication queue memory size. Default value is 0, which implies there is no memory limitation. The unit is Bytes.</p>\r\n<p></p>"
  syntax:
    content: public Long getMaxSecondaryReplicationQueueMemorySize()
    return:
      type: 34f09483
      description: <p>The max secondary replication queue size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxSecondaryReplicationQueueSize()
  id: getMaxSecondaryReplicationQueueSize()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getMaxSecondaryReplicationQueueSize()
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxSecondaryReplicationQueueSize()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxSecondaryReplicationQueueSize()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxSecondaryReplicationQueueSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 356
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the initial secondary replication queue size. Default value is 64. The value is the number of operations in the secondary replication queue. Must be a power of 2.</p>\r\n<p></p>"
  syntax:
    content: public Long getMaxSecondaryReplicationQueueSize()
    return:
      type: 34f09483
      description: <p>The initial secondary replication queue size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxWriteQueueDepthInKB()
  id: getMaxWriteQueueDepthInKB()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getMaxWriteQueueDepthInKB()
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxWriteQueueDepthInKB()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxWriteQueueDepthInKB()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxWriteQueueDepthInKB*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 496
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the maximum write queue depth that the core logger can use as specified in kilobytes for the log that is associated with this replica. This value is the maximum number of bytes that can be outstanding during core logger updates. It may be 0 for the core logger to compute an appropriate value or a multiple of 4. The default value is 0. The unit is KB.</p>\r\n<p></p>"
  syntax:
    content: public Integer getMaxWriteQueueDepthInKB()
    return:
      type: 08effaa0
      description: <p>The max write queue depth. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMinLogSizeInMB()
  id: getMinLogSizeInMB()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getMinLogSizeInMB()
  nameWithType: ReliableStateManagerReplicatorSettings.getMinLogSizeInMB()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMinLogSizeInMB()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMinLogSizeInMB*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 636
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the minimum log size. A truncation will not be initiated if it would reduce the size of the log to below this value. Default value is 0.</p>\r\n<p></p>"
  syntax:
    content: public Integer getMinLogSizeInMB()
    return:
      type: 08effaa0
      description: <p>The minimum log size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getOptimizeLogForLowerDiskUsage()
  id: getOptimizeLogForLowerDiskUsage()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getOptimizeLogForLowerDiskUsage()
  nameWithType: ReliableStateManagerReplicatorSettings.getOptimizeLogForLowerDiskUsage()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getOptimizeLogForLowerDiskUsage()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getOptimizeLogForLowerDiskUsage*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 570
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets a flag, when true indicates the log should optimize in a way where less disk space is used for the log at the cost of IO performance. If false, the log will use more disk space but have better IO performance. Default value is true.</p>\r\n<p></p>"
  syntax:
    content: public Boolean getOptimizeLogForLowerDiskUsage()
    return:
      type: 866c2227
      description: <p>If the OptimizeLogForLowerDiskUsage option is enabled. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorAddress()
  id: getReplicatorAddress()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getReplicatorAddress()
  nameWithType: ReliableStateManagerReplicatorSettings.getReplicatorAddress()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorAddress()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorAddress*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 121
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the address in {ip}:{port} format that this replicator will use when communicating with other replicators. The default value is \"localhost:0\", which picks a dynamic port number in runtime. If replicator is running inside a container, you should try setting up <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReliableStateManagerReplicatorSettings#replicatorListenAddress\"></xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReliableStateManagerReplicatorSettings#replicatorPublishAddress\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public String getReplicatorAddress()
    return:
      type: "26831127"
      description: <p>The replicator address. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorListenAddress()
  id: getReplicatorListenAddress()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getReplicatorListenAddress()
  nameWithType: ReliableStateManagerReplicatorSettings.getReplicatorListenAddress()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorListenAddress()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorListenAddress*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 143
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the address in {ip}:{port} format that this replicator will use to receive information from other replicators. The default value is \"localhost:0\", which picks a dynamic port number in runtime. {ip} part of the listen address can be obtained from <xref uid=\"system.fabric.CodePackageActivationContext.getServiceListenAddress()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.CodePackageActivationContext#getServiceListenAddress()\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public String getReplicatorListenAddress()
    return:
      type: "26831127"
      description: <p>The replicator address. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorPublishAddress()
  id: getReplicatorPublishAddress()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getReplicatorPublishAddress()
  nameWithType: ReliableStateManagerReplicatorSettings.getReplicatorPublishAddress()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorPublishAddress()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorPublishAddress*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 165
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the address in {ip}:{port} format that this replicator will use to send information to other replicators. The default value is \"localhost:0\", which picks a dynamic port number in runtime. {ip} part of the publish address can be obtained from <xref uid=\"system.fabric.CodePackageActivationContext.getServicePublishAddress()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.CodePackageActivationContext#getServicePublishAddress()\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public String getReplicatorPublishAddress()
    return:
      type: "26831127"
      description: <p>The replicator address. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getRetryInterval()
  id: getRetryInterval()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getRetryInterval()
  nameWithType: ReliableStateManagerReplicatorSettings.getRetryInterval()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getRetryInterval()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getRetryInterval*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 81
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets how long the replicator waits after it transmits a message from the primary to the secondary for the secondary to acknowledge that it has received the message. The default value is 5 seconds. </p>"
  syntax:
    content: public Duration getRetryInterval()
    return:
      type: e02a2de0
      description: <p>retryInterval </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSecondaryClearAcknowledgedOperations()
  id: getSecondaryClearAcknowledgedOperations()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getSecondaryClearAcknowledgedOperations()
  nameWithType: ReliableStateManagerReplicatorSettings.getSecondaryClearAcknowledgedOperations()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSecondaryClearAcknowledgedOperations()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSecondaryClearAcknowledgedOperations*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 595
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets a flag, when true indicates the secondary replicator should clear the in-memory queue after acknowledging the operations to the primary (After the operations are flushed to disk). Default value is false. Settings this to \"TRUE\" can result in additional disk reads on the new primary, while catching up replicas after a failover.</p>\r\n<p></p>"
  syntax:
    content: public Boolean getSecondaryClearAcknowledgedOperations()
    return:
      type: 866c2227
      description: <p>If the SecondaryClearAcknowledgedOperations option is enabled. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSecurityCredentials()
  id: getSecurityCredentials()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getSecurityCredentials()
  nameWithType: ReliableStateManagerReplicatorSettings.getSecurityCredentials()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSecurityCredentials()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSecurityCredentials*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 185
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the security credentials for securing the traffic between replicators.</p>\r\n<p></p>"
  syntax:
    content: public SecurityCredentials getSecurityCredentials()
    return:
      type: system.fabric.SecurityCredentials
      description: <p>The security credentials. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSharedLogId()
  id: getSharedLogId()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getSharedLogId()
  nameWithType: ReliableStateManagerReplicatorSettings.getSharedLogId()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSharedLogId()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSharedLogId*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 400
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the GUID identifier for the log container that is shared by a number of replicas on the windows fabric node including this one. Default value is \"\" which causes the replicator to use the global shared log for the node.</p>\r\n<p></p>"
  syntax:
    content: public String getSharedLogId()
    return:
      type: "26831127"
      description: <p>The shared log id. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSharedLogPath()
  id: getSharedLogPath()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getSharedLogPath()
  nameWithType: ReliableStateManagerReplicatorSettings.getSharedLogPath()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSharedLogPath()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSharedLogPath*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 423
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the full pathname to the log container that is shared by a number of replicas on the node including this one. Default value is \"\" which causes the replicator to use the global shared log for the node.</p>\r\n<p></p>"
  syntax:
    content: public String getSharedLogPath()
    return:
      type: "26831127"
      description: <p>The shared log path. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSlowApiMonitoringDuration()
  id: getSlowApiMonitoringDuration()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getSlowApiMonitoringDuration()
  nameWithType: ReliableStateManagerReplicatorSettings.getSlowApiMonitoringDuration()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSlowApiMonitoringDuration()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSlowApiMonitoringDuration*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 617
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the interval after which the replicator sends a warning health report that the API is slow and is taking longer than expected duration. Default value is 5 minutes. </p>"
  syntax:
    content: public Duration getSlowApiMonitoringDuration()
    return:
      type: e02a2de0
      description: <p>SlowApiMonitoringDuration </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getThrottlingThresholdFactor()
  id: getThrottlingThresholdFactor()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getThrottlingThresholdFactor()
  nameWithType: ReliableStateManagerReplicatorSettings.getThrottlingThresholdFactor()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getThrottlingThresholdFactor()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getThrottlingThresholdFactor*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 679
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the throttling threshold factor. Throttling will be initiated when the log usage exceeds this value times MinLogSizeInMB. Default value is 3.</p>\r\n<p></p>"
  syntax:
    content: public Integer getThrottlingThresholdFactor()
    return:
      type: 08effaa0
      description: <p>The throttling threshold. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getTruncationThresholdFactor()
  id: getTruncationThresholdFactor()
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: getTruncationThresholdFactor()
  nameWithType: ReliableStateManagerReplicatorSettings.getTruncationThresholdFactor()
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getTruncationThresholdFactor()
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getTruncationThresholdFactor*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 657
  package: microsoft.servicefabric.replicator
  summary: "<p>Gets the truncation threshold factor. A truncation will be initiated when the log usage exceeds this value times MinLogSizeInMB. Default value is 2.</p>\r\n<p></p>"
  syntax:
    content: public Integer getTruncationThresholdFactor()
    return:
      type: 08effaa0
      description: <p>The truncation threshold. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setBatchAcknowledgementInterval(Duration)
  id: setBatchAcknowledgementInterval(Duration)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setBatchAcknowledgementInterval(Duration batchAcknowledgementInterval)
  nameWithType: ReliableStateManagerReplicatorSettings.setBatchAcknowledgementInterval(Duration batchAcknowledgementInterval)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setBatchAcknowledgementInterval(Duration batchAcknowledgementInterval)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setBatchAcknowledgementInterval*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 110
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the amount of time that the replicator waits after receiving an operation before sending back an acknowledgment. The default value is 5 milliseconds.</p>\r\n<p></p>"
  syntax:
    content: public void setBatchAcknowledgementInterval(Duration batchAcknowledgementInterval)
    parameters:
    - id: batchAcknowledgementInterval
      type: e02a2de0
      description: <p>The batch acknowledgment interval. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setCheckpointThresholdInMB(Integer)
  id: setCheckpointThresholdInMB(Integer)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setCheckpointThresholdInMB(Integer checkpointThresholdInMB)
  nameWithType: ReliableStateManagerReplicatorSettings.setCheckpointThresholdInMB(Integer checkpointThresholdInMB)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setCheckpointThresholdInMB(Integer checkpointThresholdInMB)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setCheckpointThresholdInMB*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 530
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the checkpoint threshold. A checkpoint will be initiated when the log usage exceeds this value. Default value is 50. The unit is MB.</p>\r\n<p></p>"
  syntax:
    content: public void setCheckpointThresholdInMB(Integer checkpointThresholdInMB)
    parameters:
    - id: checkpointThresholdInMB
      type: 08effaa0
      description: <p>The checkpoint threshold. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialCopyQueueSize(Long)
  id: setInitialCopyQueueSize(Long)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setInitialCopyQueueSize(Long initialCopyQueueSize)
  nameWithType: ReliableStateManagerReplicatorSettings.setInitialCopyQueueSize(Long initialCopyQueueSize)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialCopyQueueSize(Long initialCopyQueueSize)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialCopyQueueSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 216
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the initial size of the copy operation queue inside the replicator, which contains copy operations. Default value is 64. The value is the number of operations in the copy operation queue. Must be a power of 2.</p>\r\n<p></p>"
  syntax:
    content: public void setInitialCopyQueueSize(Long initialCopyQueueSize)
    parameters:
    - id: initialCopyQueueSize
      type: 34f09483
      description: <p>The initial copy queue size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialPrimaryReplicationQueueSize(Long)
  id: setInitialPrimaryReplicationQueueSize(Long)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setInitialPrimaryReplicationQueueSize(Long initialPrimaryReplicationQueueSize)
  nameWithType: ReliableStateManagerReplicatorSettings.setInitialPrimaryReplicationQueueSize(Long initialPrimaryReplicationQueueSize)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialPrimaryReplicationQueueSize(Long initialPrimaryReplicationQueueSize)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialPrimaryReplicationQueueSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 282
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the initial primary replication queue size. Default value is 64. The value is the number of operations in the primary replication queue. Must be a power of 2.</p>\r\n<p></p>"
  syntax:
    content: public void setInitialPrimaryReplicationQueueSize(Long initialPrimaryReplicationQueueSize)
    parameters:
    - id: initialPrimaryReplicationQueueSize
      type: 34f09483
      description: <p>The initial primary replication queue size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialSecondaryReplicationQueueSize(Long)
  id: setInitialSecondaryReplicationQueueSize(Long)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setInitialSecondaryReplicationQueueSize(Long initialSecondaryReplicationQueueSize)
  nameWithType: ReliableStateManagerReplicatorSettings.setInitialSecondaryReplicationQueueSize(Long initialSecondaryReplicationQueueSize)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialSecondaryReplicationQueueSize(Long initialSecondaryReplicationQueueSize)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialSecondaryReplicationQueueSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 345
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the initial secondary replication queue size. Default value is 64. The value is the number of operations in the secondary replication queue. Must be a power of 2.</p>\r\n<p></p>"
  syntax:
    content: public void setInitialSecondaryReplicationQueueSize(Long initialSecondaryReplicationQueueSize)
    parameters:
    - id: initialSecondaryReplicationQueueSize
      type: 34f09483
      description: <p>The initial secondary replication queue size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxAccumulatedBackupLogSizeInMB(Integer)
  id: setMaxAccumulatedBackupLogSizeInMB(Integer)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setMaxAccumulatedBackupLogSizeInMB(Integer maxAccumulatedBackupLogSizeInMB)
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxAccumulatedBackupLogSizeInMB(Integer maxAccumulatedBackupLogSizeInMB)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxAccumulatedBackupLogSizeInMB(Integer maxAccumulatedBackupLogSizeInMB)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxAccumulatedBackupLogSizeInMB*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 558
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the max size for an accumulated backup log across backups. An incremental backup requests will fail if the backup logs generated by the request causes the total amount of logs accumulated including the last full backup to be greater than MaxAccumulatedBackupLogSizeInMB. In such cases, user is required to take a full backup. Default value is 800. The unit is MB.</p>\r\n<p></p>"
  syntax:
    content: public void setMaxAccumulatedBackupLogSizeInMB(Integer maxAccumulatedBackupLogSizeInMB)
    parameters:
    - id: maxAccumulatedBackupLogSizeInMB
      type: 08effaa0
      description: <p>The max accumulated backup log size in MB. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxCopyQueueSize(Long)
  id: setMaxCopyQueueSize(Long)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setMaxCopyQueueSize(Long maxCopyQueueSize)
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxCopyQueueSize(Long maxCopyQueueSize)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxCopyQueueSize(Long maxCopyQueueSize)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxCopyQueueSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 238
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the maximum size of the copy operation queue inside replicator, which contains copy operations. Default value is 1024. The value is the max number of operations in the copy operation queue. Must be a power of 2.</p>\r\n<p></p>"
  syntax:
    content: public void setMaxCopyQueueSize(Long maxCopyQueueSize)
    parameters:
    - id: maxCopyQueueSize
      type: 34f09483
      description: <p>The max copy queue size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxMetadataSizeInKB(Integer)
  id: setMaxMetadataSizeInKB(Integer)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setMaxMetadataSizeInKB(Integer maxMetadataSizeInKB)
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxMetadataSizeInKB(Integer maxMetadataSizeInKB)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxMetadataSizeInKB(Integer maxMetadataSizeInKB)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxMetadataSizeInKB*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 458
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the amount of extra persistent storage space reserved for the replicator specified in kilobytes that is associated with this replica. This value must be a multiple of 4. The default value is 4. The unit is KB.</p>\r\n<p></p>"
  syntax:
    content: public void setMaxMetadataSizeInKB(Integer maxMetadataSizeInKB)
    parameters:
    - id: maxMetadataSizeInKB
      type: 08effaa0
      description: <p>The max metadata size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxPrimaryReplicationQueueMemorySize(Long)
  id: setMaxPrimaryReplicationQueueMemorySize(Long)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setMaxPrimaryReplicationQueueMemorySize(Long maxPrimaryReplicationQueueMemorySize)
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxPrimaryReplicationQueueMemorySize(Long maxPrimaryReplicationQueueMemorySize)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxPrimaryReplicationQueueMemorySize(Long maxPrimaryReplicationQueueMemorySize)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxPrimaryReplicationQueueMemorySize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 323
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the max primary replication queue memory size. Default value is 0, which implies there is no memory limitation. The unit is Bytes.</p>\r\n<p></p>"
  syntax:
    content: public void setMaxPrimaryReplicationQueueMemorySize(Long maxPrimaryReplicationQueueMemorySize)
    parameters:
    - id: maxPrimaryReplicationQueueMemorySize
      type: 34f09483
      description: <p>The max primary replication queue memory size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxPrimaryReplicationQueueSize(Long)
  id: setMaxPrimaryReplicationQueueSize(Long)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setMaxPrimaryReplicationQueueSize(Long maxPrimaryReplicationQueueSize)
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxPrimaryReplicationQueueSize(Long maxPrimaryReplicationQueueSize)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxPrimaryReplicationQueueSize(Long maxPrimaryReplicationQueueSize)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxPrimaryReplicationQueueSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 303
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the max primary replication queue size. Default value is 1024. The value is the max number of operations in the primary replication queue. Must be a power of 2.</p>\r\n<p></p>"
  syntax:
    content: public void setMaxPrimaryReplicationQueueSize(Long maxPrimaryReplicationQueueSize)
    parameters:
    - id: maxPrimaryReplicationQueueSize
      type: 34f09483
      description: <p>The max primary replication queue size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxRecordSizeInKB(Integer)
  id: setMaxRecordSizeInKB(Integer)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setMaxRecordSizeInKB(Integer maxRecordSizeInKB)
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxRecordSizeInKB(Integer maxRecordSizeInKB)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxRecordSizeInKB(Integer maxRecordSizeInKB)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxRecordSizeInKB*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 482
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the largest record size which the replicator may write specified in kilobytes for the log that is associated with this replica. This value must be a multiple of 4 and greater than or equal to 128. The default value is 1024. The unit is KB.</p>\r\n<p></p>"
  syntax:
    content: public void setMaxRecordSizeInKB(Integer maxRecordSizeInKB)
    parameters:
    - id: maxRecordSizeInKB
      type: 08effaa0
      description: <p>The max record size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxReplicationMessageSize(Long)
  id: setMaxReplicationMessageSize(Long)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setMaxReplicationMessageSize(Long maxReplicationMessageSize)
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxReplicationMessageSize(Long maxReplicationMessageSize)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxReplicationMessageSize(Long maxReplicationMessageSize)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxReplicationMessageSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 260
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the max replication message size. Default value is 50MB. The unit is Bytes.</p>\r\n<p></p>"
  syntax:
    content: public void setMaxReplicationMessageSize(Long maxReplicationMessageSize)
    parameters:
    - id: maxReplicationMessageSize
      type: 34f09483
      description: <p>The max replication message size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxSecondaryReplicationQueueMemorySize(Long)
  id: setMaxSecondaryReplicationQueueMemorySize(Long)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setMaxSecondaryReplicationQueueMemorySize(Long maxSecondaryReplicationQueueMemorySize)
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxSecondaryReplicationQueueMemorySize(Long maxSecondaryReplicationQueueMemorySize)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxSecondaryReplicationQueueMemorySize(Long maxSecondaryReplicationQueueMemorySize)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxSecondaryReplicationQueueMemorySize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 388
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the max secondary replication queue memory size. Default value is 0, which implies there is no memory limitation. The unit is Bytes.</p>\r\n<p></p>"
  syntax:
    content: public void setMaxSecondaryReplicationQueueMemorySize(Long maxSecondaryReplicationQueueMemorySize)
    parameters:
    - id: maxSecondaryReplicationQueueMemorySize
      type: 34f09483
      description: <p>The max secondary replication queue size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxSecondaryReplicationQueueSize(Long)
  id: setMaxSecondaryReplicationQueueSize(Long)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setMaxSecondaryReplicationQueueSize(Long maxSecondaryReplicationQueueSize)
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxSecondaryReplicationQueueSize(Long maxSecondaryReplicationQueueSize)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxSecondaryReplicationQueueSize(Long maxSecondaryReplicationQueueSize)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxSecondaryReplicationQueueSize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 367
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the initial secondary replication queue size. Default value is 64. The value is the number of operations in the secondary replication queue. Must be a power of 2.</p>\r\n<p></p>"
  syntax:
    content: public void setMaxSecondaryReplicationQueueSize(Long maxSecondaryReplicationQueueSize)
    parameters:
    - id: maxSecondaryReplicationQueueSize
      type: 34f09483
      description: <p>The initial secondary replication queue size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxWriteQueueDepthInKB(Integer)
  id: setMaxWriteQueueDepthInKB(Integer)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setMaxWriteQueueDepthInKB(Integer maxWriteQueueDepthInKB)
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxWriteQueueDepthInKB(Integer maxWriteQueueDepthInKB)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxWriteQueueDepthInKB(Integer maxWriteQueueDepthInKB)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxWriteQueueDepthInKB*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 510
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the maximum write queue depth that the core logger can use as specified in kilobytes for the log that is associated with this replica. This value is the maximum number of bytes that can be outstanding during core logger updates. It may be 0 for the core logger to compute an appropriate value or a multiple of 4. The default value is 0. The unit is KB.</p>\r\n<p></p>"
  syntax:
    content: public void setMaxWriteQueueDepthInKB(Integer maxWriteQueueDepthInKB)
    parameters:
    - id: maxWriteQueueDepthInKB
      type: 08effaa0
      description: <p>The max write queue depth. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMinLogSizeInMB(Integer)
  id: setMinLogSizeInMB(Integer)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setMinLogSizeInMB(Integer minLogSizeInMB)
  nameWithType: ReliableStateManagerReplicatorSettings.setMinLogSizeInMB(Integer minLogSizeInMB)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMinLogSizeInMB(Integer minLogSizeInMB)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMinLogSizeInMB*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 646
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the minimum log size. A truncation will not be initiated if it would reduce the size of the log to below this value. Default value is 0.</p>\r\n<p></p>"
  syntax:
    content: public void setMinLogSizeInMB(Integer minLogSizeInMB)
    parameters:
    - id: minLogSizeInMB
      type: 08effaa0
      description: <p>The minimum log size. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setOptimizeLogForLowerDiskUsage(Boolean)
  id: setOptimizeLogForLowerDiskUsage(Boolean)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setOptimizeLogForLowerDiskUsage(Boolean optimizeLogForLowerDiskUsage)
  nameWithType: ReliableStateManagerReplicatorSettings.setOptimizeLogForLowerDiskUsage(Boolean optimizeLogForLowerDiskUsage)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setOptimizeLogForLowerDiskUsage(Boolean optimizeLogForLowerDiskUsage)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setOptimizeLogForLowerDiskUsage*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 582
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets a flag, when true indicates the log should optimize in a way where less disk space is used for the log at the cost of IO performance. If false, the log will use more disk space but have better IO performance. Default value is true.</p>\r\n<p></p>"
  syntax:
    content: public void setOptimizeLogForLowerDiskUsage(Boolean optimizeLogForLowerDiskUsage)
    parameters:
    - id: optimizeLogForLowerDiskUsage
      type: 866c2227
      description: <p>If the OptimizeLogForLowerDiskUsage option is enabled. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorAddress(String)
  id: setReplicatorAddress(String)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setReplicatorAddress(String replicatorAddress)
  nameWithType: ReliableStateManagerReplicatorSettings.setReplicatorAddress(String replicatorAddress)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorAddress(String replicatorAddress)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorAddress*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 132
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the address in {ip}:{port} format that this replicator will use when communicating with other replicators. The default value is \"localhost:0\", which picks a dynamic port number in runtime. If replicator is running inside a container, you should try setting up <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReliableStateManagerReplicatorSettings#replicatorListenAddress\"></xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReliableStateManagerReplicatorSettings#replicatorPublishAddress\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public void setReplicatorAddress(String replicatorAddress)
    parameters:
    - id: replicatorAddress
      type: "26831127"
      description: <p>The replicator address. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorListenAddress(String)
  id: setReplicatorListenAddress(String)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setReplicatorListenAddress(String replicatorListenAddress)
  nameWithType: ReliableStateManagerReplicatorSettings.setReplicatorListenAddress(String replicatorListenAddress)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorListenAddress(String replicatorListenAddress)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorListenAddress*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 154
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the address in {ip}:{port} format that this replicator will use to receive information from other replicators. The default value is \"localhost:0\", which picks a dynamic port number in runtime. {ip} part of the listen address can be obtained from <xref uid=\"system.fabric.CodePackageActivationContext.getServiceListenAddress()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.CodePackageActivationContext#getServiceListenAddress()\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public void setReplicatorListenAddress(String replicatorListenAddress)
    parameters:
    - id: replicatorListenAddress
      type: "26831127"
      description: <p>The replicator address. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorPublishAddress(String)
  id: setReplicatorPublishAddress(String)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setReplicatorPublishAddress(String replicatorPublishAddress)
  nameWithType: ReliableStateManagerReplicatorSettings.setReplicatorPublishAddress(String replicatorPublishAddress)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorPublishAddress(String replicatorPublishAddress)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorPublishAddress*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 176
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the address in {ip}:{port} format that this replicator will use to send information to other replicators. The default value is \"localhost:0\", which picks a dynamic port number in runtime. {ip} part of the publish address can be obtained from <xref uid=\"system.fabric.CodePackageActivationContext.getServicePublishAddress()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.CodePackageActivationContext#getServicePublishAddress()\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public void setReplicatorPublishAddress(String replicatorPublishAddress)
    parameters:
    - id: replicatorPublishAddress
      type: "26831127"
      description: <p>The replicator address. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setRetryInterval(Duration)
  id: setRetryInterval(Duration)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setRetryInterval(Duration retryInterval)
  nameWithType: ReliableStateManagerReplicatorSettings.setRetryInterval(Duration retryInterval)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setRetryInterval(Duration retryInterval)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setRetryInterval*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 90
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets how long the replicator waits after it transmits a message from the primary to the secondary for the secondary to acknowledge that it has received the message. The default value is 5 seconds. </p>"
  syntax:
    content: public void setRetryInterval(Duration retryInterval)
    parameters:
    - id: retryInterval
      type: e02a2de0
      description: <p>Retry interval </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSecondaryClearAcknowledgedOperations(Boolean)
  id: setSecondaryClearAcknowledgedOperations(Boolean)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setSecondaryClearAcknowledgedOperations(Boolean secondaryClearAcknowledgedOperations)
  nameWithType: ReliableStateManagerReplicatorSettings.setSecondaryClearAcknowledgedOperations(Boolean secondaryClearAcknowledgedOperations)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSecondaryClearAcknowledgedOperations(Boolean secondaryClearAcknowledgedOperations)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSecondaryClearAcknowledgedOperations*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 608
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets a flag, when true indicates the secondary replicator should clear the in-memory queue after acknowledging the operations to the primary (After the operations are flushed to disk). Default value is false. Settings this to \"TRUE\" can result in additional disk reads on the new primary, while catching up replicas after a failover.</p>\r\n<p></p>"
  syntax:
    content: public void setSecondaryClearAcknowledgedOperations(Boolean secondaryClearAcknowledgedOperations)
    parameters:
    - id: secondaryClearAcknowledgedOperations
      type: 866c2227
      description: <p>If the SecondaryClearAcknowledgedOperations option is enabled. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSecurityCredentials(SecurityCredentials)
  id: setSecurityCredentials(SecurityCredentials)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setSecurityCredentials(SecurityCredentials securityCredentials)
  nameWithType: ReliableStateManagerReplicatorSettings.setSecurityCredentials(SecurityCredentials securityCredentials)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSecurityCredentials(SecurityCredentials securityCredentials)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSecurityCredentials*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 194
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the security credentials for securing the traffic between replicators.</p>\r\n<p></p>"
  syntax:
    content: public void setSecurityCredentials(SecurityCredentials securityCredentials)
    parameters:
    - id: securityCredentials
      type: system.fabric.SecurityCredentials
      description: <p>The security credentials. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSharedLogId(String)
  id: setSharedLogId(String)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setSharedLogId(String sharedLogId)
  nameWithType: ReliableStateManagerReplicatorSettings.setSharedLogId(String sharedLogId)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSharedLogId(String sharedLogId)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSharedLogId*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 412
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the GUID identifier for the log container that is shared by a number of replicas on the windows fabric node including this one. Default value is \"\" which causes the replicator to use the global shared log for the node.</p>\r\n<p></p>"
  syntax:
    content: public void setSharedLogId(String sharedLogId)
    parameters:
    - id: sharedLogId
      type: "26831127"
      description: <p>The shared log id. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSharedLogPath(String)
  id: setSharedLogPath(String)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setSharedLogPath(String sharedLogPath)
  nameWithType: ReliableStateManagerReplicatorSettings.setSharedLogPath(String sharedLogPath)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSharedLogPath(String sharedLogPath)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSharedLogPath*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 434
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the full pathname to the log container that is shared by a number of replicas on the node including this one. Default value is \"\" which causes the replicator to use the global shared log for the node.</p>\r\n<p></p>"
  syntax:
    content: public void setSharedLogPath(String sharedLogPath)
    parameters:
    - id: sharedLogPath
      type: "26831127"
      description: <p>The shared log path. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSlowApiMonitoringDuration(Duration)
  id: setSlowApiMonitoringDuration(Duration)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setSlowApiMonitoringDuration(Duration slowApiMonitoringDuration)
  nameWithType: ReliableStateManagerReplicatorSettings.setSlowApiMonitoringDuration(Duration slowApiMonitoringDuration)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSlowApiMonitoringDuration(Duration slowApiMonitoringDuration)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSlowApiMonitoringDuration*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 626
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the interval after which the replicator sends a warning health report that the API is slow and is taking longer than expected duration. Default value is 5 minutes. </p>"
  syntax:
    content: public void setSlowApiMonitoringDuration(Duration slowApiMonitoringDuration)
    parameters:
    - id: slowApiMonitoringDuration
      type: e02a2de0
      description: <p>SlowApiMonitoringDuration </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setThrottlingThresholdFactor(Integer)
  id: setThrottlingThresholdFactor(Integer)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setThrottlingThresholdFactor(Integer throttlingThresholdFactor)
  nameWithType: ReliableStateManagerReplicatorSettings.setThrottlingThresholdFactor(Integer throttlingThresholdFactor)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setThrottlingThresholdFactor(Integer throttlingThresholdFactor)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setThrottlingThresholdFactor*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 688
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the throttling threshold factor. Throttling will be initiated when the log usage exceeds this value times MinLogSizeInMB. Default value is 3. </p>"
  syntax:
    content: public void setThrottlingThresholdFactor(Integer throttlingThresholdFactor)
    parameters:
    - id: throttlingThresholdFactor
      type: 08effaa0
      description: <p>The throttling threshold. </p>
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setTruncationThresholdFactor(Integer)
  id: setTruncationThresholdFactor(Integer)
  parent: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings
  href: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.yml
  langs:
  - java
  name: setTruncationThresholdFactor(Integer truncationThresholdFactor)
  nameWithType: ReliableStateManagerReplicatorSettings.setTruncationThresholdFactor(Integer truncationThresholdFactor)
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setTruncationThresholdFactor(Integer truncationThresholdFactor)
  overload: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setTruncationThresholdFactor*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.data/src/microsoft/servicefabric/replicator/ReliableStateManagerReplicatorSettings.java
    startLine: 668
  package: microsoft.servicefabric.replicator
  summary: "<p>Sets the truncation threshold factor. A truncation will be initiated when the log usage exceeds this value times MinLogSizeInMB. Default value is 2.</p>\r\n<p></p>"
  syntax:
    content: public void setTruncationThresholdFactor(Integer truncationThresholdFactor)
    parameters:
    - id: truncationThresholdFactor
      type: 08effaa0
      description: <p>The truncation threshold. </p>
references:
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getRetryInterval*
  name: getRetryInterval
  nameWithType: ReliableStateManagerReplicatorSettings.getRetryInterval
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getRetryInterval
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setRetryInterval*
  name: setRetryInterval
  nameWithType: ReliableStateManagerReplicatorSettings.setRetryInterval
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setRetryInterval
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getBatchAcknowledgementInterval*
  name: getBatchAcknowledgementInterval
  nameWithType: ReliableStateManagerReplicatorSettings.getBatchAcknowledgementInterval
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getBatchAcknowledgementInterval
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setBatchAcknowledgementInterval*
  name: setBatchAcknowledgementInterval
  nameWithType: ReliableStateManagerReplicatorSettings.setBatchAcknowledgementInterval
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setBatchAcknowledgementInterval
  package: microsoft.servicefabric.replicator
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorAddress*
  name: getReplicatorAddress
  nameWithType: ReliableStateManagerReplicatorSettings.getReplicatorAddress
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorAddress
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorAddress*
  name: setReplicatorAddress
  nameWithType: ReliableStateManagerReplicatorSettings.setReplicatorAddress
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorAddress
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorListenAddress*
  name: getReplicatorListenAddress
  nameWithType: ReliableStateManagerReplicatorSettings.getReplicatorListenAddress
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorListenAddress
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorListenAddress*
  name: setReplicatorListenAddress
  nameWithType: ReliableStateManagerReplicatorSettings.setReplicatorListenAddress
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorListenAddress
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorPublishAddress*
  name: getReplicatorPublishAddress
  nameWithType: ReliableStateManagerReplicatorSettings.getReplicatorPublishAddress
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getReplicatorPublishAddress
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorPublishAddress*
  name: setReplicatorPublishAddress
  nameWithType: ReliableStateManagerReplicatorSettings.setReplicatorPublishAddress
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setReplicatorPublishAddress
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSecurityCredentials*
  name: getSecurityCredentials
  nameWithType: ReliableStateManagerReplicatorSettings.getSecurityCredentials
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSecurityCredentials
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSecurityCredentials*
  name: setSecurityCredentials
  nameWithType: ReliableStateManagerReplicatorSettings.setSecurityCredentials
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSecurityCredentials
  package: microsoft.servicefabric.replicator
- uid: 34f09483
  spec.java:
  - name: Long
    fullName: Long
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialCopyQueueSize*
  name: getInitialCopyQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.getInitialCopyQueueSize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialCopyQueueSize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialCopyQueueSize*
  name: setInitialCopyQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.setInitialCopyQueueSize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialCopyQueueSize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxCopyQueueSize*
  name: getMaxCopyQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxCopyQueueSize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxCopyQueueSize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxCopyQueueSize*
  name: setMaxCopyQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxCopyQueueSize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxCopyQueueSize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxReplicationMessageSize*
  name: getMaxReplicationMessageSize
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxReplicationMessageSize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxReplicationMessageSize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxReplicationMessageSize*
  name: setMaxReplicationMessageSize
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxReplicationMessageSize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxReplicationMessageSize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialPrimaryReplicationQueueSize*
  name: getInitialPrimaryReplicationQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.getInitialPrimaryReplicationQueueSize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialPrimaryReplicationQueueSize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialPrimaryReplicationQueueSize*
  name: setInitialPrimaryReplicationQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.setInitialPrimaryReplicationQueueSize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialPrimaryReplicationQueueSize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxPrimaryReplicationQueueSize*
  name: getMaxPrimaryReplicationQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxPrimaryReplicationQueueSize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxPrimaryReplicationQueueSize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxPrimaryReplicationQueueSize*
  name: setMaxPrimaryReplicationQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxPrimaryReplicationQueueSize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxPrimaryReplicationQueueSize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize*
  name: getMaxPrimaryReplicationQueueMemorySize
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxPrimaryReplicationQueueMemorySize*
  name: setMaxPrimaryReplicationQueueMemorySize
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxPrimaryReplicationQueueMemorySize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxPrimaryReplicationQueueMemorySize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialSecondaryReplicationQueueSize*
  name: getInitialSecondaryReplicationQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.getInitialSecondaryReplicationQueueSize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getInitialSecondaryReplicationQueueSize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialSecondaryReplicationQueueSize*
  name: setInitialSecondaryReplicationQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.setInitialSecondaryReplicationQueueSize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setInitialSecondaryReplicationQueueSize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxSecondaryReplicationQueueSize*
  name: getMaxSecondaryReplicationQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxSecondaryReplicationQueueSize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxSecondaryReplicationQueueSize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxSecondaryReplicationQueueSize*
  name: setMaxSecondaryReplicationQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxSecondaryReplicationQueueSize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxSecondaryReplicationQueueSize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize*
  name: getMaxSecondaryReplicationQueueMemorySize
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxSecondaryReplicationQueueMemorySize*
  name: setMaxSecondaryReplicationQueueMemorySize
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxSecondaryReplicationQueueMemorySize
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxSecondaryReplicationQueueMemorySize
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSharedLogId*
  name: getSharedLogId
  nameWithType: ReliableStateManagerReplicatorSettings.getSharedLogId
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSharedLogId
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSharedLogId*
  name: setSharedLogId
  nameWithType: ReliableStateManagerReplicatorSettings.setSharedLogId
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSharedLogId
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSharedLogPath*
  name: getSharedLogPath
  nameWithType: ReliableStateManagerReplicatorSettings.getSharedLogPath
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSharedLogPath
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSharedLogPath*
  name: setSharedLogPath
  nameWithType: ReliableStateManagerReplicatorSettings.setSharedLogPath
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSharedLogPath
  package: microsoft.servicefabric.replicator
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxMetadataSizeInKB*
  name: getMaxMetadataSizeInKB
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxMetadataSizeInKB
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxMetadataSizeInKB
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxMetadataSizeInKB*
  name: setMaxMetadataSizeInKB
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxMetadataSizeInKB
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxMetadataSizeInKB
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxRecordSizeInKB*
  name: getMaxRecordSizeInKB
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxRecordSizeInKB
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxRecordSizeInKB
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxRecordSizeInKB*
  name: setMaxRecordSizeInKB
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxRecordSizeInKB
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxRecordSizeInKB
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxWriteQueueDepthInKB*
  name: getMaxWriteQueueDepthInKB
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxWriteQueueDepthInKB
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxWriteQueueDepthInKB
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxWriteQueueDepthInKB*
  name: setMaxWriteQueueDepthInKB
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxWriteQueueDepthInKB
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxWriteQueueDepthInKB
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getCheckpointThresholdInMB*
  name: getCheckpointThresholdInMB
  nameWithType: ReliableStateManagerReplicatorSettings.getCheckpointThresholdInMB
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getCheckpointThresholdInMB
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setCheckpointThresholdInMB*
  name: setCheckpointThresholdInMB
  nameWithType: ReliableStateManagerReplicatorSettings.setCheckpointThresholdInMB
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setCheckpointThresholdInMB
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxAccumulatedBackupLogSizeInMB*
  name: getMaxAccumulatedBackupLogSizeInMB
  nameWithType: ReliableStateManagerReplicatorSettings.getMaxAccumulatedBackupLogSizeInMB
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMaxAccumulatedBackupLogSizeInMB
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxAccumulatedBackupLogSizeInMB*
  name: setMaxAccumulatedBackupLogSizeInMB
  nameWithType: ReliableStateManagerReplicatorSettings.setMaxAccumulatedBackupLogSizeInMB
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMaxAccumulatedBackupLogSizeInMB
  package: microsoft.servicefabric.replicator
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getOptimizeLogForLowerDiskUsage*
  name: getOptimizeLogForLowerDiskUsage
  nameWithType: ReliableStateManagerReplicatorSettings.getOptimizeLogForLowerDiskUsage
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getOptimizeLogForLowerDiskUsage
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setOptimizeLogForLowerDiskUsage*
  name: setOptimizeLogForLowerDiskUsage
  nameWithType: ReliableStateManagerReplicatorSettings.setOptimizeLogForLowerDiskUsage
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setOptimizeLogForLowerDiskUsage
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSecondaryClearAcknowledgedOperations*
  name: getSecondaryClearAcknowledgedOperations
  nameWithType: ReliableStateManagerReplicatorSettings.getSecondaryClearAcknowledgedOperations
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSecondaryClearAcknowledgedOperations
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSecondaryClearAcknowledgedOperations*
  name: setSecondaryClearAcknowledgedOperations
  nameWithType: ReliableStateManagerReplicatorSettings.setSecondaryClearAcknowledgedOperations
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSecondaryClearAcknowledgedOperations
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSlowApiMonitoringDuration*
  name: getSlowApiMonitoringDuration
  nameWithType: ReliableStateManagerReplicatorSettings.getSlowApiMonitoringDuration
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getSlowApiMonitoringDuration
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSlowApiMonitoringDuration*
  name: setSlowApiMonitoringDuration
  nameWithType: ReliableStateManagerReplicatorSettings.setSlowApiMonitoringDuration
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setSlowApiMonitoringDuration
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMinLogSizeInMB*
  name: getMinLogSizeInMB
  nameWithType: ReliableStateManagerReplicatorSettings.getMinLogSizeInMB
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getMinLogSizeInMB
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMinLogSizeInMB*
  name: setMinLogSizeInMB
  nameWithType: ReliableStateManagerReplicatorSettings.setMinLogSizeInMB
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setMinLogSizeInMB
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getTruncationThresholdFactor*
  name: getTruncationThresholdFactor
  nameWithType: ReliableStateManagerReplicatorSettings.getTruncationThresholdFactor
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getTruncationThresholdFactor
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setTruncationThresholdFactor*
  name: setTruncationThresholdFactor
  nameWithType: ReliableStateManagerReplicatorSettings.setTruncationThresholdFactor
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setTruncationThresholdFactor
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getThrottlingThresholdFactor*
  name: getThrottlingThresholdFactor
  nameWithType: ReliableStateManagerReplicatorSettings.getThrottlingThresholdFactor
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.getThrottlingThresholdFactor
  package: microsoft.servicefabric.replicator
- uid: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setThrottlingThresholdFactor*
  name: setThrottlingThresholdFactor
  nameWithType: ReliableStateManagerReplicatorSettings.setThrottlingThresholdFactor
  fullName: microsoft.servicefabric.replicator.ReliableStateManagerReplicatorSettings.setThrottlingThresholdFactor
  package: microsoft.servicefabric.replicator
- uid: system.fabric.SecurityCredentials
  parent: system.fabric
  href: system.fabric.SecurityCredentials.yml
  name: SecurityCredentials
  nameWithType: SecurityCredentials
  fullName: system.fabric.SecurityCredentials
  type: Class
  summary: "<p>An abstract base class for types that represent security credentials. </p>"
  syntax:
    content: public class SecurityCredentials
- uid: system.fabric.CodePackageActivationContext.getServiceListenAddress()
  parent: system.fabric.CodePackageActivationContext
  href: system.fabric.CodePackageActivationContext.yml
  name: getServiceListenAddress()
  nameWithType: CodePackageActivationContext.getServiceListenAddress()
  fullName: system.fabric.CodePackageActivationContext.getServiceListenAddress()
  type: Method
  summary: "<p>The address at which the service should start the communication listener.</p>\r\n<p></p>"
  syntax:
    content: public String getServiceListenAddress()
    return:
      type: "26831127"
      description: <p>The address at which the service should start the communication listener </p>
- uid: system.fabric.CodePackageActivationContext.getServicePublishAddress()
  parent: system.fabric.CodePackageActivationContext
  href: system.fabric.CodePackageActivationContext.yml
  name: getServicePublishAddress()
  nameWithType: CodePackageActivationContext.getServicePublishAddress()
  fullName: system.fabric.CodePackageActivationContext.getServicePublishAddress()
  type: Method
  summary: "<p>The address which the service should publish as the listen address.</p>\r\n<p></p>"
  syntax:
    content: public String getServicePublishAddress()
    return:
      type: "26831127"
      description: <p>The address which the service should publish as the listen address. </p>
