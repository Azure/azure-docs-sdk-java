### YamlMime:JavaType
uid: "com.microsoft.azure.management.graphrbac.RoleDefinitions"
fullName: "com.microsoft.azure.management.graphrbac.RoleDefinitions"
name: "RoleDefinitions"
nameWithType: "RoleDefinitions"
summary: "Entry point to role definition management API."
syntax: "public interface RoleDefinitions extends SupportsGettingById<RoleDefinition>, HasManager<GraphRbacManager>, HasInner<RoleDefinitionsInner>"
methods:
- uid: "com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScope(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScope(String scope, String name)"
  name: "getByScope(String scope, String name)"
  nameWithType: "RoleDefinitions.getByScope(String scope, String name)"
  summary: "Gets the information about a role definition based on scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the scope of the role definition"
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of the role definition"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RoleDefinition getByScope(String scope, String name)"
  desc: "Gets the information about a role definition based on scope and name."
  returns:
    description: "an immutable representation of the role definition"
    type: "<xref href=\"com.microsoft.azure.management.graphrbac.RoleDefinition?alt=com.microsoft.azure.management.graphrbac.RoleDefinition&text=RoleDefinition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScopeAndRoleName(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScopeAndRoleName(String scope, String roleName)"
  name: "getByScopeAndRoleName(String scope, String roleName)"
  nameWithType: "RoleDefinitions.getByScopeAndRoleName(String scope, String roleName)"
  summary: "Gets the information about a role definition based on scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the scope of the role definition"
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of the role"
    name: "roleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RoleDefinition getByScopeAndRoleName(String scope, String roleName)"
  desc: "Gets the information about a role definition based on scope and name."
  returns:
    description: "an immutable representation of the role definition"
    type: "<xref href=\"com.microsoft.azure.management.graphrbac.RoleDefinition?alt=com.microsoft.azure.management.graphrbac.RoleDefinition&text=RoleDefinition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScopeAndRoleNameAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScopeAndRoleNameAsync(String scope, String roleName)"
  name: "getByScopeAndRoleNameAsync(String scope, String roleName)"
  nameWithType: "RoleDefinitions.getByScopeAndRoleNameAsync(String scope, String roleName)"
  summary: "Gets the information about a role definition based on scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the scope of the role definition"
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of the role"
    name: "roleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<RoleDefinition> getByScopeAndRoleNameAsync(String scope, String roleName)"
  desc: "Gets the information about a role definition based on scope and name."
  returns:
    description: "an immutable representation of the role definition"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.graphrbac.RoleDefinition?alt=com.microsoft.azure.management.graphrbac.RoleDefinition&text=RoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScopeAndRoleNameAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.graphrbac.RoleDefinition>)"
  fullName: "com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScopeAndRoleNameAsync(String scope, String roleName, ServiceCallback<RoleDefinition> callback)"
  name: "getByScopeAndRoleNameAsync(String scope, String roleName, ServiceCallback<RoleDefinition> callback)"
  nameWithType: "RoleDefinitions.getByScopeAndRoleNameAsync(String scope, String roleName, ServiceCallback<RoleDefinition> callback)"
  summary: "Gets the information about a role definition based on scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the scope of the role definition"
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of the role"
    name: "roleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the callback when the operation finishes"
    name: "callback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.graphrbac.RoleDefinition?alt=com.microsoft.azure.management.graphrbac.RoleDefinition&text=RoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<RoleDefinition> getByScopeAndRoleNameAsync(String scope, String roleName, ServiceCallback<RoleDefinition> callback)"
  desc: "Gets the information about a role definition based on scope and name."
  returns:
    description: "an immutable representation of the role definition"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.graphrbac.RoleDefinition?alt=com.microsoft.azure.management.graphrbac.RoleDefinition&text=RoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScopeAsync(String scope, String name)"
  name: "getByScopeAsync(String scope, String name)"
  nameWithType: "RoleDefinitions.getByScopeAsync(String scope, String name)"
  summary: "Gets the information about a role definition based on scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the scope of the role definition"
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of the role definition"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<RoleDefinition> getByScopeAsync(String scope, String name)"
  desc: "Gets the information about a role definition based on scope and name."
  returns:
    description: "an immutable representation of the role definition"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.graphrbac.RoleDefinition?alt=com.microsoft.azure.management.graphrbac.RoleDefinition&text=RoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.graphrbac.RoleDefinition>)"
  fullName: "com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScopeAsync(String scope, String name, ServiceCallback<RoleDefinition> callback)"
  name: "getByScopeAsync(String scope, String name, ServiceCallback<RoleDefinition> callback)"
  nameWithType: "RoleDefinitions.getByScopeAsync(String scope, String name, ServiceCallback<RoleDefinition> callback)"
  summary: "Gets the information about a role definition based on scope and name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the scope of the role definition"
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of the role definition"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the callback when the operation finishes"
    name: "callback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.graphrbac.RoleDefinition?alt=com.microsoft.azure.management.graphrbac.RoleDefinition&text=RoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<RoleDefinition> getByScopeAsync(String scope, String name, ServiceCallback<RoleDefinition> callback)"
  desc: "Gets the information about a role definition based on scope and name."
  returns:
    description: "an immutable representation of the role definition"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.graphrbac.RoleDefinition?alt=com.microsoft.azure.management.graphrbac.RoleDefinition&text=RoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.graphrbac.RoleDefinitions.listByScope(java.lang.String)"
  fullName: "com.microsoft.azure.management.graphrbac.RoleDefinitions.listByScope(String scope)"
  name: "listByScope(String scope)"
  nameWithType: "RoleDefinitions.listByScope(String scope)"
  summary: "List role definitions in a scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "the scope of the role definition"
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<RoleDefinition> listByScope(String scope)"
  desc: "List role definitions in a scope."
  returns:
    description: "a list of role definitions"
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.graphrbac.RoleDefinition?alt=com.microsoft.azure.management.graphrbac.RoleDefinition&text=RoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.graphrbac.RoleDefinitions.listByScopeAsync(java.lang.String)"
  fullName: "com.microsoft.azure.management.graphrbac.RoleDefinitions.listByScopeAsync(String scope)"
  name: "listByScopeAsync(String scope)"
  nameWithType: "RoleDefinitions.listByScopeAsync(String scope)"
  summary: "List role definitions in a scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "the scope of the role definition"
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<RoleDefinition> listByScopeAsync(String scope)"
  desc: "List role definitions in a scope."
  returns:
    description: "an observable of role definitions"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.graphrbac.RoleDefinition?alt=com.microsoft.azure.management.graphrbac.RoleDefinition&text=RoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Entry point to role definition management API."
implements:
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById?alt=com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById&text=SupportsGettingById\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.graphrbac.RoleDefinition?alt=com.microsoft.azure.management.graphrbac.RoleDefinition&text=RoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager&text=HasManager\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.graphrbac.implementation.GraphRbacManager?alt=com.microsoft.azure.management.graphrbac.implementation.GraphRbacManager&text=GraphRbacManager\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.HasInner?alt=com.microsoft.azure.management.resources.fluentcore.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.graphrbac.implementation.RoleDefinitionsInner?alt=com.microsoft.azure.management.graphrbac.implementation.RoleDefinitionsInner&text=RoleDefinitionsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.graphrbac"
artifact: com.microsoft.azure:azure-mgmt-graph-rbac:1.41.4
