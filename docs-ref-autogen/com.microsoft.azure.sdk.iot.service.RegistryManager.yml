### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager
  id: RegistryManager
  parent: com.microsoft.azure.sdk.iot.service
  children:
  - com.microsoft.azure.sdk.iot.service.RegistryManager.addConfiguration(Configuration)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.addDevice(Device)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.addDeviceAsync(Device)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.addModule(Module)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.applyConfigurationContentOnDevice(String,ConfigurationContent)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.close()
  - com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String,RegistryManagerOptions)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(JobProperties)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(String,Boolean)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(JobProperties)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(String,Boolean)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getConfiguration(String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getConfigurations(Integer)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice(String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceAsync(String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceConnectionString(Device)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices(Integer)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getDevicesAsync(Integer)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getJob(String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getJobAsync(String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getModule(String,String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getModulesOnDevice(String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics()
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getStatisticsAsync()
  - com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(JobProperties)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(String,String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(JobProperties)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(String,String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.open()
  - com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager()
  - com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(Configuration)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(Device)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceAsync(String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(Module)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(String,String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(Configuration)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(Configuration,Boolean)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(Device)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(Device,Boolean)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(Device)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(Device,Boolean)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(Module)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(Module,Boolean)
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: RegistryManager
  nameWithType: RegistryManager
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager
  type: Class
  source:
    remote: &o0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 37
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Use the RegistryManager class to manage the identity registry in IoT Hubs. </p>"
  syntax: &o2
    content: public class RegistryManager
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.addConfiguration(Configuration)
  id: addConfiguration(Configuration)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: addConfiguration(Configuration configuration)
  nameWithType: RegistryManager.addConfiguration(Configuration configuration)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.addConfiguration(Configuration configuration)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.addConfiguration*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 1329
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Add configuration using the given Configuration object Return with the response configuration object from IotHub</p>\r\n<p></p>"
  syntax:
    content: public Configuration addConfiguration(Configuration configuration)
    parameters:
    - id: configuration
      type: com.microsoft.azure.sdk.iot.service.Configuration
      description: <p>The configuration object to add </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.Configuration
      description: <p>The configuration object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.addDevice(Device)
  id: addDevice(Device)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: addDevice(Device device)
  nameWithType: RegistryManager.addDevice(Device device)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.addDevice(Device device)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.addDevice*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 144
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Add device using the given Device object Return with the response device object from IotHub</p>\r\n<p></p>"
  syntax:
    content: public Device addDevice(Device device)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service.Device
      description: <p>The device object to add </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.Device
      description: <p>The future object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.addDeviceAsync(Device)
  id: addDeviceAsync(Device)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: addDeviceAsync(Device device)
  nameWithType: RegistryManager.addDeviceAsync(Device device)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.addDeviceAsync(Device device)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.addDeviceAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 185
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Async wrapper for add() operation</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Device> addDeviceAsync(Device device)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service.Device
      description: <p>The device object to add </p>
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service.Devicea08ddfce
      description: <p>The future object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.addModule(Module)
  id: addModule(Module)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: addModule(Module module)
  nameWithType: RegistryManager.addModule(Module module)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.addModule(Module module)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.addModule*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 1055
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Add module using the given Module object Return with the response module object from IotHub</p>\r\n<p></p>"
  syntax:
    content: public Module addModule(Module module)
    parameters:
    - id: module
      type: com.microsoft.azure.sdk.iot.service.Module
      description: <p>The module object to add </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.Module
      description: <p>The module object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.applyConfigurationContentOnDevice(String,ConfigurationContent)
  id: applyConfigurationContentOnDevice(String,ConfigurationContent)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: applyConfigurationContentOnDevice(String deviceId, ConfigurationContent content)
  nameWithType: RegistryManager.applyConfigurationContentOnDevice(String deviceId, ConfigurationContent content)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.applyConfigurationContentOnDevice(String deviceId, ConfigurationContent content)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.applyConfigurationContentOnDevice*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 1586
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Apply the provided configuration content to the provided device </p>"
  syntax:
    content: public void applyConfigurationContentOnDevice(String deviceId, ConfigurationContent content)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>The device to apply the configuration to </p>
    - id: content
      type: com.microsoft.azure.sdk.iot.service.ConfigurationContent
      description: <p>The configuration content to apply to the device </p>
  exceptions:
  - type: cbf33bbe
    description: <p>If the iot hub cannot be reached </p>
  - type: 0d494ee6
    description: <p>If the response from the hub was an error code. This exception will contain that code </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.close()
  id: close()
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: close()
  nameWithType: RegistryManager.close()
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.close()
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.close*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 126
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Gracefully close running threads, and then shutdown the underlying executor service </p>"
  syntax:
    content: public void close()
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String)
  id: createFromConnectionString(String)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: createFromConnectionString(String connectionString)
  nameWithType: RegistryManager.createFromConnectionString(String connectionString)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String connectionString)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 68
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Static constructor to create instance from connection string</p>\r\n<p></p>"
  syntax: &o1
    content: public static RegistryManager createFromConnectionString(String connectionString)
    parameters:
    - id: connectionString
      type: "26831127"
      description: <p>The iot hub connection string </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.RegistryManager
      description: <p>The instance of RegistryManager </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the object creation failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String,RegistryManagerOptions)
  id: createFromConnectionString(String,RegistryManagerOptions)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: createFromConnectionString(String connectionString, RegistryManagerOptions options)
  nameWithType: RegistryManager.createFromConnectionString(String connectionString, RegistryManagerOptions options)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String connectionString, RegistryManagerOptions options)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 86
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Static constructor to create instance from connection string</p>\r\n<p></p>"
  syntax:
    content: public static RegistryManager createFromConnectionString(String connectionString, RegistryManagerOptions options)
    parameters:
    - id: connectionString
      type: "26831127"
      description: <p>The iot hub connection string </p>
    - id: options
      type: com.microsoft.azure.sdk.iot.service.RegistryManagerOptions
      description: <p>The connection options to use when connecting to the service. May be null if no custom options will be used. </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.RegistryManager
      description: <p>The instance of RegistryManager </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the object creation failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(JobProperties)
  id: exportDevices(JobProperties)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: exportDevices(JobProperties exportDevicesParameters)
  nameWithType: RegistryManager.exportDevices(JobProperties exportDevicesParameters)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(JobProperties exportDevicesParameters)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 778
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Create a bulk export job.</p>\r\n<p></p>"
  syntax:
    content: public JobProperties exportDevices(JobProperties exportDevicesParameters)
    parameters:
    - id: exportDevicesParameters
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: <p>A JobProperties object containing input parameters for export Devices job This API also supports identity based storage authentication, identity authentication support is currently available in limited regions. If a user wishes to try it out, they will need to set an Environment Variable of "EnabledStorageIdentity" and set it to "1" otherwise default key based authentication is used for storage <a href="https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support">More details here </a></p>
    return:
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: <p>A JobProperties object for the newly created bulk export job</p>
  exceptions:
  - type: 3c87bd19
    description: <p>This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null </p>
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(String,Boolean)
  id: exportDevices(String,Boolean)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
  nameWithType: RegistryManager.exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 703
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Create a bulk export job.</p>\r\n<p></p>"
  syntax:
    content: public JobProperties exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
    parameters:
    - id: exportBlobContainerUri
      type: "26831127"
      description: <p>URI containing SAS token to a blob container where export data will be placed </p>
    - id: excludeKeys
      type: 866c2227
      description: <p>Whether the devices keys should be excluded from the exported data or not</p>
    return:
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: <p>A JobProperties object for the newly created bulk export job</p>
  exceptions:
  - type: 3c87bd19
    description: <p>This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null </p>
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(JobProperties)
  id: exportDevicesAsync(JobProperties)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: exportDevicesAsync(JobProperties exportDevicesParameters)
  nameWithType: RegistryManager.exportDevicesAsync(JobProperties exportDevicesParameters)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(JobProperties exportDevicesParameters)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 814
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Async wrapper for exportDevices() operation </p>"
  syntax:
    content: public CompletableFuture<JobProperties> exportDevicesAsync(JobProperties exportDevicesParameters)
    parameters:
    - id: exportDevicesParameters
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: <p>A JobProperties object containing input parameters for export Devices job This API also supports identity based storage authentication, identity authentication support is currently available in limited regions. If a user wishes to try it out, they will need to set an Environment Variable of "EnabledStorageIdentity" and set it to "1" otherwise default key based authentication is used for storage <a href="https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support">More details here </a></p>
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service.JobPropertiesa08ddfce
      description: <p>The future object for the requested operation</p>
  exceptions:
  - type: 3c87bd19
    description: <p>This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null </p>
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(String,Boolean)
  id: exportDevicesAsync(String,Boolean)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: exportDevicesAsync(String exportBlobContainerUri, Boolean excludeKeys)
  nameWithType: RegistryManager.exportDevicesAsync(String exportBlobContainerUri, Boolean excludeKeys)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(String exportBlobContainerUri, Boolean excludeKeys)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 741
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Async wrapper for exportDevices() operation </p>"
  syntax:
    content: public CompletableFuture<JobProperties> exportDevicesAsync(String exportBlobContainerUri, Boolean excludeKeys)
    parameters:
    - id: exportBlobContainerUri
      type: "26831127"
      description: <p>the blob storage container URI to store at. </p>
    - id: excludeKeys
      type: 866c2227
      description: <p>if to exclude keys or not </p>
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service.JobPropertiesa08ddfce
      description: <p>The future object for the requested operation</p>
  exceptions:
  - type: 3c87bd19
    description: <p>This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null </p>
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfiguration(String)
  id: getConfiguration(String)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: getConfiguration(String configurationId)
  nameWithType: RegistryManager.getConfiguration(String configurationId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfiguration(String configurationId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfiguration*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 1370
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Get configuration by configuration Id from IotHub</p>\r\n<p></p>"
  syntax:
    content: public Configuration getConfiguration(String configurationId)
    parameters:
    - id: configurationId
      type: "26831127"
      description: <p>The id of requested configuration </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.Configuration
      description: <p>The configuration object of requested configuration on the specific device </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfigurations(Integer)
  id: getConfigurations(Integer)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: getConfigurations(Integer maxCount)
  nameWithType: RegistryManager.getConfigurations(Integer maxCount)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfigurations(Integer maxCount)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfigurations*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 1407
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Get list of Configuration</p>\r\n<p></p>"
  syntax:
    content: public List<Configuration> getConfigurations(Integer maxCount)
    parameters:
    - id: maxCount
      type: 08effaa0
      description: <p>The requested count of configurations </p>
    return:
      type: 5618da2dcom.microsoft.azure.sdk.iot.service.Configurationa08ddfce
      description: <p>The array of requested configuration objects </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice(String)
  id: getDevice(String)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: getDevice(String deviceId)
  nameWithType: RegistryManager.getDevice(String deviceId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice(String deviceId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 218
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Get device data by device Id from IotHub</p>\r\n<p></p>"
  syntax:
    content: public Device getDevice(String deviceId)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>The id of requested device </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.Device
      description: <p>The device object of requested device </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceAsync(String)
  id: getDeviceAsync(String)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: getDeviceAsync(String deviceId)
  nameWithType: RegistryManager.getDeviceAsync(String deviceId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceAsync(String deviceId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 255
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Async wrapper for getDevice() operation</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Device> getDeviceAsync(String deviceId)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>The id of requested device </p>
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service.Devicea08ddfce
      description: <p>The future object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceConnectionString(Device)
  id: getDeviceConnectionString(Device)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: getDeviceConnectionString(Device device)
  nameWithType: RegistryManager.getDeviceConnectionString(Device device)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceConnectionString(Device device)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceConnectionString*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 374
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Return the iothub device connection string for a provided device. </p>"
  syntax:
    content: public String getDeviceConnectionString(Device device)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service.Device
      description: <p>The device object to get the connectionString </p>
    return:
      type: "26831127"
      description: <p>The iothub device connection string </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices(Integer)
  id: getDevices(Integer)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: getDevices(Integer maxCount)
  nameWithType: RegistryManager.getDevices(Integer maxCount)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices(Integer maxCount)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 292
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Get list of devices <xrefsect id=\"deprecated_1_deprecated000104\"><xreftitle>Deprecated</xreftitle><xrefdescription><p>as of release 1.12.0. Please use <xref uid=\"com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.queryTwin(String,Integer)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin#queryTwin(String sqlQuery, Integer pageSize)\"></xref> to query for all devices.</p></xrefdescription></xrefsect></p>\r\n<p></p>"
  syntax:
    content: public ArrayList<Device> getDevices(Integer maxCount)
    parameters:
    - id: maxCount
      type: 08effaa0
      description: <p>The requested count of devices </p>
    return:
      type: 573b1e0bcom.microsoft.azure.sdk.iot.service.Devicea08ddfce
      description: <p>The array of requested device objects </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevicesAsync(Integer)
  id: getDevicesAsync(Integer)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: getDevicesAsync(Integer maxCount)
  nameWithType: RegistryManager.getDevicesAsync(Integer maxCount)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevicesAsync(Integer maxCount)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevicesAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 344
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Async wrapper for getDevices() operation</p>\r\n<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000105\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>as of release 1.12.0. Please use <xref uid=\"com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.queryTwin(String,Integer)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin#queryTwin(String sqlQuery, Integer pageSize)\"></xref> to query for all devices.</p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<ArrayList<Device>> getDevicesAsync(Integer maxCount)
    parameters:
    - id: maxCount
      type: 08effaa0
      description: <p>The requested count of devices </p>
    return:
      type: 293e9e1acom.microsoft.azure.sdk.iot.service.Devicee7daa122
      description: <p>The future object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getJob(String)
  id: getJob(String)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: getJob(String jobId)
  nameWithType: RegistryManager.getJob(String jobId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getJob(String jobId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getJob*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 991
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Get the properties of an existing job.</p>\r\n<p></p>"
  syntax:
    content: public JobProperties getJob(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job to be retrieved.</p>
    return:
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: <p>A JobProperties object for the requested job id</p>
  exceptions:
  - type: 3c87bd19
    description: <p>This exception is thrown if the jobId parameter is null </p>
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getJobAsync(String)
  id: getJobAsync(String)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: getJobAsync(String jobId)
  nameWithType: RegistryManager.getJobAsync(String jobId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getJobAsync(String jobId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getJobAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 1025
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Async wrapper for getJob() operation </p>"
  syntax:
    content: public CompletableFuture<JobProperties> getJobAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>jobID as String </p>
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service.JobPropertiesa08ddfce
      description: <p>The future object for the requested operation</p>
  exceptions:
  - type: 3c87bd19
    description: <p>This exception is thrown if the jobId parameter is null </p>
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getModule(String,String)
  id: getModule(String,String)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: getModule(String deviceId, String moduleId)
  nameWithType: RegistryManager.getModule(String deviceId, String moduleId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getModule(String deviceId, String moduleId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getModule*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 1097
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Get module data by device Id and module Id from IotHub</p>\r\n<p></p>"
  syntax:
    content: public Module getModule(String deviceId, String moduleId)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>The id of requested device </p>
    - id: moduleId
      type: "26831127"
      description: <p>The id of requested module </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.Module
      description: <p>The module object of requested module on the specific device </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getModulesOnDevice(String)
  id: getModulesOnDevice(String)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: getModulesOnDevice(String deviceId)
  nameWithType: RegistryManager.getModulesOnDevice(String deviceId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getModulesOnDevice(String deviceId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getModulesOnDevice*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 1140
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Get modules data by device Id from IotHub</p>\r\n<p></p>"
  syntax:
    content: public List<Module> getModulesOnDevice(String deviceId)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>The id of requested device </p>
    return:
      type: 5618da2dcom.microsoft.azure.sdk.iot.service.Modulea08ddfce
      description: <p>The module objects on the specific device </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics()
  id: getStatistics()
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: getStatistics()
  nameWithType: RegistryManager.getStatistics()
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics()
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 642
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Get device statistics</p>\r\n<p></p>"
  syntax:
    content: public RegistryStatistics getStatistics()
    return:
      type: com.microsoft.azure.sdk.iot.service.RegistryStatistics
      description: <p>RegistryStatistics object containing the requested data </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatisticsAsync()
  id: getStatisticsAsync()
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: getStatisticsAsync()
  nameWithType: RegistryManager.getStatisticsAsync()
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatisticsAsync()
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatisticsAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 672
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Async wrapper for getStatistics() operation</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<RegistryStatistics> getStatisticsAsync()
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service.RegistryStatisticsa08ddfce
      description: <p>The future object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(JobProperties)
  id: importDevices(JobProperties)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: importDevices(JobProperties importDevicesParameters)
  nameWithType: RegistryManager.importDevices(JobProperties importDevicesParameters)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(JobProperties importDevicesParameters)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 922
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Create a bulk import job.</p>\r\n<p></p>"
  syntax:
    content: public JobProperties importDevices(JobProperties importDevicesParameters)
    parameters:
    - id: importDevicesParameters
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: <p>A JobProperties object containing input parameters for import Devices job This API also supports identity based storage authentication, identity authentication support is currently available in limited regions. If a user wishes to try it out, they will need to set an Environment Variable of "EnabledStorageIdentity" and set it to "1" otherwise default key based authentication is used for storage <a href="https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support">More details here </a></p>
    return:
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: <p>A JobProperties object for the newly created bulk import job</p>
  exceptions:
  - type: 3c87bd19
    description: <p>This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null </p>
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(String,String)
  id: importDevices(String,String)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: importDevices(String importBlobContainerUri, String outputBlobContainerUri)
  nameWithType: RegistryManager.importDevices(String importBlobContainerUri, String outputBlobContainerUri)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(String importBlobContainerUri, String outputBlobContainerUri)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 847
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Create a bulk import job.</p>\r\n<p></p>"
  syntax:
    content: public JobProperties importDevices(String importBlobContainerUri, String outputBlobContainerUri)
    parameters:
    - id: importBlobContainerUri
      type: "26831127"
      description: <p>URI containing SAS token to a blob container that contains registry data to sync </p>
    - id: outputBlobContainerUri
      type: "26831127"
      description: <p>URI containing SAS token to a blob container where the result of the bulk import operation will be placed</p>
    return:
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: <p>A JobProperties object for the newly created bulk import job</p>
  exceptions:
  - type: 3c87bd19
    description: <p>This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null </p>
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(JobProperties)
  id: importDevicesAsync(JobProperties)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: importDevicesAsync(JobProperties importParameters)
  nameWithType: RegistryManager.importDevicesAsync(JobProperties importParameters)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(JobProperties importParameters)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 959
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Async wrapper for importDevices() operation</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<JobProperties> importDevicesAsync(JobProperties importParameters)
    parameters:
    - id: importParameters
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: <p>A JobProperties object containing input parameters for import Devices job This API also supports identity based storage authentication, identity authentication support is currently available in limited regions. If a user wishes to try it out, they will need to set an Environment Variable of "EnabledStorageIdentity" and set it to "1" otherwise default key based authentication is used for storage <a href="https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support">More details here </a></p>
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service.JobPropertiesa08ddfce
      description: <p>The future object for the requested operation</p>
  exceptions:
  - type: 3c87bd19
    description: <p>This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null </p>
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(String,String)
  id: importDevicesAsync(String,String)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: importDevicesAsync(String importBlobContainerUri, String outputBlobContainerUri)
  nameWithType: RegistryManager.importDevicesAsync(String importBlobContainerUri, String outputBlobContainerUri)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(String importBlobContainerUri, String outputBlobContainerUri)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 885
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Async wrapper for importDevices() operation</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<JobProperties> importDevicesAsync(String importBlobContainerUri, String outputBlobContainerUri)
    parameters:
    - id: importBlobContainerUri
      type: "26831127"
      description: <p>Uri for importBlobContainer </p>
    - id: outputBlobContainerUri
      type: "26831127"
      description: <p>Uri for outputBlobContainer </p>
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service.JobPropertiesa08ddfce
      description: <p>The future object for the requested operation</p>
  exceptions:
  - type: 3c87bd19
    description: <p>This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null </p>
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.open()
  id: open()
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: open()
  nameWithType: RegistryManager.open()
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.open()
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.open*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 119
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000103\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>as of release 1.13.0 this API is no longer supported and open is done implicitly by the respective APIs Opens this registry manager's executor service after it has been closed. </p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public void open()
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager()
  id: RegistryManager()
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: RegistryManager()
  nameWithType: RegistryManager.RegistryManager()
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager()
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager*
  type: Constructor
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 51
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Previously was the java default constructor, should not be used.</p>\r\n<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000102\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>As of release 1.22.0, replaced by <xref uid=\"com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"createFromConnectionString(String)\"></xref></p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public RegistryManager()
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(Configuration)
  id: removeConfiguration(Configuration)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: removeConfiguration(Configuration config)
  nameWithType: RegistryManager.removeConfiguration(Configuration config)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(Configuration config)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 1528
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Send remove configuration request and verify response</p>\r\n<p></p>"
  syntax:
    content: public void removeConfiguration(Configuration config)
    parameters:
    - id: config
      type: com.microsoft.azure.sdk.iot.service.Configuration
      description: <p>The configuration to be removed </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
  - type: 3c87bd19
    description: <p>This exception is thrown if the input configuration is null </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(String)
  id: removeConfiguration(String)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: removeConfiguration(String configurationId)
  nameWithType: RegistryManager.removeConfiguration(String configurationId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(String configurationId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 1514
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Send remove configuration request and verify response</p>\r\n<p></p>"
  syntax:
    content: public void removeConfiguration(String configurationId)
    parameters:
    - id: configurationId
      type: "26831127"
      description: <p>The configuration to be removed </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(Device)
  id: removeDevice(Device)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: removeDevice(Device device)
  nameWithType: RegistryManager.removeDevice(Device device)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(Device device)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 550
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Remove device</p>\r\n<p></p>"
  syntax:
    content: public void removeDevice(Device device)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service.Device
      description: <p>The device name to remove </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
  - type: 3c87bd19
    description: <p>This exception is thrown if the device is null </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(String)
  id: removeDevice(String)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: removeDevice(String deviceId)
  nameWithType: RegistryManager.removeDevice(String deviceId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(String deviceId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 536
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Remove device</p>\r\n<p></p>"
  syntax:
    content: public void removeDevice(String deviceId)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>The device name to remove </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceAsync(String)
  id: removeDeviceAsync(String)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: removeDeviceAsync(String deviceId)
  nameWithType: RegistryManager.removeDeviceAsync(String deviceId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceAsync(String deviceId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 609
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Async wrapper for removeDevice() operation</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Boolean> removeDeviceAsync(String deviceId)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>The device object to remove </p>
    return:
      type: 7e53ac82
      description: <p>The future object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(Module)
  id: removeModule(Module)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: removeModule(Module module)
  nameWithType: RegistryManager.removeModule(Module module)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(Module module)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 1262
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Remove module</p>\r\n<p></p>"
  syntax:
    content: public void removeModule(Module module)
    parameters:
    - id: module
      type: com.microsoft.azure.sdk.iot.service.Module
      description: <p>The module to be removed </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
  - type: 3c87bd19
    description: <p>This exception is thrown if the input module is null </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(String,String)
  id: removeModule(String,String)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: removeModule(String deviceId, String moduleId)
  nameWithType: RegistryManager.removeModule(String deviceId, String moduleId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(String deviceId, String moduleId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 1248
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Remove module</p>\r\n<p></p>"
  syntax:
    content: public void removeModule(String deviceId, String moduleId)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>The device name associated with the module to be removed </p>
    - id: moduleId
      type: "26831127"
      description: <p>The module name to be removed </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(Configuration)
  id: updateConfiguration(Configuration)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: updateConfiguration(Configuration configuration)
  nameWithType: RegistryManager.updateConfiguration(Configuration configuration)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(Configuration configuration)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 1454
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Update configuration not forced</p>\r\n<p></p>"
  syntax:
    content: public Configuration updateConfiguration(Configuration configuration)
    parameters:
    - id: configuration
      type: com.microsoft.azure.sdk.iot.service.Configuration
      description: <p>The configuration object containing updated data </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.Configuration
      description: <p>The updated configuration object </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(Configuration,Boolean)
  id: updateConfiguration(Configuration,Boolean)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: updateConfiguration(Configuration configuration, Boolean forceUpdate)
  nameWithType: RegistryManager.updateConfiguration(Configuration configuration, Boolean forceUpdate)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(Configuration configuration, Boolean forceUpdate)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 1474
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Update configuration with forceUpdate input parameter</p>\r\n<p></p>"
  syntax:
    content: public Configuration updateConfiguration(Configuration configuration, Boolean forceUpdate)
    parameters:
    - id: configuration
      type: com.microsoft.azure.sdk.iot.service.Configuration
      description: <p>The configuration object containing updated data </p>
    - id: forceUpdate
      type: 866c2227
      description: <p>True if the update has to be forced regardless of the configuration state </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.Configuration
      description: <p>The updated configuration object </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(Device)
  id: updateDevice(Device)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: updateDevice(Device device)
  nameWithType: RegistryManager.updateDevice(Device device)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(Device device)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 411
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Update device not forced</p>\r\n<p></p>"
  syntax:
    content: public Device updateDevice(Device device)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service.Device
      description: <p>The device object containing updated data </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.Device
      description: <p>The updated device object </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(Device,Boolean)
  id: updateDevice(Device,Boolean)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: updateDevice(Device device, Boolean forceUpdate)
  nameWithType: RegistryManager.updateDevice(Device device, Boolean forceUpdate)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(Device device, Boolean forceUpdate)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 431
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Update device with forceUpdate input parameter</p>\r\n<p></p>"
  syntax:
    content: public Device updateDevice(Device device, Boolean forceUpdate)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service.Device
      description: <p>The device object containing updated data </p>
    - id: forceUpdate
      type: 866c2227
      description: <p>True if the update has to be forced regardless of the device state </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.Device
      description: <p>The updated device object </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(Device)
  id: updateDeviceAsync(Device)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: updateDeviceAsync(Device device)
  nameWithType: RegistryManager.updateDeviceAsync(Device device)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(Device device)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 472
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Async wrapper for updateDevice() operation</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Device> updateDeviceAsync(Device device)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service.Device
      description: <p>The device object containing updated data </p>
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service.Devicea08ddfce
      description: <p>The future object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(Device,Boolean)
  id: updateDeviceAsync(Device,Boolean)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: updateDeviceAsync(Device device, Boolean forceUpdate)
  nameWithType: RegistryManager.updateDeviceAsync(Device device, Boolean forceUpdate)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(Device device, Boolean forceUpdate)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 505
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Async wrapper for forced updateDevice() operation</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Device> updateDeviceAsync(Device device, Boolean forceUpdate)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service.Device
      description: <p>The device object containing updated data </p>
    - id: forceUpdate
      type: 866c2227
      description: <p>True is the update has to be forced regardless if the device state </p>
    return:
      type: 9cdf14d0com.microsoft.azure.sdk.iot.service.Devicea08ddfce
      description: <p>The future object for the requested operation </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(Module)
  id: updateModule(Module)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: updateModule(Module module)
  nameWithType: RegistryManager.updateModule(Module module)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(Module module)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 1187
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Update module not forced</p>\r\n<p></p>"
  syntax:
    content: public Module updateModule(Module module)
    parameters:
    - id: module
      type: com.microsoft.azure.sdk.iot.service.Module
      description: <p>The module object containing updated data </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.Module
      description: <p>The updated module object </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(Module,Boolean)
  id: updateModule(Module,Boolean)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  langs:
  - java
  name: updateModule(Module module, Boolean forceUpdate)
  nameWithType: RegistryManager.updateModule(Module module, Boolean forceUpdate)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(Module module, Boolean forceUpdate)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java
    startLine: 1207
  package: com.microsoft.azure.sdk.iot.service
  summary: "<p>Update module with forceUpdate input parameter</p>\r\n<p></p>"
  syntax:
    content: public Module updateModule(Module module, Boolean forceUpdate)
    parameters:
    - id: module
      type: com.microsoft.azure.sdk.iot.service.Module
      description: <p>The module object containing updated data </p>
    - id: forceUpdate
      type: 866c2227
      description: <p>True if the update has to be forced regardless of the module state </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.Module
      description: <p>The updated module object </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if the response verification failed </p>
references:
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager*
  name: RegistryManager
  nameWithType: RegistryManager.RegistryManager
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.open*
  name: open
  nameWithType: RegistryManager.open
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.open
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.close*
  name: close
  nameWithType: RegistryManager.close
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.close
  package: com.microsoft.azure.sdk.iot.service
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 0d494ee6
  spec.java:
  - name: IotHubException
    fullName: IotHubException
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.addDevice*
  name: addDevice
  nameWithType: RegistryManager.addDevice
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.addDevice
  package: com.microsoft.azure.sdk.iot.service
- uid: 9cdf14d0com.microsoft.azure.sdk.iot.service.Devicea08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.sdk.iot.service.Device
    name: Device
    fullName: com.microsoft.azure.sdk.iot.service.Device
    href: com.microsoft.azure.sdk.iot.service.Device.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.addDeviceAsync*
  name: addDeviceAsync
  nameWithType: RegistryManager.addDeviceAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.addDeviceAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice*
  name: getDevice
  nameWithType: RegistryManager.getDevice
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceAsync*
  name: getDeviceAsync
  nameWithType: RegistryManager.getDeviceAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: 573b1e0bcom.microsoft.azure.sdk.iot.service.Devicea08ddfce
  spec.java:
  - name: ArrayList<
    fullName: ArrayList<
  - uid: com.microsoft.azure.sdk.iot.service.Device
    name: Device
    fullName: com.microsoft.azure.sdk.iot.service.Device
    href: com.microsoft.azure.sdk.iot.service.Device.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices*
  name: getDevices
  nameWithType: RegistryManager.getDevices
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices
  package: com.microsoft.azure.sdk.iot.service
- uid: 293e9e1acom.microsoft.azure.sdk.iot.service.Devicee7daa122
  spec.java:
  - name: CompletableFuture<ArrayList<
    fullName: CompletableFuture<ArrayList<
  - uid: com.microsoft.azure.sdk.iot.service.Device
    name: Device
    fullName: com.microsoft.azure.sdk.iot.service.Device
    href: com.microsoft.azure.sdk.iot.service.Device.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevicesAsync*
  name: getDevicesAsync
  nameWithType: RegistryManager.getDevicesAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevicesAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceConnectionString*
  name: getDeviceConnectionString
  nameWithType: RegistryManager.getDeviceConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceConnectionString
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice*
  name: updateDevice
  nameWithType: RegistryManager.updateDevice
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice
  package: com.microsoft.azure.sdk.iot.service
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync*
  name: updateDeviceAsync
  nameWithType: RegistryManager.updateDeviceAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice*
  name: removeDevice
  nameWithType: RegistryManager.removeDevice
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice
  package: com.microsoft.azure.sdk.iot.service
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: 7e53ac82
  spec.java:
  - name: CompletableFuture<Boolean>
    fullName: CompletableFuture<Boolean>
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceAsync*
  name: removeDeviceAsync
  nameWithType: RegistryManager.removeDeviceAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics*
  name: getStatistics
  nameWithType: RegistryManager.getStatistics
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics
  package: com.microsoft.azure.sdk.iot.service
- uid: 9cdf14d0com.microsoft.azure.sdk.iot.service.RegistryStatisticsa08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.sdk.iot.service.RegistryStatistics
    name: RegistryStatistics
    fullName: com.microsoft.azure.sdk.iot.service.RegistryStatistics
    href: com.microsoft.azure.sdk.iot.service.RegistryStatistics.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatisticsAsync*
  name: getStatisticsAsync
  nameWithType: RegistryManager.getStatisticsAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatisticsAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices*
  name: exportDevices
  nameWithType: RegistryManager.exportDevices
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices
  package: com.microsoft.azure.sdk.iot.service
- uid: 9cdf14d0com.microsoft.azure.sdk.iot.service.JobPropertiesa08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.sdk.iot.service.JobProperties
    name: JobProperties
    fullName: com.microsoft.azure.sdk.iot.service.JobProperties
    href: com.microsoft.azure.sdk.iot.service.JobProperties.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync*
  name: exportDevicesAsync
  nameWithType: RegistryManager.exportDevicesAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices*
  name: importDevices
  nameWithType: RegistryManager.importDevices
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync*
  name: importDevicesAsync
  nameWithType: RegistryManager.importDevicesAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getJob*
  name: getJob
  nameWithType: RegistryManager.getJob
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getJob
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getJobAsync*
  name: getJobAsync
  nameWithType: RegistryManager.getJobAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getJobAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.addModule*
  name: addModule
  nameWithType: RegistryManager.addModule
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.addModule
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getModule*
  name: getModule
  nameWithType: RegistryManager.getModule
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getModule
  package: com.microsoft.azure.sdk.iot.service
- uid: 5618da2dcom.microsoft.azure.sdk.iot.service.Modulea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.sdk.iot.service.Module
    name: Module
    fullName: com.microsoft.azure.sdk.iot.service.Module
    href: com.microsoft.azure.sdk.iot.service.Module.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getModulesOnDevice*
  name: getModulesOnDevice
  nameWithType: RegistryManager.getModulesOnDevice
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getModulesOnDevice
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule*
  name: updateModule
  nameWithType: RegistryManager.updateModule
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule*
  name: removeModule
  nameWithType: RegistryManager.removeModule
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.addConfiguration*
  name: addConfiguration
  nameWithType: RegistryManager.addConfiguration
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.addConfiguration
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfiguration*
  name: getConfiguration
  nameWithType: RegistryManager.getConfiguration
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfiguration
  package: com.microsoft.azure.sdk.iot.service
- uid: 5618da2dcom.microsoft.azure.sdk.iot.service.Configurationa08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.sdk.iot.service.Configuration
    name: Configuration
    fullName: com.microsoft.azure.sdk.iot.service.Configuration
    href: com.microsoft.azure.sdk.iot.service.Configuration.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfigurations*
  name: getConfigurations
  nameWithType: RegistryManager.getConfigurations
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfigurations
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration*
  name: updateConfiguration
  nameWithType: RegistryManager.updateConfiguration
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration*
  name: removeConfiguration
  nameWithType: RegistryManager.removeConfiguration
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.applyConfigurationContentOnDevice*
  name: applyConfigurationContentOnDevice
  nameWithType: RegistryManager.applyConfigurationContentOnDevice
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.applyConfigurationContentOnDevice
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString*
  name: createFromConnectionString
  nameWithType: RegistryManager.createFromConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.IotHubConnectionString.yml
  name: IotHubConnectionString
  nameWithType: IotHubConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
  type: Class
  summary: "<p>Expose all connections string properties and methods for user, device and connection string serialization. </p>"
  syntax:
    content: public class IotHubConnectionString extends IotHubConnectionStringBuilder
- uid: com.microsoft.azure.sdk.iot.service.RegistryManagerOptions
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.RegistryManagerOptions.yml
  name: RegistryManagerOptions
  nameWithType: RegistryManagerOptions
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManagerOptions
  type: Class
  summary: "<p>Configurable options for all registry manager operations </p>"
  syntax:
    content: public class RegistryManagerOptions
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String)
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  name: createFromConnectionString(String connectionString)
  nameWithType: RegistryManager.createFromConnectionString(String connectionString)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String connectionString)
  type: Method
  summary: "<p>Static constructor to create instance from connection string</p>\r\n<p></p>"
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.service.Device
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.Device.yml
  name: Device
  nameWithType: Device
  fullName: com.microsoft.azure.sdk.iot.service.Device
  type: Class
  summary: "<p>The Device class extends the BaseDevice class implementing constructors and serialization functionality. </p>"
  syntax:
    content: public class Device extends BaseDevice
- uid: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
  parent: com.microsoft.azure.sdk.iot.service.exceptions
  href: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException.yml
  name: IotHubException
  nameWithType: IotHubException
  fullName: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
  type: Class
  summary: "<p>Super class for IotHub exceptions </p>"
  syntax:
    content: public class IotHubException
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.queryTwin(String,Integer)
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.yml
  name: queryTwin(String sqlQuery, Integer pageSize)
  nameWithType: DeviceTwin.queryTwin(String sqlQuery, Integer pageSize)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.queryTwin(String sqlQuery, Integer pageSize)
  type: Method
  summary: "<p>Sql style query for twin.</p>\r\n<p></p>"
  syntax:
    content: public synchronized Query queryTwin(String sqlQuery, Integer pageSize)
    parameters:
    - id: sqlQuery
      type: "26831127"
      description: <p>Sql query string to query IotHub for Twin. </p>
    - id: pageSize
      type: 08effaa0
      description: <p>Size to limit query response by. </p>
    return:
      type: cffad4f2com.microsoft.azure.sdk.iot.service.devicetwin.Query
      description: <p>Query Object to be used for looking up responses for this query. </p>
- uid: com.microsoft.azure.sdk.iot.service.RegistryStatistics
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.RegistryStatistics.yml
  name: RegistryStatistics
  nameWithType: RegistryStatistics
  fullName: com.microsoft.azure.sdk.iot.service.RegistryStatistics
  type: Class
  syntax:
    content: public class RegistryStatistics
- uid: com.microsoft.azure.sdk.iot.service.JobProperties
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.JobProperties.yml
  name: JobProperties
  nameWithType: JobProperties
  fullName: com.microsoft.azure.sdk.iot.service.JobProperties
  type: Class
  summary: "<p>Contains properties of a Job. See online <a href=\"https://docs.microsoft.com/en-us/rest/api/iothub/service/createimportexportjob\">documentation</a> for more infomration. </p>"
  syntax:
    content: public class JobProperties
- uid: com.microsoft.azure.sdk.iot.service.Module
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.Module.yml
  name: Module
  nameWithType: Module
  fullName: com.microsoft.azure.sdk.iot.service.Module
  type: Class
  syntax:
    content: public class Module extends BaseDevice
- uid: com.microsoft.azure.sdk.iot.service.Configuration
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.Configuration.yml
  name: Configuration
  nameWithType: Configuration
  fullName: com.microsoft.azure.sdk.iot.service.Configuration
  type: Class
  syntax:
    content: public class Configuration
- uid: com.microsoft.azure.sdk.iot.service.ConfigurationContent
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.ConfigurationContent.yml
  name: ConfigurationContent
  nameWithType: ConfigurationContent
  fullName: com.microsoft.azure.sdk.iot.service.ConfigurationContent
  type: Class
  syntax:
    content: public class ConfigurationContent
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.RegistryManager.yml
  name: RegistryManager
  nameWithType: RegistryManager
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager
  type: Class
  summary: "<p>Use the RegistryManager class to manage the identity registry in IoT Hubs. </p>"
  syntax: *o2
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpResponse
  parent: com.microsoft.azure.sdk.iot.service.transport.http
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpResponse.yml
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpResponse
  type: Class
  summary: "<p>An HTTPS response. Contains the status code, body, header fields, and error reason (if any). </p>"
  syntax:
    content: public class HttpResponse
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest
  parent: com.microsoft.azure.sdk.iot.service.transport.http
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest.yml
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpRequest
  type: Class
  syntax:
    content: public class HttpRequest
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
  parent: com.microsoft.azure.sdk.iot.service.transport.http
  href: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod.yml
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
  type: Enum
  summary: "<p>The HTTPS request method (i.e. GET). </p>"
  syntax:
    content: public enum HttpMethod
