### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.RegistryManager"
fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager"
name: "RegistryManager"
nameWithType: "RegistryManager"
summary: "Use the Registry<wbr>Manager class to manage the identity registry in IoT Hubs."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class RegistryManager"
constructors:
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager()"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager()"
  name: "RegistryManager()"
  nameWithType: "RegistryManager.RegistryManager()"
  summary: "Previously was the java default constructor, should not be used."
  deprecatedTag: "As of release 1.22.0, replaced by <xref uid=\"com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createFromConnectionString(String)\"></xref>"
  syntax: "@Deprecated\npublic RegistryManager()"
  desc: "Previously was the java default constructor, should not be used."
  hasDeprecatedTag: true
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager(String connectionString)"
  name: "RegistryManager(String connectionString)"
  nameWithType: "RegistryManager.RegistryManager(String connectionString)"
  summary: "Constructor to create instance from connection string"
  parameters:
  - description: "The iot hub connection string"
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RegistryManager(String connectionString)"
  desc: "Constructor to create instance from connection string"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager(java.lang.String,com.azure.core.credential.AzureSasCredential)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager(String hostName, AzureSasCredential azureSasCredential)"
  name: "RegistryManager(String hostName, AzureSasCredential azureSasCredential)"
  nameWithType: "RegistryManager.RegistryManager(String hostName, AzureSasCredential azureSasCredential)"
  summary: "Create a new Registry<wbr>Manager instance."
  parameters:
  - description: "The hostname of your IoT Hub instance (For instance, \"your-iot-hub.azure-devices.net\")"
    name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The SAS token provider that will be used for authentication."
    name: "azureSasCredential"
    type: "<xref href=\"com.azure.core.credential.AzureSasCredential?alt=com.azure.core.credential.AzureSasCredential&text=AzureSasCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RegistryManager(String hostName, AzureSasCredential azureSasCredential)"
  desc: "Create a new RegistryManager instance."
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager(java.lang.String,com.azure.core.credential.AzureSasCredential,com.microsoft.azure.sdk.iot.service.RegistryManagerOptions)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager(String hostName, AzureSasCredential azureSasCredential, RegistryManagerOptions options)"
  name: "RegistryManager(String hostName, AzureSasCredential azureSasCredential, RegistryManagerOptions options)"
  nameWithType: "RegistryManager.RegistryManager(String hostName, AzureSasCredential azureSasCredential, RegistryManagerOptions options)"
  summary: "Create a new Registry<wbr>Manager instance."
  parameters:
  - description: "The hostname of your IoT Hub instance (For instance, \"your-iot-hub.azure-devices.net\")"
    name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The SAS token provider that will be used for authentication."
    name: "azureSasCredential"
    type: "<xref href=\"com.azure.core.credential.AzureSasCredential?alt=com.azure.core.credential.AzureSasCredential&text=AzureSasCredential\" data-throw-if-not-resolved=\"False\" />"
  - description: "The connection options to use when connecting to the service."
    name: "options"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.RegistryManagerOptions?alt=com.microsoft.azure.sdk.iot.service.RegistryManagerOptions&text=RegistryManagerOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RegistryManager(String hostName, AzureSasCredential azureSasCredential, RegistryManagerOptions options)"
  desc: "Create a new RegistryManager instance."
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager(java.lang.String,com.azure.core.credential.TokenCredential)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager(String hostName, TokenCredential credential)"
  name: "RegistryManager(String hostName, TokenCredential credential)"
  nameWithType: "RegistryManager.RegistryManager(String hostName, TokenCredential credential)"
  summary: "Create a new Registry<wbr>Manager instance."
  parameters:
  - description: "The hostname of your IoT Hub instance (For instance, \"your-iot-hub.azure-devices.net\")"
    name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The custom <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> that will provide authentication tokens to\n                                    this library when they are needed. The provided tokens must be Json Web Tokens."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RegistryManager(String hostName, TokenCredential credential)"
  desc: "Create a new RegistryManager instance."
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager(java.lang.String,com.azure.core.credential.TokenCredential,com.microsoft.azure.sdk.iot.service.RegistryManagerOptions)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager(String hostName, TokenCredential credential, RegistryManagerOptions options)"
  name: "RegistryManager(String hostName, TokenCredential credential, RegistryManagerOptions options)"
  nameWithType: "RegistryManager.RegistryManager(String hostName, TokenCredential credential, RegistryManagerOptions options)"
  summary: "Create a new Registry<wbr>Manager instance."
  parameters:
  - description: "The hostname of your IoT Hub instance (For instance, \"your-iot-hub.azure-devices.net\")"
    name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The custom <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> that will provide authentication tokens to\n                                    this library when they are needed. The provided tokens must be Json Web Tokens."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - description: "The connection options to use when connecting to the service."
    name: "options"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.RegistryManagerOptions?alt=com.microsoft.azure.sdk.iot.service.RegistryManagerOptions&text=RegistryManagerOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RegistryManager(String hostName, TokenCredential credential, RegistryManagerOptions options)"
  desc: "Create a new RegistryManager instance."
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager(java.lang.String,com.microsoft.azure.sdk.iot.service.RegistryManagerOptions)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager(String connectionString, RegistryManagerOptions options)"
  name: "RegistryManager(String connectionString, RegistryManagerOptions options)"
  nameWithType: "RegistryManager.RegistryManager(String connectionString, RegistryManagerOptions options)"
  summary: "Constructor to create instance from connection string"
  parameters:
  - description: "The iot hub connection string"
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The connection options to use when connecting to the service."
    name: "options"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.RegistryManagerOptions?alt=com.microsoft.azure.sdk.iot.service.RegistryManagerOptions&text=RegistryManagerOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RegistryManager(String connectionString, RegistryManagerOptions options)"
  desc: "Constructor to create instance from connection string"
methods:
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.addConfiguration(com.microsoft.azure.sdk.iot.service.Configuration)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.addConfiguration(Configuration configuration)"
  name: "addConfiguration(Configuration configuration)"
  nameWithType: "RegistryManager.addConfiguration(Configuration configuration)"
  summary: "Add configuration using the given Configuration object Return with the response configuration object from Iot<wbr>Hub"
  parameters:
  - description: "The configuration object to add"
    name: "configuration"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Configuration?alt=com.microsoft.azure.sdk.iot.service.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Configuration addConfiguration(Configuration configuration)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Add configuration using the given Configuration object Return with the response configuration object from IotHub"
  returns:
    description: "The configuration object for the requested operation"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Configuration?alt=com.microsoft.azure.sdk.iot.service.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.addDevice(com.microsoft.azure.sdk.iot.service.Device)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.addDevice(Device device)"
  name: "addDevice(Device device)"
  nameWithType: "RegistryManager.addDevice(Device device)"
  summary: "Add device using the given Device object Return with the response device object from Iot<wbr>Hub"
  parameters:
  - description: "The device object to add"
    name: "device"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Device addDevice(Device device)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Add device using the given Device object Return with the response device object from IotHub"
  returns:
    description: "The future object for the requested operation"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.addDeviceAsync(com.microsoft.azure.sdk.iot.service.Device)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.addDeviceAsync(Device device)"
  name: "addDeviceAsync(Device device)"
  nameWithType: "RegistryManager.addDeviceAsync(Device device)"
  summary: "Async wrapper for add() operation"
  parameters:
  - description: "The device object to add"
    name: "device"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<Device> addDeviceAsync(Device device)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Async wrapper for add() operation"
  returns:
    description: "The future object for the requested operation"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.addModule(com.microsoft.azure.sdk.iot.service.Module)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.addModule(Module module)"
  name: "addModule(Module module)"
  nameWithType: "RegistryManager.addModule(Module module)"
  summary: "Add module using the given Module object Return with the response module object from Iot<wbr>Hub"
  parameters:
  - description: "The module object to add"
    name: "module"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Module?alt=com.microsoft.azure.sdk.iot.service.Module&text=Module\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Module addModule(Module module)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Add module using the given Module object Return with the response module object from IotHub"
  returns:
    description: "The module object for the requested operation"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Module?alt=com.microsoft.azure.sdk.iot.service.Module&text=Module\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.applyConfigurationContentOnDevice(java.lang.String,com.microsoft.azure.sdk.iot.service.ConfigurationContent)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.applyConfigurationContentOnDevice(String deviceId, ConfigurationContent content)"
  name: "applyConfigurationContentOnDevice(String deviceId, ConfigurationContent content)"
  nameWithType: "RegistryManager.applyConfigurationContentOnDevice(String deviceId, ConfigurationContent content)"
  summary: "Apply the provided configuration content to the provided device"
  parameters:
  - description: "The device to apply the configuration to"
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The configuration content to apply to the device"
    name: "content"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.ConfigurationContent?alt=com.microsoft.azure.sdk.iot.service.ConfigurationContent&text=ConfigurationContent\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void applyConfigurationContentOnDevice(String deviceId, ConfigurationContent content)"
  exceptions:
  - description: "If the iot hub cannot be reached"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "If the iot hub cannot be reached"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Apply the provided configuration content to the provided device"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.close()"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.close()"
  name: "close()"
  nameWithType: "RegistryManager.close()"
  summary: "Gracefully close running threads, and then shutdown the underlying executor service"
  syntax: "public void close()"
  desc: "Gracefully close running threads, and then shutdown the underlying executor service"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String connectionString)"
  name: "createFromConnectionString(String connectionString)"
  nameWithType: "RegistryManager.createFromConnectionString(String connectionString)"
  summary: "Static constructor to create instance from connection string"
  deprecatedTag: "because this method declares a thrown IOException even though it never throws an IOException. Users are recommended to use <xref uid=\"com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#RegistryManager(String)\"></xref> instead since it does not declare this exception even though it constructs the same Registry<wbr>Manager."
  modifiers:
  - "static"
  parameters:
  - description: "The iot hub connection string"
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic static RegistryManager createFromConnectionString(String connectionString)"
  exceptions:
  - description: "This exception is never thrown."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Static constructor to create instance from connection string"
  hasDeprecatedTag: true
  returns:
    description: "The instance of RegistryManager"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.RegistryManager?alt=com.microsoft.azure.sdk.iot.service.RegistryManager&text=RegistryManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(java.lang.String,com.microsoft.azure.sdk.iot.service.RegistryManagerOptions)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String connectionString, RegistryManagerOptions options)"
  name: "createFromConnectionString(String connectionString, RegistryManagerOptions options)"
  nameWithType: "RegistryManager.createFromConnectionString(String connectionString, RegistryManagerOptions options)"
  summary: "Static constructor to create instance from connection string"
  deprecatedTag: "because this method declares a thrown IOException even though it never throws an IOException. Users are recommended to use <xref uid=\"com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager(java.lang.String,com.microsoft.azure.sdk.iot.service.RegistryManagerOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#RegistryManager(String, RegistryManagerOptions)\"></xref> instead since it does not declare this exception even though it constructs the same Registry<wbr>Manager."
  modifiers:
  - "static"
  parameters:
  - description: "The iot hub connection string"
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The connection options to use when connecting to the service."
    name: "options"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.RegistryManagerOptions?alt=com.microsoft.azure.sdk.iot.service.RegistryManagerOptions&text=RegistryManagerOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic static RegistryManager createFromConnectionString(String connectionString, RegistryManagerOptions options)"
  exceptions:
  - description: "This exception is never thrown."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Static constructor to create instance from connection string"
  hasDeprecatedTag: true
  returns:
    description: "The instance of RegistryManager"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.RegistryManager?alt=com.microsoft.azure.sdk.iot.service.RegistryManager&text=RegistryManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(com.microsoft.azure.sdk.iot.service.JobProperties)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(JobProperties exportDevicesParameters)"
  name: "exportDevices(JobProperties exportDevicesParameters)"
  nameWithType: "RegistryManager.exportDevices(JobProperties exportDevicesParameters)"
  summary: "Create a bulk export job."
  parameters:
  - description: "A JobProperties object containing input parameters for export Devices job\n                                This API also supports identity based storage authentication, identity authentication\n                                support is currently available in limited regions. If a user wishes to try it out,\n                                they will need to set an Environment Variable of \"EnabledStorageIdentity\" and set it to \"1\"\n                                otherwise default key based authentication is used for storage\n                                <a href=\"https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support\"> More details here </a>"
    name: "exportDevicesParameters"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobProperties exportDevices(JobProperties exportDevicesParameters)"
  exceptions:
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Create a bulk export job."
  returns:
    description: "A JobProperties object for the newly created bulk export job"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(java.lang.String,java.lang.Boolean)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(String exportBlobContainerUri, Boolean excludeKeys)"
  name: "exportDevices(String exportBlobContainerUri, Boolean excludeKeys)"
  nameWithType: "RegistryManager.exportDevices(String exportBlobContainerUri, Boolean excludeKeys)"
  summary: "Create a bulk export job."
  parameters:
  - description: "URI containing SAS token to a blob container where export data will be placed"
    name: "exportBlobContainerUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether the devices keys should be excluded from the exported data or not"
    name: "excludeKeys"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobProperties exportDevices(String exportBlobContainerUri, Boolean excludeKeys)"
  exceptions:
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Create a bulk export job."
  returns:
    description: "A JobProperties object for the newly created bulk export job"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(com.microsoft.azure.sdk.iot.service.JobProperties)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(JobProperties exportDevicesParameters)"
  name: "exportDevicesAsync(JobProperties exportDevicesParameters)"
  nameWithType: "RegistryManager.exportDevicesAsync(JobProperties exportDevicesParameters)"
  summary: "Async wrapper for export<wbr>Devices() operation"
  parameters:
  - description: "A JobProperties object containing input parameters for export Devices job\n                                This API also supports identity based storage authentication, identity authentication\n                                support is currently available in limited regions. If a user wishes to try it out,\n                                they will need to set an Environment Variable of \"EnabledStorageIdentity\" and set it to \"1\"\n                                otherwise default key based authentication is used for storage\n                                <a href=\"https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support\"> More details here </a>"
    name: "exportDevicesParameters"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<JobProperties> exportDevicesAsync(JobProperties exportDevicesParameters)"
  exceptions:
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Async wrapper for exportDevices() operation"
  returns:
    description: "The future object for the requested operation"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(java.lang.String,java.lang.Boolean)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(String exportBlobContainerUri, Boolean excludeKeys)"
  name: "exportDevicesAsync(String exportBlobContainerUri, Boolean excludeKeys)"
  nameWithType: "RegistryManager.exportDevicesAsync(String exportBlobContainerUri, Boolean excludeKeys)"
  summary: "Async wrapper for export<wbr>Devices() operation"
  parameters:
  - description: "the blob storage container URI to store at."
    name: "exportBlobContainerUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "if to exclude keys or not"
    name: "excludeKeys"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<JobProperties> exportDevicesAsync(String exportBlobContainerUri, Boolean excludeKeys)"
  exceptions:
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Async wrapper for exportDevices() operation"
  returns:
    description: "The future object for the requested operation"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.getConfiguration(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.getConfiguration(String configurationId)"
  name: "getConfiguration(String configurationId)"
  nameWithType: "RegistryManager.getConfiguration(String configurationId)"
  summary: "Get configuration by configuration Id from Iot<wbr>Hub"
  parameters:
  - description: "The id of requested configuration"
    name: "configurationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Configuration getConfiguration(String configurationId)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Get configuration by configuration Id from IotHub"
  returns:
    description: "The configuration object of requested configuration on the specific device"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Configuration?alt=com.microsoft.azure.sdk.iot.service.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.getConfigurations(java.lang.Integer)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.getConfigurations(Integer maxCount)"
  name: "getConfigurations(Integer maxCount)"
  nameWithType: "RegistryManager.getConfigurations(Integer maxCount)"
  summary: "Get list of Configuration"
  parameters:
  - description: "The requested count of configurations"
    name: "maxCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public List<Configuration> getConfigurations(Integer maxCount)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Get list of Configuration"
  returns:
    description: "The array of requested configuration objects"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.service.Configuration?alt=com.microsoft.azure.sdk.iot.service.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice(String deviceId)"
  name: "getDevice(String deviceId)"
  nameWithType: "RegistryManager.getDevice(String deviceId)"
  summary: "Get device data by device Id from Iot<wbr>Hub"
  parameters:
  - description: "The id of requested device"
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Device getDevice(String deviceId)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Get device data by device Id from IotHub"
  returns:
    description: "The device object of requested device"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceAsync(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceAsync(String deviceId)"
  name: "getDeviceAsync(String deviceId)"
  nameWithType: "RegistryManager.getDeviceAsync(String deviceId)"
  summary: "Async wrapper for get<wbr>Device() operation"
  parameters:
  - description: "The id of requested device"
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<Device> getDeviceAsync(String deviceId)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Async wrapper for getDevice() operation"
  returns:
    description: "The future object for the requested operation"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceConnectionString(com.microsoft.azure.sdk.iot.service.Device)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceConnectionString(Device device)"
  name: "getDeviceConnectionString(Device device)"
  nameWithType: "RegistryManager.getDeviceConnectionString(Device device)"
  summary: "Return the iothub device connection string for a provided device."
  parameters:
  - description: "The device object to get the connectionString"
    name: "device"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String getDeviceConnectionString(Device device)"
  desc: "Return the iothub device connection string for a provided device."
  returns:
    description: "The iothub device connection string"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices(java.lang.Integer)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices(Integer maxCount)"
  name: "getDevices(Integer maxCount)"
  nameWithType: "RegistryManager.getDevices(Integer maxCount)"
  summary: "Get list of devices"
  deprecatedTag: "as of release 1.12.0. Please use <xref uid=\"com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.queryTwin*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin#queryTwin(String sqlQuery, Integer pageSize)\"></xref> to query for all devices."
  parameters:
  - description: "The requested count of devices"
    name: "maxCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic ArrayList<Device> getDevices(Integer maxCount)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Get list of devices"
  hasDeprecatedTag: true
  returns:
    description: "The array of requested device objects"
    type: "<xref href=\"java.util.ArrayList?alt=java.util.ArrayList&text=ArrayList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.getDevicesAsync(java.lang.Integer)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.getDevicesAsync(Integer maxCount)"
  name: "getDevicesAsync(Integer maxCount)"
  nameWithType: "RegistryManager.getDevicesAsync(Integer maxCount)"
  summary: "Async wrapper for get<wbr>Devices() operation"
  deprecatedTag: "as of release 1.12.0. Please use <xref uid=\"com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.queryTwin*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin#queryTwin(String sqlQuery, Integer pageSize)\"></xref> to query for all devices."
  parameters:
  - description: "The requested count of devices"
    name: "maxCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic CompletableFuture<ArrayList<Device>> getDevicesAsync(Integer maxCount)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Async wrapper for getDevices() operation"
  hasDeprecatedTag: true
  returns:
    description: "The future object for the requested operation"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.ArrayList?alt=java.util.ArrayList&text=ArrayList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.getJob(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.getJob(String jobId)"
  name: "getJob(String jobId)"
  nameWithType: "RegistryManager.getJob(String jobId)"
  summary: "Get the properties of an existing job."
  parameters:
  - description: "The id of the job to be retrieved."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobProperties getJob(String jobId)"
  exceptions:
  - description: "This exception is thrown if the jobId parameter is null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the jobId parameter is null"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the jobId parameter is null"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the jobId parameter is null"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Get the properties of an existing job."
  returns:
    description: "A JobProperties object for the requested job id"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.getJobAsync(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.getJobAsync(String jobId)"
  name: "getJobAsync(String jobId)"
  nameWithType: "RegistryManager.getJobAsync(String jobId)"
  summary: "Async wrapper for get<wbr>Job() operation"
  parameters:
  - description: "jobID as String"
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<JobProperties> getJobAsync(String jobId)"
  exceptions:
  - description: "This exception is thrown if the jobId parameter is null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the jobId parameter is null"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the jobId parameter is null"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Async wrapper for getJob() operation"
  returns:
    description: "The future object for the requested operation"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.getModule(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.getModule(String deviceId, String moduleId)"
  name: "getModule(String deviceId, String moduleId)"
  nameWithType: "RegistryManager.getModule(String deviceId, String moduleId)"
  summary: "Get module data by device Id and module Id from Iot<wbr>Hub"
  parameters:
  - description: "The id of requested device"
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The id of requested module"
    name: "moduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Module getModule(String deviceId, String moduleId)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Get module data by device Id and module Id from IotHub"
  returns:
    description: "The module object of requested module on the specific device"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Module?alt=com.microsoft.azure.sdk.iot.service.Module&text=Module\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.getModulesOnDevice(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.getModulesOnDevice(String deviceId)"
  name: "getModulesOnDevice(String deviceId)"
  nameWithType: "RegistryManager.getModulesOnDevice(String deviceId)"
  summary: "Get modules data by device Id from Iot<wbr>Hub"
  parameters:
  - description: "The id of requested device"
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public List<Module> getModulesOnDevice(String deviceId)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Get modules data by device Id from IotHub"
  returns:
    description: "The module objects on the specific device"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.service.Module?alt=com.microsoft.azure.sdk.iot.service.Module&text=Module\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics()"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics()"
  name: "getStatistics()"
  nameWithType: "RegistryManager.getStatistics()"
  summary: "Get device statistics"
  syntax: "public RegistryStatistics getStatistics()"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Get device statistics"
  returns:
    description: "RegistryStatistics object containing the requested data"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.RegistryStatistics?alt=com.microsoft.azure.sdk.iot.service.RegistryStatistics&text=RegistryStatistics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.getStatisticsAsync()"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.getStatisticsAsync()"
  name: "getStatisticsAsync()"
  nameWithType: "RegistryManager.getStatisticsAsync()"
  summary: "Async wrapper for get<wbr>Statistics() operation"
  syntax: "public CompletableFuture<RegistryStatistics> getStatisticsAsync()"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Async wrapper for getStatistics() operation"
  returns:
    description: "The future object for the requested operation"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.service.RegistryStatistics?alt=com.microsoft.azure.sdk.iot.service.RegistryStatistics&text=RegistryStatistics\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(com.microsoft.azure.sdk.iot.service.JobProperties)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(JobProperties importDevicesParameters)"
  name: "importDevices(JobProperties importDevicesParameters)"
  nameWithType: "RegistryManager.importDevices(JobProperties importDevicesParameters)"
  summary: "Create a bulk import job."
  parameters:
  - description: "A JobProperties object containing input parameters for import Devices job\n                                This API also supports identity based storage authentication, identity authentication\n                                support is currently available in limited regions. If a user wishes to try it out,\n                                they will need to set an Environment Variable of \"EnabledStorageIdentity\" and set it to \"1\"\n                                otherwise default key based authentication is used for storage\n                                <a href=\"https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support\"> More details here </a>"
    name: "importDevicesParameters"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobProperties importDevices(JobProperties importDevicesParameters)"
  exceptions:
  - description: "This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Create a bulk import job."
  returns:
    description: "A JobProperties object for the newly created bulk import job"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(String importBlobContainerUri, String outputBlobContainerUri)"
  name: "importDevices(String importBlobContainerUri, String outputBlobContainerUri)"
  nameWithType: "RegistryManager.importDevices(String importBlobContainerUri, String outputBlobContainerUri)"
  summary: "Create a bulk import job."
  parameters:
  - description: "URI containing SAS token to a blob container that contains registry data to sync"
    name: "importBlobContainerUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "URI containing SAS token to a blob container where the result of the bulk import operation will be placed"
    name: "outputBlobContainerUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobProperties importDevices(String importBlobContainerUri, String outputBlobContainerUri)"
  exceptions:
  - description: "This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Create a bulk import job."
  returns:
    description: "A JobProperties object for the newly created bulk import job"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(com.microsoft.azure.sdk.iot.service.JobProperties)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(JobProperties importParameters)"
  name: "importDevicesAsync(JobProperties importParameters)"
  nameWithType: "RegistryManager.importDevicesAsync(JobProperties importParameters)"
  summary: "Async wrapper for import<wbr>Devices() operation"
  parameters:
  - description: "A JobProperties object containing input parameters for import Devices job\n                         This API also supports identity based storage authentication, identity authentication\n                         support is currently available in limited regions. If a user wishes to try it out,\n                         they will need to set an Environment Variable of \"EnabledStorageIdentity\" and set it to \"1\"\n                         otherwise default key based authentication is used for storage\n                         <a href=\"https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support\"> More details here </a>"
    name: "importParameters"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<JobProperties> importDevicesAsync(JobProperties importParameters)"
  exceptions:
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Async wrapper for importDevices() operation"
  returns:
    description: "The future object for the requested operation"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(String importBlobContainerUri, String outputBlobContainerUri)"
  name: "importDevicesAsync(String importBlobContainerUri, String outputBlobContainerUri)"
  nameWithType: "RegistryManager.importDevicesAsync(String importBlobContainerUri, String outputBlobContainerUri)"
  summary: "Async wrapper for import<wbr>Devices() operation"
  parameters:
  - description: "Uri for importBlobContainer"
    name: "importBlobContainerUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Uri for outputBlobContainer"
    name: "outputBlobContainerUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<JobProperties> importDevicesAsync(String importBlobContainerUri, String outputBlobContainerUri)"
  exceptions:
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Async wrapper for importDevices() operation"
  returns:
    description: "The future object for the requested operation"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.service.JobProperties?alt=com.microsoft.azure.sdk.iot.service.JobProperties&text=JobProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.open()"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.open()"
  name: "open()"
  nameWithType: "RegistryManager.open()"
  deprecatedTag: "as of release 1.13.0 this API is no longer supported and open is done implicitly by the respective APIs Opens this registry manager's executor service after it has been closed."
  syntax: "@Deprecated\npublic void open()"
  hasDeprecatedTag: true
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(com.microsoft.azure.sdk.iot.service.Configuration)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(Configuration config)"
  name: "removeConfiguration(Configuration config)"
  nameWithType: "RegistryManager.removeConfiguration(Configuration config)"
  summary: "Send remove configuration request and verify response"
  parameters:
  - description: "The configuration to be removed"
    name: "config"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Configuration?alt=com.microsoft.azure.sdk.iot.service.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void removeConfiguration(Configuration config)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Send remove configuration request and verify response"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(String configurationId)"
  name: "removeConfiguration(String configurationId)"
  nameWithType: "RegistryManager.removeConfiguration(String configurationId)"
  summary: "Send remove configuration request and verify response"
  parameters:
  - description: "The configuration to be removed"
    name: "configurationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void removeConfiguration(String configurationId)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Send remove configuration request and verify response"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(com.microsoft.azure.sdk.iot.service.Device)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(Device device)"
  name: "removeDevice(Device device)"
  nameWithType: "RegistryManager.removeDevice(Device device)"
  summary: "Remove device"
  parameters:
  - description: "The device name to remove"
    name: "device"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void removeDevice(Device device)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Remove device"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(String deviceId)"
  name: "removeDevice(String deviceId)"
  nameWithType: "RegistryManager.removeDevice(String deviceId)"
  summary: "Remove device"
  parameters:
  - description: "The device name to remove"
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void removeDevice(String deviceId)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Remove device"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceAsync(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceAsync(String deviceId)"
  name: "removeDeviceAsync(String deviceId)"
  nameWithType: "RegistryManager.removeDeviceAsync(String deviceId)"
  summary: "Async wrapper for remove<wbr>Device() operation"
  parameters:
  - description: "The device object to remove"
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<Boolean> removeDeviceAsync(String deviceId)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Async wrapper for removeDevice() operation"
  returns:
    description: "The future object for the requested operation"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(com.microsoft.azure.sdk.iot.service.Module)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(Module module)"
  name: "removeModule(Module module)"
  nameWithType: "RegistryManager.removeModule(Module module)"
  summary: "Remove module"
  parameters:
  - description: "The module to be removed"
    name: "module"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Module?alt=com.microsoft.azure.sdk.iot.service.Module&text=Module\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void removeModule(Module module)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Remove module"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(String deviceId, String moduleId)"
  name: "removeModule(String deviceId, String moduleId)"
  nameWithType: "RegistryManager.removeModule(String deviceId, String moduleId)"
  summary: "Remove module"
  parameters:
  - description: "The device name associated with the module to be removed"
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The module name to be removed"
    name: "moduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void removeModule(String deviceId, String moduleId)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Remove module"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(com.microsoft.azure.sdk.iot.service.Configuration)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(Configuration configuration)"
  name: "updateConfiguration(Configuration configuration)"
  nameWithType: "RegistryManager.updateConfiguration(Configuration configuration)"
  summary: "Update configuration not forced"
  parameters:
  - description: "The configuration object containing updated data"
    name: "configuration"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Configuration?alt=com.microsoft.azure.sdk.iot.service.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Configuration updateConfiguration(Configuration configuration)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Update configuration not forced"
  returns:
    description: "The updated configuration object"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Configuration?alt=com.microsoft.azure.sdk.iot.service.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(com.microsoft.azure.sdk.iot.service.Configuration,java.lang.Boolean)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(Configuration configuration, Boolean forceUpdate)"
  name: "updateConfiguration(Configuration configuration, Boolean forceUpdate)"
  nameWithType: "RegistryManager.updateConfiguration(Configuration configuration, Boolean forceUpdate)"
  summary: "Update configuration with force<wbr>Update input parameter"
  deprecatedTag: "the force<wbr>Update argument does nothing so this method will always behave the same as @link \\#update<wbr>Configuration(Configuration)\\}"
  parameters:
  - description: "The configuration object containing updated data"
    name: "configuration"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Configuration?alt=com.microsoft.azure.sdk.iot.service.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  - description: "This value is not used"
    name: "forceUpdate"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic Configuration updateConfiguration(Configuration configuration, Boolean forceUpdate)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Update configuration with forceUpdate input parameter"
  hasDeprecatedTag: true
  returns:
    description: "The updated configuration object"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Configuration?alt=com.microsoft.azure.sdk.iot.service.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(com.microsoft.azure.sdk.iot.service.Device)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(Device device)"
  name: "updateDevice(Device device)"
  nameWithType: "RegistryManager.updateDevice(Device device)"
  summary: "Update device not forced"
  parameters:
  - description: "The device object containing updated data"
    name: "device"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Device updateDevice(Device device)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Update device not forced"
  returns:
    description: "The updated device object"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(com.microsoft.azure.sdk.iot.service.Device,java.lang.Boolean)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(Device device, Boolean forceUpdate)"
  name: "updateDevice(Device device, Boolean forceUpdate)"
  nameWithType: "RegistryManager.updateDevice(Device device, Boolean forceUpdate)"
  summary: "Update device with force<wbr>Update input parameter"
  deprecatedTag: "The force<wbr>Update argument does nothing so this method will always behave the same as <xref uid=\"com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(com.microsoft.azure.sdk.iot.service.Device)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#updateDevice(Device)\"></xref>"
  parameters:
  - description: "The device object containing updated data"
    name: "device"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />"
  - description: "This value is not used"
    name: "forceUpdate"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic Device updateDevice(Device device, Boolean forceUpdate)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Update device with forceUpdate input parameter"
  hasDeprecatedTag: true
  returns:
    description: "The updated device object"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(com.microsoft.azure.sdk.iot.service.Device)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(Device device)"
  name: "updateDeviceAsync(Device device)"
  nameWithType: "RegistryManager.updateDeviceAsync(Device device)"
  summary: "Async wrapper for update<wbr>Device() operation"
  parameters:
  - description: "The device object containing updated data"
    name: "device"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CompletableFuture<Device> updateDeviceAsync(Device device)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Async wrapper for updateDevice() operation"
  returns:
    description: "The future object for the requested operation"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(com.microsoft.azure.sdk.iot.service.Device,java.lang.Boolean)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(Device device, Boolean forceUpdate)"
  name: "updateDeviceAsync(Device device, Boolean forceUpdate)"
  nameWithType: "RegistryManager.updateDeviceAsync(Device device, Boolean forceUpdate)"
  summary: "Async wrapper for forced update<wbr>Device() operation"
  deprecatedTag: "The force<wbr>Update argument does nothing so this method will always behave the same as <xref uid=\"com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(com.microsoft.azure.sdk.iot.service.Device)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#updateDeviceAsync(Device)\"></xref>"
  parameters:
  - description: "The device object containing updated data"
    name: "device"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />"
  - description: "True is the update has to be forced regardless if the device state"
    name: "forceUpdate"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic CompletableFuture<Device> updateDeviceAsync(Device device, Boolean forceUpdate)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Async wrapper for forced updateDevice() operation"
  hasDeprecatedTag: true
  returns:
    description: "The future object for the requested operation"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.service.Device?alt=com.microsoft.azure.sdk.iot.service.Device&text=Device\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(com.microsoft.azure.sdk.iot.service.Module)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(Module module)"
  name: "updateModule(Module module)"
  nameWithType: "RegistryManager.updateModule(Module module)"
  summary: "Update module not forced"
  parameters:
  - description: "The module object containing updated data"
    name: "module"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Module?alt=com.microsoft.azure.sdk.iot.service.Module&text=Module\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Module updateModule(Module module)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Update module not forced"
  returns:
    description: "The updated module object"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Module?alt=com.microsoft.azure.sdk.iot.service.Module&text=Module\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(com.microsoft.azure.sdk.iot.service.Module,java.lang.Boolean)"
  fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(Module module, Boolean forceUpdate)"
  name: "updateModule(Module module, Boolean forceUpdate)"
  nameWithType: "RegistryManager.updateModule(Module module, Boolean forceUpdate)"
  summary: "Update module with force<wbr>Update input parameter"
  deprecatedTag: "The force<wbr>Update argument does nothing so this method will always behave the same as @link \\#update<wbr>Module(Module)\\}"
  parameters:
  - description: "The module object containing updated data"
    name: "module"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Module?alt=com.microsoft.azure.sdk.iot.service.Module&text=Module\" data-throw-if-not-resolved=\"False\" />"
  - description: "This value is not used"
    name: "forceUpdate"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic Module updateModule(Module module, Boolean forceUpdate)"
  exceptions:
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the IO operation failed"
    type: "<xref href=\"com.google.gson.JsonSyntaxException?alt=com.google.gson.JsonSyntaxException&text=JsonSyntaxException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Update module with forceUpdate input parameter"
  hasDeprecatedTag: true
  returns:
    description: "The updated module object"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Module?alt=com.microsoft.azure.sdk.iot.service.Module&text=Module\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Use the RegistryManager class to manage the identity registry in IoT Hubs."
metadata: {}
package: "com.microsoft.azure.sdk.iot.service"
artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.30.0
