### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.fluent.ExpressRouteProviderPortsLocationsClient"
fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteProviderPortsLocationsClient"
name: "ExpressRouteProviderPortsLocationsClient"
nameWithType: "ExpressRouteProviderPortsLocationsClient"
summary: "An instance of this class provides access to all the operations defined in Express<wbr>Route<wbr>Provider<wbr>Ports<wbr>Locations<wbr>Client."
syntax: "public interface ExpressRouteProviderPortsLocationsClient"
methods:
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteProviderPortsLocationsClient.list()"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteProviderPortsLocationsClient.list()"
  name: "list()"
  nameWithType: "ExpressRouteProviderPortsLocationsClient.list()"
  summary: "Retrieves all the Express<wbr>Route<wbr>Provider<wbr>Ports in a subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract ExpressRouteProviderPortListResultInner list()"
  desc: "Retrieves all the ExpressRouteProviderPorts in a subscription."
  returns:
    description: "response for ListExpressRouteProviderPort API service call."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteProviderPortListResultInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteProviderPortListResultInner&text=ExpressRouteProviderPortListResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteProviderPortsLocationsClient.listAsync()"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteProviderPortsLocationsClient.listAsync()"
  name: "listAsync()"
  nameWithType: "ExpressRouteProviderPortsLocationsClient.listAsync()"
  summary: "Retrieves all the Express<wbr>Route<wbr>Provider<wbr>Ports in a subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<ExpressRouteProviderPortListResultInner> listAsync()"
  desc: "Retrieves all the ExpressRouteProviderPorts in a subscription."
  returns:
    description: "response for ListExpressRouteProviderPort API service call on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteProviderPortListResultInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteProviderPortListResultInner&text=ExpressRouteProviderPortListResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteProviderPortsLocationsClient.listAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteProviderPortsLocationsClient.listAsync(String filter)"
  name: "listAsync(String filter)"
  nameWithType: "ExpressRouteProviderPortsLocationsClient.listAsync(String filter)"
  summary: "Retrieves all the Express<wbr>Route<wbr>Provider<wbr>Ports in a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The filter to apply on the operation. For example, you can use $filter=location eq '{state}'."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<ExpressRouteProviderPortListResultInner> listAsync(String filter)"
  desc: "Retrieves all the ExpressRouteProviderPorts in a subscription."
  returns:
    description: "response for ListExpressRouteProviderPort API service call on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteProviderPortListResultInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteProviderPortListResultInner&text=ExpressRouteProviderPortListResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteProviderPortsLocationsClient.listWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteProviderPortsLocationsClient.listWithResponse(String filter, Context context)"
  name: "listWithResponse(String filter, Context context)"
  nameWithType: "ExpressRouteProviderPortsLocationsClient.listWithResponse(String filter, Context context)"
  summary: "Retrieves all the Express<wbr>Route<wbr>Provider<wbr>Ports in a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The filter to apply on the operation. For example, you can use $filter=location eq '{state}'."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ExpressRouteProviderPortListResultInner> listWithResponse(String filter, Context context)"
  desc: "Retrieves all the ExpressRouteProviderPorts in a subscription."
  returns:
    description: "response for ListExpressRouteProviderPort API service call along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteProviderPortListResultInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteProviderPortListResultInner&text=ExpressRouteProviderPortListResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteProviderPortsLocationsClient.listWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteProviderPortsLocationsClient.listWithResponseAsync(String filter)"
  name: "listWithResponseAsync(String filter)"
  nameWithType: "ExpressRouteProviderPortsLocationsClient.listWithResponseAsync(String filter)"
  summary: "Retrieves all the Express<wbr>Route<wbr>Provider<wbr>Ports in a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The filter to apply on the operation. For example, you can use $filter=location eq '{state}'."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<ExpressRouteProviderPortListResultInner>> listWithResponseAsync(String filter)"
  desc: "Retrieves all the ExpressRouteProviderPorts in a subscription."
  returns:
    description: "response for ListExpressRouteProviderPort API service call along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n     completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteProviderPortListResultInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteProviderPortListResultInner&text=ExpressRouteProviderPortListResultInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in ExpressRouteProviderPortsLocationsClient."
metadata: {}
package: "com.azure.resourcemanager.network.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.19.0
