### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium
  id: RedisCachePremium
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.models
  children:
  - com.azure.resourcemanager.redis.models.RedisCachePremium.addLinkedServer(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ReplicationRole)
  - com.azure.resourcemanager.redis.models.RedisCachePremium.deletePatchSchedule()
  - com.azure.resourcemanager.redis.models.RedisCachePremium.exportData(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.models.RedisCachePremium.exportData(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.models.RedisCachePremium.forceReboot(com.azure.resourcemanager.redis.models.RebootType,int)
  - com.azure.resourcemanager.redis.models.RedisCachePremium.getLinkedServerRole(java.lang.String)
  - com.azure.resourcemanager.redis.models.RedisCachePremium.importData(java.util.List<java.lang.String>)
  - com.azure.resourcemanager.redis.models.RedisCachePremium.importData(java.util.List<java.lang.String>,java.lang.String)
  - com.azure.resourcemanager.redis.models.RedisCachePremium.listLinkedServers()
  - com.azure.resourcemanager.redis.models.RedisCachePremium.listPatchSchedules()
  - com.azure.resourcemanager.redis.models.RedisCachePremium.removeLinkedServer(java.lang.String)
  langs:
  - java
  name: RedisCachePremium
  nameWithType: RedisCachePremium
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium
  type: Interface
  package: com.azure.resourcemanager.redis.models
  summary: An immutable client-side representation of an Azure Redis cache with Premium SKU.
  syntax:
    content: public interface RedisCachePremium extends RedisCache
  implements:
  - com.azure.resourcemanager.redis.models.RedisCache
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.addLinkedServer(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ReplicationRole)
  id: addLinkedServer(java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.ReplicationRole)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.models.RedisCachePremium
  langs:
  - java
  name: addLinkedServer(String linkedRedisCacheId, String linkedServerLocation, ReplicationRole role)
  nameWithType: RedisCachePremium.addLinkedServer(String linkedRedisCacheId, String linkedServerLocation, ReplicationRole role)
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.addLinkedServer(String linkedRedisCacheId, String linkedServerLocation, ReplicationRole role)
  overload: com.azure.resourcemanager.redis.models.RedisCachePremium.addLinkedServer*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: Adds a linked server to the current Redis cache instance.
  syntax:
    content: public abstract String addLinkedServer(String linkedRedisCacheId, String linkedServerLocation, ReplicationRole role)
    parameters:
    - id: linkedRedisCacheId
      type: java.lang.String
      description: the resource Id of the Redis instance to link with.
    - id: linkedServerLocation
      type: java.lang.String
      description: the location of the linked Redis instance.
    - id: role
      type: com.azure.resourcemanager.redis.models.ReplicationRole
      description: the role of the linked server.
    return:
      type: java.lang.String
      description: name of the linked server.
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.deletePatchSchedule()
  id: deletePatchSchedule()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.models.RedisCachePremium
  langs:
  - java
  name: deletePatchSchedule()
  nameWithType: RedisCachePremium.deletePatchSchedule()
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.deletePatchSchedule()
  overload: com.azure.resourcemanager.redis.models.RedisCachePremium.deletePatchSchedule*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: Deletes the patching schedule for Redis Cache.
  syntax:
    content: public abstract void deletePatchSchedule()
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.exportData(java.lang.String,java.lang.String)
  id: exportData(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.models.RedisCachePremium
  langs:
  - java
  name: exportData(String containerSASUrl, String prefix)
  nameWithType: RedisCachePremium.exportData(String containerSASUrl, String prefix)
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.exportData(String containerSASUrl, String prefix)
  overload: com.azure.resourcemanager.redis.models.RedisCachePremium.exportData*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: Export data from Redis Cache.
  syntax:
    content: public abstract void exportData(String containerSASUrl, String prefix)
    parameters:
    - id: containerSASUrl
      type: java.lang.String
      description: container name to export to.
    - id: prefix
      type: java.lang.String
      description: prefix to use for exported files.
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.exportData(java.lang.String,java.lang.String,java.lang.String)
  id: exportData(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.models.RedisCachePremium
  langs:
  - java
  name: exportData(String containerSASUrl, String prefix, String fileFormat)
  nameWithType: RedisCachePremium.exportData(String containerSASUrl, String prefix, String fileFormat)
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.exportData(String containerSASUrl, String prefix, String fileFormat)
  overload: com.azure.resourcemanager.redis.models.RedisCachePremium.exportData*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: Export data from Redis Cache.
  syntax:
    content: public abstract void exportData(String containerSASUrl, String prefix, String fileFormat)
    parameters:
    - id: containerSASUrl
      type: java.lang.String
      description: container name to export to.
    - id: prefix
      type: java.lang.String
      description: prefix to use for exported files.
    - id: fileFormat
      type: java.lang.String
      description: specifies file format.
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.forceReboot(com.azure.resourcemanager.redis.models.RebootType,int)
  id: forceReboot(com.azure.resourcemanager.redis.models.RebootType,int)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.models.RedisCachePremium
  langs:
  - java
  name: forceReboot(RebootType rebootType, int shardId)
  nameWithType: RedisCachePremium.forceReboot(RebootType rebootType, int shardId)
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.forceReboot(RebootType rebootType, int shardId)
  overload: com.azure.resourcemanager.redis.models.RedisCachePremium.forceReboot*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.
  syntax:
    content: public abstract void forceReboot(RebootType rebootType, int shardId)
    parameters:
    - id: rebootType
      type: com.azure.resourcemanager.redis.models.RebootType
      description: >-
        specifies which Redis node(s) to reboot. Depending on this value data loss is possible.
             Possible values include: 'PrimaryNode', 'SecondaryNode', 'AllNodes'.
    - id: shardId
      type: int
      description: In case of cluster cache, this specifies shard id which should be rebooted.
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.getLinkedServerRole(java.lang.String)
  id: getLinkedServerRole(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.models.RedisCachePremium
  langs:
  - java
  name: getLinkedServerRole(String linkedServerName)
  nameWithType: RedisCachePremium.getLinkedServerRole(String linkedServerName)
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.getLinkedServerRole(String linkedServerName)
  overload: com.azure.resourcemanager.redis.models.RedisCachePremium.getLinkedServerRole*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: Gets the role for the linked server of the current Redis cache instance.
  syntax:
    content: public abstract ReplicationRole getLinkedServerRole(String linkedServerName)
    parameters:
    - id: linkedServerName
      type: java.lang.String
      description: the name of the linked server.
    return:
      type: com.azure.resourcemanager.redis.models.ReplicationRole
      description: the role of the linked server.
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.importData(java.util.List<java.lang.String>)
  id: importData(java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.models.RedisCachePremium
  langs:
  - java
  name: importData(List<String> files)
  nameWithType: RedisCachePremium.importData(List<String> files)
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.importData(List<String> files)
  overload: com.azure.resourcemanager.redis.models.RedisCachePremium.importData*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: Import data into Redis Cache.
  syntax:
    content: public abstract void importData(List<String> files)
    parameters:
    - id: files
      type: java.util.List<java.lang.String>
      description: files to import.
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.importData(java.util.List<java.lang.String>,java.lang.String)
  id: importData(java.util.List<java.lang.String>,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.models.RedisCachePremium
  langs:
  - java
  name: importData(List<String> files, String fileFormat)
  nameWithType: RedisCachePremium.importData(List<String> files, String fileFormat)
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.importData(List<String> files, String fileFormat)
  overload: com.azure.resourcemanager.redis.models.RedisCachePremium.importData*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: Import data into Redis Cache.
  syntax:
    content: public abstract void importData(List<String> files, String fileFormat)
    parameters:
    - id: files
      type: java.util.List<java.lang.String>
      description: files to import.
    - id: fileFormat
      type: java.lang.String
      description: specifies file format.
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.listLinkedServers()
  id: listLinkedServers()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.models.RedisCachePremium
  langs:
  - java
  name: listLinkedServers()
  nameWithType: RedisCachePremium.listLinkedServers()
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.listLinkedServers()
  overload: com.azure.resourcemanager.redis.models.RedisCachePremium.listLinkedServers*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: Gets the list of linked servers associated with this redis cache.
  syntax:
    content: public abstract Map<String,ReplicationRole> listLinkedServers()
    return:
      type: java.util.Map<java.lang.String,com.azure.resourcemanager.redis.models.ReplicationRole>
      description: the Roles of the linked servers, indexed by name
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.listPatchSchedules()
  id: listPatchSchedules()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.models.RedisCachePremium
  langs:
  - java
  name: listPatchSchedules()
  nameWithType: RedisCachePremium.listPatchSchedules()
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.listPatchSchedules()
  overload: com.azure.resourcemanager.redis.models.RedisCachePremium.listPatchSchedules*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: Gets the patching schedule for Redis Cache.
  syntax:
    content: public abstract List<ScheduleEntry> listPatchSchedules()
    return:
      type: java.util.List<com.azure.resourcemanager.redis.models.ScheduleEntry>
      description: List of patch schedules for current Redis Cache.
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.removeLinkedServer(java.lang.String)
  id: removeLinkedServer(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.1.0
  parent: com.azure.resourcemanager.redis.models.RedisCachePremium
  langs:
  - java
  name: removeLinkedServer(String linkedServerName)
  nameWithType: RedisCachePremium.removeLinkedServer(String linkedServerName)
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.removeLinkedServer(String linkedServerName)
  overload: com.azure.resourcemanager.redis.models.RedisCachePremium.removeLinkedServer*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: Removes the linked server from the current Redis cache instance.
  syntax:
    content: public abstract void removeLinkedServer(String linkedServerName)
    parameters:
    - id: linkedServerName
      type: java.lang.String
      description: the name of the linked server.
references:
- uid: com.azure.resourcemanager.redis.models.RebootType
  name: RebootType
  nameWithType: RebootType
  fullName: com.azure.resourcemanager.redis.models.RebootType
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.forceReboot*
  name: forceReboot
  nameWithType: RedisCachePremium.forceReboot
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.forceReboot
  package: com.azure.resourcemanager.redis.models
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.importData*
  name: importData
  nameWithType: RedisCachePremium.importData
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.importData
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.exportData*
  name: exportData
  nameWithType: RedisCachePremium.exportData
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.exportData
  package: com.azure.resourcemanager.redis.models
- uid: java.util.List<com.azure.resourcemanager.redis.models.ScheduleEntry>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.models.ScheduleEntry
    name: ScheduleEntry
    fullName: com.azure.resourcemanager.redis.models.ScheduleEntry
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.listPatchSchedules*
  name: listPatchSchedules
  nameWithType: RedisCachePremium.listPatchSchedules
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.listPatchSchedules
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.deletePatchSchedule*
  name: deletePatchSchedule
  nameWithType: RedisCachePremium.deletePatchSchedule
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.deletePatchSchedule
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.ReplicationRole
  name: ReplicationRole
  nameWithType: ReplicationRole
  fullName: com.azure.resourcemanager.redis.models.ReplicationRole
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.addLinkedServer*
  name: addLinkedServer
  nameWithType: RedisCachePremium.addLinkedServer
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.addLinkedServer
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.removeLinkedServer*
  name: removeLinkedServer
  nameWithType: RedisCachePremium.removeLinkedServer
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.removeLinkedServer
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.getLinkedServerRole*
  name: getLinkedServerRole
  nameWithType: RedisCachePremium.getLinkedServerRole
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.getLinkedServerRole
  package: com.azure.resourcemanager.redis.models
- uid: java.util.Map<java.lang.String,com.azure.resourcemanager.redis.models.ReplicationRole>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.redis.models.ReplicationRole
    name: ReplicationRole
    fullName: com.azure.resourcemanager.redis.models.ReplicationRole
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.models.RedisCachePremium.listLinkedServers*
  name: listLinkedServers
  nameWithType: RedisCachePremium.listLinkedServers
  fullName: com.azure.resourcemanager.redis.models.RedisCachePremium.listLinkedServers
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCache
  name: RedisCache
  nameWithType: RedisCache
  fullName: com.azure.resourcemanager.redis.models.RedisCache
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.resourcemanager.redis.models.ScheduleEntry
  name: ScheduleEntry
  nameWithType: ScheduleEntry
  fullName: com.azure.resourcemanager.redis.models.ScheduleEntry
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,com.azure.resourcemanager.redis.models.ReplicationRole
  name: String,ReplicationRole
  nameWithType: String,ReplicationRole
  fullName: java.lang.String,com.azure.resourcemanager.redis.models.ReplicationRole
