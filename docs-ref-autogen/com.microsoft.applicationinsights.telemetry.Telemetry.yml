### YamlMime:ManagedReference
items:
- uid: com.microsoft.applicationinsights.telemetry.Telemetry
  id: Telemetry
  parent: com.microsoft.applicationinsights.telemetry
  children:
  - com.microsoft.applicationinsights.telemetry.Telemetry.getContext()
  - com.microsoft.applicationinsights.telemetry.Telemetry.getProperties()
  - com.microsoft.applicationinsights.telemetry.Telemetry.getSequence()
  - com.microsoft.applicationinsights.telemetry.Telemetry.getTimestamp()
  - com.microsoft.applicationinsights.telemetry.Telemetry.reset()
  - com.microsoft.applicationinsights.telemetry.Telemetry.sanitize()
  - com.microsoft.applicationinsights.telemetry.Telemetry.serialize(JsonTelemetryDataSerializer)
  - com.microsoft.applicationinsights.telemetry.Telemetry.setSequence(String)
  - com.microsoft.applicationinsights.telemetry.Telemetry.setTimestamp(Date)
  href: com.microsoft.applicationinsights.telemetry.Telemetry.yml
  langs:
  - java
  name: Telemetry
  nameWithType: Telemetry
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry
  type: Interface
  source:
    remote: &o0
      path: core/src/main/java/com/microsoft/applicationinsights/telemetry/Telemetry.java
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-Java
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/Telemetry.java
    startLine: 30
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>The base telemetry type interface for application insights. </p>"
  syntax:
    content: public interface Telemetry extends JsonSerializable
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.getContext()
  id: getContext()
  parent: com.microsoft.applicationinsights.telemetry.Telemetry
  href: com.microsoft.applicationinsights.telemetry.Telemetry.yml
  langs:
  - java
  name: getContext()
  nameWithType: Telemetry.getContext()
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.getContext()
  overload: com.microsoft.applicationinsights.telemetry.Telemetry.getContext*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/Telemetry.java
    startLine: 67
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Gets the context associated with this telemetry instance. </p>"
  syntax:
    content: public TelemetryContext getContext()
    return:
      type: com.microsoft.applicationinsights.telemetry.TelemetryContext
      description: <p>Context associated with this instance. </p>
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.getProperties()
  id: getProperties()
  parent: com.microsoft.applicationinsights.telemetry.Telemetry
  href: com.microsoft.applicationinsights.telemetry.Telemetry.yml
  langs:
  - java
  name: getProperties()
  nameWithType: Telemetry.getProperties()
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.getProperties()
  overload: com.microsoft.applicationinsights.telemetry.Telemetry.getProperties*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/Telemetry.java
    startLine: 73
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Gets the map of application-defined property names and values. </p>"
  syntax:
    content: public Map<String, String> getProperties()
    return:
      type: 689c8cb5
      description: <p>Map of properties. </p>
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.getSequence()
  id: getSequence()
  parent: com.microsoft.applicationinsights.telemetry.Telemetry
  href: com.microsoft.applicationinsights.telemetry.Telemetry.yml
  langs:
  - java
  name: getSequence()
  nameWithType: Telemetry.getSequence()
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.getSequence()
  overload: com.microsoft.applicationinsights.telemetry.Telemetry.getSequence*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/Telemetry.java
    startLine: 49
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Sequence field used to track absolute order of uploaded events. It is a two-part value that includes a stable identifier for the current boot session and an incrementing identifier for each event added to the upload queue</p>\r\n<p>The Sequence helps track how many events were fired and how many events were uploaded and enables identification of data lost during upload and de-duplication of events on the ingress server.</p>\r\n<p>Gets the current sequence. </p>"
  syntax:
    content: public String getSequence()
    return:
      type: "26831127"
      description: <p>The current sequence. </p>
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.getTimestamp()
  id: getTimestamp()
  parent: com.microsoft.applicationinsights.telemetry.Telemetry
  href: com.microsoft.applicationinsights.telemetry.Telemetry.yml
  langs:
  - java
  name: getTimestamp()
  nameWithType: Telemetry.getTimestamp()
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.getTimestamp()
  overload: com.microsoft.applicationinsights.telemetry.Telemetry.getTimestamp*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/Telemetry.java
    startLine: 36
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Gets the time when telemetry was recorded </p>"
  syntax:
    content: public Date getTimestamp()
    return:
      type: "12977444"
      description: <p>Recorded time. </p>
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.reset()
  id: reset()
  parent: com.microsoft.applicationinsights.telemetry.Telemetry
  href: com.microsoft.applicationinsights.telemetry.Telemetry.yml
  langs:
  - java
  name: reset()
  nameWithType: Telemetry.reset()
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.reset()
  overload: com.microsoft.applicationinsights.telemetry.Telemetry.reset*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/Telemetry.java
    startLine: 89
  package: com.microsoft.applicationinsights.telemetry
  syntax:
    content: public void reset()
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.sanitize()
  id: sanitize()
  parent: com.microsoft.applicationinsights.telemetry.Telemetry
  href: com.microsoft.applicationinsights.telemetry.Telemetry.yml
  langs:
  - java
  name: sanitize()
  nameWithType: Telemetry.sanitize()
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.sanitize()
  overload: com.microsoft.applicationinsights.telemetry.Telemetry.sanitize*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/Telemetry.java
    startLine: 80
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000054\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>Sanitizes the properties of the telemetry item based on DP constraints. </p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public void sanitize()
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.serialize(JsonTelemetryDataSerializer)
  id: serialize(JsonTelemetryDataSerializer)
  parent: com.microsoft.applicationinsights.telemetry.Telemetry
  href: com.microsoft.applicationinsights.telemetry.Telemetry.yml
  langs:
  - java
  name: serialize(JsonTelemetryDataSerializer writer)
  nameWithType: Telemetry.serialize(JsonTelemetryDataSerializer writer)
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.serialize(JsonTelemetryDataSerializer writer)
  overload: com.microsoft.applicationinsights.telemetry.Telemetry.serialize*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/Telemetry.java
    startLine: 87
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Serializes itself to Json using the <xref uid=\"com.microsoft.applicationinsights.telemetry.JsonTelemetryDataSerializer\" data-throw-if-not-resolved=\"false\">JsonTelemetryDataSerializer</xref></p>"
  syntax:
    content: public void serialize(JsonTelemetryDataSerializer writer)
    parameters:
    - id: writer
      type: com.microsoft.applicationinsights.telemetry.JsonTelemetryDataSerializer
      description: <p>The writer that helps with serializing into Json format </p>
  overridden: com.microsoft.applicationinsights.telemetry.JsonSerializable.serialize(JsonTelemetryDataSerializer)
  exceptions:
  - type: cbf33bbe
    description: <p>a possible exception </p>
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.setSequence(String)
  id: setSequence(String)
  parent: com.microsoft.applicationinsights.telemetry.Telemetry
  href: com.microsoft.applicationinsights.telemetry.Telemetry.yml
  langs:
  - java
  name: setSequence(String sequence)
  nameWithType: Telemetry.setSequence(String sequence)
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.setSequence(String sequence)
  overload: com.microsoft.applicationinsights.telemetry.Telemetry.setSequence*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/Telemetry.java
    startLine: 55
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Sets the sequence. </p>"
  syntax:
    content: public void setSequence(String sequence)
    parameters:
    - id: sequence
      type: "26831127"
      description: <p>The sequence. </p>
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.setTimestamp(Date)
  id: setTimestamp(Date)
  parent: com.microsoft.applicationinsights.telemetry.Telemetry
  href: com.microsoft.applicationinsights.telemetry.Telemetry.yml
  langs:
  - java
  name: setTimestamp(Date date)
  nameWithType: Telemetry.setTimestamp(Date date)
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.setTimestamp(Date date)
  overload: com.microsoft.applicationinsights.telemetry.Telemetry.setTimestamp*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/Telemetry.java
    startLine: 61
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Sets the time when telemetry was recorded </p>"
  syntax:
    content: public void setTimestamp(Date date)
    parameters:
    - id: date
      type: "12977444"
      description: <p>Recorded time. </p>
references:
- uid: "12977444"
  spec.java:
  - name: Date
    fullName: Date
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.getTimestamp*
  name: getTimestamp
  nameWithType: Telemetry.getTimestamp
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.getTimestamp
  package: com.microsoft.applicationinsights.telemetry
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.getSequence*
  name: getSequence
  nameWithType: Telemetry.getSequence
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.getSequence
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.setSequence*
  name: setSequence
  nameWithType: Telemetry.setSequence
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.setSequence
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.setTimestamp*
  name: setTimestamp
  nameWithType: Telemetry.setTimestamp
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.setTimestamp
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.getContext*
  name: getContext
  nameWithType: Telemetry.getContext
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.getContext
  package: com.microsoft.applicationinsights.telemetry
- uid: 689c8cb5
  spec.java:
  - name: Map<String, String>
    fullName: Map<String, String>
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.getProperties*
  name: getProperties
  nameWithType: Telemetry.getProperties
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.getProperties
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.sanitize*
  name: sanitize
  nameWithType: Telemetry.sanitize
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.sanitize
  package: com.microsoft.applicationinsights.telemetry
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.serialize*
  name: serialize
  nameWithType: Telemetry.serialize
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.serialize
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.Telemetry.reset*
  name: reset
  nameWithType: Telemetry.reset
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry.reset
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.JsonSerializable
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry.JsonSerializable.yml
  name: JsonSerializable
  nameWithType: JsonSerializable
  fullName: com.microsoft.applicationinsights.telemetry.JsonSerializable
  type: Interface
  summary: "<p>Represents objects that support serialization to JSON. </p>"
  syntax:
    content: public interface JsonSerializable
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: BaseTelemetry<T>
  nameWithType: BaseTelemetry<T>
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T>
  type: Class
  summary: "<p>Superclass for all telemetry data classes. </p>"
  syntax:
    content: public class BaseTelemetry<T extends Domain> implements Telemetry
    typeParameters:
    - id: T
      type: 8ce1ecb9
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.getTimestamp()
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: getTimestamp()
  nameWithType: BaseTelemetry<T>.getTimestamp()
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getTimestamp()
  type: Method
  summary: "<p>Gets date and time when event was recorded.</p>\r\n<p></p>"
  syntax:
    content: public Date getTimestamp()
    return:
      type: "12977444"
      description: <p>The timestamp as Date </p>
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.getSequence()
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: getSequence()
  nameWithType: BaseTelemetry<T>.getSequence()
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getSequence()
  type: Method
  summary: "<p>Sequence field used to track absolute order of uploaded events. It is a two-part value that includes a stable identifier for the current boot session and an incrementing identifier for each event added to the upload queue </p>\r\n<p>The Sequence helps track how many events were fired and how many events were uploaded and enables identification of data lost during upload and de-duplication of events on the ingress server. </p>\r\n<p>Gets the value that defines absolute order of the telemetry item.</p>\r\n<p></p>"
  syntax:
    content: public String getSequence()
    return:
      type: "26831127"
      description: <p>The sequence of the Telemetry. </p>
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.setSequence(String)
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: setSequence(String sequence)
  nameWithType: BaseTelemetry<T>.setSequence(String sequence)
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.setSequence(String sequence)
  type: Method
  summary: "<p>Sets the value that defines absolute order of the telemetry item.</p>\r\n<p></p>"
  syntax:
    content: public void setSequence(String sequence)
    parameters:
    - id: sequence
      type: "26831127"
      description: <p>The sequence of the Telemetry. </p>
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.setTimestamp(Date)
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: setTimestamp(Date date)
  nameWithType: BaseTelemetry<T>.setTimestamp(Date date)
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.setTimestamp(Date date)
  type: Method
  summary: "<p>Sets date and time when event was recorded.</p>\r\n<p></p>"
  syntax:
    content: public void setTimestamp(Date date)
    parameters:
    - id: date
      type: "12977444"
      description: <p>The timestamp as Date. </p>
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry.TelemetryContext.yml
  name: TelemetryContext
  nameWithType: TelemetryContext
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext
  type: Class
  summary: "<p>Represents a context for sending telemetry to the Application Insights service. The context holds data that is sent with every telemetry item. It includes the instrumentation key; the current operation id, for correlating related telemetry items; and user, session and device data. You can also set properties that are added to every telemetry item, and can be used in the portal to filter the telemetry that used this context. </p>"
  syntax:
    content: public class TelemetryContext
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.getContext()
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: getContext()
  nameWithType: BaseTelemetry<T>.getContext()
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getContext()
  type: Method
  summary: "<p>Gets the context associated with the current telemetry item.</p>\r\n<p></p>"
  syntax:
    content: public TelemetryContext getContext()
    return:
      type: com.microsoft.applicationinsights.telemetry.TelemetryContext
      description: <p>The context </p>
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.getProperties()
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: getProperties()
  nameWithType: BaseTelemetry<T>.getProperties()
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getProperties()
  type: Method
  summary: "<p>Gets a dictionary of application-defined property names and values providing additional information about this event.</p>\r\n<p></p>"
  syntax:
    content: public Map<String, String> getProperties()
    return:
      type: 689c8cb5
      description: <p>The properties </p>
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.sanitize()
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: sanitize()
  nameWithType: BaseTelemetry<T>.sanitize()
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.sanitize()
  type: Method
  summary: "<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000032\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>Makes sure the data to send is sanitized from bad chars, proper length etc. </p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public void sanitize()
- uid: com.microsoft.applicationinsights.telemetry.JsonSerializable.serialize(JsonTelemetryDataSerializer)
  parent: com.microsoft.applicationinsights.telemetry.JsonSerializable
  href: com.microsoft.applicationinsights.telemetry.JsonSerializable.yml
  name: serialize(JsonTelemetryDataSerializer serializer)
  nameWithType: JsonSerializable.serialize(JsonTelemetryDataSerializer serializer)
  fullName: com.microsoft.applicationinsights.telemetry.JsonSerializable.serialize(JsonTelemetryDataSerializer serializer)
  type: Method
  summary: "<p>Writes JSON representation of the object to the specified writer. </p>"
  syntax:
    content: public void serialize(JsonTelemetryDataSerializer serializer)
    parameters:
    - id: serializer
      type: com.microsoft.applicationinsights.telemetry.JsonTelemetryDataSerializer
      description: <p>The <xref uid="com.microsoft.applicationinsights.telemetry.JsonTelemetryDataSerializer" data-throw-if-not-resolved="false">com.microsoft.applicationinsights.telemetry.JsonTelemetryDataSerializer</xref> that is used to serialized to JSON format </p>
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.serialize(JsonTelemetryDataSerializer)
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: serialize(JsonTelemetryDataSerializer writer)
  nameWithType: BaseTelemetry<T>.serialize(JsonTelemetryDataSerializer writer)
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.serialize(JsonTelemetryDataSerializer writer)
  type: Method
  summary: "<p>Serializes this object in JSON format.</p>\r\n<p></p>"
  syntax:
    content: public void serialize(JsonTelemetryDataSerializer writer)
    parameters:
    - id: writer
      type: com.microsoft.applicationinsights.telemetry.JsonTelemetryDataSerializer
      description: <p>The writer that helps with serializing into Json format </p>
- uid: com.microsoft.applicationinsights.telemetry.JsonTelemetryDataSerializer
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry.JsonTelemetryDataSerializer.yml
  name: JsonTelemetryDataSerializer
  nameWithType: JsonTelemetryDataSerializer
  fullName: com.microsoft.applicationinsights.telemetry.JsonTelemetryDataSerializer
  type: Class
  summary: "<p>This class knows how to transform data that is relevant to <xref uid=\"com.microsoft.applicationinsights.telemetry.Telemetry\" data-throw-if-not-resolved=\"false\">Telemetry</xref> instances into JSON. </p>"
  syntax:
    content: public class JsonTelemetryDataSerializer
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.reset()
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: reset()
  nameWithType: BaseTelemetry<T>.reset()
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.reset()
  type: Method
  syntax:
    content: public void reset()
