### YamlMime:JavaMember
uid: "com.azure.data.tables.models.TableServiceCorsRule.setAllowedOrigins*"
fullName: "com.azure.data.tables.models.TableServiceCorsRule.setAllowedOrigins"
name: "setAllowedOrigins"
nameWithType: "TableServiceCorsRule.setAllowedOrigins"
members:
- uid: "com.azure.data.tables.models.TableServiceCorsRule.setAllowedOrigins(java.lang.String)"
  fullName: "com.azure.data.tables.models.TableServiceCorsRule.setAllowedOrigins(String allowedOrigins)"
  name: "setAllowedOrigins(String allowedOrigins)"
  nameWithType: "TableServiceCorsRule.setAllowedOrigins(String allowedOrigins)"
  summary: "Set the allowedOrigins property: The origin domains that are permitted to make a request against the service via CORS. The origin domain is the domain from which the request originates. Note that the origin must be an exact case-sensitive match with the origin that the user age sends to the service. You can also use the wildcard character '\\*' to allow all origin domains to make requests via CORS."
  parameters:
  - description: "The <code>allowedOrigins</code> to set."
    name: "allowedOrigins"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceCorsRule setAllowedOrigins(String allowedOrigins)"
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.models.TableServiceCorsRule\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceCorsRule\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.models.TableServiceCorsRule?alt=com.azure.data.tables.models.TableServiceCorsRule&text=TableServiceCorsRule\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.data.tables.models"
artifact: com.azure:azure-data-tables:12.2.1
