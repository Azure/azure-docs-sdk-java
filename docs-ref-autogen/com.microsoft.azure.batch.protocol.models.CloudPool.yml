### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.CloudPool"
fullName: "com.microsoft.azure.batch.protocol.models.CloudPool"
name: "CloudPool"
nameWithType: "CloudPool"
summary: "A Pool in the Azure Batch service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class CloudPool"
constructors:
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.CloudPool()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.CloudPool()"
  name: "CloudPool()"
  nameWithType: "CloudPool.CloudPool()"
  syntax: "public CloudPool()"
methods:
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.allocationState()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.allocationState()"
  name: "allocationState()"
  nameWithType: "CloudPool.allocationState()"
  summary: "Get possible values include: 'steady', 'resizing', 'stopping'."
  syntax: "public AllocationState allocationState()"
  desc: "Get possible values include: 'steady', 'resizing', 'stopping'."
  returns:
    description: "the allocationState value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.AllocationState?alt=com.microsoft.azure.batch.protocol.models.AllocationState&text=AllocationState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.allocationStateTransitionTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.allocationStateTransitionTime()"
  name: "allocationStateTransitionTime()"
  nameWithType: "CloudPool.allocationStateTransitionTime()"
  summary: "Get the allocation<wbr>State<wbr>Transition<wbr>Time value."
  syntax: "public DateTime allocationStateTransitionTime()"
  desc: "Get the allocationStateTransitionTime value."
  returns:
    description: "the allocationStateTransitionTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.applicationLicenses()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.applicationLicenses()"
  name: "applicationLicenses()"
  nameWithType: "CloudPool.applicationLicenses()"
  summary: "Get the list of application licenses must be a subset of available Batch service application licenses."
  syntax: "public List<String> applicationLicenses()"
  desc: "Get the list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, Pool creation will fail."
  returns:
    description: "the applicationLicenses value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.applicationPackageReferences()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.applicationPackageReferences()"
  name: "applicationPackageReferences()"
  nameWithType: "CloudPool.applicationPackageReferences()"
  summary: "Get changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged."
  syntax: "public List<ApplicationPackageReference> applicationPackageReferences()"
  desc: "Get changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Package references on any given Pool."
  returns:
    description: "the applicationPackageReferences value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.ApplicationPackageReference?alt=com.microsoft.azure.batch.protocol.models.ApplicationPackageReference&text=ApplicationPackageReference\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleEvaluationInterval()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleEvaluationInterval()"
  name: "autoScaleEvaluationInterval()"
  nameWithType: "CloudPool.autoScaleEvaluationInterval()"
  summary: "Get this property is set only if the Pool automatically scales, i.<wbr>e."
  syntax: "public Period autoScaleEvaluationInterval()"
  desc: "Get this property is set only if the Pool automatically scales, i.e. enableAutoScale is true."
  returns:
    description: "the autoScaleEvaluationInterval value"
    type: "<xref href=\"org.joda.time.Period?alt=org.joda.time.Period&text=Period\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleFormula()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleFormula()"
  name: "autoScaleFormula()"
  nameWithType: "CloudPool.autoScaleFormula()"
  summary: "Get this property is set only if the Pool automatically scales, i.<wbr>e."
  syntax: "public String autoScaleFormula()"
  desc: "Get this property is set only if the Pool automatically scales, i.e. enableAutoScale is true."
  returns:
    description: "the autoScaleFormula value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleRun()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleRun()"
  name: "autoScaleRun()"
  nameWithType: "CloudPool.autoScaleRun()"
  summary: "Get this property is set only if the Pool automatically scales, i.<wbr>e."
  syntax: "public AutoScaleRun autoScaleRun()"
  desc: "Get this property is set only if the Pool automatically scales, i.e. enableAutoScale is true."
  returns:
    description: "the autoScaleRun value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.AutoScaleRun?alt=com.microsoft.azure.batch.protocol.models.AutoScaleRun&text=AutoScaleRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.certificateReferences()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.certificateReferences()"
  name: "certificateReferences()"
  nameWithType: "CloudPool.certificateReferences()"
  summary: "Get for Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location."
  syntax: "public List<CertificateReference> certificateReferences()"
  desc: "Get for Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ\\_BATCH\\_CERTIFICATES\\_DIR is supplied to the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/\\{user-name\\}/certs) and Certificates are placed in that directory."
  returns:
    description: "the certificateReferences value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateReference?alt=com.microsoft.azure.batch.protocol.models.CertificateReference&text=CertificateReference\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.cloudServiceConfiguration()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.cloudServiceConfiguration()"
  name: "cloudServiceConfiguration()"
  nameWithType: "CloudPool.cloudServiceConfiguration()"
  summary: "Get this property and virtual<wbr>Machine<wbr>Configuration are mutually exclusive and one of the properties must be specified."
  syntax: "public CloudServiceConfiguration cloudServiceConfiguration()"
  desc: "Get this property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch Account was created with its poolAllocationMode property set to 'UserSubscription'."
  returns:
    description: "the cloudServiceConfiguration value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration?alt=com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration&text=CloudServiceConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.creationTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.creationTime()"
  name: "creationTime()"
  nameWithType: "CloudPool.creationTime()"
  summary: "Get the creation<wbr>Time value."
  syntax: "public DateTime creationTime()"
  desc: "Get the creationTime value."
  returns:
    description: "the creationTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.currentDedicatedNodes()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.currentDedicatedNodes()"
  name: "currentDedicatedNodes()"
  nameWithType: "CloudPool.currentDedicatedNodes()"
  summary: "Get the current<wbr>Dedicated<wbr>Nodes value."
  syntax: "public Integer currentDedicatedNodes()"
  desc: "Get the currentDedicatedNodes value."
  returns:
    description: "the currentDedicatedNodes value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.currentLowPriorityNodes()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.currentLowPriorityNodes()"
  name: "currentLowPriorityNodes()"
  nameWithType: "CloudPool.currentLowPriorityNodes()"
  summary: "Get low-priority Compute Nodes which have been preempted are included in this count."
  syntax: "public Integer currentLowPriorityNodes()"
  desc: "Get low-priority Compute Nodes which have been preempted are included in this count."
  returns:
    description: "the currentLowPriorityNodes value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.displayName()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.displayName()"
  name: "displayName()"
  nameWithType: "CloudPool.displayName()"
  summary: "Get the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  syntax: "public String displayName()"
  desc: "Get the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the displayName value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.eTag()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.eTag()"
  name: "eTag()"
  nameWithType: "CloudPool.eTag()"
  summary: "Get this is an opaque string."
  syntax: "public String eTag()"
  desc: "Get this is an opaque string. You can use it to detect whether the Pool has changed between requests. In particular, you can be pass the ETag when updating a Pool to specify that your changes should take effect only if nobody else has modified the Pool in the meantime."
  returns:
    description: "the eTag value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.enableAutoScale()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.enableAutoScale()"
  name: "enableAutoScale()"
  nameWithType: "CloudPool.enableAutoScale()"
  summary: "Get if false, at least one of target<wbr>Dedicate<wbr>Nodes and target<wbr>Low<wbr>Priority<wbr>Nodes must be specified."
  syntax: "public Boolean enableAutoScale()"
  desc: "Get if false, at least one of targetDedicateNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula property is required and the Pool automatically resizes according to the formula. The default value is false."
  returns:
    description: "the enableAutoScale value"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.enableInterNodeCommunication()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.enableInterNodeCommunication()"
  name: "enableInterNodeCommunication()"
  nameWithType: "CloudPool.enableInterNodeCommunication()"
  summary: "Get this imposes restrictions on which Compute Nodes can be assigned to the Pool."
  syntax: "public Boolean enableInterNodeCommunication()"
  desc: "Get this imposes restrictions on which Compute Nodes can be assigned to the Pool. Specifying this value can reduce the chance of the requested number of Compute Nodes to be allocated in the Pool."
  returns:
    description: "the enableInterNodeCommunication value"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.id()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.id()"
  name: "id()"
  nameWithType: "CloudPool.id()"
  summary: "Get the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters."
  syntax: "public String id()"
  desc: "Get the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case)."
  returns:
    description: "the id value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.lastModified()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.lastModified()"
  name: "lastModified()"
  nameWithType: "CloudPool.lastModified()"
  summary: "Get this is the last time at which the Pool level data, such as the target<wbr>Dedicated<wbr>Nodes or enable<wbr>Autoscale settings, changed."
  syntax: "public DateTime lastModified()"
  desc: "Get this is the last time at which the Pool level data, such as the targetDedicatedNodes or enableAutoscale settings, changed. It does not factor in node-level changes such as a Compute Node changing state."
  returns:
    description: "the lastModified value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.metadata()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.metadata()"
  name: "metadata()"
  nameWithType: "CloudPool.metadata()"
  summary: "Get the metadata value."
  syntax: "public List<MetadataItem> metadata()"
  desc: "Get the metadata value."
  returns:
    description: "the metadata value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.mountConfiguration()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.mountConfiguration()"
  name: "mountConfiguration()"
  nameWithType: "CloudPool.mountConfiguration()"
  summary: "Get this supports Azure Files, NFS, CIFS/SMB, and Blobfuse."
  syntax: "public List<MountConfiguration> mountConfiguration()"
  desc: "Get this supports Azure Files, NFS, CIFS/SMB, and Blobfuse."
  returns:
    description: "the mountConfiguration value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.MountConfiguration?alt=com.microsoft.azure.batch.protocol.models.MountConfiguration&text=MountConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.networkConfiguration()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.networkConfiguration()"
  name: "networkConfiguration()"
  nameWithType: "CloudPool.networkConfiguration()"
  summary: "Get the network<wbr>Configuration value."
  syntax: "public NetworkConfiguration networkConfiguration()"
  desc: "Get the networkConfiguration value."
  returns:
    description: "the networkConfiguration value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NetworkConfiguration?alt=com.microsoft.azure.batch.protocol.models.NetworkConfiguration&text=NetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.resizeErrors()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.resizeErrors()"
  name: "resizeErrors()"
  nameWithType: "CloudPool.resizeErrors()"
  summary: "Get this property is set only if one or more errors occurred during the last Pool resize, and only when the Pool allocation<wbr>State is Steady."
  syntax: "public List<ResizeError> resizeErrors()"
  desc: "Get this property is set only if one or more errors occurred during the last Pool resize, and only when the Pool allocationState is Steady."
  returns:
    description: "the resizeErrors value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.ResizeError?alt=com.microsoft.azure.batch.protocol.models.ResizeError&text=ResizeError\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.resizeTimeout()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.resizeTimeout()"
  name: "resizeTimeout()"
  nameWithType: "CloudPool.resizeTimeout()"
  summary: "Get this is the timeout for the most recent resize operation."
  syntax: "public Period resizeTimeout()"
  desc: "Get this is the timeout for the most recent resize operation. (The initial sizing when the Pool is created counts as a resize.) The default value is 15 minutes."
  returns:
    description: "the resizeTimeout value"
    type: "<xref href=\"org.joda.time.Period?alt=org.joda.time.Period&text=Period\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.startTask()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.startTask()"
  name: "startTask()"
  nameWithType: "CloudPool.startTask()"
  summary: "Get the start<wbr>Task value."
  syntax: "public StartTask startTask()"
  desc: "Get the startTask value."
  returns:
    description: "the startTask value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.StartTask?alt=com.microsoft.azure.batch.protocol.models.StartTask&text=StartTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.state()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.state()"
  name: "state()"
  nameWithType: "CloudPool.state()"
  summary: "Get possible values include: 'active', 'deleting'."
  syntax: "public PoolState state()"
  desc: "Get possible values include: 'active', 'deleting'."
  returns:
    description: "the state value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolState?alt=com.microsoft.azure.batch.protocol.models.PoolState&text=PoolState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.stateTransitionTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.stateTransitionTime()"
  name: "stateTransitionTime()"
  nameWithType: "CloudPool.stateTransitionTime()"
  summary: "Get the state<wbr>Transition<wbr>Time value."
  syntax: "public DateTime stateTransitionTime()"
  desc: "Get the stateTransitionTime value."
  returns:
    description: "the stateTransitionTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.stats()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.stats()"
  name: "stats()"
  nameWithType: "CloudPool.stats()"
  summary: "Get this property is populated only if the Cloud<wbr>Pool was retrieved with an expand clause including the 'stats' attribute; otherwise it is null."
  syntax: "public PoolStatistics stats()"
  desc: "Get this property is populated only if the CloudPool was retrieved with an expand clause including the 'stats' attribute; otherwise it is null. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the stats value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStatistics?alt=com.microsoft.azure.batch.protocol.models.PoolStatistics&text=PoolStatistics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.targetDedicatedNodes()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.targetDedicatedNodes()"
  name: "targetDedicatedNodes()"
  nameWithType: "CloudPool.targetDedicatedNodes()"
  summary: "Get the target<wbr>Dedicated<wbr>Nodes value."
  syntax: "public Integer targetDedicatedNodes()"
  desc: "Get the targetDedicatedNodes value."
  returns:
    description: "the targetDedicatedNodes value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.targetLowPriorityNodes()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.targetLowPriorityNodes()"
  name: "targetLowPriorityNodes()"
  nameWithType: "CloudPool.targetLowPriorityNodes()"
  summary: "Get the target<wbr>Low<wbr>Priority<wbr>Nodes value."
  syntax: "public Integer targetLowPriorityNodes()"
  desc: "Get the targetLowPriorityNodes value."
  returns:
    description: "the targetLowPriorityNodes value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.taskSchedulingPolicy()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.taskSchedulingPolicy()"
  name: "taskSchedulingPolicy()"
  nameWithType: "CloudPool.taskSchedulingPolicy()"
  summary: "Get if not specified, the default is spread."
  syntax: "public TaskSchedulingPolicy taskSchedulingPolicy()"
  desc: "Get if not specified, the default is spread."
  returns:
    description: "the taskSchedulingPolicy value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy?alt=com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy&text=TaskSchedulingPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.taskSlotsPerNode()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.taskSlotsPerNode()"
  name: "taskSlotsPerNode()"
  nameWithType: "CloudPool.taskSlotsPerNode()"
  summary: "Get the default value is 1."
  syntax: "public Integer taskSlotsPerNode()"
  desc: "Get the default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256."
  returns:
    description: "the taskSlotsPerNode value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.url()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.url()"
  name: "url()"
  nameWithType: "CloudPool.url()"
  summary: "Get the url value."
  syntax: "public String url()"
  desc: "Get the url value."
  returns:
    description: "the url value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.userAccounts()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.userAccounts()"
  name: "userAccounts()"
  nameWithType: "CloudPool.userAccounts()"
  summary: "Get the user<wbr>Accounts value."
  syntax: "public List<UserAccount> userAccounts()"
  desc: "Get the userAccounts value."
  returns:
    description: "the userAccounts value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.UserAccount?alt=com.microsoft.azure.batch.protocol.models.UserAccount&text=UserAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.virtualMachineConfiguration()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.virtualMachineConfiguration()"
  name: "virtualMachineConfiguration()"
  nameWithType: "CloudPool.virtualMachineConfiguration()"
  summary: "Get this property and cloud<wbr>Service<wbr>Configuration are mutually exclusive and one of the properties must be specified."
  syntax: "public VirtualMachineConfiguration virtualMachineConfiguration()"
  desc: "Get this property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified."
  returns:
    description: "the virtualMachineConfiguration value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.vmSize()"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.vmSize()"
  name: "vmSize()"
  nameWithType: "CloudPool.vmSize()"
  summary: "Get for information about available sizes of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool (https://docs.<wbr>microsoft.<wbr>com/azure/batch/batch-pool-vm-sizes)."
  syntax: "public String vmSize()"
  desc: "Get for information about available sizes of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes)."
  returns:
    description: "the vmSize value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationState(com.microsoft.azure.batch.protocol.models.AllocationState)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationState(AllocationState allocationState)"
  name: "withAllocationState(AllocationState allocationState)"
  nameWithType: "CloudPool.withAllocationState(AllocationState allocationState)"
  summary: "Set possible values include: 'steady', 'resizing', 'stopping'."
  parameters:
  - description: "the allocationState value to set"
    name: "allocationState"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.AllocationState?alt=com.microsoft.azure.batch.protocol.models.AllocationState&text=AllocationState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withAllocationState(AllocationState allocationState)"
  desc: "Set possible values include: 'steady', 'resizing', 'stopping'."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationStateTransitionTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationStateTransitionTime(DateTime allocationStateTransitionTime)"
  name: "withAllocationStateTransitionTime(DateTime allocationStateTransitionTime)"
  nameWithType: "CloudPool.withAllocationStateTransitionTime(DateTime allocationStateTransitionTime)"
  summary: "Set the allocation<wbr>State<wbr>Transition<wbr>Time value."
  parameters:
  - description: "the allocationStateTransitionTime value to set"
    name: "allocationStateTransitionTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withAllocationStateTransitionTime(DateTime allocationStateTransitionTime)"
  desc: "Set the allocationStateTransitionTime value."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationLicenses(java.util.List<java.lang.String>)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationLicenses(List<String> applicationLicenses)"
  name: "withApplicationLicenses(List<String> applicationLicenses)"
  nameWithType: "CloudPool.withApplicationLicenses(List<String> applicationLicenses)"
  summary: "Set the list of application licenses must be a subset of available Batch service application licenses."
  parameters:
  - description: "the applicationLicenses value to set"
    name: "applicationLicenses"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CloudPool withApplicationLicenses(List<String> applicationLicenses)"
  desc: "Set the list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, Pool creation will fail."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationPackageReferences(java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)"
  name: "withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)"
  nameWithType: "CloudPool.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)"
  summary: "Set changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged."
  parameters:
  - description: "the applicationPackageReferences value to set"
    name: "applicationPackageReferences"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.ApplicationPackageReference?alt=com.microsoft.azure.batch.protocol.models.ApplicationPackageReference&text=ApplicationPackageReference\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CloudPool withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)"
  desc: "Set changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Package references on any given Pool."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleEvaluationInterval(org.joda.time.Period)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)"
  name: "withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)"
  nameWithType: "CloudPool.withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)"
  summary: "Set this property is set only if the Pool automatically scales, i.<wbr>e."
  parameters:
  - description: "the autoScaleEvaluationInterval value to set"
    name: "autoScaleEvaluationInterval"
    type: "<xref href=\"org.joda.time.Period?alt=org.joda.time.Period&text=Period\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)"
  desc: "Set this property is set only if the Pool automatically scales, i.e. enableAutoScale is true."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleFormula(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleFormula(String autoScaleFormula)"
  name: "withAutoScaleFormula(String autoScaleFormula)"
  nameWithType: "CloudPool.withAutoScaleFormula(String autoScaleFormula)"
  summary: "Set this property is set only if the Pool automatically scales, i.<wbr>e."
  parameters:
  - description: "the autoScaleFormula value to set"
    name: "autoScaleFormula"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withAutoScaleFormula(String autoScaleFormula)"
  desc: "Set this property is set only if the Pool automatically scales, i.e. enableAutoScale is true."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleRun(com.microsoft.azure.batch.protocol.models.AutoScaleRun)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleRun(AutoScaleRun autoScaleRun)"
  name: "withAutoScaleRun(AutoScaleRun autoScaleRun)"
  nameWithType: "CloudPool.withAutoScaleRun(AutoScaleRun autoScaleRun)"
  summary: "Set this property is set only if the Pool automatically scales, i.<wbr>e."
  parameters:
  - description: "the autoScaleRun value to set"
    name: "autoScaleRun"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.AutoScaleRun?alt=com.microsoft.azure.batch.protocol.models.AutoScaleRun&text=AutoScaleRun\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withAutoScaleRun(AutoScaleRun autoScaleRun)"
  desc: "Set this property is set only if the Pool automatically scales, i.e. enableAutoScale is true."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withCertificateReferences(java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withCertificateReferences(List<CertificateReference> certificateReferences)"
  name: "withCertificateReferences(List<CertificateReference> certificateReferences)"
  nameWithType: "CloudPool.withCertificateReferences(List<CertificateReference> certificateReferences)"
  summary: "Set for Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location."
  parameters:
  - description: "the certificateReferences value to set"
    name: "certificateReferences"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CertificateReference?alt=com.microsoft.azure.batch.protocol.models.CertificateReference&text=CertificateReference\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CloudPool withCertificateReferences(List<CertificateReference> certificateReferences)"
  desc: "Set for Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ\\_BATCH\\_CERTIFICATES\\_DIR is supplied to the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/\\{user-name\\}/certs) and Certificates are placed in that directory."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withCloudServiceConfiguration(com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)"
  name: "withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)"
  nameWithType: "CloudPool.withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)"
  summary: "Set this property and virtual<wbr>Machine<wbr>Configuration are mutually exclusive and one of the properties must be specified."
  parameters:
  - description: "the cloudServiceConfiguration value to set"
    name: "cloudServiceConfiguration"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration?alt=com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration&text=CloudServiceConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)"
  desc: "Set this property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch Account was created with its poolAllocationMode property set to 'UserSubscription'."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withCreationTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withCreationTime(DateTime creationTime)"
  name: "withCreationTime(DateTime creationTime)"
  nameWithType: "CloudPool.withCreationTime(DateTime creationTime)"
  summary: "Set the creation<wbr>Time value."
  parameters:
  - description: "the creationTime value to set"
    name: "creationTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withCreationTime(DateTime creationTime)"
  desc: "Set the creationTime value."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentDedicatedNodes(java.lang.Integer)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentDedicatedNodes(Integer currentDedicatedNodes)"
  name: "withCurrentDedicatedNodes(Integer currentDedicatedNodes)"
  nameWithType: "CloudPool.withCurrentDedicatedNodes(Integer currentDedicatedNodes)"
  summary: "Set the current<wbr>Dedicated<wbr>Nodes value."
  parameters:
  - description: "the currentDedicatedNodes value to set"
    name: "currentDedicatedNodes"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withCurrentDedicatedNodes(Integer currentDedicatedNodes)"
  desc: "Set the currentDedicatedNodes value."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentLowPriorityNodes(java.lang.Integer)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentLowPriorityNodes(Integer currentLowPriorityNodes)"
  name: "withCurrentLowPriorityNodes(Integer currentLowPriorityNodes)"
  nameWithType: "CloudPool.withCurrentLowPriorityNodes(Integer currentLowPriorityNodes)"
  summary: "Set low-priority Compute Nodes which have been preempted are included in this count."
  parameters:
  - description: "the currentLowPriorityNodes value to set"
    name: "currentLowPriorityNodes"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withCurrentLowPriorityNodes(Integer currentLowPriorityNodes)"
  desc: "Set low-priority Compute Nodes which have been preempted are included in this count."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withDisplayName(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withDisplayName(String displayName)"
  name: "withDisplayName(String displayName)"
  nameWithType: "CloudPool.withDisplayName(String displayName)"
  summary: "Set the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  parameters:
  - description: "the displayName value to set"
    name: "displayName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withDisplayName(String displayName)"
  desc: "Set the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withETag(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withETag(String eTag)"
  name: "withETag(String eTag)"
  nameWithType: "CloudPool.withETag(String eTag)"
  summary: "Set this is an opaque string."
  parameters:
  - description: "the eTag value to set"
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withETag(String eTag)"
  desc: "Set this is an opaque string. You can use it to detect whether the Pool has changed between requests. In particular, you can be pass the ETag when updating a Pool to specify that your changes should take effect only if nobody else has modified the Pool in the meantime."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withEnableAutoScale(java.lang.Boolean)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withEnableAutoScale(Boolean enableAutoScale)"
  name: "withEnableAutoScale(Boolean enableAutoScale)"
  nameWithType: "CloudPool.withEnableAutoScale(Boolean enableAutoScale)"
  summary: "Set if false, at least one of target<wbr>Dedicate<wbr>Nodes and target<wbr>Low<wbr>Priority<wbr>Nodes must be specified."
  parameters:
  - description: "the enableAutoScale value to set"
    name: "enableAutoScale"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withEnableAutoScale(Boolean enableAutoScale)"
  desc: "Set if false, at least one of targetDedicateNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula property is required and the Pool automatically resizes according to the formula. The default value is false."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withEnableInterNodeCommunication(java.lang.Boolean)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)"
  name: "withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)"
  nameWithType: "CloudPool.withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)"
  summary: "Set this imposes restrictions on which Compute Nodes can be assigned to the Pool."
  parameters:
  - description: "the enableInterNodeCommunication value to set"
    name: "enableInterNodeCommunication"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)"
  desc: "Set this imposes restrictions on which Compute Nodes can be assigned to the Pool. Specifying this value can reduce the chance of the requested number of Compute Nodes to be allocated in the Pool."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withId(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withId(String id)"
  name: "withId(String id)"
  nameWithType: "CloudPool.withId(String id)"
  summary: "Set the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters."
  parameters:
  - description: "the id value to set"
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withId(String id)"
  desc: "Set the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case)."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withLastModified(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withLastModified(DateTime lastModified)"
  name: "withLastModified(DateTime lastModified)"
  nameWithType: "CloudPool.withLastModified(DateTime lastModified)"
  summary: "Set this is the last time at which the Pool level data, such as the target<wbr>Dedicated<wbr>Nodes or enable<wbr>Autoscale settings, changed."
  parameters:
  - description: "the lastModified value to set"
    name: "lastModified"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withLastModified(DateTime lastModified)"
  desc: "Set this is the last time at which the Pool level data, such as the targetDedicatedNodes or enableAutoscale settings, changed. It does not factor in node-level changes such as a Compute Node changing state."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withMetadata(List<MetadataItem> metadata)"
  name: "withMetadata(List<MetadataItem> metadata)"
  nameWithType: "CloudPool.withMetadata(List<MetadataItem> metadata)"
  summary: "Set the metadata value."
  parameters:
  - description: "the metadata value to set"
    name: "metadata"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CloudPool withMetadata(List<MetadataItem> metadata)"
  desc: "Set the metadata value."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withMountConfiguration(java.util.List<com.microsoft.azure.batch.protocol.models.MountConfiguration>)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withMountConfiguration(List<MountConfiguration> mountConfiguration)"
  name: "withMountConfiguration(List<MountConfiguration> mountConfiguration)"
  nameWithType: "CloudPool.withMountConfiguration(List<MountConfiguration> mountConfiguration)"
  summary: "Set this supports Azure Files, NFS, CIFS/SMB, and Blobfuse."
  parameters:
  - description: "the mountConfiguration value to set"
    name: "mountConfiguration"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.MountConfiguration?alt=com.microsoft.azure.batch.protocol.models.MountConfiguration&text=MountConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CloudPool withMountConfiguration(List<MountConfiguration> mountConfiguration)"
  desc: "Set this supports Azure Files, NFS, CIFS/SMB, and Blobfuse."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withNetworkConfiguration(com.microsoft.azure.batch.protocol.models.NetworkConfiguration)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withNetworkConfiguration(NetworkConfiguration networkConfiguration)"
  name: "withNetworkConfiguration(NetworkConfiguration networkConfiguration)"
  nameWithType: "CloudPool.withNetworkConfiguration(NetworkConfiguration networkConfiguration)"
  summary: "Set the network<wbr>Configuration value."
  parameters:
  - description: "the networkConfiguration value to set"
    name: "networkConfiguration"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NetworkConfiguration?alt=com.microsoft.azure.batch.protocol.models.NetworkConfiguration&text=NetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withNetworkConfiguration(NetworkConfiguration networkConfiguration)"
  desc: "Set the networkConfiguration value."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withResizeErrors(java.util.List<com.microsoft.azure.batch.protocol.models.ResizeError>)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withResizeErrors(List<ResizeError> resizeErrors)"
  name: "withResizeErrors(List<ResizeError> resizeErrors)"
  nameWithType: "CloudPool.withResizeErrors(List<ResizeError> resizeErrors)"
  summary: "Set this property is set only if one or more errors occurred during the last Pool resize, and only when the Pool allocation<wbr>State is Steady."
  parameters:
  - description: "the resizeErrors value to set"
    name: "resizeErrors"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.ResizeError?alt=com.microsoft.azure.batch.protocol.models.ResizeError&text=ResizeError\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CloudPool withResizeErrors(List<ResizeError> resizeErrors)"
  desc: "Set this property is set only if one or more errors occurred during the last Pool resize, and only when the Pool allocationState is Steady."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withResizeTimeout(org.joda.time.Period)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withResizeTimeout(Period resizeTimeout)"
  name: "withResizeTimeout(Period resizeTimeout)"
  nameWithType: "CloudPool.withResizeTimeout(Period resizeTimeout)"
  summary: "Set this is the timeout for the most recent resize operation."
  parameters:
  - description: "the resizeTimeout value to set"
    name: "resizeTimeout"
    type: "<xref href=\"org.joda.time.Period?alt=org.joda.time.Period&text=Period\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withResizeTimeout(Period resizeTimeout)"
  desc: "Set this is the timeout for the most recent resize operation. (The initial sizing when the Pool is created counts as a resize.) The default value is 15 minutes."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withStartTask(com.microsoft.azure.batch.protocol.models.StartTask)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withStartTask(StartTask startTask)"
  name: "withStartTask(StartTask startTask)"
  nameWithType: "CloudPool.withStartTask(StartTask startTask)"
  summary: "Set the start<wbr>Task value."
  parameters:
  - description: "the startTask value to set"
    name: "startTask"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.StartTask?alt=com.microsoft.azure.batch.protocol.models.StartTask&text=StartTask\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withStartTask(StartTask startTask)"
  desc: "Set the startTask value."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withState(com.microsoft.azure.batch.protocol.models.PoolState)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withState(PoolState state)"
  name: "withState(PoolState state)"
  nameWithType: "CloudPool.withState(PoolState state)"
  summary: "Set possible values include: 'active', 'deleting'."
  parameters:
  - description: "the state value to set"
    name: "state"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolState?alt=com.microsoft.azure.batch.protocol.models.PoolState&text=PoolState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withState(PoolState state)"
  desc: "Set possible values include: 'active', 'deleting'."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withStateTransitionTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withStateTransitionTime(DateTime stateTransitionTime)"
  name: "withStateTransitionTime(DateTime stateTransitionTime)"
  nameWithType: "CloudPool.withStateTransitionTime(DateTime stateTransitionTime)"
  summary: "Set the state<wbr>Transition<wbr>Time value."
  parameters:
  - description: "the stateTransitionTime value to set"
    name: "stateTransitionTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withStateTransitionTime(DateTime stateTransitionTime)"
  desc: "Set the stateTransitionTime value."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withStats(com.microsoft.azure.batch.protocol.models.PoolStatistics)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withStats(PoolStatistics stats)"
  name: "withStats(PoolStatistics stats)"
  nameWithType: "CloudPool.withStats(PoolStatistics stats)"
  summary: "Set this property is populated only if the Cloud<wbr>Pool was retrieved with an expand clause including the 'stats' attribute; otherwise it is null."
  parameters:
  - description: "the stats value to set"
    name: "stats"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStatistics?alt=com.microsoft.azure.batch.protocol.models.PoolStatistics&text=PoolStatistics\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withStats(PoolStatistics stats)"
  desc: "Set this property is populated only if the CloudPool was retrieved with an expand clause including the 'stats' attribute; otherwise it is null. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withTargetDedicatedNodes(java.lang.Integer)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withTargetDedicatedNodes(Integer targetDedicatedNodes)"
  name: "withTargetDedicatedNodes(Integer targetDedicatedNodes)"
  nameWithType: "CloudPool.withTargetDedicatedNodes(Integer targetDedicatedNodes)"
  summary: "Set the target<wbr>Dedicated<wbr>Nodes value."
  parameters:
  - description: "the targetDedicatedNodes value to set"
    name: "targetDedicatedNodes"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withTargetDedicatedNodes(Integer targetDedicatedNodes)"
  desc: "Set the targetDedicatedNodes value."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withTargetLowPriorityNodes(java.lang.Integer)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withTargetLowPriorityNodes(Integer targetLowPriorityNodes)"
  name: "withTargetLowPriorityNodes(Integer targetLowPriorityNodes)"
  nameWithType: "CloudPool.withTargetLowPriorityNodes(Integer targetLowPriorityNodes)"
  summary: "Set the target<wbr>Low<wbr>Priority<wbr>Nodes value."
  parameters:
  - description: "the targetLowPriorityNodes value to set"
    name: "targetLowPriorityNodes"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withTargetLowPriorityNodes(Integer targetLowPriorityNodes)"
  desc: "Set the targetLowPriorityNodes value."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withTaskSchedulingPolicy(com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)"
  name: "withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)"
  nameWithType: "CloudPool.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)"
  summary: "Set if not specified, the default is spread."
  parameters:
  - description: "the taskSchedulingPolicy value to set"
    name: "taskSchedulingPolicy"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy?alt=com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy&text=TaskSchedulingPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)"
  desc: "Set if not specified, the default is spread."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withTaskSlotsPerNode(java.lang.Integer)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withTaskSlotsPerNode(Integer taskSlotsPerNode)"
  name: "withTaskSlotsPerNode(Integer taskSlotsPerNode)"
  nameWithType: "CloudPool.withTaskSlotsPerNode(Integer taskSlotsPerNode)"
  summary: "Set the default value is 1."
  parameters:
  - description: "the taskSlotsPerNode value to set"
    name: "taskSlotsPerNode"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withTaskSlotsPerNode(Integer taskSlotsPerNode)"
  desc: "Set the default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withUrl(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withUrl(String url)"
  name: "withUrl(String url)"
  nameWithType: "CloudPool.withUrl(String url)"
  summary: "Set the url value."
  parameters:
  - description: "the url value to set"
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withUrl(String url)"
  desc: "Set the url value."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withUserAccounts(java.util.List<com.microsoft.azure.batch.protocol.models.UserAccount>)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withUserAccounts(List<UserAccount> userAccounts)"
  name: "withUserAccounts(List<UserAccount> userAccounts)"
  nameWithType: "CloudPool.withUserAccounts(List<UserAccount> userAccounts)"
  summary: "Set the user<wbr>Accounts value."
  parameters:
  - description: "the userAccounts value to set"
    name: "userAccounts"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.UserAccount?alt=com.microsoft.azure.batch.protocol.models.UserAccount&text=UserAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CloudPool withUserAccounts(List<UserAccount> userAccounts)"
  desc: "Set the userAccounts value."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withVirtualMachineConfiguration(com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)"
  name: "withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)"
  nameWithType: "CloudPool.withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)"
  summary: "Set this property and cloud<wbr>Service<wbr>Configuration are mutually exclusive and one of the properties must be specified."
  parameters:
  - description: "the virtualMachineConfiguration value to set"
    name: "virtualMachineConfiguration"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)"
  desc: "Set this property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.CloudPool.withVmSize(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.CloudPool.withVmSize(String vmSize)"
  name: "withVmSize(String vmSize)"
  nameWithType: "CloudPool.withVmSize(String vmSize)"
  summary: "Set for information about available sizes of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool (https://docs.<wbr>microsoft.<wbr>com/azure/batch/batch-pool-vm-sizes)."
  parameters:
  - description: "the vmSize value to set"
    name: "vmSize"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CloudPool withVmSize(String vmSize)"
  desc: "Set for information about available sizes of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes)."
  returns:
    description: "the CloudPool object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A Pool in the Azure Batch service."
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:9.0.0
